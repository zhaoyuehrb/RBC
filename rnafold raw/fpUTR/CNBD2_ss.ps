%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUUCUCAGAGCAGGGCUUCCAGUAGCUGAUGGUAUGGUAGGAGGAGUGGAGUGGAGCUCUUGCCUUGUUACUGAGGAAAUCUAUUUGUUUCUAGUAUUACUGGAUUUUUGGGGAAAAAUUUGUAGUCCUCCCCUUGAAAGGCAAAGGGGCUAGUUGUGCCAUUUGCCUGCACAGGAACC\
) } def
/len { sequence length } bind def

/coor [
[67.09899139 138.82395935]
[58.20518494 126.65497589]
[53.46568680 112.76119995]
[38.55897903 114.43153381]
[23.65226746 116.10186005]
[8.74555779 117.77218628]
[-6.16115284 119.44251251]
[-21.06786346 121.11284637]
[-35.97457123 122.78317261]
[-50.88128281 124.45349884]
[-65.78799438 126.12382507]
[-80.67981720 127.92204285]
[-95.55565643 129.84802246]
[-110.43149567 131.77400208]
[-125.30733490 133.69996643]
[-140.18318176 135.62594604]
[-155.05902100 137.55192566]
[-169.93486023 139.47789001]
[-184.81069946 141.40386963]
[-180.36764526 153.41087341]
[-183.59402466 168.54957581]
[-195.75982666 182.52844238]
[-208.87702942 189.80433655]
[-221.99424744 197.08024597]
[-227.99946594 203.99697876]
[-235.39967346 204.36624146]
[-248.63986206 211.41589355]
[-257.18463135 224.73120117]
[-272.05508423 223.88317871]
[-280.27359009 238.07431030]
[-296.67013550 237.78186035]
[-304.37734985 223.30668640]
[-295.46670532 209.53959656]
[-279.10473633 210.64299011]
[-271.50698853 197.83192444]
[-255.68951416 198.17572021]
[-242.44932556 191.12606812]
[-229.27014160 183.96302795]
[-216.15293884 176.68713379]
[-203.03572083 169.41122437]
[-203.80686951 161.95098877]
[-218.72740173 163.49304199]
[-220.26922607 148.57249451]
[-205.34919739 147.03048706]
[-206.12034607 139.57023621]
[-220.44850159 135.13133240]
[-234.77667236 130.69242859]
[-249.10482788 126.25353241]
[-263.43298340 121.81463623]
[-277.76113892 117.37573242]
[-290.10717773 126.77548218]
[-305.62106323 127.08956909]
[-318.33743286 118.19721985]
[-323.36654663 103.51772308]
[-318.77462769 88.69564819]
[-306.32736206 79.43038177]
[-290.81097412 79.28460693]
[-278.19183350 88.31438446]
[-273.32223511 103.04756927]
[-258.99407959 107.48647308]
[-244.66592407 111.92537689]
[-230.33776855 116.36427307]
[-216.00961304 120.80317688]
[-201.68144226 125.24207306]
[-186.73667908 126.52803040]
[-171.86083984 124.60205841]
[-156.98498535 122.67607880]
[-142.10914612 120.75010681]
[-127.23331451 118.82413483]
[-112.35747528 116.89815521]
[-97.48162842 114.97218323]
[-82.60578918 113.04620361]
[-76.36045074 109.05931854]
[-67.45832062 111.21711731]
[-52.55160904 109.54679108]
[-37.64490128 107.87646484]
[-22.73818970 106.20613098]
[-7.83148050 104.53580475]
[7.07522964 102.86547852]
[21.98193932 101.19515228]
[36.88864899 99.52481842]
[51.79536057 97.85449219]
[51.91846848 88.96611023]
[53.70111465 80.05979156]
[57.15180206 71.44869232]
[62.21944809 63.44798660]
[68.79302979 56.36345291]
[76.70344543 50.48005295]
[85.72750854 46.05085373]
[95.59412384 43.28676605]
[105.99234009 42.34749985]
[116.58115387 43.33405304]
[127.00067139 46.28313828]
[131.31642151 31.91740417]
[135.63217163 17.55167198]
[139.94792175 3.18593812]
[144.26367188 -11.17979527]
[148.57942200 -25.54552841]
[147.34593201 -42.45454407]
[163.25267029 -48.32070923]
[173.29301453 -34.65952682]
[162.94515991 -21.22977638]
[158.62940979 -6.86404371]
[154.31365967 7.50168943]
[149.99790955 21.86742210]
[145.68215942 36.23315430]
[141.36639404 50.59888840]
[147.04217529 55.50149155]
[152.85968018 41.67555237]
[167.80664062 42.93589783]
[171.22682190 57.54077530]
[158.39373779 65.30670166]
[164.06951904 70.20930481]
[177.65505981 63.85058594]
[191.24058533 57.49187088]
[204.82612610 51.13315582]
[218.41165161 44.77444077]
[217.69192505 29.59055328]
[222.84230042 15.28873253]
[233.07739258 4.04990196]
[246.83642578 -2.41209817]
[262.02124023 -3.11186051]
[276.31628418 2.05732441]
[287.54162598 12.30719280]
[293.98553467 26.07471466]
[294.66531372 41.26044083]
[289.47732544 55.54866409]
[279.21270752 66.76052856]
[265.43670654 73.18630219]
[250.25010681 73.84611511]
[235.96871948 68.63934326]
[224.77037048 58.35997391]
[211.18484497 64.71868896]
[197.59930420 71.07740784]
[184.01376343 77.43611908]
[170.42823792 83.79483795]
[168.63002014 98.68666077]
[180.31147766 108.09642029]
[191.99293518 117.50617218]
[209.33584595 115.30919647]
[222.64775085 126.11251831]
[224.01226807 142.86363220]
[235.85353088 152.07147217]
[247.69480896 161.27931213]
[259.53607178 170.48715210]
[271.37734985 179.69499207]
[283.21859741 188.90283203]
[295.05987549 198.11068726]
[306.97973633 207.21653748]
[318.97732544 216.21975708]
[334.65930176 218.31422424]
[340.19503784 232.14190674]
[352.19262695 241.14512634]
[368.21408081 240.31314087]
[378.74551392 252.41555786]
[375.70806885 268.16845703]
[361.43185425 275.48754883]
[346.86834717 268.75823975]
[343.18939209 253.14271545]
[331.19180298 244.13949585]
[316.36801147 242.68901062]
[309.97412109 228.21734619]
[297.97653198 219.21412659]
[290.72128296 217.71044922]
[285.85202026 209.95195007]
[274.01077271 200.74411011]
[262.16949463 191.53627014]
[250.32823181 182.32843018]
[238.48695374 173.12057495]
[226.64569092 163.91273499]
[214.80442810 154.70489502]
[202.35357666 158.07807922]
[190.05235291 153.58987427]
[182.47717285 142.67114258]
[182.58317566 129.18763733]
[170.90171814 119.77787781]
[159.22026062 110.36811829]
[152.33567810 126.80828857]
[141.12940979 140.15879822]
[126.79213715 149.36259460]
[110.74568939 153.78309631]
[94.50342560 153.24435425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 82]
[4 81]
[5 80]
[6 79]
[7 78]
[8 77]
[9 76]
[10 75]
[11 74]
[12 72]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[22 40]
[23 39]
[24 38]
[26 37]
[27 36]
[29 34]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[113 136]
[114 135]
[115 134]
[116 133]
[117 132]
[137 177]
[138 176]
[139 175]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[149 163]
[150 162]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
