%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUUCAGAAAACAAUAUGGCCGCUCCCAGCUGGGACGUGAGUCUCUGGAUUAGGCAGGCAGAGGCAGUUAUGGGCUUCUGCAGUGGCGAGAAAGGAAGCGCCUGAAGGGUCGUGAGGCUGGGGCGGGACCCGGCACCGCUGGGGCGGCCAGGCCGUGAGGACGCCA\
) } def
/len { sequence length } bind def

/coor [
[91.82163239 519.23352051]
[91.82163239 504.23348999]
[91.82163239 489.23348999]
[91.82163239 474.23348999]
[84.08433533 461.50622559]
[91.82163239 447.70605469]
[91.82163239 432.70605469]
[81.01343536 427.07919312]
[73.59204865 417.32366943]
[71.02318573 405.26440430]
[73.85751343 393.19042969]
[81.61405182 383.42059326]
[92.86048889 377.85812378]
[93.41804504 362.86849976]
[80.73210144 355.06256104]
[73.60926056 341.86706543]
[74.05058289 326.77828979]
[82.03763580 313.85140991]
[95.51058960 306.61077881]
[96.06813812 291.62115479]
[96.62569427 276.63153076]
[97.18324280 261.64187622]
[97.74079132 246.65225220]
[98.29834747 231.66261292]
[98.85589600 216.67297363]
[95.95041656 209.84423828]
[99.56569672 201.41064453]
[100.40177917 186.43395996]
[101.23786926 171.45727539]
[102.07395172 156.48060608]
[102.91003418 141.50392151]
[103.74612427 126.52723694]
[82.54704285 131.65745544]
[58.49868774 118.67362213]
[43.53042603 119.64887238]
[28.56216240 120.62412262]
[13.59389973 121.59937286]
[-1.37436330 122.57462311]
[-14.70542049 132.12527466]
[-29.52832603 125.11003876]
[-30.59454346 108.74559021]
[-16.80724144 99.86626434]
[-2.34961343 107.60636139]
[12.61864948 106.63111115]
[27.58691216 105.65586090]
[42.55517578 104.68061066]
[57.52343750 103.70536041]
[61.25329590 97.19857788]
[47.64984894 90.87827301]
[33.23559570 86.72746277]
[31.98989105 71.77928162]
[45.51828003 65.29987335]
[56.38456345 75.64047241]
[68.71301270 84.18502808]
[72.44287109 77.67824554]
[59.34116364 68.80943298]
[60.55369949 53.96426773]
[53.83094406 40.55514526]
[38.22884750 30.80999947]
[39.89665222 13.35774136]
[32.92580414 0.07590137]
[25.95495605 -13.20593929]
[18.98410988 -26.48777962]
[12.01326180 -39.76961899]
[5.04241419 -53.05146027]
[-1.92843330 -66.33329773]
[-8.89928055 -79.61514282]
[-24.27240562 -81.72385406]
[-35.44672394 -92.49020386]
[-38.12548065 -107.77430725]
[-31.27863884 -121.69911957]
[-17.53894997 -128.91026306]
[-2.18960619 -126.63491058]
[8.86725903 -115.74797058]
[11.38005447 -100.43570709]
[4.38255930 -86.58599091]
[11.35340691 -73.30414581]
[18.32425499 -60.02230835]
[25.29510307 -46.74046707]
[32.26594925 -33.45862579]
[39.23679733 -20.17678642]
[46.20764542 -6.89494610]
[53.17849350 6.38689423]
[64.65183258 10.29870224]
[70.55897522 21.34119797]
[67.24006653 33.83238983]
[73.96282196 47.24150848]
[86.58367157 55.15121078]
[85.85198975 70.95549011]
[93.20957947 72.41011810]
[93.73847961 57.41944885]
[94.26737976 42.42877579]
[92.92337799 27.48910904]
[104.07435608 17.45637512]
[118.78949738 20.36578751]
[125.28344727 33.88719940]
[118.35549927 47.19111252]
[113.14012146 61.25524902]
[107.92474365 75.31938171]
[115.28233337 76.77400970]
[126.60195923 66.93195343]
[137.92158508 57.08990097]
[149.14924622 47.14306259]
[160.28396606 37.09229660]
[171.41870117 27.04153061]
[179.12496948 11.94021416]
[195.76942444 15.16485977]
[197.27844238 32.05151749]
[181.46946716 38.17625427]
[170.33473206 48.22702026]
[159.20001221 58.27778625]
[156.33015442 65.12158203]
[147.76364136 68.40953064]
[136.44401550 78.25158691]
[125.12438202 88.09363556]
[130.18183899 102.21533203]
[141.61437988 91.63540649]
[156.81463623 92.27312469]
[166.83052063 103.23750305]
[181.82469177 103.65570831]
[196.81886292 104.07391357]
[211.81303406 104.49211884]
[226.80720520 104.91032410]
[241.80136108 105.32852936]
[253.11026001 94.28839874]
[268.91217041 94.56197357]
[279.83212280 105.98695374]
[279.39151001 121.78510284]
[267.85171509 132.58364868]
[252.05909729 131.97601318]
[241.38316345 120.32270050]
[226.38899231 119.90449524]
[211.39482117 119.48628998]
[196.40065002 119.06808472]
[181.40649414 118.64987946]
[166.41232300 118.23167419]
[155.80085754 128.62074280]
[140.58868408 128.41021729]
[129.76362610 117.20950317]
[118.72280121 127.36332703]
[117.88671875 142.34001160]
[117.05063629 157.31668091]
[116.21454620 172.29336548]
[115.37846375 187.27005005]
[114.54237366 202.24671936]
[113.84552765 217.23052979]
[113.28797913 232.22016907]
[112.73043060 247.20979309]
[112.17287445 262.19943237]
[111.61532593 277.18905640]
[111.05777740 292.17871094]
[110.50022125 307.16833496]
[123.39805603 315.38986206]
[130.40272522 328.87432861]
[129.72189331 343.95422363]
[121.63845825 356.58410645]
[108.40767670 363.42605591]
[107.85012817 378.41567993]
[122.42455292 389.14553833]
[127.62516022 406.31671143]
[121.56010437 423.03530884]
[106.82163239 432.70605469]
[106.82163239 447.70605469]
[114.55892944 461.50622559]
[106.82163239 474.23348999]
[106.82163239 489.23348999]
[106.82163239 504.23348999]
[106.82163239 519.23352051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[6 163]
[7 162]
[13 158]
[14 157]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[24 147]
[25 146]
[27 145]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[55 89]
[57 87]
[58 86]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[100 115]
[101 114]
[102 113]
[103 111]
[104 110]
[105 109]
[116 139]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
