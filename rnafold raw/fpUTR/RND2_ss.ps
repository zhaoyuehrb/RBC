%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGCCGGUGUUGGCGGCCCGAGCGGCUGCAGUUGCAGGGGCGGGGGAGGCGGCGGCGGGGCCCGGGAGAGGGGUGGCGUGGGGGACCGGCGCGUAGCCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[197.74649048 268.91082764]
[190.30682373 259.71136475]
[188.28323364 247.93180847]
[192.30680847 236.54902649]
[183.34942627 224.51718140]
[174.39204407 212.48533630]
[165.43466187 200.45349121]
[156.47727966 188.42164612]
[147.51991272 176.38978577]
[133.71343994 170.80134583]
[131.67881775 155.11151123]
[117.87235260 149.52307129]
[115.83772278 133.83323669]
[106.88034821 121.80138397]
[89.05436707 120.07069397]
[77.94607544 106.02197266]
[80.37298584 88.27736664]
[70.73117828 76.78670502]
[61.08935928 65.29603577]
[51.28144836 53.94681168]
[41.30950928 42.74143600]
[31.33757210 31.53606033]
[18.43220711 29.97542000]
[10.35862446 20.30649567]
[11.07869720 8.13422012]
[1.43688321 -3.35644627]
[-13.36081219 -8.95455074]
[-15.61462975 -23.67764664]
[-25.25644302 -35.16831589]
[-34.89825821 -46.65898132]
[-44.54007339 -58.14964676]
[-54.18188477 -69.64031219]
[-74.11828613 -70.15465546]
[-87.23815155 -84.77548218]
[-85.64734650 -104.05556488]
[-96.25394440 -114.66217041]
[-106.86054993 -125.26876831]
[-117.46714783 -135.87536621]
[-133.43893433 -139.59483337]
[-137.94412231 -155.36299133]
[-126.34817505 -166.95895386]
[-110.58000183 -162.45375061]
[-106.86054993 -146.48197937]
[-96.25394440 -135.87536621]
[-85.64734650 -125.26876831]
[-75.04074097 -114.66217041]
[-64.89329529 -117.47826385]
[-54.42523193 -115.73287201]
[-45.60578156 -109.68447113]
[-40.12346268 -100.40747833]
[-39.06296539 -89.60195923]
[-42.69121933 -79.28212738]
[-33.04940414 -67.79145813]
[-23.40759087 -56.30079651]
[-13.76577663 -44.81012726]
[-4.12396288 -33.31946182]
[9.98408604 -28.54324722]
[12.92754936 -12.99826050]
[22.56936455 -1.50759375]
[39.31684113 3.50812435]
[42.54294586 21.56412315]
[52.51488495 32.76950073]
[62.48682404 43.97487640]
[69.39122772 46.92481995]
[72.58002472 55.65422058]
[82.22183990 67.14488983]
[91.86365509 78.63555145]
[103.24389648 77.37000275]
[113.81036377 81.78150177]
[120.91230011 90.76337433]
[122.76809692 102.06237793]
[118.91219330 112.84400940]
[127.86957550 124.87585449]
[142.31672668 131.32490540]
[143.71066284 146.15412903]
[158.15782166 152.60317993]
[159.55175781 167.43241882]
[168.50914001 179.46426392]
[177.46650696 191.49610901]
[186.42388916 203.52795410]
[195.38127136 215.55979919]
[204.33865356 227.59165955]
[223.06317139 229.50666809]
[234.37835693 244.15174866]
[231.60156250 262.13055420]
[241.24337769 273.62121582]
[256.74533081 275.14682007]
[266.35980225 286.93734741]
[264.80987549 301.70666504]
[274.45169067 313.19732666]
[284.09350586 324.68801880]
[293.73532104 336.17868042]
[303.37710571 347.66934204]
[319.16949463 350.49435425]
[326.68017578 364.67071533]
[320.14758301 379.32354736]
[304.58300781 383.21243286]
[291.92623901 373.35415649]
[291.88644409 357.31115723]
[282.24462891 345.82049561]
[272.60281372 334.32980347]
[262.96099854 322.83914185]
[253.31919861 311.34848022]
[238.50509644 310.31021118]
[228.56323242 298.79440308]
[229.75271606 283.26303101]
[220.11090088 271.77236938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 82]
[5 81]
[6 80]
[7 79]
[8 78]
[9 77]
[11 75]
[13 73]
[14 72]
[17 67]
[18 66]
[19 65]
[20 63]
[21 62]
[22 61]
[25 59]
[26 58]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[35 46]
[36 45]
[37 44]
[38 43]
[85 107]
[86 106]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
