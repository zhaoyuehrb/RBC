%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAAAGCGUGCCAAGGGGCACACGACUUGCUGCUCAGGAAAUCCCUGCGGUCUCACCGCCGCGCCUCGAGAGAGAGCGUGACAGAGGCCUCGGACCCCAUUCUCUCUUCUUUUCUCCUUUGGGGCUGGGGCAACUCCCAGGCGGGGGCGCCUGCAGCUCAGCUGAACUUGGCGACCAGAAGCCCGCUGAGCUCCCCACGGCCCUCGCUGCUCAUCGCUCUCUAUUCUUUUGCGCCGGUAGAAAGG\
) } def
/len { sequence length } bind def

/coor [
[86.29737854 276.55868530]
[85.73976898 284.63540649]
[82.86355591 292.16714478]
[77.93699646 298.50650024]
[71.40369415 303.11462402]
[63.84267044 305.60714722]
[55.91709900 305.78607178]
[57.75935364 321.49966431]
[45.72653580 330.27807617]
[39.96425629 344.12713623]
[34.20198059 357.97616577]
[28.43970299 371.82522583]
[22.67742538 385.67428589]
[25.32750893 401.85787964]
[12.46748447 412.03390503]
[-2.67335582 405.73416138]
[-4.51941347 389.43923950]
[8.82837677 379.91198730]
[14.59065342 366.06295776]
[20.35293007 352.21389771]
[26.11520767 338.36483765]
[31.87748528 324.51580811]
[29.62307167 309.79278564]
[42.06805038 300.02380371]
[31.75431252 280.65496826]
[39.31988525 259.76040649]
[60.15887833 251.27467346]
[64.84853363 237.02661133]
[69.53818512 222.77854919]
[66.16785431 208.27027893]
[77.83182526 197.58091736]
[82.52148438 183.33285522]
[87.21113586 169.08480835]
[91.90079498 154.83674622]
[96.59044647 140.58868408]
[85.05171204 131.00340271]
[73.51401520 121.41896820]
[60.36757660 128.64192200]
[47.22113800 135.86488342]
[41.37870407 150.80628967]
[26.01231956 155.41647339]
[12.90976334 146.15890503]
[12.12219238 130.13520813]
[24.25376511 119.63736725]
[39.99817657 122.71845245]
[53.14461517 115.49549103]
[66.29105377 108.27252960]
[61.15079117 94.18077087]
[46.44134521 97.11882019]
[31.73189545 100.05686951]
[17.02244759 102.99491882]
[2.31299853 105.93296051]
[-12.03503227 114.96459198]
[-24.68563271 103.67749786]
[-17.34167290 88.39670563]
[-0.62505031 91.22351837]
[14.08439827 88.28546906]
[28.79384613 85.34741974]
[43.50329590 82.40937042]
[58.21274185 79.47132111]
[86.06925964 69.87978363]
[104.85887909 80.79103851]
[113.76801300 68.72342682]
[122.67713928 56.65580750]
[131.58627319 44.58818817]
[126.26451111 28.52092552]
[131.52441406 12.60841942]
[145.10137939 3.06943870]
[161.52214050 3.50693202]
[170.27706909 -8.67302227]
[179.03199768 -20.85297585]
[187.70928955 -33.08835983]
[196.30859375 -45.37868118]
[204.90789795 -57.66899872]
[213.50720215 -69.95932007]
[222.10650635 -82.24964142]
[230.70581055 -94.53995514]
[239.30511475 -106.83027649]
[247.90441895 -119.12059784]
[256.42538452 -131.46536255]
[264.86767578 -143.86405945]
[273.30996704 -156.26275635]
[266.57434082 -171.52209473]
[269.10818481 -187.82676697]
[279.91937256 -200.05342102]
[275.22970581 -214.30148315]
[270.54003906 -228.54954529]
[265.66955566 -242.73680115]
[260.61901855 -256.86096191]
[255.56848145 -270.98513794]
[250.51794434 -285.10928345]
[245.46739197 -299.23345947]
[240.41685486 -313.35763550]
[235.36631775 -327.48178101]
[229.54374695 -334.48843384]
[230.34260559 -341.81784058]
[225.47210693 -356.00509644]
[220.60162354 -370.19235229]
[215.73112488 -384.37960815]
[210.86064148 -398.56686401]
[195.77110291 -397.87213135]
[181.09739685 -401.45809937]
[168.02906799 -409.03405762]
[157.62547302 -419.98587036]
[150.73002625 -433.42572021]
[147.90167236 -448.26409912]
[149.36972046 -463.29809570]
[155.01515198 -477.30902100]
[164.38032532 -489.16104126]
[176.70602417 -497.89337158]
[190.99308777 -502.79812622]
[206.08331299 -503.47769165]
[220.75340271 -499.87698364]
[233.81411743 -492.28790283]
[244.20669556 -481.32565308]
[251.08865356 -467.87887573]
[253.90208435 -453.03768921]
[252.41894531 -438.00515747]
[246.75942993 -423.99990845]
[237.38237000 -412.15731812]
[225.04789734 -403.43734741]
[229.91838074 -389.25009155]
[234.78887939 -375.06283569]
[239.65937805 -360.87557983]
[244.52986145 -346.68832397]
[249.49047852 -332.53231812]
[254.54101562 -318.40817261]
[259.59155273 -304.28399658]
[264.64208984 -290.15982056]
[269.69265747 -276.03567505]
[274.74319458 -261.91149902]
[279.79373169 -247.78733826]
[283.63003540 -244.97897339]
[285.75628662 -239.74076843]
[284.78811646 -233.23919678]
[289.47775269 -218.99113464]
[294.16741943 -204.74307251]
[302.07473755 -204.08859253]
[309.50543213 -201.30673218]
[315.89852905 -196.60752869]
[320.77136230 -190.34574890]
[335.26434326 -194.21267700]
[349.75732422 -198.07960510]
[364.25033569 -201.94653320]
[378.74331665 -205.81346130]
[393.23632812 -209.68038940]
[407.72930908 -213.54731750]
[422.22232056 -217.41424561]
[436.71530151 -221.28117371]
[444.17883301 -226.50524902]
[451.41723633 -225.10385132]
[462.89572144 -235.99214172]
[477.13296509 -231.61596680]
[491.67395020 -235.29824829]
[505.50195312 -249.98733521]
[523.85693359 -243.86299133]
[538.29956055 -247.91394043]
[552.74218750 -251.96487427]
[567.18487549 -256.01583862]
[581.62750244 -260.06677246]
[596.07012939 -264.11770630]
[610.51275635 -268.16867065]
[624.95538330 -272.21960449]
[626.67309570 -278.77606201]
[630.29321289 -284.44512939]
[635.43945312 -288.69610596]
[641.59454346 -291.14266968]
[648.15216064 -291.57781982]
[654.47680664 -289.99093628]
[659.96508789 -286.56597900]
[664.10339355 -281.66058350]
[678.81286621 -284.59863281]
[693.52227783 -287.53668213]
[699.88488770 -301.68933105]
[713.36773682 -309.36996460]
[728.78643799 -307.62527466]
[740.21215820 -297.12609863]
[743.25146484 -281.90960693]
[736.73571777 -267.82681274]
[723.17034912 -260.29287720]
[707.77148438 -262.20474243]
[696.46032715 -272.82723999]
[681.75091553 -269.88919067]
[667.04144287 -266.95114136]
[651.49450684 -249.84834290]
[629.00634766 -257.77697754]
[614.56372070 -253.72601318]
[600.12109375 -249.67507935]
[585.67840576 -245.62413025]
[571.23577881 -241.57318115]
[556.79315186 -237.52223206]
[542.35052490 -233.47129822]
[527.90789795 -229.42034912]
[523.73931885 -220.12275696]
[514.96350098 -214.52607727]
[504.33666992 -214.67352295]
[495.35623169 -220.75723267]
[480.81524658 -217.07495117]
[470.37680054 -206.45005798]
[455.09951782 -210.56285095]
[440.58221436 -206.78817749]
[426.08923340 -202.92124939]
[411.59625244 -199.05432129]
[397.10324097 -195.18739319]
[382.61026001 -191.32046509]
[368.11724854 -187.45353699]
[353.62426758 -183.58660889]
[339.13125610 -179.71968079]
[324.63827515 -175.85275269]
[319.18853760 -158.48664856]
[304.30938721 -147.65991211]
[285.70867920 -147.82044983]
[277.26638794 -135.42175293]
[268.82409668 -123.02306366]
[267.66012573 -115.74270630]
[260.19473267 -110.52129364]
[251.59544373 -98.23097229]
[242.99613953 -85.94065094]
[234.39683533 -73.65033722]
[225.79751587 -61.36001587]
[217.19821167 -49.06969452]
[208.59890747 -36.77937317]
[199.99960327 -24.48905563]
[198.74314880 -17.22409630]
[191.21195984 -12.09805012]
[182.45703125 0.08190364]
[173.70210266 12.26185799]
[179.04762268 24.48141861]
[177.65188599 37.85457230]
[169.77265930 48.88306046]
[157.37759399 54.62903214]
[143.65388489 53.49731827]
[134.74475098 65.56493378]
[125.83562469 77.63255310]
[116.92649841 89.70017242]
[130.63545227 112.75779724]
[110.83850861 145.27835083]
[106.14884949 159.52639771]
[101.45919800 173.77445984]
[96.76953888 188.02252197]
[92.07988739 202.27056885]
[95.11477661 217.79797363]
[83.78624725 227.46820068]
[79.09658813 241.71626282]
[74.40693665 255.96432495]
[80.39247894 261.56460571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[27 245]
[28 244]
[29 243]
[31 241]
[32 240]
[33 239]
[34 238]
[35 237]
[37 47]
[38 46]
[39 45]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[62 235]
[63 234]
[64 233]
[65 232]
[69 227]
[70 226]
[71 225]
[72 223]
[73 222]
[74 221]
[75 220]
[76 219]
[77 218]
[78 217]
[79 216]
[80 214]
[81 213]
[82 212]
[85 137]
[86 136]
[87 135]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
[141 209]
[142 208]
[143 207]
[144 206]
[145 205]
[146 204]
[147 203]
[148 202]
[149 201]
[151 200]
[153 198]
[154 197]
[156 193]
[157 192]
[158 191]
[159 190]
[160 189]
[161 188]
[162 187]
[163 186]
[171 184]
[172 183]
[173 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
