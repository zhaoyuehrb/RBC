%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGUUCUCCUGGAAGAAGAACCUGAUGCCAGCCAUCUGUCAAGGAAGACAGGAAGUAACAGUGCAGGCUCAGUGUGCUCGGCCCCUUCAUCUGUCAGCUGCAGCAAUGGAAUACGUGCUGGAAGUGAAGAACUCUCCGCGGCACCUCCUGAAGCAAUUCACAGUGUGUGACGUUCCUCUGU\
) } def
/len { sequence length } bind def

/coor [
[179.22283936 188.02030945]
[180.67294312 181.56465149]
[183.48139954 175.55673218]
[173.05743408 164.77059937]
[162.63345337 153.98445129]
[152.20948792 143.19830322]
[141.78552246 132.41217041]
[131.36155701 121.62602234]
[120.93758392 110.83988190]
[117.97300720 132.92628479]
[95.18344116 151.22131348]
[84.94514465 162.18385315]
[74.70684052 173.14639282]
[64.46854401 184.10893250]
[68.83105469 198.76893616]
[65.29327393 213.54666138]
[54.90271759 224.49665833]
[40.52253342 228.74711609]
[26.04312134 225.25251770]
[15.80482388 236.21505737]
[9.41265678 251.91781616]
[-7.44595766 250.12240601]
[-10.38764763 233.42561340]
[4.84228420 225.97676086]
[15.08058167 215.01422119]
[10.60602379 200.80703735]
[13.86522675 186.17031860]
[24.08062744 175.05673218]
[38.58246994 170.51873779]
[53.50600815 173.87063599]
[63.74430466 162.90809631]
[73.98260498 151.94555664]
[84.22090149 140.98301697]
[81.17427063 134.12968445]
[67.46752167 140.22271729]
[61.37472534 126.51586151]
[75.08102417 120.42304230]
[72.03440094 113.56970978]
[57.03658676 113.82580566]
[42.03877258 114.08190155]
[27.04095840 114.33799744]
[12.04314518 114.59409332]
[1.24185586 126.13132477]
[-14.55639362 126.56820679]
[-25.97878265 115.64554596]
[-26.24860954 99.84355927]
[-15.20579147 88.53728485]
[0.59816325 88.43454742]
[11.78704929 99.59628296]
[26.78486252 99.34018707]
[41.78267670 99.08409119]
[56.78049088 98.82799530]
[71.77830505 98.57189941]
[78.10468292 84.97127533]
[68.63835907 73.33560944]
[59.17204285 61.69993591]
[49.70572281 50.06426620]
[34.87874222 53.51710129]
[20.08324242 50.20347977]
[8.24210930 40.83290100]
[1.67072773 27.30596542]
[1.62431645 12.32907295]
[8.05851936 -1.12702250]
[-6.65251446 -6.94905519]
[-8.68263149 -21.70466042]
[-18.14895058 -33.34032822]
[-27.61526871 -44.97599792]
[-42.32630157 -50.79803085]
[-44.35641861 -65.55363464]
[-53.82273865 -77.18930817]
[-68.50883484 -85.66012573]
[-64.43457794 -102.11724854]
[-47.49274063 -102.75798798]
[-42.18706894 -86.65562439]
[-32.72074890 -75.01995850]
[-18.68681145 -70.03018188]
[-15.97959995 -54.44231796]
[-6.51328087 -42.80664825]
[2.95303822 -31.17098045]
[16.98697662 -26.18120766]
[19.69418907 -10.59334183]
[34.17791367 -14.15524387]
[48.83210754 -11.06266403]
[60.73912811 -1.87659311]
[67.50456238 11.62337208]
[67.73864746 26.78358841]
[61.34139252 40.59794617]
[70.80770874 52.23361588]
[80.27403259 63.86928558]
[89.74034882 75.50495911]
[97.24007416 75.56898499]
[92.72679901 61.26407623]
[104.93690491 52.55125427]
[116.99640656 61.47136688]
[112.23953247 75.69703674]
[119.73925781 75.76106262]
[129.40284729 64.28870392]
[139.06645203 52.81635284]
[137.90643311 37.28277206]
[147.87013245 25.78583336]
[162.68617249 24.77566910]
[165.65911865 9.23629475]
[179.77619934 4.48685312]
[189.43980408 -6.98550177]
[199.10339355 -18.45785522]
[208.76698303 -29.93021011]
[218.43058777 -41.40256500]
[221.57652283 -50.00418472]
[228.35842896 -52.98646545]
[238.21647644 -64.29216003]
[238.56059265 -80.33152008]
[251.40209961 -89.94792175]
[266.89010620 -85.76448059]
[273.14352417 -70.99037170]
[265.36529541 -56.95903397]
[249.52217102 -54.43410492]
[239.66412354 -43.12841034]
[229.90293884 -31.73896980]
[220.23934937 -20.26661491]
[210.57574463 -8.79426003]
[200.91215515 2.67809415]
[191.24855042 14.15044880]
[188.96681213 28.86924362]
[174.15852356 34.43926620]
[175.68045044 49.21151352]
[166.04360962 60.98377609]
[150.53880310 62.47994614]
[140.87521362 73.95230103]
[131.21160889 85.42465973]
[131.72372437 100.41590881]
[142.14768982 111.20205688]
[152.57167053 121.98819733]
[162.99563599 132.77433777]
[173.41960144 143.56048584]
[183.84356689 154.34661865]
[194.26753235 165.13276672]
[218.64219666 162.71965027]
[236.79228210 178.79598999]
[237.32853699 202.78842163]
[249.43360901 211.64659119]
[264.85183716 209.42922974]
[277.00189209 218.58511353]
[279.02078247 233.29768372]
[291.12588501 242.15585327]
[303.23095703 251.01402283]
[315.33602905 259.87219238]
[327.51629639 268.62667847]
[339.77084351 277.27688599]
[352.60662842 275.85992432]
[362.63986206 283.33657837]
[364.80740356 295.25256348]
[376.91247559 304.11071777]
[389.01757812 312.96890259]
[401.12265015 321.82705688]
[417.47552490 323.05804443]
[424.34112549 337.95083618]
[414.65670776 351.18502808]
[398.38476562 349.14642334]
[392.26446533 333.93212891]
[380.15939331 325.07397461]
[368.05432129 316.21578979]
[355.94924927 307.35763550]
[338.43557739 306.41833496]
[331.12063599 289.53143311]
[318.86608887 280.88122559]
[311.57092285 279.58947754]
[306.47787476 271.97726440]
[294.37277222 263.11911011]
[282.26770020 254.26092529]
[270.16262817 245.40277100]
[255.52867126 247.92922974]
[243.12622070 239.11824036]
[240.57545471 223.75166321]
[228.47036743 214.89350891]
[223.10531616 218.46827698]
[217.08364868 220.81379700]
[210.68367004 221.81455994]
[204.20265198 221.41738892]
[197.94309998 219.63420105]
[192.19859314 216.54173279]
[187.24003601 212.27830505]
[183.30285645 207.03762817]
[180.57586670 201.06001282]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 136]
[4 135]
[5 134]
[6 133]
[7 132]
[8 131]
[9 130]
[11 33]
[12 32]
[13 31]
[14 30]
[19 25]
[20 24]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[54 90]
[55 89]
[56 88]
[57 87]
[63 81]
[65 79]
[66 78]
[67 77]
[69 75]
[70 74]
[96 129]
[97 128]
[98 127]
[101 124]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[109 117]
[110 116]
[139 174]
[140 173]
[143 170]
[144 169]
[145 168]
[146 167]
[147 165]
[148 164]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
