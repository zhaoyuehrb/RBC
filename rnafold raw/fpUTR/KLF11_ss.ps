%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGGGGCAACGACGGGAGGCGGGAGCGCCGCACUGCCUUGGAGGCGGGGCAACGCUUGGAGGCGGGAACGCGGCACGCGAGCGUUGGGGGCCCUAAGCGUCGCGACCUGGGGGCUUCGGGGAGGUAGCCGUGGACGUGGGCAGAGCGCGGGCCUCGUGGUGUGCGGGCACUGUGGGCCGGGCGAGCCCCUUCCCGCCCGUGUGGUUGACAUC\
) } def
/len { sequence length } bind def

/coor [
[114.29887390 443.76770020]
[99.71786499 447.91137695]
[84.59920502 446.81509399]
[70.76853943 440.61117554]
[59.89599228 430.04879761]
[53.29447174 416.40344238]
[51.76115036 401.32284546]
[55.48117828 386.62805176]
[64.00534821 374.09350586]
[76.30432129 365.23284912]
[90.89293671 361.11605835]
[91.97779083 346.15533447]
[93.06264496 331.19464111]
[94.14750671 316.23391724]
[87.35095215 302.98037720]
[96.06607056 289.77593994]
[97.15092468 274.81521606]
[98.23577881 259.85449219]
[91.43922424 246.60096741]
[100.15434265 233.39653015]
[97.50414276 226.50100708]
[101.36473846 218.22758484]
[102.66606903 203.28413391]
[103.96739197 188.34068298]
[105.26872253 173.39724731]
[106.57004547 158.45379639]
[107.87137604 143.51036072]
[109.17269897 128.56690979]
[93.82752228 127.77045441]
[81.70578003 119.71162415]
[75.74420929 107.32461548]
[60.74460602 107.21603394]
[45.74499893 107.10745239]
[30.74539185 106.99887848]
[15.74578476 106.89029694]
[-2.21806502 118.57944489]
[-19.54848862 107.36701965]
[-34.53866577 107.90979767]
[-49.52884293 108.45258331]
[-64.51902008 108.99536896]
[-79.50919342 109.53814697]
[-94.49936676 110.08093262]
[-109.48954773 110.62371826]
[-123.00070190 118.85531616]
[-135.99961853 111.58362579]
[-150.98979187 112.12641144]
[-165.97996521 112.66919708]
[-174.43830872 116.10578918]
[-181.19075012 113.10974121]
[-196.18721008 113.43545532]
[-206.93482971 125.02270508]
[-222.73088074 125.53292084]
[-234.20385742 114.66339874]
[-234.54702759 98.86283875]
[-223.55682373 87.50542450]
[-207.75350952 87.32931519]
[-196.51292419 98.43899536]
[-181.51646423 98.11328125]
[-166.52275085 97.67901611]
[-151.53257751 97.13623810]
[-136.54240417 96.59345245]
[-124.10343933 88.40067291]
[-110.03233337 95.63354492]
[-95.04215240 95.09075928]
[-80.05197906 94.54797363]
[-65.06179810 94.00518799]
[-50.07162476 93.46240997]
[-35.08144760 92.91962433]
[-20.09127235 92.37683868]
[-15.18871593 84.98365021]
[-7.31512260 80.60648346]
[1.82690632 80.33645630]
[10.19303894 84.36036682]
[15.85436344 91.89068604]
[30.85397148 91.99926758]
[45.85357666 92.10784912]
[60.85318375 92.21642303]
[75.85279083 92.32500458]
[78.79350281 86.13357544]
[83.28612518 80.95690155]
[77.17185211 67.25961304]
[71.05757904 53.56232452]
[64.94331360 39.86503983]
[58.82903671 26.16775131]
[52.61577606 12.51508236]
[46.30384827 -1.09225345]
[39.85678864 -7.55670881]
[40.00063705 -14.94257545]
[33.88636398 -28.63986206]
[27.77209091 -42.33715057]
[21.65781975 -56.03443527]
[15.54354668 -69.73172760]
[3.56599855 -81.73066711]
[11.78030491 -96.56176758]
[28.30574608 -92.77413940]
[29.24083328 -75.84599304]
[35.35510635 -62.14870834]
[41.46937943 -48.45142365]
[47.58365250 -34.75413513]
[53.69792557 -21.05684853]
[59.91118622 -7.40417910]
[66.22311401 6.20315695]
[71.88671112 10.94608307]
[72.52632141 20.05347824]
[78.64059448 33.75076675]
[84.75486755 47.44805145]
[90.86914062 61.14533997]
[96.98341370 74.84262848]
[106.36280823 74.51142883]
[115.55316162 77.68066406]
[123.25084686 84.15403748]
[128.27636719 93.25257111]
[129.75132751 103.88140106]
[144.21653748 99.91178894]
[158.68173218 95.94217682]
[173.14694214 91.97255707]
[187.61215210 88.00294495]
[202.07734680 84.03332520]
[216.54255676 80.06371307]
[231.00776672 76.09410095]
[243.42430115 35.15748215]
[250.43376160 20.97375488]
[265.30618286 20.16119766]
[272.31564331 5.97747135]
[287.18807983 5.16491318]
[299.56121826 -3.31476736]
[311.93438721 -11.79444790]
[324.30752563 -20.27412796]
[336.68069458 -28.75380898]
[339.87106323 -34.53629684]
[344.76672363 -37.41124344]
[349.53707886 -37.29378510]
[362.15054321 -45.41169739]
[374.76400757 -53.52961349]
[387.37747192 -61.64752579]
[399.99093628 -69.76544189]
[403.45669556 -84.95182800]
[416.36416626 -93.00486755]
[430.82070923 -89.60721588]
[432.61047363 -105.14203644]
[444.00259399 -115.85436249]
[459.61804199 -116.68614960]
[472.08367920 -107.24465942]
[475.51364136 -91.98787689]
[468.28836060 -78.11958313]
[453.81942749 -72.18796539]
[438.93862915 -76.99375153]
[436.04293823 -62.42835999]
[423.36672974 -54.01595688]
[408.10885620 -57.15197754]
[395.49539185 -49.03406143]
[382.88192749 -40.91614914]
[370.26846313 -32.79823303]
[357.65499878 -24.68031883]
[345.16036987 -16.38065147]
[332.78723145 -7.90097189]
[320.41406250 0.57870901]
[308.04089355 9.05838966]
[295.66775513 17.53807068]
[289.54330444 31.11527252]
[273.78585815 32.53435516]
[267.66140747 46.11155701]
[251.90397644 47.53063965]
[252.77069092 54.98039246]
[255.37078857 77.32965088]
[269.36016846 82.74231720]
[285.02255249 80.50602722]
[294.10037231 92.31460571]
[308.08975220 97.72727203]
[322.07913208 103.13994598]
[337.74151611 100.90365601]
[346.81933594 112.71222687]
[361.17111206 106.09395599]
[375.97009277 111.64069366]
[382.43624878 126.06166077]
[376.73336792 140.80114746]
[362.24484253 147.11448669]
[347.56646729 141.25607300]
[341.40664673 126.70161438]
[326.74490356 129.32505798]
[316.66647339 117.12933350]
[302.67709351 111.71665955]
[288.68768311 106.30399323]
[274.02593994 108.92743683]
[263.94750977 96.73171234]
[249.95812988 91.31903839]
[234.97737122 90.55930328]
[220.51217651 94.52891541]
[206.04696655 98.49853516]
[191.58175659 102.46814728]
[177.11656189 106.43776703]
[162.65135193 110.40737915]
[148.18614197 114.37699127]
[133.72094727 118.34661102]
[124.11614227 129.86824036]
[122.81481934 144.81167603]
[121.51348877 159.75512695]
[120.21216583 174.69857788]
[118.91083527 189.64201355]
[117.60951233 204.58546448]
[116.30818176 219.52890015]
[115.11505890 234.48138428]
[121.83402252 248.80500793]
[113.19649506 260.93936157]
[112.11164093 275.90008545]
[111.02678680 290.86077881]
[117.74574280 305.18441772]
[109.10822296 317.31875610]
[108.02336884 332.27947998]
[106.93850708 347.24020386]
[105.85365295 362.20092773]
[119.69573212 368.37933350]
[130.58772278 378.92163086]
[137.21437073 392.55480957]
[138.77548218 407.63256836]
[135.08255005 422.33419800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 211]
[12 210]
[13 209]
[14 208]
[16 206]
[17 205]
[18 204]
[20 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[31 78]
[32 77]
[33 76]
[34 75]
[35 74]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[45 61]
[46 60]
[47 59]
[49 58]
[50 57]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[85 102]
[86 101]
[88 100]
[89 99]
[90 98]
[91 97]
[92 96]
[113 194]
[114 193]
[115 192]
[116 191]
[117 190]
[118 189]
[119 188]
[120 187]
[121 163]
[123 161]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[139 147]
[165 186]
[166 185]
[168 183]
[169 182]
[170 181]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
