%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCUUGGUGUGCGCGUCAUGGCCGUCAGCACCGCGUUCCCGUCCUCUUCCGCUUGGCCCCAGAAAGUUUCGGUUCUGCCCGGCGGUGGACCCACGAGCGCGUGCCACCAUGGAGUCUGACCACUGCUGAGCAGACAGCCACCGAGGGCCGAAAUUCUGAGCCUUCCUCUGGACCCAGGCAGGAGACAUACAGACAAGAAAGGCAAACUCACC\
) } def
/len { sequence length } bind def

/coor [
[24.31440163 622.97265625]
[10.75368309 629.38409424]
[-4.11664009 631.35223389]
[-18.87837410 628.68927002]
[-32.12368393 621.64929199]
[-42.58935547 610.90362549]
[-49.27726746 597.47705078]
[-51.54959106 582.65020752]
[-49.18866730 567.83410645]
[-58.14604568 579.86590576]
[-67.10342407 591.89776611]
[-76.06080627 603.92962646]
[-85.01818085 615.96148682]
[-82.92765045 631.39739990]
[-92.18310547 643.47180176]
[-106.91177368 645.36968994]
[-115.86915588 657.40148926]
[-124.82653046 669.43334961]
[-121.04444122 684.60668945]
[-127.94684601 698.63848877]
[-142.27464294 704.90332031]
[-157.26266479 700.44317627]
[-165.83406067 687.36401367]
[-163.94165039 671.84130859]
[-152.47898865 661.20452881]
[-136.85838318 660.47595215]
[-127.90100098 648.44415283]
[-118.94361877 636.41229248]
[-121.34970093 621.75805664]
[-112.43704987 609.42846680]
[-97.05003357 607.00408936]
[-88.09265137 594.97222900]
[-79.13527679 582.94036865]
[-70.17789459 570.90856934]
[-61.22051620 558.87670898]
[-53.91024017 545.77862549]
[-48.37214661 531.83837891]
[-51.84609222 514.63507080]
[-37.30293655 503.33718872]
[-31.96817398 489.31790161]
[-26.63341141 475.29861450]
[-32.94646454 461.85684204]
[-27.73596954 447.56332397]
[-13.59420967 441.03274536]
[-8.25944805 427.01345825]
[-2.92468691 412.99417114]
[-8.85656166 391.34075928]
[9.27913380 376.87844849]
[13.58118248 362.50860596]
[17.88323021 348.13876343]
[22.18527985 333.76892090]
[26.48732758 319.39907837]
[22.72529793 304.98742676]
[34.09548569 293.98608398]
[38.39753342 279.61624146]
[42.69958115 265.24639893]
[47.00162888 250.87655640]
[51.30368042 236.50671387]
[55.60572815 222.13687134]
[48.33270645 209.18933105]
[52.49089432 194.55497742]
[66.12077332 187.01416016]
[70.42282867 172.64431763]
[74.72487640 158.27447510]
[79.02692413 143.90463257]
[83.32897186 129.53479004]
[75.33164978 123.27442932]
[69.54651642 114.92689514]
[66.49237061 105.24075317]
[66.44309998 95.08464050]
[69.40310669 85.36931610]
[75.10696411 76.96603394]
[83.04315948 70.62837982]
[92.50000000 66.92468262]
[92.50000000 51.92468262]
[92.50000000 36.92468262]
[92.28184509 21.92626953]
[91.84557343 6.93261528]
[91.40930176 -8.06103897]
[90.97303009 -23.05469322]
[90.53675842 -38.04834747]
[82.40135956 -51.61764526]
[89.76521301 -64.56456757]
[89.32894135 -79.55821991]
[88.89267731 -94.55187988]
[88.45640564 -109.54553223]
[88.02013397 -124.53918457]
[87.58386230 -139.53283691]
[87.14759064 -154.52648926]
[86.71131897 -169.52014160]
[86.27504730 -184.51380920]
[77.94863129 -191.50495911]
[74.90499115 -201.71360779]
[77.91709900 -211.70252991]
[85.76000214 -218.24530029]
[85.76000214 -233.24530029]
[82.63153839 -241.82319641]
[85.87066650 -248.46307373]
[86.08882904 -263.46148682]
[73.83839417 -272.80133057]
[69.48740387 -287.39318848]
[74.50359344 -301.58129883]
[86.76567078 -309.99435425]
[86.98382568 -324.99276733]
[87.20198822 -339.99118042]
[87.42014313 -354.98959351]
[78.95986176 -369.03793335]
[87.13164520 -383.25601196]
[103.52906036 -383.01751709]
[111.28385162 -368.56774902]
[102.41855621 -354.77142334]
[102.20040131 -339.77301025]
[101.98223877 -324.77459717]
[101.76408386 -309.77618408]
[113.77627563 -301.01004028]
[118.37769318 -286.68206787]
[113.60414124 -272.22293091]
[101.08724213 -263.24331665]
[100.86908722 -248.24490356]
[100.76000214 -233.24530029]
[100.76000214 -218.24530029]
[111.62500000 -202.24771118]
[101.26869965 -184.95007324]
[101.70497131 -169.95642090]
[102.14124298 -154.96276855]
[102.57751465 -139.96911621]
[103.01378632 -124.97545624]
[103.45005798 -109.98180389]
[103.88632965 -94.98815155]
[104.32260132 -79.99449158]
[104.75887299 -65.00083923]
[112.86306763 -52.50399017]
[105.53041077 -38.48461914]
[105.96668243 -23.49096298]
[106.40295410 -8.49730968]
[106.83922577 6.49634457]
[107.27549744 21.48999977]
[110.07018280 25.35860825]
[110.46681976 31.02305222]
[107.50000000 36.92468262]
[107.50000000 51.92468262]
[107.50000000 66.92468262]
[115.29399109 69.72921753]
[122.17568970 74.33941650]
[127.73458862 80.48028564]
[131.63911438 87.78552246]
[146.48072815 85.61154175]
[161.32235718 83.43756104]
[176.16398621 81.26358795]
[191.00559998 79.08960724]
[205.84722900 76.91563416]
[220.67265320 74.63378143]
[235.48109436 72.24417877]
[244.52902222 59.28615570]
[260.10400391 56.60360336]
[272.96563721 65.78804016]
[275.48336792 81.39049530]
[266.16345215 94.15430450]
[250.53526306 96.50694275]
[237.87069702 87.05261230]
[223.06225586 89.44221497]
[216.96194458 93.60947418]
[208.02120972 91.75725555]
[193.17958069 93.93123627]
[178.33795166 96.10520935]
[163.49633789 98.27919006]
[148.65470886 100.45317078]
[133.81307983 102.62714386]
[122.17568970 125.66058350]
[97.69881439 133.83683777]
[93.39676666 148.20668030]
[89.09471893 162.57652283]
[84.79267120 176.94636536]
[80.49061584 191.31620789]
[87.73447418 205.10621643]
[83.16687775 219.61799622]
[69.97557068 226.43891907]
[65.67352295 240.80876160]
[61.37147141 255.17860413]
[57.06942368 269.54843140]
[52.76737595 283.91827393]
[48.46532822 298.28811646]
[51.91964722 313.72763062]
[40.85717010 323.70114136]
[36.55512238 338.07098389]
[32.25307465 352.44082642]
[27.95102501 366.81066895]
[23.64897728 381.18051147]
[28.59693527 386.81942749]
[31.26150513 393.75939941]
[31.35688591 401.12466431]
[28.91837120 408.00302124]
[24.29216385 413.55892944]
[18.08705711 417.13482666]
[11.09459686 418.32894897]
[5.75983524 432.34820557]
[0.42507404 446.36749268]
[6.64782524 460.64739990]
[1.03790855 474.78894043]
[-12.61412811 480.63339233]
[-17.94889069 494.65264893]
[-23.28365135 508.67193604]
[-18.72534561 520.73516846]
[-23.45447922 532.30059814]
[-34.43193436 537.37646484]
[-39.97002792 551.31671143]
[-28.60182762 541.53082275]
[-14.78987026 535.68017578]
[0.14858902 534.32281494]
[14.78885841 537.58813477]
[27.73468590 545.16479492]
[37.75141907 556.33013916]
[43.88375092 570.01934814]
[45.54684448 584.92687988]
[42.58208084 599.63098145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 35]
[10 34]
[11 33]
[12 32]
[13 31]
[16 28]
[17 27]
[18 26]
[36 206]
[37 205]
[39 202]
[40 201]
[41 200]
[44 197]
[45 196]
[46 195]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[54 182]
[55 181]
[56 180]
[57 179]
[58 178]
[59 177]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[74 142]
[75 141]
[76 140]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[95 121]
[96 120]
[98 119]
[99 118]
[103 114]
[104 113]
[105 112]
[106 111]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
