%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGGAGUCGGAAGUGGCACCAGCACUUCCGGUACGGAAAACUCGCUGCUGCCCCAACCUGGCUUGACAGGCUUGGUCUCUGCAAGUGGCUCUCAGCCCCUUCUUCUUUCCUGCCUCACCUUCCAAUUCGUUUGCCGCCGCCGUCCCGCAGCUGCUGUUUCCGGAGUUGCCCCUUCCCCAUGUUCCGGGGCAGGAGUCCGCAAAGCGAAGAUCCGCCCGCCGGUUCCUCAUC\
) } def
/len { sequence length } bind def

/coor [
[21.94264412 573.31457520]
[14.19110203 559.73339844]
[17.03372192 544.35638428]
[29.12830544 534.44403076]
[29.12830544 519.44403076]
[29.12830544 504.44400024]
[29.12830544 489.44400024]
[29.12830544 474.44400024]
[29.12830544 459.44400024]
[29.12830544 444.44400024]
[29.12830544 429.44400024]
[14.77238178 425.09573364]
[6.44925213 437.57473755]
[-1.87387788 450.05374146]
[-10.19700813 462.53274536]
[-18.52013779 475.01174927]
[-26.84326744 487.49075317]
[-35.16639709 499.96975708]
[-30.60463905 514.92718506]
[-36.77210999 529.29718018]
[-50.75672150 536.29461670]
[-65.95536804 532.61560059]
[-75.19171143 519.99719238]
[-74.10462952 504.39746094]
[-63.20741653 493.18206787]
[-47.64540100 491.64663696]
[-39.32226944 479.16763306]
[-30.99913979 466.68862915]
[-22.67601013 454.20962524]
[-14.35288048 441.73062134]
[-6.02975082 429.25161743]
[2.29337907 416.77261353]
[8.60740089 403.16625977]
[12.76337433 388.75347900]
[16.91934776 374.34069824]
[10.92282391 355.94784546]
[25.69586182 342.21630859]
[29.46504211 327.69757080]
[33.23422241 313.17886353]
[37.00340271 298.66012573]
[27.60594559 289.18994141]
[24.08276939 276.20983887]
[27.45614815 263.07827759]
[36.94947815 253.24774170]
[50.16290283 249.35710144]
[54.12583160 234.89006042]
[58.08876419 220.42301941]
[62.05169296 205.95597839]
[66.01462555 191.48895264]
[60.30158615 180.83831787]
[63.47246552 168.76092529]
[74.35671997 161.86051941]
[78.51269531 147.44775391]
[82.66866302 133.03497314]
[64.56346893 123.03701782]
[52.87289429 103.07920074]
[38.23633575 99.79727173]
[23.59977341 96.51533508]
[8.96321297 93.23340607]
[-5.69495773 90.04937744]
[-20.37408447 86.96340179]
[-35.05321121 83.87742615]
[-49.73233795 80.79145050]
[-62.82907867 89.63739777]
[-78.32880402 86.54965210]
[-87.03578949 73.36011505]
[-83.78434753 57.89390945]
[-70.50349426 49.32685089]
[-55.07252502 52.74163437]
[-46.64635849 66.11231995]
[-31.96723366 69.19829559]
[-17.28810692 72.28427124]
[-2.60898113 75.37025452]
[4.57137680 73.67333984]
[12.24514580 78.59683990]
[26.88170624 81.87877655]
[41.51826859 85.16070557]
[56.15482712 88.44264221]
[60.35800552 82.23109436]
[47.93491745 73.82473755]
[33.52215576 69.66874695]
[33.02097702 54.67711639]
[47.12399673 49.56782913]
[56.34127045 61.40164948]
[68.76436615 69.80800629]
[72.96753693 63.59645844]
[64.47833252 51.22983551]
[55.98912811 38.86321259]
[41.80000687 31.86468124]
[40.97599792 16.99288559]
[32.48678970 4.62626219]
[23.99758530 -7.74036121]
[15.50837898 -20.10698509]
[1.55941391 -29.74351501]
[6.95788765 -45.81500626]
[23.89574432 -45.07653809]
[27.87500191 -28.59619141]
[36.36420822 -16.22956657]
[44.85341644 -3.86294413]
[53.34262085 8.50367928]
[66.92453766 14.61766911]
[68.35575104 30.37400627]
[76.84495544 42.74063110]
[85.33416748 55.10725403]
[93.90153503 54.83600235]
[102.07757568 56.12900543]
[109.58886719 58.83562469]
[116.20344543 62.75967407]
[121.73793793 67.66941833]
[126.06245422 73.30855560]
[138.48554993 64.90219879]
[150.90863037 56.49584198]
[163.33172607 48.08948517]
[175.75482178 39.68312836]
[188.17790222 31.27677345]
[200.60099792 22.87041664]
[213.02409363 14.46406078]
[225.44717407 6.05770493]
[237.87026978 -2.34865117]
[231.31425476 -16.19322205]
[226.94786072 -30.87350464]
[224.87260437 -46.04557419]
[225.13629150 -61.35411453]
[227.73197937 -76.44072723]
[232.59812927 -90.95232391]
[239.62008667 -104.54940033]
[248.63276672 -116.91396332]
[259.42453003 -127.75698853]
[271.74218750 -136.82516479]
[285.29684448 -143.90678406]
[299.77084351 -148.83676147]
[314.82504272 -151.50038147]
[330.10684204 -151.83605957]
[345.25845337 -149.83670044]
[359.92523193 -145.54986572]
[373.76403809 -139.07669067]
[382.08715820 -151.55569458]
[382.60549927 -167.94665527]
[397.18551636 -175.45367432]
[410.82852173 -166.35420227]
[409.49975586 -150.00897217]
[394.56616211 -143.23255920]
[386.24304199 -130.75355530]
[390.89709473 -126.88317871]
[395.30804443 -122.73787689]
[399.45968628 -118.33288574]
[403.33676147 -113.68439484]
[406.92498779 -108.80950165]
[410.21124268 -103.72611237]
[413.18338013 -98.45292664]
[426.95367432 -104.40093994]
[440.72396851 -110.34895325]
[454.49426270 -116.29696655]
[468.26455688 -122.24498749]
[482.03485107 -128.19299316]
[488.65850830 -134.45837402]
[496.02920532 -134.12712097]
[509.87780762 -139.89051819]
[523.72637939 -145.65393066]
[533.25256348 -159.00248718]
[549.54760742 -157.15776062]
[555.84863281 -142.01742554]
[545.67358398 -129.15657043]
[529.48980713 -131.80534363]
[515.64117432 -126.04194641]
[501.79263306 -120.27854156]
[487.98287964 -114.42269897]
[474.21258545 -108.47468567]
[460.44229126 -102.52667236]
[446.67196655 -96.57865906]
[432.90167236 -90.63063812]
[419.13137817 -84.68262482]
[423.21875000 -68.74649811]
[424.63397217 -52.35279465]
[423.33776855 -35.94651413]
[419.36444092 -19.97314453]
[412.82098389 -4.86656237]
[403.88424683 8.96274471]
[392.79605103 21.13883781]
[379.85681152 31.33054352]
[365.41723633 39.26046371]
[349.86892700 44.71252060]
[333.63369751 47.53785324]
[317.15222168 47.65887451]
[300.87188721 45.07140350]
[285.23483276 39.84479904]
[270.66592407 32.12011719]
[257.56106567 22.10627747]
[246.27662659 10.07443905]
[233.85353088 18.48079491]
[221.43045044 26.88715172]
[209.00735474 35.29350662]
[196.58425903 43.69986343]
[184.16117859 52.10622025]
[171.73808289 60.51257324]
[159.31498718 68.91893005]
[146.89190674 77.32528687]
[134.46881104 85.73164368]
[137.04621887 104.38893890]
[130.18061829 121.92750549]
[115.62203979 133.87678528]
[97.08143616 137.19094849]
[92.92546082 151.60371399]
[88.76948547 166.01649475]
[93.60647583 183.79196167]
[80.48166656 195.45187378]
[76.51873016 209.91891479]
[72.55580139 224.38595581]
[68.59287262 238.85299683]
[64.62993622 253.32002258]
[75.38216400 266.38729858]
[76.21256256 283.12268066]
[66.99158478 296.91363525]
[51.52212524 302.42932129]
[47.75294495 316.94802856]
[43.98376465 331.46676636]
[40.21458435 345.98547363]
[46.24886322 355.00997925]
[46.32816696 365.64636230]
[40.66725922 374.39135742]
[31.33211517 378.49667358]
[27.17614174 392.90945435]
[23.02016830 407.32220459]
[44.12830353 429.44400024]
[44.12830353 444.44400024]
[44.12830353 459.44400024]
[44.12830353 474.44400024]
[44.12830353 489.44400024]
[44.12830353 504.44400024]
[44.12830353 519.44403076]
[44.12830353 534.44403076]
[56.22288513 544.35638428]
[59.06550598 559.73339844]
[51.31396484 573.31457520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 231]
[5 230]
[6 229]
[7 228]
[8 227]
[9 226]
[10 225]
[11 224]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[33 223]
[34 222]
[35 221]
[37 217]
[38 216]
[39 215]
[40 214]
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[52 204]
[53 203]
[54 202]
[56 78]
[57 77]
[58 76]
[59 75]
[60 73]
[61 72]
[62 71]
[63 70]
[86 104]
[87 103]
[88 102]
[90 100]
[91 99]
[92 98]
[93 97]
[110 198]
[111 197]
[112 196]
[113 195]
[114 194]
[115 193]
[116 192]
[117 191]
[118 190]
[119 189]
[136 143]
[137 142]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
