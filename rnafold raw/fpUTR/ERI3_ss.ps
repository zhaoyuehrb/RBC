%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGUCAGAGUGCGCGGAGGUGAGUCGGUGUGUUGUGGACUCGUGGUGCUGGCUGCCGCUGUUCAGGCGGCCGGGAACGGGCGGUGGGGAGCGGGCGGAGCUGGCCCUGCCUCUGCCUGGCCGGCGCCGCAGUCGGCGCGGGCCGCGCCCGCCGCCGCCAACUGCCCUGAGCGCUUGCUGAGGCCGAGGGAGACGUCGGGGCCUGCACCUGGAGGGAGCCUGCCGCGCUGGCCCCGAGGAGGGGGCGUUGCC\
) } def
/len { sequence length } bind def

/coor [
[152.26033020 601.52862549]
[149.31123352 586.82135010]
[146.36213684 572.11413574]
[143.41304016 557.40692139]
[140.46394348 542.69964600]
[137.51484680 527.99243164]
[134.56575012 513.28515625]
[131.61665344 498.57794189]
[129.39089966 496.91699219]
[127.67962646 494.28634644]
[126.85102081 490.87432861]
[127.19960022 486.99734497]
[128.90438843 483.07131958]
[126.68622589 468.23623657]
[124.46807098 453.40115356]
[122.24990845 438.56607056]
[120.03174591 423.73098755]
[117.81358337 408.89590454]
[115.50372314 394.07479858]
[113.10224915 379.26831055]
[110.70077515 364.46179199]
[108.29930115 349.65527344]
[94.09783936 344.82635498]
[83.16838837 355.09997559]
[72.23894501 365.37359619]
[61.30949402 375.64718628]
[50.38004684 385.92080688]
[54.54095840 400.64987183]
[51.36897659 415.62307739]
[41.59300232 427.39971924]
[27.45948219 433.27355957]
[12.21619415 431.89489746]
[-0.63406432 423.58047485]
[-8.13839817 410.24093628]
[-8.57236671 394.94155884]
[-1.83624661 381.19808960]
[10.52205086 372.16864014]
[25.66267776 369.92810059]
[40.10643387 374.99136353]
[51.03588104 364.71774292]
[61.96532822 354.44412231]
[72.89477539 344.17053223]
[83.82422638 333.89691162]
[76.62801361 308.99154663]
[86.47190857 286.24755859]
[107.52553558 275.49203491]
[107.89655304 260.49664307]
[108.26757050 245.50122070]
[108.63858795 230.50581360]
[109.00959778 215.51039124]
[101.58946991 202.59564209]
[109.66574097 188.99107361]
[110.03675842 173.99565125]
[110.40777588 159.00024414]
[110.77879333 144.00483704]
[69.97578430 131.65322876]
[54.97692871 131.46769714]
[39.97807693 131.28218079]
[24.97922325 131.09666443]
[9.98037052 130.91113281]
[-5.01848221 130.72561646]
[-17.45993233 140.85427856]
[-33.10468292 137.30163574]
[-39.95141983 122.79295349]
[-32.74791336 108.45806122]
[-17.02007675 105.29346466]
[-4.83295965 115.72676086]
[10.16589260 115.91228485]
[25.16474533 116.09780884]
[40.16359711 116.28332520]
[55.16245270 116.46884918]
[70.16130066 116.65437317]
[72.65429688 101.86299133]
[58.42324066 97.12199402]
[42.47490692 100.94072723]
[31.39154243 88.85391235]
[36.57476044 73.29543304]
[52.69251251 70.27051544]
[63.16423416 82.89093781]
[77.39529419 87.63193512]
[88.81943512 77.91139221]
[86.41796112 63.10487366]
[84.01648712 48.29835892]
[81.61501312 33.49184418]
[79.21353912 18.68532562]
[76.81206512 3.87881017]
[74.41059113 -10.92770576]
[72.00911713 -25.73422241]
[69.51612854 -40.52560425]
[66.93170929 -55.30128479]
[62.38208771 -63.18957138]
[64.40787506 -70.27561188]
[62.00640488 -85.08213043]
[59.60493088 -99.88864899]
[54.68828583 -114.05997467]
[47.40352631 -127.17227173]
[40.11876297 -140.28456116]
[32.83400345 -153.39686584]
[25.54924202 -166.50915527]
[18.26448059 -179.62144470]
[10.97971821 -192.73373413]
[3.61400676 -205.80073547]
[-11.80580330 -208.40139771]
[-21.90697670 -220.33874512]
[-21.92004967 -235.97633362]
[-11.83884907 -247.93054199]
[3.57659149 -250.55699158]
[17.04757118 -242.61553955]
[22.21350479 -227.85589600]
[16.63519859 -213.24711609]
[22.66718102 -209.01260376]
[24.09201241 -200.01850891]
[31.37677383 -186.90620422]
[38.66153336 -173.79391479]
[45.94629669 -160.68162537]
[53.23106003 -147.56932068]
[60.51581955 -134.45703125]
[67.80058289 -121.34474182]
[82.54316711 -124.11170959]
[84.57767487 -138.97309875]
[86.61218262 -153.83447266]
[88.64669037 -168.69586182]
[90.68119812 -183.55725098]
[84.88716888 -198.27934265]
[94.27922058 -209.83955383]
[96.31372833 -224.70094299]
[98.34823608 -239.56233215]
[100.38274384 -254.42370605]
[102.41725159 -269.28509521]
[104.45175934 -284.14648438]
[97.75666046 -299.11669922]
[107.59156036 -312.23947144]
[123.83916473 -310.01519775]
[129.78532410 -294.73202515]
[119.31314850 -282.11196899]
[117.27864075 -267.25057983]
[115.24413300 -252.38920593]
[113.20962524 -237.52781677]
[111.17511749 -222.66642761]
[109.14060974 -207.80505371]
[115.08015442 -194.14595032]
[105.54258728 -181.52273560]
[103.50807953 -166.66136169]
[101.47357178 -151.79997253]
[99.43906403 -136.93858337]
[97.40455627 -122.07720184]
[74.41144562 -102.29012299]
[76.81291962 -87.48360443]
[79.21439362 -72.67708588]
[81.70738983 -57.88570404]
[84.29180908 -43.11002350]
[88.52832031 -37.07945251]
[86.81563568 -28.13569641]
[89.21710968 -13.32917976]
[91.61858368 1.47733653]
[94.02005768 16.28385353]
[96.42153168 31.09036827]
[98.82300568 45.89688492]
[101.22447968 60.70340347]
[103.62595367 75.50991821]
[110.13655090 79.23310852]
[110.07481384 64.23323822]
[123.03427124 56.67992783]
[136.05529785 64.12659454]
[136.11671448 79.12646484]
[123.15773773 86.67948914]
[129.66833496 90.40267944]
[143.64752197 84.96370697]
[157.62670898 79.52473450]
[167.68217468 67.31007385]
[182.34883118 69.90592957]
[196.32801819 64.46695709]
[210.30720520 59.02798843]
[220.14198303 45.90514374]
[236.38961792 48.12927628]
[242.33590698 63.41238785]
[231.86384583 76.03252411]
[215.74618530 73.00717163]
[201.76699829 78.44614410]
[187.78781128 83.88511658]
[178.73220825 95.71073914]
[163.06567383 93.50391388]
[149.08648682 98.94288635]
[135.10729980 104.38185883]
[137.50877380 119.18837738]
[152.49043274 119.93018341]
[167.47207642 120.67198944]
[182.45372009 121.41379547]
[196.61964417 114.36843109]
[208.94869995 122.72567749]
[223.28392029 114.76115417]
[237.20796204 123.42448425]
[236.39695740 139.80355835]
[221.68521118 147.04901123]
[208.20689392 137.70732117]
[195.11256409 144.80574036]
[181.71191406 136.39544678]
[166.73027039 135.65364075]
[151.74862671 134.91183472]
[136.76696777 134.17002869]
[125.77420044 144.37585449]
[125.40318298 159.37126160]
[125.03216553 174.36666870]
[124.66115570 189.36209106]
[132.05474854 203.34941101]
[124.00501251 215.88140869]
[123.63399506 230.87683105]
[123.26297760 245.87223816]
[122.89196014 260.86764526]
[122.52094269 275.86306763]
[132.12864685 279.25280762]
[140.45671082 285.40661621]
[146.71711731 293.86334229]
[150.28282166 303.93975830]
[150.74948120 314.78530884]
[147.97883606 325.45385742]
[142.11929321 334.98626709]
[133.60110474 342.49655151]
[123.10581970 347.25378418]
[125.50729370 362.06030273]
[127.90876770 376.86682129]
[130.31024170 391.67333984]
[134.76194763 399.61727905]
[132.64866638 406.67773438]
[134.86683655 421.51281738]
[137.08499146 436.34790039]
[139.30314636 451.18298340]
[141.52131653 466.01806641]
[143.73947144 480.85314941]
[146.32389832 495.62884521]
[149.27299500 510.33609009]
[152.22209167 525.04333496]
[155.17118835 539.75054932]
[158.12028503 554.45782471]
[161.06938171 569.16503906]
[164.01847839 583.87225342]
[166.96757507 598.57952881]
[173.36480713 600.78436279]
[178.73629761 604.81427002]
[182.58309937 610.25561523]
[184.56010437 616.56549072]
[184.50679016 623.12622070]
[182.45979309 629.30554199]
[178.64636230 634.51763916]
[173.45962524 638.27856445]
[175.31016541 653.16400146]
[177.16072083 668.04937744]
[185.11492920 683.02160645]
[172.92979431 694.80969238]
[158.22921753 686.36401367]
[162.27529907 669.89996338]
[160.42475891 655.01452637]
[158.57421875 640.12908936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 237]
[2 236]
[3 235]
[4 234]
[5 233]
[6 232]
[7 231]
[8 230]
[13 229]
[14 228]
[15 227]
[16 226]
[17 225]
[18 224]
[19 222]
[20 221]
[21 220]
[22 219]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[46 210]
[47 209]
[48 208]
[49 207]
[50 206]
[52 204]
[53 203]
[54 202]
[55 201]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[73 80]
[74 79]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 151]
[90 150]
[92 149]
[93 148]
[94 147]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 110]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[167 184]
[168 183]
[169 182]
[171 180]
[172 179]
[173 178]
[185 200]
[186 199]
[187 198]
[188 197]
[190 195]
[245 253]
[246 252]
[247 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
