%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUACGUAGACGUCGGGGGCGCAGCCGCGCUGUGCGCGGUGACUGGCGGCUGCACUGGCGGCAGCUGGAGGUGUAAUAGUGCGGGUAGUGGGUUUGGAGAAGUUCCGAGGCGGCGGUGGCGCCGGUCAGGACAAGGAUAGCGGAACCGGGCCCUGGGCUUGUCGCUCACC\
) } def
/len { sequence length } bind def

/coor [
[97.67813873 280.70126343]
[93.66521454 295.15451050]
[89.65228271 309.60775757]
[85.63935852 324.06100464]
[93.63482666 337.69360352]
[89.56797028 352.96569824]
[75.85158539 360.81655884]
[60.62336349 356.58847046]
[52.91793442 342.78985596]
[57.30679321 327.60717773]
[71.18611145 320.04806519]
[75.19903564 305.59481812]
[79.21195984 291.14157104]
[83.22488403 276.68832397]
[85.51789093 261.86462402]
[86.05942535 246.87440491]
[86.60095978 231.88418579]
[79.32819366 218.88587952]
[87.55867004 205.37403870]
[88.10020447 190.38380432]
[88.64173889 175.39358521]
[89.18327332 160.40336609]
[89.72480774 145.41314697]
[82.45204163 132.41484070]
[90.68251801 118.90299988]
[83.30009460 105.84543610]
[67.47911835 105.93170166]
[60.09093094 92.99864197]
[46.96725845 85.73439789]
[33.84358978 78.47015381]
[20.71992111 71.20590210]
[7.59625053 63.94165421]
[-5.52741957 56.67740631]
[-18.65108871 49.41316223]
[-31.77475929 42.14891434]
[-44.89842987 34.88466644]
[-57.51073837 37.69112015]
[-68.30142975 31.34301186]
[-71.74606323 19.72467422]
[-84.73644257 12.22467327]
[-97.72682190 4.72467327]
[-113.54676819 4.52528572]
[-120.70026398 -8.53904915]
[-133.36117554 -5.96075678]
[-144.03550720 -12.50264740]
[-147.26982117 -24.18128204]
[-160.12268066 -31.91458893]
[-172.97552490 -39.64789581]
[-185.82838440 -47.38120651]
[-198.68124390 -55.11451340]
[-214.49502563 -55.59948349]
[-221.41148376 -68.79084015]
[-234.26432800 -76.52414703]
[-247.11718750 -84.25745392]
[-259.97006226 -91.99076080]
[-272.82290649 -99.72406769]
[-289.22021484 -99.47898865]
[-297.39770508 -113.69379425]
[-288.94305420 -127.74552155]
[-272.55371094 -127.17895508]
[-265.08959961 -112.57692719]
[-252.23674011 -104.84362030]
[-239.38388062 -97.11031342]
[-226.53102112 -89.37700653]
[-213.67817688 -81.64369965]
[-198.78372192 -81.71186066]
[-190.94793701 -67.96736908]
[-178.09507751 -60.23406219]
[-165.24221802 -52.50075531]
[-152.38935852 -44.76744843]
[-139.53651428 -37.03413773]
[-122.01411438 -37.67900467]
[-113.20026398 -21.52943039]
[-98.30947113 -21.86649323]
[-90.22682190 -8.26570797]
[-77.23644257 -0.76570773]
[-64.24606323 6.73429203]
[-46.73816299 5.77317905]
[-37.63418198 21.76099586]
[-24.51051140 29.02524376]
[-11.38684177 36.28948975]
[1.73682797 43.55373764]
[14.86049747 50.81798553]
[27.98416710 58.08223343]
[41.10783768 65.34648132]
[54.23150635 72.61072540]
[67.35517883 79.87497711]
[82.23745728 79.26912689]
[90.56433868 92.72177124]
[91.52131653 82.19724274]
[100.68305206 72.48767090]
[109.32363129 60.22633743]
[110.94842529 44.48878479]
[124.60446930 38.54221344]
[126.22926331 22.80465889]
[139.88531494 16.85808754]
[148.52589417 4.59675264]
[157.16647339 -7.66458225]
[165.80705261 -19.92591667]
[174.44763184 -32.18725204]
[183.08822632 -44.44858932]
[181.77772522 -60.43802643]
[193.55995178 -71.32648468]
[209.39659119 -68.76127625]
[217.13912964 -54.71020126]
[210.84814453 -39.95204926]
[195.34954834 -35.80800629]
[186.70896912 -23.54667091]
[178.06838989 -11.28533554]
[169.42781067 0.97599983]
[160.78723145 13.23733521]
[152.14663696 25.49867058]
[151.13987732 40.35921097]
[136.86579895 47.18279648]
[135.85903931 62.04333878]
[121.58496857 68.86692047]
[112.94438934 81.12825775]
[118.99591064 94.85337830]
[133.87626648 96.74412537]
[148.75663757 98.63487244]
[161.17420959 89.23053741]
[176.23808289 91.36000061]
[185.12715149 103.25622559]
[200.00750732 105.14697266]
[214.88786316 107.03771210]
[225.56562805 99.76229095]
[237.93960571 101.66548920]
[245.43997192 111.18366241]
[260.28378296 113.34275055]
[275.12756348 115.50184631]
[285.86343384 104.29822540]
[301.14016724 101.57782745]
[315.08358765 108.38669586]
[322.33215332 122.10668182]
[320.09863281 137.46217346]
[309.24188232 148.54866028]
[293.93652344 151.10317993]
[280.06777954 144.14344788]
[272.96847534 130.34564209]
[258.12469482 128.18655396]
[243.28088379 126.02745819]
[227.37220764 133.40065002]
[212.99711609 121.91807556]
[198.11676025 120.02732849]
[183.23640442 118.13658142]
[171.65469360 127.43172455]
[156.53695679 125.72621155]
[146.86589050 113.51522827]
[131.98553467 111.62448120]
[117.10517120 109.73374176]
[105.67273712 119.44453430]
[112.90677643 133.51504517]
[104.71503448 145.95468140]
[104.17350006 160.94490051]
[103.63195801 175.93511963]
[103.09042358 190.92535400]
[102.54888916 205.91557312]
[109.78292084 219.98608398]
[101.59118652 232.42572021]
[101.04964447 247.41593933]
[100.50811005 262.40615845]
[109.16277313 250.15476990]
[122.00160980 242.39820862]
[136.87278748 240.43650818]
[151.28382874 244.59846497]
[162.81938171 254.18652344]
[169.54606628 267.59368896]
[170.33645630 282.57284546]
[165.05805969 296.61343384]
[154.59558105 307.36224365]
[140.70256042 313.01766968]
[125.70751953 312.63186646]
[112.12369537 306.26953125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[15 161]
[16 160]
[17 159]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[25 151]
[26 89]
[28 87]
[29 86]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[35 80]
[36 79]
[39 77]
[40 76]
[41 75]
[43 73]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[91 117]
[92 116]
[94 114]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[118 150]
[119 149]
[120 148]
[123 145]
[124 144]
[125 143]
[128 141]
[129 140]
[130 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
