%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUCGCCAGGCCGAGAGUGGGCGUGGCCGACGUGGGGUGGGUAGCAGCCGACCGAGUCGGACCGGCCAGUUGGGCGCGCUUCCGGGUGUCACCUCCAGAGGGCGCCGGCUGCGGAGCCGCCCUCAGAGUCGCGAGGCCGGACGCAGCGCGGCGCCGCCCCACUCGCCCCAGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[127.25011444 126.44982147]
[119.61422729 133.25091553]
[110.29841614 137.85836792]
[99.93012238 139.86315918]
[89.23439026 139.03501892]
[78.98313141 135.34498596]
[70.63605499 147.80798340]
[62.28897858 160.27098083]
[53.94189835 172.73397827]
[52.69115448 188.50566101]
[39.18012238 194.77473450]
[30.83304405 207.23773193]
[22.48596573 219.70072937]
[27.01899338 234.66688538]
[20.82393646 249.02499390]
[6.82591391 255.99560547]
[-8.36563778 252.28739929]
[-17.57773209 239.65129089]
[-16.46069908 224.05364990]
[-5.54196835 212.85922241]
[10.02297020 211.35365295]
[18.37004852 198.89065552]
[26.71712685 186.42765808]
[27.37083244 171.54740906]
[41.47890472 164.38690186]
[49.82598114 151.92390442]
[58.17306137 139.46090698]
[66.52014160 126.99790955]
[59.28470993 113.85832977]
[44.28979111 114.24880981]
[29.29487610 114.63929749]
[14.29995918 115.02978516]
[7.93017626 125.10587311]
[-2.41303658 130.78672791]
[-14.09355736 130.75691223]
[-24.19778061 125.13995361]
[-30.26139069 115.43855286]
[-45.26082611 115.30837250]
[-60.26026154 115.17819977]
[-74.12705994 122.79544830]
[-86.78670502 114.94799042]
[-101.78614044 114.81781006]
[-116.78557587 114.68763733]
[-130.78404236 123.23017883]
[-145.04981995 115.14194489]
[-144.90750122 98.74340820]
[-130.50349426 90.90399170]
[-116.65540314 99.68820190]
[-101.65596771 99.81837463]
[-86.65653229 99.94855499]
[-73.86259460 92.32199097]
[-60.13008499 100.17876434]
[-45.13065338 100.30893707]
[-30.13121605 100.43911743]
[-17.89763260 86.84714508]
[0.70408553 86.47993469]
[13.90947437 100.03486633]
[28.90439034 99.64437866]
[43.89930725 99.25389862]
[58.89422226 98.86341095]
[67.79632568 76.77320099]
[86.91520691 64.01470947]
[109.06752777 64.25741577]
[126.53776550 76.48178864]
[139.61405945 69.13260651]
[152.69035339 61.78342056]
[165.76664734 54.43423080]
[170.00315857 42.23301315]
[181.06787109 36.38601685]
[192.76033020 39.55176163]
[205.96220398 32.43063354]
[219.16407776 25.30950546]
[232.36596680 18.18837929]
[245.56784058 11.06725121]
[258.76971436 3.94612432]
[264.85742188 -2.90095782]
[272.26309204 -3.18177056]
[285.58657837 -10.07269382]
[298.91006470 -16.96361732]
[298.83355713 -30.96601295]
[304.77456665 -43.57265854]
[315.51980591 -52.34310913]
[328.93237305 -55.60685349]
[342.37637329 -52.78126144]
[353.23504639 -44.47466660]
[366.67611694 -51.13330841]
[380.11721802 -57.79195404]
[393.55828857 -64.45059204]
[406.99935913 -71.10923767]
[403.48703003 -74.66609955]
[400.81695557 -79.41725159]
[399.29046631 -85.15958405]
[399.16076660 -91.62306976]
[402.76992798 -106.18238831]
[406.37911987 -120.74171448]
[401.32015991 -136.34104919]
[412.49960327 -148.33906555]
[428.41696167 -144.39323425]
[432.69784546 -128.56268311]
[420.93844604 -117.13253784]
[417.32925415 -102.57321167]
[413.72009277 -88.01389313]
[424.28054810 -77.36136627]
[438.87066650 -80.84405518]
[453.46075439 -84.32675171]
[468.05084229 -87.80944061]
[482.64093018 -91.29212952]
[497.23104858 -94.77481842]
[511.79034424 -98.38399506]
[526.31781006 -102.11939240]
[540.84527588 -105.85478210]
[555.37274170 -109.59017181]
[569.90014648 -113.32556152]
[584.42761230 -117.06095123]
[589.42871094 -126.75823212]
[598.75695801 -131.98146057]
[609.19958496 -131.20945740]
[617.31011963 -124.93998718]
[631.95843506 -128.16893005]
[646.60675049 -131.39787292]
[658.41784668 -141.92443848]
[672.51232910 -137.10824585]
[687.16064453 -140.33717346]
[701.80902100 -143.56611633]
[716.45733643 -146.79505920]
[722.53826904 -161.07099915]
[735.86627197 -169.01730347]
[751.31646729 -167.57847595]
[762.94799805 -157.30775452]
[766.28820801 -142.15446472]
[760.05279541 -127.94533539]
[746.63940430 -120.14407349]
[731.20568848 -121.75042725]
[719.68627930 -132.14671326]
[705.03796387 -128.91778564]
[690.38958740 -125.68883514]
[675.74127197 -122.45989990]
[664.97790527 -112.16428375]
[649.83569336 -116.74952698]
[635.18737793 -113.52059174]
[620.53900146 -110.29164886]
[607.29138184 -96.22813416]
[588.16302490 -102.53350067]
[573.63555908 -98.79811096]
[559.10809326 -95.06272125]
[544.58062744 -91.32733154]
[530.05322266 -87.59193420]
[515.52575684 -83.85654449]
[509.81518555 -79.13295746]
[500.71371460 -80.18472290]
[486.12362671 -76.70203400]
[471.53353882 -73.21934509]
[456.94345093 -69.73665619]
[442.35333252 -66.25395966]
[427.76324463 -62.77127457]
[413.65798950 -57.66816330]
[400.21691895 -51.00952148]
[386.77584839 -44.35087967]
[373.33477783 -37.69223404]
[359.89370728 -31.03359222]
[359.26553345 -14.89923668]
[350.54275513 -1.20020545]
[336.02221680 6.28040218]
[319.61676025 5.42045879]
[305.80099487 -3.64013433]
[292.47750854 3.25078869]
[279.15402222 10.14171219]
[265.89083862 17.14800072]
[252.68896484 24.26912880]
[239.48709106 31.39025497]
[226.28521729 38.51138306]
[213.08332825 45.63251114]
[199.88145447 52.75363922]
[191.50601196 68.16194916]
[173.11582947 67.51052856]
[160.03953552 74.85971069]
[146.96324158 82.20890045]
[133.88694763 89.55808258]
[136.07043457 98.86136627]
[135.70152283 108.57778168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 28]
[7 27]
[8 26]
[9 25]
[11 23]
[12 22]
[13 21]
[29 60]
[30 59]
[31 58]
[32 57]
[37 54]
[38 53]
[39 52]
[41 50]
[42 49]
[43 48]
[64 178]
[65 177]
[66 176]
[67 175]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 168]
[77 167]
[78 166]
[79 165]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[93 102]
[94 101]
[95 100]
[103 155]
[104 154]
[105 153]
[106 152]
[107 151]
[108 150]
[109 148]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[118 141]
[119 140]
[120 139]
[122 137]
[123 136]
[124 135]
[125 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
