%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAACAAACUUCAGAAGGAGGAGAGACACCGGGCCCAGGGCACCCUCGCGGGCGGACCCAACCAGUGAGGGCCUGCAGCCGGCCGGCCAGGGCAGCGGCAGGCGCGGCCCGGACCUACGGGAGGAAGCCCCGAGCCCUCGGCGGGCUGCGAGCGACUCCCCGGCG\
) } def
/len { sequence length } bind def

/coor [
[79.08945465 214.71321106]
[77.89013672 227.40711975]
[73.86901855 239.49769592]
[67.23590851 250.36653137]
[58.33410645 259.45861816]
[47.62263870 266.31069946]
[35.65260696 270.57489014]
[23.03880501 272.03634644]
[10.42816448 270.62408447]
[-1.53343344 266.41430664]
[-9.79352379 278.93515015]
[-18.05361366 291.45596313]
[-26.31370354 303.97677612]
[-26.74938393 320.37014771]
[-41.29134369 327.95059204]
[-54.98006058 318.92004395]
[-53.73375702 302.56832886]
[-38.83452225 295.71667480]
[-30.57443237 283.19586182]
[-22.31434250 270.67504883]
[-14.05425262 258.15423584]
[-25.24529076 244.89340210]
[-31.84827995 228.82832336]
[-33.22001648 211.49620056]
[-29.21840286 194.55895996]
[-20.21708679 179.64392090]
[-7.07059860 168.18739319]
[8.96676445 161.29641724]
[26.36060715 159.64175415]
[43.44323730 163.39262390]
[50.73868179 150.28627014]
[58.03412247 137.17991638]
[65.32956696 124.07355499]
[72.62500763 110.96720123]
[60.07778549 119.18713379]
[46.10995483 113.71907043]
[42.47805023 99.16539764]
[52.23899078 87.77575684]
[67.17720032 89.13668823]
[54.57924271 80.99472809]
[41.98128128 72.85277557]
[29.38332558 64.71082306]
[22.74136353 63.99126434]
[18.17083549 60.52364349]
[16.47264290 56.01815033]
[4.18985939 47.40808487]
[-8.09292412 38.79801941]
[-20.37570763 30.18795204]
[-32.65848923 21.57788658]
[-44.94127274 12.96782017]
[-57.61525726 4.94471836]
[-70.65241241 -2.47367644]
[-83.68956757 -9.89207172]
[-100.07607269 -9.24822044]
[-108.59688568 -23.25992012]
[-100.48652649 -37.51313782]
[-84.08824158 -37.34537888]
[-76.27117157 -22.92922592]
[-63.23401642 -15.51083183]
[-50.19686127 -8.09243679]
[-51.34576035 -23.04837227]
[-40.50144577 -33.41181183]
[-25.61295700 -31.58620834]
[-17.59375954 -18.90975571]
[-22.32204247 -4.67446947]
[-36.33120728 0.68503720]
[-24.04842377 9.29510307]
[-11.76564121 17.90516853]
[0.51714224 26.51523590]
[12.79992580 35.12530136]
[25.08270836 43.73536682]
[37.52528000 52.11286163]
[50.12323761 60.25481796]
[62.72119904 68.39677429]
[75.31915283 76.53872681]
[112.40058899 84.51198578]
[125.83542633 77.84077454]
[139.27026367 71.16956329]
[152.70510864 64.49835205]
[166.13993835 57.82713699]
[179.57478333 51.15592575]
[188.49385071 38.08837509]
[203.33424377 39.35791016]
[216.76908875 32.68669891]
[230.20393372 26.01548576]
[243.63876343 19.34427261]
[246.56910706 14.92116070]
[250.51867676 12.34969902]
[254.59960938 11.70647144]
[258.02490234 12.69986343]
[271.81466675 6.79707479]
[285.60440063 0.89428693]
[299.39413452 -5.00850105]
[313.18389893 -10.91128922]
[318.71224976 -22.59560776]
[330.35342407 -27.21652412]
[341.64230347 -22.79629326]
[355.54061890 -28.43864059]
[369.43896484 -34.08098984]
[373.84069824 -39.10674667]
[379.30368042 -40.85890198]
[383.96777344 -39.66329956]
[398.06851196 -44.77886581]
[412.16925049 -49.89443588]
[414.87939453 -66.18478394]
[425.36523438 -78.82125092]
[440.70019531 -84.42493439]
[456.67828369 -81.55937958]
[468.96743774 -71.09743500]
[482.96948242 -76.47734833]
[496.97149658 -81.85725403]
[510.97351074 -87.23716736]
[517.16735840 -101.77716827]
[531.85943604 -107.60120392]
[546.33312988 -101.25397491]
[552.00146484 -86.50117493]
[545.50158691 -72.09538269]
[530.68969727 -66.58329773]
[516.35339355 -73.23514557]
[502.35140991 -67.85523987]
[488.34939575 -62.47532654]
[474.34735107 -57.09541702]
[473.10278320 -43.47216797]
[466.06826782 -31.66222382]
[454.57162476 -24.00640106]
[440.83135986 -22.05074883]
[427.52880859 -26.23464012]
[417.28482056 -35.79369354]
[403.18408203 -30.67812347]
[389.08334351 -25.56255531]
[375.08132935 -20.18264580]
[361.18298340 -14.54029942]
[347.28463745 -8.89795208]
[337.29235840 5.50623703]
[319.08666992 2.87845659]
[305.29693604 8.78124523]
[291.50720215 14.68403244]
[277.71743774 20.58682060]
[263.92770386 26.48960876]
[250.30998230 32.77911377]
[236.87513733 39.45032501]
[223.44030762 46.12154007]
[210.00546265 52.79275131]
[202.04734802 65.38313293]
[186.24600220 64.59076691]
[172.81115723 71.26197815]
[159.37631226 77.93318939]
[145.94148254 84.60440063]
[132.50663757 91.27561951]
[119.07180023 97.94683075]
[114.22238159 112.14130402]
[120.76693726 125.63829803]
[127.31148529 139.13529968]
[139.66264343 150.74929810]
[131.92166138 165.83285522]
[115.28466797 162.56993103]
[113.81449127 145.67984009]
[107.26994324 132.18284607]
[100.72538757 118.68585968]
[85.73136139 118.26264191]
[78.43592072 131.36900330]
[71.14048004 144.47535706]
[63.84503555 157.58171082]
[56.54959488 170.68806458]
[65.83882904 179.47288513]
[72.90919495 190.11479187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 21]
[11 20]
[12 19]
[13 18]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[39 75]
[40 74]
[41 73]
[42 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 60]
[52 59]
[53 58]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[83 143]
[84 142]
[85 141]
[86 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[97 133]
[98 132]
[99 131]
[102 130]
[103 129]
[104 128]
[109 122]
[110 121]
[111 120]
[112 119]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
