%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUCGCGAGCGCUGUGGCGGCCCUGAAAGGAUAUAGGCCGUGGAGGGAAGGGGGCGGGCAGACGGCAUAGGAAGGCGCCGGAAGUGGUCCCGCAGAGGCGGGGUGGGAGUGGGGCUCCCGAGGCAGUGCAGUUGGCUGUAGCUGGGCGCCUCGGUUAGGUGCGCUGUCAGUCCUUUCCGAGUGCCUGGCCCAGUCUCUCCCGCCUCGGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[-62.12831497 680.49383545]
[-62.77959442 665.50799561]
[-70.89854431 659.31256104]
[-74.34171295 649.46484375]
[-71.74532318 639.13433838]
[-63.73192215 631.78784180]
[-66.97035217 625.14825439]
[-63.84207153 616.57110596]
[-63.84207153 601.57110596]
[-63.84207153 586.57110596]
[-63.84207153 571.57110596]
[-66.98403931 564.88531494]
[-63.73192215 556.35430908]
[-63.51476669 541.35589600]
[-70.24829865 538.05297852]
[-76.85443878 551.51989746]
[-90.32128906 544.91357422]
[-83.71537018 531.44702148]
[-90.44890594 528.14410400]
[-102.17637634 537.49645996]
[-113.90384674 546.84875488]
[-125.63132477 556.20111084]
[-137.35879517 565.55346680]
[-149.08625793 574.90582275]
[-145.21405029 589.63421631]
[-147.67358398 604.66320801]
[-156.03874207 617.38891602]
[-168.86022949 625.60656738]
[-183.91662598 627.89239502]
[-198.59931946 623.85028076]
[-210.36445618 614.18066406]
[-217.17364502 600.55883789]
[-217.84715271 585.34484863]
[-212.26831055 571.17456055]
[-201.40365601 560.50311279]
[-187.13557434 555.17944336]
[-171.93609619 556.12585449]
[-158.43861389 563.17834473]
[-146.71113586 553.82598877]
[-134.98367310 544.47363281]
[-123.25619507 535.12127686]
[-111.52872467 525.76898193]
[-99.80125427 516.41662598]
[-90.61965942 504.55496216]
[-84.50538635 490.85769653]
[-78.39111328 477.16040039]
[-72.27684021 463.46310425]
[-66.16257477 449.76583862]
[-60.04829788 436.06854248]
[-53.93402481 422.37124634]
[-59.48161697 408.59591675]
[-53.47599792 394.61782837]
[-38.98954773 388.89239502]
[-32.87527466 375.19512939]
[-26.76100159 361.49783325]
[-28.63846779 346.72201538]
[-15.94793224 337.27423096]
[-9.83366013 323.57693481]
[-3.71938753 309.87963867]
[2.39488506 296.18237305]
[8.50915718 282.48507690]
[14.62343025 268.78778076]
[9.07584000 255.01245117]
[15.08145809 241.03436279]
[29.56791115 235.30894470]
[35.68218231 221.61164856]
[41.79645538 207.91436768]
[41.65260696 200.52850342]
[48.09967041 194.06404114]
[46.43630600 179.26260376]
[59.26228714 169.99951172]
[65.57421112 156.39218140]
[71.88613892 142.78485107]
[78.19806671 129.17750549]
[67.89956665 124.58786774]
[58.69404984 116.41221619]
[51.79667664 104.97129059]
[48.30933762 90.98487854]
[49.09373093 75.52832794]
[39.48893738 64.00669861]
[29.88414001 52.48507309]
[20.27934265 40.96344376]
[4.70899343 35.81599426]
[1.64704585 19.70523643]
[14.24336910 9.20453835]
[29.53994560 15.11611748]
[31.80097008 31.35864830]
[41.40576553 42.88027573]
[51.01056290 54.40190125]
[60.61536026 65.92353058]
[73.73056030 58.64399719]
[69.03338623 44.39841843]
[64.33621979 30.15283585]
[59.63904572 15.90725517]
[54.94187546 1.66167355]
[42.35374451 -8.84884548]
[45.42825699 -24.95721054]
[61.00261688 -30.09251595]
[73.05525970 -18.97200203]
[69.18745422 -3.03549719]
[73.88462830 11.21008396]
[78.58180237 25.45566559]
[83.27896881 39.70124817]
[87.97614288 53.94682693]
[102.92927551 52.75364685]
[117.88108826 51.56058121]
[120.25977325 36.75038910]
[122.63845825 21.94019508]
[125.01714325 7.12999964]
[127.39582825 -7.68019485]
[129.77450562 -22.49038887]
[132.15319824 -37.30058289]
[128.69511414 -53.89811325]
[143.68672180 -61.81570435]
[155.44497681 -49.60178375]
[146.96339417 -34.92189789]
[144.58470154 -20.11170387]
[142.20602417 -5.30151033]
[139.82733154 9.50868416]
[137.44865417 24.31887817]
[135.06996155 39.12907410]
[132.69128418 53.93926620]
[132.07980347 66.40282440]
[128.69721985 77.56963348]
[142.16427612 70.96372223]
[155.63134766 64.35781097]
[169.09841919 57.75189590]
[182.56549072 51.14598465]
[196.03256226 44.54006958]
[209.49961853 37.93415833]
[222.96669006 31.32824707]
[236.43376160 24.72233391]
[245.41615295 11.69823551]
[260.25021362 13.03980255]
[273.71728516 6.43389082]
[287.18435669 -0.17202158]
[300.65142822 -6.77793407]
[314.11849976 -13.38384628]
[327.58557129 -19.98975754]
[341.05264282 -26.59567070]
[346.25009155 -41.27981186]
[360.00173950 -47.78730392]
[373.96878052 -42.74181366]
[387.43585205 -49.34772873]
[393.96447754 -64.00229645]
[409.52801514 -67.89536285]
[422.18743896 -58.04048538]
[422.23153687 -41.99749374]
[409.62646484 -32.07319260]
[394.04174805 -35.88065720]
[380.57470703 -29.27474594]
[376.01522827 -15.14156437]
[362.45181274 -8.25038624]
[347.65853882 -13.12860298]
[334.19146729 -6.52269030]
[320.72439575 0.08322196]
[307.25732422 6.68913412]
[293.79028320 13.29504681]
[280.32321167 19.90095901]
[266.85614014 26.50687027]
[258.83700562 39.05847168]
[243.03967285 38.18940353]
[229.57260132 44.79531479]
[216.10552979 51.40122604]
[202.63847351 58.00713730]
[189.17140198 64.61305237]
[175.70433044 71.21896362]
[162.23725891 77.82487488]
[148.77020264 84.43078613]
[135.30313110 91.03669739]
[133.05442810 115.29888916]
[116.01303864 132.71443176]
[91.80539703 135.48944092]
[85.49347687 149.09677124]
[79.18154907 162.70410156]
[72.86962128 176.31144714]
[74.08151245 192.08616638]
[61.70700455 200.37596130]
[55.49374390 214.02864075]
[49.37947083 227.72592163]
[43.26519775 241.42321777]
[48.67552185 256.03027344]
[42.27965546 269.83416748]
[28.32071686 274.90206909]
[22.20644379 288.59936523]
[16.09217262 302.29663086]
[9.97789955 315.99392700]
[3.86362696 329.69122314]
[-2.25064564 343.38848877]
[-0.81051171 359.14401245]
[-13.06371403 367.61209106]
[-19.17798615 381.30938721]
[-25.29225922 395.00668335]
[-19.88193512 409.61373901]
[-26.27779961 423.41763306]
[-40.23674011 428.48553467]
[-46.35101318 442.18280029]
[-52.46528625 455.88009644]
[-58.57955551 469.57739258]
[-64.69383240 483.27468872]
[-70.80810547 496.97195435]
[-76.92237091 510.66925049]
[-58.63451004 517.61193848]
[-48.51633835 541.57305908]
[-48.73349380 556.57147217]
[-48.84207153 571.57110596]
[-48.84207153 586.57110596]
[-48.84207153 601.57110596]
[-48.84207153 616.57110596]
[-48.73349380 631.57067871]
[-37.63402557 648.40167236]
[-47.79373932 664.85668945]
[-47.14245987 679.84259033]
[-37.88237762 693.37707520]
[-45.21657562 708.04479980]
[-61.60025787 708.75677490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[6 210]
[8 209]
[9 208]
[10 207]
[11 206]
[13 205]
[14 204]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[44 202]
[45 201]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[53 193]
[54 192]
[55 191]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[65 181]
[66 180]
[67 179]
[69 178]
[71 176]
[72 175]
[73 174]
[74 173]
[79 90]
[80 89]
[81 88]
[82 87]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[124 170]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[132 162]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
