%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUCUGGGGUUCUGGCUGGGCGGGGCCUGGAACCUUCUGGGAGUCACCAUUGACUGGCUGCAGCCACCGGCUUCCCAGCAAGGAUGUCCUCUUCUGUAGGAAAAUGGGGACGUCGGGAGCAUUCUCUGGACAGCAGGAGAUGCAUGUCGACAGGCUGGCCCUGCCUCUUCCCACCCCAGAGUG\
) } def
/len { sequence length } bind def

/coor [
[79.19868469 523.98663330]
[71.47781372 509.51873779]
[80.37544250 495.74322510]
[80.62878418 480.74536133]
[80.88212585 465.74749756]
[81.13546753 450.74966431]
[81.38881683 435.75180054]
[81.64215851 420.75393677]
[81.89550018 405.75607300]
[82.14884186 390.75820923]
[82.40218353 375.76034546]
[82.65552521 360.76248169]
[74.90338898 354.06445312]
[72.06960297 343.99063110]
[75.32653046 333.81445312]
[83.82540131 326.98236084]
[84.58513641 312.00161743]
[74.44055939 301.15618896]
[74.99763489 285.95275879]
[86.44208527 275.38574219]
[87.07528687 260.39910889]
[87.58189392 245.40765381]
[88.08850861 230.41621399]
[88.59512329 215.42477417]
[89.10173035 200.43333435]
[89.60834503 185.44189453]
[90.11495972 170.45045471]
[90.62156677 155.45899963]
[91.12818146 140.46755981]
[80.60083008 136.60607910]
[71.49463654 130.06289673]
[64.47670746 121.31733704]
[60.06116486 111.01010132]
[58.57147980 99.89628601]
[60.11679077 88.79006195]
[46.64972305 82.18415070]
[33.18265533 75.57823944]
[19.71558762 68.97232819]
[6.19321251 62.48038101]
[-7.38350487 56.10286331]
[-20.96022224 49.72534561]
[-34.53694153 43.34782410]
[-48.11365891 36.97030640]
[-61.69037628 30.59278870]
[-75.26708984 24.21527100]
[-85.29428864 28.50056648]
[-95.80619812 26.58700752]
[-103.36231995 19.34703255]
[-105.62568665 9.35520935]
[-118.97926331 2.52278757]
[-133.85281372 7.15045738]
[-147.29789734 0.03118329]
[-151.61802673 -14.17699051]
[-164.97160339 -21.00941277]
[-180.78134155 -20.40727615]
[-188.58734131 -33.09252548]
[-201.94091797 -39.92494583]
[-215.29449463 -46.75737000]
[-231.63627625 -45.38682556]
[-240.77061462 -59.00651550]
[-233.30088806 -73.60566711]
[-216.91131592 -74.16592407]
[-208.46208191 -60.11094666]
[-195.10850525 -53.27852249]
[-181.75492859 -46.44610214]
[-166.90031433 -47.53693771]
[-158.13917542 -34.36298752]
[-144.78559875 -27.53056717]
[-130.73532104 -32.33943939]
[-117.09556580 -25.60062027]
[-112.14684296 -10.83078957]
[-98.79325867 -3.99836731]
[-79.62075043 -6.40927076]
[-68.88957214 10.63855267]
[-55.31285858 17.01607132]
[-41.73614120 23.39358902]
[-28.15942192 29.77110863]
[-14.58270454 36.14862442]
[-1.00598681 42.52614594]
[12.57073116 48.90366364]
[19.97787094 48.90180588]
[26.32150078 55.50526047]
[39.78856659 62.11117172]
[53.25563431 68.71708679]
[66.72270203 75.32299805]
[79.27840424 62.33696365]
[96.74005890 55.57394409]
[116.08961487 56.79471588]
[119.84940338 42.27355957]
[123.60919189 27.75240326]
[127.36898041 13.23124695]
[131.12876892 -1.28991032]
[134.88854980 -15.81106663]
[138.27928162 -30.42280960]
[141.29875183 -45.11575699]
[144.31823730 -59.80870819]
[147.33770752 -74.50165558]
[144.60353088 -91.23368073]
[159.92477417 -98.49288940]
[171.14163208 -85.77996063]
[162.03065491 -71.48217773]
[159.01118469 -56.78923035]
[155.99169922 -42.09627914]
[152.97222900 -27.40333176]
[154.61463928 -24.25997543]
[154.80320740 -20.16007996]
[153.10293579 -15.80163383]
[149.40971375 -12.05127907]
[145.64993286 2.46987772]
[141.89013672 16.99103355]
[138.13035583 31.51219177]
[134.37055969 46.03334808]
[130.61077881 60.55450439]
[140.94528198 71.42639923]
[155.63822937 68.40692139]
[170.33117676 65.38744354]
[185.02412415 62.36796188]
[199.71707153 59.34848404]
[211.67724609 48.99161530]
[225.70149231 54.00854874]
[240.36842346 50.86509705]
[255.00828552 47.59789276]
[269.64813232 44.33069229]
[284.28799438 41.06348801]
[298.92785645 37.79628372]
[310.71139526 27.23888779]
[324.81838989 32.01824570]
[339.45822144 28.75104332]
[354.09808350 25.48384094]
[368.73794556 22.21663666]
[378.51797485 9.49930573]
[394.56042480 9.36059380]
[404.55889893 21.90690804]
[400.84344482 37.51379013]
[386.26419067 44.20897675]
[372.00515747 36.85649109]
[357.36529541 40.12369537]
[342.72543335 43.39089966]
[328.08557129 46.65810394]
[317.34918213 56.98180771]
[302.19503784 52.43613815]
[287.55520630 55.70334244]
[272.91534424 58.97054672]
[258.27548218 62.23775101]
[243.63563538 65.50495148]
[237.77937317 70.04037476]
[228.72097778 68.70149994]
[217.81173706 78.84239960]
[202.73655701 74.04143524]
[188.04360962 77.06091309]
[173.35064697 80.08039093]
[158.65769958 83.09986877]
[143.96475220 86.11934662]
[145.31756592 99.19515228]
[142.92808533 111.89461517]
[137.11927795 123.18722534]
[128.48617554 132.19357300]
[117.83721924 138.25358582]
[106.11962128 140.97418213]
[105.61301422 155.96562195]
[105.10639954 170.95706177]
[104.59978485 185.94850159]
[104.09317780 200.93994141]
[103.58656311 215.93138123]
[103.07994843 230.92283630]
[102.57334137 245.91427612]
[102.06672668 260.90570068]
[104.90927887 269.61013794]
[101.42283630 276.14547729]
[111.73951721 287.81610107]
[110.75563049 302.99789429]
[99.56588745 312.76135254]
[98.80615234 327.74209595]
[108.80081940 345.23190308]
[97.65338135 361.01583862]
[97.40003967 376.01370239]
[97.14669800 391.01156616]
[96.89335632 406.00939941]
[96.64001465 421.00726318]
[96.38667297 436.00512695]
[96.13333130 451.00299072]
[95.87998962 466.00085449]
[95.62664795 480.99871826]
[95.37330627 495.99658203]
[103.80060577 510.06472778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[16 173]
[17 172]
[20 169]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[35 85]
[36 84]
[37 83]
[38 82]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[49 72]
[50 71]
[53 68]
[54 67]
[56 65]
[57 64]
[58 63]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[94 104]
[95 103]
[96 102]
[97 101]
[114 153]
[115 152]
[116 151]
[117 150]
[118 149]
[120 147]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[127 139]
[128 138]
[129 137]
[130 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
