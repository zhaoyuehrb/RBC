%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGGCGGCGGCGCGGGCUGAGUGCGGCCGCGCGGGAGUCCGCGGCUGGCGCGGCCCGAGCGGGGACCCGGCGGCUCGCCAGGCGGCGGCCGAGGCGGGGCGGGCCGGCCCGGGGCCGAGGGCCGGUGGCCGAGGCCGGAGGGCCGCGGCGGGCGGCGGCCGAGGCGGCUCCGGCCAGGGCCGGGCCGGGGGCCGGGGGGCGGCGGCGGGCAGGCGGCCGCGUCGGCCGGGGCCGGGACG\
) } def
/len { sequence length } bind def

/coor [
[6.29573202 860.57879639]
[4.55433798 875.47735596]
[11.54300499 890.31280518]
[1.96848440 903.62670898]
[-14.31977749 901.72290039]
[-20.56581306 886.55981445]
[-10.34423733 873.73596191]
[-8.60284328 858.83740234]
[-22.56984329 843.88977051]
[-20.89227676 823.20495605]
[-4.23184299 810.34246826]
[-3.26289058 795.37377930]
[-2.29393840 780.40509033]
[-1.32498622 765.43640137]
[-8.22398567 752.23596191]
[0.38860217 738.96441650]
[-6.51039696 725.76391602]
[2.10219049 712.49237061]
[3.07114291 697.52368164]
[4.04009485 682.55499268]
[5.00904751 667.58630371]
[5.97799969 652.61767578]
[6.94695187 637.64898682]
[4.24844360 630.78594971]
[8.02642059 622.49346924]
[9.18880749 607.53857422]
[10.35119343 592.58367920]
[11.51357937 577.62878418]
[12.67596626 562.67388916]
[13.83835220 547.71899414]
[15.00073910 532.76409912]
[16.16312408 517.80920410]
[17.32551193 502.85430908]
[4.53337622 495.02096558]
[-8.25875854 502.85430908]
[-21.05089378 510.68765259]
[-33.84302902 518.52099609]
[-41.19298935 533.18078613]
[-57.57742691 533.87524414]
[-66.14144135 519.88989258]
[-58.07509995 505.61169434]
[-41.67637253 505.72885132]
[-28.88423729 497.89550781]
[-16.09210205 490.06216431]
[-3.29996800 482.22882080]
[5.34334707 469.96942139]
[0.38494161 455.92437744]
[10.79160213 444.00747681]
[13.87232971 429.32727051]
[16.95305634 414.64703369]
[11.99465179 400.60198975]
[22.40131187 388.68508911]
[25.48204041 374.00488281]
[28.56276703 359.32464600]
[23.60436058 345.27960205]
[34.01102066 333.36270142]
[37.09175110 318.68249512]
[40.17247772 304.00225830]
[43.25320435 289.32202148]
[34.77333832 279.63693237]
[33.39283752 266.64279175]
[39.83737564 255.05223083]
[51.95359421 249.19848633]
[55.22385025 234.55931091]
[58.49410629 219.92013550]
[50.14015579 210.12623596]
[48.92776108 197.11534119]
[55.52160263 185.60905457]
[67.71248627 179.91242981]
[71.17172241 165.31675720]
[74.63095856 150.72108459]
[78.09020233 136.12541199]
[81.54943848 121.52974701]
[85.00867462 106.93407440]
[80.52121735 92.62104797]
[65.07946777 89.17678070]
[60.76165009 74.92175293]
[49.58856201 64.91365051]
[38.41547394 54.90554810]
[27.24238777 44.89744568]
[16.06929970 34.88934326]
[4.89621305 24.88124084]
[-13.21633816 21.50771141]
[-18.00676918 4.61576700]
[-29.30830765 -5.24705315]
[-40.60984421 -15.10987377]
[-56.79710770 -17.73752785]
[-62.36135483 -33.16384125]
[-51.57856369 -45.51955032]
[-35.54114914 -42.09415436]
[-30.74702454 -26.41141319]
[-19.44548607 -16.54859161]
[-8.14394760 -6.68577147]
[3.92838573 -7.19625330]
[13.42248344 0.90949214]
[14.90431595 13.70815372]
[26.07740402 23.71625519]
[37.25049210 33.72435760]
[48.42357635 43.73246002]
[59.59666443 53.74056244]
[70.76975250 63.74866486]
[85.41233063 66.47708893]
[90.52931976 81.44795990]
[97.20966339 78.03871155]
[110.57035828 71.22021484]
[117.25070190 67.81096649]
[115.70206451 52.89112473]
[114.15342712 37.97128296]
[112.60478210 23.05143929]
[111.05614471 8.13159561]
[109.50750732 -6.78824711]
[107.95886993 -21.70808983]
[106.41022491 -36.62793350]
[92.91510773 -44.28701019]
[86.52989197 -58.42944717]
[89.70981598 -73.61719513]
[101.23214722 -84.01025391]
[116.66629791 -85.61227417]
[130.07752991 -77.80725861]
[136.30895996 -63.59638214]
[132.96446228 -48.44402313]
[121.33007050 -38.17657089]
[122.87870789 -23.25672913]
[124.42734528 -8.33688641]
[125.97599030 6.58295631]
[127.52462769 21.50279999]
[129.07327271 36.42264175]
[130.62190247 51.34248734]
[132.17054749 66.26232910]
[145.94378662 72.20352173]
[157.85882568 63.09134674]
[169.77386475 53.97916794]
[181.68890381 44.86698914]
[183.91415405 29.44992065]
[196.12750244 20.37860870]
[210.81159973 22.59504128]
[222.72665405 13.48286343]
[234.64169312 4.37068558]
[246.55673218 -4.74149227]
[258.47177124 -13.85367012]
[270.38681030 -22.96584892]
[282.30184937 -32.07802582]
[294.21688843 -41.19020462]
[300.90686035 -58.35672379]
[318.39566040 -59.91515732]
[330.19189453 -69.18061066]
[341.98812866 -78.44606781]
[348.06152344 -93.05513000]
[362.84976196 -94.83198547]
[374.64599609 -104.09744263]
[386.44223022 -113.36289978]
[398.23846436 -122.62834930]
[404.31185913 -137.23741150]
[419.10009766 -139.01426697]
[424.69845581 -154.42823792]
[440.89147949 -157.02008057]
[451.02117920 -144.12351990]
[444.66699219 -129.00544739]
[428.36553955 -127.21802521]
[423.13592529 -113.27169037]
[407.50393677 -110.83210754]
[395.70770264 -101.56665039]
[383.91143799 -92.30120087]
[372.11520386 -83.03574371]
[366.88558960 -69.08940887]
[351.25360107 -66.64982605]
[339.45733643 -57.38436890]
[327.66110229 -48.11891556]
[325.91278076 -36.16294479]
[316.17965698 -28.34580803]
[303.32907104 -29.27516365]
[291.41403198 -20.16298485]
[279.49899292 -11.05080700]
[267.58395386 -1.93862915]
[255.66891479 7.17354918]
[243.75386047 16.28572655]
[231.83882141 25.39790535]
[219.92378235 34.51008224]
[218.21647644 49.26205444]
[206.26274109 58.67283630]
[190.80108643 56.78203201]
[178.88604736 65.89421082]
[166.97100830 75.00638580]
[155.05596924 84.11856842]
[139.15472412 114.25080109]
[114.52426147 121.60607910]
[99.60434723 110.39331055]
[96.14511108 124.98898315]
[92.68587494 139.58465576]
[89.22663116 154.18032837]
[85.76739502 168.77600098]
[82.30815887 183.37167358]
[91.76334381 198.10179138]
[87.70916748 214.78169250]
[73.13327789 223.19039917]
[69.86302185 237.82957458]
[66.59276581 252.46875000]
[76.23759460 267.07540894]
[72.39939880 283.80630493]
[57.93343353 292.40274048]
[54.85270691 307.08297729]
[51.77197647 321.76321411]
[48.69124985 336.44345093]
[53.42930222 351.53851318]
[43.24299622 362.40536499]
[40.16226959 377.08560181]
[37.08153915 391.76583862]
[41.81959152 406.86090088]
[31.63328552 417.72775269]
[28.55255890 432.40798950]
[25.47183037 447.08822632]
[30.20988274 462.18328857]
[20.02357674 473.05014038]
[28.92585945 479.05191040]
[33.97526169 490.25924683]
[32.28040695 504.01669312]
[31.11801910 518.97155762]
[29.95563316 533.92645264]
[28.79324722 548.88134766]
[27.63085938 563.83624268]
[26.46847343 578.79113770]
[25.30608749 593.74603271]
[24.14370155 608.70092773]
[22.98131561 623.65582275]
[21.91562271 638.61791992]
[20.94667053 653.58660889]
[19.97771835 668.55529785]
[19.00876617 683.52398682]
[18.03981400 698.49261475]
[17.07086182 713.46130371]
[23.90055466 727.73248291]
[15.35727406 739.93334961]
[22.18696785 754.20446777]
[13.64368534 766.40539551]
[12.67473316 781.37402344]
[11.70578098 796.34271240]
[10.73682880 811.31140137]
[18.93446350 816.41015625]
[24.68713951 824.09082031]
[27.24348450 833.28021240]
[26.29510498 842.71325684]
[22.01315308 851.10687256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[11 237]
[12 236]
[13 235]
[14 234]
[16 232]
[18 230]
[19 229]
[20 228]
[21 227]
[22 226]
[23 225]
[25 224]
[26 223]
[27 222]
[28 221]
[29 220]
[30 219]
[31 218]
[32 217]
[33 216]
[34 45]
[35 44]
[36 43]
[37 42]
[46 213]
[48 211]
[49 210]
[50 209]
[52 207]
[53 206]
[54 205]
[56 203]
[57 202]
[58 201]
[59 200]
[63 197]
[64 196]
[65 195]
[69 192]
[70 191]
[71 190]
[72 189]
[73 188]
[74 187]
[75 103]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[84 93]
[85 92]
[86 91]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[130 184]
[131 183]
[132 182]
[133 181]
[136 178]
[137 177]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[143 171]
[145 168]
[146 167]
[147 166]
[149 164]
[150 163]
[151 162]
[152 161]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
