%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAGGCUCCAGGGCAGCAGACACCACCCUCUCCGUGCCUGCUGGUGUUGGGCGGCUUGGAGGCUAUGGUUCCUGGGUCCUCGUAGCACAUCCUGGUUCUGGGCCAGGACCUGAAGGAGCCACAGUGAAAGAGUGUUUCUGGAUGUAUCUGAGACAGACGGAGGGAACCCGAGCGUCAUGUUAGGGUGAAGCAGAGGACCUCAGUGCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[90.19004822 116.46181488]
[78.08072662 125.31418610]
[65.97141266 134.16656494]
[53.86209869 143.01893616]
[41.75278091 151.87130737]
[29.64346504 160.72367859]
[17.53414917 169.57603455]
[5.42483330 178.42840576]
[-6.68448257 187.28077698]
[-18.66254234 196.30996704]
[-30.50676537 205.51400757]
[-42.35098648 214.71804810]
[-54.19520950 223.92208862]
[-60.34440231 238.49940491]
[-75.14167786 240.19940186]
[-86.98589325 249.40344238]
[-98.76224518 258.69418335]
[-110.47007751 268.07110596]
[-122.17790985 277.44802856]
[-133.88574219 286.82495117]
[-145.59356689 296.20187378]
[-151.52810669 310.86785889]
[-166.29882812 312.78491211]
[-178.00666809 322.16183472]
[-189.71449280 331.53875732]
[-187.31423950 346.70892334]
[-192.83563232 361.04104614]
[-204.79342651 370.67987061]
[-219.97105408 373.03256226]
[-234.28581238 367.46627808]
[-243.88708496 355.47830200]
[-246.19218445 340.29339600]
[-240.58106995 325.99615479]
[-228.56306458 316.43249512]
[-213.37098694 314.17501831]
[-199.09141541 319.83093262]
[-187.38359070 310.45401001]
[-175.67575073 301.07708740]
[-170.57864380 287.08175659]
[-154.97048950 284.49401855]
[-143.26266479 275.11709595]
[-131.55482483 265.74017334]
[-119.84699249 256.36325073]
[-108.13916016 246.98634338]
[-104.88420105 240.35296631]
[-96.18994141 237.55921936]
[-84.34571838 228.35517883]
[-79.04370117 214.43620300]
[-63.39925385 212.07786560]
[-51.55503082 202.87382507]
[-39.71080780 193.66978455]
[-27.86658478 184.46574402]
[-26.39398003 179.92474365]
[-22.05442238 176.25967407]
[-15.53685284 175.17146301]
[-3.42753720 166.31909180]
[8.68177891 157.46672058]
[20.79109383 148.61434937]
[32.90040970 139.76197815]
[45.00972748 130.90960693]
[57.11904144 122.05724335]
[69.22835541 113.20487213]
[81.33767700 104.35250092]
[85.78404236 90.02665710]
[80.81501770 75.87361145]
[75.84598541 61.72056580]
[63.97399902 51.26272202]
[67.05827332 36.69095230]
[62.08924866 22.53790474]
[57.12021637 8.38485813]
[52.15118790 -5.76818895]
[47.18215942 -19.92123604]
[42.21313095 -34.07428360]
[37.24409866 -48.22732925]
[32.27507019 -62.38037872]
[27.09881210 -76.45895386]
[21.71644020 -90.46002960]
[16.33407021 -104.46110535]
[10.95169830 -118.46218109]
[5.56932735 -132.46325684]
[0.18695593 -146.46432495]
[-5.19541550 -160.46540833]
[-10.78273964 -174.38595581]
[-23.24801254 -184.12902832]
[-21.02423096 -198.85668945]
[-26.81530571 -212.69372559]
[-32.60637665 -226.53076172]
[-45.07165146 -236.27383423]
[-42.84786987 -251.00149536]
[-48.63894272 -264.83853149]
[-63.35552597 -270.60028076]
[-69.61090851 -285.11392212]
[-63.69388580 -299.76876831]
[-49.11492157 -305.87036133]
[-34.52345657 -299.79870605]
[-28.57634926 -285.15606689]
[-34.80191040 -270.62960815]
[-29.01083755 -256.79257202]
[-16.95978165 -248.03921509]
[-18.76934624 -232.32183838]
[-12.97827244 -218.48480225]
[-7.18719912 -204.64776611]
[4.86385727 -195.89440918]
[3.05429268 -180.17703247]
[7.05305910 -177.56950378]
[9.45749474 -172.42333984]
[8.80565929 -165.84777832]
[14.18803024 -151.84669495]
[19.57040215 -137.84562683]
[24.95277214 -123.84455109]
[30.33514404 -109.84347534]
[35.71751404 -95.84239960]
[41.09988785 -81.84132385]
[45.02038193 -79.11754608]
[47.27270889 -73.90299988]
[46.42811584 -67.34941101]
[51.39714813 -53.19636154]
[56.36617661 -39.04331207]
[61.33520508 -24.89026642]
[66.30423737 -10.73721790]
[71.27326202 3.41582894]
[76.24229431 17.56887627]
[81.21132660 31.72192383]
[92.72789764 41.16744232]
[89.99903107 56.75153351]
[94.96806335 70.90457916]
[99.93709564 85.05763245]
[104.04942322 85.49437714]
[107.91616058 87.04988861]
[111.23662567 89.62227631]
[113.74745178 93.02990723]
[115.24342346 97.02413177]
[129.92773438 100.08535004]
[144.61204529 103.14656067]
[153.64939880 101.83446503]
[159.48872375 106.36199951]
[174.12651062 109.63844299]
[188.76431274 112.91488647]
[203.42575073 116.08380890]
[218.11006165 119.14501953]
[232.79437256 122.20623016]
[247.47868347 125.26744843]
[256.96722412 115.27129364]
[270.05197144 111.29985809]
[283.28475952 114.28797913]
[293.23321533 123.35097504]
[297.37124634 136.04290771]
[312.00906372 139.31935120]
[326.64685059 142.59579468]
[341.28463745 145.87223816]
[355.92242432 149.14868164]
[367.21130371 142.91287231]
[379.33459473 145.94161987]
[385.92657471 156.08250427]
[400.51470947 159.57348633]
[415.10281372 163.06445312]
[429.69091797 166.55543518]
[444.30429077 169.93922424]
[458.94207764 173.21568298]
[473.57986450 176.49212646]
[488.21765137 179.76856995]
[502.81777954 170.13046265]
[519.54174805 173.95936584]
[528.14807129 188.40942383]
[542.83239746 191.47062683]
[558.23126221 185.83084106]
[570.63964844 196.55294800]
[567.29290771 212.60696411]
[551.63385010 217.47789001]
[539.77117920 206.15493774]
[525.08685303 203.09373474]
[515.40295410 211.59181213]
[502.39859009 212.98213196]
[490.79678345 206.53442383]
[484.94119263 194.40635681]
[470.30340576 191.12991333]
[455.66561890 187.85346985]
[441.02783203 184.57702637]
[433.81558228 186.18315125]
[426.19995117 181.14353943]
[411.61184692 177.65257263]
[397.02374268 174.16159058]
[382.43560791 170.67062378]
[365.90536499 176.56570435]
[352.64596558 163.78648376]
[338.00817871 160.51002502]
[323.37039185 157.23358154]
[308.73260498 153.95713806]
[294.09481812 150.68069458]
[282.13079834 161.92231750]
[265.65856934 163.83596802]
[251.14796448 155.47055054]
[244.41746521 139.95175171]
[229.73315430 136.89054871]
[215.04884338 133.82933044]
[200.36453247 130.76811218]
[193.17663574 132.47994995]
[185.48785400 127.55268097]
[170.85006714 124.27622986]
[156.21228027 120.99978638]
[141.55082703 117.83087158]
[126.86652374 114.76966095]
[112.18221283 111.70844269]
[126.15468597 117.16462708]
[136.19905090 128.30513000]
[140.18403625 142.76611328]
[137.26408386 157.47915649]
[128.05877686 169.32240295]
[114.52133942 175.78286743]
[99.52420044 175.48976135]
[86.24953461 168.50524902]
[77.51403046 156.31137085]
[75.17121887 141.49545288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 52]
[11 51]
[12 50]
[13 49]
[15 47]
[16 46]
[17 44]
[18 43]
[19 42]
[20 41]
[21 40]
[23 38]
[24 37]
[25 36]
[64 127]
[65 126]
[66 125]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 113]
[77 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 104]
[85 102]
[86 101]
[87 100]
[89 98]
[90 97]
[132 203]
[133 202]
[134 201]
[136 200]
[137 199]
[138 198]
[139 196]
[140 195]
[141 194]
[142 193]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[154 183]
[155 182]
[156 181]
[157 180]
[158 178]
[159 177]
[160 176]
[161 175]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
