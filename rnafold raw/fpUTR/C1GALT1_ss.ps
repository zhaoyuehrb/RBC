%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGCGGGAGCGCGCGCUGGGCCCGCCUUGGCCGCCGCCGCUGUGCUGCCGCUGCCGGGGAAUAAUCUGGGCGGCAGCGGGCGGCCUCGGCUAGCGGCCACGAGCCACUUCUGCGGCUGCCCAGAGAAGCAAAGGUCACCAGUCCCAAGUCGUCCCCCUCUCCGCCCCCCAGGAGGGGCGAGAGGGAGCCGCAGCUGAUGUCAGAAAUACACUUUCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[99.10729218 145.14468384]
[94.75302124 159.49879456]
[90.39875031 173.85289001]
[86.04447937 188.20700073]
[89.44263458 203.65896606]
[78.34397125 213.59217834]
[73.98970032 227.94628906]
[69.63542938 242.30039978]
[73.88420868 258.13958740]
[62.10165787 269.54586792]
[46.40865326 264.78546143]
[42.94881058 248.75543213]
[55.28132629 237.94612122]
[59.63559723 223.59201050]
[63.98986435 209.23791504]
[60.28026199 194.81265259]
[71.69037628 183.85273743]
[76.04464722 169.49862671]
[80.39891815 155.14451599]
[84.75318909 140.79042053]
[70.62252045 120.71665955]
[71.65529633 100.43391418]
[57.13074493 96.68726349]
[42.60619354 92.94062042]
[28.05572319 89.29591370]
[8.97821808 95.82729340]
[-4.40440130 81.86296082]
[-19.07369232 78.73056793]
[-33.74298477 75.59817505]
[-48.43387985 72.56872559]
[-63.14566040 69.64237213]
[-77.85743713 66.71601868]
[-92.56922150 63.78966141]
[-107.28099823 60.86330795]
[-121.99277496 57.93695450]
[-136.70455933 55.01059723]
[-149.74917603 63.52384949]
[-164.62733459 60.34653473]
[-172.66302490 47.85801315]
[-187.37480164 44.93165970]
[-202.08659363 42.00530624]
[-216.79837036 39.07894897]
[-231.51014709 36.15259552]
[-246.22192383 33.22623825]
[-255.23950195 34.62082672]
[-261.11886597 30.15430450]
[-275.78814697 27.02191162]
[-290.45742798 23.88951874]
[-305.12673950 20.75712585]
[-319.79602051 17.62473488]
[-334.46530151 14.49234200]
[-349.13461304 11.35994911]
[-363.80389404 8.22755718]
[-378.47320557 5.09516430]
[-384.85540771 6.76182079]
[-390.30630493 5.19657326]
[-393.50729370 1.66372788]
[-408.08297729 -1.87885118]
[-422.65863037 -5.42143011]
[-437.23431396 -8.96400928]
[-451.80996704 -12.50658798]
[-465.17639160 -4.07366800]
[-480.57220459 -7.64362335]
[-488.86334229 -21.09846306]
[-485.13079834 -36.45566940]
[-471.58908081 -44.60408401]
[-456.27218628 -40.70939636]
[-448.26739502 -27.08225822]
[-433.69171143 -23.53967857]
[-419.11605835 -19.99709892]
[-404.54037476 -16.45452118]
[-389.96472168 -12.91194153]
[-375.34078979 -9.57412720]
[-360.67150879 -6.44173479]
[-346.00222778 -3.30934238]
[-331.33291626 -0.17694993]
[-316.66363525 2.95544267]
[-301.99435425 6.08783484]
[-287.32504272 9.22022724]
[-272.65576172 12.35262012]
[-257.98648071 15.48501205]
[-243.29556274 18.51446152]
[-228.58378601 21.44081497]
[-213.87200928 24.36717033]
[-199.16023254 27.29352570]
[-184.44845581 30.21987915]
[-169.73667908 33.14623642]
[-157.53350830 24.68347168]
[-142.57199097 27.44163704]
[-133.77819824 40.29882050]
[-119.06642151 43.22517395]
[-104.35464478 46.15152740]
[-89.64286041 49.07788467]
[-74.93108368 52.00423813]
[-60.21930695 54.93059540]
[-45.50752640 57.85694885]
[-38.34082413 56.08068848]
[-30.61059189 60.92888260]
[-15.94130039 64.06127930]
[-1.27200902 67.19367218]
[6.75827122 60.89350510]
[17.14865494 60.03026962]
[26.49393845 65.12881470]
[31.59830284 74.72024536]
[38.83337784 73.24700928]
[46.35284042 78.41606903]
[60.87739182 82.16271210]
[75.40194702 85.90936279]
[85.35614014 72.23761749]
[102.74528503 65.68209839]
[122.52628326 70.06066132]
[137.90249634 85.70938873]
[142.63804626 108.84991455]
[156.57537842 103.30458069]
[170.51271057 97.75924683]
[184.45004272 92.21392059]
[198.38737488 86.66858673]
[212.32470703 81.12325287]
[226.26203918 75.57791901]
[240.19937134 70.03258514]
[250.95368958 59.57577896]
[256.88772583 45.79945374]
[248.85093689 32.52581787]
[250.18461609 17.06616211]
[260.37597656 5.36504507]
[275.50619507 1.92178309]
[289.75741577 8.06038094]
[297.64971924 21.42042160]
[296.14840698 36.86470032]
[285.83074951 48.45457077]
[270.66406250 51.73349762]
[264.73001099 65.50981903]
[270.84671021 69.84985352]
[284.48046875 63.59516144]
[283.08013916 78.52992249]
[289.19683838 82.86996460]
[300.24020386 72.71888733]
[305.16409302 57.68339920]
[319.77032471 54.76675034]
[324.15829468 38.96555328]
[340.10202026 35.12759781]
[351.19995117 47.20103836]
[346.03549194 62.76575470]
[329.92141724 65.81010437]
[325.78741455 80.11952209]
[310.39126587 83.76223755]
[299.34793091 93.91331482]
[301.57531738 101.07492828]
[315.89855957 96.62010193]
[330.22177124 92.16528320]
[344.54498291 87.71046448]
[358.86825562 83.25586700]
[363.32263184 97.57922363]
[348.99978638 102.03368378]
[334.67657471 106.48850250]
[320.35336304 110.94332123]
[306.03015137 115.39813995]
[308.25756836 122.55975342]
[323.11026001 124.65660858]
[337.96298218 126.75346375]
[352.81570435 128.85031128]
[367.66842651 130.94717407]
[382.52114868 133.04402161]
[397.37387085 135.14088440]
[406.29904175 133.24287415]
[412.41958618 137.37271118]
[427.24145508 139.67765808]
[442.06329346 141.98260498]
[456.88516235 144.28756714]
[471.70700073 146.59251404]
[484.31732178 137.06597900]
[499.95870972 139.32926941]
[509.35140991 152.03962708]
[506.92285156 167.65621948]
[494.11392212 176.91398621]
[478.52386475 174.32048035]
[469.40203857 161.41436768]
[454.58020020 159.10940552]
[439.75836182 156.80445862]
[424.93649292 154.49951172]
[410.11465454 152.19454956]
[395.27700806 149.99360657]
[380.42428589 147.89674377]
[365.57156372 145.79989624]
[350.71884155 143.70303345]
[335.86614990 141.60618591]
[321.01342773 139.50932312]
[306.16070557 137.41247559]
[245.74470520 83.96992493]
[231.80737305 89.51525116]
[217.87004089 95.06058502]
[203.93270874 100.60591888]
[189.99537659 106.15125275]
[176.05804443 111.69658661]
[162.12071228 117.24192047]
[148.18336487 122.78724670]
[142.63804626 136.72457886]
[148.95611572 150.32905579]
[155.27420044 163.93354797]
[161.59228516 177.53802490]
[176.69285583 176.21568298]
[191.33421326 180.14077759]
[203.74833679 188.83935547]
[212.43618774 201.26100159]
[216.34863281 215.90574646]
[215.01322937 231.00515747]
[208.59126282 244.73593140]
[197.85818481 255.43998718]
[184.11007690 261.82476807]
[169.00709534 263.11929321]
[154.37300110 259.16720581]
[141.97491455 250.44577026]
[133.30998230 238.00813293]
[129.42453003 223.35621643]
[130.78775024 208.25927734]
[137.23501587 194.54035950]
[147.98780823 183.85610962]
[141.66972351 170.25161743]
[135.35163879 156.64714050]
[129.03355408 143.04266357]
[121.55199432 143.56817627]
[122.60277557 158.53132629]
[107.63960266 159.58186340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[6 15]
[7 14]
[8 13]
[22 108]
[23 107]
[24 106]
[25 104]
[27 100]
[28 99]
[29 98]
[30 96]
[31 95]
[32 94]
[33 93]
[34 92]
[35 91]
[36 90]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[113 196]
[114 195]
[115 194]
[116 193]
[117 192]
[118 191]
[119 190]
[120 189]
[121 132]
[122 131]
[136 147]
[137 146]
[139 144]
[158 188]
[159 187]
[160 186]
[161 185]
[162 184]
[163 183]
[164 182]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[197 220]
[198 219]
[199 218]
[200 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
