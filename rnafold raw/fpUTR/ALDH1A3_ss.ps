%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGGCCGGCCGCCCUCCCCUCUCCUCCCUCCCGCAGCCCGCCCUCCCUUCCUCCGGUCCCGCAGCCAAUUAGGCGGCCCCCUCGGGCGGGAGGCGUGGGGCGCUGCAUAAAGCGGCGGGGAGCUGCCACCCCGGGAGCGGGCUGCGCAGUGUCCGGGCCGAGCCGGUGCGCCGCAGACUAGGGCGCCUCGGGCCAGGGAGCGCGGAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[33.22403717 341.78005981]
[28.73359108 356.09213257]
[24.24314308 370.40423584]
[19.75269699 384.71630859]
[15.36596775 399.06054688]
[11.08318615 413.43612671]
[6.80040407 427.81173706]
[13.13794708 442.54995728]
[5.43980980 456.62539673]
[-10.38865471 459.24060059]
[-22.20520401 448.38940430]
[-20.94519234 432.39590454]
[-7.57519293 423.52896118]
[-3.29241085 409.15335083]
[0.99037093 394.77777100]
[-0.11188818 387.47317505]
[5.44060802 380.22586060]
[9.93105507 365.91378784]
[14.42150211 351.60168457]
[18.91194916 337.28961182]
[9.99633789 327.35543823]
[7.12955236 314.20788574]
[11.16462612 301.25723267]
[21.15001106 291.91690063]
[34.55140686 288.70391846]
[39.24857712 274.45834351]
[43.94574738 260.21276855]
[48.64291763 245.96717834]
[53.34008789 231.72160339]
[58.03725815 217.47602844]
[62.73442841 203.23043823]
[67.12116241 188.88621521]
[71.19538116 174.45013428]
[75.26959991 160.01403809]
[79.34381866 145.57794189]
[83.41803741 131.14186096]
[75.55280304 125.43838501]
[69.54140472 117.80591583]
[65.83967590 108.82321930]
[64.72833252 99.17146301]
[66.29164886 89.58253479]
[53.22948456 82.20825958]
[40.16732407 74.83398438]
[27.10515976 67.45970917]
[14.04299831 60.08543015]
[0.92779952 52.80590057]
[-12.23974991 45.62149811]
[-25.40729904 38.43709564]
[-38.57484818 31.25269508]
[-51.74239731 24.06829262]
[-64.90995026 16.88389015]
[-80.73010254 17.06624222]
[-88.19670868 4.17829990]
[-101.36425781 -3.00610280]
[-114.53180695 -10.19050503]
[-128.50532532 -3.70613217]
[-143.44305420 -6.65865278]
[-153.65713501 -17.71019363]
[-155.38438416 -32.48025131]
[-168.55192566 -39.66465378]
[-183.54306030 -35.43334198]
[-196.79447937 -42.90692520]
[-200.73600769 -57.22474289]
[-213.90354919 -64.40914917]
[-227.07110596 -71.59355164]
[-240.23864746 -78.77795410]
[-253.30873108 -70.71143341]
[-268.66146851 -70.27671051]
[-282.16705322 -77.59071350]
[-290.19256592 -90.68600464]
[-290.57916260 -106.04003143]
[-283.22286987 -119.52262878]
[-270.10247803 -127.50704956]
[-254.74731445 -127.84552002]
[-241.28784180 -120.44699860]
[-233.34458923 -107.30165100]
[-233.05424500 -91.94550323]
[-219.88670349 -84.76110077]
[-206.71914673 -77.57669830]
[-193.55160522 -70.39229584]
[-179.37864685 -74.82659149]
[-165.92253113 -67.72816467]
[-161.36752319 -52.83220291]
[-148.19998169 -45.64780045]
[-134.84510803 -52.18883896]
[-120.02408600 -49.58087540]
[-109.45709991 -38.61765289]
[-107.34740448 -23.35805511]
[-94.17985535 -16.17365265]
[-81.01230621 -8.98924923]
[-66.13397980 -9.68547916]
[-57.72554398 3.71633983]
[-44.55799484 10.90074253]
[-31.39044571 18.08514595]
[-18.22289658 25.26954842]
[-5.05534744 32.45394897]
[8.11220169 39.63835144]
[15.48610973 40.08244324]
[21.41727448 47.02326965]
[34.47943497 54.39754486]
[47.54159546 61.77182007]
[60.60375977 69.14609528]
[73.66592407 76.52037048]
[89.14270020 60.83006287]
[113.67868042 56.06798172]
[115.62760162 41.19512939]
[117.57652283 26.32227707]
[119.52544403 11.44942665]
[121.47436523 -3.42342496]
[123.42328644 -18.29627609]
[114.82876587 -31.84300232]
[120.19742584 -46.96110535]
[135.41088867 -52.05327225]
[148.79869080 -43.21323013]
[150.09085083 -27.22229767]
[138.29614258 -16.34735489]
[136.34721375 -1.47450340]
[134.39830017 13.39834785]
[132.44937134 28.27119827]
[130.50045776 43.14405060]
[128.55152893 58.01690292]
[141.55996704 65.48553467]
[153.42160034 56.30394745]
[165.28324890 47.12235641]
[171.46003723 32.55671692]
[186.26049805 30.88474846]
[198.12214661 21.70315933]
[209.98377991 12.52156925]
[221.84541321 3.33997941]
[233.70704651 -5.84161043]
[245.50190735 -15.10882187]
[257.22937012 -24.46116829]
[263.19467163 -39.11470032]
[277.96936035 -41.00075912]
[289.69683838 -50.35310745]
[301.42431641 -59.70545197]
[313.15179443 -69.05780029]
[318.63613892 -84.51270294]
[334.80957031 -87.22409821]
[345.03427124 -74.40272522]
[338.79193115 -59.23812103]
[322.50415039 -57.33032990]
[310.77667236 -47.97798157]
[299.04919434 -38.62563324]
[287.32171631 -29.27328682]
[282.19528198 -15.28869820]
[266.58172607 -12.73369598]
[254.85426331 -3.38134933]
[251.58609009 3.24366069]
[242.88864136 6.02002573]
[231.02700806 15.20161533]
[219.16535950 24.38320541]
[207.30372620 33.56479645]
[195.44209290 42.74638367]
[190.11372375 56.65529251]
[174.46482849 58.98399353]
[162.60319519 68.16558075]
[150.74156189 77.34716797]
[152.25907898 92.27021027]
[165.72615051 98.87612152]
[181.52346802 98.00705719]
[189.54261780 110.55865479]
[203.00968933 117.16456604]
[216.47674561 123.77047729]
[229.94381714 130.37638855]
[243.41088867 136.98229980]
[241.07765198 122.16487885]
[251.09738159 111.00222015]
[266.07983398 111.72756195]
[274.97439575 123.80591583]
[271.22073364 138.32865906]
[257.58679199 144.58422852]
[270.54083252 152.14683533]
[283.49487305 159.70944214]
[296.44888306 167.27203369]
[309.40292358 174.83464050]
[323.10229492 167.74020386]
[338.46032715 169.20115662]
[350.57632446 178.75132751]
[355.58413696 193.34329224]
[351.88580322 208.32080078]
[340.66140747 218.90458679]
[325.49261475 221.71740723]
[311.21978760 215.86169434]
[302.39727783 203.20597839]
[301.84033203 187.78868103]
[288.88629150 180.22607422]
[275.93225098 172.66346741]
[262.97821045 165.10087585]
[250.02418518 157.53826904]
[236.80497742 150.44937134]
[223.33790588 143.84346008]
[209.87083435 137.23754883]
[196.40376282 130.63163757]
[182.93670654 124.02572632]
[168.10263062 125.36728668]
[159.12023926 112.34319305]
[145.65316772 105.73728180]
[125.95027924 131.28494263]
[97.85412598 135.21607971]
[93.77990723 149.65216064]
[89.70568848 164.08825684]
[85.63146973 178.52435303]
[81.55725098 192.96044922]
[82.84027863 198.01094055]
[82.13149261 202.59162903]
[79.94245148 206.02328491]
[76.98001099 207.92761230]
[72.28283691 222.17318726]
[67.58567047 236.41877747]
[62.88850021 250.66435242]
[58.19132614 264.90994263]
[53.49415588 279.15551758]
[48.79698563 293.40109253]
[58.86585236 306.99472046]
[58.84676361 323.74499512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 15]
[6 14]
[7 13]
[25 214]
[26 213]
[27 212]
[28 211]
[29 210]
[30 209]
[31 208]
[32 204]
[33 203]
[34 202]
[35 201]
[36 200]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[53 90]
[54 89]
[55 88]
[59 84]
[60 83]
[63 80]
[64 79]
[65 78]
[66 77]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[122 158]
[123 157]
[124 156]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 148]
[132 147]
[134 145]
[135 144]
[136 143]
[137 142]
[159 198]
[160 197]
[162 195]
[163 194]
[164 193]
[165 192]
[166 191]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
