%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUGCUGGACUGUAAUGAUCCCAGGGCCAAGUUGCCUGCCUGUGGUGUGUGGUGUGGGGGGGAGGCCUGGGGCAGCAGGAGCAGGACAGCCGGACAGGAAGCCCAGACGGGGUUCGAGCACCUCAACUUCUCUCCUGGGGACACUGUUCAAACUCCGGGGGCCAUAGGCCAAGCUGAGCG\
) } def
/len { sequence length } bind def

/coor [
[-95.59964752 500.06784058]
[-98.74003601 485.40148926]
[-106.96681976 497.94421387]
[-109.06472015 506.85958862]
[-115.44265747 510.62921143]
[-123.88237762 523.02966309]
[-125.25061798 538.79156494]
[-138.80799866 544.95977783]
[-147.24771118 557.36022949]
[-155.68743896 569.76068115]
[-164.12715149 582.16113281]
[-156.44030762 595.34729004]
[-155.24450684 610.56353760]
[-160.77720642 624.78857422]
[-171.93986511 635.19805908]
[-186.51612854 639.72521973]
[-201.61189270 637.47113037]
[-214.22985840 628.88336182]
[-221.86473083 615.66705322]
[-223.00059509 600.44622803]
[-217.41192627 586.24310303]
[-206.20835876 575.87762451]
[-191.61436462 571.40789795]
[-176.52760315 573.72143555]
[-168.08787537 561.32098389]
[-159.64816284 548.92053223]
[-151.20843506 536.52008057]
[-150.44386292 521.64514160]
[-136.28282166 514.58990479]
[-127.84310150 502.18948364]
[-119.50954437 489.71743774]
[-111.28276825 477.17471313]
[-103.81976318 464.16302490]
[-97.14717865 450.72888184]
[-90.47459412 437.29473877]
[-83.80200958 423.86056519]
[-89.70710754 414.06607056]
[-90.14450836 402.51745605]
[-84.88919830 392.08999634]
[-75.14797211 385.43597412]
[-63.28430176 384.31030273]
[-56.15694809 371.11178589]
[-49.02959442 357.91326904]
[-41.90224075 344.71475220]
[-34.77488708 331.51623535]
[-27.64753342 318.31771851]
[-20.52018166 305.11920166]
[-13.39282799 291.92068481]
[-6.26547432 278.72216797]
[-7.02608252 263.84698486]
[6.33922338 255.38064575]
[5.57861519 240.50547791]
[18.94392204 232.03912354]
[26.07127380 218.84060669]
[33.19862747 205.64208984]
[32.43801880 190.76690674]
[45.80332565 182.30055237]
[52.93067932 169.10203552]
[47.54903793 157.37921143]
[49.94499588 144.50646973]
[59.46285248 135.23303223]
[72.77818298 133.11129761]
[80.12983704 120.03639221]
[87.48148346 106.96147919]
[87.51438141 92.97969055]
[99.44360352 85.68686676]
[106.79525757 72.61196136]
[114.03502655 59.47476959]
[121.04944611 46.21588898]
[127.95042419 32.89760971]
[134.85139465 19.57933044]
[134.33053589 3.76670051]
[147.05574036 -3.97399473]
[153.95672607 -17.29227257]
[160.85769653 -30.61055183]
[162.03288269 -39.69371033]
[167.99188232 -44.09580994]
[175.11923218 -57.29432678]
[176.44932556 -66.35609436]
[182.48260498 -70.65581512]
[189.83425903 -83.73072052]
[197.18591309 -96.80563354]
[204.53756714 -109.88053894]
[211.88922119 -122.95544434]
[210.72718811 -143.06472778]
[227.73391724 -152.23660278]
[234.63490295 -165.55488586]
[241.53587341 -178.87316895]
[237.64328003 -189.06193542]
[239.96626282 -199.49357605]
[247.49821472 -206.76226807]
[257.57357788 -208.63220215]
[264.92523193 -221.70710754]
[272.16500854 -234.84429932]
[279.29235840 -248.04281616]
[286.41970825 -261.24133301]
[293.54705811 -274.43984985]
[300.67440796 -287.63836670]
[285.99591064 -284.54934692]
[273.34671021 -292.61145020]
[269.94891357 -307.22155762]
[277.74252319 -320.03793335]
[292.27774048 -323.74301147]
[305.25558472 -316.22134399]
[309.26623535 -301.76702881]
[317.70596313 -314.16748047]
[326.14569092 -326.56793213]
[326.81762695 -342.95330811]
[341.46734619 -350.32333374]
[355.02447510 -341.09640503]
[353.54257202 -324.76434326]
[338.54611206 -318.12820435]
[330.10641479 -305.72775269]
[321.66668701 -293.32730103]
[313.87292480 -280.51101685]
[306.74557495 -267.31250000]
[299.61822510 -254.11398315]
[292.49087524 -240.91546631]
[285.36349487 -227.71694946]
[284.95077515 -220.31979370]
[278.00012207 -214.35545349]
[270.64846802 -201.28054810]
[272.30648804 -182.02947998]
[254.85415649 -171.97218323]
[247.95317078 -158.65391541]
[241.05220032 -145.33563232]
[245.01443481 -135.88522339]
[243.06741333 -125.60061646]
[235.61869812 -117.93693542]
[224.96412659 -115.60379028]
[217.61247253 -102.52888489]
[210.26081848 -89.45397949]
[202.90916443 -76.37906647]
[195.55751038 -63.30416489]
[188.31774902 -50.16697311]
[181.19039917 -36.96845627]
[174.17597961 -23.70957565]
[167.27499390 -10.39129734]
[160.37402344 2.92698073]
[161.38848877 17.78699875]
[148.16967773 26.48030663]
[141.26870728 39.79858398]
[134.36772156 53.11686325]
[134.08134460 60.51998138]
[127.23354340 66.60211945]
[126.82080841 73.99926758]
[119.87016296 79.96360779]
[112.51851654 93.03852081]
[112.48561859 107.02030945]
[100.55639648 114.31313324]
[93.20474243 127.38803864]
[85.85308838 140.46295166]
[90.88356018 157.20555115]
[82.42578888 172.11865234]
[66.12919617 176.22940063]
[59.00184250 189.42791748]
[59.25265503 205.24713135]
[46.39714432 212.76943970]
[39.26979065 225.96795654]
[32.14243698 239.16647339]
[32.39324951 254.98568726]
[19.53774071 262.50799561]
[19.78855133 278.32720947]
[6.93304205 285.84951782]
[-0.19431122 299.04803467]
[-7.32166433 312.24655151]
[-14.44901752 325.44506836]
[-21.57637024 338.64358521]
[-28.70372391 351.84210205]
[-35.83107758 365.04061890]
[-42.95843124 378.23913574]
[-50.08578491 391.43765259]
[-43.96631622 409.34750366]
[-52.70919418 425.77331543]
[-70.36785126 430.53314209]
[-77.04043579 443.96731567]
[-83.71302032 457.40145874]
[-90.38560486 470.83563232]
[-76.13919067 466.14099121]
[-62.15547180 471.56829834]
[-54.80620193 484.64453125]
[-57.44012451 499.41146851]
[-68.85707855 509.14047241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[5 30]
[6 29]
[8 27]
[9 26]
[10 25]
[11 24]
[33 178]
[34 177]
[35 176]
[36 175]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[51 162]
[53 160]
[54 159]
[55 158]
[57 156]
[58 155]
[62 152]
[63 151]
[64 150]
[66 148]
[67 147]
[68 145]
[69 143]
[70 142]
[71 141]
[73 139]
[74 138]
[75 137]
[77 136]
[78 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 126]
[87 125]
[88 124]
[92 122]
[93 121]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
