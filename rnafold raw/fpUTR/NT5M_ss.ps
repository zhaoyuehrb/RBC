%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCUCGCUCUGGGGCCGGUACUUGCGCGCCCGCACCCCGCGCUCCCCGCCCCGCUCCCCGUCCCGCGCUCCACGCGCGCCCCAGCGUUGGGGGCUUCUCCUCCGCGGCGGGAAUGUCUGGCCGGCUCCGGCAGCACGGCGCGGCCCAGGUCCCCGCGCCCACGACGGGCCAGCGCGCUGGGCC\
) } def
/len { sequence length } bind def

/coor [
[300.35791016 361.60256958]
[294.90179443 349.48706055]
[297.46374512 336.25061035]
[287.69317627 324.86923218]
[277.92257690 313.48785400]
[263.09771729 312.61645508]
[253.02682495 301.21331787]
[254.04135132 285.66955566]
[244.27076721 274.28817749]
[234.50018311 262.90682983]
[224.63381958 251.60836792]
[214.67240906 240.39363098]
[204.71098328 229.17890930]
[194.74955750 217.96417236]
[184.78814697 206.74945068]
[174.82672119 195.53472900]
[164.86531067 184.31999207]
[154.90388489 173.10527039]
[144.94247437 161.89053345]
[134.98104858 150.67581177]
[125.01963043 139.46107483]
[111.46166992 145.29667664]
[96.75987244 146.61180115]
[82.38143158 143.27522278]
[69.76126862 135.61990356]
[60.15883255 124.40983582]
[46.27652359 130.09152222]
[32.39421844 135.77320862]
[18.51190948 141.45489502]
[4.62960100 147.13656616]
[1.92751861 162.32545471]
[-8.57410145 173.62677002]
[-23.52422905 177.43428040]
[-38.15233612 172.53305054]
[-47.79064178 160.48703003]
[-49.36360168 145.14006042]
[-42.36928940 131.38931274]
[-29.03956413 123.62259674]
[-13.62789154 124.31823730]
[-1.05208218 133.25425720]
[12.83022594 127.57257843]
[26.71253395 121.89089966]
[40.59484100 116.20921326]
[54.47714996 110.52752686]
[53.96491623 92.00437927]
[60.69313049 74.73878479]
[73.60356903 61.44630814]
[67.22605133 47.86959076]
[60.84853363 34.29287338]
[54.47101593 20.71615410]
[48.09349823 7.13943672]
[41.71597672 -6.43728113]
[28.84544563 -15.63836575]
[30.43736076 -30.44765663]
[23.04733276 -43.50091171]
[14.68746567 -55.95533371]
[6.32759905 -68.40975189]
[-2.03226805 -80.86417389]
[-10.39213467 -93.31859589]
[-18.75200272 -105.77301788]
[-27.32102585 -118.08447266]
[-36.09675980 -130.24943542]
[-44.87249374 -142.41441345]
[-64.83081818 -144.54267883]
[-76.63623810 -160.39733887]
[-73.06580353 -179.52973938]
[-82.44641876 -191.23461914]
[-91.82704163 -202.93948364]
[-101.20765686 -214.64436340]
[-110.58827209 -226.34922791]
[-126.31301880 -229.52914429]
[-133.50256348 -243.87104797]
[-126.64169312 -258.37304688]
[-110.99348450 -261.91046143]
[-98.56191254 -251.76968384]
[-98.88339996 -235.72984314]
[-89.50278473 -224.02497864]
[-80.12216949 -212.32009888]
[-70.74154663 -200.61523438]
[-61.36093521 -188.91035461]
[-51.19439316 -190.57888794]
[-41.17748260 -187.84445190]
[-33.14466476 -181.13806152]
[-28.59593773 -171.62438965]
[-28.41697884 -160.99983215]
[-32.70752716 -151.19013977]
[-23.93179131 -139.02517700]
[-15.15605545 -126.86020660]
[-10.64776802 -125.22476196]
[-7.12842083 -120.72755432]
[-6.29757977 -114.13288879]
[2.06228685 -101.67846680]
[10.42215347 -89.22404480]
[18.78202057 -76.76962280]
[27.14188766 -64.31520081]
[35.50175476 -51.86077881]
[36.88328171 -66.79701996]
[46.02532959 -78.68916321]
[60.10433197 -83.86425781]
[74.77193451 -80.72395325]
[85.49797821 -70.23815155]
[88.96967316 -55.64543915]
[84.11477661 -41.45283508]
[72.43273926 -32.04379272]
[57.53162003 -30.32433701]
[44.01408005 -36.82517242]
[56.42844772 -28.59518623]
[55.29269791 -12.81479931]
[61.67021561 0.76191831]
[68.04772949 14.33863544]
[74.42524719 27.91535378]
[80.80277252 41.49206924]
[87.18029022 55.06879044]
[100.15899658 53.27598572]
[113.12520599 55.15707779]
[125.05938721 60.56415176]
[135.02314758 69.07205963]
[142.23306274 80.01181793]
[146.12219238 92.52323914]
[146.38475037 105.62255859]
[143.00010681 118.27977753]
[136.23435974 129.49966431]
[146.19577026 140.71438599]
[156.15719604 151.92912292]
[166.11862183 163.14384460]
[176.08003235 174.35858154]
[186.04145813 185.57330322]
[196.00286865 196.78802490]
[205.96429443 208.00276184]
[215.92570496 219.21748352]
[225.88713074 230.43222046]
[235.84855652 241.64694214]
[243.90586853 245.99743652]
[245.88154602 253.13623047]
[255.65213013 264.51760864]
[265.42272949 275.89898682]
[280.94085693 277.24990845]
[290.68750000 288.93142700]
[289.30395508 303.71728516]
[299.07455444 315.09863281]
[308.84512329 326.48001099]
[326.29934692 327.48199463]
[337.41818237 340.53335571]
[335.70263672 357.25350952]
[345.66406250 368.46826172]
[355.62548828 379.68298340]
[365.58691406 390.89770508]
[375.54830933 402.11242676]
[385.50973511 413.32717896]
[395.47116089 424.54190063]
[405.97985840 422.49105835]
[416.31033325 424.97988892]
[424.60482788 431.49160767]
[429.40054321 440.79229736]
[429.88751221 451.16430664]
[426.04461670 460.72332764]
[435.42523193 472.42819214]
[444.80584717 484.13305664]
[454.38281250 495.67782593]
[464.15341187 507.05920410]
[473.92401123 518.44055176]
[483.69458008 529.82196045]
[499.51776123 532.46893311]
[507.18759155 546.55987549]
[500.82043457 561.28527832]
[485.30062866 565.34918213]
[472.53363037 555.63409424]
[472.31320190 539.59252930]
[462.54263306 528.21118164]
[452.77203369 516.82977295]
[443.00146484 505.44842529]
[438.37127686 504.19906616]
[434.48513794 500.01477051]
[433.10098267 493.51367188]
[423.72036743 481.80880737]
[414.33975220 470.10394287]
[394.88900757 469.42135620]
[381.98641968 454.44601440]
[384.25643921 434.50332642]
[374.29501343 423.28857422]
[364.33358765 412.07385254]
[354.37216187 400.85913086]
[344.41076660 389.64440918]
[334.44934082 378.42965698]
[324.48791504 367.21493530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 141]
[4 140]
[5 139]
[8 136]
[9 135]
[10 134]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[47 113]
[48 112]
[49 111]
[50 110]
[51 109]
[52 108]
[54 106]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 88]
[62 87]
[63 86]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[144 185]
[145 184]
[146 183]
[147 182]
[148 181]
[149 180]
[150 179]
[156 176]
[157 175]
[158 174]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
