%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGCACAUCCCUUUCUCCUCUUUUCACUCAUCGUCACCGCUACCUGAAAACCCUGGCCGGGUGCUGGGGCUUGAGGAGCAGUUCCCACUUCCCAGUCUUUUUCACUUUUCACAGCUGCAAAGUUCAGGGAGUUGAACUGCAGUGCUUUCAGUUCACUGCUCACUCUGCCACGAUCAAUCUCUGUUGUAAAUUUUCCUCCCAGAGCACGUGACG\
) } def
/len { sequence length } bind def

/coor [
[-73.54742432 510.72177124]
[-65.46458435 523.40399170]
[-59.70696640 537.29718018]
[-56.44952774 551.97918701]
[-55.79126358 567.00372314]
[-57.75217819 581.91436768]
[-62.27268219 596.25787354]
[-69.21540070 609.59838867]
[-78.36935425 621.53051758]
[-89.45635986 631.69171143]
[-102.13950348 639.77313232]
[-116.03334808 645.52917480]
[-130.71568298 648.78491211]
[-145.74034119 649.44146729]
[-160.65071106 647.47888184]
[-174.99371338 642.95672607]
[-188.33345032 636.01251221]
[-200.26457214 626.85723877]
[-210.42448425 615.76904297]
[-218.50444031 603.08496094]
[-224.25891113 589.19049072]
[-227.51301575 574.50775146]
[-228.16787720 559.48303223]
[-226.20358276 544.57287598]
[-221.67982483 530.23040771]
[-214.73408508 516.89147949]
[-205.57742310 504.96139526]
[-194.48811340 494.80273438]
[-181.80313110 486.72421265]
[-167.90797424 480.97131348]
[-153.22489929 477.71887207]
[-138.20010376 477.06573486]
[-123.29017639 479.03170776]
[-108.94820404 483.55709839]
[-102.02198029 470.25192261]
[-95.09574890 456.94677734]
[-88.16951752 443.64160156]
[-81.24329376 430.33645630]
[-74.31706238 417.03128052]
[-76.02455139 399.56396484]
[-60.40844345 389.80267334]
[-53.67645645 376.39819336]
[-46.94446945 362.99368286]
[-50.50397110 356.39218140]
[-62.83830261 364.92825317]
[-71.75917053 376.98718262]
[-86.72113800 375.91967773]
[-93.83961487 362.71636963]
[-86.50872040 349.62982178]
[-71.53257751 348.80371094]
[-57.62297821 343.18914795]
[-61.18247986 336.58764648]
[-76.08105469 334.84625244]
[-90.97962952 333.10485840]
[-105.87820435 331.36346436]
[-119.30380249 340.14599609]
[-134.49528503 334.98861694]
[-139.79904175 319.84762573]
[-131.14648438 306.33789062]
[-115.17512512 304.82293701]
[-104.13681030 316.46490479]
[-89.23823547 318.20629883]
[-74.33966064 319.94769287]
[-59.44108582 321.68908691]
[-42.31032944 331.87484741]
[-35.36513901 346.95822144]
[-24.75853729 336.35162354]
[-14.15193558 325.74502563]
[-3.54533386 315.13842773]
[18.13364029 290.58728027]
[23.46840286 276.56799316]
[28.80316353 262.54870605]
[24.13897514 251.39009094]
[28.46577263 239.66822815]
[39.97629547 233.85383606]
[45.51438904 219.91362000]
[51.05248260 205.97340393]
[56.48905182 191.99328613]
[61.82381439 177.97401428]
[67.15857697 163.95472717]
[72.49333954 149.93544006]
[77.82809448 135.91615295]
[83.16285706 121.89687347]
[88.49761963 107.87758636]
[65.42137146 72.52257538]
[65.63952637 57.52416229]
[65.85768890 42.52574539]
[66.07584381 27.52733421]
[65.96676636 12.52772999]
[65.53049469 -2.46592402]
[65.09422302 -17.45957756]
[64.65795135 -32.45323181]
[53.44420242 -43.26478195]
[53.21535110 -58.47669601]
[63.59162140 -69.10066223]
[63.15534973 -84.09431458]
[62.71907806 -99.08796692]
[62.28280640 -114.08162689]
[47.81806564 -118.55934143]
[35.59244537 -127.49314880]
[26.93209457 -139.91398621]
[22.77642059 -154.47451782]
[23.57620049 -169.59533691]
[29.24467850 -183.63623047]
[39.16698456 -195.07418823]
[52.26681519 -202.66845703]
[67.12320709 -205.59530640]
[82.12464142 -203.53723145]
[95.64387512 -196.71749878]
[106.21445465 -185.87582397]
[112.68975067 -172.18826294]
[114.36737061 -157.13954163]
[111.06534576 -142.36201477]
[103.14185333 -129.45863342]
[91.45637512 -119.82908630]
[77.27645874 -114.51789856]
[77.71273041 -99.52423859]
[78.14900208 -84.53058624]
[78.58527374 -69.53693390]
[89.56171417 -59.53426743]
[90.21774292 -44.33478165]
[79.65160370 -32.88950348]
[80.08787537 -17.89584923]
[80.52414703 -2.90219474]
[80.96041870 12.09145927]
[83.25686646 14.76235676]
[84.37568665 18.67694473]
[83.74700165 23.27052879]
[81.07425690 27.74549294]
[80.85610199 42.74390411]
[80.63793945 57.74232101]
[80.41978455 72.74073029]
[86.77436066 76.72437286]
[100.02878571 69.70154572]
[99.48350525 84.69165802]
[105.83808136 88.67530060]
[119.24256897 81.94330597]
[132.64706421 75.21131897]
[146.05154419 68.47933197]
[159.45603943 61.74734497]
[172.86051941 55.01535797]
[179.12196350 48.36991501]
[186.50927734 48.28453445]
[200.01026917 41.74821472]
[208.76734924 27.88295174]
[225.14057922 28.80445290]
[232.28659058 43.56475830]
[222.85417175 56.97972870]
[206.54658508 55.24919510]
[193.04560852 61.78551865]
[179.59251404 68.41984558]
[166.18801880 75.15183258]
[152.78353882 81.88381958]
[139.37904358 88.61581421]
[125.97455597 95.34780121]
[112.57006836 102.07978821]
[102.51690674 113.21234894]
[97.18214417 127.23163605]
[91.84738159 141.25091553]
[86.51261902 155.27020264]
[81.17785645 169.28948975]
[75.84309387 183.30876160]
[70.50833893 197.32804871]
[70.38152313 206.45774841]
[64.99269104 211.51150513]
[59.45460129 225.45172119]
[53.91650772 239.39192200]
[57.00611496 257.54681396]
[42.82244873 267.88348389]
[37.48768616 281.90277100]
[32.15292358 295.92205811]
[37.07768250 310.09054565]
[49.95761108 317.77868652]
[62.83753967 325.46682739]
[75.71746826 333.15496826]
[88.59739685 340.84310913]
[102.80972290 334.61499023]
[117.96130371 337.96304321]
[128.22602844 349.59982300]
[129.65692139 365.05078125]
[121.70375824 378.37472534]
[107.42470551 384.44827271]
[92.31034088 380.93606567]
[82.17244720 369.18859863]
[80.90925598 353.72302246]
[68.02932739 346.03491211]
[55.14939880 338.34677124]
[42.26947403 330.65863037]
[29.38954544 322.97048950]
[37.00685501 335.89242554]
[48.07056046 346.02133179]
[52.83959961 360.24301147]
[50.11908722 374.99423218]
[40.59064865 386.57910156]
[26.64163399 392.09497070]
[11.76697540 390.15991211]
[-0.30648023 381.25869751]
[-6.55372715 367.62152100]
[-5.40951633 352.66522217]
[2.83817506 340.13827515]
[7.06126785 325.74502563]
[-3.54533386 336.35162354]
[-14.15193558 346.95822144]
[-24.75853729 357.56481934]
[-33.53997803 369.72567749]
[-40.27196503 383.13015747]
[-47.00395584 396.53466797]
[-43.69529724 408.99868774]
[-49.57539749 420.02355957]
[-61.01189804 423.95751953]
[-67.93812561 437.26266479]
[-74.86435699 450.56784058]
[-81.79058838 463.87298584]
[-88.71681213 477.17816162]
[-95.64304352 490.48333740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 215]
[35 214]
[36 213]
[37 212]
[38 211]
[39 210]
[41 207]
[42 206]
[43 205]
[52 64]
[53 63]
[54 62]
[55 61]
[66 204]
[67 203]
[68 202]
[69 201]
[70 171]
[71 170]
[72 169]
[75 167]
[76 166]
[77 165]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 132]
[86 131]
[87 130]
[88 129]
[89 125]
[90 124]
[91 123]
[92 122]
[95 119]
[96 118]
[97 117]
[98 116]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[143 150]
[144 149]
[172 189]
[173 188]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
