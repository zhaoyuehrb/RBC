%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGUGUGGUCUGGGAAGGCUGGGGCGGUGGCAAGGUGGAGGGCGGGGGUGACAGCAGCCCGGAGCCGCGGAGCCUCAGCUUCCGCCUGGACCCAGCCUCGUGGGAGCCCCGCGGGUCCUGCCCAGAUGUGGAAGACUGAGGCCUGUUGAAAGUGCAGAGCUCAGCCCUGGCACCCUCUGUUCCCAAGAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[74.53170013 597.77960205]
[59.46693039 600.48352051]
[44.87464905 595.86578369]
[34.10805511 584.98736572]
[29.64123154 570.34820557]
[32.50062561 555.31213379]
[42.02916336 543.33441162]
[56.03726196 537.16741943]
[49.13563919 523.96832275]
[57.74558640 510.69506836]
[58.71155930 495.72619629]
[59.67753601 480.75732422]
[60.52289963 465.78118896]
[61.24760056 450.79870605]
[61.97230148 435.81622314]
[62.69700241 420.83374023]
[63.42170334 405.85125732]
[61.32328415 403.00204468]
[60.50795364 398.99081421]
[61.50863647 394.43502808]
[64.56073761 390.16763306]
[66.00844574 375.23767090]
[67.45615387 360.30767822]
[68.90386200 345.37771606]
[70.35157013 330.44775391]
[67.86464691 323.47738647]
[71.94475555 315.28958130]
[73.63279724 300.38485718]
[75.32084656 285.48013306]
[77.00888824 270.57543945]
[70.75301361 257.05828857]
[79.99418640 244.21650696]
[81.68222809 229.31178284]
[75.42636108 215.79463196]
[84.66752625 202.95285034]
[86.35556793 188.04814148]
[88.04360962 173.14343262]
[81.78774261 159.62628174]
[91.02891541 146.78450012]
[92.71695709 131.87977600]
[94.40499878 116.97506714]
[85.49075317 104.91122437]
[70.74746704 102.14799500]
[56.00417328 99.38476562]
[37.32294846 106.93611908]
[23.18846512 93.75260162]
[8.36380863 91.46577454]
[-6.46084738 89.17894745]
[-21.27929306 94.72189331]
[-32.67819595 85.13470459]
[-47.50285339 82.84787750]
[-62.58471680 89.28755188]
[-75.53840637 79.23101044]
[-73.03826904 63.02355957]
[-57.65623856 57.33803940]
[-45.21602631 68.02322388]
[-30.39136887 70.31005096]
[-16.63328362 64.60353088]
[-4.17402077 74.35429382]
[10.65063477 76.64112091]
[25.47529030 78.92794800]
[33.15486526 72.16255188]
[43.50885391 70.71779633]
[53.14390564 75.31137085]
[58.76740265 84.64147949]
[73.51069641 87.40470886]
[88.25398254 90.16793823]
[101.18352509 82.56353760]
[105.93354797 68.33549500]
[110.68356323 54.10744476]
[115.43358612 39.87939835]
[115.18379211 30.73472023]
[120.37643433 25.46147919]
[125.35504913 11.31180191]
[130.33366394 -2.83787489]
[135.31228638 -16.98755264]
[140.29090881 -31.13722992]
[145.26951599 -45.28690720]
[150.24813843 -59.43658447]
[155.11260986 -73.62590790]
[159.86264038 -87.85395050]
[164.61265564 -102.08200073]
[169.36267090 -116.31004333]
[174.11270142 -130.53808594]
[178.86271667 -144.76614380]
[183.61273193 -158.99418640]
[188.13291931 -173.29690552]
[192.42210388 -187.67059326]
[196.71128845 -202.04428101]
[201.00047302 -216.41796875]
[195.27760315 -225.68745422]
[195.60188293 -236.35656738]
[201.62425232 -244.90194702]
[211.15382385 -248.63471985]
[215.90385437 -262.86276245]
[220.65386963 -277.09082031]
[216.54866028 -295.03521729]
[230.11427307 -306.15914917]
[234.63446045 -320.46188354]
[239.15464783 -334.76458740]
[243.67483521 -349.06732178]
[248.19502258 -363.37005615]
[252.71520996 -377.67276001]
[257.23541260 -391.97549438]
[261.75558472 -406.27819824]
[260.76336670 -423.20309448]
[276.75216675 -428.84182739]
[286.59664917 -415.03881836]
[276.05831909 -401.75802612]
[271.53811646 -387.45529175]
[267.01794434 -373.15258789]
[262.49774170 -358.84985352]
[257.97756958 -344.54711914]
[253.45736694 -330.24441528]
[248.93717957 -315.94168091]
[244.41699219 -301.63894653]
[249.71679688 -290.75588989]
[246.05789185 -278.79724121]
[234.88191223 -272.34078979]
[230.13189697 -258.11273193]
[225.38188171 -243.88470459]
[230.63668823 -225.28427124]
[215.37416077 -212.12878418]
[211.08497620 -197.75509644]
[206.79579163 -183.38140869]
[202.50660706 -169.00772095]
[203.95544434 -164.44418335]
[202.54342651 -158.92201233]
[197.84078979 -154.24417114]
[193.09075928 -140.01611328]
[188.34074402 -125.78807068]
[183.59072876 -111.56002808]
[178.84069824 -97.33197784]
[174.09068298 -83.10393524]
[169.34066772 -68.87588501]
[170.20573425 -61.52590179]
[164.39781189 -54.45796585]
[159.41920471 -40.30828857]
[154.44058228 -26.15861130]
[149.46195984 -12.00893402]
[144.48335266 2.14074278]
[139.50473022 16.29042053]
[134.52610779 30.44009781]
[129.66163635 44.62942123]
[124.91161346 58.85746765]
[120.16159058 73.08551025]
[115.41157532 87.31356049]
[126.27310181 76.96816254]
[140.24304199 71.50550079]
[155.24122620 71.73896790]
[169.03437805 77.63381195]
[179.56863403 88.31227112]
[185.27542114 102.18427277]
[185.30497742 117.18424225]
[179.65290833 131.07862854]
[169.16081238 141.79852295]
[155.39100647 147.74768066]
[140.39385986 148.04025269]
[126.40249634 142.63269043]
[115.50028229 132.33018494]
[109.30971527 118.66310883]
[107.62166595 133.56782532]
[105.93362427 148.47253418]
[112.06875610 163.05577087]
[102.94832611 174.83146667]
[101.26028442 189.73619080]
[99.57224274 204.64089966]
[105.70737457 219.22413635]
[96.58694458 230.99983215]
[94.89890289 245.90454102]
[101.03402710 260.48779297]
[91.91359711 272.26348877]
[90.22555542 287.16818237]
[88.53751373 302.07290649]
[86.84947205 316.97763062]
[85.28154755 331.89544678]
[83.83383179 346.82540894]
[82.38612366 361.75540161]
[80.93841553 376.68536377]
[79.49070740 391.61535645]
[78.40419006 406.57595825]
[77.67948914 421.55844116]
[76.95478821 436.54092407]
[76.23008728 451.52340698]
[75.50538635 466.50588989]
[78.21924591 475.24215698]
[74.64640045 481.72329712]
[73.68042755 496.69216919]
[72.71444702 511.66104126]
[79.54698181 525.93084717]
[71.00612640 538.13342285]
[84.10540009 546.04968262]
[92.01541901 559.15277100]
[92.91852570 574.43164062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[10 189]
[11 188]
[12 187]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[27 175]
[28 174]
[29 173]
[30 172]
[32 170]
[33 169]
[35 167]
[36 166]
[37 165]
[39 163]
[40 162]
[41 161]
[42 67]
[43 66]
[44 65]
[46 61]
[47 60]
[48 59]
[50 57]
[51 56]
[68 147]
[69 146]
[70 145]
[71 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 126]
[88 125]
[89 124]
[90 123]
[94 121]
[95 120]
[96 119]
[98 116]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
