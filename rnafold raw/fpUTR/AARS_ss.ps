%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACAGCUGCGCGUCUGCGGGAAUAGGUGCAGCGGGCCCUUGGCGGGGGACUCUGAGGGAGGAGCUGGGGACGGCGACCCUAGGAGAGUUCUUUGGGGUGACUUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[95.66400909 110.31884003]
[82.08438110 116.69016266]
[68.50475311 123.06147766]
[65.37986755 136.25297546]
[55.34261322 145.07179260]
[42.24752808 146.43243408]
[30.95218277 140.05761719]
[17.19769287 146.04208374]
[3.44320321 152.02656555]
[-10.31128693 158.01104736]
[-24.06577682 163.99552917]
[-37.82026672 169.98001099]
[-51.57475662 175.96449280]
[-61.14213181 188.56512451]
[-75.89952087 186.54801941]
[-85.46689606 199.14865112]
[-100.22428894 197.13156128]
[-105.77916718 211.92745972]
[-120.20368958 218.38569641]
[-134.94003296 212.67468262]
[-141.24540710 198.18269348]
[-135.37892151 183.50755310]
[-120.82106781 177.35575867]
[-106.20876312 183.37705994]
[-97.62520599 171.20448303]
[-81.88400269 172.79353333]
[-73.30043793 160.62095642]
[-57.55923843 162.21000671]
[-43.80474854 156.22552490]
[-30.05025673 150.24104309]
[-16.29576683 144.25656128]
[-2.54127717 138.27207947]
[11.21321297 132.28759766]
[24.96770287 126.30312347]
[30.39065361 110.45383453]
[45.87300873 103.22418213]
[62.13343048 109.48184967]
[75.71305847 103.11053467]
[89.29268646 96.73921204]
[102.78079224 90.17636871]
[116.17468262 83.42330933]
[129.56857300 76.67025757]
[142.96246338 69.91719818]
[156.35635376 63.16414261]
[162.72454834 56.40745544]
[170.22619629 56.41555786]
[183.80581665 50.04423904]
[197.38545227 43.67291641]
[202.83685303 29.08114052]
[216.69927979 22.81316185]
[230.57672119 28.10016441]
[244.15634155 21.72884369]
[257.73596191 15.35752392]
[271.31561279 8.98620415]
[284.89523315 2.61488414]
[298.47485352 -3.75643587]
[312.05447388 -10.12775612]
[325.63409424 -16.49907494]
[339.21374512 -22.87039566]
[352.79336548 -29.24171448]
[366.37298584 -35.61303711]
[367.57684326 -52.03377914]
[376.80902100 -65.55377197]
[391.49667358 -72.57143402]
[407.62930298 -71.27446747]
[420.85369873 -62.10689545]
[434.24758911 -68.85995483]
[447.64147949 -75.61300659]
[461.03536987 -82.36606598]
[474.42926025 -89.11912537]
[487.82315063 -95.87217712]
[491.22912598 -111.13433075]
[503.67993164 -120.59538269]
[519.29663086 -119.78811646]
[530.70556641 -109.09369659]
[532.51971436 -93.56169891]
[523.88256836 -80.52586365]
[508.87222290 -76.14131165]
[494.57620239 -82.47828674]
[481.18231201 -75.72523499]
[467.78842163 -68.97217560]
[454.39453125 -62.21912003]
[441.00064087 -55.46606445]
[427.60675049 -48.71300888]
[427.72094727 -34.97837830]
[421.84967041 -22.48792267]
[411.09829712 -13.72835255]
[397.54989624 -10.47103405]
[383.86175537 -13.41401768]
[372.74432373 -22.03340721]
[359.16467285 -15.66208744]
[345.58505249 -9.29076767]
[332.00543213 -2.91944814]
[318.42581177 3.45187187]
[304.84616089 9.82319164]
[291.26654053 16.19451141]
[277.68692017 22.56583214]
[264.10729980 28.93715096]
[250.52766418 35.30847168]
[236.94804382 41.67979050]
[232.14410400 55.73175812]
[218.46319580 62.38663101]
[203.75675964 57.25254440]
[190.17713928 63.62386703]
[176.59750366 69.99518585]
[163.10940552 76.55802917]
[149.71551514 83.31108856]
[136.32162476 90.06414032]
[122.92774200 96.81719971]
[109.53385162 103.57025146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[15 26]
[17 24]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[46 105]
[47 104]
[48 103]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
