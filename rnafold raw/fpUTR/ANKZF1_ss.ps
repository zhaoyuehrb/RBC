%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGCUCUACGUGGGGCGGGGCUCAGGUGCGGACGCCGCCGGUUGUCCUCUUCGCUGCUCCGUAGUGACGGGGAUUGUUGUGUUGCAGAAAUCCGGCAAUCGACCUGAGGACUUGCGAGCCGCUCAGCUCCCGGGACGUUUGGAGCUGCUGCUAAAUAAUUUCUGCUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[89.36140442 99.93648529]
[77.97720337 90.16918945]
[66.59300232 80.40190125]
[55.20880127 70.63460541]
[46.62723541 67.40634918]
[43.70994568 60.58835983]
[32.50291061 50.61828613]
[21.29587746 40.64821243]
[10.08884335 30.67813492]
[11.68515682 45.59295273]
[4.33058023 58.66621780]
[-9.24520302 65.04572296]
[-24.00347900 62.36369324]
[-34.46664810 51.61557388]
[-36.75125885 36.79057693]
[-30.00936890 23.39106560]
[-16.74325943 16.39032936]
[-1.87533045 18.38737488]
[-11.54004574 6.91596222]
[-21.20475960 -4.55544901]
[-30.86947441 -16.02686119]
[-40.53419113 -27.49827194]
[-57.98095322 -33.33971024]
[-60.42205811 -50.70370102]
[-70.29113770 -61.99977112]
[-80.16021729 -73.29584503]
[-90.02929688 -84.59191895]
[-99.89838409 -95.88798523]
[-109.76746368 -107.18405914]
[-119.63654327 -118.48013306]
[-127.66772461 -122.90337372]
[-129.57917786 -130.06869507]
[-139.24388123 -141.54011536]
[-148.90859985 -153.01152039]
[-159.48744202 -151.23376465]
[-169.76689148 -154.00410461]
[-177.89517212 -160.75363159]
[-182.43719482 -170.20304871]
[-182.62771606 -180.60469055]
[-178.49952698 -190.06571960]
[-187.53273010 -202.04075623]
[-196.56591797 -214.01577759]
[-205.59912109 -225.99081421]
[-214.63232422 -237.96583557]
[-237.64108276 -236.17312622]
[-256.33853149 -252.24728394]
[-258.26480103 -278.41281128]
[-270.15826416 -287.55313110]
[-282.05172729 -296.69345093]
[-293.94519043 -305.83377075]
[-305.83868408 -314.97409058]
[-317.73214722 -324.11441040]
[-333.38900757 -326.38873291]
[-338.76568604 -340.27902222]
[-350.65914917 -349.41934204]
[-362.55261230 -358.55966187]
[-374.44607544 -367.69998169]
[-386.33953857 -376.84030151]
[-398.23303223 -385.98062134]
[-410.12649536 -395.12094116]
[-426.36965942 -399.97848511]
[-426.19854736 -416.93154907]
[-409.86062622 -421.46020508]
[-400.98617554 -407.01440430]
[-389.09271240 -397.87408447]
[-377.19921875 -388.73376465]
[-365.30575562 -379.59344482]
[-353.41229248 -370.45312500]
[-341.51882935 -361.31280518]
[-329.62536621 -352.17248535]
[-314.81918335 -350.55197144]
[-308.59182739 -336.00787354]
[-296.69836426 -326.86755371]
[-284.80487061 -317.72723389]
[-272.91140747 -308.58691406]
[-261.01794434 -299.44659424]
[-249.12448120 -290.30627441]
[-236.17921448 -297.88388062]
[-238.32604980 -312.72943115]
[-240.47288513 -327.57501221]
[-253.28103638 -336.83389282]
[-255.70823669 -352.45068359]
[-246.31446838 -365.16024780]
[-230.67288208 -367.42218018]
[-218.06335449 -357.89456177]
[-215.96690369 -342.22994995]
[-225.62731934 -329.72186279]
[-223.48048401 -314.87628174]
[-221.33363342 -300.03070068]
[-209.95840454 -295.48272705]
[-201.14155579 -287.50842285]
[-195.81462097 -277.28781128]
[-194.42056274 -266.21215820]
[-196.88539124 -255.69648743]
[-202.65728760 -246.99903870]
[-193.62408447 -235.02400208]
[-184.59089661 -223.04898071]
[-175.55769348 -211.07394409]
[-166.52450562 -199.09892273]
[-147.11117554 -197.85954285]
[-134.63531494 -182.54022217]
[-137.43719482 -162.67623901]
[-127.77247620 -151.20481873]
[-118.10776520 -139.73341370]
[-108.34046936 -128.34921265]
[-98.47138977 -117.05313873]
[-88.60231018 -105.75706482]
[-78.73323059 -94.46099854]
[-68.86414337 -83.16492462]
[-58.99506378 -71.86885071]
[-49.12598419 -60.57278061]
[-37.06166077 -59.43866730]
[-28.74783325 -50.07918930]
[-29.06277847 -37.16298676]
[-19.39806366 -25.69157600]
[-9.73334885 -14.22016430]
[-0.06863371 -2.74875259]
[9.59608078 8.72265911]
[20.05891991 19.47110176]
[31.26595306 29.44117737]
[42.47298431 39.41125107]
[53.68001938 49.38132858]
[64.97608948 59.25040817]
[76.36029053 69.01770020]
[87.74449158 78.78498840]
[99.12869263 88.55228424]
[112.40089417 95.54146576]
[126.89557648 99.40206909]
[141.39025879 103.26268005]
[155.88493347 107.12328339]
[170.37960815 110.98388672]
[184.87428284 114.84449768]
[199.36897278 118.70510101]
[214.69561768 114.78025818]
[225.00276184 125.53256989]
[239.49743652 129.39317322]
[255.18197632 124.60495758]
[266.98471069 135.99035645]
[262.76400757 151.83705139]
[246.86175537 155.84330750]
[235.63682556 143.88784790]
[221.14215088 140.02725220]
[206.85224915 144.22822571]
[195.50836182 133.19978333]
[181.01368713 129.33917236]
[166.51899719 125.47856903]
[152.02432251 121.61796570]
[137.52964783 117.75735474]
[123.03496552 113.89675140]
[108.54029083 110.03614044]
[103.97013092 115.98287964]
[94.82981110 127.87634277]
[90.25965118 133.82307434]
[97.72074890 146.83584595]
[112.70965576 151.07499695]
[120.09089661 164.37808228]
[115.95713806 178.64158630]
[123.41823578 191.65434265]
[137.85993958 199.42410278]
[138.08146667 215.82176208]
[123.85491180 223.97880554]
[109.81535339 215.50396729]
[110.40547180 199.11544800]
[102.94437408 186.10267639]
[88.54644775 182.46464539]
[80.79445648 169.37414551]
[84.70798492 154.29693604]
[77.24688721 141.28417969]
[62.31529999 142.71517944]
[48.88780975 136.02917480]
[41.03133011 123.25124359]
[41.12543106 108.25154114]
[49.14160538 95.57317352]
[62.65192413 89.05616760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[4 123]
[6 122]
[7 121]
[8 120]
[9 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[24 111]
[25 110]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[32 104]
[33 103]
[34 102]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[78 89]
[79 88]
[80 87]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[135 142]
[136 141]
[153 168]
[154 167]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
