%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAACUUGGAAUGUCCUGCAAUAUCUAACAUGUAAGCACGUCGAAUCAUUUUCUAGACAGAAUCUGAACCUCUGUGUCUCUCAGUCUUUCUCUCUUUCUCAUUCUCUUUCAAU\
) } def
/len { sequence length } bind def

/coor [
[87.30001831 471.41027832]
[75.42782593 461.98547363]
[67.49774170 449.06689453]
[64.46735382 434.21453857]
[66.70259094 419.22189331]
[73.93354797 405.89938354]
[85.28704071 395.85577393]
[99.39208984 390.30389404]
[98.97877502 375.30960083]
[98.56546021 360.31527710]
[98.15214539 345.32098389]
[97.73883057 330.32666016]
[97.32551575 315.33236694]
[82.55560303 312.83761597]
[68.55176544 307.50747681]
[55.85288239 299.54504395]
[44.94802475 289.25476074]
[36.25758362 277.03076172]
[30.11709023 263.34179688]
[26.76426125 248.71318054]
[26.32978058 233.70675659]
[28.83221817 218.89918518]
[34.17724228 204.85992432]
[42.16117859 192.12921143]
[52.47875977 181.19731140]
[64.73480225 172.48568726]
[78.45935059 166.33067322]
[93.12568665 162.97053528]
[92.71237183 147.97624207]
[89.33580780 141.28439331]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.29331970 52.43707657]
[91.88000488 37.44277191]
[91.46669006 22.44846916]
[91.05337524 7.45416403]
[77.19404602 1.15493309]
[67.48365021 -10.48960304]
[63.80705643 -25.13551903]
[66.84154510 -39.86484146]
[75.93277740 -51.76689529]
[89.23499298 -58.51348877]
[88.82167816 -73.50778961]
[88.40836334 -88.50209808]
[77.21118164 -99.33080292]
[77.00561523 -114.54304504]
[87.39813995 -125.15111542]
[86.98482513 -140.14541626]
[86.57151031 -155.13972473]
[86.15819550 -170.13403320]
[77.11412048 -183.81382751]
[84.68022156 -198.36326599]
[101.07314301 -198.81512451]
[109.42925262 -184.70458984]
[101.15249634 -170.54734802]
[101.56581116 -155.55303955]
[101.97912598 -140.55873108]
[102.39244080 -125.56443024]
[113.35355377 -115.54497528]
[113.98631287 -100.34450531]
[103.40266418 -88.91541290]
[103.81597900 -73.92110443]
[104.22929382 -58.92680359]
[117.88296509 -52.92324448]
[127.61605072 -41.54007721]
[131.45733643 -27.00028610]
[128.59313965 -12.17407417]
[119.53895569 -0.01229634]
[106.04768372 7.04084873]
[106.46099854 22.03515244]
[106.87431335 37.02945709]
[107.28762817 52.02376175]
[110.66419220 58.71559906]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.70668030 147.56292725]
[108.11999512 162.55722046]
[122.94915771 165.10432434]
[136.99192810 170.49394226]
[149.70927429 178.51718140]
[160.61340332 188.86408997]
[169.28651428 201.13566589]
[175.39682007 214.85916138]
[178.71116638 229.50639343]
[179.10401917 244.51396179]
[176.56213379 259.30505371]
[171.18507385 273.31152344]
[163.18121338 285.99569702]
[152.85978699 296.87106323]
[140.61882019 305.52096558]
[126.92987061 311.61444092]
[112.31981659 314.91906738]
[112.73313141 329.91336060]
[113.14644623 344.90765381]
[113.55976105 359.90197754]
[113.97307587 374.89627075]
[114.38639069 389.89056396]
[128.77586365 394.65701294]
[140.66540527 404.05993652]
[148.61927795 416.96386719]
[151.67703247 431.81060791]
[149.46943665 446.80734253]
[142.26304626 460.14315796]
[130.92807007 470.20767212]
[116.83328247 475.78555298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[13 100]
[28 85]
[29 84]
[31 83]
[32 82]
[35 79]
[36 78]
[37 76]
[38 75]
[39 74]
[40 73]
[46 67]
[47 66]
[48 65]
[51 62]
[52 61]
[53 60]
[54 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
