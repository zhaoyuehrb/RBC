%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUUUGAUUCCCUUGGCGGGCGGAAGCGGCCACAACCCGGCGAUCGAAAAGAUUCUUAGGAACGCCGUACCAGCCGCGUCUCUCAGGACAGCAGGCCCCUGUCCUUCUGUCGGGCGCCGCUCAGCCGUGCCCUCCGCCCCUCAGGUUCUUUUUCUAAUUCCAAAUAAACUUGCAAGAGGACU\
) } def
/len { sequence length } bind def

/coor [
[179.27093506 398.77035522]
[169.95326233 410.81616211]
[156.53862000 418.02496338]
[141.35115051 419.14782715]
[127.02220154 413.99023438]
[116.03433228 403.44570923]
[110.29125977 389.34121704]
[110.78801727 374.12039185]
[117.43852997 360.42037964]
[129.09056091 350.61477661]
[143.72531128 346.40243530]
[145.75683594 331.54064941]
[147.78837585 316.67883301]
[149.69363403 301.80035400]
[151.47250366 286.90618896]
[153.25137329 272.01205444]
[155.03024292 257.11788940]
[139.97189331 242.34298706]
[138.27456665 222.80516052]
[148.84863281 208.08078003]
[142.90310669 194.30940247]
[136.95758057 180.53804016]
[131.01205444 166.76666260]
[125.06652069 152.99528503]
[119.12099457 139.22392273]
[113.17546844 125.45254517]
[88.02142334 123.99881744]
[75.36466217 104.15846252]
[60.81709671 100.50217438]
[46.26953506 96.84589386]
[31.72196960 93.18961334]
[17.17440796 89.53332520]
[9.44451237 100.28042603]
[-1.45517325 107.73714447]
[-14.21102333 111.03117371]
[-27.29464340 109.79029846]
[-39.14600372 104.18434143]
[-48.35944366 94.90228271]
[-53.85039520 83.06765747]
[-54.98301697 70.10260010]
[-69.39803314 65.95443726]
[-83.81305695 61.80627441]
[-98.22807312 57.65811157]
[-112.64308929 53.50995255]
[-128.04478455 57.12915039]
[-138.13600159 46.17394257]
[-152.55101013 42.02577972]
[-161.99765015 53.93500137]
[-175.28509521 61.31824875]
[-190.38710022 63.04962921]
[-205.00073242 58.86511993]
[-216.89752197 49.40282822]
[-224.26329041 36.10568619]
[-225.97479248 21.00141144]
[-221.77107239 6.39329338]
[-212.29313660 -5.49103403]
[-198.98631287 -12.83929634]
[-183.87980652 -14.53093910]
[-169.27722168 -10.30799675]
[-157.40538025 -0.81443906]
[-150.07461548 12.50203609]
[-148.40284729 27.61076355]
[-133.98783875 31.75892448]
[-119.61721039 27.84302139]
[-108.49492645 39.09493256]
[-94.07991028 43.24309540]
[-79.66489410 47.39125824]
[-65.24987793 51.53941727]
[-50.83485413 55.68758011]
[-39.96768570 42.77578354]
[-24.50392914 35.88011932]
[-7.52593470 36.42789841]
[7.55898714 44.35745621]
[17.70238876 58.12083817]
[20.83069038 74.98576355]
[35.37825394 78.64204407]
[49.92581558 82.29833221]
[64.47338104 85.95461273]
[79.02094269 89.61090088]
[68.00717163 79.42773438]
[54.68067551 72.54264069]
[47.74657822 59.24157715]
[49.73282242 44.37366486]
[59.91529083 33.35924911]
[74.58179474 30.21381760]
[88.38540649 36.08409119]
[96.29380798 48.82996368]
[95.42372131 63.80503082]
[98.56988525 78.47137451]
[102.84028625 64.09210205]
[107.11069489 49.71282196]
[111.38110352 35.33354187]
[115.65150452 20.95426369]
[112.16320801 5.52240276]
[123.20370483 -4.47543526]
[127.47410583 -18.85471344]
[131.74450684 -33.23398972]
[135.89266968 -47.64900970]
[131.28359985 -63.38713074]
[142.80282593 -75.05929565]
[158.60035706 -70.65818024]
[162.42506409 -54.71127701]
[150.34239197 -43.62339020]
[151.57885742 -36.31941605]
[146.12379456 -28.96358490]
[141.85337830 -14.58430767]
[137.58297729 -0.20502977]
[141.37672424 14.19832993]
[130.03077698 25.22467041]
[125.76037598 39.60394669]
[121.48997498 53.98322678]
[117.21956635 68.36250305]
[112.94915771 82.74178314]
[124.61969757 92.16508484]
[137.77655029 84.96110535]
[150.93339539 77.75713348]
[164.09025574 70.55316162]
[177.24710083 63.34918976]
[190.40396118 56.14521790]
[198.79246521 42.73091125]
[213.67179871 43.40501785]
[226.82865906 36.20104218]
[237.81768799 23.29067802]
[253.26557922 30.27630806]
[250.82934570 47.05430603]
[234.03263855 49.35789490]
[220.87577820 56.56187057]
[213.42834473 69.46089935]
[197.60794067 69.30207062]
[184.45108032 76.50604248]
[171.29423523 83.71001434]
[158.13737488 90.91398621]
[144.98052979 98.11795807]
[131.82366943 105.32193756]
[126.94683838 119.50701904]
[132.89236450 133.27838135]
[138.83789062 147.04975891]
[144.78341675 160.82113647]
[150.72894287 174.59249878]
[156.67446899 188.36387634]
[162.62001038 202.13525391]
[180.96968079 204.80088806]
[193.89810181 220.14001465]
[193.36477661 241.71382141]
[204.95487976 251.23587036]
[216.54498291 260.75790405]
[228.13510132 270.27996826]
[239.72520447 279.80203247]
[251.31530762 289.32406616]
[266.83346558 287.97348022]
[278.45184326 297.79528809]
[279.64379883 312.59783936]
[291.23388672 322.11987305]
[302.82400513 331.64193726]
[317.47543335 326.81085205]
[332.40713501 330.68994141]
[342.85449219 342.04144287]
[345.48376465 357.24310303]
[339.45599365 371.44412231]
[326.69458008 380.11303711]
[311.27166748 380.48361206]
[298.10864258 372.43759155]
[291.40579224 358.54241943]
[293.30194092 343.23202515]
[281.71185303 333.70999146]
[270.12173462 324.18792725]
[255.36929321 325.89105225]
[243.47962952 316.39944458]
[241.79325867 300.91418457]
[230.20315552 291.39212036]
[218.61303711 281.87008667]
[207.02293396 272.34802246]
[195.43283081 262.82595825]
[183.84272766 253.30392456]
[169.92439270 258.89675903]
[168.14552307 273.79092407]
[166.36665344 288.68505859]
[164.58778381 303.57922363]
[166.68040466 312.49475098]
[162.65016174 318.71038818]
[160.61863708 333.57217407]
[158.58711243 348.43395996]
[171.55450439 356.41937256]
[180.14749146 368.99237061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 182]
[12 181]
[13 180]
[14 178]
[15 177]
[16 176]
[17 175]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[46 63]
[47 62]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[95 107]
[96 106]
[97 105]
[98 103]
[114 134]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[121 127]
[122 126]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
