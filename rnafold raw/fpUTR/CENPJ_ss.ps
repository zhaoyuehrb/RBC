%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCCACAGGACCUCGGGACGGGGGCGGGGCUCCGACAGAGGCGGCGAUUGUGGCGGCCCAUUUGUAAAUGCUGCGGAGAUUGAGGUGUCGGUUCGUGCUGCUGAGCUGCCCAGGCUUCACGGAGCGGUGUUGGAAAUCAAUAGCUCUUCUAGCCUUUGCAUUGUUUAAAUAUAAUAGUGUCAUUGGACUAAG\
) } def
/len { sequence length } bind def

/coor [
[92.77396393 169.57936096]
[78.55127716 174.34541321]
[63.60128021 173.12170410]
[50.34296036 166.10621643]
[40.92159653 154.43411255]
[36.86162186 139.99401855]
[38.81996155 125.12239838]
[46.47974777 112.22559357]
[58.60157776 103.39036560]
[73.22406769 100.04631805]
[87.98362732 102.73549652]
[75.15648651 94.95960999]
[62.32934570 87.18372345]
[49.44029999 79.51087952]
[36.49017334 71.94158173]
[23.54005051 64.37228394]
[14.53969383 62.74000168]
[10.44441319 56.57646179]
[-2.38272834 48.80057144]
[-15.20987034 41.02468491]
[-24.18290901 39.24835587]
[-28.17887497 33.01996613]
[-40.87973785 25.03948593]
[-53.58060074 17.05900574]
[-73.73020172 17.22766685]
[-82.03925323 -0.22422840]
[-94.98937225 -7.79352665]
[-107.93949890 -15.36282444]
[-120.88962555 -22.93212318]
[-133.83975220 -30.50142097]
[-149.65840149 -30.78532982]
[-156.74198914 -43.88769531]
[-169.69212341 -51.45699692]
[-189.82595825 -50.64259338]
[-198.69010925 -67.81920624]
[-211.87617493 -74.96954346]
[-225.06225586 -82.11988068]
[-238.24833679 -89.27021790]
[-251.43441772 -96.42055511]
[-255.79612732 -96.14608765]
[-259.62902832 -97.17709351]
[-262.58615112 -99.18499756]
[-264.46374512 -101.76202393]
[-265.21469116 -104.47506714]
[-277.91555786 -112.45555115]
[-293.13848877 -109.15404510]
[-305.90527344 -117.42832184]
[-308.95895386 -131.96141052]
[-321.65982056 -139.94189453]
[-334.36068726 -147.92237854]
[-347.06152344 -155.90284729]
[-359.76239014 -163.88333130]
[-375.56384277 -164.67410278]
[-382.22381592 -177.99678040]
[-398.02526855 -178.78756714]
[-404.68527222 -192.11022949]
[-417.38610840 -200.09071350]
[-430.08697510 -208.07119751]
[-442.78784180 -216.05168152]
[-455.48870850 -224.03216553]
[-468.38488770 -215.86811829]
[-483.54714966 -214.11653137]
[-497.96505737 -219.12518311]
[-508.77590942 -229.89961243]
[-513.83319092 -244.30053711]
[-512.13281250 -259.46862793]
[-504.01235962 -272.39230347]
[-491.08413696 -280.50549316]
[-475.91506958 -282.19735718]
[-461.51699829 -277.13195801]
[-450.74865723 -266.31503296]
[-445.74810791 -251.89431763]
[-447.50823975 -236.73301697]
[-434.80737305 -228.75254822]
[-422.10650635 -220.77206421]
[-409.40563965 -212.79158020]
[-396.70477295 -204.81109619]
[-381.81179810 -204.59114075]
[-374.24334717 -190.69764709]
[-359.35037231 -190.47769165]
[-351.78192139 -176.58419800]
[-339.08105469 -168.60371399]
[-326.38018799 -160.62322998]
[-313.67932129 -152.64274597]
[-300.97845459 -144.66227722]
[-286.55966187 -148.21669006]
[-273.56549072 -140.30427551]
[-269.93505859 -125.15641022]
[-257.23419189 -117.17593384]
[-244.28408813 -109.60663605]
[-231.09800720 -102.45629883]
[-217.91192627 -95.30596161]
[-204.72584534 -88.15562439]
[-191.53976440 -81.00528717]
[-182.03015137 -84.78565979]
[-171.79611206 -82.65641022]
[-164.27345276 -75.08535767]
[-162.12281799 -64.40711975]
[-149.17269897 -56.83782196]
[-134.28031921 -57.09532166]
[-126.27044678 -43.45154572]
[-113.32032776 -35.88224792]
[-100.37020111 -28.31295013]
[-87.42007446 -20.74365044]
[-74.46995544 -13.17435265]
[-64.84406281 -16.64799118]
[-54.68352509 -14.19181824]
[-47.40739822 -6.38353825]
[-45.60012054 4.35814285]
[-32.89925766 12.33862400]
[-20.19839287 20.31910515]
[-7.43398142 28.19754219]
[5.39315987 35.97343063]
[18.22030067 43.74932098]
[31.10934830 51.42216110]
[44.05947113 58.99145889]
[57.00959778 66.56075287]
[64.37996674 67.22270966]
[70.10523224 74.35658264]
[82.93237305 82.13246918]
[95.75951385 89.90835571]
[99.14157104 83.64945221]
[106.29401398 79.12860870]
[116.22087097 78.13305664]
[130.60089111 73.86514282]
[144.98091125 69.59722900]
[159.36093140 65.32931519]
[170.38923645 53.98528671]
[184.79193115 57.78152847]
[195.82023621 46.43749619]
[210.22294617 50.23373795]
[224.60296631 45.96582413]
[238.98297119 41.69791031]
[253.36299133 37.42999649]
[267.74301147 33.16208267]
[276.62377930 19.80125809]
[292.61856079 18.55778694]
[303.45755005 30.38555145]
[300.82598877 46.21130371]
[286.74258423 53.89487839]
[272.01092529 47.54209900]
[257.63092041 51.81001282]
[243.25088501 56.07792664]
[228.87088013 60.34584045]
[214.49085999 64.61375427]
[204.49110413 75.65251923]
[189.05984497 72.16154480]
[179.06008911 83.20030212]
[163.62884521 79.70933533]
[149.24882507 83.97724915]
[134.86880493 88.24516296]
[120.48878479 92.51307678]
[116.45190430 106.95964813]
[126.53641510 118.06381989]
[136.62092590 129.16799927]
[146.79411316 140.19097900]
[157.05529785 151.13209534]
[172.61781311 151.79994202]
[182.86825562 163.04196167]
[182.13566589 177.87431335]
[192.39686584 188.81542969]
[202.74540710 199.67395020]
[213.18064880 210.44918823]
[223.61589050 221.22442627]
[234.05113220 231.99966431]
[244.48635864 242.77491760]
[254.92160034 253.55015564]
[265.35684204 264.32537842]
[280.94082642 263.03195190]
[293.68038940 272.10046387]
[297.56024170 287.24908447]
[290.74844360 301.32510376]
[276.46136475 307.68222046]
[261.44488525 303.31881714]
[252.78933716 290.29516602]
[254.58160400 274.76062012]
[244.14636230 263.98538208]
[233.71112061 253.21014404]
[223.27589417 242.43490601]
[212.84065247 231.65966797]
[202.40541077 220.88442993]
[191.97016907 210.10919189]
[185.04988098 207.48809814]
[181.45574951 199.07661438]
[171.19456482 188.13551331]
[156.34573364 187.91627502]
[145.78356934 176.96661377]
[146.11419678 161.39329529]
[135.85299683 150.45217896]
[128.97560120 147.72052002]
[125.51675415 139.25250244]
[115.43224335 128.14833069]
[105.34773254 117.04416656]
[110.80829620 131.01492310]
[110.32217407 146.00704956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 121]
[12 120]
[13 119]
[14 117]
[15 116]
[16 115]
[18 114]
[19 113]
[20 112]
[22 111]
[23 110]
[24 109]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[32 99]
[33 98]
[35 94]
[36 93]
[37 92]
[38 91]
[39 90]
[44 89]
[45 88]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[54 79]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[124 152]
[125 151]
[126 150]
[127 149]
[129 147]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[153 193]
[154 192]
[155 191]
[156 189]
[157 188]
[160 185]
[161 184]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
