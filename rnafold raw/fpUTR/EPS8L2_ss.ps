%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCGCAACCUGUCGCUCAGGUUCCUCCUCUCCCGGCCCCGCCCCGGCCCGGCCCCGCCGAGCGUCCCACCCGCCCGCGGGAGACCUGGCGCCCCGGCCGAGGCGCGAACAGACGGACGCACCGGCGAGCGCCGAGGGGACAGGCCGAGCGCGGGGCGCCGGAGGCAGGUGUGGGACAGGCACUGGCCUCAGACCGGGGCCACACUGAGGUCUGCCCUUCUCCCGCUGGCCGCCACCCAAGACACC\
) } def
/len { sequence length } bind def

/coor [
[546.25213623 386.90707397]
[560.50756836 382.23986816]
[575.48962402 382.97549438]
[562.66046143 375.20291138]
[549.83129883 367.43032837]
[537.00213623 359.65777588]
[524.12402344 351.96661377]
[509.81417847 355.93698120]
[496.59637451 348.40405273]
[492.52893066 333.36764526]
[479.60235596 325.75820923]
[466.67578125 318.14877319]
[453.74917603 310.53933716]
[446.40850830 309.85626221]
[440.70791626 302.75076294]
[427.87878418 294.97817993]
[415.04962158 287.20559692]
[402.22048950 279.43304443]
[389.39132690 271.66046143]
[382.05990601 270.88446045]
[376.44976807 263.70730591]
[363.72012329 255.77284241]
[350.99044800 247.83837891]
[338.26077271 239.90393066]
[323.85494995 243.51049805]
[310.83221436 235.64517212]
[307.14700317 220.51054382]
[294.41732788 212.57609558]
[281.68765259 204.64163208]
[268.95800781 196.70716858]
[256.22833252 188.77270508]
[243.49867249 180.83825684]
[230.76901245 172.90379333]
[226.01856995 173.08470154]
[221.09962463 170.29978943]
[217.82093811 164.60362244]
[205.29637146 156.34924316]
[192.77178955 148.09484863]
[180.19517517 139.91995239]
[165.30479431 139.56524658]
[157.86236572 125.60384369]
[145.23423767 117.50876617]
[132.60610962 109.41368866]
[119.97797394 101.31861877]
[101.36141205 117.61937714]
[85.04741669 103.34584045]
[70.67959595 99.03704834]
[56.31177139 94.72826385]
[41.94394684 90.41947174]
[27.57612419 86.11067963]
[12.13500214 89.55775452]
[2.16668320 78.49060059]
[-12.20113945 74.18180847]
[-21.43607903 79.87043762]
[-32.05862045 79.55773926]
[-40.58357239 73.58705139]
[-44.34602737 64.11858368]
[-58.60008621 59.44720078]
[-72.85414124 54.77581787]
[-87.10820007 50.10443497]
[-96.21276855 50.40740204]
[-101.51257324 45.28254318]
[-115.70631409 40.43097305]
[-124.81398773 40.61858749]
[-130.04844666 35.42700577]
[-144.17959595 30.39602852]
[-158.31074524 25.36504936]
[-167.82194519 30.57863045]
[-178.41502380 29.72831535]
[-186.62661743 23.33350945]
[-189.90467834 13.68662548]
[-203.90383911 8.29928207]
[-217.90299988 2.91193819]
[-231.90216064 -2.47540545]
[-248.00856018 0.60941213]
[-258.52713013 -11.97199059]
[-252.63726807 -27.27694511]
[-236.39796448 -29.56102562]
[-226.51481628 -16.47456741]
[-212.51565552 -11.08722305]
[-198.51649475 -5.69987965]
[-184.51733398 -0.31253609]
[-165.66850281 -4.68829823]
[-153.27975464 11.23390484]
[-139.14862061 16.26488304]
[-125.01747131 21.29586029]
[-110.85474396 26.23723412]
[-96.66100311 31.08880424]
[-82.43682098 35.85037613]
[-68.18276215 40.52175903]
[-53.92870331 45.19314194]
[-39.67464447 49.86452484]
[-21.07163811 44.53970337]
[-7.89234972 59.81398773]
[6.47547293 64.12277985]
[20.88891220 60.36751175]
[31.88491440 71.74285889]
[46.25273514 76.05165100]
[60.62055969 80.36043549]
[74.98838043 84.66922760]
[89.35620117 88.97801971]
[95.37303925 82.94458771]
[104.72252655 80.54348755]
[100.77909088 66.07112122]
[89.68595886 54.79048157]
[93.80515289 40.47679901]
[89.86171722 26.00443459]
[85.91828918 11.53207016]
[72.48011017 3.65468812]
[68.68707275 -11.07852364]
[76.27976990 -23.84122658]
[64.26031494 -34.99760437]
[68.17558289 -50.92251205]
[83.99787903 -55.23377228]
[95.45058441 -43.49633026]
[90.75213623 -27.78465843]
[103.76976776 -20.63785934]
[107.97513580 -6.01699924]
[100.39065552 7.58863831]
[104.33408356 22.06100273]
[108.27751923 36.53336716]
[119.08859253 46.77885056]
[115.25145721 62.12769318]
[119.19489288 76.60005951]
[128.07304382 88.69048309]
[140.70118713 96.78555298]
[153.32931519 104.88063049]
[165.95744324 112.97570801]
[181.75108337 113.90942383]
[188.29025269 127.29181671]
[197.18011475 129.28060913]
[201.02618408 135.57026672]
[213.55075073 143.82466125]
[226.07533264 152.07905579]
[238.70346069 160.17413330]
[251.43313599 168.10858154]
[264.16278076 176.04304504]
[276.89245605 183.97750854]
[289.62213135 191.91197205]
[302.35177612 199.84642029]
[315.08145142 207.78088379]
[330.29232788 204.42431641]
[343.08898926 212.65231323]
[346.19525146 227.17425537]
[358.92489624 235.10871887]
[371.65457153 243.04318237]
[384.38424683 250.97764587]
[397.16390991 258.83132935]
[409.99304199 266.60388184]
[422.82220459 274.37646484]
[435.65136719 282.14904785]
[448.48049927 289.92160034]
[461.35864258 297.61276245]
[474.28521729 305.22219849]
[487.21179199 312.83163452]
[500.13836670 320.44107056]
[515.25933838 316.70022583]
[528.26031494 324.60144043]
[531.73345947 339.04003906]
[540.69244385 340.68960571]
[544.77471924 346.82861328]
[557.60388184 354.60119629]
[570.43304443 362.37374878]
[583.26214600 370.14633179]
[596.77081299 376.66680908]
[610.83709717 381.87640381]
[624.90338135 387.08596802]
[634.01287842 387.12915039]
[639.11413574 392.45166016]
[653.11328125 397.83898926]
[667.11248779 403.22634888]
[681.17877197 408.43591309]
[695.30987549 413.46691895]
[709.44104004 418.49789429]
[723.57220459 423.52886963]
[737.70330811 428.55984497]
[751.83447266 433.59082031]
[768.64923096 424.82211304]
[786.22344971 431.04586792]
[793.51696777 447.85534668]
[807.77105713 452.52673340]
[822.02508545 457.19812012]
[836.27917480 461.86950684]
[842.77856445 460.89312744]
[848.01898193 463.01205444]
[850.83245850 466.84399414]
[864.96362305 471.87496948]
[879.09478760 476.90594482]
[893.22589111 481.93692017]
[907.35705566 486.96789551]
[921.48822021 491.99887085]
[935.61932373 497.02984619]
[949.75048828 502.06082153]
[959.26171875 496.84725952]
[969.85479736 497.69757080]
[978.06640625 504.09237671]
[981.34442139 513.73925781]
[995.68420410 507.09503174]
[1010.49322510 512.61499023]
[1016.98547363 527.02423096]
[1011.30926514 541.77398682]
[996.83215332 548.11352539]
[982.14324951 542.28167725]
[975.95709229 527.73840332]
[957.10827637 532.11419678]
[944.71954346 516.19195557]
[930.58837891 511.16098022]
[916.45721436 506.13000488]
[902.32611084 501.09902954]
[888.19494629 496.06805420]
[874.06378174 491.03707886]
[859.93267822 486.00610352]
[845.80151367 480.97512817]
[831.60778809 476.12356567]
[817.35369873 471.45217896]
[803.09967041 466.78079224]
[788.84558105 462.10940552]
[780.05029297 469.33184814]
[768.74554443 471.44439697]
[757.70812988 467.81082153]
[749.70581055 459.22091675]
[746.80352783 447.72195435]
[732.67236328 442.69097900]
[718.54119873 437.66000366]
[704.41003418 432.62902832]
[690.27893066 427.59805298]
[676.14776611 422.56707764]
[671.54571533 423.75891113]
[666.14526367 422.08947754]
[661.72509766 417.22549438]
[647.72595215 411.83816528]
[633.72680664 406.45083618]
[619.69378662 401.15225220]
[605.62750244 395.94268799]
[591.56121826 390.73309326]
[601.45709229 402.00573730]
[606.67083740 416.07046509]
[606.51379395 431.06964111]
[601.00671387 445.02215576]
[590.87701416 456.08511353]
[577.46258545 462.79733276]
[562.53527832 464.27224731]
[548.06671143 460.31506348]
[535.96783447 451.44842529]
[527.83673096 438.84347534]
[524.74731445 424.16506958]
[527.10772705 409.35195923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[7 159]
[10 156]
[11 155]
[12 154]
[13 153]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[21 147]
[22 146]
[23 145]
[24 144]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[36 134]
[37 133]
[38 132]
[39 130]
[41 128]
[42 127]
[43 126]
[44 125]
[46 101]
[47 100]
[48 99]
[49 98]
[50 97]
[52 95]
[53 94]
[57 92]
[58 91]
[59 90]
[60 89]
[62 88]
[63 87]
[65 86]
[66 85]
[67 84]
[71 82]
[72 81]
[73 80]
[74 79]
[103 124]
[104 123]
[106 121]
[107 120]
[108 119]
[111 116]
[165 235]
[166 234]
[167 233]
[169 232]
[170 231]
[171 230]
[172 227]
[173 226]
[174 225]
[175 224]
[176 223]
[177 222]
[180 217]
[181 216]
[182 215]
[183 214]
[186 213]
[187 212]
[188 211]
[189 210]
[190 209]
[191 208]
[192 207]
[193 206]
[197 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
