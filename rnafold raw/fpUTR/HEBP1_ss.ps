%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCUCUGGCCCCUGCCUCUAGCCCCGCCUCUCGCCUCGCCGCCUCGCCGUCCCGCCGCCUUGCCGCCCUGCCACCCUGCCGCCCUGCCGCCCUGCCGCCCUGCCGCCCUGCCGCCGGUGGUCGCUGCCCGUGGUGCUCCGUCGCCCCCGCCACCUCACGUCCUCCCGUGCGUCGGGAGCGUCUCGGCUACAAC\
) } def
/len { sequence length } bind def

/coor [
[-41.22348404 422.87335205]
[-50.66532898 420.68429565]
[-59.24707794 432.98687744]
[-52.66138840 445.33517456]
[-52.04420853 459.25003052]
[-57.45908737 472.01104736]
[-67.79586792 481.14804077]
[-80.99779510 484.91912842]
[-94.47058105 482.64257812]
[-103.24841309 494.80603027]
[-112.02624512 506.96948242]
[-106.76084900 519.71551514]
[-108.47070312 533.29071045]
[-116.60260010 544.15948486]
[-128.94488525 549.54449463]
[-142.22802734 548.13604736]
[-151.19969177 560.15722656]
[-150.32560730 576.17645264]
[-162.40031433 586.73968506]
[-178.16113281 583.74365234]
[-185.51770020 569.48669434]
[-178.82670593 554.90551758]
[-163.22088623 551.18560791]
[-154.24923706 539.16436768]
[-159.62165833 523.65863037]
[-154.64770508 507.84631348]
[-141.09719849 498.01324463]
[-124.18969727 498.19165039]
[-115.41186523 486.02819824]
[-106.63403320 473.86474609]
[-113.61154938 459.29620361]
[-112.28591919 443.10327148]
[-102.92436981 429.70968628]
[-88.00236511 422.82223511]
[-71.54965973 424.40512085]
[-62.96791077 412.10253906]
[-71.05314636 393.48480225]
[-66.23085785 373.62539673]
[-50.29259109 360.61306763]
[-29.59219170 359.85171509]
[-22.02289391 346.90158081]
[-14.45359612 333.95147705]
[-6.88429785 321.00134277]
[-13.02895832 307.45950317]
[-9.98538780 292.72177124]
[1.28445470 282.48245239]
[16.59959602 280.82333374]
[24.16889381 267.87319946]
[31.73819160 254.92308044]
[31.41090584 250.14709473]
[34.08896637 245.11685181]
[39.76334000 241.68475342]
[47.74382401 228.98390198]
[55.72430420 216.28303528]
[63.70478439 203.58216858]
[71.68526459 190.88130188]
[71.90522003 175.98832703]
[85.79872131 168.41987610]
[93.77919769 155.71900940]
[101.75968170 143.01815796]
[75.52477264 130.63334656]
[65.21586609 106.39020538]
[72.85528564 83.97441101]
[91.22802734 73.74845886]
[90.50701904 58.76579666]
[82.11532593 45.35348511]
[89.23192596 32.26901627]
[88.51091766 17.28635216]
[80.03835297 10.44050503]
[76.80537415 0.26901904]
[79.65122223 -9.78933239]
[87.40145874 -16.47197533]
[87.16104126 -31.47004890]
[86.92062378 -46.46812057]
[86.68020630 -61.46619415]
[86.43978882 -76.46427155]
[86.19937134 -91.46234131]
[77.48963165 -100.98669434]
[77.60502625 -113.49147797]
[85.93776703 -122.27104187]
[85.93776703 -137.27104187]
[78.20046997 -151.07121277]
[85.93776703 -163.79849243]
[85.93776703 -178.79849243]
[73.55278778 -187.95919800]
[68.99003601 -202.48622131]
[73.79934692 -216.74577332]
[85.93776703 -225.33627319]
[85.93776703 -240.33627319]
[78.20046997 -254.13644409]
[85.93776703 -266.86370850]
[85.93776703 -281.86370850]
[72.35588837 -288.92001343]
[63.61847305 -301.48648071]
[61.73331070 -316.67544556]
[67.13360596 -330.99661255]
[78.57839966 -341.15902710]
[93.43776703 -344.82751465]
[108.29713440 -341.15902710]
[119.74192810 -330.99661255]
[125.14221954 -316.67544556]
[123.25706482 -301.48648071]
[114.51964569 -288.92001343]
[100.93776703 -281.86370850]
[100.93776703 -266.86370850]
[108.67506409 -254.13644409]
[100.93776703 -240.33627319]
[100.93776703 -225.33627319]
[113.07618713 -216.74577332]
[117.88549805 -202.48622131]
[113.32274628 -187.95919800]
[100.93776703 -178.79849243]
[100.93776703 -163.79849243]
[108.67506409 -151.07121277]
[100.93776703 -137.27104187]
[100.93776703 -122.27104187]
[110.52048492 -107.57571411]
[101.19744110 -91.70275879]
[101.43785858 -76.70468903]
[101.67827606 -61.70661163]
[101.91869354 -46.70853806]
[102.15911102 -31.71046638]
[102.39953613 -16.71239281]
[113.52829742 -0.90861362]
[103.49357605 16.56534767]
[104.21458435 31.54800797]
[112.55470276 43.88866043]
[105.48968506 58.04478836]
[106.21068573 73.02745056]
[118.59654999 72.97695160]
[131.48237610 78.84677124]
[142.06109619 90.80643463]
[156.96678162 89.12696838]
[171.87246704 87.44750214]
[186.77815247 85.76803589]
[201.68383789 84.08856964]
[216.58952332 82.40910339]
[221.58195496 67.98556519]
[232.34420776 57.16259766]
[246.73942566 52.08910370]
[261.90942383 53.77243042]
[274.84222412 61.87835312]
[282.96994019 74.79743195]
[284.67886353 89.96457672]
[279.62969971 104.36833954]
[268.82489014 115.14884949]
[254.40980530 120.16561127]
[239.24655151 118.42256165]
[226.34577942 110.26576996]
[218.26898193 97.31478119]
[203.36329651 98.99425507]
[188.45762634 100.67372131]
[173.55194092 102.35318756]
[158.64625549 104.03265381]
[143.74057007 105.71212006]
[142.07167053 113.02407837]
[153.06745911 123.22664642]
[138.73385620 127.64799500]
[137.06494141 134.95996094]
[149.76580811 142.94044495]
[162.46667480 150.92091370]
[177.81700134 147.16023254]
[191.28703308 155.42666626]
[194.88520813 170.81590271]
[186.47682190 184.19776917]
[171.05041504 187.63305664]
[157.75817871 179.08366394]
[154.48619080 163.62178040]
[141.78532410 155.64129639]
[129.08445740 147.66082764]
[114.46054077 150.99864197]
[106.48006439 163.69949341]
[98.49958038 176.40036011]
[97.70880890 192.20179749]
[84.38613129 198.86178589]
[76.40564728 211.56265259]
[68.42516327 224.26351929]
[60.44468689 236.96438599]
[52.46420288 249.66523743]
[44.68831635 262.49237061]
[37.11901855 275.44250488]
[29.54971886 288.39263916]
[35.61951065 302.55114746]
[32.22809601 317.39541626]
[20.88036919 327.27938843]
[6.06582689 328.57064819]
[-1.50347137 341.52075195]
[-9.07276917 354.47088623]
[-16.64206696 367.42102051]
[-10.65289402 375.33984375]
[-7.33519936 384.66641235]
[-6.98000383 394.52960205]
[-9.60248375 404.01370239]
[-14.94221210 412.24368286]
[-22.48891068 418.46572876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 36]
[3 35]
[9 30]
[10 29]
[11 28]
[16 24]
[17 23]
[40 189]
[41 188]
[42 187]
[43 186]
[47 182]
[48 181]
[49 180]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[58 173]
[59 172]
[60 171]
[64 129]
[65 128]
[67 126]
[68 125]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[80 116]
[81 115]
[83 113]
[84 112]
[88 108]
[89 107]
[91 105]
[92 104]
[132 155]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
