%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCCCCAGCCCCAGCCCCGGCCCCGGCCCCGGCUCGCGGGCGCUGCGUCUCCGCGUACAGGAGGCGGCGGCGGCUCCCAGUCACCGGCCCCCGCCGGCGAGCGCACG\
) } def
/len { sequence length } bind def

/coor [
[131.34693909 173.86352539]
[130.88398743 162.78544617]
[133.15539551 151.91960144]
[138.02856445 141.93130493]
[127.05343628 131.70651245]
[116.07830048 121.48171234]
[105.10317230 111.25691223]
[100.46630859 113.43090057]
[94.93701935 113.60694122]
[89.40072632 111.44308472]
[84.86021423 106.99370575]
[69.86171722 107.20597076]
[54.86322021 107.41822815]
[39.86472321 107.63049316]
[24.87072945 108.05497742]
[9.89475441 108.90360260]
[-5.06771231 109.96406555]
[-20.03017998 111.02452850]
[-34.99264526 112.08499146]
[-45.32769394 123.73937225]
[-60.51687241 124.60168457]
[-71.56385040 114.67697144]
[-86.52631378 115.73743439]
[-101.48878479 116.79789734]
[-114.76524353 126.42430115]
[-129.62785339 119.49358368]
[-130.78723145 103.13546753]
[-117.05071259 94.17778778]
[-102.54924774 101.83543396]
[-87.58677673 100.77497101]
[-72.62431335 99.71450806]
[-63.08755875 88.33092499]
[-47.92859650 87.04232025]
[-36.05310822 97.12252808]
[-21.09064293 96.06206512]
[-6.12817574 95.00160217]
[8.83429146 93.94113922]
[15.37938404 90.27554321]
[24.23411179 93.06848907]
[30.88031578 89.58959198]
[39.65245819 92.63199615]
[54.65095901 92.41973114]
[69.64945221 92.20747375]
[84.64795685 91.99520874]
[96.31848907 82.57190704]
[99.68585968 67.95476532]
[103.05323029 53.33762741]
[106.42060089 38.72048569]
[109.78797150 24.10334396]
[112.94816589 9.44001484]
[115.90053558 -5.26656485]
[118.85291290 -19.97314453]
[121.80528259 -34.67972565]
[124.75765991 -49.38630295]
[127.71003723 -64.09288025]
[117.80303955 -76.19187164]
[118.04261017 -91.82762146]
[128.31562805 -103.61740875]
[143.77149963 -105.99445343]
[157.11241150 -97.83639526]
[162.03921509 -82.99521637]
[156.22561646 -68.47846222]
[142.41661072 -61.14051056]
[139.46423340 -46.43392944]
[136.51187134 -31.72735023]
[133.55949402 -17.02077103]
[130.60711670 -2.31419063]
[127.65474701 12.39238930]
[129.44995117 19.67607117]
[124.40511322 27.47071457]
[121.03774261 42.08785629]
[117.67037201 56.70499802]
[114.30300140 71.32213593]
[110.93563080 85.93927765]
[115.32797241 100.28177643]
[126.30310059 110.50657654]
[137.27822876 120.73137665]
[148.25335693 130.95617676]
[166.05392456 122.82464600]
[185.57705688 123.03095245]
[203.11947632 131.49711609]
[215.37016296 146.58203125]
[220.03523254 165.39950562]
[216.26737976 184.37036133]
[228.81263733 192.59327698]
[244.59597778 193.68736267]
[250.99888611 207.13548279]
[263.54415894 215.35839844]
[276.08941650 223.58131409]
[288.63467407 231.80424500]
[301.17993164 240.02716064]
[317.57452393 240.41421509]
[325.19808960 254.93362427]
[316.20816040 268.64907837]
[299.85281372 267.45126343]
[292.95703125 252.57241821]
[280.41174316 244.34950256]
[267.86648560 236.12658691]
[255.32122803 227.90365601]
[242.77597046 219.68074036]
[227.88995361 219.17481995]
[220.58972168 205.13853455]
[208.04446411 196.91561890]
[199.66407776 203.99603271]
[189.79119873 208.80999756]
[179.02639771 211.05763245]
[168.02618408 210.59533691]
[157.46305847 207.44500732]
[147.98434448 201.79306030]
[140.17256165 193.97944641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 78]
[5 77]
[6 76]
[7 75]
[11 44]
[12 43]
[13 42]
[14 41]
[15 39]
[16 37]
[17 36]
[18 35]
[19 34]
[22 31]
[23 30]
[24 29]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[84 103]
[85 102]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
