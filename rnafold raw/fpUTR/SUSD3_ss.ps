%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGCCGGGCUCACUCCCCUGGCAGACCCCGCCAAGCGCCUCGGAGCGCGCAGGAUGCGCUGGGCGGCCGCCACCCUCCGUGGCAAGGCGAGGCCCCGGGGGCGGGCCGGGGUCACCACGCCUGCCCCAGGGAACCGCACAGACGGUACUCACCCUUCUUGCGAUGAUGUGAGAUGAUAAAAUGCCUACAUGAUGAGAUGAAGUGAG\
) } def
/len { sequence length } bind def

/coor [
[116.42875671 139.20336914]
[109.81420135 141.35806274]
[102.93677521 142.40498352]
[95.98069000 142.31610107]
[89.13225555 141.09379578]
[82.79866028 154.69105530]
[76.46506500 168.28831482]
[70.13146973 181.88557434]
[63.79787064 195.48284912]
[57.46427536 209.08010864]
[65.11023712 222.58265686]
[63.32590485 237.99679565]
[52.79738617 249.39547729]
[37.57311630 252.39567566]
[23.50713158 245.84375000]
[16.00809479 232.25904846]
[17.95953751 216.86517334]
[28.61108971 205.58137512]
[43.86701202 202.74650574]
[50.20060730 189.14924622]
[56.53420639 175.55198669]
[62.86780167 161.95472717]
[69.20140076 148.35745239]
[75.53499603 134.76019287]
[67.39933777 127.27644348]
[61.46847534 117.94795990]
[58.14353180 107.40564728]
[57.64936829 96.36248779]
[43.16535568 92.46205902]
[27.82797432 96.34475708]
[17.55043030 85.56415558]
[3.06641793 81.66372681]
[-11.41759491 77.76329803]
[-25.90160751 73.86286163]
[-34.85475540 81.68730164]
[-46.35566711 84.19198608]
[-57.52190781 80.86756897]
[-65.61180878 72.65103912]
[-68.69750977 61.66532135]
[-83.05773926 57.33128357]
[-97.41796875 52.99724579]
[-112.86512756 56.41717148]
[-122.81397247 45.33251572]
[-137.17419434 40.99847794]
[-151.53442383 36.66444016]
[-165.89465332 32.33040237]
[-180.25488281 27.99636269]
[-196.55413818 43.56663895]
[-224.60258484 37.94813919]
[-239.55134583 36.70944977]
[-254.50012207 35.47075653]
[-269.44888306 34.23206711]
[-284.39764404 32.99337769]
[-300.68197632 37.71108246]
[-309.72326660 23.36913300]
[-298.44470215 10.71093655]
[-283.15896606 18.04461098]
[-268.21020508 19.28330040]
[-253.26142883 20.52198982]
[-238.31265259 21.76068115]
[-223.36389160 22.99937057]
[-221.25090027 15.80317307]
[-217.02490234 1.41077888]
[-214.91191101 -5.78541851]
[-228.15730286 -12.82528019]
[-241.40269470 -19.86514091]
[-257.76385498 -18.74964333]
[-266.68466187 -32.51013947]
[-258.98815918 -46.99101257]
[-242.59182739 -47.29558182]
[-234.36283875 -33.11053085]
[-221.11744690 -26.07066917]
[-207.87205505 -19.03080750]
[-192.42922974 -16.71289253]
[-181.06124878 -8.47306919]
[-175.53552246 2.71302295]
[-175.92083740 13.63613605]
[-161.56062317 17.97017479]
[-147.20039368 22.30421257]
[-132.84016418 26.63825035]
[-118.47993469 30.97228813]
[-104.05992126 27.24236107]
[-93.08393097 38.63701630]
[-78.72370148 42.97105408]
[-64.36347198 47.30509567]
[-48.78260803 37.69722366]
[-30.81836700 42.61204910]
[-22.00117683 59.37884903]
[-7.51716328 63.27928162]
[6.96684980 67.17971039]
[21.45086288 71.08014679]
[35.75224686 66.91845703]
[47.06578445 77.97804260]
[61.54979706 81.87847900]
[79.48872375 62.76970291]
[105.22605896 57.81592941]
[109.66790009 43.48868179]
[114.10974121 29.16143227]
[110.80600739 13.68900776]
[121.96512604 3.82374716]
[126.40696716 -10.50350094]
[130.84881592 -24.83074951]
[135.29064941 -39.15799713]
[139.73249817 -53.48524475]
[144.17433167 -67.81249237]
[148.61618042 -82.13973999]
[153.05802917 -96.46698761]
[157.49986267 -110.79423523]
[150.39070129 -124.65416718]
[155.09947205 -139.12075806]
[168.35659790 -145.81283569]
[172.79844666 -160.14009094]
[168.64646912 -176.00492859]
[180.49844360 -187.33905029]
[196.16209412 -182.48289490]
[199.52398682 -166.43203735]
[187.12568665 -155.69824219]
[182.68385315 -141.37100220]
[189.83038330 -128.35321045]
[185.52981567 -113.76007080]
[171.82711792 -106.35239410]
[167.38526917 -92.02514648]
[162.94343567 -77.69789886]
[158.50158691 -63.37065125]
[154.05973816 -49.04340363]
[149.61790466 -34.71615219]
[145.17605591 -20.38890648]
[140.73422241 -6.06165791]
[136.29237366 8.26558971]
[139.91381836 22.71323395]
[128.43699646 33.60327530]
[123.99514771 47.93052292]
[119.55330658 62.25777054]
[127.59365082 67.66738892]
[134.19978333 74.75753021]
[147.65080261 68.11898804]
[161.10180664 61.48044586]
[174.55282593 54.84190369]
[179.39025879 39.79615021]
[193.48776245 32.65220642]
[208.48153687 37.64844894]
[215.47602844 51.82069397]
[210.32154846 66.76080322]
[196.07614136 73.60507202]
[181.19137573 68.29291534]
[167.74035645 74.93145752]
[154.28933716 81.56999969]
[140.83833313 88.20854187]
[142.27146912 104.46432495]
[137.47424316 120.06211090]
[149.24177551 129.36401367]
[161.00930786 138.66590881]
[172.77684021 147.96780396]
[184.54437256 157.26968384]
[200.76524353 152.47862244]
[216.48965454 158.24226379]
[225.58944702 172.10342407]
[224.64430237 188.49124146]
[236.55032349 197.61521912]
[248.45634460 206.73918152]
[260.36236572 215.86314392]
[265.54132080 216.53973389]
[269.54208374 218.89997864]
[271.92050171 222.21276855]
[272.58709717 225.67662048]
[284.06970215 235.32803345]
[299.61221313 238.28446960]
[304.37664795 252.39649963]
[315.85925293 262.04791260]
[327.34185791 271.69931030]
[338.82449341 281.35073853]
[350.30709839 291.00213623]
[365.84960938 293.95858765]
[370.61404419 308.07061768]
[382.16888428 317.63543701]
[393.79525757 327.11315918]
[409.49090576 325.26321411]
[421.84558105 335.11904907]
[423.52947998 350.83337402]
[413.54354858 363.08316040]
[397.81231689 364.60083008]
[385.66879272 354.48596191]
[384.31753540 338.73956299]
[372.69116211 329.26184082]
[365.51934814 327.47177124]
[360.96264648 319.55322266]
[346.24142456 317.28710938]
[340.65570068 302.48474121]
[329.17306519 292.83334351]
[317.69046021 283.18191528]
[306.20785522 273.53051758]
[294.72525024 263.87911987]
[280.00402832 261.61300659]
[274.41830444 246.81063843]
[262.93566895 237.15924072]
[251.23838806 227.76916504]
[239.33238220 218.64518738]
[227.42636108 209.52122498]
[215.52033997 200.39726257]
[203.12870789 205.36843872]
[189.79193115 203.55252075]
[179.00840759 195.31788635]
[173.66006470 182.73069763]
[175.24247742 169.03721619]
[163.47494507 159.73532104]
[151.70741272 150.43342590]
[139.93988037 141.13153076]
[128.17234802 131.82963562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[28 94]
[29 93]
[31 91]
[32 90]
[33 89]
[34 88]
[39 85]
[40 84]
[41 83]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[64 73]
[65 72]
[66 71]
[96 133]
[97 132]
[98 131]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[111 118]
[112 117]
[135 148]
[136 147]
[137 146]
[138 145]
[150 208]
[151 207]
[152 206]
[153 205]
[154 204]
[158 199]
[159 198]
[160 197]
[161 196]
[165 195]
[166 194]
[168 192]
[169 191]
[170 190]
[171 189]
[172 188]
[174 186]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
