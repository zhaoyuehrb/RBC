%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCUGAGCGCGGAUCCGCGGCGGGCGCAGGAUACGGGCCGGGGCGCGAGCCGAGCGCAGUCUGCCGGGCCGAGCGGGCGGAGCGAGCCGAGUGGGGCUGAGCGCGCCGGCGGCGGCGGGCGGAGCGGAGCGCGGCGCGCCGGGGCCGCCGCCGGGGGGAUGCGGCUGCCUCCCCGGGCCGGGGUGUAGAGAGGGCGGGUCCCCGGCCUCGGGAGCACGGCGGUGGAGGGGACAUAGGAGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[71.60546112 121.52096558]
[60.25795746 131.33087158]
[48.91045380 141.14077759]
[37.56295013 150.95066833]
[26.21544838 160.76057434]
[14.86794567 170.57048035]
[3.52044320 180.38037109]
[-7.82705975 190.19027710]
[-13.20674896 205.06877136]
[-27.89507675 207.53906250]
[-39.24258041 217.34895325]
[-44.62226868 232.22744751]
[-59.31059647 234.69773865]
[-70.65809631 244.50762939]
[-82.00559998 254.31753540]
[-86.43637085 262.27636719]
[-93.55870819 264.17852783]
[-99.12568665 278.98794556]
[-113.84400940 281.27273560]
[-125.31437683 290.93869019]
[-136.78474426 300.60464478]
[-148.25511169 310.27059937]
[-153.82208252 325.08001709]
[-168.54040527 327.36480713]
[-174.41220093 344.82977295]
[-191.80957031 347.21063232]
[-203.15707397 357.02053833]
[-214.50456238 366.83044434]
[-219.88426208 381.70892334]
[-234.57258606 384.17922974]
[-234.16151428 399.81140137]
[-243.93519592 412.01834106]
[-259.27880859 415.03625488]
[-272.94754028 407.44024658]
[-278.48745728 392.81686401]
[-273.28277588 378.07083130]
[-259.79098511 370.16479492]
[-244.38249207 372.83172607]
[-239.81445312 358.65490723]
[-224.31446838 355.48294067]
[-212.96696472 345.67303467]
[-201.61946106 335.86312866]
[-200.43608093 323.84024048]
[-191.08430481 315.57400513]
[-178.20635986 315.89443970]
[-173.45982361 301.77636719]
[-157.92106628 298.80023193]
[-146.45069885 289.13427734]
[-134.98033142 279.46832275]
[-123.50996399 269.80236816]
[-118.76342773 255.68429565]
[-103.22466278 252.70816040]
[-91.81550598 242.97003174]
[-80.46800232 233.16012573]
[-69.12049866 223.35023499]
[-64.55245972 209.17340088]
[-49.05248260 206.00144958]
[-37.70497894 196.19155884]
[-33.13694000 182.01472473]
[-17.63696098 178.84277344]
[-6.28945875 169.03288269]
[5.05804396 159.22297668]
[16.40554619 149.41307068]
[27.75304985 139.60316467]
[39.10055161 129.79327393]
[50.44805527 119.98336792]
[61.79555893 110.17346191]
[60.75550461 95.20956421]
[48.16000748 87.06380463]
[35.56451035 78.91803741]
[19.77476120 77.92085266]
[13.28942013 64.51228333]
[0.69392323 56.36652374]
[-15.09582615 55.36933899]
[-21.58116722 41.96077347]
[-35.99908066 47.38570786]
[-50.67523575 43.32812881]
[-60.03726959 31.54609680]
[-60.65893936 16.68838692]
[-73.25443268 8.54262447]
[-85.84992981 0.39686161]
[-100.74131775 5.16975880]
[-115.19711304 -0.79381162]
[-122.39171600 -14.67803383]
[-118.92807007 -29.92720413]
[-106.44159698 -39.34112930]
[-90.82802582 -38.47484207]
[-79.45960999 -27.73737526]
[-77.70417023 -12.19863510]
[-65.10867310 -4.05287266]
[-52.51317596 4.09289026]
[-38.70795059 -1.43465459]
[-24.12251472 2.27062488]
[-14.40197372 13.99088383]
[-13.43540382 29.36527634]
[1.45343149 29.77982140]
[8.83968639 43.77102661]
[21.43518257 51.91679001]
[36.32402039 52.33133698]
[43.71027374 66.32254028]
[56.30577087 74.46830750]
[68.90126801 82.61406708]
[77.76869965 74.68371582]
[88.21585083 70.51231384]
[98.81452942 70.20517731]
[94.19182587 55.07437134]
[104.46077728 44.28558350]
[99.83807373 29.15478134]
[110.10702515 18.36599159]
[113.29970551 3.70970392]
[116.49238586 -10.94658375]
[119.68506622 -25.60287285]
[122.87775421 -40.25915909]
[126.07043457 -54.91544724]
[129.26312256 -69.57173920]
[132.45579529 -84.22802734]
[135.64848328 -98.88431549]
[138.84115601 -113.54060364]
[142.03384399 -128.19688416]
[133.50621033 -138.60331726]
[132.53524780 -151.82742310]
[139.25164795 -163.03416443]
[151.01612854 -168.25482178]
[154.39346313 -182.86965942]
[157.77079773 -197.48449707]
[153.33937073 -212.67242432]
[163.74362183 -223.33079529]
[167.12095642 -237.94563293]
[170.49829102 -252.56047058]
[160.21937561 -264.18472290]
[158.76962280 -279.63394165]
[166.70652771 -292.96755981]
[180.97816467 -299.05853271]
[196.09680176 -295.56475830]
[206.24902344 -283.82968140]
[207.53108215 -268.36566162]
[199.45001221 -255.11892700]
[185.11312866 -249.18313599]
[181.73579407 -234.56829834]
[178.35845947 -219.95344543]
[183.03146362 -205.81088257]
[172.38565063 -194.10716248]
[169.00830078 -179.49232483]
[165.63096619 -164.87747192]
[175.14160156 -150.99359131]
[171.58628845 -134.19866943]
[156.69012451 -125.00420380]
[153.49745178 -110.34791565]
[150.30476379 -95.69162750]
[147.11209106 -81.03533936]
[143.91940308 -66.37905121]
[140.72671509 -51.72276688]
[137.53404236 -37.06647873]
[134.34135437 -22.41019058]
[131.14868164 -7.75390196]
[127.95599365 6.90238619]
[124.76331329 21.55867386]
[129.61437988 35.64116287]
[119.11706543 47.47826385]
[123.96813202 61.56075287]
[113.47081757 73.39785767]
[120.11711884 77.99003601]
[125.28684998 84.19771576]
[128.60055542 91.56525421]
[129.81503296 99.55189514]
[128.84112549 107.57142639]
[141.92509460 114.90693665]
[155.00906372 122.24244690]
[168.09303284 129.57795715]
[181.17700195 136.91346741]
[194.26098633 144.24897766]
[207.34495544 151.58448792]
[220.73999023 158.33526611]
[234.41998291 164.48812866]
[248.09997559 170.64100647]
[261.77996826 176.79388428]
[275.45996094 182.94674683]
[291.71224976 176.44316101]
[307.32699585 183.57684326]
[312.82882690 199.48106384]
[326.58535767 205.46084595]
[340.34188843 211.44064331]
[354.09841919 217.42042542]
[368.65176392 211.86726379]
[382.51766968 218.12757874]
[387.72207642 232.03620911]
[401.47860718 238.01599121]
[415.23513794 243.99578857]
[428.99166870 249.97557068]
[443.45925903 241.19010925]
[460.14608765 242.75286865]
[472.48342896 253.84939575]
[475.73376465 269.95172119]
[489.56466675 275.75747681]
[503.39553833 281.56323242]
[517.22644043 287.36898804]
[532.94567871 285.57611084]
[541.68627930 297.63644409]
[555.51715088 303.44219971]
[569.34802246 309.24795532]
[585.53985596 306.64871216]
[595.67547607 319.54064941]
[589.32818604 334.66162109]
[573.02752686 336.45648193]
[563.54229736 323.07882690]
[549.71142578 317.27307129]
[535.88049316 311.46731567]
[521.15051270 313.67547607]
[511.42065430 301.19985962]
[497.58978271 295.39410400]
[483.75891113 289.58834839]
[469.92800903 283.78259277]
[459.21600342 291.72796631]
[445.87051392 293.36206055]
[433.35824585 288.15286255]
[424.98263550 277.36001587]
[423.01187134 263.73211670]
[409.25534058 257.75231934]
[395.49880981 251.77252197]
[381.74227905 245.79273987]
[368.02197266 251.47502136]
[353.98568726 245.60662842]
[348.11862183 231.17695618]
[334.36209106 225.19717407]
[320.60556030 219.21737671]
[306.84902954 213.23759460]
[295.65393066 219.58799744]
[282.65039062 218.31964111]
[272.59854126 209.67205811]
[269.30706787 196.62673950]
[255.62709045 190.47387695]
[241.94709778 184.32099915]
[228.26710510 178.16812134]
[214.58711243 172.01525879]
[220.16462708 185.93974304]
[215.58821106 200.22457886]
[202.95758057 208.31575012]
[188.06776428 206.50097656]
[177.75033569 195.61286926]
[176.73901367 180.64700317]
[185.49780273 168.46983337]
[200.00944519 164.66845703]
[186.92547607 157.33294678]
[173.84149170 149.99743652]
[160.75752258 142.66192627]
[147.67355347 135.32641602]
[134.58958435 127.99090576]
[121.50561523 120.65540314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 67]
[2 66]
[3 65]
[4 64]
[5 63]
[6 62]
[7 61]
[8 60]
[10 58]
[11 57]
[13 55]
[14 54]
[15 53]
[17 52]
[19 50]
[20 49]
[21 48]
[22 47]
[24 45]
[26 42]
[27 41]
[28 40]
[30 38]
[68 102]
[69 101]
[70 100]
[72 98]
[73 97]
[75 95]
[79 91]
[80 90]
[81 89]
[105 161]
[107 159]
[109 157]
[110 156]
[111 155]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[123 144]
[124 143]
[125 142]
[127 140]
[128 139]
[129 138]
[166 248]
[167 247]
[168 246]
[169 245]
[170 244]
[171 243]
[172 242]
[173 234]
[174 233]
[175 232]
[176 231]
[177 230]
[180 226]
[181 225]
[182 224]
[183 223]
[186 220]
[187 219]
[188 218]
[189 217]
[193 212]
[194 211]
[195 210]
[196 209]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
