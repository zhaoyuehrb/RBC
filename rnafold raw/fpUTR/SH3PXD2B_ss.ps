%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCGCCGAGCGAAGGGCGGCGGCGGUGGCGGCGGCGGCUCGUGCUCGGCCCCGGCUGCGAUUGCGCUCAGCUCCAGGUUCCCUGCCCGCGGCGGCGCGCCCCCAGCGCUCCCUGCACCCCGCGCCACCCGCACCCGCGCUCGGCCCGCUGCGGGCGGAGGAGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-155.44561768 261.97262573]
[-166.73965454 272.48208618]
[-181.92666626 275.19467163]
[-196.16053772 269.24484253]
[-204.89929199 256.53118896]
[-205.35443115 241.11051941]
[-197.38072205 227.90357971]
[-183.52252197 221.12463379]
[-181.88195801 206.21461487]
[-180.24139404 191.30459595]
[-190.04547119 179.95205688]
[-205.03546143 179.40423584]
[-220.02545166 178.85639954]
[-235.01544189 178.30856323]
[-246.53903198 188.78924561]
[-261.73321533 188.02014160]
[-271.65393066 176.96955872]
[-286.64392090 176.42173767]
[-300.71746826 183.64985657]
[-313.15365601 175.45289612]
[-328.14364624 174.90507507]
[-343.13363647 174.35723877]
[-358.12365723 173.80940247]
[-369.64721680 184.29008484]
[-384.84140015 183.52096558]
[-394.76211548 172.47039795]
[-409.75210571 171.92257690]
[-424.74209595 171.37474060]
[-439.73208618 170.82691956]
[-454.72210693 170.27908325]
[-468.79565430 177.50721741]
[-481.23184204 169.31024170]
[-495.30538940 176.53837585]
[-507.74157715 168.34141541]
[-522.73156738 167.79357910]
[-537.72155762 167.24574280]
[-551.79510498 174.47387695]
[-564.23132324 166.27691650]
[-572.95867920 169.09873962]
[-579.48937988 165.57971191]
[-594.46685791 164.75819397]
[-609.44433594 163.93667603]
[-623.82171631 171.82479858]
[-637.69946289 163.08749390]
[-636.80133057 146.71296692]
[-622.05120850 139.54591370]
[-608.62280273 148.95918274]
[-593.64532471 149.78070068]
[-578.66784668 150.60221863]
[-563.68347168 151.28692627]
[-550.68212891 144.01960754]
[-537.17376709 152.25575256]
[-522.18377686 152.80358887]
[-507.19375610 153.35140991]
[-494.19238281 146.08410645]
[-480.68402100 154.32025146]
[-467.68264771 147.05294800]
[-454.17425537 155.28909302]
[-439.18426514 155.83691406]
[-424.19427490 156.38475037]
[-409.20428467 156.93258667]
[-394.21429443 157.48040771]
[-383.51339722 147.18348694]
[-368.30361938 147.52552795]
[-357.57580566 158.81941223]
[-342.58581543 159.36724854]
[-327.59582520 159.91506958]
[-312.60583496 160.46290588]
[-299.60446167 153.19558716]
[-286.09609985 161.43174744]
[-271.10610962 161.97956848]
[-260.40521240 151.68264771]
[-245.19541931 152.02468872]
[-234.46762085 163.31857300]
[-219.47761536 163.86640930]
[-204.48762512 164.41423035]
[-189.49763489 164.96206665]
[-182.48905945 159.82220459]
[-173.67698669 158.26266479]
[-164.83471680 160.82769775]
[-157.84378052 167.20777893]
[-143.09329224 164.48323059]
[-128.34280396 161.75868225]
[-113.59232330 159.03411865]
[-98.84184265 156.30957031]
[-84.11685181 153.45042419]
[-69.41858673 150.45692444]
[-54.72032547 147.46342468]
[-40.02206039 144.46992493]
[-25.32379723 141.47640991]
[-10.62553406 138.48291016]
[4.07272911 135.48941040]
[18.77099228 132.49591064]
[33.46925735 129.50241089]
[48.16751862 126.50890350]
[62.86578369 123.51540375]
[77.56404877 120.52190399]
[92.26230621 117.52840424]
[66.03916931 98.37477875]
[84.63352966 53.64129639]
[94.64331055 42.46971130]
[104.65309143 31.29813004]
[114.66287231 20.12654686]
[115.22348022 4.09329128]
[128.19364929 -5.34887218]
[143.62376404 -0.95672446]
[149.67716980 13.90045452]
[141.71022034 27.82551003]
[125.83445740 30.13632965]
[115.82467651 41.30791092]
[105.81489563 52.47949600]
[95.80510712 63.65107727]
[99.71216583 70.05302429]
[112.51605988 62.23891830]
[127.51160431 61.87334442]
[120.33016205 75.04281616]
[107.52626801 82.85691833]
[111.43331909 89.25887299]
[125.94557953 85.46486664]
[135.25975037 72.40249634]
[151.28672791 71.68426514]
[161.73196411 83.86115265]
[158.58277893 99.59207916]
[144.25495911 106.80963898]
[129.73957825 99.97712708]
[115.22731781 103.77112579]
[114.81640625 118.76549530]
[129.09909058 123.34860992]
[143.38177490 127.93171692]
[155.88851929 118.93797302]
[171.11497498 119.03201294]
[183.22315979 127.96820831]
[187.69407654 142.15090942]
[201.97677612 146.73402405]
[216.25946045 151.31712341]
[232.16452026 147.32202148]
[243.38105774 159.28535461]
[238.37045288 174.90028381]
[222.28718567 178.10350037]
[211.67634583 165.59980774]
[197.39366150 161.01670837]
[183.11097717 156.43359375]
[171.22248840 165.36679077]
[156.17541504 165.58924866]
[143.73718262 156.80609131]
[138.79867554 142.21440125]
[124.51598358 137.63128662]
[110.23329926 133.04818726]
[95.25581360 132.22666931]
[80.55754852 135.22016907]
[65.85928345 138.21366882]
[51.16102219 141.20716858]
[36.46275711 144.20066833]
[21.76449394 147.19416809]
[7.06623077 150.18768311]
[-7.63203239 153.18118286]
[-22.33029556 156.17468262]
[-37.02856064 159.16818237]
[-51.72682190 162.16168213]
[-66.42508698 165.15518188]
[-81.12335205 168.14868164]
[-88.94206238 172.94419861]
[-96.11728668 171.06005859]
[-110.86777496 173.78460693]
[-125.61825562 176.50915527]
[-140.36874390 179.23371887]
[-155.11923218 181.95826721]
[-165.33137512 192.94517517]
[-166.97193909 207.85517883]
[-168.61251831 222.76519775]
[-156.55981445 232.39515686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[11 77]
[12 76]
[13 75]
[14 74]
[17 71]
[18 70]
[20 68]
[21 67]
[22 66]
[23 65]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[32 56]
[34 54]
[35 53]
[36 52]
[38 50]
[40 49]
[41 48]
[42 47]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[100 112]
[101 111]
[102 110]
[103 109]
[118 126]
[119 125]
[127 148]
[128 147]
[129 146]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
