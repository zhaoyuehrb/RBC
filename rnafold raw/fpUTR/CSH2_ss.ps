%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGAGAGAGAACUGGCCAGGGUAUAAAAAGGGCCCACAAGAGACCGGCUCUAGGAUCCCAAGGCCCAACUCCCCGAACCACUCAGGGUCCUGUGGACAGCUCACCUAGCGGCA\
) } def
/len { sequence length } bind def

/coor [
[76.80901337 115.43947601]
[72.43442535 104.04209137]
[73.35268402 91.86857605]
[60.71395493 83.79006195]
[48.07522583 75.71154022]
[39.02881622 73.68299866]
[35.20775604 67.23922729]
[22.79242134 58.82141876]
[10.37708569 50.40361404]
[0.23442367 56.21488190]
[-11.30165100 57.74964905]
[-22.51069260 54.81854630]
[-31.73595619 47.89530563]
[-37.62926483 38.04066849]
[-39.34797668 26.74002647]
[-36.67526245 15.67955589]
[-48.36646652 6.28190613]
[-60.05766678 -3.11574364]
[-71.74886322 -12.51339340]
[-89.95291138 -14.84081936]
[-95.78169250 -31.33300781]
[-107.72309113 -40.41062164]
[-119.66448975 -49.48823547]
[-128.51641846 -52.24428177]
[-131.80191040 -58.97690964]
[-143.49310303 -68.37455750]
[-156.56365967 -63.76696777]
[-170.09069824 -66.23426056]
[-180.52656555 -75.01970673]
[-185.18879700 -87.72409821]
[-182.94921875 -100.96012878]
[-194.38165283 -110.67092133]
[-205.81408691 -120.38171387]
[-217.24650574 -130.09251404]
[-228.67893982 -139.80329895]
[-240.11137390 -149.51409912]
[-254.28213501 -143.73065186]
[-269.51629639 -145.20668030]
[-282.31317139 -153.60301208]
[-289.73214722 -166.99023438]
[-290.06835938 -182.29203796]
[-283.24459839 -195.99221802]
[-270.82885742 -204.94253540]
[-255.67424011 -207.08630371]
[-241.26312256 -201.93087769]
[-230.90708923 -190.66094971]
[-226.98588562 -175.86627197]
[-230.40057373 -160.94653320]
[-218.96815491 -151.23573303]
[-207.53572083 -141.52494812]
[-196.10328674 -131.81414795]
[-184.67085266 -122.10335541]
[-173.23841858 -112.39255524]
[-157.48567200 -116.78806305]
[-142.04537964 -110.91419220]
[-133.01829529 -96.88182831]
[-134.09545898 -80.06575775]
[-122.40425873 -70.66810608]
[-110.58687592 -61.42963028]
[-98.64547729 -52.35201645]
[-86.70407867 -43.27440262]
[-74.59458160 -44.58187103]
[-64.55149841 -37.00193405]
[-62.35121536 -24.20459366]
[-50.66001511 -14.80694485]
[-38.96881485 -5.40929461]
[-27.27761459 3.98835564]
[-9.71994972 -2.00651789]
[8.09243393 3.68767023]
[19.08896065 18.99516678]
[18.79489136 37.98827744]
[31.21022606 46.40608597]
[43.62556076 54.82389069]
[56.15374374 63.07280731]
[68.79247284 71.15132904]
[81.43120575 79.22985077]
[97.38714600 72.26243591]
[114.36351013 76.12765503]
[125.73035431 89.31597900]
[127.04846191 106.67684174]
[140.10601807 114.05926514]
[155.92712402 114.11582947]
[163.19825745 127.11505127]
[176.25581360 134.49748230]
[185.39878845 136.03327942]
[189.56309509 142.26074219]
[202.41595459 149.99404907]
[215.26881409 157.72735596]
[228.22520447 165.28591919]
[243.27851868 161.28146362]
[256.41555786 168.95429993]
[260.14044189 183.33000183]
[273.19799805 190.71243286]
[286.25555420 198.09484863]
[302.64022827 197.40582275]
[311.19961548 211.39398193]
[303.12860107 225.66950989]
[286.72991943 225.54695129]
[278.87313843 211.15240479]
[265.81558228 203.76998901]
[252.75801086 196.38755798]
[238.51971436 200.60733032]
[225.17233276 193.30651855]
[220.84278870 178.34347534]
[213.37223816 177.78332520]
[207.53550720 170.58021545]
[194.68264771 162.84690857]
[181.82978821 155.11360168]
[168.87339783 147.55503845]
[155.81584167 140.17260742]
[140.92869568 140.64408875]
[132.72358704 127.11682129]
[119.66603851 119.73439789]
[109.34071350 126.24786377]
[97.22188568 127.72149658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 76]
[4 75]
[5 74]
[7 73]
[8 72]
[9 71]
[16 67]
[17 66]
[18 65]
[19 64]
[21 61]
[22 60]
[23 59]
[25 58]
[26 57]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[80 113]
[81 112]
[83 110]
[84 109]
[86 108]
[87 107]
[88 106]
[89 104]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
