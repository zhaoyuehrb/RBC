%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACAACAUGGCGGCGCCCAUGGUCCGUGGCCCGGCAGUGCUCGCCUAAAGGUGGAGAACGAGGAGUAGAGGAGCCGCAGGCCAGAGCCUGUGAGCAGAUCCAGACCUACAGAUAAAAAACAUUAUUUAAUCUAUCUGGGAUUUACUCCGGCUUAUGAUUUGAGGGCCUUCUCACCUUCUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[-1.88354599 428.57421875]
[-14.34288406 436.92675781]
[-28.80545807 440.90594482]
[-43.78392792 440.10256958]
[-57.73789978 434.59921265]
[-69.23233795 424.96191406]
[-77.08514404 412.18170166]
[-80.48873901 397.57296753]
[-79.09307861 382.63803101]
[-73.04206848 368.91339111]
[-85.20703888 377.68911743]
[-97.37200928 386.46484375]
[-109.53697968 395.24057007]
[-121.62740326 404.11874390]
[-133.64241028 413.09869385]
[-145.65744019 422.07861328]
[-157.67245483 431.05856323]
[-169.53408813 440.24017334]
[-181.23895264 449.62078857]
[-183.43063354 462.34588623]
[-193.39114380 469.91702271]
[-205.44035339 468.70275879]
[-217.30200195 477.88433838]
[-229.16363525 487.06594849]
[-241.02526855 496.24752808]
[-249.84947205 510.72406006]
[-266.20303345 506.25219727]
[-266.43307495 489.29983521]
[-250.20686340 484.38589478]
[-238.34521484 475.20431519]
[-226.48358154 466.02270508]
[-214.62194824 456.84112549]
[-208.87239075 440.27056885]
[-190.61956787 437.91589355]
[-178.91470337 428.53527832]
[-177.50970459 423.94995117]
[-173.19651794 420.20733643]
[-166.65238953 419.04354858]
[-154.63737488 410.06359863]
[-142.62236023 401.08367920]
[-130.60734558 392.10372925]
[-127.12417603 385.56665039]
[-118.31271362 383.07562256]
[-106.14774323 374.29986572]
[-93.98277283 365.52413940]
[-81.81780243 356.74841309]
[-80.34177399 350.80352783]
[-75.51015472 345.92199707]
[-68.14866638 343.97293091]
[-58.57170105 332.42816162]
[-48.99473190 320.88339233]
[-39.41776276 309.33862305]
[-29.84079552 297.79385376]
[-20.26382637 286.24908447]
[-18.40900421 279.07794189]
[-10.42630768 274.59197998]
[-0.65572041 263.21060181]
[9.11486721 251.82923889]
[18.88545418 240.44787598]
[18.12594414 232.33375549]
[21.28758621 224.32705688]
[28.06875610 218.30766296]
[37.28074265 215.87919617]
[43.65826035 202.30247498]
[50.03577805 188.72575378]
[56.41329575 175.14904785]
[62.79081345 161.57232666]
[69.16833496 147.99560547]
[75.54585266 134.41888428]
[81.92337036 120.84217072]
[71.58248901 110.86102295]
[67.00904846 95.81391144]
[70.57562256 79.10514069]
[82.64979553 65.15927124]
[78.64528656 50.70368576]
[74.51884460 36.28243637]
[70.27076721 21.89654732]
[66.02268219 7.51065826]
[61.77460098 -6.87523031]
[57.52651596 -21.26111984]
[53.27843475 -35.64700699]
[49.03035355 -50.03289795]
[36.77804947 -60.93304062]
[40.35624695 -76.93705750]
[56.08400345 -81.58138275]
[67.78194427 -70.08834076]
[63.41624069 -54.28097916]
[67.66432190 -39.89509201]
[71.91240692 -25.50920105]
[76.16049194 -11.12331295]
[80.40856934 3.26257586]
[84.65665436 17.64846420]
[88.90473938 32.03435516]
[93.82516479 37.57106018]
[93.10087585 46.69918060]
[97.10538483 61.15476608]
[104.22248077 63.52053070]
[108.95425415 49.28640366]
[123.18830109 54.01840591]
[118.45668793 68.25205994]
[125.57379150 70.61782837]
[137.43542480 61.43623734]
[149.29705811 52.25464630]
[161.15870667 43.07305527]
[173.02033997 33.89146805]
[169.50146484 18.01642609]
[173.23930359 2.25126266]
[183.43730164 -10.26400280]
[198.01744080 -17.05937195]
[214.04347229 -16.82226753]
[228.31227112 -9.65076351]
[240.01715088 -19.03137970]
[251.72201538 -28.41199684]
[263.42687988 -37.79261398]
[275.13177490 -47.17323303]
[286.83663940 -56.55384827]
[288.31890869 -72.28847504]
[300.54620361 -82.30190277]
[316.26428223 -80.65335083]
[326.14788818 -68.32087708]
[324.33325195 -52.62110901]
[311.89694214 -42.86845016]
[296.21725464 -44.84897614]
[284.51239014 -35.46836090]
[272.80749512 -26.08774185]
[261.10263062 -16.70712471]
[249.39776611 -7.32650852]
[237.69290161 2.05410862]
[241.47503662 15.41371632]
[239.87055969 29.24899292]
[233.08920288 41.46421814]
[222.12742615 50.19638824]
[208.62205505 54.09933853]
[194.60592651 52.55116653]
[182.20193481 45.75310135]
[170.34028625 54.93469238]
[158.47865295 64.11627960]
[146.61701965 73.29787445]
[134.75538635 82.47946167]
[133.89967346 109.26984406]
[116.92694092 126.40734863]
[95.50008392 127.21968842]
[89.12256622 140.79640198]
[82.74504852 154.37312317]
[76.36753082 167.94984436]
[69.99001312 181.52656555]
[63.61249542 195.10327148]
[57.23497772 208.67999268]
[50.85746002 222.25671387]
[54.37145615 236.83929443]
[66.23309326 246.02088928]
[78.09472656 255.20248413]
[89.95635986 264.38406372]
[101.81800079 273.56564331]
[116.32300568 268.31127930]
[131.36103821 271.75531006]
[142.13349915 282.79873657]
[145.20297241 297.91766357]
[139.58996582 312.28768921]
[127.08557892 321.32339478]
[111.67992401 322.14151001]
[98.28887939 314.48098755]
[91.18548584 300.78628540]
[92.63641357 285.42730713]
[80.77477264 276.24569702]
[68.91313934 267.06411743]
[57.05150223 257.88253784]
[45.18986511 248.70092773]
[30.26682663 250.21846008]
[20.49623871 261.59982300]
[10.72565174 272.98120117]
[0.95506418 284.36257935]
[-8.71905804 295.82604980]
[-18.29602623 307.37081909]
[-27.87299538 318.91558838]
[-37.44996262 330.46035767]
[-47.02693176 342.00512695]
[-56.60390091 353.54989624]
[-42.50141907 348.43911743]
[-27.50633621 348.05511475]
[-13.16075134 352.43737793]
[-0.93997419 361.13522339]
[7.89920330 373.25415039]
[12.44775391 387.54788208]
[12.23790169 402.54641724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[14 41]
[15 40]
[16 39]
[17 38]
[18 35]
[19 34]
[22 32]
[23 31]
[24 30]
[25 29]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[56 172]
[57 171]
[58 170]
[59 169]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[74 96]
[75 95]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[101 139]
[102 138]
[103 137]
[104 136]
[105 135]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
