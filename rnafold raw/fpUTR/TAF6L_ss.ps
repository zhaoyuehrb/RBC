%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAAGAGCCAGGAAGCCUCCUGGAGGGCCGGAAACUUUCCAAGGCGCCCGCCGACUGGCUGUAUUGGGGAGGGCGGGGCCGGGGCCCCGGGAGAGGGAAUGAGUGUGAGCUCGUGAGUGGGCGCCGCCGCCACCGCCCCCGCCGCCGUCGUCUCGGUAGCAGCCUUCGCCACGCCGGGGUCUUCAGCUCCACUGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[-103.72180176 835.27185059]
[-105.92996979 850.10845947]
[-108.13813782 864.94500732]
[-110.34654999 879.78155518]
[-125.18305206 877.57287598]
[-122.97471619 862.73681641]
[-120.76654816 847.90026855]
[-118.55838013 833.06372070]
[-116.35021210 818.22711182]
[-114.14204407 803.39056396]
[-121.56032562 802.28643799]
[-129.32807922 815.11853027]
[-137.09582520 827.95062256]
[-144.86355591 840.78265381]
[-152.63130188 853.61474609]
[-152.43019104 870.01269531]
[-166.66687012 878.15203857]
[-180.69587708 869.65972900]
[-180.08537292 853.27191162]
[-165.46337891 845.84698486]
[-157.69563293 833.01495361]
[-149.92788696 820.18286133]
[-142.16014099 807.35076904]
[-134.39241028 794.51873779]
[-129.35964966 780.38818359]
[-127.26692200 765.53491211]
[-125.17419434 750.68157959]
[-123.08146667 735.82830811]
[-120.98873138 720.97497559]
[-118.89600372 706.12170410]
[-116.80327606 691.26843262]
[-128.78591919 682.24530029]
[-142.48277283 688.36059570]
[-156.17962646 694.47583008]
[-169.87646484 700.59106445]
[-181.87455750 712.56951904]
[-196.70625305 704.35626221]
[-192.91979980 687.83056641]
[-175.99172974 686.89422607]
[-162.29487610 680.77899170]
[-148.59802246 674.66375732]
[-134.90118408 668.54846191]
[-131.25306702 651.02911377]
[-119.22288513 639.55737305]
[-104.05745697 637.16754150]
[-99.46659851 622.88739014]
[-94.87574005 608.60717773]
[-90.28488159 594.32696533]
[-95.75458527 585.68542480]
[-95.55678558 575.24053955]
[-89.51525879 566.45001221]
[-79.42801666 562.35675049]
[-82.44660187 547.77124023]
[-70.52761078 537.36700439]
[-65.49486542 523.23651123]
[-60.46211243 509.10598755]
[-65.36566162 498.04290771]
[-61.28283310 486.22637939]
[-49.88793945 480.17315674]
[-44.63603973 466.12261963]
[-39.38414383 452.07208252]
[-34.13224792 438.02154541]
[-28.88035011 423.97100830]
[-23.62845421 409.92047119]
[-30.02075958 396.51623535]
[-24.89474487 382.19216919]
[-10.79178905 375.57821655]
[-13.58318233 360.94750977]
[-1.50382924 350.72988892]
[3.74806762 336.67935181]
[8.99996471 322.62881470]
[14.25186062 308.57827759]
[11.46046734 293.94760132]
[23.53982162 283.72998047]
[28.79171753 269.67944336]
[34.04361343 255.62889099]
[39.29550934 241.57835388]
[44.54740906 227.52781677]
[49.68988800 213.43687439]
[54.72263718 199.30635071]
[59.75538635 185.17584229]
[56.73679733 170.59031677]
[68.65578461 160.18608093]
[73.68853760 146.05557251]
[78.72129059 131.92504883]
[83.75403595 117.79454041]
[88.78678894 103.66402435]
[89.60289001 88.68624115]
[86.13524628 74.09255981]
[82.66760254 59.49888611]
[69.08176422 51.42419052]
[65.26583099 36.08749771]
[73.48371124 22.58779335]
[88.85989380 18.93421745]
[102.27194977 27.29436684]
[105.76276398 42.70831680]
[97.26127625 56.03123856]
[100.72891998 70.62491608]
[104.19656372 85.21859741]
[111.69656372 85.21859741]
[119.19629669 72.22805786]
[126.69656372 85.21859741]
[134.19656372 85.21859741]
[137.66421509 70.62491608]
[141.13185120 56.03123856]
[144.59950256 41.43756104]
[139.38932800 25.88808632]
[150.45175171 13.78208923]
[166.40666199 17.57318497]
[170.84104919 33.36141586]
[159.19317627 44.90520859]
[155.72554016 59.49888611]
[152.25788879 74.09255981]
[148.79023743 88.68624115]
[162.02592468 95.74433136]
[172.21221924 84.73345184]
[182.39851379 73.72257233]
[185.93258667 65.29145813]
[192.82986450 62.62123108]
[203.18617249 51.77009964]
[213.54246521 40.91897202]
[223.89877319 30.06783867]
[223.27958679 14.27568436]
[234.06970215 2.72799850]
[249.86752319 2.27581954]
[261.30047607 13.18741703]
[261.58560181 28.98913383]
[250.55375671 40.30609131]
[234.74990845 40.42414093]
[224.39360046 51.27527237]
[214.03730774 62.12639999]
[203.68099976 72.97753143]
[193.40939331 83.90886688]
[183.22309875 94.91974640]
[173.03680420 105.93062592]
[132.46401978 125.40860748]
[102.91730499 108.69677734]
[97.88455200 122.82728577]
[92.85179901 136.95780945]
[87.81905365 151.08831787]
[82.78630066 165.21882629]
[85.44491577 180.81506348]
[73.88590240 190.20858765]
[68.85314941 204.33911133]
[63.82040024 218.46961975]
[63.88842010 227.61122131]
[58.59794617 232.77972412]
[53.34604645 246.83026123]
[48.09415054 260.88079834]
[42.84225464 274.93133545]
[37.59035873 288.98187256]
[40.00609970 304.61755371]
[28.30239677 313.83020020]
[23.05050087 327.88073730]
[17.79860497 341.93127441]
[12.54670715 355.98178101]
[14.96245003 371.61749268]
[3.25874758 380.83010864]
[9.56570053 395.07302856]
[4.03937531 409.24743652]
[-9.57791710 415.17239380]
[-14.82981396 429.22293091]
[-20.08171082 443.27346802]
[-25.33360672 457.32400513]
[-30.58550453 471.37454224]
[-35.83740234 485.42507935]
[-32.37354660 503.50711060]
[-46.33160019 514.13873291]
[-51.36434937 528.26922607]
[-56.39709854 542.39978027]
[-53.73848343 557.99597168]
[-65.29750061 567.38952637]
[-60.76266479 587.02642822]
[-76.00468445 598.91784668]
[-80.59554291 613.19805908]
[-85.18640137 627.47821045]
[-89.77725983 641.75842285]
[-77.37511444 658.37145996]
[-81.48454285 680.45520020]
[-101.94997406 693.36114502]
[-104.04270172 708.21441650]
[-106.13543701 723.06774902]
[-108.22816467 737.92102051]
[-110.32089233 752.77435303]
[-112.41362762 767.62762451]
[-114.50635529 782.48095703]
[-94.69390106 783.38391113]
[-77.34918976 803.00860596]
[-73.65500641 817.54656982]
[-69.96082306 832.08459473]
[-66.26663971 846.62255859]
[-62.57245636 861.16052246]
[-52.81150818 875.02276611]
[-63.42985153 888.23968506]
[-79.06970215 881.69506836]
[-77.11044312 864.85473633]
[-80.80462646 850.31677246]
[-84.49880981 835.77874756]
[-88.19299316 821.24078369]
[-91.88717651 806.70281982]
[-99.30546570 805.59869385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 42]
[33 41]
[34 40]
[35 39]
[45 177]
[46 176]
[47 175]
[48 174]
[52 172]
[54 170]
[55 169]
[56 168]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[67 158]
[69 156]
[70 155]
[71 154]
[72 153]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 145]
[80 144]
[81 143]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 99]
[89 98]
[90 97]
[103 114]
[104 113]
[105 112]
[106 111]
[115 135]
[116 134]
[117 133]
[119 132]
[120 131]
[121 130]
[122 129]
[188 200]
[189 199]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
