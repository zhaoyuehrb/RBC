%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCGGUACAGGAGCAGCACUGCCGGCGGGGGCGGGUGCCAGGGACUUGGAGGUGGAGGGGACGCGGCGGUACUCUGGCGUCUUCCGACUUCGACUCCUUACCUUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[84.02673340 307.98840332]
[75.69834900 295.23858643]
[73.28221130 280.20254517]
[77.19694519 265.48538208]
[86.76428986 253.63693237]
[100.32664490 246.71000671]
[99.48558807 231.73361206]
[98.64453125 216.75720215]
[97.80347443 201.78080750]
[94.23526001 195.18450928]
[97.15484619 186.37371826]
[96.73414612 171.37962341]
[96.31345367 156.38551331]
[95.89276123 141.39141846]
[95.47206879 126.39731598]
[94.84113312 111.41059113]
[89.46830750 110.45775604]
[84.31335449 106.95944214]
[69.33695221 106.11838531]
[54.36054993 105.27732849]
[39.38414764 104.43627167]
[24.40774345 103.59521484]
[9.42101955 102.96427917]
[-5.57308054 102.54358673]
[-20.56718063 102.12289429]
[-31.87790108 113.16114807]
[-47.67977524 112.88494873]
[-58.59783173 101.45816040]
[-58.15458298 85.66008759]
[-46.61299515 74.86344910]
[-30.82049370 75.47370148]
[-20.14648628 87.12879181]
[-5.15238667 87.54948425]
[9.84171295 87.97018433]
[16.71457481 84.96901703]
[25.24880028 88.61881256]
[40.22520447 89.45986938]
[55.20160675 90.30092621]
[70.17800903 91.14198303]
[85.15441132 91.98303986]
[70.93477631 87.20790100]
[60.76520538 76.18157959]
[57.15331268 61.62292862]
[60.98971939 47.12182236]
[71.32843781 36.25394058]
[85.62015533 31.69907951]
[100.34082794 34.58037186]
[111.86063385 44.18735504]
[117.33902740 58.15113831]
[115.42514038 73.02853394]
[106.59185028 85.15031433]
[118.31932068 75.79796600]
[130.04679871 66.44561768]
[141.77426147 57.09327316]
[153.50173950 47.74092865]
[159.46702576 33.08739471]
[174.24172974 31.20133591]
[179.08987427 23.28619003]
[186.43180847 21.75669670]
[198.41696167 12.73693943]
[210.40211487 3.71718311]
[222.38726807 -5.30257320]
[234.37243652 -14.32232952]
[246.35758972 -23.34208679]
[258.34274292 -32.36184311]
[270.32791138 -41.38159943]
[273.36520386 -47.51659012]
[278.34036255 -50.62344360]
[283.24752808 -50.54855347]
[295.71957397 -58.88210678]
[308.19161987 -67.21566010]
[314.95553589 -82.15491486]
[331.29965210 -83.49732971]
[340.41052246 -69.86193848]
[332.91567993 -55.27566147]
[316.52514648 -54.74361801]
[304.05310059 -46.41006470]
[291.58108521 -38.07651138]
[279.34765625 -29.39644051]
[267.36248779 -20.37668419]
[255.37734985 -11.35692883]
[243.39218140 -2.33717227]
[231.40702820 6.68258429]
[219.42187500 15.70234013]
[207.43672180 24.72209740]
[195.45155334 33.74185181]
[183.59407043 42.92881012]
[178.46762085 56.91339874]
[162.85408020 59.46839905]
[151.12661743 68.82074738]
[139.39913940 78.17309570]
[127.67166901 87.52544403]
[115.94419861 96.87778473]
[109.81753540 110.56953430]
[113.46733093 119.10375977]
[110.46616364 125.97662354]
[110.88686371 140.97071838]
[111.30755615 155.96482849]
[111.72824860 170.95892334]
[112.14894104 185.95301819]
[112.77987671 200.93974304]
[113.62093353 215.91615295]
[114.46199036 230.89254761]
[115.30304718 245.86895752]
[129.55569458 251.23382568]
[140.38949585 261.93658447]
[145.92741394 276.12289429]
[145.20997620 291.33489990]
[138.36148071 304.93701172]
[126.56847382 314.57263184]
[111.87416077 318.57229614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 104]
[7 103]
[8 102]
[9 101]
[11 100]
[12 99]
[13 98]
[14 97]
[15 96]
[16 94]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 34]
[24 33]
[25 32]
[51 93]
[52 92]
[53 91]
[54 90]
[55 89]
[57 87]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[69 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
