%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUUUCUCAGCCCUAACCCACACCAGCGCGUUGCCUCGGAAACAUCGCGAGAUUUUGUUCCUUCAGUCUCCGCCCCUUUACGGCACGAUGGUCGCGCAAGAAUGUAAUAGAGCUUCGACGGCCGCCAUUUUCUUUCUUUCUUAGCUGUUAGCUGAGAGGAAGUCUCUGAACAGGCGGCAGCGGCUCUUAUAGUGCAACC\
) } def
/len { sequence length } bind def

/coor [
[334.47692871 238.29296875]
[337.05371094 253.06997681]
[336.86389160 268.06878662]
[333.91400146 282.77584839]
[328.30502319 296.68771362]
[320.22900391 309.32800293]
[309.96237183 320.26403809]
[297.85671997 329.12139893]
[284.32641602 335.59680176]
[269.83471680 339.46856689]
[254.87774658 340.60415649]
[239.96762085 338.96469116]
[225.61476135 334.60629272]
[212.31057739 327.67819214]
[200.51055908 318.41754150]
[190.61868286 307.14141846]
[182.97361755 294.23590088]
[177.83709717 280.14276123]
[175.38496399 265.34457397]
[175.70120239 250.34790039]
[178.77494812 235.66619873]
[184.50099182 221.80213928]
[192.68330383 209.23034668]
[203.04171753 198.38124084]
[215.22163391 189.62625122]
[228.80604553 183.26512146]
[243.32986450 179.51564026]
[258.29867554 178.50622559]
[244.50837708 172.60472107]
[230.71809387 166.70323181]
[216.92779541 160.80172729]
[203.13749695 154.90022278]
[198.44357300 155.81622314]
[193.12495422 153.78817749]
[189.01463318 148.59475708]
[175.41453552 142.26722717]
[161.81445312 135.93971252]
[148.16557312 129.71812439]
[134.46871948 123.60287476]
[120.77187347 117.48761749]
[116.28923035 121.72437286]
[110.96605682 124.84014893]
[105.07703400 126.67416382]
[98.92603302 127.13179016]
[92.83045197 126.18940735]
[87.10482025 123.89564514]
[82.04458618 120.36885834]
[77.91085052 115.79103851]
[74.91692352 110.39839935]
[73.21728516 104.46919250]
[72.89964294 98.30937958]
[58.76913071 93.27663422]
[44.63861847 88.24388123]
[30.50810432 83.21112823]
[16.37759018 78.17838287]
[9.80500221 78.99537659]
[4.59218359 76.70906067]
[1.89003074 72.76313019]
[-12.07713032 67.29335785]
[-26.45584297 73.85294342]
[-41.23202133 68.24579620]
[-47.63922119 53.79853439]
[-41.87615967 39.08246231]
[-27.36196709 32.82836914]
[-12.70765018 38.74669266]
[-6.60735750 53.32619476]
[7.35980368 58.79597092]
[21.41034126 64.04786682]
[35.54085541 69.08061981]
[49.67136765 74.11336517]
[63.80188370 79.14611816]
[77.93239594 84.17886353]
[78.05757904 84.00569916]
[78.18412018 83.83352661]
[69.06813049 71.92140198]
[59.95214462 60.00927353]
[44.32325745 59.48772049]
[32.72068405 49.00372314]
[30.62279510 33.50749969]
[39.02015686 20.31589890]
[53.94778442 15.65758801]
[68.35731506 21.73207855]
[75.44500732 35.67118454]
[71.86426544 50.89328384]
[80.98025513 62.80540848]
[90.09624481 74.71753693]
[116.83514404 78.69588470]
[126.88712311 103.79077148]
[140.58396912 109.90602112]
[154.28082275 116.02127838]
[163.40007019 116.66362000]
[168.14196777 122.33961487]
[181.74206543 128.66714478]
[195.34214783 134.99465942]
[209.03900146 141.10992432]
[222.82929993 147.01142883]
[236.61959839 152.91293335]
[250.40988159 158.81443787]
[264.20019531 164.71594238]
[259.71902466 150.40092468]
[267.26538086 137.43742371]
[281.92614746 134.26536560]
[294.15637207 142.94993591]
[295.99349976 157.83700562]
[286.24188232 169.23410034]
[301.24188232 169.23410034]
[316.24188232 169.23410034]
[331.24188232 169.23410034]
[344.66549683 154.29367065]
[364.44387817 154.03436279]
[377.83502197 168.17488098]
[392.81869507 167.47528076]
[407.80236816 166.77568054]
[422.78604126 166.07606506]
[437.76971436 165.37646484]
[443.54202271 162.12886047]
[449.23248291 162.26840210]
[453.22879028 164.89546204]
[468.22698975 164.66218567]
[476.76611328 161.39775085]
[483.45980835 164.54371643]
[497.25997925 156.80642700]
[509.98724365 164.54371643]
[524.98724365 164.54371643]
[539.98724365 164.54371643]
[554.98724365 164.54371643]
[569.98724365 164.54371643]
[584.98724365 164.54371643]
[596.12036133 153.64916992]
[611.33251953 153.86285400]
[621.65020752 164.54371643]
[636.65020752 164.54371643]
[651.65020752 164.54371643]
[666.63885498 163.96064758]
[681.59350586 162.79539490]
[696.54821777 161.63014221]
[711.50286865 160.46487427]
[726.45751953 159.29962158]
[732.12603760 155.87406921]
[737.81805420 155.83657837]
[741.89416504 158.33807373]
[756.87786865 157.63847351]
[771.86151123 156.93885803]
[786.84521484 156.23925781]
[801.82885742 155.53964233]
[816.81256104 154.84004211]
[831.79620361 154.14044189]
[846.77990723 153.44082642]
[862.31976318 146.66232300]
[873.13525391 159.71844482]
[863.58337402 173.72552490]
[847.47949219 168.42451477]
[832.49584961 169.12411499]
[817.51214600 169.82371521]
[802.52850342 170.52333069]
[787.54479980 171.22293091]
[772.56109619 171.92253113]
[757.57745361 172.62214661]
[742.59375000 173.32174683]
[727.62280273 174.25428772]
[712.66809082 175.41955566]
[697.71343994 176.58480835]
[682.75878906 177.75006104]
[667.80407715 178.91532898]
[677.29962158 190.52717590]
[674.29791260 205.22377014]
[661.00952148 212.18209839]
[647.22039795 206.27784729]
[643.08526611 191.85910034]
[651.65020752 179.54371643]
[636.65020752 179.54371643]
[621.65020752 179.54371643]
[611.33251953 190.22459412]
[596.12036133 190.43827820]
[584.98724365 179.54371643]
[569.98724365 179.54371643]
[554.98724365 179.54371643]
[539.98724365 179.54371643]
[524.98724365 179.54371643]
[509.98724365 179.54371643]
[497.25997925 187.28102112]
[483.45980835 179.54371643]
[468.46026611 179.66036987]
[453.46206665 179.89364624]
[438.46932983 180.36013794]
[423.48565674 181.05975342]
[408.50198364 181.75935364]
[393.51828003 182.45895386]
[378.53460693 183.15856934]
[373.91592407 192.33973694]
[365.83746338 198.82298279]
[355.71743774 201.38410950]
[345.36856079 199.49516296]
[336.67337036 193.43151855]
[331.24188232 184.23410034]
[316.24188232 184.23410034]
[301.24188232 184.23410034]
[286.24188232 184.23410034]
[299.60397339 191.04981995]
[311.48165894 200.21066284]
[321.46823120 211.40299988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 99]
[29 98]
[30 97]
[31 96]
[32 95]
[35 94]
[36 93]
[37 92]
[38 90]
[39 89]
[40 88]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[58 67]
[59 66]
[74 86]
[75 85]
[76 84]
[105 198]
[106 197]
[107 196]
[108 195]
[111 189]
[112 188]
[113 187]
[114 186]
[115 185]
[118 184]
[119 183]
[121 182]
[123 180]
[124 179]
[125 178]
[126 177]
[127 176]
[128 175]
[131 172]
[132 171]
[133 170]
[134 164]
[135 163]
[136 162]
[137 161]
[138 160]
[141 159]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
