%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAGUUUGUGCCUGCGGUGCACCUCGGUCGGGCUCGCCGGGCUCGAGGGCUGGCGGGCGCCGGGGCUACGAGGCCCGGGGGGGAGAGAGCCGGCAGGCGGCGGCGGUGGUGGCGGGGGCGAUGCGCCGCGCCCGGCCGCGCUAGGUGAGCCGGCACCGGGAGCGCGGGCCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[5.10184526 205.50173950]
[9.45059109 219.85751343]
[7.67938328 234.75257874]
[0.08534778 247.68821716]
[-12.05758476 256.49441528]
[-26.71238708 259.69390869]
[-41.42065811 256.74996948]
[-53.71502304 248.15644836]
[-61.53305054 235.35494995]
[-63.56324005 220.49296570]
[-59.46501541 206.06367493]
[-49.92701340 194.48854065]
[-64.22505188 199.02354431]
[-78.52308655 203.55853271]
[-92.82112122 208.09352112]
[-107.11916351 212.62850952]
[-121.41719818 217.16349792]
[-132.23231506 228.71095276]
[-146.70321655 225.18360901]
[-153.96260071 230.77684021]
[-161.29212952 229.67034912]
[-175.66755676 233.95370483]
[-183.02397156 239.41867065]
[-190.33296204 238.18371582]
[-204.78134155 242.21414185]
[-219.22972107 246.24455261]
[-233.67810059 250.27496338]
[-248.12649536 254.30538940]
[-262.53894043 258.46243286]
[-276.91436768 262.74578857]
[-291.28979492 267.02917480]
[-302.30590820 278.38504028]
[-316.71267700 274.60427856]
[-331.08810425 278.88763428]
[-341.95816040 291.16665649]
[-357.97088623 287.62771606]
[-362.65380859 271.91140747]
[-351.18948364 260.18530273]
[-335.37145996 264.51220703]
[-320.99603271 260.22885132]
[-311.00814819 249.17935181]
[-295.57315063 252.65373230]
[-281.19772339 248.37037659]
[-266.82229614 244.08700562]
[-261.29373169 239.14926147]
[-252.15690613 239.85700989]
[-237.70852661 235.82658386]
[-223.26014709 231.79617310]
[-208.81175232 227.76574707]
[-194.36337280 223.73533630]
[-179.95091248 219.57829285]
[-165.57550049 215.29492188]
[-151.23822021 210.88557434]
[-141.44578552 199.66249084]
[-125.95218658 202.86546326]
[-111.65415192 198.33047485]
[-97.35611725 193.79548645]
[-83.05807495 189.26049805]
[-68.76004028 184.72549438]
[-54.46200562 180.19050598]
[-40.77313614 174.05740356]
[-27.87139702 166.40592957]
[-14.96965694 158.75445557]
[-2.06791759 151.10298157]
[4.93222713 137.95584106]
[20.74876213 137.57136536]
[33.65050125 129.91989136]
[46.55224228 122.26841736]
[59.45397949 114.61693573]
[63.61541367 108.48268890]
[72.64997101 106.94667053]
[85.68400574 99.52279663]
[92.91072083 87.55341339]
[106.89212036 87.44316864]
[115.80359650 71.34433746]
[133.32400513 72.09804535]
[146.22573853 64.44657135]
[159.12748718 56.79509354]
[172.02922058 49.14361572]
[184.93095398 41.49213791]
[170.16322327 38.86265564]
[158.48104858 29.45380592]
[152.76498413 15.58561802]
[154.42451477 0.67770219]
[163.05044556 -11.59395123]
[176.51576233 -18.20340347]
[191.50022888 -17.52089882]
[204.30897522 -9.71472740]
[211.78359985 3.29026675]
[212.08103943 18.28731728]
[205.12875366 31.57755089]
[219.07347107 26.05078697]
[233.01817322 20.52402496]
[246.96287537 14.99726105]
[260.90759277 9.47049713]
[274.85229492 3.94373369]
[281.18807983 -10.28636742]
[295.40872192 -15.69264317]
[308.93588257 -9.56475925]
[322.88061523 -15.09152222]
[336.72616577 -20.86216354]
[350.46832275 -26.87490273]
[364.21047974 -32.88764191]
[377.95263672 -38.90038300]
[384.58389282 -45.22565460]
[391.98913574 -44.89570618]
[405.83471680 -50.66634750]
[419.68026733 -56.43698883]
[433.52584839 -62.20762634]
[443.28732300 -74.65850067]
[458.01168823 -72.41298676]
[464.75292969 -78.62090302]
[472.15121460 -78.16104889]
[486.09594727 -83.68780518]
[500.04064941 -89.21456909]
[513.98535156 -94.74133301]
[527.88104248 -100.39025116]
[541.72656250 -106.16089630]
[551.48803711 -118.61177063]
[566.21240234 -116.36624908]
[580.05798340 -122.13689423]
[592.35205078 -133.81135559]
[606.97357178 -125.22959137]
[602.77484131 -108.80378723]
[585.82861328 -108.29132843]
[571.98303223 -102.52068329]
[563.21191406 -90.48256683]
[547.49725342 -92.31533051]
[533.65167236 -86.54468536]
[528.67272949 -81.05318451]
[519.51208496 -80.79663086]
[505.56741333 -75.26986694]
[491.62271118 -69.74310303]
[477.67797852 -64.21633911]
[463.78231812 -58.56741714]
[455.01116943 -46.52929688]
[439.29647827 -48.36206055]
[425.45092773 -42.59141922]
[411.60534668 -36.82078171]
[397.75979614 -31.05014038]
[383.96539307 -25.15822220]
[370.22323608 -19.14548302]
[356.48107910 -13.13274288]
[342.73892212 -7.12000322]
[340.18750000 -3.05150008]
[335.03979492 -0.55832750]
[328.40737915 -1.14681447]
[314.46264648 4.37994909]
[308.80624390 18.11095047]
[294.74304199 23.91452217]
[280.37905884 17.88844109]
[266.43435669 23.41520500]
[252.48963928 28.94196892]
[238.54493713 34.46873093]
[224.60023499 39.99549484]
[210.65551758 45.52225876]
[204.32733154 53.84158325]
[192.58244324 54.39387894]
[179.68069458 62.04535294]
[166.77896118 69.69683075]
[153.87721252 77.34831238]
[140.97547913 84.99978638]
[137.66889954 96.65457916]
[126.95793915 103.12950897]
[114.31599426 100.47720337]
[107.08927917 112.44658661]
[93.10787964 112.55683136]
[80.07384491 119.98071289]
[67.10546112 127.51867676]
[54.20372009 135.17015076]
[41.30197906 142.82162476]
[28.40023994 150.47311401]
[20.47727585 164.16752625]
[5.58355999 164.00471497]
[-7.31818008 171.65618896]
[-20.21991920 179.30767822]
[-33.12165833 186.95915222]
[-18.13316345 187.54652405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 55]
[19 53]
[21 52]
[22 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[61 177]
[62 176]
[63 175]
[64 174]
[66 172]
[67 171]
[68 170]
[69 169]
[71 168]
[72 167]
[74 165]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[99 148]
[100 147]
[101 144]
[102 143]
[103 142]
[104 141]
[106 140]
[107 139]
[108 138]
[109 137]
[111 135]
[113 134]
[114 133]
[115 132]
[116 131]
[117 129]
[118 128]
[120 126]
[121 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
