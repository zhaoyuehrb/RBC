%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCGUGCGCAGCGGUUGCCUGGGCGACCGGGGAAGCGUUGGGCUGUAAAGACUAGGGCGCCAGCGGCUGGCGAAGAAGGAAAGAGGGUACUCUCUGGCUGGGCUGGGGCCGUAGCGACGUCCGCCGCGAACCUGGGCCCCCCAAAGCUGCGGGGCGUUCGGUGUCGCCGAAGUAAAC\
) } def
/len { sequence length } bind def

/coor [
[167.48498535 552.26989746]
[181.84805298 547.94531250]
[196.59555054 550.68591309]
[208.44546509 559.88140869]
[204.10668945 545.52264404]
[199.76791382 531.16381836]
[195.42912292 516.80505371]
[190.47174072 511.29727173]
[191.14167786 502.16082764]
[180.22705078 492.02572632]
[183.90800476 476.63870239]
[179.81771851 462.20715332]
[175.72743225 447.77560425]
[171.63713074 433.34405518]
[167.54684448 418.91250610]
[163.45654297 404.48095703]
[153.03947449 398.30001831]
[149.52388000 386.29003906]
[155.32293701 374.75006104]
[151.48234558 360.25006104]
[147.64176941 345.75009155]
[135.69250488 340.88876343]
[128.62629700 329.86386108]
[129.21697998 316.58721924]
[137.47268677 305.92532349]
[133.88294983 291.36117554]
[130.29321289 276.79705811]
[126.70348358 262.23294067]
[123.13046265 259.02850342]
[121.54836273 253.53613281]
[123.25044250 247.10417175]
[120.16554260 232.42481995]
[117.08064270 217.74546814]
[113.99575043 203.06611633]
[110.91085052 188.38676453]
[97.26518250 182.47627258]
[89.62606049 169.51063538]
[91.10365295 154.35575867]
[101.33988953 142.84378052]
[98.25498962 128.16442871]
[95.17009735 113.48508453]
[85.98225403 102.94586182]
[90.15055084 89.59981537]
[87.06565094 74.92046356]
[83.98075867 60.24111176]
[80.89585876 45.56175995]
[77.81095886 30.88240623]
[72.97183990 23.10383034]
[74.80180359 15.92314053]
[71.97074127 1.19272745]
[62.60191345 -4.39697838]
[57.96469879 -14.02849960]
[59.37874603 -24.40238380]
[66.13496399 -32.11045837]
[61.70495987 -40.12908554]
[63.90415573 -47.20542526]
[61.83935165 -62.06263351]
[59.77454758 -76.91983795]
[50.21126175 -89.52357483]
[56.12295151 -103.19475555]
[54.05815125 -118.05196381]
[51.99334717 -132.90916443]
[42.43006134 -145.51290894]
[48.34175110 -159.18408203]
[46.27694702 -174.04129028]
[44.21214676 -188.89849854]
[42.14734268 -203.75570679]
[40.08254242 -218.61291504]
[37.76160049 -233.43226624]
[35.18521500 -248.20935059]
[32.60882950 -262.98641968]
[30.03244400 -277.76351929]
[27.45605659 -292.54058838]
[24.87967110 -307.31768799]
[18.42528534 -293.77734375]
[6.48201084 -284.70220947]
[-8.29259300 -282.11163330]
[-22.61094666 -286.58206177]
[-33.28699875 -297.11874390]
[-37.94516373 -311.37713623]
[-35.54892731 -326.18447876]
[-26.63149071 -338.24597168]
[-13.17711735 -344.87771606]
[1.82038605 -344.60403442]
[15.02384472 -337.48583984]
[23.49501228 -325.10775757]
[23.75392151 -340.10552979]
[24.01283073 -355.10327148]
[24.27173996 -370.10104370]
[15.84966183 -384.17233276]
[24.06004333 -398.36816406]
[40.45674896 -398.08508301]
[48.17225266 -383.61431885]
[39.26950455 -369.84213257]
[39.01059723 -354.84436035]
[38.75168610 -339.84661865]
[38.49277496 -324.84884644]
[39.65675735 -309.89407349]
[42.23314285 -295.11697388]
[44.80952835 -280.33990479]
[47.38591385 -265.56280518]
[49.96229935 -250.78573608]
[52.53868484 -236.00865173]
[55.88211060 -232.56535339]
[57.08152390 -226.97692871]
[54.93974686 -220.67771912]
[57.00455093 -205.82051086]
[59.06935120 -190.96330261]
[61.13415527 -176.10609436]
[63.19895935 -161.24888611]
[72.61455536 -149.70783997]
[66.85055542 -134.97396851]
[68.91535950 -120.11676788]
[70.98015594 -105.25955963]
[80.39575958 -93.71851349]
[74.63175201 -78.98464203]
[76.69655609 -64.12743378]
[78.76136017 -49.27022934]
[80.95431519 -34.43139648]
[94.17510986 -20.34178734]
[86.70115662 -1.63833654]
[89.53221893 13.09207726]
[92.49031067 27.79750824]
[95.57521057 42.47686005]
[98.66011047 57.15621185]
[101.74501038 71.83556366]
[104.82990265 86.51491547]
[114.01774597 97.05413818]
[109.84944916 110.40018463]
[112.93434906 125.07953644]
[116.01924133 139.75888062]
[130.02346802 146.17668152]
[137.47630310 159.45480347]
[135.70242310 174.39860535]
[125.59020233 185.30186462]
[128.67509460 199.98121643]
[131.75999451 214.66056824]
[134.84489441 229.33992004]
[137.92979431 244.01927185]
[141.26760864 258.64318848]
[144.85734558 273.20730591]
[148.44708252 287.77145386]
[152.03681946 302.33557129]
[167.16348267 311.09741211]
[171.20632935 327.75747681]
[162.14176941 341.90948486]
[165.98234558 356.40948486]
[169.82293701 370.90948486]
[183.10479736 383.64654541]
[177.88809204 400.39068604]
[181.97837830 414.82223511]
[186.06867981 429.25375366]
[190.15896606 443.68530273]
[194.24926758 458.11685181]
[198.33955383 472.54840088]
[209.54675293 483.71572876]
[205.57322693 498.07052612]
[209.78791809 512.46624756]
[214.12670898 526.82501221]
[218.46548462 541.18383789]
[222.80426025 555.54260254]
[228.48466492 569.42547607]
[235.45550537 582.70727539]
[242.42636108 595.98913574]
[249.39720154 609.27099609]
[256.36804199 622.55279541]
[269.08264160 633.76782227]
[261.82568359 649.09008789]
[245.09326172 646.35839844]
[243.08621216 629.52368164]
[236.11535645 616.24182129]
[229.14451599 602.95996094]
[222.17366028 589.67816162]
[215.20281982 576.39630127]
[213.19720459 591.26159668]
[204.60035706 603.55364990]
[191.32521057 610.53729248]
[176.32571411 610.65844727]
[162.93945312 603.89031982]
[154.14508057 591.73876953]
[151.89950562 576.90783691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[9 157]
[11 155]
[12 154]
[13 153]
[14 152]
[15 151]
[16 150]
[19 148]
[20 147]
[21 146]
[25 143]
[26 142]
[27 141]
[28 140]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[39 131]
[40 130]
[41 129]
[43 127]
[44 126]
[45 125]
[46 124]
[47 123]
[49 122]
[50 121]
[54 119]
[56 118]
[57 117]
[58 116]
[60 114]
[61 113]
[62 112]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 103]
[70 102]
[71 101]
[72 100]
[73 99]
[74 98]
[86 97]
[87 96]
[88 95]
[89 94]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
