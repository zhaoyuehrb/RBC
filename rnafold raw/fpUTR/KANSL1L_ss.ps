%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGGCAGCGGGCGGACUGUUAAACCGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCCGGGGCGGGAGCGGGGCGCGCUCUGGAGACGAGUCAGCGGCGCCCCGGGUGGGGGAGGCGGGCGGGCAGCUAGAGAUCACCUCAGCAGCCCCCACCACGGCCGGACCGAAGGUGCGGCGGCGGAGGGGAGCCAGGGCGCCCCAGCAGGUUUCCAAUACUUAUCUACAGGAAUCGCC\
) } def
/len { sequence length } bind def

/coor [
[101.68800354 271.16632080]
[99.08328247 285.93844604]
[96.47856140 300.71057129]
[93.87384033 315.48266602]
[101.86088562 329.39620972]
[95.82893372 344.26211548]
[80.40516663 348.67654419]
[67.42138672 339.25311279]
[66.83763885 323.22067261]
[79.10172272 312.87796021]
[81.70644379 298.10583496]
[84.31116486 283.33374023]
[86.91589355 268.56161499]
[89.33625793 253.75816345]
[91.57189178 238.92570496]
[93.80752563 224.09324646]
[96.04315948 209.26078796]
[87.70008087 191.80033875]
[100.57514954 176.26690674]
[102.44030762 161.38331604]
[104.30546570 146.49972534]
[106.17061615 131.61613464]
[100.57830048 126.61854553]
[90.58291626 137.80300903]
[79.39861298 127.80744171]
[89.39366913 116.62334442]
[83.80135345 111.62574768]
[69.22018433 115.14560699]
[57.62094879 125.90518188]
[43.43343353 121.37046814]
[28.85226059 124.89032745]
[14.27108860 128.41018677]
[-0.31008393 131.93005371]
[-11.90931511 142.68962097]
[-26.09683228 138.15490723]
[-40.67800522 141.67477417]
[-52.27723694 152.43434143]
[-66.46475220 147.89962769]
[-81.04592896 151.41949463]
[-92.64515686 162.17906189]
[-106.83267212 157.64434814]
[-121.41384888 161.16421509]
[-133.01307678 171.92378235]
[-147.20059204 167.38908386]
[-161.78176880 170.90893555]
[-173.38099670 181.66851807]
[-187.56851196 177.13380432]
[-202.14968872 180.65365601]
[-213.74891663 191.41323853]
[-227.93643188 186.87852478]
[-242.51760864 190.39837646]
[-254.01962280 202.08750916]
[-269.82363892 197.70965576]
[-273.67181396 181.76840210]
[-261.60549927 170.66273499]
[-246.03747559 175.81721497]
[-231.45629883 172.29734802]
[-220.90000916 161.78953552]
[-205.66955566 166.07249451]
[-191.08837891 162.55262756]
[-180.53208923 152.04481506]
[-165.30162048 156.32777405]
[-150.72045898 152.80790710]
[-140.16416931 142.30009460]
[-124.93370819 146.58303833]
[-110.35253143 143.06318665]
[-99.79624939 132.55537415]
[-84.56578827 136.83831787]
[-69.98461151 133.31846619]
[-59.42832565 122.81065369]
[-44.19786453 127.09359741]
[-29.61669350 123.57373810]
[-19.06040573 113.06593323]
[-3.82994485 117.34887695]
[10.75122738 113.82901764]
[25.33239937 110.30915833]
[39.91357040 106.78929138]
[50.46986008 96.28148651]
[65.70031738 100.56443024]
[80.28149414 97.04457092]
[81.99594116 89.74315643]
[85.42485046 75.14032745]
[87.13929749 67.83891296]
[75.64863586 58.19710159]
[64.15796661 48.55528641]
[52.66730118 38.91347122]
[41.17663193 29.27165794]
[29.68596649 19.62984467]
[13.64296341 19.59006119]
[3.78469348 6.93328190]
[7.67357922 -8.63129711]
[22.32639885 -15.16386223]
[36.50276566 -7.65318918]
[39.32778168 8.13917732]
[50.81844711 17.78099060]
[62.30911255 27.42280579]
[73.79978180 37.06462097]
[85.29045105 46.70643234]
[96.78111267 56.34824753]
[111.77062225 56.90911484]
[123.94969177 48.15296173]
[136.12876892 39.39680481]
[148.30783081 30.64064980]
[160.48690796 21.88449478]
[172.66596985 13.12834072]
[175.34574890 -2.21625233]
[187.82179260 -10.92274284]
[202.43400574 -8.27341843]
[214.61308289 -17.02957344]
[217.29286194 -32.37416458]
[229.76890564 -41.08065796]
[244.38111877 -38.43133163]
[249.50457764 -45.96088409]
[256.76702881 -47.21961212]
[269.05432129 -55.82325745]
[281.34158325 -64.42690277]
[293.62887573 -73.03055573]
[305.91616821 -81.63420105]
[318.20343018 -90.23784637]
[330.49072266 -98.84149170]
[340.69329834 -109.83727264]
[348.35467529 -122.73314667]
[355.93548584 -135.67652893]
[363.43548584 -148.66690063]
[370.93548584 -161.65728760]
[378.43548584 -174.64765930]
[385.93548584 -187.63804626]
[393.43548584 -200.62843323]
[400.93548584 -213.61880493]
[408.43548584 -226.60919189]
[404.56710815 -241.69802856]
[412.35821533 -254.76528931]
[426.76696777 -258.36022949]
[434.26696777 -271.35061646]
[423.58047485 -286.36956787]
[430.64007568 -309.73355103]
[436.12017822 -323.69665527]
[441.60031128 -337.65975952]
[436.52853394 -352.88003540]
[445.38650513 -366.25598145]
[461.37915039 -367.52670288]
[472.23828125 -355.71743774]
[469.63369751 -339.88723755]
[455.56341553 -332.17965698]
[450.08328247 -318.21655273]
[444.60317993 -304.25344849]
[451.09835815 -300.50344849]
[470.58392334 -289.25344849]
[479.93627930 -300.98092651]
[489.28863525 -312.70840454]
[488.92843628 -328.74740601]
[501.33551025 -338.91815186]
[516.99218750 -335.41851807]
[523.88806152 -320.93310547]
[516.73315430 -306.57388306]
[501.01611328 -303.35604858]
[491.66375732 -291.62857056]
[482.31140137 -279.90109253]
[465.60739136 -262.10531616]
[447.25735474 -263.85061646]
[439.75735474 -250.86022949]
[443.84841919 -236.58441162]
[436.42739868 -223.30348206]
[421.42587280 -219.10919189]
[413.92587280 -206.11880493]
[406.42587280 -193.12843323]
[398.92587280 -180.13804626]
[391.42587280 -167.14765930]
[383.92587280 -154.15728760]
[376.42587280 -141.16690063]
[368.92587280 -128.17652893]
[368.30490112 -120.83199310]
[361.25054932 -115.07178497]
[353.58917236 -102.17591095]
[361.80575562 -89.62649536]
[376.68936157 -91.49164581]
[391.57293701 -93.35680389]
[406.45651245 -95.22196198]
[419.18750000 -104.61518097]
[432.77810669 -98.52048492]
[447.66168213 -100.38563538]
[462.54525757 -102.25079346]
[477.50964355 -110.21970367]
[489.30969238 -98.04615021]
[480.87844849 -83.33728790]
[464.41043091 -87.36720276]
[449.52682495 -85.50205231]
[434.64324951 -83.63689423]
[422.97683716 -74.37708282]
[408.32168579 -80.33837128]
[393.43807983 -78.47321320]
[378.55450439 -76.60806274]
[363.67092896 -74.74290466]
[362.45675659 -59.79212570]
[376.84436035 -55.54983139]
[391.23193359 -51.30753326]
[403.44808960 -60.87544632]
[418.95623779 -61.40192795]
[431.79318237 -52.68452835]
[437.02282715 -38.07527161]
[432.63427734 -23.19171143]
[420.31503296 -13.75688076]
[404.80209351 -13.39866543]
[392.06051636 -22.25480652]
[386.98965454 -36.91993713]
[372.60205078 -41.16223526]
[358.21444702 -45.40452957]
[341.53970337 -64.86894226]
[339.09436035 -86.55421448]
[326.80709839 -77.95056152]
[314.51980591 -69.34691620]
[302.23251343 -60.74327087]
[289.94525146 -52.13962555]
[277.65795898 -43.53597641]
[265.37066650 -34.93233109]
[253.13726807 -26.25226212]
[250.99484253 -11.55717468]
[238.76826477 -2.50369287]
[223.36923218 -4.85050344]
[211.19017029 3.90565181]
[209.04774475 18.60073853]
[196.82116699 27.65422058]
[181.42213440 25.30741119]
[169.24305725 34.06356430]
[157.06399536 42.81972122]
[144.88491821 51.57587433]
[132.70585632 60.33203125]
[120.52677917 69.08818817]
[133.83871460 62.17499542]
[148.75166321 60.56121063]
[163.23432922 64.46664429]
[175.31405640 73.35934448]
[183.34548950 86.02804565]
[186.23468018 100.74716949]
[183.58810425 115.51184082]
[175.76622009 128.31098938]
[163.83447266 137.40127563]
[149.41802979 141.54450989]
[134.48056030 140.17634583]
[121.05420685 133.48129272]
[119.18904877 148.36488342]
[117.32389832 163.24847412]
[115.45874023 178.13206482]
[122.59912109 186.29290771]
[124.05430603 196.81718445]
[119.58435822 206.21330261]
[110.87561798 211.49641418]
[108.63998413 226.32887268]
[106.40435028 241.16134644]
[104.16871643 255.99380493]
[106.21134186 262.23699951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[14 250]
[15 249]
[16 248]
[17 247]
[19 243]
[20 242]
[21 241]
[22 240]
[27 80]
[28 79]
[30 77]
[31 76]
[32 75]
[33 74]
[35 72]
[36 71]
[38 69]
[39 68]
[41 66]
[42 65]
[44 63]
[45 62]
[47 60]
[48 59]
[50 57]
[51 56]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[100 228]
[101 227]
[102 226]
[103 225]
[104 224]
[105 223]
[108 220]
[109 219]
[112 216]
[114 215]
[115 214]
[116 213]
[117 212]
[118 211]
[119 210]
[120 209]
[121 174]
[122 173]
[123 171]
[124 170]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[133 161]
[134 160]
[136 146]
[137 145]
[138 144]
[148 158]
[149 157]
[150 156]
[175 193]
[176 192]
[177 191]
[178 190]
[180 188]
[181 187]
[182 186]
[194 207]
[195 206]
[196 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
