%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCUCGCCGCCCUGAACCGGCGGCUAGACUGCGCAUGCGUGUCAGUGGCGCUAGCGGCGGACCCGGCUGGGCAGUUCCUUCCCCAGAAGGAGAGAUUCCUCUGCC\
) } def
/len { sequence length } bind def

/coor [
[77.28971100 144.31468201]
[76.85743713 129.32092285]
[70.29139709 125.69640350]
[70.57949066 140.69363403]
[57.73549652 148.44166565]
[44.60356903 141.19235229]
[44.31580353 126.19510651]
[57.15931320 118.44738007]
[50.59327316 114.82286835]
[37.67554474 122.44731903]
[24.75781822 130.07177734]
[11.84008980 137.69622803]
[-1.07763827 145.32069397]
[-13.99536610 152.94514465]
[-16.38408089 168.39920044]
[-28.18161774 178.66333008]
[-43.81754303 178.89109802]
[-55.90904999 168.97497559]
[-58.74689484 153.59704590]
[-50.99114227 140.01829529]
[-36.30381393 134.65020752]
[-21.61982155 140.02742004]
[-8.70209312 132.40295410]
[4.21563482 124.77850342]
[17.13336182 117.15405273]
[30.05109024 109.52959442]
[42.96881866 101.90514374]
[62.82830429 73.39621735]
[90.00938416 67.12553406]
[108.09500122 78.46409607]
[108.09500122 63.46409988]
[108.09500122 48.46409988]
[108.09500122 33.46409988]
[108.09500122 18.46409988]
[108.09500122 3.46409965]
[100.35769653 -10.33607292]
[108.09500122 -23.06334496]
[108.09500122 -38.06334305]
[97.20044708 -49.19646835]
[97.41412354 -64.40859985]
[108.09500122 -74.72628021]
[108.09500122 -89.72628021]
[100.35769653 -103.52645874]
[108.09500122 -116.25373077]
[108.09500122 -131.25372314]
[108.09500122 -146.25372314]
[100.35769653 -160.05389404]
[108.09500122 -172.78117371]
[108.09500122 -187.78117371]
[100.35769653 -201.58134460]
[108.09500122 -214.30862427]
[108.09500122 -229.30862427]
[99.43129730 -243.23242188]
[107.39542389 -257.56784058]
[123.79457092 -257.56784058]
[131.75869751 -243.23242188]
[123.09500122 -229.30862427]
[123.09500122 -214.30862427]
[130.83230591 -201.58134460]
[123.09500122 -187.78117371]
[123.09500122 -172.78117371]
[130.83230591 -160.05389404]
[123.09500122 -146.25372314]
[123.09500122 -131.25372314]
[123.09500122 -116.25373077]
[130.83230591 -103.52645874]
[123.09500122 -89.72628021]
[123.09500122 -74.72628021]
[133.77586365 -64.40859985]
[133.98954773 -49.19646835]
[123.09500122 -38.06334305]
[123.09500122 -23.06334496]
[130.83230591 -10.33607292]
[123.09500122 3.46409965]
[123.09500122 18.46409988]
[123.09500122 33.46409988]
[123.09500122 48.46409988]
[123.09500122 63.46409988]
[123.09500122 78.46409607]
[132.15480042 90.41901398]
[146.59602356 94.47501373]
[161.03724670 98.53101349]
[175.47845459 102.58702087]
[189.91967773 106.64302063]
[205.66746521 102.06705475]
[217.31536865 113.61080170]
[212.88104248 129.39904785]
[196.92613220 133.19020081]
[185.86367798 121.08423615]
[171.42245483 117.02823639]
[156.98124695 112.97223663]
[142.54002380 108.91623688]
[128.09880066 104.86023712]
[119.03900146 116.81515503]
[126.84880829 129.62167358]
[134.65863037 142.42817688]
[142.46844482 155.23469543]
[157.11471558 162.61158752]
[157.77900696 178.99728394]
[143.77793884 187.53556824]
[129.51461792 179.44299316]
[129.66192627 163.04450989]
[121.85211182 150.23799133]
[114.04229736 137.43147278]
[106.23248291 124.62496185]
[91.85121155 128.88865662]
[92.28347778 143.88241577]
[95.02837372 163.06875610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[35 74]
[37 72]
[38 71]
[41 68]
[42 67]
[44 65]
[45 64]
[46 63]
[48 61]
[49 60]
[51 58]
[52 57]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[94 105]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
