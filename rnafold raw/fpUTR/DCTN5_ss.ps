%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGUAGACGGCCGAGCAGUGGAGCGAGGCCGCCUAAAGGAGAGCCGCGCUGUCGAUGAGUCCCAGUGGGCCACCUGGAGCGGAAGUGGAGGAGCGGCCGGAAGUAGCCGGAAUCUCUGAAAGACUGACCGACUGACUCUGACAGGAUCCGGGGCUGAGGGAAGGAGGCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-35.36265945 581.13238525]
[-29.31632042 565.29327393]
[-29.31632042 550.29327393]
[-29.31632042 535.29327393]
[-29.31632042 520.29327393]
[-29.31632042 505.29327393]
[-36.28279877 502.51510620]
[-41.83932877 516.44799805]
[-55.77211761 510.89123535]
[-50.21575928 496.95880127]
[-57.18223953 494.18063354]
[-67.50435638 505.06430054]
[-77.82647705 515.94793701]
[-88.14859772 526.83160400]
[-87.90492249 542.40655518]
[-98.52806091 553.29705811]
[-113.37786865 553.43334961]
[-123.69998932 564.31701660]
[-123.03114319 580.10717773]
[-133.78488159 591.68872070]
[-149.58119202 592.19061279]
[-161.04841614 581.31500244]
[-161.38325500 565.51428223]
[-150.38703918 554.16265869]
[-134.58364868 553.99493408]
[-124.26152802 543.11126709]
[-124.91129303 528.27502441]
[-114.59824371 517.09045410]
[-99.03224945 516.50946045]
[-88.71012878 505.62582397]
[-78.38800812 494.74218750]
[-68.06589508 483.85852051]
[-59.59527206 471.47915649]
[-53.18942642 457.91580200]
[-46.78358078 444.35241699]
[-40.37773132 430.78903198]
[-52.17111206 419.34555054]
[-59.35519791 404.53784180]
[-61.04927826 388.14108276]
[-57.03196716 372.12765503]
[-47.76996994 358.42980957]
[-34.36392212 348.70657349]
[-18.41762543 344.14282227]
[-1.84618700 345.30484009]
[4.07699776 331.52383423]
[10.00018215 317.74282837]
[15.92336750 303.96182251]
[13.84058571 289.21356201]
[26.39849854 279.59017944]
[32.32168198 265.80920410]
[37.75482559 251.82774353]
[42.69115829 237.66326904]
[47.62749100 223.49877930]
[52.56382370 209.33428955]
[57.50016022 195.16981506]
[62.43649292 181.00532532]
[61.18795013 176.36711121]
[62.86126709 170.89625549]
[67.80506897 166.43334961]
[73.23821259 152.45190430]
[78.67135620 138.47045898]
[84.10449982 124.48900604]
[89.53764343 110.50755310]
[87.68917084 95.62188721]
[79.00138855 83.39394379]
[70.31361389 71.16600800]
[61.62583160 58.93806839]
[54.08077240 53.73471451]
[52.89487839 46.41678238]
[37.45492172 42.05933762]
[31.36812019 27.21580696]
[39.30374908 13.27287388]
[55.17427063 10.92636490]
[66.80517578 21.97632027]
[65.27423859 37.94615936]
[73.85377502 50.25028992]
[82.54154968 62.47822952]
[91.22933197 74.70616913]
[99.91710663 86.93410492]
[114.91477203 87.19883728]
[124.02867889 75.28511810]
[133.03709412 63.29143524]
[141.93933105 51.21872711]
[150.84156799 39.14601898]
[152.45628357 20.81678009]
[168.77543640 14.39790344]
[177.46321106 2.16996384]
[186.15098572 -10.05797577]
[179.85116577 -27.03340721]
[184.93536377 -44.24816895]
[199.19551086 -54.88951874]
[216.83161926 -54.86385727]
[225.08244324 -67.39078522]
[233.33326721 -79.91770935]
[241.58409119 -92.44463348]
[236.27993774 -106.90742493]
[240.46011353 -121.54912567]
[252.32003784 -130.81228638]
[267.18243408 -131.30966187]
[275.43325806 -143.83659363]
[283.68408203 -156.36352539]
[291.93490601 -168.89044189]
[288.50402832 -184.31784058]
[297.05722046 -197.60763550]
[312.52005005 -200.87519836]
[325.71865845 -192.18197632]
[328.82257080 -176.68548584]
[319.99026489 -163.57951355]
[304.46182251 -160.63961792]
[296.21099854 -148.11270142]
[287.96017456 -135.58576965]
[279.70935059 -123.05883789]
[285.12124634 -109.20787048]
[281.29409790 -94.65393066]
[269.49295044 -85.03176117]
[254.11100769 -84.19380951]
[245.86018372 -71.66688538]
[237.60935974 -59.13995743]
[229.35853577 -46.61303329]
[235.28538513 -35.97956085]
[236.12191772 -23.76219749]
[231.64723206 -12.28540993]
[222.65682983 -3.75906992]
[210.82191467 0.14699714]
[198.37893677 -1.37019646]
[189.69114685 10.85774231]
[181.00337219 23.08568192]
[182.70967102 35.08036804]
[175.54598999 45.34429550]
[162.91427612 48.04824829]
[154.01203918 60.12095642]
[145.10981750 72.19366455]
[143.66639709 79.46518707]
[135.94239807 84.39902496]
[126.82849121 96.31274414]
[103.51909637 115.94069672]
[98.08595276 129.92214966]
[92.65280914 143.90359497]
[87.21966553 157.88505554]
[81.78652191 171.86650085]
[76.60097504 185.94166565]
[71.66464233 200.10614014]
[66.72830963 214.27062988]
[61.79197693 228.43510437]
[56.85564423 242.59959412]
[51.91931152 256.76406860]
[52.90392303 261.06347656]
[52.49234390 265.04568481]
[50.96008301 268.30624390]
[48.68670273 270.57373047]
[46.10268021 271.73239136]
[40.17949295 285.51336670]
[41.83861160 301.24734497]
[29.70436478 309.88500977]
[23.78117943 323.66601562]
[17.85799408 337.44702148]
[11.93480968 351.22802734]
[22.28320885 360.13043213]
[29.68988800 371.57702637]
[33.56085587 384.63229370]
[33.59061050 398.23248291]
[29.78623962 411.27224731]
[22.46605873 422.69442749]
[12.23301125 431.57583618]
[-0.07499212 437.20181274]
[-13.45367908 439.12374878]
[-26.81435776 437.19488525]
[-33.22020340 450.75827026]
[-39.62605286 464.32162476]
[-46.03189850 477.88500977]
[-27.10502243 483.28244019]
[-14.31632042 505.29327393]
[-14.31632042 520.29327393]
[-14.31632042 535.29327393]
[-14.31632042 550.29327393]
[-14.31632042 565.29327393]
[-8.26998043 581.13238525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[11 32]
[12 31]
[13 30]
[14 29]
[17 26]
[18 25]
[33 170]
[34 169]
[35 168]
[36 167]
[44 157]
[45 156]
[46 155]
[47 154]
[49 152]
[50 151]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 79]
[65 78]
[66 77]
[67 76]
[69 75]
[80 135]
[81 134]
[82 132]
[83 131]
[84 130]
[86 127]
[87 126]
[88 125]
[92 119]
[93 118]
[94 117]
[95 116]
[99 112]
[100 111]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
