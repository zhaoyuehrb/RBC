%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGUAGGCGCUUCAGGCUUAGGGGCGGAACAGCGCGGGCCGCGCGGGCGUAGGCGGGGUAUCUGGAGGAGGCGCAGGGAACCUGGAGAGGGUCCAGCCCUCAGUGCCCCGGCCAGAGGCGGGAAGGGGCUCUAGAGCUUCGGGAGGCAAGAUGACUUCUCUGCCCCAAGCUUGGAACAGCUAAAGGGAAAAACAGUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[252.38662720 771.08392334]
[248.93576050 756.48626709]
[236.16772461 748.90252686]
[232.46009827 734.14758301]
[240.50115967 720.80670166]
[237.05027771 706.20904541]
[233.59941101 691.61138916]
[220.83137512 684.02770996]
[217.12374878 669.27276611]
[225.16481018 655.93188477]
[214.70703125 645.32604980]
[219.06195068 630.11596680]
[215.61108398 615.51831055]
[212.16021729 600.92065430]
[208.70933533 586.32305908]
[205.25846863 571.72540283]
[201.80760193 557.12774658]
[198.35671997 542.53009033]
[194.90585327 527.93243408]
[191.45498657 513.33477783]
[186.85386658 507.54486084]
[188.06550598 498.48452759]
[184.84095764 483.83523560]
[181.61639404 469.18591309]
[178.39184570 454.53659058]
[175.16728210 439.88729858]
[171.94273376 425.23797607]
[168.71817017 410.58868408]
[165.49362183 395.93936157]
[152.84445190 388.15899658]
[149.36561584 373.34844971]
[157.61216736 360.13360596]
[154.38760376 345.48428345]
[151.04978943 330.86035156]
[147.59892273 316.26269531]
[144.03520203 301.69219971]
[131.15132141 294.30697632]
[127.21581268 279.61117554]
[135.04945374 266.14746094]
[131.37309265 251.60496521]
[127.69673920 237.06246948]
[117.07608795 226.61972046]
[121.19510651 211.34410095]
[110.57446289 200.90135193]
[114.69348145 185.62574768]
[111.01712036 171.08323669]
[107.34075928 156.54074097]
[103.55197906 142.02711487]
[99.65101624 127.54325104]
[82.20700073 123.04914856]
[70.41046906 108.14619446]
[69.99199677 88.15038300]
[82.31549072 71.15404510]
[74.38420868 58.42239761]
[66.45292664 45.69075394]
[58.42336655 33.02086258]
[50.29600906 20.41348267]
[42.16865158 7.80610085]
[34.04129410 -4.80128050]
[25.91393661 -17.40866089]
[17.78657913 -30.01604271]
[10.50177574 -35.53775787]
[9.63275623 -42.88201141]
[1.70147371 -55.61365509]
[-2.21346641 -57.52505493]
[-5.02983713 -60.30533218]
[-6.60923195 -63.50115585]
[-6.97513723 -66.66090393]
[-6.29828024 -69.38746643]
[-13.42674351 -82.58538055]
[-20.55520630 -95.78330231]
[-27.68367004 -108.98121643]
[-34.51983643 -115.04953766]
[-34.81853104 -122.43898773]
[-41.74190140 -135.74563599]
[-53.78849792 -140.36630249]
[-59.27970123 -151.59719849]
[-55.76035690 -163.17466736]
[-62.47697449 -176.58686829]
[-69.19358826 -189.99906921]
[-82.29123688 -198.87388611]
[-81.07190704 -213.71849060]
[-87.78852081 -227.13069153]
[-94.50513458 -240.54289246]
[-108.48648071 -249.11341858]
[-107.78442383 -265.49752808]
[-93.12118530 -272.84066772]
[-79.58104706 -263.58880615]
[-81.09294128 -247.25950623]
[-74.37631989 -233.84730530]
[-67.65970612 -220.43510437]
[-55.04247665 -212.51962280]
[-55.78139496 -196.71568298]
[-49.06477737 -183.30348206]
[-42.34815979 -169.89129639]
[-27.19882965 -161.03865051]
[-28.43524933 -142.66900635]
[-21.51188087 -129.36236572]
[-14.48575306 -116.10968018]
[-7.35729027 -102.91176605]
[-0.22882681 -89.71384430]
[6.89963675 -76.51593018]
[14.43311787 -63.54493713]
[22.36440086 -50.81329346]
[30.39396095 -38.14340210]
[38.52131653 -25.53601837]
[46.64867401 -12.92863750]
[54.77603149 -0.32125682]
[62.90338898 12.28612423]
[71.03074646 24.89350510]
[77.30116272 28.81461334]
[79.18457031 37.75947189]
[87.11585236 50.49111557]
[95.04713440 63.22275925]
[110.01078033 64.26653290]
[119.63282013 52.75930405]
[129.25485229 41.25207520]
[138.87690735 29.74484634]
[141.79362488 14.19482231]
[155.89344788 9.39435482]
[152.97358704 -5.96821070]
[160.65678406 -19.58814430]
[175.31524658 -25.03452682]
[190.02772522 -19.73574638]
[197.84742737 -6.19372177]
[195.08210754 9.19741440]
[183.03750610 19.17044067]
[167.40068054 19.01639748]
[165.17218018 33.74334717]
[150.38412476 39.36688995]
[140.76208496 50.87411880]
[131.14004517 62.38134766]
[121.51800537 73.88857269]
[129.67611694 87.34213257]
[130.60366821 102.30584717]
[124.76917267 115.30824280]
[114.13488007 123.64228058]
[118.03585052 138.12614441]
[123.29257965 145.60441589]
[121.88326263 152.86437988]
[125.55962372 167.40687561]
[129.23597717 181.94938660]
[140.11958313 193.43231201]
[135.73760986 207.66773987]
[146.62121582 219.15068054]
[142.23924255 233.38610840]
[145.91560364 247.92860413]
[149.59196472 262.47109985]
[162.88285828 270.59451294]
[166.40403748 285.39505005]
[158.57769775 298.01583862]
[163.71807861 305.57455444]
[162.19657898 312.81182861]
[165.64744568 327.40948486]
[170.67024231 335.04684448]
[169.03692627 342.25973511]
[172.26147461 356.90902710]
[185.29461670 365.43988037]
[188.35609436 380.34228516]
[180.14292908 392.71481323]
[183.36747742 407.36413574]
[186.59204102 422.01342773]
[189.81658936 436.66275024]
[193.04115295 451.31204224]
[196.26570129 465.96136475]
[199.49026489 480.61065674]
[202.71481323 495.25997925]
[206.05262756 509.88388062]
[209.50350952 524.48156738]
[212.95437622 539.07922363]
[216.40524292 553.67687988]
[219.85612488 568.27447510]
[223.30699158 582.87213135]
[226.75785828 597.46978760]
[230.20874023 612.06744385]
[233.65960693 626.66510010]
[244.36421204 638.31512451]
[239.76246643 652.48101807]
[252.92605591 660.80914307]
[256.21777344 675.66241455]
[248.19706726 688.16052246]
[251.64793396 702.75817871]
[255.09881592 717.35583496]
[268.26239014 725.68395996]
[271.55413818 740.53723145]
[263.53341675 753.03540039]
[266.98428345 767.63305664]
[282.04202271 769.37677002]
[295.59387207 776.16815186]
[306.00338745 787.18713379]
[312.01358032 801.10308838]
[312.89868164 816.23559570]
[308.55181885 830.75732422]
[299.49786377 842.91467285]
[286.83016968 851.23968506]
[272.07843018 854.72698975]
[257.02392578 852.95550537]
[243.48461914 846.13909912]
[233.09542847 835.10101318]
[227.11088562 821.17401123]
[226.25367737 806.03991699]
[230.62730408 791.52618408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[5 183]
[6 182]
[7 181]
[10 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[32 157]
[33 156]
[34 154]
[35 153]
[36 151]
[39 148]
[40 147]
[41 146]
[43 144]
[45 142]
[46 141]
[47 140]
[48 138]
[49 137]
[53 114]
[54 113]
[55 112]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[61 105]
[63 104]
[64 103]
[69 102]
[70 101]
[71 100]
[72 99]
[74 98]
[75 97]
[78 95]
[79 94]
[80 93]
[82 91]
[83 90]
[84 89]
[115 133]
[116 132]
[117 131]
[118 130]
[120 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
