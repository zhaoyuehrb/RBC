%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGAUUCGCUACUUUAAGUUCAGAGUACGCAUGCUCUGAUUUUCUCUCUCUUUCGAUUCUUCCAUACUCAAGAGUACGCACGGUCUGAUUUUCUCUUUGGAUUCUUCCAAAAUCAGAGUCAGACUACUCCCUGUGCC\
) } def
/len { sequence length } bind def

/coor [
[55.15059280 232.32725525]
[54.17277145 216.99952698]
[61.00419998 203.24353027]
[73.80725098 194.75958252]
[72.80536652 179.79307556]
[71.80347443 164.82658386]
[70.80158234 149.86007690]
[63.71656418 147.39988708]
[52.37039948 157.21133423]
[49.54652786 142.47952271]
[42.46150970 140.01933289]
[32.39974213 151.14411926]
[22.33796883 162.26889038]
[23.38015366 178.03878784]
[12.90339470 189.87149048]
[-2.87663150 190.74688721]
[-14.59791565 180.14561462]
[-15.30642796 164.35722351]
[-4.58182001 152.74867249]
[11.21318817 152.20712280]
[21.27495956 141.08233643]
[31.33672905 129.95756531]
[24.42285538 116.64597321]
[9.53534317 118.47953796]
[-5.35216951 120.31311035]
[-20.23968124 122.14667511]
[-35.12719345 123.98024750]
[-50.01470566 125.81381989]
[-64.90222168 127.64738464]
[-79.78973389 129.48095703]
[-92.55008698 139.78170776]
[-107.75153351 133.62963867]
[-109.75613403 117.35346222]
[-96.50171661 107.69672394]
[-81.62329865 114.59344482]
[-66.73578644 112.75987244]
[-51.84827423 110.92630005]
[-36.96076202 109.09273529]
[-22.07324982 107.25916290]
[-7.18573809 105.42559814]
[7.70177412 103.59202576]
[22.58928680 101.75846100]
[8.64520550 96.23011780]
[-5.29887533 90.70176697]
[-20.29876137 90.64354706]
[-33.76995850 84.04605865]
[-43.01230621 72.23169708]
[-46.17327118 57.56853867]
[-42.61927414 42.99564743]
[-33.06267548 31.43401337]
[-19.41899109 25.20104027]
[-4.42296028 25.54606438]
[8.91962433 32.39992905]
[17.93438148 44.38884735]
[20.81447029 59.10750198]
[28.86903572 71.76151276]
[36.92359924 84.41551971]
[35.92171097 69.44902039]
[34.75315475 54.49460602]
[33.41807556 39.55413818]
[32.08299637 24.61367226]
[30.74791718 9.67320442]
[29.41283798 -5.26726294]
[28.07775879 -20.20772934]
[14.69357204 -28.05904579]
[8.51128864 -42.29136658]
[11.90812492 -57.43207932]
[23.57792664 -67.65926361]
[39.03341675 -69.04036713]
[52.33164597 -61.04432297]
[58.35916901 -46.74576950]
[54.79828644 -31.64279938]
[43.01822662 -21.54280853]
[44.35330582 -6.60234165]
[45.68838501 8.33812618]
[47.02346420 23.27859306]
[48.35854340 38.21905899]
[49.69362259 53.15952682]
[53.45232010 59.59378052]
[50.88821411 68.44712830]
[51.89010239 83.41363525]
[74.20122528 60.78353500]
[103.22333527 57.12672043]
[126.09628296 70.95428467]
[134.52056885 93.64995575]
[149.51219177 94.15118408]
[164.50381470 94.65240479]
[179.49543762 95.15363312]
[194.48706055 95.65485382]
[209.47868347 96.15608215]
[224.47030640 96.65730286]
[239.46192932 97.15853119]
[254.45355225 97.65975189]
[269.44519043 98.16098022]
[284.43679810 98.66220093]
[294.00622559 86.59024811]
[308.67761230 82.51546478]
[322.76849365 87.79857635]
[330.94860840 100.21726227]
[345.94021606 100.71849060]
[360.93185425 101.21971130]
[375.92346191 101.72093964]
[390.91510010 102.22216034]
[405.90673828 102.72338867]
[420.11224365 94.52978516]
[434.17355347 102.96848297]
[433.62557983 119.35847473]
[419.03204346 126.83914185]
[405.40548706 117.71501160]
[390.41387939 117.21378326]
[375.42224121 116.71256256]
[360.43063354 116.21133423]
[345.43899536 115.71011353]
[330.44738770 115.20888519]
[321.45605469 127.05347443]
[307.04379272 131.38362122]
[292.67733765 126.33799744]
[283.93557739 113.65383148]
[268.94396973 113.15260315]
[253.95233154 112.65138245]
[238.96070862 112.15015411]
[223.96908569 111.64892578]
[208.97746277 111.14770508]
[193.98583984 110.64647675]
[178.99421692 110.14525604]
[164.00259399 109.64402771]
[149.01097107 109.14280701]
[134.01934814 108.64157867]
[128.58294678 128.49856567]
[111.36377716 144.18797302]
[85.76808929 148.85818481]
[86.76997375 163.82469177]
[87.77186584 178.79119873]
[88.77375793 193.75769043]
[102.59337616 200.45947266]
[111.19734192 213.18217468]
[112.27123260 228.50347900]
[105.52617645 242.30201721]
[92.77655792 250.86607361]
[77.45196533 251.89192200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 134]
[5 133]
[6 132]
[7 131]
[11 22]
[12 21]
[13 20]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[57 81]
[58 80]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
