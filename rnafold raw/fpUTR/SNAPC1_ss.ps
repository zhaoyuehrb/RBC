%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCCGUAGGGGGCGGGCCGUUCGGGCUUGGUUUCCUGGGCGACCACCGCUGGCUAGUCCGUUAGAGGCGUGCGGGCUUCGGAGGCGUGCGGGCUUCGGGUGCC\
) } def
/len { sequence length } bind def

/coor [
[13.36349201 145.27229309]
[4.85426855 137.38848877]
[-9.66325283 141.16229248]
[-24.18077278 144.93609619]
[-38.69829559 148.70989990]
[-46.36522293 153.97894287]
[-53.70663452 152.37249756]
[-68.33055115 155.71031189]
[-82.95446777 159.04812622]
[-97.57839203 162.38594055]
[-112.20230865 165.72375488]
[-126.82622528 169.06156921]
[-141.45014954 172.39938354]
[-156.07406616 175.73719788]
[-170.64640808 179.29341125]
[-185.16394043 183.06721497]
[-199.68145752 186.84100342]
[-214.19897461 190.61480713]
[-228.71649170 194.38861084]
[-238.04884338 207.43801880]
[-254.07679749 208.13394165]
[-264.50509644 195.94253540]
[-261.33401489 180.21598816]
[-246.99615479 173.01838684]
[-232.49029541 179.87109375]
[-217.97277832 176.09729004]
[-203.45526123 172.32348633]
[-188.93774414 168.54968262]
[-174.42021179 164.77587891]
[-168.64407349 159.96826172]
[-159.41188049 161.11328125]
[-144.78796387 157.77546692]
[-130.16404724 154.43765259]
[-115.54012299 151.09983826]
[-100.91620636 147.76202393]
[-86.29228210 144.42420959]
[-71.66836548 141.08639526]
[-57.04444885 137.74858093]
[-42.47209549 134.19238281]
[-27.95457458 130.41857910]
[-13.43705368 126.64477539]
[1.08046722 122.87097168]
[9.23140621 106.61484528]
[26.92973137 101.22788239]
[43.30344772 110.49611664]
[57.56929779 105.86086273]
[71.83514404 101.22560120]
[86.10099030 96.59034729]
[97.15317535 62.41454315]
[105.96995544 50.27928925]
[114.78672791 38.14403534]
[116.63866425 22.43158913]
[130.37916565 16.68288040]
[139.19595337 4.54762602]
[136.92596436 -10.86291885]
[146.04029846 -23.04419518]
[160.74588013 -25.11331558]
[169.56266785 -37.24856949]
[178.37944031 -49.38382339]
[187.01370239 -61.64961624]
[187.69897461 -78.03443909]
[202.35467529 -85.39257812]
[215.90429688 -76.15460968]
[214.40911865 -59.82376480]
[199.40728760 -53.19981384]
[198.22055054 -45.77899170]
[190.51469421 -40.56704712]
[181.69792175 -28.43179131]
[172.88113403 -16.29653549]
[175.45756531 -1.67129731]
[166.68896484 10.76117516]
[151.33120728 13.36440468]
[142.51441956 25.49966049]
[141.29313660 40.34410858]
[126.92198944 46.96081161]
[118.10520935 59.09606934]
[109.28842926 71.23132324]
[110.51705933 78.63000488]
[112.97433472 93.42736053]
[114.20296478 100.82604218]
[126.46875763 109.46029663]
[138.73454285 118.09455109]
[151.00033569 126.72880554]
[163.26612854 135.36306763]
[179.00451660 136.97973633]
[184.95812988 150.63272095]
[200.94689941 149.31396484]
[211.84143066 161.09057617]
[209.28439331 176.92854309]
[195.23731995 184.67832947]
[180.47592163 178.39495850]
[176.32388306 162.89849854]
[161.46281433 161.89941406]
[154.63186646 147.62886047]
[142.36608887 138.99459839]
[130.10029602 130.36033630]
[117.83450317 121.72608948]
[105.56871033 113.09183502]
[90.73624420 110.85619354]
[76.47039795 115.49145508]
[62.20455170 120.12670898]
[47.93870544 124.76196289]
[44.63407135 136.38505554]
[36.15931702 144.82824707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[4 40]
[5 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[45 102]
[46 101]
[47 100]
[48 99]
[49 77]
[50 76]
[51 75]
[53 73]
[54 72]
[57 69]
[58 68]
[59 67]
[60 65]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[86 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
