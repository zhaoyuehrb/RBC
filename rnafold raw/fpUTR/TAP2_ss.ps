%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGAAGGCCUUGGCUGGGGAAGCGAAAGCGAAAGCUGCCCGAGCCCUGACGCCCGCCCUGGCCGAGCGUAGCUGGCGGACCAGAGCCGGUAGCGAGGUUGGGAGAGACGGAGCGGACCUCAGCGCUGAAGCAGAAGUCCCCGGAGCUGCGGUCUCCCCGCCGCGGCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[92.54296875 188.06658936]
[88.25141907 202.88502502]
[76.61467743 213.01367188]
[61.34597015 215.22053528]
[47.31749725 208.80137634]
[39.00568771 195.80455017]
[39.06281662 180.37730408]
[47.47064590 167.44238281]
[61.54627609 161.12730408]
[63.68099976 146.27998352]
[65.81571960 131.43266296]
[53.72785187 122.55102539]
[48.38689423 137.18359375]
[34.57222748 143.55616760]
[20.65522957 138.37419128]
[7.12414455 144.84797668]
[-6.40694046 151.32174683]
[-19.93802452 157.79551697]
[-29.04747772 170.73106384]
[-43.86769867 169.24435425]
[-57.39878464 175.71813965]
[-70.92987061 182.19190979]
[-80.03932190 195.12745667]
[-94.85954285 193.64074707]
[-108.39062500 200.11451721]
[-121.92171478 206.58828735]
[-123.02851868 221.90725708]
[-131.65980530 234.61145020]
[-145.49378967 241.28350830]
[-160.80920410 240.12869263]
[-173.48628235 231.45762634]
[-180.11494446 217.60279846]
[-178.91212463 202.29107666]
[-170.20137024 189.64123535]
[-156.32583618 183.05603027]
[-141.01795959 184.30683899]
[-128.39549255 193.05720520]
[-114.86440277 186.58343506]
[-101.33331299 180.10966492]
[-93.19169617 167.63716125]
[-77.40364075 168.66082764]
[-63.87255859 162.18704224]
[-50.34147263 155.71327209]
[-42.19985199 143.24076843]
[-26.41179848 144.26443481]
[-12.88071346 137.79066467]
[0.65037179 131.31687927]
[14.18145657 124.84310913]
[18.87904930 110.75523376]
[32.50927353 103.99715424]
[47.25408173 109.01994324]
[58.49169159 78.53518677]
[82.73459625 63.97563934]
[106.57913971 67.49278259]
[104.97571564 52.57873154]
[103.23924255 37.67958069]
[101.36987305 22.79652023]
[99.50050354 7.91346216]
[97.49837494 -6.95232058]
[94.96692657 -21.73716927]
[92.04057312 -36.44894791]
[89.11421967 -51.16072845]
[86.18786621 -65.87250519]
[83.26150513 -80.58428955]
[80.33515167 -95.29606628]
[77.40879822 -110.00784302]
[64.55161285 -118.80162811]
[61.79344940 -133.76315308]
[70.25621033 -145.96632385]
[67.32985687 -160.67810059]
[57.91839981 -166.21171570]
[53.21923065 -175.82208252]
[54.57474136 -186.21177673]
[61.29435730 -193.96215820]
[58.89496231 -208.76901245]
[56.49557114 -223.57586670]
[54.09617996 -238.38272095]
[51.69678497 -253.18957520]
[49.29739380 -267.99642944]
[35.38632965 -274.87115479]
[28.20273590 -288.62527466]
[30.50885010 -303.97003174]
[41.41792297 -315.00506592]
[56.73519135 -317.48715210]
[70.57086182 -310.46191406]
[77.60482788 -296.63067627]
[75.13238525 -281.31185913]
[64.10424805 -270.39581299]
[66.50363922 -255.58897400]
[68.90303040 -240.78211975]
[71.30242157 -225.97526550]
[73.70182037 -211.16841125]
[76.10121155 -196.36155701]
[89.39883423 -182.34959412]
[82.04164124 -163.60444641]
[84.96799469 -148.89266968]
[97.45651245 -140.85697937]
[100.63382721 -125.97882843]
[92.12057495 -112.93419647]
[95.04693604 -98.22241974]
[97.97328949 -83.51064301]
[100.89964294 -68.79886627]
[103.82599640 -54.08708191]
[106.75234985 -39.37530518]
[109.67870331 -24.66352463]
[112.42388916 -22.40242577]
[114.19541931 -18.68523979]
[114.31457520 -13.99116516]
[112.34569550 -9.08704281]
[116.42314148 -2.89370084]
[114.38356018 6.04408932]
[116.25292969 20.92714882]
[118.12230682 35.81020737]
[122.08855438 42.07534027]
[119.88977051 50.97530365]
[121.49319458 65.88935852]
[133.08834839 75.40525818]
[148.02865601 74.06829071]
[162.96894836 72.73131561]
[177.90924072 71.39434814]
[190.96485901 62.45781326]
[204.33111572 69.02992249]
[219.27140808 67.69294739]
[232.32701111 58.75641632]
[245.69326782 65.32852173]
[260.63357544 63.99155045]
[270.57473755 51.70544052]
[286.30035400 50.13043594]
[298.48068237 60.20095444]
[299.88934326 75.94234467]
[289.69061279 88.01551056]
[273.93521118 89.25765991]
[261.97055054 78.93184662]
[247.03024292 80.26882172]
[235.04325867 89.10972595]
[220.60838318 82.63324738]
[205.66807556 83.97021484]
[193.68110657 92.81111908]
[179.24621582 86.33464813]
[164.30592346 87.67161560]
[149.36561584 89.00858307]
[134.42532349 90.34555817]
[131.30970764 97.16779327]
[144.95408630 103.39924622]
[138.72241211 117.04351807]
[125.07848358 110.81227875]
[121.96287537 117.63451385]
[130.73626709 129.80116272]
[139.50967407 141.96781921]
[148.28306580 154.13447571]
[157.05647278 166.30113220]
[165.82986450 178.46778870]
[174.60327148 190.63442993]
[183.37667847 202.80108643]
[192.15007019 214.96774292]
[207.78898621 217.24806213]
[217.16783142 229.96864319]
[214.72229004 245.58256531]
[201.90325928 254.82638550]
[186.31605530 252.21591187]
[177.20828247 239.29988098]
[179.98341370 223.74113464]
[171.21002197 211.57449341]
[162.43661499 199.40783691]
[153.66322327 187.24118042]
[144.88981628 175.07452393]
[136.11642456 162.90788269]
[127.34301758 150.74122620]
[118.56961823 138.57456970]
[109.79621887 126.40791321]
[102.51292419 128.19778442]
[87.94633484 131.77751160]
[80.66304016 133.56738281]
[78.52832031 148.41470337]
[76.39360046 163.26202393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[12 51]
[15 48]
[16 47]
[17 46]
[18 45]
[20 43]
[21 42]
[22 41]
[24 39]
[25 38]
[26 37]
[54 116]
[55 115]
[56 113]
[57 112]
[58 111]
[59 109]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[66 99]
[69 96]
[70 95]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[117 142]
[118 141]
[119 140]
[120 139]
[122 137]
[123 136]
[125 134]
[126 133]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
