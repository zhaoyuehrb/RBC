%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGAAGCGCGGCGGCGGCACCACGUGGGCCGGACCGGGCCGGGGGCGGGGCCGAGCUGAGGGAGGACCUGCUGGCUGCAGUGAGGAGCGGAGGCGGGCGCGGGCGGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[111.93705750 161.69757080]
[100.21143341 171.05224609]
[85.64346313 174.62635803]
[70.91973114 171.76077271]
[58.75553131 162.98397827]
[51.39415741 149.91453552]
[50.19317245 134.96269226]
[55.37405396 120.88581848]
[65.98136139 110.27992249]
[80.05989838 105.10078430]
[65.87264252 100.23029327]
[51.68537903 95.35980225]
[37.49812317 90.48931122]
[25.49838448 95.45995331]
[13.72586060 91.00911713]
[8.37094498 80.06593323]
[-5.67672300 74.80636597]
[-19.72439194 69.54680634]
[-33.77206039 64.28723907]
[-49.40906525 66.69445038]
[-58.61531067 54.98572159]
[-72.66297913 49.72615814]
[-90.67637634 53.22363663]
[-101.38404846 39.39489365]
[-116.94879150 42.23205566]
[-126.47416687 30.78144455]
[-142.03890991 33.61860657]
[-151.56428528 22.16799736]
[-165.75154114 17.29750633]
[-179.93879700 12.42701340]
[-194.12605286 7.55652142]
[-208.21261597 14.72200489]
[-223.21400452 9.74868679]
[-230.23016357 -4.41285229]
[-225.09851074 -19.36082077]
[-210.86358643 -26.22685623]
[-195.97071838 -20.93745995]
[-189.25556946 -6.63073683]
[-175.06829834 -1.76024497]
[-160.88104248 3.11024714]
[-146.69378662 7.98073912]
[-132.14381409 4.79520559]
[-121.60367584 16.59418678]
[-107.05370331 13.40865231]
[-96.51355743 25.20763397]
[-85.42317200 20.16465378]
[-73.50625610 24.21304893]
[-67.40341187 35.67848969]
[-53.35574722 40.93805313]
[-38.72352600 38.15464401]
[-28.51249695 50.23957062]
[-14.46482849 55.49913406]
[-0.41715989 60.75869751]
[13.63050842 66.01826477]
[30.68720436 62.15074539]
[42.36861420 76.30205536]
[56.55587387 81.17254639]
[70.74313354 86.04303741]
[84.93038940 90.91352844]
[98.74871063 85.07794189]
[105.15035248 71.51258087]
[111.55200195 57.94722366]
[107.50945282 42.42184448]
[117.24214172 29.66823959]
[133.28396606 29.46988106]
[143.32902527 41.97893524]
[139.67160034 57.59952545]
[125.11735535 64.34886932]
[118.71571350 77.91423035]
[112.31406403 91.47958374]
[118.14965057 105.29790497]
[132.33691406 110.16839600]
[146.52416992 115.03888702]
[160.71142578 119.90937805]
[174.89868164 124.77986908]
[189.08595276 129.65036011]
[203.27320862 134.52085876]
[217.46046448 139.39134216]
[231.64772034 144.26184082]
[249.55790710 140.26933289]
[260.64254761 153.79779053]
[274.95864868 158.27551270]
[289.27471924 162.75323486]
[299.76156616 153.68814087]
[313.25833130 151.04508972]
[326.18389893 155.41542053]
[335.16314697 165.54403687]
[337.90808105 178.68748474]
[352.09533691 183.55796814]
[368.07781982 179.88473511]
[379.05056763 192.07206726]
[373.72576904 207.58265686]
[357.58111572 210.46055603]
[347.22485352 197.74522400]
[333.03759766 192.87474060]
[319.97686768 202.71386719]
[303.46029663 202.88104248]
[289.93502808 193.11476135]
[284.79699707 177.06930542]
[270.48092651 172.59158325]
[256.16482544 168.11386108]
[245.21762085 173.46052551]
[233.19367981 169.74201965]
[226.77723694 158.44909668]
[212.58996582 153.57859802]
[198.40270996 148.70811462]
[184.21545410 143.83761597]
[170.02819824 138.96713257]
[155.84094238 134.09663391]
[141.65368652 129.22615051]
[127.46642303 124.35565186]
[113.27915955 119.48516083]
[119.13459015 133.29507446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 59]
[11 58]
[12 57]
[13 56]
[16 54]
[17 53]
[18 52]
[19 51]
[21 49]
[22 48]
[24 45]
[26 43]
[28 41]
[29 40]
[30 39]
[31 38]
[60 70]
[61 69]
[62 68]
[71 112]
[72 111]
[73 110]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[79 104]
[81 101]
[82 100]
[83 99]
[88 95]
[89 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
