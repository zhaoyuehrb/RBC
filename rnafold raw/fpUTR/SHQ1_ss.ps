%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCUCACACCGAGAGUUCCUGCGCGUGGGGAGUUGGAGAGUUUGCGUGGCGGGAACGCGGCGGCAGUGAGAGCGAGCGGCGCCGGCCCUUGCGUCCGGUGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[125.82247925 136.12722778]
[124.09975433 130.86694336]
[112.89437866 120.89501190]
[101.54515839 111.08709717]
[89.91548157 101.61341858]
[78.14924622 92.30989075]
[66.38301086 83.00635529]
[54.61677170 73.70282745]
[42.85053635 64.39929199]
[24.63750648 62.22850800]
[18.65649414 45.80100250]
[6.62464666 36.84362411]
[-5.40720129 27.88624382]
[-21.40281105 33.15167618]
[-37.24607468 27.95182037]
[-46.81890488 14.50093746]
[-46.54734421 -1.84115660]
[-58.83462524 -10.44480324]
[-71.12190247 -19.04845047]
[-83.40918732 -27.65209579]
[-95.69646454 -36.25574112]
[-107.98374939 -44.85939026]
[-120.27102661 -53.46303558]
[-132.55830383 -62.06668091]
[-141.53240967 -64.48252869]
[-145.07289124 -71.10355377]
[-157.10473633 -80.06093597]
[-169.13658142 -89.01831818]
[-181.16844177 -97.97569275]
[-196.85827637 -100.01031494]
[-202.44671631 -113.81678772]
[-214.47856140 -122.77416229]
[-226.51040649 -131.73153687]
[-242.20024109 -133.76615906]
[-247.78868103 -147.57263184]
[-259.82052612 -156.53001404]
[-276.13610840 -161.13858032]
[-276.22424316 -178.09230042]
[-259.95745850 -182.87023926]
[-250.86315918 -168.56185913]
[-238.83131409 -159.60447693]
[-224.00207520 -158.21055603]
[-217.55302429 -143.76339722]
[-205.52117920 -134.80601501]
[-193.48933411 -125.84863281]
[-178.66009521 -124.45470428]
[-172.21105957 -110.00753784]
[-160.17921448 -101.05016327]
[-148.14735413 -92.09278107]
[-136.11550903 -83.13540649]
[-123.95466614 -74.35396576]
[-111.66738129 -65.75031281]
[-99.38010406 -57.14667130]
[-87.09281921 -48.54302216]
[-74.80554199 -39.93937683]
[-62.51826096 -31.33572960]
[-50.23097992 -22.73208427]
[-37.94369888 -14.12843704]
[-25.69289207 -19.64652443]
[-12.21100140 -18.34091568]
[-1.06916070 -10.44893169]
[4.72753668 2.03321767]
[3.55017757 15.85439587]
[15.58202553 24.81177521]
[27.61387253 33.76915359]
[39.72368622 32.34254456]
[49.84568787 39.84027100]
[52.15407181 52.63305664]
[63.92030716 61.93658829]
[75.68653870 71.24011993]
[87.45277405 80.54365540]
[99.21900940 89.84718323]
[107.11974335 92.02793121]
[111.18697357 99.59642792]
[119.91637421 102.78523254]
[122.86631775 109.68963623]
[134.07170105 119.66157532]
[145.70137024 129.13525391]
[157.73323059 138.09262085]
[173.42304993 140.12724304]
[179.01150513 153.93371582]
[191.04335022 162.89109802]
[203.07519531 171.84848022]
[215.10704041 180.80584717]
[227.13890076 189.76322937]
[239.17074585 198.72061157]
[251.20259094 207.67799377]
[263.36343384 216.45942688]
[278.88214111 213.46856689]
[291.92337036 222.39614868]
[294.75000000 237.94561768]
[285.68502808 250.89172363]
[270.10656738 253.55380249]
[257.25701904 244.35246277]
[254.75979614 228.74671936]
[247.36119080 227.46855164]
[242.24520874 219.70983887]
[230.21336365 210.75245667]
[218.18151855 201.79507446]
[206.14967346 192.83770752]
[194.11781311 183.88032532]
[182.08596802 174.92294312]
[170.05412292 165.96556091]
[155.22488403 164.57164001]
[148.77584839 150.12448120]
[136.74400330 141.16709900]
[133.07684326 141.39016724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 77]
[3 76]
[4 74]
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[11 65]
[12 64]
[13 63]
[17 58]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[26 50]
[27 49]
[28 48]
[29 47]
[31 45]
[32 44]
[33 43]
[35 41]
[36 40]
[78 106]
[79 105]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
