%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGCAGUGACGCGCCGGCCAUGCCGGCGGCUGUUGUCGGGCCUCCAGCGGGCGGGGCCGUUGGCGGAGCAGAGGGGAGGCGCAGCCGGGCGGAGGGCCCACGAGGGCUCAGCCUUCCCGGUCAGCGGUGGUGACGGUAUCCCAGAGUGCCAGAGAACCGUUGCUUUUCCGAGUUGCUCUUCUUCCAGGCUCCGUUGGUGGUCGGC\
) } def
/len { sequence length } bind def

/coor [
[-217.66290283 624.36199951]
[-229.57191467 626.49212646]
[-238.46183777 638.57391357]
[-247.26028442 650.72247314]
[-255.96673584 662.93713379]
[-264.58068848 675.21716309]
[-273.10165405 687.56195068]
[-281.62261963 699.90667725]
[-290.14358521 712.25146484]
[-290.33847046 716.59448242]
[-291.76318359 720.27832031]
[-294.05902100 722.99694824]
[-296.80480957 724.59259033]
[-299.57052612 725.06304932]
[-308.82131958 736.87078857]
[-318.07211304 748.67852783]
[-327.32287598 760.48626709]
[-336.57366943 772.29406738]
[-345.82446289 784.10180664]
[-355.07522583 795.90954590]
[-360.08395386 812.10675049]
[-377.03469849 811.77758789]
[-381.41085815 795.39819336]
[-366.88299561 786.65875244]
[-357.63220215 774.85101318]
[-348.38140869 763.04327393]
[-339.13064575 751.23553467]
[-329.87985229 739.42773438]
[-320.62905884 727.61999512]
[-311.37829590 715.81225586]
[-302.48834229 703.73046875]
[-293.96737671 691.38574219]
[-285.44641113 679.04095459]
[-276.92544556 666.69622803]
[-275.71258545 659.40393066]
[-268.18139648 654.23065186]
[-259.47494507 642.01599121]
[-258.15206909 634.74291992]
[-250.54360962 629.68395996]
[-241.65367126 617.60223389]
[-240.65773010 600.08251953]
[-223.73187256 592.83288574]
[-215.02543640 580.61822510]
[-206.31898499 568.40356445]
[-205.58775330 550.87078857]
[-188.77333069 543.36633301]
[-180.25236511 531.02160645]
[-171.73138428 518.67681885]
[-170.51852417 511.38458252]
[-162.98733521 506.21130371]
[-161.90061951 491.35638428]
[-147.59001160 484.60971069]
[-138.88357544 472.39508057]
[-130.17712402 460.18041992]
[-121.47068024 447.96575928]
[-112.76423645 435.75109863]
[-104.05779266 423.53643799]
[-95.35134888 411.32177734]
[-86.64490509 399.10714722]
[-77.93846130 386.89248657]
[-83.64847565 371.50292969]
[-79.01477051 355.58267212]
[-65.67304230 345.46029663]
[-48.76072693 345.28216553]
[-40.23975372 332.93740845]
[-39.37751389 318.06777954]
[-25.17044830 311.10574341]
[-16.64947701 298.76098633]
[-8.12850666 286.41622925]
[0.39246470 274.07147217]
[8.91343594 261.72671509]
[17.43440628 249.38195801]
[25.95537758 237.03720093]
[26.09477997 217.70289612]
[44.43359756 209.33697510]
[52.57783508 196.74049377]
[60.72206879 184.14401245]
[68.86630249 171.54753113]
[77.01053619 158.95103455]
[85.15476990 146.35455322]
[93.29900360 133.75807190]
[101.44324493 121.16158295]
[88.12805176 116.40436554]
[81.31012726 104.76794434]
[83.45579529 92.11458588]
[92.73741913 84.22537231]
[92.96396637 69.22708130]
[93.19051361 54.22879410]
[93.41706848 39.23050308]
[93.64361572 24.23221397]
[93.87016296 9.23392582]
[84.53381348 -6.63661957]
[94.11488342 -21.33814812]
[94.11488342 -36.33814621]
[84.53990173 -52.06587219]
[93.89785004 -66.91043091]
[93.67129517 -81.90872192]
[93.44474792 -96.90700531]
[93.21820068 -111.90529633]
[92.99165344 -126.90358734]
[92.76510620 -141.90187073]
[83.89209747 -155.69323730]
[91.63880157 -170.14732361]
[108.03607941 -170.39500427]
[116.21581268 -156.18148804]
[107.76338959 -142.12841797]
[107.98994446 -127.13013458]
[108.21649170 -112.13184357]
[108.44303894 -97.13355255]
[108.66958618 -82.13526917]
[108.89613342 -67.13697815]
[117.35736847 -58.49003220]
[117.66749573 -45.99502563]
[109.11488342 -36.33814621]
[109.11488342 -21.33814812]
[117.44455719 -12.56439495]
[117.56593323 -0.06613207]
[108.86845398 9.46047401]
[108.64189911 24.45876312]
[108.41535187 39.45705032]
[108.18880463 54.45534134]
[107.96225739 69.45362854]
[107.73571014 84.45191956]
[117.65283966 92.22684479]
[120.38734436 105.85251617]
[134.41258240 100.53343964]
[148.43783569 95.21437073]
[162.46307373 89.89529419]
[176.48831177 84.57621765]
[190.51356506 79.25714874]
[191.19355774 65.13909912]
[197.18537903 52.38539124]
[207.55436707 42.90782547]
[220.71249390 38.11316681]
[234.66152954 38.69439697]
[247.29652405 44.53075409]
[256.72338867 54.71095657]
[270.82736206 49.60431671]
[284.93133545 44.49767685]
[299.03530884 39.39103317]
[313.13928223 34.28439331]
[319.61468506 19.86757088]
[334.41720581 14.33030605]
[348.76473999 20.95776176]
[354.14520264 35.81798553]
[347.36642456 50.09466934]
[332.45016479 55.31771469]
[318.24594116 48.38837433]
[304.14196777 53.49501419]
[290.03796387 58.60165405]
[275.93399048 63.70829391]
[261.83001709 68.81493378]
[260.51742554 84.73954773]
[252.36244202 98.54805756]
[238.95372009 107.45058441]
[222.94728088 109.62281799]
[207.54031372 104.57966614]
[195.83264160 93.28239441]
[181.80738831 98.60146332]
[167.78215027 103.92053986]
[153.75689697 109.23960876]
[139.73165894 114.55868530]
[125.70641327 119.87775421]
[114.03972626 129.30581665]
[105.89549255 141.90231323]
[97.75125885 154.49879456]
[89.60702515 167.09527588]
[81.46279144 179.69175720]
[73.31855011 192.28825378]
[65.17431641 204.88473511]
[57.03008270 217.48121643]
[59.92433548 227.96913147]
[56.63519669 238.10935974]
[48.47877884 244.62715149]
[38.30013657 245.55816650]
[29.77916527 257.90292358]
[21.25819397 270.24768066]
[12.73722267 282.59243774]
[4.21625137 294.93719482]
[-4.30471992 307.28195190]
[-12.82569122 319.62670898]
[-14.29740906 335.37933350]
[-27.89499664 341.45837402]
[-36.41596985 353.80313110]
[-30.88595581 366.43035889]
[-32.30672073 380.03314209]
[-40.20071411 391.06900024]
[-52.41867065 396.71707153]
[-65.72380066 395.59893799]
[-74.43024445 407.81356812]
[-83.13669586 420.02822876]
[-91.84313965 432.24288940]
[-100.54958344 444.45755005]
[-109.25602722 456.67221069]
[-117.96247101 468.88687134]
[-126.66891479 481.10150146]
[-135.37536621 493.31616211]
[-137.08482361 509.04473877]
[-150.77267456 514.91772461]
[-159.38662720 527.19781494]
[-167.90760803 539.54254150]
[-176.42857361 551.88732910]
[-174.87565613 564.69317627]
[-182.22885132 574.80023193]
[-194.10433960 577.10998535]
[-202.81077576 589.32464600]
[-211.51722717 601.53930664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 40]
[3 39]
[4 37]
[5 36]
[6 34]
[7 33]
[8 32]
[9 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[42 207]
[43 206]
[44 205]
[46 202]
[47 201]
[48 200]
[50 199]
[52 197]
[53 196]
[54 195]
[55 194]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[64 184]
[65 183]
[67 181]
[68 180]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[93 115]
[94 114]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[125 163]
[126 162]
[127 161]
[128 160]
[129 159]
[130 158]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
