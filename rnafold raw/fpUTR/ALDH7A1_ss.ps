%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCACUCCCAUUGUUCCAGGCAGGAUUCAGCCGCAGGCUCCUCCGGAAGACCAGGGGCAGACGGGGCGGUGGCGGGGUCGUGCCCAGUGGGAGGGGUCGGGUCUGCCCAAUGGGUUCUCCCGGGCGGGGGGCGGGGCUCUAUUUCAGCAGCUCUCAGGGCCUUGGGCUCAUCCCGAGUCCCGGGCUCAGU\
) } def
/len { sequence length } bind def

/coor [
[84.46382904 133.34951782]
[79.05034637 130.24359131]
[74.23975372 126.26731873]
[70.17047882 121.53514099]
[66.95963287 116.18321991]
[64.69961548 110.36558533]
[63.45546722 104.24965668]
[48.51554108 102.90853882]
[33.57561493 101.56742859]
[18.63568687 100.22631073]
[3.69576049 98.88519287]
[-11.24416637 97.54407501]
[-26.18409348 96.20296478]
[-41.12401962 94.86184692]
[-56.06394577 93.52072906]
[-48.67447662 106.57430267]
[-54.11764908 120.55184937]
[-68.38896942 125.17021942]
[-80.98915863 117.03171539]
[-82.64836884 102.12376404]
[-72.14710236 91.41444397]
[-86.92854309 88.86316681]
[-101.70998383 86.31189728]
[-116.49142456 83.76062775]
[-131.40650940 89.03799438]
[-142.63235474 79.24871063]
[-157.41378784 76.69744110]
[-172.19523621 74.14617157]
[-186.97666931 71.59490204]
[-201.75811768 69.04363251]
[-216.67320251 74.32099152]
[-227.89903259 64.53171539]
[-242.68048096 61.98044586]
[-257.46191406 59.42917252]
[-272.24337769 56.87790298]
[-287.02481079 54.32663345]
[-298.00369263 61.11507797]
[-310.27056885 58.67578506]
[-317.34741211 48.85361481]
[-332.08535767 46.06208420]
[-346.82330322 43.27055740]
[-361.56127930 40.47902679]
[-376.29922485 37.68749619]
[-391.15588379 35.61870575]
[-406.09579468 34.27759171]
[-421.03573608 32.93647385]
[-435.98608398 31.71699715]
[-450.94586182 30.61923599]
[-465.46636963 38.24070358]
[-479.18051147 29.24880600]
[-477.98034668 12.89363384]
[-463.10052490 5.99998713]
[-449.84808350 15.65945816]
[-434.88830566 16.75721931]
[-427.97683716 14.10725021]
[-419.69461060 17.99654770]
[-404.75469971 19.33766365]
[-389.81475830 20.67877960]
[-398.49218750 8.44348335]
[-396.12512207 -6.36857224]
[-384.06668091 -15.29013443]
[-369.21005249 -13.22122860]
[-360.04794312 -1.34453726]
[-361.81784058 13.55067825]
[-373.50769043 22.94953918]
[-358.76974487 25.74106979]
[-344.03179932 28.53259850]
[-329.29382324 31.32412910]
[-314.55587769 34.11565781]
[-298.33544922 27.43443298]
[-284.47354126 39.54518890]
[-269.69210815 42.09646225]
[-254.91064453 44.64773178]
[-240.12921143 47.19900513]
[-225.34776306 49.75027466]
[-211.48994446 44.29042435]
[-199.20684814 54.26218796]
[-184.42539978 56.81345749]
[-169.64396667 59.36473083]
[-154.86251831 61.91600037]
[-140.08106995 64.46726990]
[-126.22325134 59.00742340]
[-113.94015503 68.97918701]
[-99.15871429 71.53045654]
[-84.37727356 74.08172607]
[-69.59582520 76.63300323]
[-54.72283173 78.58080292]
[-39.78290558 79.92192078]
[-24.84297752 81.26303864]
[-9.90305042 82.60414886]
[5.03687572 83.94526672]
[19.97680283 85.28638458]
[34.91672897 86.62750244]
[49.85665512 87.96861267]
[64.79658508 89.30973053]
[82.73951721 67.50941467]
[110.84830475 64.84496307]
[110.74723816 49.02407837]
[123.67337799 41.62379074]
[130.92533875 28.49333191]
[138.17730713 15.36287117]
[145.42927551 2.23241138]
[152.68124390 -10.89804840]
[146.26875305 -24.90469742]
[149.29798889 -39.82706451]
[160.40187073 -49.98422623]
[175.18061829 -51.63555145]
[182.43258667 -64.76601410]
[189.68453979 -77.89646912]
[196.93650818 -91.02693176]
[199.30142212 -107.81512451]
[216.08819580 -110.19007874]
[223.01737976 -94.71678162]
[210.06697083 -83.77496338]
[202.81500244 -70.64450836]
[195.56303406 -57.51404572]
[188.31106567 -44.38358688]
[194.78340149 -30.99527168]
[192.09931946 -16.18785095]
[181.08193970 -5.67733717]
[165.81170654 -3.64608169]
[158.55973816 9.48437786]
[151.30776978 22.61483765]
[144.05580139 35.74529648]
[136.80383301 48.87575912]
[137.42361450 63.75746155]
[123.97875977 72.09692383]
[131.14027405 80.40801239]
[135.53273010 90.46125031]
[150.50839233 89.60713959]
[165.48405457 88.75302124]
[180.45971680 87.89890289]
[195.43537903 87.04478455]
[210.41104126 86.19067383]
[217.18368530 77.65509796]
[227.32981873 74.33251190]
[237.41545105 77.09288025]
[244.16540527 84.78898621]
[259.16091919 84.42277527]
[274.15646362 84.05656433]
[283.77059937 71.72358704]
[299.07366943 68.50640106]
[312.83999634 75.92405701]
[318.56958008 90.47417450]
[313.55706787 105.28662109]
[300.16921997 113.36742401]
[284.72735596 110.90106964]
[274.52267456 99.05209351]
[259.52713013 99.41830444]
[244.53161621 99.78451538]
[228.82470703 111.04689026]
[211.26516724 101.16633606]
[196.28948975 102.02045441]
[181.31382751 102.87456512]
[166.33816528 103.72868347]
[151.36250305 104.58280182]
[136.38684082 105.43691254]
[133.16589355 115.92437744]
[126.99577332 124.99581146]
[135.69361877 137.21659851]
[144.39144897 149.43737793]
[153.08929443 161.65817261]
[161.78713989 173.87895203]
[170.48497009 186.09973145]
[184.79081726 192.85647583]
[185.86706543 207.71214294]
[194.56491089 219.93293762]
[203.26275635 232.15371704]
[211.96058655 244.37449646]
[220.65843201 256.59527588]
[229.35627747 268.81607056]
[244.87408447 272.88757324]
[251.23402405 287.61614990]
[243.55729675 301.70327759]
[227.73281860 304.34252930]
[215.89979553 293.50930786]
[217.13548279 277.51391602]
[208.43765259 265.29312134]
[199.73980713 253.07234192]
[191.04196167 240.85156250]
[182.34413147 228.63076782]
[173.64628601 216.40998840]
[159.96257019 210.52735901]
[158.26419067 194.79757690]
[149.56634521 182.57679749]
[140.86851501 170.35600281]
[132.17066956 158.13522339]
[123.47283173 145.91442871]
[114.77499390 133.69364929]
[108.86719513 135.70623779]
[102.70422363 136.69126892]
[96.46342468 136.62042236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 95]
[8 94]
[9 93]
[10 92]
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[21 86]
[22 85]
[23 84]
[24 83]
[26 81]
[27 80]
[28 79]
[29 78]
[30 77]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 58]
[45 57]
[46 56]
[47 54]
[48 53]
[97 127]
[99 125]
[100 124]
[101 123]
[102 122]
[103 121]
[107 117]
[108 116]
[109 115]
[110 114]
[129 157]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[138 150]
[139 149]
[140 148]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
