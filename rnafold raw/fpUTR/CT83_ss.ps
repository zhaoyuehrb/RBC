%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGUGAGGUCUCGCGCCCUCAGCCGUACAUAAAGCGGGACAACACAGAACUUCCCAGUUACACCAGGCAUCCUGGCCCAAAGUUUCCCAAAUCCAGGCGGCUAGAGGCCCACUGCUUCCCAACUACCAGCUGAGGGGGUCCGUCCCGAGAAGGGAGAAGAGGCCGAAGAGGAAAC\
) } def
/len { sequence length } bind def

/coor [
[181.62893677 534.59716797]
[171.14959717 523.71783447]
[164.16102600 510.32617188]
[161.22976685 495.50781250]
[162.59344482 480.46395874]
[168.14149475 466.41418457]
[177.42417908 454.49746704]
[189.68899536 445.67980957]
[203.94166565 440.67602539]
[203.14781189 425.69702148]
[202.35395813 410.71804810]
[201.56010437 395.73907471]
[200.76625061 380.76010132]
[199.97239685 365.78112793]
[196.68992615 351.14468384]
[191.01087952 337.26129150]
[179.03096008 328.41082764]
[180.96749878 312.70858765]
[175.28845215 298.82519531]
[169.60940552 284.94180298]
[163.93034363 271.05841064]
[158.25129700 257.17504883]
[152.57225037 243.29165649]
[146.89320374 229.40826416]
[141.21415710 215.52487183]
[126.78255463 205.56268311]
[129.37884521 187.34654236]
[123.45565796 173.56555176]
[117.53247070 159.78454590]
[98.47006226 162.28353882]
[79.55333710 158.85162354]
[62.58362961 149.81561279]
[49.17686844 136.03594971]
[40.60969925 118.82478333]
[37.69792557 99.82104492]
[22.81225777 97.97256470]
[7.92658949 96.12409210]
[-6.97481203 94.40705109]
[-21.89078522 92.82157135]
[-36.80675888 91.23609161]
[-51.72273254 89.65061188]
[-59.71773529 102.65225220]
[-72.56682587 110.89019775]
[-87.71879578 112.72879028]
[-102.16522217 107.80298615]
[-113.03775024 97.09080505]
[-118.17763519 82.71915436]
[-116.56434631 67.54153442]
[-108.51820374 54.57148361]
[-95.63677216 46.38420105]
[-80.47767639 44.60528564]
[-66.05075836 49.58794403]
[-55.22050095 60.34285736]
[-50.13725281 74.73464203]
[-35.22127914 76.32011414]
[-20.30530739 77.90559387]
[-5.38933325 79.49107361]
[1.61554205 77.06409454]
[9.77506542 81.23842621]
[24.66073418 83.08689880]
[39.54640198 84.93537140]
[42.30169678 76.49497986]
[46.22879791 68.53195190]
[51.24795151 61.20801163]
[57.25722504 54.67191315]
[48.35499573 42.59920502]
[39.45276260 30.52649498]
[30.55053329 18.45378685]
[21.64830399 6.38107777]
[7.38168335 -2.77861023]
[12.23401356 -19.02334023]
[29.18715096 -18.85762787]
[33.72101212 -2.52115250]
[42.62324142 9.55155659]
[51.52547455 21.62426567]
[60.42770386 33.69697189]
[69.32993317 45.76968384]
[74.45008850 43.17762375]
[79.78703308 41.06769943]
[85.29547882 39.45780563]
[90.92869568 38.36160660]
[96.63887787 37.78839874]
[102.37757874 37.74305344]
[104.75023651 22.93189240]
[107.12290192 8.12073135]
[109.49555969 -6.69042873]
[104.03854370 -21.54073334]
[113.69160461 -32.88391113]
[116.06426239 -47.69507217]
[105.01644135 -58.59117889]
[102.51635742 -73.90552521]
[109.52534485 -87.74943542]
[123.34830475 -94.79962921]
[138.67002869 -92.34517670]
[149.59899902 -81.32986450]
[151.93281555 -65.98929596]
[144.77406311 -52.22224426]
[130.87542725 -45.32241058]
[128.50276184 -30.51124954]
[134.12948608 -16.72033882]
[124.30672455 -4.31776714]
[121.93405914 10.49339294]
[119.56140137 25.30455399]
[117.18873596 40.11571503]
[130.03364563 45.41464996]
[141.38467407 53.42866898]
[152.62583923 43.49708176]
[163.86698914 33.56549454]
[175.10813904 23.63390732]
[186.34930420 13.70232010]
[188.77084351 -2.15692687]
[202.75114441 -10.02652740]
[217.56571960 -3.86959672]
[221.85009766 11.59079361]
[212.31765747 24.49475670]
[196.28088379 24.94347572]
[185.03973389 34.87506104]
[173.79856873 44.80664825]
[162.55741882 54.73823929]
[151.31626892 64.66982269]
[158.97229004 79.90399933]
[162.21183777 96.64318085]
[160.79228210 113.63375092]
[154.81994629 129.60328674]
[144.74209595 143.35580444]
[131.31347656 153.86137390]
[137.23664856 167.64236450]
[143.15983582 181.42335510]
[154.84555054 186.92933655]
[159.48713684 198.55355835]
[155.09754944 209.84582520]
[160.77659607 223.72921753]
[166.45564270 237.61259460]
[172.13468933 251.49598694]
[177.81373596 265.37936401]
[183.49278259 279.26275635]
[189.17182922 293.14614868]
[194.85087585 307.02954102]
[207.23699951 316.87304688]
[204.89425659 331.58224487]
[210.57330322 345.46563721]
[216.89285278 339.06265259]
[226.20710754 335.10726929]
[237.61680603 334.61639404]
[249.92326355 338.29742432]
[262.15118408 346.98522949]
[274.37915039 355.67300415]
[286.60708618 364.36077881]
[302.60144043 363.11190796]
[313.44442749 374.93603516]
[310.81817627 390.76266479]
[296.73736572 398.45098877]
[282.00357056 392.10317993]
[277.91931152 376.58871460]
[265.69134521 367.90093994]
[253.46342468 359.21316528]
[241.23547363 350.52539062]
[234.66445923 354.14083862]
[234.35563660 369.13766479]
[221.52239990 361.37179565]
[214.95138550 364.98727417]
[215.74523926 379.96624756]
[216.53909302 394.94522095]
[217.33293152 409.92419434]
[218.12678528 424.90316772]
[218.92063904 439.88217163]
[233.62237549 443.35144043]
[246.75048828 450.82333374]
[257.24075317 461.69213867]
[264.24276733 475.07678223]
[267.18890381 489.89221191]
[265.84036255 504.93740845]
[260.30642700 518.99273682]
[251.03570557 530.91876221]
[238.77976990 539.74877930]
[224.53211975 544.76684570]
[209.44778442 545.56628418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[15 141]
[16 140]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[27 128]
[28 127]
[29 126]
[35 61]
[36 60]
[37 59]
[38 57]
[39 56]
[40 55]
[41 54]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[83 104]
[84 103]
[85 102]
[86 101]
[88 99]
[89 98]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
