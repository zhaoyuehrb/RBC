%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUCUCCUGAGGGCAGCGAGGAGGGAGCUGAGGCACGCGGGCUCUCAAUCGACGCCCCACAGAGACCAAGAGGCCUGGCCUUGGGGGGCAGCUGCUUGAAGGAGGCAGAGCGGAAGCGAGGGAGACUGCUGGAGGCCCUGCCGCCCACCCGCCCUUUCCUCCCCCUGAGGAGACGCCUGACGCAUCUGCAGUGCAGGAGGCCGUGGGCGUUAGAAGUGUUGCUUUUCCAGUUUGCCUGAUUGCUGAGACACUC\
AGUCAGGAAAGU\
) } def
/len { sequence length } bind def

/coor [
[623.36425781 443.81954956]
[626.10974121 435.00457764]
[613.23815918 427.30245972]
[600.36657715 419.60034180]
[587.49499512 411.89822388]
[574.62347412 404.19610596]
[561.75189209 396.49401855]
[548.88031006 388.79190063]
[536.00872803 381.08978271]
[523.13714600 373.38766479]
[508.24288940 373.49194336]
[500.37380981 359.76651001]
[487.50222778 352.06439209]
[474.63064575 344.36227417]
[461.75909424 336.66015625]
[457.02191162 336.92419434]
[452.06268311 334.23867798]
[448.67904663 328.62359619]
[441.37048340 327.71676636]
[435.89050293 320.45297241]
[423.29769897 312.30307007]
[410.70489502 304.15313721]
[398.11206055 296.00323486]
[385.51925659 287.85333252]
[372.92645264 279.70339966]
[360.33364868 271.55349731]
[347.74081421 263.40359497]
[332.85214233 262.98413086]
[325.47048950 248.99049377]
[312.87768555 240.84057617]
[300.14352417 232.91334534]
[287.27194214 225.21122742]
[279.94412231 224.47596741]
[274.29537964 217.34263611]
[261.51495361 209.49017334]
[248.73455811 201.63771057]
[236.92253113 204.14331055]
[226.21907043 197.73500061]
[222.62486267 185.37130737]
[209.93737793 177.36956787]
[197.20321655 169.44232178]
[184.42280579 161.58985901]
[171.64241028 153.73739624]
[158.86199951 145.88493347]
[151.54328918 145.06382751]
[145.97856140 137.86476135]
[133.29107666 129.86302185]
[120.60359955 121.86128235]
[115.53179932 128.80303955]
[108.18588257 134.44812012]
[98.93582153 138.07598877]
[88.37231445 139.08126831]
[77.26923370 137.03913879]
[66.52723694 131.75843811]
[57.10262680 123.31697083]
[49.92708588 112.07528687]
[35.10091782 109.79826355]
[20.27475357 107.52124023]
[5.44858932 105.24421692]
[-9.37757587 102.96719360]
[-18.29940796 104.75424957]
[-24.36377716 100.57559967]
[-39.24262619 105.95429993]
[-50.53479004 96.24161530]
[-65.33324432 93.79095459]
[-80.13169861 91.34029388]
[-95.01054382 96.71899414]
[-106.30271149 87.00630951]
[-121.10116577 84.55564880]
[-135.89962769 82.10498810]
[-147.65478516 92.41761017]
[-163.28964233 92.70977020]
[-175.42187500 82.84352875]
[-178.32304382 67.47742462]
[-170.62327576 53.86685181]
[-155.95817566 48.43831635]
[-141.25216675 53.75500107]
[-133.44895935 67.30653381]
[-118.65050507 69.75719452]
[-103.85205078 72.20785522]
[-90.03168488 66.65386200]
[-77.68103790 76.54183960]
[-62.88258362 78.99250031]
[-48.08412933 81.44316101]
[-34.26376343 75.88916779]
[-21.91311646 85.77714539]
[-7.10055208 88.14102936]
[7.72561264 90.41805267]
[22.55177689 92.69506836]
[37.37794113 94.97209167]
[52.20410538 97.24911499]
[55.71047211 90.61923218]
[62.72320175 77.35945892]
[66.22956848 70.72956848]
[56.00245285 59.75659943]
[45.77533340 48.78363037]
[35.54821777 37.81066132]
[25.32109833 26.83769035]
[15.09398174 15.86472034]
[-0.82407159 13.86593723]
[-9.06279945 0.09993177]
[-3.30215597 -14.87319565]
[12.03878689 -19.56734276]
[25.19177055 -10.38156128]
[26.06695175 5.63760281]
[36.29406738 16.61057281]
[46.52118683 27.58354187]
[56.74830246 38.55651474]
[66.97541809 49.52948380]
[77.20253754 60.50245285]
[90.20755005 53.02784729]
[85.87431335 38.66737747]
[81.54108429 24.30690765]
[77.20784760 9.94643688]
[72.87461853 -4.41403294]
[58.37131500 -9.60636997]
[49.80649567 -22.19594002]
[50.29143143 -37.23684692]
[59.43067932 -48.96766663]
[47.11402130 -59.79503250]
[50.59734344 -75.81996918]
[66.29730988 -80.55738831]
[78.06313324 -69.13384247]
[73.79115295 -53.30089951]
[87.89368439 -48.58322144]
[96.61727905 -36.32096481]
[96.44566345 -21.09519958]
[87.23508453 -8.74726486]
[91.56832123 5.61320448]
[95.90155029 19.97367477]
[100.23478699 34.33414459]
[104.56801605 48.69461441]
[133.97543335 77.45630646]
[128.60534668 109.17380524]
[141.29281616 117.17554474]
[153.98030090 125.17728424]
[166.71446228 133.10452271]
[179.49487305 140.95698547]
[192.27528381 148.80944824]
[205.05567932 156.66191101]
[213.97177124 158.47741699]
[217.93911743 164.68208313]
[230.62660217 172.68382263]
[249.05413818 172.99105835]
[256.58703613 188.85729980]
[269.36743164 196.70976257]
[282.14782715 204.56222534]
[294.97406006 212.33964539]
[307.84561157 220.04176331]
[312.99621582 220.12400818]
[317.19448853 221.97024536]
[319.93188477 224.93057251]
[321.02758789 228.24777222]
[333.62039185 236.39767456]
[349.40982056 237.40007019]
[355.89074707 250.81077576]
[368.48355103 258.96069336]
[381.07635498 267.11059570]
[393.66918945 275.26049805]
[406.26199341 283.41043091]
[418.85479736 291.56033325]
[431.44760132 299.71026611]
[444.04043579 307.86016846]
[456.68078613 315.93612671]
[469.46118164 323.78860474]
[482.33276367 331.49072266]
[495.20434570 339.19281006]
[508.07592773 346.89492798]
[523.89080811 347.34155273]
[530.83923340 360.51608276]
[543.71081543 368.21820068]
[556.58239746 375.92031860]
[569.45397949 383.62243652]
[582.32556152 391.32455444]
[595.19714355 399.02664185]
[608.06872559 406.72875977]
[620.94030762 414.43087769]
[633.81188965 422.13299561]
[655.70263672 408.88595581]
[682.92803955 414.75973511]
[700.00933838 439.56625366]
[715.00830078 439.74209595]
[730.00732422 439.91790771]
[745.00628662 440.09375000]
[760.00524902 440.26959229]
[773.89514160 432.69458008]
[786.53088379 440.58053589]
[801.52984619 440.75637817]
[816.52880859 440.93218994]
[831.52777100 441.10803223]
[842.78784180 430.34472656]
[857.99639893 430.73672485]
[868.18817139 441.53781128]
[883.18713379 441.71362305]
[897.07708740 434.13861084]
[909.71276855 442.02459717]
[924.71173096 442.20040894]
[938.60168457 434.62542725]
[951.23736572 442.51138306]
[965.26177979 434.01147461]
[979.50286865 442.14309692]
[979.31060791 458.54113770]
[964.88281250 466.33666992]
[951.06152344 457.51034546]
[938.24444580 465.09793091]
[924.53588867 457.19937134]
[909.53692627 457.02355957]
[896.71984863 464.61114502]
[883.01135254 456.71258545]
[868.01232910 456.53677368]
[857.57019043 467.09594727]
[842.35656738 467.13131714]
[831.35192871 456.10699463]
[816.35296631 455.93118286]
[801.35400391 455.75534058]
[786.35504150 455.57949829]
[773.53790283 463.16708374]
[759.82940674 455.26855469]
[744.83044434 455.09271240]
[729.83148193 454.91687012]
[714.83251953 454.74105835]
[699.83349609 454.56521606]
[695.75854492 460.86163330]
[708.83709717 468.20681763]
[721.91564941 475.55203247]
[734.99420166 482.89721680]
[748.07269287 490.24240112]
[762.64495850 493.79910278]
[768.18768311 507.73745728]
[760.03729248 520.33001709]
[745.05145264 520.98150635]
[735.83923340 509.14495850]
[723.78155518 500.22232056]
[711.72393799 491.29971313]
[699.66632080 482.37707520]
[687.60864258 473.45443726]
[683.53369141 479.75085449]
[689.83752441 493.36193848]
[696.14135742 506.97302246]
[702.44519043 520.58410645]
[706.65618896 523.55114746]
[709.08709717 527.44018555]
[709.68347168 531.42785645]
[708.72198486 534.78637695]
[714.54333496 548.61071777]
[720.36474609 562.43499756]
[726.18609619 576.25933838]
[732.00750732 590.08361816]
[737.82885742 603.90795898]
[749.54833984 616.15905762]
[741.02026367 630.81201172]
[724.57916260 626.67352295]
[724.00457764 609.72930908]
[718.18316650 595.90496826]
[712.36181641 582.08068848]
[706.54040527 568.25634766]
[700.71905518 554.43206787]
[694.89770508 540.60772705]
[688.83410645 526.88793945]
[682.53027344 513.27685547]
[676.22644043 499.66577148]
[669.92260742 486.05468750]
[658.50256348 486.64886475]
[647.65594482 484.19616699]
[638.15728760 479.04495239]
[630.63793945 471.72964478]
[625.54437256 462.92022705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[12 168]
[13 167]
[14 166]
[15 165]
[18 164]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[29 154]
[30 153]
[31 149]
[32 148]
[34 147]
[35 146]
[36 145]
[39 143]
[40 142]
[41 140]
[42 139]
[43 138]
[44 137]
[46 136]
[47 135]
[48 134]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[62 86]
[64 84]
[65 83]
[66 82]
[68 80]
[69 79]
[70 78]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[119 124]
[181 222]
[182 221]
[183 220]
[184 219]
[185 218]
[187 216]
[188 215]
[189 214]
[190 213]
[193 210]
[194 209]
[196 207]
[197 206]
[199 204]
[237 262]
[238 261]
[239 260]
[240 259]
[244 258]
[245 257]
[246 256]
[247 255]
[248 254]
[249 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
