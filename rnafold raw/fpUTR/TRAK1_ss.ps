%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAGAUGAGCUGAUAGGGUUCCCAGGCUGCCUGGAGUUACAUAACCCAUUGUGCUUCCAGGACAGCUCACAAUCUUAGGAUUUGCCCUAACAAGCAAACUCAGAAAACUGCUGAGGAAGGCACGGGAGGGUGGCUGUGCGAGGUACUGCCGGGGCUGAGCUCUCAUGGAGGCUCUCUCUGUUCUCUGAAGUGCCUUUGGAGUUUAUGUCUGCAC\
) } def
/len { sequence length } bind def

/coor [
[118.77080536 216.42228699]
[108.69396210 204.74064636]
[106.55497742 189.46229553]
[113.03639984 175.46247864]
[126.07003021 167.20851135]
[126.07003021 152.20851135]
[126.07003021 137.20851135]
[126.07003021 122.20850372]
[104.73665619 131.49226379]
[84.19355011 124.84379578]
[74.07047272 107.68789673]
[59.07086563 107.79647827]
[44.07125854 107.90505219]
[29.07283211 108.12220764]
[15.44392395 116.15734863]
[2.55164194 108.69823456]
[-12.44482136 109.02394867]
[-27.44128418 109.34966278]
[-42.43774796 109.67538452]
[-57.43421173 110.00109863]
[-72.43067169 110.32681274]
[-87.41652679 110.97808838]
[-102.38470459 111.95462036]
[-117.35289001 112.93115234]
[-131.11219788 132.09400940]
[-154.28628540 134.76777649]
[-171.65161133 119.58804321]
[-186.40666199 122.28775787]
[-201.16171265 124.98747253]
[-215.91676331 127.68719482]
[-230.67181396 130.38691711]
[-245.40693665 133.19335938]
[-260.12136841 136.10639954]
[-274.83578491 139.01945496]
[-289.55020142 141.93249512]
[-304.26461792 144.84553528]
[-318.97903442 147.75857544]
[-333.69348145 150.67161560]
[-345.72830200 160.94163513]
[-359.71588135 155.82331848]
[-374.43029785 158.73635864]
[-389.14471436 161.64939880]
[-403.85913086 164.56243896]
[-410.24575806 178.70423889]
[-423.74163818 186.36196899]
[-439.15734863 184.59106445]
[-450.56518555 174.07249451]
[-453.57864380 158.85083008]
[-447.03897095 144.77914429]
[-433.46081543 137.26828003]
[-418.06524658 139.20631409]
[-406.77218628 149.84802246]
[-392.05773926 146.93498230]
[-377.34332275 144.02194214]
[-362.62890625 141.10890198]
[-351.64654541 131.04724121]
[-336.60650635 135.95719910]
[-321.89208984 133.04415894]
[-307.17767334 130.13110352]
[-292.46325684 127.21807098]
[-277.74884033 124.30503082]
[-263.03439331 121.39198303]
[-248.31999207 118.47894287]
[-242.37165833 114.09839630]
[-233.37153625 115.63185883]
[-218.61648560 112.93214417]
[-203.86143494 110.23242188]
[-189.10638428 107.53270721]
[-174.35133362 104.83299255]
[-172.96536255 97.94223022]
[-169.91896057 91.58359528]
[-165.38928223 86.15175629]
[-159.64584351 81.98679352]
[-153.03457642 79.35289764]
[-145.95700073 78.42165375]
[-138.84582520 79.26086426]
[-132.13844299 81.82978821]
[-126.25013733 85.98093414]
[-121.54826355 91.46851349]
[-118.32942200 97.96297455]
[-103.36123657 96.98644257]
[-88.39305878 96.00991058]
[-85.80698395 93.61936188]
[-81.93619537 92.36035919]
[-77.32406616 92.82235718]
[-72.75639343 95.33035278]
[-57.75992584 95.00463104]
[-42.76346207 94.67891693]
[-27.76700020 94.35320282]
[-12.77053642 94.02748871]
[2.22592640 93.70177460]
[14.78218651 85.68993378]
[28.74711609 93.12574768]
[35.36310196 89.83934021]
[43.96268082 92.90544891]
[58.96228790 92.79686737]
[73.96189117 92.68828583]
[80.67967224 78.58040619]
[94.79128265 69.79972076]
[112.40575409 70.01864624]
[127.96536255 80.23126221]
[128.18251038 65.23283386]
[128.39967346 50.23440933]
[128.61682129 35.23598099]
[128.83396912 20.23755264]
[116.88416290 10.15112877]
[114.26445007 -5.26545763]
[122.21179199 -18.73296547]
[136.97369385 -23.89245033]
[151.58003235 -18.30776024]
[159.13415527 -4.61581612]
[156.06921387 10.71846581]
[143.83239746 20.45470619]
[143.61524963 35.45313263]
[143.39810181 50.45156097]
[143.18093872 65.44998932]
[142.96379089 80.44841766]
[154.13031006 90.46384430]
[169.01689148 88.62262726]
[183.90345764 86.78141785]
[198.79002380 84.94020844]
[213.67658997 83.09899139]
[228.56315613 81.25778198]
[243.44973755 79.41657257]
[258.33630371 77.57536316]
[273.86535645 64.71733093]
[291.32443237 73.03402710]
[306.15145874 70.76261139]
[320.97848511 68.49119568]
[335.80551147 66.21977997]
[350.63253784 63.94836426]
[365.45956421 61.67694855]
[374.24102783 45.00675201]
[396.48239136 41.42058945]
[409.09585571 33.30267715]
[421.70932007 25.18476105]
[429.12646484 11.20990944]
[444.01617432 10.82825947]
[456.62963867 2.71034479]
[469.24310303 -5.40756989]
[481.85656738 -13.52548409]
[491.90341187 -27.18188477]
[507.80734253 -21.30814362]
[506.56582642 -4.39971638]
[489.97448730 -0.91202050]
[477.36102295 7.20589399]
[464.74755859 15.32380867]
[452.13409424 23.44172287]
[445.61914062 36.83592606]
[429.82723999 37.79822540]
[417.21377563 45.91613770]
[404.60031128 54.03405380]
[407.93811035 68.65797424]
[422.82467651 70.49918365]
[437.71124268 72.34039307]
[452.59780884 74.18161011]
[463.22726440 66.88081360]
[475.58593750 68.71797943]
[483.13122559 78.16928101]
[497.98956299 80.22581482]
[512.84790039 82.28234100]
[527.70629883 84.33887482]
[536.63134766 82.41608429]
[542.76422119 86.53423309]
[557.59124756 88.80564880]
[572.41827393 91.07706451]
[588.99035645 87.49893188]
[597.01623535 102.43283081]
[584.88775635 114.27919006]
[570.14685059 105.90409088]
[555.31982422 103.63267517]
[540.49279785 101.36125946]
[525.64971924 99.19722748]
[510.79138184 97.14070129]
[495.93304443 95.08416748]
[481.07467651 93.02764130]
[465.19439697 100.50095367]
[450.75662231 89.06817627]
[435.87005615 87.22696686]
[420.98345947 85.38574982]
[406.09689331 83.54454041]
[382.79785156 89.93384552]
[367.73098755 76.50397491]
[352.90396118 78.77539062]
[338.07693481 81.04680634]
[323.24990845 83.31822205]
[308.42288208 85.58963776]
[293.59585571 87.86105347]
[288.31674194 96.60357666]
[278.90017700 101.09362793]
[268.34912109 99.63201904]
[260.17752075 92.46192932]
[245.29093933 94.30313873]
[230.40437317 96.14435577]
[215.51780701 97.98556519]
[200.63124084 99.82677460]
[185.74465942 101.66798401]
[170.85809326 103.50920105]
[155.97152710 105.35041046]
[169.91844177 110.87159729]
[184.70835876 113.37327576]
[195.42144775 123.87230682]
[198.22108459 138.60871887]
[192.10464478 152.30505371]
[179.26258850 160.05627441]
[164.29397583 159.08648682]
[152.55943298 149.74299622]
[148.26141357 135.37223816]
[141.07003784 122.20850372]
[141.07003784 137.20851135]
[141.07003784 152.20851135]
[141.07003784 167.20851135]
[154.10366821 175.46247864]
[160.58508301 189.46229553]
[158.44610596 204.74064636]
[148.36926270 216.42228699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 212]
[6 211]
[7 210]
[8 209]
[11 97]
[12 96]
[13 95]
[14 93]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[22 82]
[23 81]
[24 80]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[40 55]
[41 54]
[42 53]
[43 52]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[118 199]
[119 198]
[120 197]
[121 196]
[122 195]
[123 194]
[124 193]
[125 192]
[127 188]
[128 187]
[129 186]
[130 185]
[131 184]
[132 183]
[134 152]
[135 151]
[136 150]
[138 148]
[139 147]
[140 146]
[141 145]
[153 181]
[154 180]
[155 179]
[156 178]
[159 176]
[160 175]
[161 174]
[162 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
