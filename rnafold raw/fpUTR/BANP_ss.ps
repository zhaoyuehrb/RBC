%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUCAGCCUCCUUAGUAGCUGGGAUUACAGGCAUGUGCCACCAUACCCUGCUAAUUUUCGUAUUUUUAGUAGAGAUGGGGUUUUGCCACAUUGGCCAGGCUGACAGGUGAUCCACCCGCCUUGGCCUUCCAAAGUGCUGGGAUGACAGAUGUGACCAAAAGCCAGCCCCACUGUGAGUUGAACUCUUUCGUGUUGACCGGCCACUCUCCGUGCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[63.89136505 267.74447632]
[56.44033051 277.49942017]
[45.61425781 283.13034058]
[33.49355316 283.62423706]
[27.12223244 297.20388794]
[20.75091171 310.78350830]
[14.37959194 324.36312866]
[8.00827217 337.94274902]
[1.63695192 351.52239990]
[-4.73436785 365.10202026]
[0.39971697 379.80844116]
[-6.25515461 393.48934937]
[-20.30712318 398.29327393]
[-18.37799835 414.57858276]
[-31.67703438 424.17376709]
[-46.52332306 417.20816040]
[-47.64427185 400.84735107]
[-33.88674927 391.92196655]
[-39.17375183 378.04452515]
[-32.90577316 364.18209839]
[-18.31399536 358.73068237]
[-11.94267559 345.15106201]
[-5.57135582 331.57144165]
[0.79996425 317.99182129]
[7.17128420 304.41217041]
[13.54260445 290.83255005]
[19.91392326 277.25292969]
[10.67889977 262.19274902]
[12.35382080 244.44802856]
[24.45549583 231.14900208]
[42.27313232 227.75334167]
[48.25761414 213.99884033]
[54.24209213 200.24435425]
[60.12910461 186.44786072]
[65.91834259 172.61006165]
[71.70758820 158.77226257]
[77.49683380 144.93446350]
[83.28607941 131.09667969]
[69.38143921 110.30366516]
[73.34064484 87.82543182]
[58.59375763 85.08146667]
[43.84687042 82.33749390]
[34.84584427 83.84372711]
[28.91136360 79.44895172]
[14.20478344 76.49657440]
[-0.50179607 73.54419708]
[-15.20837593 70.59182739]
[-24.22981644 71.97052765]
[-30.10151291 67.49221802]
[-45.22203064 72.14844513]
[-56.03355408 61.90343475]
[-70.69688416 58.74324417]
[-85.36021423 55.58305740]
[-100.02353668 52.42286682]
[-114.68686676 49.26267624]
[-129.35020447 46.10248947]
[-144.01351929 42.94229889]
[-153.77285767 54.73272324]
[-167.89807129 60.62653351]
[-183.14328003 59.26938248]
[-196.00527954 50.97312927]
[-203.52844238 37.64419556]
[-203.98402405 22.34546852]
[-197.26731873 8.59248638]
[-184.92179871 -0.45441696]
[-169.78434753 -2.71632910]
[-155.33345032 2.32652068]
[-144.88983154 13.51532269]
[-140.85333252 28.27897072]
[-126.19001007 31.43916130]
[-111.52667999 34.59934998]
[-96.86334991 37.75953674]
[-82.20001984 40.91972733]
[-67.53669739 44.07991791]
[-52.87336731 47.24010468]
[-38.80166626 42.35783768]
[-26.94132423 52.82888794]
[-12.25600147 55.88524628]
[2.45057797 58.83761978]
[17.15715790 61.78999329]
[31.86373711 64.74237061]
[46.59083939 67.59061432]
[61.33772278 70.33457947]
[76.08460999 73.07854462]
[89.12773132 65.67064667]
[94.32447052 51.59961700]
[99.52120209 37.52858353]
[104.71793365 23.45755196]
[101.18825531 5.38105345]
[115.12022400 -5.29543066]
[120.11732483 -19.43859291]
[125.11441803 -33.58175278]
[130.11151123 -47.72491455]
[135.10861206 -61.86807632]
[140.10571289 -76.01123810]
[126.11051178 -106.90719604]
[126.74713135 -121.89368439]
[127.38375092 -136.88017273]
[128.02037048 -151.86665344]
[128.65698242 -166.85313416]
[129.18754578 -181.84375000]
[129.61203003 -196.83773804]
[130.03651428 -211.83174133]
[123.29277039 -216.72132874]
[119.07423401 -223.79489136]
[118.00220490 -231.86611938]
[120.17733765 -239.61486816]
[125.17519379 -245.80307007]
[132.12669373 -249.47245789]
[133.39878845 -264.41842651]
[134.67088318 -279.36437988]
[135.94296265 -294.31033325]
[131.26165771 -310.60519409]
[145.62377930 -319.61441040]
[158.25674438 -308.30755615]
[150.88893127 -293.03823853]
[149.61683655 -278.09228516]
[148.34475708 -263.14633179]
[147.07266235 -248.20036316]
[158.13085938 -229.59219360]
[145.03050232 -211.40725708]
[144.60601807 -196.41325378]
[144.18153381 -181.41926575]
[147.13189697 -174.64967346]
[143.64346313 -166.21652222]
[143.00685120 -151.23004150]
[142.37023926 -136.24354553]
[141.73361206 -121.25706482]
[141.09700012 -106.27058411]
[154.93479919 -100.48133850]
[165.15959167 -111.45646667]
[175.38439941 -122.43159485]
[185.60919189 -133.40672302]
[195.83399963 -144.38185120]
[195.02458191 -160.16540527]
[205.67475891 -171.84226990]
[221.46598816 -172.48477173]
[233.02958679 -161.71171570]
[233.50509644 -145.91458130]
[222.61039734 -134.46553040]
[206.80912781 -134.15705872]
[196.58432007 -123.18193054]
[186.35952759 -112.20679474]
[176.13471985 -101.23166656]
[165.90992737 -90.25653839]
[180.89836121 -89.66765594]
[190.57287598 -78.20451355]
[188.63484192 -63.33023834]
[176.34602356 -54.72880173]
[161.70709229 -58.00020218]
[154.24887085 -71.01414490]
[149.25177002 -56.87097931]
[144.25466919 -42.72781754]
[139.25758362 -28.58465767]
[134.26048279 -14.44149590]
[129.26338196 -0.29833394]
[134.19337463 10.74248314]
[130.15217590 22.56295586]
[118.78897095 28.65428734]
[113.59223175 42.72531891]
[108.39550018 56.79635239]
[103.19876862 70.86738586]
[127.84841919 83.62541199]
[132.53958130 113.69430542]
[145.73699951 120.82368469]
[158.93441772 127.95307159]
[174.75367737 127.70468903]
[182.27400208 140.56135559]
[195.52154541 147.59718323]
[210.43261719 143.09188843]
[223.81875610 150.32139587]
[228.02198792 164.56457520]
[241.31896973 171.50650024]
[254.61595154 178.44841003]
[269.66244507 170.71347046]
[286.18988037 173.44689941]
[297.71368408 185.37535095]
[299.83236694 201.65753174]
[313.22622681 208.41058350]
[326.62011719 215.16365051]
[340.01400757 221.91670227]
[356.87927246 223.64860535]
[359.88381958 240.33419800]
[344.68203735 247.84036255]
[333.26095581 235.31059265]
[319.86706543 228.55754089]
[306.47317505 221.80447388]
[293.07928467 215.05142212]
[281.83209229 222.23638916]
[268.39566040 222.93322754]
[256.27206421 216.85330200]
[248.67408752 205.48822021]
[247.67404175 191.74539185]
[234.37704468 184.80348206]
[221.08006287 177.86157227]
[206.99075317 182.55482483]
[193.40682983 175.70416260]
[188.57963562 160.89416504]
[181.20150757 160.58529663]
[175.14462280 153.75877380]
[160.26933289 154.51708984]
[151.80503845 141.15048218]
[138.60762024 134.02110291]
[125.41019440 126.89172363]
[118.33861542 129.39027405]
[131.06370544 137.33207703]
[132.78866577 152.23255920]
[122.21459961 162.87159729]
[107.30382538 161.23794556]
[99.28422546 148.56175232]
[104.19545746 134.38735962]
[97.12387848 136.88591003]
[91.33463287 150.72370911]
[85.54538727 164.56150818]
[79.75614166 178.39930725]
[73.96690369 192.23710632]
[73.54299164 201.35343933]
[67.99658203 206.22883606]
[62.01210403 219.98332214]
[56.02762222 233.73780823]
[63.72950745 243.57237244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[13 18]
[31 220]
[32 219]
[33 218]
[34 216]
[35 215]
[36 214]
[37 213]
[38 212]
[40 84]
[41 83]
[42 82]
[44 81]
[45 80]
[46 79]
[47 78]
[49 77]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[57 69]
[85 162]
[86 161]
[87 160]
[88 159]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 123]
[102 122]
[103 121]
[109 119]
[110 118]
[111 117]
[112 116]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[164 204]
[165 203]
[166 202]
[168 200]
[169 198]
[172 195]
[173 194]
[174 193]
[178 188]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
