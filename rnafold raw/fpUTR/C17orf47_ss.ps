%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACAUCACCAGACAGAGAGGUAGCUAAGGGGAUUAUUUGAGACACUCUUAGAACAACAGCCACUUUUGUGGGAGCCCAAGAAACAGCAGCUUUAAAACAGGGUAAAUAUUCAGGCAUCAUUAGGAUCCUGAAUACAAGCCAGCCAGUAAAAUACGGGAUCUACUCAGAAGGGCACAAUCUAUCAG\
) } def
/len { sequence length } bind def

/coor [
[103.54471588 246.83642578]
[103.19244385 261.92080688]
[98.94711304 276.39974976]
[91.09819031 289.28604126]
[80.18081665 299.70111084]
[66.93936920 306.93481445]
[52.27666092 310.49392700]
[37.19242477 310.13583374]
[22.71512794 305.88491821]
[9.83185863 298.03100586]
[-0.57898384 287.10961914]
[-7.80756855 273.86538696]
[-11.36104012 259.20129395]
[-10.99711514 244.11720276]
[-6.74060774 229.64155579]
[1.11826658 216.76130676]
[12.04367638 206.35469055]
[25.29071045 199.13121033]
[39.95616150 195.58340454]
[55.04011536 195.95315552]
[59.26610565 181.56076050]
[63.49209213 167.16836548]
[67.71807861 152.77597046]
[71.94406891 138.38357544]
[61.38211060 127.73252106]
[46.95472336 131.83746338]
[32.52733994 135.94241333]
[18.09995461 140.04736328]
[3.67257023 144.15229797]
[-10.75481415 148.25724792]
[-25.18219948 152.36219788]
[-32.90888977 165.88757324]
[-47.59878540 169.84504700]
[-60.44555283 162.39547729]
[-74.87294006 166.50042725]
[-82.34345245 180.42762756]
[-97.49784851 184.91314697]
[-111.34528351 177.29580688]
[-115.67033386 162.09483337]
[-107.90702057 148.32870483]
[-92.66117096 144.16461182]
[-78.97788239 152.07304382]
[-64.55049896 147.96809387]
[-57.54964828 134.87139893]
[-42.97670364 130.50286865]
[-29.28714371 137.93481445]
[-14.85975933 133.82986450]
[-0.43237457 129.72491455]
[13.99501038 125.61997223]
[28.42239380 121.51502991]
[42.84978104 117.41007996]
[57.27716446 113.30513763]
[55.88465881 99.68569946]
[58.66908646 86.47938538]
[65.25017548 74.91843414]
[74.89924622 66.04465485]
[86.61818695 60.61583328]
[99.24199677 59.04175568]
[111.55432129 61.35531998]
[122.40465546 67.22042084]
[133.05570984 56.65846252]
[143.70677185 46.09650040]
[147.60791016 37.81340408]
[154.62658691 35.44845200]
[165.45356750 25.06690979]
[176.28056335 14.68536949]
[187.10754395 4.30382776]
[197.93452454 -6.07771349]
[208.76150513 -16.45925522]
[213.36744690 -31.59516716]
[227.90899658 -34.81897354]
[238.64839172 -45.29109192]
[249.29945374 -55.85305405]
[259.95050049 -66.41501617]
[264.30151367 -81.62616730]
[278.78686523 -85.09380341]
[289.43789673 -95.65576172]
[300.08895874 -106.21772003]
[292.37191772 -119.16117096]
[287.97970581 -133.56675720]
[287.16348267 -148.59582520]
[289.96633911 -163.37452698]
[296.22109985 -177.04461670]
[305.56024170 -188.81326294]
[317.43750000 -197.99909973]
[331.15975952 -204.07156372]
[345.92767334 -206.68167114]
[360.88201904 -205.68196106]
[375.15380859 -201.13488770]
[387.91479492 -193.30888367]
[398.56582642 -203.87084961]
[409.21688843 -214.43281555]
[394.28948975 -212.95899963]
[380.88067627 -219.68240356]
[373.13238525 -232.52622986]
[373.43792725 -247.52311707]
[381.70297241 -260.04064941]
[395.37451172 -266.21231079]
[410.22952271 -264.13168335]
[421.67941284 -254.44148254]
[426.18740845 -240.13490295]
[422.36004639 -225.62951660]
[434.48046875 -234.46667480]
[446.60092163 -243.30383301]
[446.70648193 -258.70822144]
[455.75662231 -270.95355225]
[470.11212158 -275.46841431]
[484.20477295 -270.72125244]
[496.32519531 -279.55841064]
[508.44561768 -288.39556885]
[520.56604004 -297.23272705]
[532.68646240 -306.06988525]
[544.80688477 -314.90704346]
[556.92730713 -323.74420166]
[569.04772949 -332.58132935]
[574.15203857 -340.18234253]
[581.44683838 -341.46310425]
[593.71398926 -350.09539795]
[605.98120117 -358.72769165]
[610.13568115 -374.22351074]
[624.89807129 -380.50448608]
[638.94390869 -372.75247192]
[641.49841309 -356.91409302]
[630.60198975 -345.13922119]
[614.61346436 -346.46054077]
[602.34631348 -337.82824707]
[590.07910156 -329.19595337]
[577.88488770 -320.46090698]
[565.76446533 -311.62374878]
[553.64404297 -302.78662109]
[541.52362061 -293.94946289]
[529.40319824 -285.11230469]
[517.28277588 -276.27514648]
[505.16235352 -267.43798828]
[493.04193115 -258.60083008]
[493.25180054 -243.73161316]
[484.56307983 -231.44464111]
[470.13668823 -226.57295227]
[455.43804932 -231.18339539]
[443.31762695 -222.34625244]
[431.19720459 -213.50909424]
[419.77886963 -203.78175354]
[409.12780762 -193.21978760]
[398.47674561 -182.65783691]
[406.19528198 -169.83157349]
[410.62231445 -155.52209473]
[411.49636841 -140.55987549]
[408.76229858 -125.81441498]
[402.57479858 -112.14362335]
[393.28952026 -100.34395599]
[381.44284058 -91.10400391]
[367.72067261 -84.96427917]
[352.91894531 -82.28565979]
[337.89727783 -83.22810364]
[323.52908325 -87.74117279]
[310.65093994 -95.56666565]
[299.99987793 -85.00470734]
[289.34881592 -74.44274902]
[285.75961304 -59.98705673]
[270.51245117 -55.76395798]
[259.86141968 -45.20199585]
[249.21035767 -34.64003754]
[246.66929626 -27.68318748]
[238.29052734 -23.99198723]
[234.45901489 -9.59863186]
[219.14305115 -5.63226986]
[208.31607056 4.74927139]
[197.48907471 15.13081264]
[186.66209412 25.51235390]
[175.83511353 35.89389420]
[165.00813293 46.27543640]
[154.26872253 56.74755859]
[143.61767578 67.30951691]
[132.96661377 77.87147522]
[139.89642334 92.77642822]
[140.26780701 109.55284882]
[133.74330139 125.38508606]
[121.16580200 137.50592041]
[104.45913696 143.67936707]
[86.33646393 142.60957336]
[82.11047363 157.00196838]
[77.88449097 171.39436340]
[73.65850067 185.78675842]
[69.43251038 200.17913818]
[82.32184601 208.02310181]
[92.74111176 218.93644714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[34 43]
[35 42]
[60 174]
[61 173]
[62 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[69 166]
[71 164]
[72 162]
[73 161]
[74 160]
[76 158]
[77 157]
[78 156]
[90 144]
[91 143]
[92 142]
[102 141]
[103 140]
[104 139]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
