%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAUCGCGGCUCCGGUGCCGCUCUGGGCUCAGCCAGUGAGAGGCCGGGGGUGUGGUAGAGAGAAGGAGCCGGCCGGGUACUUAGGACCGCGCCAGCCUCUGAGCCCGGCCUCCUUCGCACUUUCGAGUGCGCGUUUGCUGCCCGCCGCAGCCCGGGCGUUGAAGGUAGUAAAGCGGCCACCCGGCCGCAUC\
) } def
/len { sequence length } bind def

/coor [
[71.52898407 180.91697693]
[60.64832687 170.59169006]
[61.10108566 155.59852600]
[72.58481598 145.94865417]
[80.38925171 133.13885498]
[73.31441498 130.64955139]
[60.32403564 138.14955139]
[47.33365250 145.64955139]
[34.34327316 153.14955139]
[21.35289192 160.64955139]
[8.36251068 168.14955139]
[0.27986085 181.75033569]
[-14.61093044 181.41326904]
[-27.60131073 188.91326904]
[-40.59169388 196.41326904]
[-53.58207321 203.91326904]
[-66.57245636 211.41326904]
[-79.56283569 218.91326904]
[-92.55321503 226.41326904]
[-96.74750519 241.41479492]
[-110.02844238 248.83581543]
[-124.30425262 244.74473572]
[-132.38690186 258.34552002]
[-147.27769470 258.00845337]
[-155.36033630 271.60925293]
[-170.25112915 271.27218628]
[-183.24151611 278.77218628]
[-196.23190308 286.27218628]
[-209.22227478 293.77218628]
[-213.07011414 309.10092163]
[-226.67272949 317.14730835]
[-241.95989990 313.13763428]
[-249.86204529 299.45071411]
[-245.69096375 284.20678711]
[-231.92126465 276.44976807]
[-216.72227478 280.78179932]
[-203.73190308 273.28179932]
[-190.74151611 265.78179932]
[-177.75112915 258.28179932]
[-170.59764099 245.21746826]
[-154.77769470 245.01808167]
[-147.62420654 231.95375061]
[-131.80426025 231.75436401]
[-128.20932007 217.34561157]
[-115.14205933 209.55448914]
[-100.05321503 213.42289734]
[-87.06283569 205.92289734]
[-74.07245636 198.42289734]
[-61.08207321 190.92289734]
[-48.09169388 183.42289734]
[-35.10131073 175.92289734]
[-22.11092949 168.42289734]
[-14.95743942 155.35855103]
[0.86251050 155.15916443]
[13.85289192 147.65916443]
[26.84327316 140.15916443]
[39.83365250 132.65916443]
[52.82403564 125.15917206]
[65.81441498 117.65917206]
[62.69473648 104.18684387]
[64.56611633 90.82814789]
[70.93946075 79.32640076]
[80.75449371 71.09477997]
[92.54850006 67.04360962]
[104.67143250 67.48334503]
[102.02705383 52.71827698]
[99.38267517 37.95320511]
[96.73830414 23.18813705]
[94.09392548 8.42306900]
[91.44954681 -6.34200001]
[88.06396484 -10.34995747]
[86.69993591 -14.81044197]
[87.18984985 -18.87429619]
[89.05220032 -21.88309479]
[87.12425995 -36.75867844]
[85.19631958 -51.63426590]
[83.26837921 -66.50984955]
[81.34043884 -81.38543701]
[79.41249847 -96.26102448]
[77.48456573 -111.13661194]
[73.76827240 -116.63080597]
[73.44350433 -122.32138824]
[75.74212646 -126.52155304]
[74.29441833 -141.45152283]
[72.84671021 -156.38150024]
[71.39900208 -171.31147766]
[69.95129395 -186.24145508]
[68.50358582 -201.17143250]
[59.70772552 -207.59851074]
[55.98480225 -217.60226440]
[58.34015274 -227.78778076]
[65.75859070 -234.83853149]
[64.79261780 -249.80740356]
[55.25022888 -263.14437866]
[62.27464676 -277.96292114]
[78.63975525 -279.01901245]
[87.51052856 -265.22619629]
[79.76148224 -250.77337646]
[80.72745514 -235.80450439]
[92.60845184 -220.55882263]
[83.43356323 -202.61914062]
[84.88127136 -187.68916321]
[86.32897949 -172.75918579]
[87.77668762 -157.82920837]
[89.22439575 -142.89923096]
[90.67210388 -127.96926117]
[92.36014557 -113.06454468]
[94.28808594 -98.18896484]
[96.21602631 -83.31337738]
[98.14396667 -68.43778992]
[100.07190704 -53.56220627]
[101.99984741 -38.68661880]
[103.92778778 -23.81103516]
[106.21461487 -8.98637867]
[108.85899353 5.77869081]
[111.50337219 20.54376030]
[114.14775085 35.30883026]
[116.79212952 50.07389832]
[119.43650055 64.83896637]
[130.97879028 74.41893768]
[145.97830200 74.29810333]
[160.97634888 74.05645752]
[175.97196960 73.69400024]
[190.96759033 73.33154297]
[205.96321106 72.96908569]
[220.95883179 72.60662842]
[235.95445251 72.24417114]
[250.95007324 71.88172150]
[265.94567871 71.51926422]
[274.46243286 68.17971802]
[281.18536377 71.27371979]
[296.18487549 71.15288544]
[311.18438721 71.03205872]
[324.92178345 63.18384552]
[337.71096802 70.81837463]
[352.71051025 70.69754791]
[359.89074707 62.50494385]
[370.18469238 59.68189240]
[380.12182617 62.92934799]
[386.48843384 70.94262695]
[401.48406982 71.30508423]
[416.47967529 71.66754150]
[431.47528076 72.02999115]
[446.47091675 72.39244843]
[459.03100586 62.41126633]
[474.63275146 66.14823914]
[481.30783081 80.73667908]
[473.93572998 94.98558807]
[458.17163086 97.96441650]
[446.10845947 87.38806915]
[431.11285400 87.02561188]
[416.11721802 86.66316223]
[401.12161255 86.30070496]
[386.12597656 85.93824768]
[369.88873291 96.42349243]
[352.83132935 85.69705963]
[337.83181763 85.81788635]
[325.16726685 93.65745544]
[311.30523682 86.03157043]
[296.30572510 86.15240479]
[281.30621338 86.27323151]
[266.30813599 86.51488495]
[251.31253052 86.87733459]
[236.31690979 87.23979187]
[221.32128906 87.60224915]
[206.32566833 87.96470642]
[191.33004761 88.32716370]
[176.33442688 88.68962097]
[161.33880615 89.05207825]
[154.71903992 92.36105347]
[146.09912109 89.29761505]
[131.09960938 89.41844940]
[134.22640991 101.45193481]
[132.66883850 114.30592346]
[126.27281189 126.15277100]
[115.59571075 135.17491150]
[121.02758789 149.15684509]
[126.45946503 163.13879395]
[131.89134216 177.12072754]
[137.32322693 191.10267639]
[142.75509644 205.08462524]
[155.87295532 214.92605591]
[153.64057922 231.17254639]
[138.35444641 237.11109924]
[125.73962402 226.63262939]
[128.77316284 210.51649475]
[123.34128571 196.53456116]
[117.90940094 182.55261230]
[112.47752380 168.57066345]
[107.04564667 154.58872986]
[101.61376953 140.60678101]
[94.53893280 138.11747742]
[92.60255432 152.99197388]
[95.51347351 167.70680237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 59]
[7 58]
[8 57]
[9 56]
[10 55]
[11 54]
[13 52]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[22 43]
[24 41]
[26 39]
[27 38]
[28 37]
[29 36]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[92 99]
[93 98]
[120 172]
[121 171]
[122 169]
[123 168]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[131 161]
[132 160]
[133 159]
[135 157]
[136 156]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
