%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGGAGAGAAAAGAGGGGAGGGAUGGGGGGAGGGGAAACAGGAGCGAGGUGUCUCCCUAGCUCGCUGCCUCUGGCAAGUGGAGUUUUUAAAAAGCUCCAGCAGAUCAUGUC\
) } def
/len { sequence length } bind def

/coor [
[258.07467651 197.98725891]
[245.01710510 190.60482788]
[231.95954895 183.22241211]
[218.90199280 175.83998108]
[205.84443665 168.45756531]
[192.78688049 161.07513428]
[179.72932434 153.69271851]
[166.67176819 146.31028748]
[151.78462219 146.78176880]
[143.57952881 133.25450134]
[130.52195740 125.87207031]
[117.46440887 118.48964691]
[109.38992310 123.63687897]
[99.98446655 125.43368530]
[90.58121490 123.62538910]
[82.51302338 118.46830750]
[76.92353058 110.69342041]
[74.60502625 101.40280151]
[75.88613129 91.91333771]
[63.70330048 83.16241455]
[51.52046967 74.41149902]
[39.33763504 65.66058350]
[27.15480232 56.90966034]
[14.97196960 48.15874100]
[2.78913617 39.40782547]
[-12.93310928 37.64102936]
[-18.75615883 23.93185616]
[-30.93899155 15.18093872]
[-45.60454178 19.89557266]
[-60.06512070 15.12639618]
[-68.84083557 2.90138841]
[-68.73646545 -11.96895504]
[-82.14197540 -4.75413752]
[-97.28891754 -4.07792997]
[-111.17058563 -10.02094555]
[-121.05471802 -21.35518074]
[-125.02122498 -35.79735184]
[-122.33500671 -50.46874237]
[-138.69812012 -51.55525208]
[-145.69497681 -66.38684082]
[-136.12780762 -79.70604706]
[-119.83849335 -77.81121063]
[-113.58409119 -62.65157700]
[-100.53841400 -69.88177490]
[-85.58573151 -70.73431396]
[-71.68878937 -64.98661804]
[-61.62443161 -53.72922516]
[-57.42880249 -39.15926743]
[-59.98554611 -24.15178871]
[-45.92694473 -28.99881935]
[-31.53977776 -24.58594894]
[-22.40296745 -12.40514088]
[-22.18807411 2.99810529]
[-10.00524044 11.74902439]
[4.84560776 12.88989639]
[11.54005527 27.22499084]
[23.72288895 35.97591019]
[35.90571976 44.72682953]
[48.08855438 53.47774887]
[60.27138901 62.22866440]
[72.45422363 70.97958374]
[84.63705444 79.73050690]
[104.12663269 74.90332031]
[121.04440308 85.71694183]
[124.84683228 105.43209076]
[137.90438843 112.81451416]
[150.96194458 120.19693756]
[166.78305054 120.25350952]
[174.05418396 133.25273132]
[187.11174011 140.63516235]
[200.16929626 148.01757812]
[213.22686768 155.40000916]
[226.28442383 162.78242493]
[239.34197998 170.16485596]
[252.39953613 177.54727173]
[265.45709229 184.92970276]
[276.05072021 185.01016235]
[282.59671021 191.75875854]
[297.15332031 195.37881470]
[302.42501831 193.84643555]
[307.24261475 194.51411438]
[310.81777954 196.81074524]
[312.72036743 199.92890930]
[326.93518066 204.71842957]
[341.14996338 209.50794983]
[355.36474609 214.29747009]
[369.57955933 219.08700562]
[383.79434204 223.87652588]
[398.00915527 228.66604614]
[412.22393799 233.45556641]
[426.43875122 238.24508667]
[443.37936401 237.57272339]
[448.71508789 253.66514587]
[434.72863770 263.24719238]
[421.64923096 252.45988464]
[407.43441772 247.67036438]
[393.21963501 242.88084412]
[379.00482178 238.09132385]
[364.79003906 233.30180359]
[350.57522583 228.51226807]
[336.36044312 223.72274780]
[322.14562988 218.93322754]
[307.93084717 214.14370728]
[293.53326416 209.93544006]
[278.97665405 206.31536865]
[287.52642822 218.64019775]
[289.64453125 233.48989868]
[284.88150024 247.71359253]
[274.24801636 258.29324341]
[260.00030518 262.98397827]
[245.16154480 260.79052734]
[232.88029480 252.17828369]
[225.76243591 238.97465515]
[225.31826782 223.98123169]
[231.64205933 210.37939453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[10 67]
[11 66]
[12 65]
[19 62]
[20 61]
[21 60]
[22 59]
[23 58]
[24 57]
[25 56]
[27 54]
[28 53]
[32 49]
[38 43]
[78 105]
[79 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
