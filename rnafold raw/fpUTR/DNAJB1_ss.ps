%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGACGGCGAGGCCCCGCCCCGGAUGUCGCGUGUCGCUGAAAGGGCGGCGGCGAUUGGCCGGCGCCGCGGGGGCGGGCGGGGCGGAAGGUUCUGGAGGGGGCUGGCGGGCUCUGGAAGCUUCCGCCGGACGGGUAUAUAGAGUCCGGGACUGGUCGGCGGCGGAGCCGGGGGACGGCGACAGCGGGUCGGCGGGCCGCAGGAGGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[97.46923065 234.03303528]
[110.11636353 225.41279602]
[108.33390045 210.51908875]
[106.55143738 195.62536621]
[102.63536835 189.35749817]
[104.85500336 180.49684143]
[103.29448700 165.57824707]
[101.73396301 150.65963745]
[100.17343903 135.74102783]
[85.25405884 132.11018372]
[73.39782715 122.63223267]
[66.72705078 109.19364929]
[66.35514069 94.37099457]
[51.47510529 96.26428223]
[36.59506989 98.15757751]
[21.71503448 100.05086517]
[6.83500004 101.94416046]
[-8.04503536 103.83745575]
[-22.92506981 105.73074341]
[-37.80510712 107.62403870]
[-58.51826477 132.09071350]
[-72.75624847 136.81085205]
[-86.99423981 141.53097534]
[-101.23223114 146.25111389]
[-108.79350281 162.02598572]
[-125.10311127 167.34684753]
[-139.91712952 159.38545227]
[-154.08325195 164.31704712]
[-168.24938965 169.24864197]
[-182.41552734 174.18023682]
[-196.58166504 179.11183167]
[-203.65737915 184.88868713]
[-210.99557495 184.00967407]
[-225.23356628 188.72981262]
[-239.47155762 193.44995117]
[-253.70954895 198.17008972]
[-267.94754028 202.89021301]
[-282.18551636 207.61035156]
[-296.42352295 212.33049011]
[-304.87768555 225.96524048]
[-320.82522583 227.71345520]
[-332.03250122 216.23406982]
[-329.90228271 200.33306885]
[-316.06866455 192.20834351]
[-301.14364624 198.09249878]
[-286.90567017 193.37236023]
[-272.66766357 188.65222168]
[-258.42968750 183.93209839]
[-244.19169617 179.21195984]
[-229.95370483 174.49182129]
[-215.71571350 169.77169800]
[-201.51325989 164.94569397]
[-187.34712219 160.01409912]
[-173.18098450 155.08250427]
[-159.01484680 150.15090942]
[-144.84872437 145.21931458]
[-140.91770935 132.94834900]
[-130.48101807 125.06434631]
[-117.21387482 124.62442780]
[-105.95236206 132.01312256]
[-91.71437836 127.29299164]
[-77.47638702 122.57286072]
[-63.23839569 117.85272217]
[-61.78897858 102.92291260]
[-74.85316467 95.55222321]
[-87.91735077 88.18153381]
[-100.98153687 80.81084442]
[-116.75967407 83.71426392]
[-128.77214050 73.08034515]
[-127.80400085 57.06653214]
[-114.59793091 47.95724487]
[-99.28448486 52.74035263]
[-93.61084747 67.74665833]
[-80.54666138 75.11734772]
[-67.48247528 82.48803711]
[-54.41828918 89.85872650]
[-39.69839859 92.74400330]
[-24.81836319 90.85070801]
[-9.93832684 88.95742035]
[4.94170761 87.06412506]
[19.82174301 85.17082977]
[34.70177841 83.27754211]
[49.58181381 81.38424683]
[64.46184540 79.49095917]
[74.20781708 68.08849335]
[73.76120758 53.09514236]
[73.31460571 38.10179520]
[72.86799622 23.10844421]
[72.42138672 8.11509323]
[64.27663422 -5.44859266]
[71.63156891 -18.40059090]
[71.18496704 -33.39393997]
[70.73835754 -48.38729095]
[70.29174805 -63.38064194]
[67.87961578 -66.99111938]
[66.84582520 -70.79845428]
[67.08300781 -74.34516144]
[68.34626770 -77.25562286]
[70.29174805 -79.27384949]
[70.73835754 -94.26720428]
[71.18496704 -109.26055145]
[71.63156891 -124.25389862]
[72.07817841 -139.24725342]
[72.52478027 -154.24060059]
[64.27947998 -168.41618347]
[72.66690063 -182.50813293]
[89.05877686 -182.01988220]
[96.59255981 -167.45367432]
[87.51812744 -153.79399109]
[87.07152557 -138.80064392]
[86.62491608 -123.80729675]
[86.17831421 -108.81394958]
[85.73170471 -93.82059479]
[85.28510284 -78.82724762]
[85.28510284 -63.82724762]
[85.73170471 -48.83389664]
[86.17831421 -33.84054565]
[86.62491608 -18.84719658]
[94.73772430 -6.35593510]
[87.41474152 7.66848755]
[87.86134338 22.66183662]
[88.30795288 37.65518570]
[88.75455475 52.64853668]
[89.20116425 67.64188385]
[105.61493683 68.82895660]
[118.34850311 77.24262238]
[130.44425964 68.37172699]
[142.54000854 59.50082779]
[154.63575745 50.62993240]
[166.73150635 41.75903702]
[178.82725525 32.88814163]
[176.48510742 17.76290131]
[181.45124817 3.28547144]
[192.58451843 -7.21734142]
[207.32655334 -11.33206654]
[222.28974915 -8.11317158]
[234.03567505 1.69966650]
[239.86520386 15.85152817]
[238.43875122 31.09041977]
[230.08410645 43.91455460]
[216.72109985 51.37704086]
[201.42045593 51.76305771]
[187.69815063 44.98389435]
[175.60240173 53.85478973]
[163.50665283 62.72568512]
[151.41090393 71.59658051]
[139.31515503 80.46747589]
[127.21939850 89.33837128]
[130.27503967 94.01947021]
[132.48265076 99.45639038]
[133.67007446 105.48760986]
[133.69712830 111.91448212]
[149.47761536 110.77999115]
[157.70660400 123.19502258]
[171.28280640 129.57362366]
[184.85902405 135.95222473]
[198.43522644 142.33084106]
[212.01142883 148.70944214]
[225.58764648 155.08804321]
[243.89535522 153.11085510]
[253.34979248 167.89532471]
[267.01947021 174.07110596]
[280.73471069 180.14492798]
[295.28475952 174.58306885]
[309.15438843 180.83509827]
[314.36712646 194.74060059]
[328.12722778 200.71215820]
[341.88732910 206.68373108]
[355.64743042 212.65528870]
[371.03790283 208.12615967]
[384.09146118 217.45265198]
[384.79458618 233.48028564]
[372.60784912 243.91403198]
[356.87988281 240.75001526]
[349.67587280 226.41539001]
[335.91577148 220.44383240]
[322.15563965 214.47227478]
[308.39553833 208.50070190]
[294.67861938 214.19119263]
[280.63885498 208.33119202]
[274.76315308 193.90502930]
[267.37579346 194.12585449]
[260.84368896 187.74076843]
[247.17402649 181.56500244]
[235.75044250 185.54351807]
[224.31147766 180.51025391]
[219.20903015 168.66424561]
[205.63282776 162.28564453]
[192.05662537 155.90704346]
[178.48040771 149.52844238]
[164.90420532 143.14982605]
[151.32800293 136.77122498]
[136.51858521 138.36195374]
[127.31852722 125.49068451]
[115.09204102 134.18051147]
[116.65256500 149.09912109]
[118.21308899 164.01771545]
[119.77361298 178.93632507]
[121.44515228 193.84289551]
[123.22761536 208.73661804]
[125.01008606 223.63034058]
[139.33422852 229.02267456]
[149.50302124 240.46182251]
[153.17974854 255.31915283]
[149.51951599 270.18057251]
[139.36343384 281.63098145]
[125.04528046 287.03924561]
[109.85527039 285.16250610]
[97.28395081 276.43206787]
[90.22012329 262.85409546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[6 198]
[7 197]
[8 196]
[9 195]
[13 84]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 78]
[20 77]
[21 63]
[22 62]
[23 61]
[24 60]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[64 76]
[65 75]
[66 74]
[67 73]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[91 118]
[92 117]
[93 116]
[94 115]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[152 194]
[154 192]
[155 191]
[156 190]
[157 189]
[158 188]
[159 187]
[161 184]
[162 183]
[163 181]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
