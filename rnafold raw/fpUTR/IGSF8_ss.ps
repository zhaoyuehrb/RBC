%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGGGCGAGAAUGGUUUCAGAACUGCCGAGGGCUGGAGGGAAAGCAGCGGGAGGGGCGGAGGGAGGGGAUUCGGCAGCUCCAGUUCAGCUCGCUCGGCGCACCCACGCCUCGCUGCCCCGCUUCCUGCCCUCAACCUGGGCAUGCGCCCCCCACCCUUCCGGCCCCCCAGAACCCGCGCCAUCCCCCGGAGCCUCCCCAGAGCUGGCCGCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[19.96069145 929.07214355]
[19.31240082 914.08612061]
[15.88468075 907.54284668]
[18.76432037 898.87982178]
[10.66345882 886.38085938]
[17.99985313 872.36340332]
[17.56758308 857.36962891]
[17.13531303 842.37585449]
[9.08482552 855.03247070]
[-3.88059974 862.57556152]
[-18.86218452 863.31860352]
[-32.51038361 857.09552002]
[-41.77376556 845.29766846]
[-44.58124542 830.56274414]
[-40.30514145 816.18511963]
[-29.90148354 805.37939453]
[-15.69630337 800.56146240]
[-0.86555678 802.80841064]
[11.27493572 811.61798096]
[18.01132584 825.02264404]
[19.95135689 810.14862061]
[21.89138985 795.27459717]
[12.63466930 783.66217041]
[14.39025116 768.55017090]
[26.63320732 758.91961670]
[28.57324028 744.04559326]
[30.51327133 729.17156982]
[21.25655174 717.55914307]
[23.01213264 702.44714355]
[35.25508881 692.81658936]
[37.19512177 677.94256592]
[39.13515472 663.06854248]
[41.07518387 648.19458008]
[33.47783661 632.37286377]
[44.79804611 617.84625244]
[46.52353287 602.94580078]
[48.24902344 588.04541016]
[49.97451019 573.14495850]
[47.62267303 566.14263916]
[51.83373260 558.04284668]
[53.77376175 543.16882324]
[55.71379471 528.29479980]
[57.65382767 513.42077637]
[48.39710617 501.80834961]
[50.15268707 486.69635010]
[62.39564514 477.06579590]
[64.33567810 462.19177246]
[62.08499146 455.15628052]
[66.41233063 447.11798096]
[68.56650543 432.27346802]
[70.72068024 417.42895508]
[72.87484741 402.58444214]
[75.02902222 387.73992920]
[64.52875519 367.89547729]
[79.08890533 349.83786011]
[80.16879272 334.87680054]
[81.24868774 319.91571045]
[82.32857513 304.95465088]
[83.40846252 289.99356079]
[84.38051605 275.02508545]
[85.24469757 260.05001831]
[86.10887909 245.07492065]
[86.86513519 230.09399414]
[87.51342773 215.10801697]
[88.16172028 200.12202454]
[80.98171234 187.07225037]
[89.30821991 173.61936951]
[89.95651245 158.63339233]
[90.60480499 143.64739990]
[91.25309753 128.66142273]
[79.67230225 122.01749420]
[72.12670135 111.00293732]
[70.11415100 97.80422211]
[74.03415680 85.04138184]
[83.10856628 75.24793243]
[78.02342987 61.13618851]
[72.93829346 47.02444077]
[67.85315704 32.91269684]
[62.76802063 18.80094910]
[57.68288422 4.68920279]
[44.26768875 5.21159744]
[30.96261978 -1.55453289]
[21.74612617 -15.16198349]
[20.06838036 -33.03175735]
[11.53372955 -45.36706161]
[2.99907923 -57.70236588]
[-10.98524761 -67.28750610]
[-5.64594364 -83.37875366]
[11.29451561 -82.70260620]
[15.33438396 -66.23701477]
[23.86903381 -53.90171051]
[32.40368652 -41.56640625]
[39.40295410 -44.26089096]
[34.01398087 -58.25942612]
[36.34623337 -73.07700348]
[48.01251602 -63.64839554]
[53.40148926 -49.64986038]
[60.40075684 -52.34434891]
[58.46072388 -67.21836090]
[56.52069092 -82.09237671]
[54.58066177 -96.96638489]
[41.90259933 -106.40261078]
[39.69297028 -122.05167389]
[49.26270676 -134.62925720]
[64.93424988 -136.67330933]
[77.40995789 -126.97113800]
[79.28820801 -111.27885437]
[69.45467377 -98.90641785]
[71.39470673 -84.03240967]
[73.33473969 -69.15839386]
[75.27477264 -54.28437805]
[87.91164398 -34.01245117]
[85.24236298 -13.02132893]
[71.79463196 -0.39593369]
[76.87976837 13.71581268]
[81.96490479 27.82755852]
[87.05004120 41.93930435]
[92.13517761 56.05105209]
[97.22031403 70.16279602]
[105.79320526 70.59890747]
[113.89072418 73.44754028]
[123.94908905 62.31967926]
[134.00744629 51.19181061]
[132.28448486 41.93095779]
[134.97286987 33.04654312]
[141.34953308 26.49182892]
[149.89567566 23.64686012]
[158.65704346 25.02902222]
[169.18693542 14.34627056]
[179.71684265 3.66351891]
[190.24674988 -7.01923275]
[200.77664185 -17.70198441]
[199.12150574 -33.25172806]
[207.89161682 -46.19850540]
[222.94601440 -50.42924500]
[237.17646790 -43.94631958]
[243.86378479 -29.81076813]
[239.85043335 -14.69696808]
[227.03137207 -5.74119139]
[211.45939636 -7.17208290]
[200.92948914 3.51066875]
[190.39959717 14.19342041]
[179.86968994 24.87617111]
[169.33979797 35.55892181]
[165.89212036 55.91061401]
[145.13531494 61.25017166]
[135.07695007 72.37803650]
[125.01859283 83.50590515]
[129.90290833 101.94969177]
[122.66502380 119.60310364]
[106.23908234 129.30970764]
[105.59078979 144.29570007]
[104.94249725 159.28167725]
[104.29420471 174.26766968]
[111.42784119 188.38934326]
[103.14770508 200.77032471]
[102.49941254 215.75630188]
[101.85112000 230.74229431]
[104.60562134 239.44590759]
[101.08396149 245.93910217]
[100.21978760 260.91418457]
[99.35560608 275.88928223]
[101.98439789 284.63168335]
[98.36953735 291.07345581]
[97.28964996 306.03451538]
[96.20976257 320.99560547]
[95.12987518 335.95669556]
[94.04998779 350.91775513]
[100.10092163 355.34594727]
[104.20701599 361.53845215]
[105.89966583 368.70333862]
[105.01532745 375.94357300]
[101.71012115 382.36938477]
[96.43473816 387.20748901]
[89.87353516 389.89410400]
[87.71936035 404.73861694]
[85.56519318 419.58312988]
[83.41101837 434.42764282]
[81.25684357 449.27215576]
[79.20969391 464.13180542]
[77.26966095 479.00582886]
[86.63279724 491.45446777]
[84.45344543 506.51119995]
[72.52783966 515.36083984]
[70.58780670 530.23480225]
[68.64777374 545.10882568]
[66.70774841 559.98284912]
[64.87493896 574.87048340]
[63.14944839 589.77087402]
[61.42395782 604.67132568]
[59.69847107 619.57171631]
[67.08144379 630.14367676]
[65.34082031 642.51586914]
[55.94919968 650.13458252]
[54.00916672 665.00860596]
[52.06913376 679.88262939]
[50.12910461 694.75665283]
[59.49224472 707.20532227]
[57.31288910 722.26202393]
[45.38728333 731.11163330]
[43.44725418 745.98565674]
[41.50722122 760.85968018]
[50.87036133 773.30834961]
[48.69100952 788.36505127]
[36.76540375 797.21466064]
[34.82537079 812.08868408]
[32.88533783 826.96270752]
[32.12908554 841.94360352]
[32.56135178 856.93737793]
[32.99362183 871.93115234]
[41.12540054 885.50262451]
[33.75809097 898.44757080]
[34.29838562 913.43786621]
[34.94667435 928.42382812]
[44.20406342 941.96020508]
[36.86694336 956.62640381]
[20.48312187 957.33520508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[4 212]
[6 210]
[7 209]
[8 208]
[20 207]
[21 206]
[22 205]
[25 202]
[26 201]
[27 200]
[30 197]
[31 196]
[32 195]
[33 194]
[35 191]
[36 190]
[37 189]
[38 188]
[40 187]
[41 186]
[42 185]
[43 184]
[46 181]
[47 180]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 162]
[61 161]
[62 160]
[63 158]
[64 157]
[65 156]
[67 154]
[68 153]
[69 152]
[70 151]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[84 92]
[85 91]
[86 90]
[98 111]
[99 110]
[100 109]
[101 108]
[121 148]
[122 147]
[123 146]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
