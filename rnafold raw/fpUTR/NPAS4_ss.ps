%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAUAUAAGGCGGCGUGAGGCAGGCGAGGGGGGCAGCGCAGCCGAGCGGAGCCCAGGAGAGCAGAGAGCGAGCCUGAGCGAGAGACGGGGAAGCACGGAGGAGGAAGCCGCCGGUGCGUCGGGACGGGAGCGCAGGUGCUCGGGCACCCGAGCUGGAGCUCCGCAGCCGCCGGUC\
) } def
/len { sequence length } bind def

/coor [
[14.77924824 423.25302124]
[0.27661061 427.80737305]
[-14.86450481 426.46011353]
[-28.33518600 419.41674805]
[-38.08125687 407.75131226]
[-42.61650467 393.24267578]
[-41.24934387 378.10336304]
[-34.18825150 364.64193726]
[-22.50999641 354.91122437]
[-7.99542761 350.39508057]
[-6.66599083 335.45410156]
[-5.33655405 320.51312256]
[-4.00711727 305.57217407]
[-2.67768073 290.63119507]
[-1.34824407 275.69021606]
[-7.48551512 271.37930298]
[-16.10753059 283.65371704]
[-28.38178444 275.03149414]
[-19.76005745 262.75750732]
[-25.89732742 258.44659424]
[-39.50130463 264.76574707]
[-53.10528564 271.08493042]
[-58.27151108 282.92553711]
[-69.75753784 287.90100098]
[-81.17230988 283.83856201]
[-94.88629913 289.91525269]
[-108.60028839 295.99197388]
[-114.36537933 310.46270752]
[-128.35987854 316.42999268]
[-142.11996460 310.84466553]
[-151.34022522 324.40634155]
[-167.67301941 322.93249512]
[-174.31654358 307.93933105]
[-164.43653870 294.85049438]
[-148.19668579 297.13067627]
[-143.09056091 283.18566895]
[-129.26918030 276.82766724]
[-114.67700958 282.27798462]
[-100.96302032 276.20126343]
[-87.24903107 270.12457275]
[-77.70747375 255.41201782]
[-59.42444229 257.48092651]
[-45.82046509 251.16177368]
[-32.21648788 244.84262085]
[-22.81886482 225.95602417]
[-6.10723162 217.90327454]
[9.53153229 221.38960266]
[18.26193428 209.19206238]
[26.99233437 196.99450684]
[35.72273636 184.79696655]
[44.45313644 172.59942627]
[53.18354034 160.40187073]
[61.91394043 148.20433044]
[70.53575134 135.92979431]
[79.04829407 123.57921600]
[87.56083679 111.22864532]
[75.20777130 119.73757172]
[60.59383011 116.35634613]
[53.23348236 103.28633118]
[57.91872025 89.03681946]
[71.59919739 82.88502502]
[85.36786652 88.83576965]
[74.62101746 78.37129974]
[58.62480545 77.14625549]
[49.72865677 63.79566574]
[54.75693512 48.56097031]
[69.85237885 43.12891769]
[83.43505096 51.66651535]
[85.08549500 67.62445068]
[95.83234406 78.08892059]
[99.23891449 78.17181396]
[102.52231598 78.77033997]
[105.60662079 79.84892273]
[114.11916351 67.49835205]
[122.63170624 55.14777756]
[131.14424133 42.79720306]
[139.65678406 30.44663239]
[141.11775208 14.69302464]
[154.71118164 8.60469151]
[163.22372437 -3.74588037]
[157.56556702 -13.77680779]
[156.08099365 -25.14556694]
[158.94779968 -36.19353485]
[165.71171570 -45.32340240]
[175.35795593 -51.23010254]
[186.46333313 -53.08729935]
[197.40614319 -50.66282654]
[206.56394958 -62.54283524]
[203.40158081 -81.19735718]
[214.65982056 -96.00582123]
[232.84686279 -97.88191223]
[241.57725525 -110.07946014]
[243.31759644 -125.80465698]
[257.01693726 -131.65077209]
[265.74734497 -143.84831238]
[274.47775269 -156.04586792]
[283.20816040 -168.24340820]
[291.82995605 -180.51794434]
[300.34249878 -192.86851501]
[301.80346680 -208.62213135]
[315.39691162 -214.71046448]
[323.90945435 -227.06103516]
[320.80389404 -242.55718994]
[329.63479614 -255.66409302]
[345.16290283 -258.60565186]
[358.17572021 -249.63665771]
[360.95291138 -234.07829285]
[351.84686279 -221.16104126]
[336.26000977 -218.54849243]
[327.74746704 -206.19792175]
[326.89538574 -191.32771301]
[312.69308472 -184.35597229]
[304.18054199 -172.00540161]
[302.96972656 -164.69071960]
[295.40570068 -159.51300049]
[286.67529297 -147.31546021]
[277.94488525 -135.11791992]
[269.21447754 -122.92037201]
[268.09860229 -108.06762695]
[253.77481079 -101.34906006]
[245.04440308 -89.15151215]
[249.31338501 -78.53196716]
[247.89710999 -67.05347443]
[241.03390503 -57.59568405]
[230.34301758 -52.58778000]
[218.44395447 -53.38503647]
[209.28614807 -41.50502396]
[215.59651184 -23.94647598]
[210.04023743 -5.97834969]
[194.67755127 5.12844992]
[175.57429504 4.76666164]
[167.06175232 17.11723328]
[166.20967102 31.98744583]
[152.00735474 38.95917511]
[143.49481201 51.30974579]
[134.98226929 63.66032028]
[126.46973419 76.01088715]
[117.95719147 88.36146545]
[121.51708984 102.93290710]
[134.76547241 109.96714783]
[148.01385498 117.00138092]
[161.26222229 124.03562164]
[174.51060486 131.06985474]
[187.75898743 138.10409546]
[204.11967468 136.98164368]
[213.04631042 150.73835754]
[205.35595703 165.22250366]
[188.95976257 165.53402710]
[180.72474670 151.35247803]
[167.47636414 144.31823730]
[154.22799683 137.28399658]
[140.97961426 130.24975586]
[127.73123169 123.21552277]
[114.48285675 116.18128967]
[99.91140747 119.74118805]
[91.39886475 132.09176636]
[82.88632202 144.44233704]
[80.58165741 153.31430054]
[74.11148071 156.93473816]
[65.38108063 169.13227844]
[56.65068054 181.32981873]
[47.92028046 193.52737427]
[39.18988037 205.72491455]
[30.45947838 217.92245483]
[21.72907639 230.11999512]
[30.62080956 252.62678528]
[13.59272671 277.01965332]
[12.26328945 291.96063232]
[10.93385315 306.90161133]
[9.60441685 321.84255981]
[8.27497959 336.78353882]
[6.94554281 351.72451782]
[20.43470955 358.73242188]
[30.21143532 370.37219238]
[34.78483963 384.86880493]
[33.45751190 400.01168823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[20 44]
[21 43]
[22 42]
[25 40]
[26 39]
[27 38]
[30 35]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[54 157]
[55 156]
[56 155]
[62 70]
[63 69]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[79 132]
[80 131]
[87 127]
[88 126]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[97 115]
[98 113]
[99 112]
[101 110]
[102 109]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
