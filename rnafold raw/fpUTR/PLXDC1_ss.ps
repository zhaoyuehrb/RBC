%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCCCGCCUGCUCCCGGAGGCCGCAGCCUCCAGCUCCGCUCGCGCUCUCGCCGCUCCUGCCGGCUCGCCCGGCCCCGCGCUCCGCCGUCUCCUCGCCGCCCGCCCCUCCGCCAGCCCCGGGGACCGCGCGGCCGCAGCCUGAGCCAGGGCCCCCUCCCUCGUCAGGACCGGGGCAGCAAGCAGGCCGGGGGCAGGUCCGGGCACCCACC\
) } def
/len { sequence length } bind def

/coor [
[98.92671204 384.95956421]
[111.17984772 375.58596802]
[109.85414886 360.64468384]
[106.13240051 354.26083374]
[108.62074280 345.47351074]
[107.51554871 330.51428223]
[96.10350800 321.01159668]
[94.76958466 305.85653687]
[104.81423950 293.95098877]
[103.70904541 278.99176025]
[102.60385895 264.03253174]
[101.49866486 249.07328796]
[100.39347076 234.11405945]
[99.28827667 219.15483093]
[98.18309021 204.19560242]
[97.07789612 189.23637390]
[95.97270203 174.27714539]
[94.86750793 159.31791687]
[80.79751587 154.11837769]
[70.23009491 164.76400757]
[59.66267395 175.40965271]
[49.09525681 186.05529785]
[38.52783585 196.70092773]
[27.96041679 207.34657288]
[24.29988098 223.33195496]
[8.54842758 227.89526367]
[-3.09019947 216.34214783]
[1.35682130 200.55746460]
[17.31477737 196.77914429]
[27.88219643 186.13351440]
[38.44961548 175.48786926]
[49.01703644 164.84223938]
[59.58445740 154.19659424]
[70.15187836 143.55094910]
[61.62390137 131.21102905]
[47.92973328 137.33229065]
[34.23556519 143.45353699]
[22.24272919 155.43721008]
[7.40744352 147.23045349]
[11.18665028 130.70309448]
[28.11431122 129.75936890]
[41.80847931 123.63811493]
[55.50264740 117.51686096]
[51.88796616 102.95822144]
[48.27361679 88.40087128]
[33.30664444 89.39571381]
[18.33967209 90.39055634]
[3.38044167 91.49575043]
[-9.79553604 101.25923920]
[-24.72917747 94.48292542]
[-26.05803299 78.13771057]
[-12.41508961 69.03813934]
[2.16496181 76.54507446]
[8.57607174 72.87050629]
[17.34482765 75.42358398]
[32.31180191 74.42874146]
[47.27877426 73.43389893]
[81.31475830 61.44472885]
[105.33356476 73.88651276]
[112.34957886 60.62847137]
[119.36559296 47.37043381]
[126.38160706 34.11240005]
[133.39762878 20.85436249]
[128.97560120 5.91838026]
[136.27970886 -7.42720890]
[150.54614258 -11.55087852]
[157.56214905 -24.80891609]
[164.57817078 -38.06695175]
[160.15614319 -53.00293350]
[167.46025085 -66.34852600]
[181.72668457 -70.47219086]
[188.74269104 -83.73023224]
[195.75871277 -96.98826599]
[202.77471924 -110.24630737]
[209.79074097 -123.50434113]
[202.88133240 -133.91304016]
[201.05874634 -146.18528748]
[204.59544373 -157.98722839]
[212.75167847 -167.10583496]
[223.92880249 -171.86384583]
[225.03398132 -186.82307434]
[226.13917542 -201.78230286]
[218.32244873 -212.04075623]
[219.55001831 -224.47669983]
[228.62113953 -232.47781372]
[229.94683838 -247.41912842]
[231.27255249 -262.36041260]
[232.59825134 -277.30172729]
[233.81372070 -292.25241089]
[234.91891479 -307.21163940]
[227.10218811 -317.47009277]
[228.32975769 -329.90600586]
[237.40087891 -337.90713501]
[238.72657776 -352.84844971]
[240.05227661 -367.78973389]
[241.37799072 -382.73104858]
[242.70368958 -397.67236328]
[244.02938843 -412.61364746]
[234.16140747 -424.66607666]
[235.71870422 -439.79980469]
[247.26966858 -449.13311768]
[248.59536743 -464.07443237]
[238.72738647 -476.12686157]
[240.28468323 -491.26055908]
[251.83563232 -500.59390259]
[253.16134644 -515.53521729]
[242.82650757 -527.49206543]
[244.05677795 -543.24841309]
[256.12225342 -553.45623779]
[271.86468506 -552.05944824]
[281.94439697 -539.88671875]
[280.38125610 -524.15991211]
[268.10263062 -514.20947266]
[266.77694702 -499.26818848]
[276.50415039 -488.04690552]
[275.37252808 -472.87542725]
[263.53668213 -462.74871826]
[262.21096802 -447.80743408]
[271.93817139 -436.58615112]
[270.80654907 -421.41464233]
[258.97070312 -411.28796387]
[257.64498901 -396.34664917]
[256.31927490 -381.40533447]
[254.99359131 -366.46405029]
[253.66789246 -351.52273560]
[252.34217834 -336.58145142]
[260.58560181 -321.08834839]
[249.87814331 -306.10644531]
[248.77294922 -291.14721680]
[251.41464233 -284.24603271]
[247.53955078 -275.97601318]
[246.21385193 -261.03472900]
[244.88815308 -246.09341431]
[243.56243896 -231.15211487]
[251.80586243 -215.65902710]
[241.09840393 -200.67710876]
[239.99320984 -185.71788025]
[238.88803101 -170.75865173]
[245.53387451 -167.28311157]
[251.01007080 -162.15884399]
[254.91873169 -155.75813293]
[269.77172852 -157.85302734]
[284.62472534 -159.94792175]
[299.47772217 -162.04281616]
[314.33068848 -164.13772583]
[322.38973999 -168.43438721]
[329.41802979 -166.15231323]
[342.14242554 -175.55447388]
[355.73727417 -169.46931458]
[370.61953735 -171.34492493]
[385.50183105 -173.22053528]
[400.38409424 -175.09614563]
[409.87512207 -187.73323059]
[425.53359985 -189.87507629]
[438.06964111 -180.25096130]
[440.04583740 -164.57070923]
[430.28970337 -152.13713074]
[414.58944702 -150.32685852]
[402.25970459 -160.21386719]
[387.37744141 -158.33825684]
[372.49514771 -156.46264648]
[357.61288452 -154.58705139]
[345.95297241 -145.31904602]
[331.29364014 -151.27003479]
[316.42559814 -149.28472900]
[301.57260132 -147.18983459]
[286.71960449 -145.09492493]
[271.86663818 -143.00003052]
[257.01364136 -140.90513611]
[245.59512329 -121.33218384]
[223.04876709 -116.48832703]
[216.03276062 -103.23029327]
[209.01673889 -89.97225189]
[202.00073242 -76.71421814]
[194.98471069 -63.45618057]
[199.59927368 -49.34088898]
[192.67291260 -35.79540634]
[177.83619690 -31.05093956]
[170.82019043 -17.79290199]
[163.80416870 -4.53486490]
[168.41873169 9.58042622]
[161.49237061 23.12590599]
[146.65565491 27.87037659]
[139.63964844 41.12841415]
[132.62362671 54.38644791]
[125.60762024 67.64448547]
[118.59160614 80.90252686]
[137.36883545 97.57918549]
[137.82977295 129.93615723]
[109.82674408 158.21272278]
[110.93193054 173.17195129]
[112.03712463 188.13117981]
[113.14231873 203.09040833]
[114.24751282 218.04963684]
[115.35269928 233.00886536]
[116.45789337 247.96809387]
[117.56308746 262.92733765]
[118.66828156 277.88656616]
[119.77346802 292.84579468]
[131.45869446 303.14593506]
[132.36642456 318.33248901]
[122.47477722 329.40908813]
[123.57997131 344.36831665]
[124.79544830 359.31896973]
[126.12114716 374.26028442]
[139.83326721 381.33004761]
[147.52662659 394.70223999]
[146.74632263 410.10986328]
[137.74133301 422.63638306]
[123.38512421 428.28463745]
[108.25870514 425.25228882]
[97.18886566 414.50695801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[5 203]
[6 202]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[35 43]
[36 42]
[37 41]
[45 57]
[46 56]
[47 55]
[48 53]
[59 187]
[60 186]
[61 185]
[62 184]
[63 183]
[66 180]
[67 179]
[68 178]
[71 175]
[72 174]
[73 173]
[74 172]
[75 171]
[80 138]
[81 137]
[82 136]
[85 134]
[86 133]
[87 132]
[88 131]
[89 129]
[90 128]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[101 118]
[102 117]
[105 114]
[106 113]
[141 169]
[142 168]
[143 167]
[144 166]
[145 165]
[147 164]
[149 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
