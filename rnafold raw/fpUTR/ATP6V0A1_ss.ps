%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCAGGGGCGGGGCUUUACGGACGCAAGCACGUCGAAGCGCUGCUCCUGGAGCCGCGGAGGGUGCGGGUUUGGCUGCGGUGGUUUCUGUGGCGGUUGCUGUGGCGGAGUUUGGAGGUUGGAGAGAAAUCCAGGUACUCACUAGACUGGUACCUUCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[-231.43785095 312.09790039]
[-225.09735107 298.50616455]
[-238.95553589 304.24642944]
[-252.81373596 309.98666382]
[-266.67193604 315.72692871]
[-280.53012085 321.46716309]
[-291.37216187 336.32730103]
[-308.65884399 333.40917969]
[-322.40725708 339.40756226]
[-336.15570068 345.40594482]
[-349.90414429 351.40432739]
[-363.65255737 357.40270996]
[-377.40100098 363.40109253]
[-391.14944458 369.39947510]
[-404.89785767 375.39785767]
[-418.64630127 381.39624023]
[-428.20092773 394.00653076]
[-442.96035767 392.00433350]
[-456.70880127 398.00271606]
[-470.45721436 404.00109863]
[-484.20565796 409.99948120]
[-497.95410156 415.99786377]
[-511.64584351 422.12454224]
[-525.27972412 428.37893677]
[-538.91357422 434.63336182]
[-544.49017334 449.17776489]
[-558.40594482 455.32638550]
[-572.23742676 449.92034912]
[-581.28070068 463.60070801]
[-597.63122559 462.33920288]
[-604.46905518 447.43362427]
[-594.75994873 434.21752930]
[-578.49182129 436.28649902]
[-573.56732178 422.27630615]
[-559.82977295 415.73922729]
[-545.16796875 420.99948120]
[-531.53411865 414.74508667]
[-517.90026855 408.49066162]
[-513.11181641 402.81988525]
[-503.95248413 402.24942017]
[-490.20404053 396.25106812]
[-476.45559692 390.25268555]
[-462.70718384 384.25430298]
[-448.95874023 378.25592041]
[-440.38748169 366.07464600]
[-424.64468384 367.64779663]
[-410.89624023 361.64941406]
[-397.14782715 355.65103149]
[-383.39938354 349.65264893]
[-369.65093994 343.65426636]
[-355.90252686 337.65588379]
[-342.15408325 331.65750122]
[-328.40563965 325.65914917]
[-314.65722656 319.66076660]
[-309.93054199 308.49755859]
[-298.49108887 303.39956665]
[-286.27038574 307.60897827]
[-272.41217041 301.86874390]
[-258.55398560 296.12847900]
[-244.69578552 290.38821411]
[-230.83760071 284.64797974]
[-217.44712830 277.88815308]
[-204.59925842 270.14654541]
[-191.75138855 262.40496826]
[-178.90351868 254.66337585]
[-166.05564880 246.92178345]
[-153.20777893 239.18017578]
[-140.35990906 231.43858337]
[-127.51204681 223.69699097]
[-114.66417694 215.95539856]
[-107.75622559 202.75958252]
[-91.94277191 202.26441956]
[-79.09490204 194.52282715]
[-66.24703217 186.78123474]
[-53.39916611 179.03964233]
[-40.55130005 171.29804993]
[-27.70343018 163.55644226]
[-14.85556221 155.81484985]
[-10.73213482 149.64360046]
[-1.69427860 148.05120850]
[11.29610252 140.55120850]
[15.53420448 134.45812988]
[24.60025597 133.03503418]
[37.72860718 125.77924347]
[50.85696030 118.52346039]
[63.98530960 111.26767731]
[71.38183594 98.33938599]
[87.20275116 98.43585205]
[87.34680939 57.38872147]
[96.25411224 45.31975174]
[105.16141510 33.25078583]
[114.06871796 21.18181992]
[122.97602081 9.11285305]
[131.88333130 -2.95611334]
[133.85273743 -18.65426636]
[147.63586426 -24.30003548]
[156.54316711 -36.36900330]
[165.45046997 -48.43796921]
[174.35777283 -60.50693512]
[178.89849854 -76.84150696]
[195.85169983 -77.00009155]
[200.69720459 -60.75332642]
[186.42672729 -51.59963226]
[177.51942444 -39.53066635]
[168.61212158 -27.46170044]
[159.70481873 -15.39273357]
[158.37252808 -0.55783355]
[143.95228577 5.95118952]
[135.04498291 18.02015686]
[126.13768768 30.08912277]
[117.23038483 42.15808868]
[108.32308197 54.22705460]
[99.41577911 66.29602051]
[102.35056305 73.19798279]
[115.95362854 66.87685394]
[129.55670166 60.55572891]
[141.41542053 51.37037277]
[154.12817383 59.33187866]
[151.04159546 74.01087189]
[136.19970703 76.17860413]
[122.20992279 81.59024811]
[108.22013855 87.00189972]
[111.15492249 93.90385437]
[126.02659607 95.86174774]
[140.89826965 97.81964111]
[155.76994324 99.77753448]
[168.15417480 89.95886230]
[183.84419250 91.85595703]
[193.53138733 104.34330750]
[191.46850586 120.01239014]
[178.87944031 129.56701660]
[163.23304749 127.33859253]
[153.81204224 114.64920807]
[138.94038391 112.69131470]
[124.06870270 110.73342133]
[109.19702911 108.77552795]
[94.45853424 111.56420135]
[86.12297821 125.01147461]
[71.24109650 124.39602661]
[58.11274338 131.65180969]
[44.98439026 138.90759277]
[31.85603905 146.16337585]
[18.79610252 153.54159546]
[5.80572128 161.04159546]
[-7.11396790 168.66271973]
[-19.96183586 176.40431213]
[-32.80970383 184.14590454]
[-45.65757370 191.88751221]
[-58.50543976 199.62910461]
[-71.35330963 207.37069702]
[-84.20117950 215.11228943]
[-92.02809906 228.86183167]
[-106.92258453 228.80326843]
[-119.77045441 236.54486084]
[-132.61831665 244.28645325]
[-145.46618652 252.02804565]
[-158.31405640 259.76965332]
[-171.16192627 267.51123047]
[-184.00979614 275.25283813]
[-196.85766602 282.99441528]
[-209.70553589 290.73602295]
[-195.00260925 293.70657349]
[-184.74794006 304.65380859]
[-182.74320984 319.51922607]
[-189.73164368 332.79183960]
[-203.12242126 339.55105591]
[-217.95118713 337.29107666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 61]
[3 60]
[4 59]
[5 58]
[6 57]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[23 38]
[24 37]
[25 36]
[28 33]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[80 144]
[81 143]
[83 142]
[84 141]
[85 140]
[86 139]
[88 137]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 106]
[97 105]
[98 104]
[99 103]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
