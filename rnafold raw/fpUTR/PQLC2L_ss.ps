%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCCGCGUGCUCAGGCUGAACAGCUUUUCUUCCCUGAUCUCUCGGAGGCGCCGGCUGCUGGCCAACGCAGGGCAGCCUCCUGCGUGCGUGCUGUGGGUUUCUCCUUCAGUUUCCUCUCAUUGCCUGAGGUUGGGCCCGAACACGGCGGUACAUUUCCUUGAGAGUCUUCUACAUUCAUGCUGUAGAAGCU\
) } def
/len { sequence length } bind def

/coor [
[288.99151611 356.52352905]
[288.62252808 348.43136597]
[279.41937256 336.58645630]
[270.21624756 324.74154663]
[261.01309204 312.89660645]
[251.80993652 301.05169678]
[249.03477478 300.57443237]
[246.28288269 298.96176147]
[243.99041748 296.21746826]
[242.58389282 292.50402832]
[242.42507935 288.13455200]
[234.00381470 275.72155762]
[225.58256531 263.30856323]
[212.03437805 257.12017822]
[210.68960571 241.35621643]
[202.26835632 228.94322205]
[188.72016907 222.75483704]
[187.37539673 206.99089050]
[178.95414734 194.57789612]
[170.53288269 182.16488647]
[162.11163330 169.75189209]
[148.56346130 163.56350708]
[147.21867371 147.79956055]
[138.79742432 135.38656616]
[130.37617493 122.97356415]
[123.80456543 129.29286194]
[115.98430634 133.81855774]
[107.38768768 136.32231140]
[98.52336884 136.69650269]
[89.90630341 134.95835876]
[82.02779388 131.24671936]
[75.32752228 125.81172180]
[70.16902924 118.99838257]
[66.82005310 111.22482300]
[65.43882751 102.95671082]
[66.06697845 94.67941284]
[68.62929535 86.86947632]
[72.94035339 79.96724701]
[63.17568207 68.58079529]
[53.41101074 57.19434738]
[43.64633942 45.80789948]
[36.18394470 46.93188477]
[28.86289787 45.40583420]
[22.58652878 41.46641541]
[18.11240196 35.64503098]
[15.96096039 28.69654655]
[16.35529518 21.50156593]
[19.19894218 14.95485973]
[10.38216400 2.81960511]
[1.56538546 -9.31564999]
[-7.25139332 -21.45090485]
[-16.06817245 -33.58615875]
[-30.43931770 -40.20286179]
[-31.66061211 -55.04731369]
[-40.47739029 -67.18257141]
[-49.29417038 -79.31782532]
[-63.66531372 -85.93452454]
[-64.88661194 -100.77897644]
[-73.70339203 -112.91423035]
[-88.07453156 -119.53093719]
[-89.29582977 -134.37538147]
[-98.11260986 -146.51063538]
[-113.47037506 -149.11386108]
[-122.23896790 -161.54634094]
[-119.66254425 -176.17158508]
[-128.47932434 -188.30683899]
[-134.37301636 -191.35011292]
[-137.38348389 -196.19006348]
[-137.37719727 -200.97807312]
[-145.79844666 -213.39106750]
[-154.21971130 -225.80407715]
[-162.64096069 -238.21707153]
[-171.06221008 -250.63006592]
[-179.48347473 -263.04306030]
[-187.90472412 -275.45605469]
[-196.32597351 -287.86904907]
[-211.74845886 -292.28796387]
[-217.77609253 -307.15560913]
[-209.78500366 -321.06683350]
[-193.90527344 -323.35009766]
[-182.31845093 -312.25393677]
[-183.91297913 -296.29031372]
[-175.49172974 -283.87731934]
[-167.07048035 -271.46432495]
[-158.64921570 -259.05133057]
[-150.22796631 -246.63832092]
[-141.80671692 -234.22532654]
[-133.38545227 -221.81233215]
[-124.96420288 -209.39933777]
[-116.34407043 -197.12361145]
[-107.52729034 -184.98835754]
[-92.82170105 -182.91923523]
[-83.70735931 -170.73796082]
[-85.97735596 -155.32742310]
[-77.16057587 -143.19216919]
[-63.42006302 -137.44345093]
[-61.56813431 -121.73101044]
[-52.75135422 -109.59575653]
[-39.01084518 -103.84704590]
[-37.15891647 -88.13459778]
[-28.34213638 -75.99934387]
[-19.52535820 -63.86408997]
[-5.78484726 -58.11538315]
[-3.93291712 -42.40293884]
[4.88386154 -30.26768303]
[13.70064068 -18.13242912]
[22.51741982 -5.99717379]
[31.33419800 6.13808107]
[52.72161102 12.96619987]
[55.03278732 36.04322815]
[64.79746246 47.42967606]
[74.56212616 58.81612396]
[84.32679749 70.20257568]
[91.94292450 66.66068268]
[100.34857941 65.07161713]
[109.04174805 65.60749817]
[117.48419189 68.31119537]
[125.13477325 73.08908844]
[131.48403931 79.71251678]
[136.08789062 87.82789612]
[148.00656128 78.72045898]
[159.92523193 69.61302185]
[171.84388733 60.50558090]
[175.38659668 44.85857391]
[189.89091492 38.00260925]
[204.23037720 45.19699478]
[207.40498352 60.92281723]
[196.97943115 73.11656952]
[180.95132446 72.42424774]
[169.03266907 81.53168488]
[157.11399841 90.63912201]
[145.19532776 99.74655914]
[142.78916931 114.55231476]
[151.21041870 126.96530914]
[159.63166809 139.37831116]
[173.78219604 146.45455933]
[174.52462769 161.33064270]
[182.94587708 173.74363708]
[191.36714172 186.15663147]
[199.78839111 198.56962585]
[213.93891907 205.64587402]
[214.68135071 220.52197266]
[223.10260010 232.93496704]
[237.25312805 240.01121521]
[237.99555969 254.88729858]
[246.41680908 267.30029297]
[254.83807373 279.71328735]
[263.65484619 291.84854126]
[272.85800171 303.69348145]
[282.06115723 315.53839111]
[291.26431274 327.38330078]
[300.46743774 339.22821045]
[299.17922974 324.28363037]
[303.53369141 309.92959595]
[312.90792847 298.21960449]
[325.96078491 290.82888794]
[340.82495117 288.81478882]
[355.37393188 292.46545410]
[367.52630615 301.25860596]
[375.54357910 313.93627930]
[378.27877808 328.68478394]
[375.34060669 343.39419556]
[367.14935303 355.96017456]
[354.87695312 364.58502197]
[340.27902222 368.03482056]
[325.44403076 365.81607056]
[312.49291992 358.24499512]
[319.24890137 371.63742065]
[325.91708374 377.90023804]
[326.00387573 385.30044556]
[332.54321289 398.79995728]
[339.08255005 412.29946899]
[345.62191772 425.79898071]
[352.16125488 439.29852295]
[358.70059204 452.79803467]
[365.23992920 466.29754639]
[371.77926636 479.79705811]
[386.98538208 483.44519043]
[396.24734497 496.04476929]
[395.19201660 511.64669800]
[384.31762695 522.88421631]
[368.75875854 524.45129395]
[355.86184692 515.60803223]
[351.71636963 500.52993774]
[358.27975464 486.33642578]
[351.74041748 472.83688354]
[345.20108032 459.33737183]
[338.66174316 445.83786011]
[332.12237549 432.33834839]
[325.58303833 418.83880615]
[319.04370117 405.33929443]
[312.50436401 391.83978271]
[305.85647583 378.39337158]
[299.10052490 365.00097656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[11 147]
[12 146]
[13 145]
[15 143]
[16 142]
[18 140]
[19 139]
[20 138]
[21 137]
[23 135]
[24 134]
[25 133]
[38 113]
[39 112]
[40 111]
[41 110]
[48 108]
[49 107]
[50 106]
[51 105]
[52 104]
[54 102]
[55 101]
[56 100]
[58 98]
[59 97]
[61 95]
[62 94]
[65 91]
[66 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[120 132]
[121 131]
[122 130]
[123 129]
[167 194]
[168 193]
[170 192]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
