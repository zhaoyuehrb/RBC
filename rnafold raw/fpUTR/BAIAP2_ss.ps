%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGUGGUUCGGGUCCGCUUUCGUCUCCGUCCUGCUGCCGUUACCGCCGCUGCUGCCGCCGCUUGCGUCCCCCGCUCCGGUCUGUGGUGCAGCCGGGACCCAGGACC\
) } def
/len { sequence length } bind def

/coor [
[79.48892212 307.66510010]
[69.51608276 319.70986938]
[54.12498474 322.47540283]
[40.58284378 314.65591431]
[35.28384399 299.94351196]
[40.73000717 285.28497314]
[54.34982681 277.60156250]
[56.93089294 262.82528687]
[59.51195908 248.04902649]
[62.09302521 233.27276611]
[64.67408752 218.49649048]
[67.04195404 203.68457031]
[69.19612885 188.84005737]
[71.35029602 173.99554443]
[73.50447083 159.15103149]
[75.65864563 144.30651855]
[77.81281281 129.46200562]
[67.91585541 118.19035339]
[52.91741562 118.40650940]
[43.42950058 132.32092285]
[27.69212341 137.83715820]
[11.90923977 132.98832703]
[2.18019891 119.85334778]
[-12.80578518 120.50164032]
[-26.34213638 129.75903320]
[-41.00838089 122.42191315]
[-41.71714401 106.03808594]
[-27.73931122 97.46183014]
[-13.45407677 105.51565552]
[1.53190696 104.86736298]
[7.89561033 93.03555298]
[19.38724518 85.86863708]
[33.02951431 85.35072327]
[45.22421265 91.72647858]
[52.70125961 103.40806580]
[67.69969940 103.19190979]
[71.57508850 92.42185211]
[78.52526093 84.68244934]
[69.29412079 72.85932922]
[53.66091156 72.48943329]
[41.95716476 62.11850357]
[39.70902634 46.64336395]
[47.97800446 33.37091064]
[62.85973358 28.56798553]
[77.32752228 34.50238419]
[84.55012512 48.37206650]
[81.11724091 63.62819290]
[90.34837341 75.45130920]
[104.53887177 74.01557159]
[117.40231323 80.17699432]
[130.09495544 72.18344879]
[142.78759766 64.18989563]
[155.48023987 56.19634628]
[168.17288208 48.20279312]
[173.87524414 40.86807251]
[181.34849548 40.16789246]
[194.26622009 32.54343796]
[207.18394470 24.91898537]
[220.10166931 17.29453087]
[233.01939392 9.67007542]
[241.60760498 -6.53856182]
[259.08795166 -6.19645119]
[271.78057861 -14.19000149]
[284.47323608 -22.18355179]
[292.87881470 -40.39395142]
[312.12258911 -40.67249680]
[324.33364868 -49.38401794]
[336.54467773 -58.09553909]
[340.59878540 -73.61789703]
[355.32022095 -79.99433136]
[369.41595459 -72.33338928]
[372.07293701 -56.51188278]
[361.25296021 -44.66672516]
[345.25619507 -45.88450623]
[333.04516602 -37.17298126]
[320.83413696 -28.46146011]
[320.02151489 -18.08925629]
[313.43157959 -9.75418186]
[303.10498047 -6.43477488]
[292.46676636 -9.49091053]
[279.77413940 -1.49736023]
[267.08151245 6.49619055]
[264.04742432 18.30435944]
[253.40730286 25.04319763]
[240.64385986 22.58780289]
[227.72613525 30.21225739]
[214.80839539 37.83671188]
[201.89067078 45.46116638]
[188.97294617 53.08562088]
[176.16642761 60.89543533]
[163.47378540 68.88898468]
[150.78114319 76.88253784]
[138.08850098 84.87609100]
[125.39586639 92.86963654]
[125.96830750 111.50914001]
[113.58355713 127.23114014]
[92.65732574 131.61618042]
[90.50315857 146.46069336]
[88.34898376 161.30520630]
[86.19480896 176.14971924]
[84.04064178 190.99423218]
[81.88646698 205.83874512]
[83.76699829 214.93702698]
[79.45035553 221.07756042]
[76.86929321 235.85383606]
[74.28822327 250.63009644]
[71.70716095 265.40637207]
[69.12609863 280.18264771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 108]
[8 107]
[9 106]
[10 105]
[11 104]
[12 102]
[13 101]
[14 100]
[15 99]
[16 98]
[17 97]
[18 36]
[19 35]
[23 30]
[24 29]
[38 48]
[39 47]
[50 94]
[51 93]
[52 92]
[53 91]
[54 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[62 82]
[63 81]
[64 80]
[66 76]
[67 75]
[68 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
