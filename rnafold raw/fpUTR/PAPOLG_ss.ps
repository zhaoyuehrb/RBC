%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGACCUGCGAGAGGCAGGCUGGGAAGCGGCGCCAUAUUGGCGUCGGCCGCGCUGUAUUGUCAUAAAUAGAGCCGGUUUUGUGGUGUUUUCACUACUCGGUUGGAUGCCUCAGCCAUAGUAAGUGGGAAAGUGAGCGAGCAAGCGAGCUACUAGCGACCGGAGGAAAGUGAACAGGGGGAGAAGGGAACAGCAAGAACAGGACUCCAGAGCGAUAAACACUCGCUGGAGAGGGAGACGCAGGAAGCG\
) } def
/len { sequence length } bind def

/coor [
[103.97865295 299.48132324]
[90.31519318 292.67895508]
[80.96305847 280.61657715]
[77.77914429 265.68923950]
[81.39560699 250.86076355]
[91.09439087 239.07534790]
[104.94980621 232.67297363]
[105.13829803 217.67416382]
[105.32678986 202.67535400]
[105.51528168 187.67652893]
[105.70377350 172.67771912]
[105.89225769 157.67889404]
[70.10355377 139.03448486]
[60.17023468 106.50112915]
[45.17497253 106.12417603]
[30.17970848 105.74722290]
[15.18444633 105.37026978]
[0.18918364 104.99332428]
[-14.80607891 104.61637115]
[-29.80578232 104.52212524]
[-44.80459976 104.71061707]
[-59.80341339 104.89910126]
[-74.80223083 105.08759308]
[-89.80104828 105.27608490]
[-104.79985809 105.46457672]
[-99.42433929 115.58284760]
[-98.36409760 128.51052856]
[-102.58123016 142.61706543]
[-112.47087097 155.99832153]
[-127.79360199 166.66215515]
[-140.25254822 175.01528931]
[-152.71148682 183.36842346]
[-165.17042542 191.72155762]
[-177.62936401 200.07469177]
[-190.08830261 208.42782593]
[-202.54724121 216.78096008]
[-215.00617981 225.13409424]
[-224.79502869 238.97659302]
[-240.80638123 233.40226746]
[-239.88227844 216.47352600]
[-223.35931396 212.67515564]
[-210.90037537 204.32202148]
[-198.44143677 195.96888733]
[-185.98249817 187.61575317]
[-173.52355957 179.26261902]
[-161.06462097 170.90948486]
[-148.60568237 162.55635071]
[-136.14674377 154.20321655]
[-140.24101257 139.77281189]
[-155.23036194 139.20745850]
[-170.21969604 138.64210510]
[-185.20904541 138.07675171]
[-193.87701416 140.87506104]
[-200.38284302 137.40893555]
[-215.36390686 136.65527344]
[-230.34495544 135.90161133]
[-244.51644897 142.93576050]
[-256.83889771 134.56875610]
[-271.81994629 133.81509399]
[-286.80099487 133.06143188]
[-301.78207397 132.30775452]
[-313.33520508 143.09204102]
[-329.12704468 142.46488953]
[-339.78857422 130.79838562]
[-338.99447632 115.01406097]
[-327.21591187 104.47647095]
[-311.44085693 105.43738556]
[-301.02838135 117.32670593]
[-286.04733276 118.08036804]
[-271.06628418 118.83403778]
[-256.08523560 119.58769989]
[-242.98527527 112.49964142]
[-229.59129333 120.92055511]
[-214.61024475 121.67421722]
[-199.62918091 122.42787933]
[-184.64369202 123.08740234]
[-169.65434265 123.65275574]
[-154.66500854 124.21810913]
[-139.67565918 124.78346252]
[-136.95860291 117.79293060]
[-146.34951782 106.09632111]
[-131.52447510 103.81185913]
[-128.80740356 96.82132721]
[-140.24403381 87.11548615]
[-151.68067932 77.40965271]
[-163.11730957 67.70381165]
[-174.55395508 57.99797058]
[-185.99058533 48.29213333]
[-202.21258545 45.88822937]
[-207.98930359 30.54020882]
[-197.37812805 18.03680229]
[-181.29495239 21.24043846]
[-176.28475952 36.85549545]
[-164.84811401 46.56133270]
[-153.41148376 56.26717377]
[-141.97483826 65.97301483]
[-130.53820801 75.67885590]
[-119.10156250 85.38468933]
[-104.98834991 90.46575928]
[-89.98954010 90.27726746]
[-74.99072266 90.08877563]
[-59.99190521 89.90029144]
[-44.99308777 89.71179962]
[-29.99427414 89.52330780]
[-27.29561615 87.29126740]
[-23.39032745 86.24221802]
[-18.84008789 86.92537689]
[-14.42912769 89.62110901]
[0.56613505 89.99806213]
[15.56139755 90.37500763]
[30.55666161 90.75196075]
[45.55192184 91.12891388]
[60.54718781 91.50586700]
[61.98548889 78.69444275]
[67.71913147 66.11666870]
[77.68591309 55.23314667]
[76.55601501 40.27576447]
[75.42610931 25.31837845]
[74.29621124 10.36099529]
[63.11598587 -1.14474821]
[65.28363800 -17.04068565]
[79.13632202 -25.13281441]
[94.04745483 -19.21354675]
[98.57848358 -3.82363582]
[89.25359344 9.23109341]
[90.38349152 24.18847656]
[91.51339722 39.14585876]
[92.64329529 54.10324478]
[100.03563690 55.36949539]
[109.62115479 43.83182907]
[114.82030487 57.90199661]
[122.21263885 59.16824722]
[128.25624084 45.43962860]
[134.29983521 31.71101189]
[128.81430054 17.13203239]
[135.13893127 3.29535532]
[149.07156372 -1.84441948]
[155.11515808 -15.57303715]
[149.15676880 -30.21110725]
[155.37113953 -44.74235916]
[170.07138062 -50.54565430]
[184.53611755 -44.17800522]
[190.18367004 -29.41722298]
[183.66345215 -15.02061749]
[168.84378052 -9.52944088]
[162.80018616 4.19917727]
[168.41870117 17.94573593]
[162.48519897 31.95459938]
[148.02844238 37.75460815]
[141.98484802 51.48322678]
[135.94125366 65.21184540]
[148.60124207 76.46567535]
[157.46849060 92.32225037]
[171.04089355 85.93556213]
[176.47576904 71.33762360]
[190.33110046 65.05395508]
[204.21450806 70.32524109]
[209.64938354 55.72730255]
[223.50471497 49.44363403]
[237.38812256 54.71492386]
[250.96054077 48.32823181]
[249.29031372 33.27867889]
[252.59960938 18.50277519]
[260.52944946 5.60330296]
[272.21966553 -4.02050114]
[286.40219116 -9.32471848]
[301.53860474 -9.73398685]
[315.98703003 -5.20391273]
[328.18020630 3.77411628]
[336.79553223 16.22623062]
[340.89843750 30.80171776]
[340.04388428 45.91953659]
[334.32461548 59.93982315]
[324.36093140 71.34175873]
[311.23370361 78.88854218]
[296.36679077 81.76156616]
[281.37292480 79.64917755]
[267.87847900 72.78051758]
[257.34722900 61.90063858]
[243.77481079 68.28733063]
[238.98680115 82.34472656]
[225.31343079 89.01508331]
[210.60119629 83.89765167]
[205.81317139 97.95504761]
[192.13980103 104.62540436]
[177.42758179 99.50797272]
[163.85517883 105.89466095]
[162.63539124 113.29479980]
[177.60824585 114.19691467]
[192.58108521 115.09902191]
[207.55393982 116.00113678]
[222.52679443 116.90324402]
[237.49963379 117.80535889]
[252.28109741 115.25421906]
[264.73574829 123.61376953]
[267.97433472 138.25997925]
[260.20547485 151.09138489]
[245.72647095 155.01037598]
[232.54727173 147.85035706]
[218.07698059 143.89930725]
[203.60668945 139.94825745]
[189.13641357 135.99719238]
[174.66612244 132.04614258]
[160.19583130 128.09509277]
[158.97605896 135.49523926]
[169.78070068 145.90003967]
[180.58532715 156.30484009]
[191.38996887 166.70964050]
[202.19459534 177.11444092]
[208.47027588 179.06088257]
[212.26753235 183.24618530]
[213.13586426 187.91906738]
[223.67561340 198.59210205]
[234.21536255 209.26513672]
[244.75511169 219.93817139]
[260.32577515 218.49291992]
[273.15307617 227.43687439]
[277.18038940 242.54696655]
[270.50610352 256.68869019]
[256.28161621 263.18472290]
[241.22334290 258.96786499]
[232.44128418 246.02919006]
[234.08207703 230.47792053]
[223.54232788 219.80488586]
[213.00257874 209.13185120]
[202.46282959 198.45881653]
[191.78979492 187.91906738]
[180.98516846 177.51426697]
[170.18052673 167.10946655]
[159.37590027 156.70466614]
[148.57125854 146.29986572]
[141.65121460 149.19175720]
[147.43496704 163.03184509]
[157.21234131 174.40739441]
[149.41476440 187.22135925]
[134.81840515 183.76496887]
[133.59487915 168.81559753]
[127.81111908 154.97550964]
[120.89107513 157.86738586]
[120.70258331 172.86621094]
[120.51409149 187.86502075]
[120.32560730 202.86384583]
[120.13711548 217.86265564]
[119.94862366 232.86146545]
[133.63876343 239.61000061]
[143.03833008 251.63543701]
[146.28100586 266.55010986]
[142.72296143 281.39273071]
[133.07066345 293.21624756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 244]
[8 243]
[9 242]
[10 241]
[11 240]
[12 239]
[14 113]
[15 112]
[16 111]
[17 110]
[18 109]
[19 108]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[49 79]
[50 78]
[51 77]
[52 76]
[54 75]
[55 74]
[56 73]
[58 71]
[59 70]
[60 69]
[61 68]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[116 128]
[117 127]
[118 126]
[119 125]
[132 151]
[133 150]
[134 149]
[137 146]
[138 145]
[153 187]
[154 186]
[157 183]
[160 180]
[161 179]
[205 231]
[206 230]
[207 229]
[208 228]
[209 227]
[212 226]
[213 225]
[214 224]
[215 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
