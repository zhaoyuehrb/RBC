%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAGCCGUCCGGUUGGGCUUGUCACGGCACCGCCUACCAAGACGGGCGGUUAAGACACUAGGAUAGGCUCCUCUCCACCGGAAAAGGCGGGAUUUAGAUCACGUCCCGCAGGCCGGCGGAAGUAGCUGAUACUCUCAUUGGUUGCAAAACCUUGAUCUGUGAAAGCGGGCGUUUUGGAAGAUACCGGAAGUAGAGUCACGGAGAGGUAGGAUCCGGAAGUGGGGCUGCCUCUUUAAAUAACAAAAAUCUGAGG\
UAUUAAGAA\
) } def
/len { sequence length } bind def

/coor [
[185.28649902 300.99963379]
[178.75537109 287.49615479]
[172.22422791 273.99264526]
[165.69309998 260.48916626]
[159.16195679 246.98567200]
[147.86798096 245.67001343]
[138.50579834 239.00895691]
[133.45614624 228.55499268]
[134.07081604 216.84179688]
[140.31291199 206.77035522]
[134.10375977 193.11581421]
[127.89459991 179.46128845]
[121.68544006 165.80674744]
[115.47628021 152.15220642]
[93.85065460 154.05140686]
[73.20430756 147.34300232]
[56.82512665 133.09529114]
[43.77587509 140.49240112]
[30.72662544 147.88949585]
[17.67737579 155.28659058]
[4.62812614 162.68370056]
[-8.42112350 170.08079529]
[-21.47037315 177.47789001]
[-34.51962280 184.87498474]
[-47.56887436 192.27209473]
[-51.88159561 207.23999023]
[-65.22076416 214.55581665]
[-79.46379852 210.35205078]
[-92.51304626 217.74914551]
[-102.76032257 239.27792358]
[-125.84330750 238.18275452]
[-138.33384705 246.48855591]
[-150.82438660 254.79437256]
[-163.31492615 263.10018921]
[-175.80546570 271.40597534]
[-188.29598999 279.71179199]
[-200.78652954 288.01760864]
[-201.29562378 303.52633667]
[-210.84982300 315.75320435]
[-225.77537537 319.99676514]
[-240.33306885 314.62527466]
[-248.92520142 301.70416260]
[-248.24789429 286.20187378]
[-238.56161499 274.07934570]
[-223.59091187 269.99795532]
[-209.09234619 275.52706909]
[-196.60180664 267.22125244]
[-184.11126709 258.91543579]
[-171.62072754 250.60963440]
[-159.13018799 242.30383301]
[-146.63966370 233.99801636]
[-134.14912415 225.69221497]
[-134.67932129 219.32365417]
[-133.22180176 213.04873657]
[-129.88603210 207.47775269]
[-124.96566010 203.16233826]
[-118.91289520 200.54090881]
[-112.29699707 199.89428711]
[-105.75080109 201.31591797]
[-99.91014862 204.69989014]
[-86.86090088 197.30279541]
[-83.15219116 182.92291260]
[-70.02377319 175.23530579]
[-54.96597290 179.22283936]
[-41.91672134 171.82574463]
[-28.86747360 164.42863464]
[-15.81822300 157.03153992]
[-2.76897264 149.63444519]
[10.28027725 142.23735046]
[23.32952690 134.84024048]
[36.37877655 127.44314575]
[49.42802811 120.04605103]
[46.01419449 106.70085144]
[46.06182098 92.92601013]
[49.56785202 79.60473633]
[56.30748749 67.59116364]
[45.60699844 57.07928848]
[34.90650940 46.56740952]
[19.63970184 42.41588974]
[15.98273754 27.97719383]
[5.28224993 17.46531677]
[-5.41823769 6.95343971]
[-16.11872482 -3.55843735]
[-28.03042221 0.10670060]
[-40.30068207 -1.61717129]
[-50.62061691 -8.34395409]
[-57.07454300 -18.75200272]
[-58.49549484 -30.84340477]
[-54.67579651 -42.32738495]
[-65.12406158 -53.08999252]
[-75.57232666 -63.85260010]
[-86.02059174 -74.61521149]
[-96.46885681 -85.37781525]
[-106.91712189 -96.14042664]
[-117.36538696 -106.90303802]
[-132.46643066 -103.74673462]
[-146.86846924 -109.27706146]
[-155.97590637 -121.72930145]
[-156.88255310 -137.13000488]
[-149.29911804 -150.56484985]
[-135.64544678 -157.74682617]
[-120.27838135 -156.38420105]
[-108.10148621 -146.91178894]
[-103.00037384 -132.35217285]
[-106.60278320 -117.35130310]
[-96.15451813 -106.58869171]
[-85.70625305 -95.82608795]
[-75.25798798 -85.06347656]
[-64.80971527 -74.30086517]
[-54.36145401 -63.53825760]
[-43.91318893 -52.77565002]
[-26.53850746 -56.07849503]
[-10.52931881 -48.19831085]
[-2.40697241 -32.13370132]
[-5.60684824 -14.25892544]
[5.09363937 -3.74704790]
[15.79412746 6.76482916]
[26.49461555 17.27670670]
[40.99605179 20.67634964]
[45.41838837 35.86692429]
[56.11887360 46.37879944]
[66.81936646 56.89067841]
[80.75585938 49.11747360]
[96.34828186 45.72262573]
[97.41433716 30.76055527]
[98.48039246 15.79848671]
[99.54645538 0.83641714]
[100.61251068 -14.12565231]
[101.67856598 -29.08772278]
[102.74462128 -44.04978943]
[103.81067657 -59.01185989]
[104.87673187 -73.97393036]
[94.33583832 -85.74954224]
[95.29232025 -101.52486420]
[107.17872620 -111.94066620]
[122.94304657 -110.81745148]
[133.23260498 -98.82159424]
[131.94277954 -83.07002258]
[119.83880615 -72.90787506]
[118.77275085 -57.94580460]
[117.70668793 -42.98373413]
[116.64063263 -28.02166557]
[115.57457733 -13.05959606]
[114.50852203 1.90247369]
[113.44246674 16.86454391]
[112.37641144 31.82661247]
[111.31034851 46.78868103]
[121.38762665 49.98062515]
[130.65733337 55.06119919]
[138.76950073 61.83857346]
[145.41780090 70.05684662]
[158.95976257 63.60586929]
[172.50172424 57.15489197]
[186.04370117 50.70391464]
[199.58566284 44.25293732]
[203.60881042 39.07384491]
[208.85194397 36.99160767]
[213.52601624 37.81381607]
[227.21711731 31.68570137]
[240.90821838 25.55758858]
[254.59931946 19.42947578]
[268.29043579 13.30136299]
[281.98153687 7.17324972]
[295.67260742 1.04513669]
[295.76663208 -11.83218479]
[300.69525146 -23.67886543]
[309.69723511 -32.75660324]
[321.41635132 -37.74781036]
[334.10592651 -37.94679642]
[345.88888550 -33.35932541]
[355.03561401 -24.69656944]
[368.86813354 -30.49837303]
[375.54421997 -36.68300629]
[382.89920044 -36.28588867]
[396.79956055 -41.92330170]
[410.69989014 -47.56071472]
[424.60025024 -53.19813156]
[438.50057983 -58.83554459]
[452.40093994 -64.47295380]
[458.32537842 -79.12480164]
[472.90744019 -85.21899414]
[487.49581909 -79.13997650]
[493.43551636 -64.49430084]
[487.20257568 -49.97100449]
[472.49493408 -44.18648911]
[458.03836060 -50.57261276]
[444.13800049 -44.93519974]
[430.23767090 -39.29778671]
[416.33731079 -33.66037369]
[402.43698120 -28.02295876]
[388.53662109 -22.38554382]
[374.66995239 -16.66583633]
[360.83740234 -10.86403275]
[359.27261353 6.30929565]
[349.15713501 20.38539314]
[333.21594238 27.41695786]
[315.82293701 25.37565804]
[301.80072021 14.73623657]
[288.10964966 20.86434937]
[274.41854858 26.99246407]
[260.72744751 33.12057495]
[247.03633118 39.24868774]
[233.34523010 45.37680054]
[219.65412903 51.50491714]
[206.03663635 57.79490280]
[192.49467468 64.24588013]
[178.95271301 70.69686127]
[165.41073608 77.14783478]
[151.86877441 83.59881592]
[154.19149780 95.24083710]
[153.93351746 107.10949707]
[151.10708618 118.63958740]
[145.84683228 129.28201294]
[138.40324402 138.52998352]
[129.13081360 145.94305420]
[135.33998108 159.59759521]
[141.54913330 173.25212097]
[147.75828552 186.90666199]
[153.96745300 200.56118774]
[171.96548462 206.55763245]
[179.70039368 223.52833557]
[172.66545105 240.45454407]
[179.19657898 253.95802307]
[185.72772217 267.46151733]
[192.25885010 280.96502686]
[198.78999329 294.46850586]
[220.16505432 306.20687866]
[217.62654114 329.73672485]
[225.25450134 342.65237427]
[232.88247681 355.56805420]
[240.51043701 368.48370361]
[248.13839722 381.39935303]
[255.76637268 394.31500244]
[270.52798462 391.00588989]
[285.58947754 392.42233276]
[299.47531128 398.42556763]
[310.82507324 408.42749023]
[318.52682495 421.44815063]
[321.82604980 436.21197510]
[320.39953613 451.27252197]
[314.38696289 465.15432739]
[304.37747192 476.49737549]
[291.35165405 484.19042969]
[276.58560181 487.47976685]
[261.52603149 486.04312134]
[247.64825439 480.02127075]
[236.31190491 470.00418091]
[228.62759399 456.97317505]
[225.34815979 442.20495605]
[226.79487610 427.14633179]
[232.82601929 413.27261353]
[242.85072327 401.94296265]
[235.22274780 389.02731323]
[227.59478760 376.11166382]
[219.96681213 363.19601440]
[212.33885193 350.28036499]
[204.71087646 337.36468506]
[198.84056091 337.67599487]
[193.07339478 336.34494019]
[187.86296082 333.45346069]
[183.62527466 329.20703125]
[180.70565796 323.92025757]
[179.35061646 317.99362183]
[179.68714905 311.88311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 226]
[2 225]
[3 224]
[4 223]
[5 222]
[10 219]
[11 218]
[12 217]
[13 216]
[14 215]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[28 61]
[29 60]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[82 116]
[83 115]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[124 147]
[125 146]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[151 209]
[152 208]
[153 207]
[154 206]
[155 205]
[158 204]
[159 203]
[160 202]
[161 201]
[162 200]
[163 199]
[164 198]
[171 193]
[172 192]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
[228 257]
[229 256]
[230 255]
[231 254]
[232 253]
[233 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
