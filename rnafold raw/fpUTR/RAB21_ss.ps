%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGGAAGGAGACGCCAUUAGAGGGAGGCAGAGAGGGAUCGUUCUUCGCUUUUCCUCCGGUGCCUGACGUGGUGGGCUGGGGCCCUUCAUUCUCGGACUUUCCCUCAGCCCUUCCAGGCCUCGCCCGAGGAGGGCGUGGGGACAGCGCCCGGGUCGGCGGGGCCGGGGCGGUGGGGGCUGAGCCGGCCGUGGCUGUGAAGGCGCUGCCGCGGCUGUCGGGAGGGCGGCGCGACACUCGGGCUCGGGCGGCCG\
GGAAGCGACGGG\
) } def
/len { sequence length } bind def

/coor [
[-95.88537598 588.50366211]
[-110.18799591 593.02416992]
[-125.18608856 592.78497314]
[-139.33723450 587.81054688]
[-151.18614197 578.61248779]
[-159.51423645 566.13684082]
[-163.46507263 551.66644287]
[-162.63232422 536.68957520]
[-157.10165405 522.74645996]
[-147.44181824 511.27093506]
[-134.64625549 503.44317627]
[-120.03086090 500.06823730]
[-105.09869385 501.49316406]
[-91.38539124 507.57141113]
[-80.30123138 517.67791748]
[-72.98634338 530.77270508]
[-73.16217041 515.77374268]
[-73.33800507 500.77474976]
[-73.51383972 485.77578735]
[-80.14372253 482.26943970]
[-87.15666199 495.52908325]
[-100.41621399 488.51596069]
[-93.40349579 475.25671387]
[-100.03338623 471.75033569]
[-112.52980042 480.04730225]
[-125.02620697 488.34426880]
[-137.52262878 496.64123535]
[-150.01904297 504.93820190]
[-162.51544189 513.23516846]
[-175.01185608 521.53216553]
[-187.45942688 529.90222168]
[-199.85772705 538.34509277]
[-206.90928650 552.50793457]
[-221.78407288 553.27630615]
[-234.18235779 561.71917725]
[-246.58065796 570.16204834]
[-258.97894287 578.60491943]
[-271.37725830 587.04779053]
[-274.07751465 602.61968994]
[-287.04580688 611.65289307]
[-302.58828735 608.78814697]
[-311.48388672 595.72509766]
[-308.45498657 580.21374512]
[-295.29858398 571.45678711]
[-279.82012939 574.64953613]
[-267.42184448 566.20666504]
[-255.02354431 557.76373291]
[-242.62524414 549.32086182]
[-230.22694397 540.87799072]
[-224.06219482 527.31903076]
[-208.30061340 525.94677734]
[-195.90231323 517.50390625]
[-192.15557861 511.16360474]
[-183.30882263 509.03573608]
[-170.81240845 500.73876953]
[-158.31600952 492.44180298]
[-145.81959534 484.14483643]
[-133.32318115 475.84786987]
[-120.82676697 467.55090332]
[-108.33035278 459.25393677]
[-98.36328125 448.04421997]
[-91.58477783 434.66317749]
[-84.80626678 421.28216553]
[-84.58779907 413.92077637]
[-77.86907959 407.78469849]
[-70.93418121 394.48406982]
[-63.99929047 381.18341064]
[-57.06439972 367.88275146]
[-50.12950516 354.58212280]
[-43.19461441 341.28146362]
[-42.88986969 333.92315674]
[-36.09967804 327.86624146]
[-29.00934982 314.64779663]
[-21.91902161 301.42938232]
[-26.45427322 287.28839111]
[-19.45197487 273.78201294]
[-4.58887196 269.12091064]
[-5.39117479 254.24792480]
[7.95034599 245.74412537]
[15.04067326 232.52568054]
[22.13100052 219.30725098]
[21.48826218 215.87341309]
[22.45542145 211.95913696]
[25.23983192 208.31481934]
[29.71011543 205.75514221]
[37.26081848 192.79415894]
[44.81151962 179.83319092]
[52.36222076 166.87220764]
[59.91292191 153.91123962]
[67.46362305 140.95025635]
[75.01432800 127.98928070]
[68.46649170 121.68538666]
[63.51850128 113.84853363]
[60.52860260 104.88697815]
[59.75038147 95.29228973]
[61.31353760 85.61245728]
[65.21162415 76.42053986]
[71.29766083 68.28085327]
[61.07054520 57.30788040]
[50.84342957 46.33491135]
[35.62109756 38.87053299]
[38.57980728 22.17675018]
[55.44024277 20.39853096]
[61.81639862 36.10779572]
[72.04351807 47.08076477]
[82.27063751 58.05373383]
[96.86027527 54.56915283]
[101.02487946 40.15887833]
[105.18947601 25.74859810]
[109.35408020 11.33832073]
[113.51867676 -3.07195663]
[117.68328094 -17.48223495]
[121.84787750 -31.89251328]
[126.01247406 -46.30279160]
[130.17707825 -60.71306610]
[133.91764832 -75.23918915]
[137.23095703 -89.86867523]
[140.54428101 -104.49816132]
[136.04638672 -119.66653442]
[146.40386963 -130.37036133]
[149.71719360 -144.99984741]
[153.03051758 -159.62933350]
[156.34384155 -174.25881958]
[159.65715027 -188.88830566]
[162.97047424 -203.51779175]
[166.28379822 -218.14727783]
[169.59712219 -232.77677917]
[172.91043091 -247.40626526]
[171.75479126 -256.43161011]
[176.34928894 -262.18734741]
[179.83386230 -276.77697754]
[169.91578674 -288.56417847]
[168.85256958 -303.75375366]
[176.84288025 -316.50595093]
[190.64485168 -322.04162598]
[194.12942505 -336.63128662]
[197.61401367 -351.22091675]
[201.09858704 -365.81054688]
[204.58316040 -380.40020752]
[208.06774902 -394.98983765]
[198.60673523 -407.44067383]
[199.41404724 -423.05740356]
[210.10850525 -434.46630859]
[225.64050293 -436.28039551]
[238.67631531 -427.64318848]
[243.06082153 -412.63284302]
[236.72380066 -398.33682251]
[222.65739441 -391.50527954]
[219.17280579 -376.91561890]
[215.68823242 -362.32598877]
[212.20364380 -347.73632812]
[208.71907043 -333.14669800]
[205.23448181 -318.55703735]
[215.04521179 -307.38174438]
[216.41038513 -292.39505005]
[208.59774780 -279.32540894]
[194.42350769 -273.29238892]
[190.93893433 -258.70275879]
[187.53991699 -244.09294128]
[184.22660828 -229.46345520]
[180.91328430 -214.83396912]
[177.59996033 -200.20448303]
[174.28665161 -185.57499695]
[170.97332764 -170.94549561]
[167.66000366 -156.31600952]
[164.34667969 -141.68652344]
[161.03337097 -127.05703735]
[165.76824951 -112.93506622]
[155.17376709 -101.18484497]
[151.86045837 -86.55535889]
[148.54713440 -71.92586517]
[162.35675049 -77.78199768]
[175.60238647 -70.74259949]
[178.47564697 -56.02035904]
[168.84886169 -44.51709747]
[153.85067749 -44.75099182]
[144.58735657 -56.54846954]
[140.42276001 -42.13819122]
[136.25814819 -27.72791290]
[132.09355164 -13.31763458]
[127.92895508 1.09264326]
[123.76435852 15.50292110]
[119.59975433 29.91319847]
[115.43515778 44.32347488]
[111.27055359 58.73375320]
[129.77970886 73.07302094]
[137.00282288 93.79718018]
[151.99354553 94.32457733]
[166.98426819 94.85197449]
[181.97499084 95.37937164]
[196.96572876 95.90676880]
[211.95645142 96.43416595]
[226.94717407 96.96156311]
[241.93789673 97.48896027]
[256.92861938 98.01635742]
[271.91934204 98.54375458]
[285.98303223 91.29644775]
[298.43038940 99.47645569]
[313.42111206 100.00385284]
[328.41183472 100.53125000]
[342.63165283 92.36246490]
[356.67819214 100.82569885]
[356.10162354 117.21470642]
[341.49502563 124.66988373]
[327.88442993 115.52197266]
[312.89370728 114.99457550]
[297.90298462 114.46717834]
[284.91156006 121.75221252]
[271.39193726 113.53447723]
[256.40121460 113.00708008]
[241.41050720 112.47968292]
[226.41976929 111.95228577]
[211.42904663 111.42488861]
[196.43832397 110.89749146]
[181.44760132 110.37009430]
[166.45687866 109.84269714]
[151.46614075 109.31529999]
[136.47541809 108.78790283]
[129.83248901 122.75315857]
[118.12120056 132.85278320]
[103.33123016 137.37092590]
[87.97530365 135.53997803]
[80.42459869 148.50096130]
[72.87390137 161.46192932]
[65.32319641 174.42291260]
[57.77249527 187.38388062]
[50.22179413 200.34486389]
[42.67109299 213.30583191]
[35.34944534 226.39756775]
[28.25911713 239.61601257]
[21.16878891 252.83445740]
[21.46394539 268.65292358]
[8.62957191 276.21124268]
[12.96767426 291.17178345]
[5.58877182 304.47616577]
[-8.70057869 308.51968384]
[-15.79090595 321.73812866]
[-22.88123322 334.95657349]
[-29.89396477 348.21636963]
[-36.82885742 361.51699829]
[-43.76374817 374.81765747]
[-50.69864273 388.11831665]
[-57.63353348 401.41894531]
[-64.56842804 414.71960449]
[-71.42524719 428.06066895]
[-78.20375061 441.44168091]
[-84.98225403 454.82272339]
[-58.51486588 485.59997559]
[-58.33903503 500.59893799]
[-58.16320419 515.59790039]
[-57.98737335 530.59686279]
[-52.45023346 540.61853027]
[-55.91382599 550.17816162]
[-52.94437027 564.88128662]
[-49.97491074 579.58441162]
[-35.80871964 585.91674805]
[-28.09928894 599.38317871]
[-29.81105232 614.80554199]
[-40.28580093 626.25366211]
[-55.49578476 629.32550049]
[-69.59245300 622.83984375]
[-77.15534210 609.29058838]
[-75.27637482 593.88769531]
[-64.67805481 582.55389404]
[-67.64750671 567.85076904]
[-70.61696625 553.14758301]
[-75.02733612 567.48455811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 251]
[17 250]
[18 249]
[19 248]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 52]
[32 51]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[61 247]
[62 246]
[63 245]
[65 244]
[66 243]
[67 242]
[68 241]
[69 240]
[70 239]
[72 238]
[73 237]
[74 236]
[77 233]
[79 231]
[80 230]
[81 229]
[85 228]
[86 227]
[87 226]
[88 225]
[89 224]
[90 223]
[91 222]
[98 106]
[99 105]
[100 104]
[107 185]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[115 177]
[116 171]
[117 170]
[118 169]
[120 167]
[121 166]
[122 165]
[123 164]
[124 163]
[125 162]
[126 161]
[127 160]
[128 159]
[130 158]
[131 157]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[187 218]
[188 217]
[189 216]
[190 215]
[191 214]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[198 207]
[199 206]
[200 205]
[253 266]
[254 265]
[255 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
