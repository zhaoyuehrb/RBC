%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCCGGUGGGCGUCACGUGACGGACUCAGUAGACCGCCACUGGCUGUGCACGUUAUGGGGUUUCCACCUAGGGCUCGGCCUGAGGCUUGUAACACUCCGUUUUCCCCCGAGUCACAGGGGCAGUCUUGCCCCUCGCAGCUGGGUCGCGGUGUCUCUCAAAGGUCCCCCUCUACAGGGGCUUCGUGAGGCCCGGGCCCACAGGGCGCUCGGUCCCGGAAGUGACGUCUCCCAGAGGGGCCGGAAGUGGCAGUGG\
AGGGAGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-121.67823029 210.31408691]
[-130.29391479 222.59292603]
[-138.90960693 234.87176514]
[-147.52529907 247.15060425]
[-155.99592590 259.52996826]
[-164.32029724 272.00811768]
[-172.64468384 284.48629761]
[-180.96905518 296.96447754]
[-189.29344177 309.44262695]
[-197.61781311 321.92080688]
[-205.94219971 334.39898682]
[-203.05767822 349.70639038]
[-211.67753601 362.24246216]
[-226.28860474 364.89807129]
[-234.61299133 377.37622070]
[-242.93736267 389.85440063]
[-251.18820190 402.38131714]
[-259.36517334 414.95657349]
[-261.40844727 423.82376099]
[-267.71307373 427.63088989]
[-276.03747559 440.10906982]
[-284.36184692 452.58724976]
[-282.64309692 468.53796387]
[-294.14318848 479.72399902]
[-310.04022217 477.56439209]
[-318.13937378 463.71578979]
[-312.22763062 448.80166626]
[-296.84002686 444.26284790]
[-288.51562500 431.78469849]
[-280.19125366 419.30651855]
[-271.94042969 406.77960205]
[-263.76345825 394.20434570]
[-262.75524902 386.90869141]
[-255.41554260 381.53002930]
[-247.09115601 369.05184937]
[-238.76678467 356.57369995]
[-241.92607117 342.06320190]
[-233.66172791 329.28997803]
[-218.42036438 326.07458496]
[-210.09599304 313.59643555]
[-201.77160645 301.11825562]
[-193.44723511 288.64007568]
[-185.12284851 276.16192627]
[-176.79846191 263.68374634]
[-168.47409058 251.20558167]
[-168.50549316 246.46070862]
[-165.57942200 241.63882446]
[-159.80413818 238.53491211]
[-151.18844604 226.25607300]
[-142.57275391 213.97723389]
[-133.95706177 201.69839478]
[-136.38352966 194.60174561]
[-148.38252258 203.60308838]
[-160.65118408 194.97293091]
[-156.23460388 180.63786316]
[-141.23643494 180.40847778]
[-143.66290283 173.31182861]
[-157.99276733 168.87846375]
[-172.32264709 164.44508362]
[-186.65251160 160.01171875]
[-200.98239136 155.57833862]
[-215.31225586 151.14497375]
[-229.64212036 146.71159363]
[-243.99783325 142.36260986]
[-258.37887573 138.09814453]
[-273.80929565 141.59281921]
[-283.81170654 130.55645752]
[-298.19274902 126.29199982]
[-312.62295532 122.19704437]
[-327.10037231 118.27215576]
[-341.57775879 114.34726715]
[-356.92169189 118.20405579]
[-367.18099976 107.40611267]
[-381.65841675 103.48122406]
[-396.13580322 99.55633545]
[-410.61322021 95.63144684]
[-427.48260498 97.32267761]
[-433.77764893 81.58073425]
[-420.39355469 71.17389679]
[-406.68832397 81.15404510]
[-392.21093750 85.07893372]
[-377.73352051 89.00382233]
[-363.25610352 92.92871094]
[-348.94772339 88.79118347]
[-337.65289307 99.86985779]
[-323.17547607 103.79474640]
[-308.69805908 107.71963501]
[-304.20941162 106.18121338]
[-298.70739746 107.42228699]
[-293.92828369 111.91095734]
[-279.54724121 116.17541504]
[-265.14544678 112.37571716]
[-254.11441040 123.71710205]
[-239.73336792 127.98155975]
[-232.45214844 126.87400818]
[-225.20875549 132.38172913]
[-210.87887573 136.81509399]
[-196.54901123 141.24847412]
[-182.21914673 145.68183899]
[-167.88926697 150.11521912]
[-153.55940247 154.54858398]
[-139.22952271 158.98196411]
[-124.25547791 158.10000610]
[-110.54512787 152.01507568]
[-96.83477783 145.93016052]
[-83.12442780 139.84523010]
[-69.41407776 133.76031494]
[-55.70372391 127.67539215]
[-42.02940750 121.50991821]
[-28.39160156 115.26409912]
[-14.75379372 109.01828003]
[-5.35399437 94.18188477]
[12.97481155 96.10940552]
[26.53818703 89.70355988]
[40.10156250 83.29771423]
[53.66493607 76.89186859]
[67.22830963 70.48602295]
[74.18713379 57.19787598]
[71.72737885 42.40093231]
[69.26762390 27.60398674]
[66.80786896 12.80704021]
[64.34810638 -1.98990536]
[61.88835526 -16.78685188]
[59.42859650 -31.58379745]
[48.59889984 -43.89840698]
[54.10443878 -59.34577179]
[70.28159332 -62.03496552]
[80.48868561 -49.19957733]
[74.22554016 -34.04355240]
[76.68530273 -19.24660683]
[79.14505768 -4.44966125]
[81.60481262 10.34728432]
[84.06456757 25.14422989]
[86.52432251 39.94117737]
[88.98407745 54.73812103]
[102.99725342 60.08891678]
[114.69321442 50.69719696]
[126.38918304 41.30547714]
[125.34974670 24.40680313]
[134.50727844 10.36480522]
[150.07824707 4.61757946]
[165.84336853 9.24901867]
[177.42802429 -0.27966541]
[189.01268005 -9.80834961]
[200.59732056 -19.33703423]
[212.18197632 -28.86571693]
[223.76663208 -38.39440155]
[228.38557434 -46.23448944]
[235.54411316 -47.96607971]
[247.24006653 -57.35779953]
[258.93603516 -66.74951935]
[263.64691162 -74.53471375]
[270.82531738 -76.18196106]
[282.63098145 -85.43541718]
[294.43664551 -94.68886566]
[306.24230957 -103.94232178]
[318.04794312 -113.19577789]
[316.52053833 -126.87516785]
[321.90090942 -139.42686462]
[332.68908691 -147.62242126]
[346.00949097 -149.41137695]
[358.37710571 -144.43331909]
[370.29083252 -153.54724121]
[382.20452881 -162.66114807]
[394.11825562 -171.77505493]
[406.03198242 -180.88896179]
[417.94567871 -190.00286865]
[429.85940552 -199.11677551]
[429.34143066 -214.62519836]
[438.06585693 -227.45735168]
[452.67797852 -232.67900085]
[467.55914307 -228.28230286]
[476.98721313 -215.95790100]
[477.33691406 -200.44476318]
[468.47381592 -187.70802307]
[453.80590820 -182.64520264]
[438.97332764 -187.20306396]
[427.05960083 -178.08915710]
[415.14587402 -168.97525024]
[403.23217773 -159.86132812]
[391.31845093 -150.74742126]
[379.40472412 -141.63351440]
[367.49102783 -132.51960754]
[368.41555786 -116.11429596]
[359.27755737 -102.25849915]
[343.52081299 -96.53459167]
[327.30142212 -101.39012146]
[315.49575806 -92.13666534]
[303.69009399 -82.88320923]
[291.88442993 -73.62975311]
[280.07876587 -64.37630463]
[268.32775879 -55.05355072]
[256.63180542 -45.66183472]
[244.93582153 -36.27011490]
[233.29531860 -26.80974770]
[221.71066284 -17.28106499]
[210.12600708 -7.75238037]
[198.54135132 1.77630353]
[186.95671082 11.30498791]
[175.37205505 20.83367157]
[177.40681458 34.00934601]
[172.63523865 46.57380295]
[162.20085144 55.21529770]
[148.75440979 57.59999084]
[135.78089905 53.00144196]
[124.08493805 62.39316177]
[112.38896942 71.78488159]
[124.41332245 88.49422455]
[122.28428650 106.31677246]
[134.61360168 114.86006927]
[146.94291687 123.40337372]
[159.27223206 131.94668579]
[171.60153198 140.48999023]
[183.93084717 149.03329468]
[196.26016235 157.57658386]
[208.58947754 166.11988831]
[221.06764221 174.44427490]
[233.69078064 182.54713440]
[249.48384094 183.49060059]
[256.01477051 196.87701416]
[268.63790894 204.97987366]
[284.02386475 201.36772156]
[297.41336060 209.76396179]
[300.86264038 225.18725586]
[292.32531738 238.48724365]
[276.86642456 241.77326965]
[263.65744019 233.09579468]
[260.53503418 217.60301208]
[247.91189575 209.50015259]
[233.02174377 209.13626099]
[225.58792114 195.17027283]
[212.96478271 187.06741333]
[209.49076843 187.43974304]
[205.66360474 186.16903687]
[202.24798584 183.10723877]
[200.04617310 178.44920349]
[187.71685791 169.90589905]
[175.38754272 161.36259460]
[163.05824280 152.81929016]
[150.72892761 144.27598572]
[138.39961243 135.73269653]
[126.07029724 127.18938446]
[113.74098206 118.64608002]
[92.85538483 124.70073700]
[73.67494965 110.28882599]
[73.63415527 84.04939270]
[60.07078171 90.45524597]
[46.50740814 96.86109161]
[32.94403458 103.26693726]
[19.38065910 109.67278290]
[14.31499100 121.51029205]
[2.91367602 126.57466888]
[-8.50797749 122.65608978]
[-22.14578438 128.90190125]
[-35.78359222 135.14772034]
[-42.25552368 141.54426575]
[-49.61880112 141.38574219]
[-63.32915115 147.47065735]
[-77.03950500 153.55558777]
[-90.74985504 159.64050293]
[-104.46020508 165.72543335]
[-118.17055511 171.81034851]
[-114.95632172 176.37713623]
[-112.88501740 182.16011047]
[-112.30319977 188.86132812]
[-113.47971344 196.09590149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[14 36]
[15 35]
[16 34]
[17 32]
[18 31]
[20 30]
[21 29]
[22 28]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 94]
[65 93]
[67 91]
[68 90]
[69 87]
[70 86]
[71 85]
[73 83]
[74 82]
[75 81]
[76 80]
[103 262]
[104 261]
[105 260]
[106 259]
[107 258]
[108 257]
[109 255]
[110 254]
[111 253]
[113 250]
[114 249]
[115 248]
[116 247]
[117 246]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[136 207]
[137 206]
[138 205]
[142 200]
[143 199]
[144 198]
[145 197]
[146 196]
[147 195]
[149 194]
[150 193]
[151 192]
[153 191]
[154 190]
[155 189]
[156 188]
[157 187]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[209 243]
[210 242]
[211 241]
[212 240]
[213 239]
[214 238]
[215 237]
[216 236]
[217 232]
[218 231]
[220 229]
[221 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
