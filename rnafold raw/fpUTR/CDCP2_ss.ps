%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGAGUUCCUUCCCUUCCUGAUAGUGUGGUCGGUGCAGAUCUCAGAACGUGUAAACCUGGUGACACCAGAUCCGUCACUUUACACCUCACCUCUCUUUCCCUUGCUCCGGACCCUGAGAUCCUGGCCUACCUGAGCUCGGCAGACCUGUGGGGGCCCCUGGUGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[104.37117004 123.16584015]
[95.55870056 122.51628113]
[87.83993530 118.72339630]
[75.91869354 127.82746887]
[63.99745560 136.93153381]
[52.07621765 146.03559875]
[40.15497589 155.13966370]
[33.88336182 169.66473389]
[19.07231140 171.24018860]
[7.15107155 180.34425354]
[9.01080799 195.52610779]
[3.06101656 209.50811768]
[-9.00827122 218.57446289]
[-23.89554405 220.37031555]
[-37.59061432 214.51280212]
[-49.51185608 223.61686707]
[-51.74758148 239.03240967]
[-63.96710205 248.09541321]
[-78.64969635 245.86898804]
[-90.57093811 254.97305298]
[-89.22016907 270.34118652]
[-96.41268921 283.98928833]
[-109.85338593 291.56234741]
[-125.25337982 290.64382935]
[-137.69859314 281.52679443]
[-143.21780396 267.12048340]
[-140.04985046 252.02188110]
[-129.20561218 241.04891968]
[-114.14544678 237.70300293]
[-99.67500305 243.05181885]
[-87.75376892 233.94775391]
[-86.03642273 219.19694519]
[-74.07628632 209.79429626]
[-58.61592102 211.69561768]
[-46.69468307 202.59155273]
[-48.74032974 187.83753967]
[-43.08870697 173.94815063]
[-31.16488266 164.69132996]
[-16.10975647 162.63220215]
[-1.95299697 168.42301941]
[9.96824169 159.31893921]
[15.38717079 145.44506836]
[31.05090904 143.21842957]
[42.97214890 134.11436462]
[54.89338684 125.01029205]
[66.81462860 115.90622711]
[78.73586273 106.80215454]
[76.78684235 96.90558624]
[79.42553711 86.67709351]
[86.52925110 78.22573853]
[97.01885986 73.46978760]
[88.47174072 61.14311981]
[79.92461395 48.81645584]
[71.37749481 36.48978806]
[62.83037567 24.16312027]
[54.28325653 11.83645248]
[50.21051025 10.09661388]
[47.22379684 7.40777254]
[45.48942184 4.23566723]
[45.00252533 1.05176318]
[45.60045624 -1.72398746]
[37.98144531 -14.64492702]
[30.36243629 -27.56586647]
[22.74342537 -40.48680496]
[15.12441444 -53.40774536]
[7.50540352 -66.32868195]
[-7.91418552 -66.81839752]
[-20.60823822 -75.58564758]
[-26.52612686 -89.83282471]
[-23.77947617 -105.01371765]
[-13.24473190 -116.28414917]
[1.71650755 -120.04777527]
[16.33016396 -115.10363007]
[25.93307495 -103.02937317]
[27.46098518 -87.67785645]
[20.42634201 -73.94769287]
[28.04535294 -61.02675629]
[35.66436386 -48.10581589]
[43.28337479 -35.18487549]
[50.90238571 -22.26393700]
[58.52139664 -9.34299850]
[66.60992432 3.28933144]
[75.15704346 15.61599922]
[83.70416260 27.94266510]
[92.25128174 40.26933289]
[100.79840851 52.59600067]
[109.34552765 64.92266846]
[122.72933960 71.69567108]
[137.72364807 71.28235626]
[152.71795654 70.86904144]
[167.71224976 70.45571899]
[182.70655823 70.04240417]
[197.70086670 69.62908936]
[202.24418640 57.17752457]
[210.73709106 47.04310226]
[222.14680481 40.42426300]
[235.09738159 38.09400177]
[248.03559875 40.30965042]
[259.41723633 46.78464508]
[267.89144897 56.72538757]
[272.46096802 68.92845917]
[287.46032715 69.06624603]
[302.45968628 69.20403290]
[317.45907593 69.34181976]
[332.45843506 69.47960663]
[347.45779419 69.61739349]
[362.45715332 69.75518036]
[369.80035400 61.66625977]
[380.17532349 59.02929688]
[390.07406616 62.48548126]
[396.28637695 70.65688324]
[411.27056885 71.34558868]
[421.63235474 57.99959183]
[437.74349976 53.49053574]
[453.21755981 59.40065765]
[462.04214478 73.22211456]
[477.03643799 73.63542938]
[492.03073120 74.04875183]
[507.02505493 74.46206665]
[522.01934814 74.87538147]
[536.02746582 67.52127075]
[548.53674316 75.60632324]
[563.53100586 76.01963806]
[573.44085693 67.72507477]
[585.94439697 68.40008545]
[594.34643555 77.13558197]
[609.33062744 77.82428741]
[623.63751221 69.80901337]
[637.59216309 78.42293549]
[636.83923340 94.80478668]
[622.15325928 102.10232544]
[608.64190674 92.80846405]
[593.65771484 92.11976624]
[578.55346680 101.02251434]
[563.11773682 91.01394653]
[548.12341309 90.60063171]
[535.18774414 97.98429871]
[521.60601807 89.86968231]
[506.61172485 89.45636749]
[491.61743164 89.04305267]
[476.62310791 88.62973785]
[461.62881470 88.21642303]
[454.48883057 99.52236176]
[442.59478760 105.86627960]
[429.01144409 105.49199677]
[417.29943848 98.39038849]
[410.58187866 86.32977295]
[395.59768677 85.64106750]
[379.16213989 95.78533936]
[362.31936646 84.75454712]
[347.32000732 84.61676025]
[332.32064819 84.47897339]
[317.32128906 84.34118652]
[302.32189941 84.20339966]
[287.32254028 84.06561279]
[272.32318115 83.92782593]
[265.31872559 99.26778412]
[252.28311157 110.05268860]
[235.79547119 114.08624268]
[219.14527893 110.51414490]
[205.67610168 100.00447845]
[198.11418152 84.62339783]
[183.11987305 85.03671265]
[168.12556458 85.45002747]
[153.13127136 85.86334229]
[138.13696289 86.27665710]
[123.14265442 86.68997192]
[125.81507111 96.34403992]
[124.71537018 106.06294250]
[120.17734528 114.45988464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 47]
[4 46]
[5 45]
[6 44]
[7 43]
[9 41]
[10 40]
[15 35]
[16 34]
[19 31]
[20 30]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[88 167]
[89 166]
[90 165]
[91 164]
[92 163]
[93 162]
[101 156]
[102 155]
[103 154]
[104 153]
[105 152]
[106 151]
[107 150]
[111 148]
[112 147]
[116 142]
[117 141]
[118 140]
[119 139]
[120 138]
[122 136]
[123 135]
[126 133]
[127 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
