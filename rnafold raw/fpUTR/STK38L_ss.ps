%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCGAGAAGCCGAGGAGGCAAGGCUCGCGAGAGUUCAGGGAGGCCGCCCUGAGAUUCCGGCGAGGCCGCGGGUCCCACCUCCCGGGGGCGGGGCGAGGGCGGAGCGGGGAGAAGGGAGCUGACGGGCGCCCGGCCGGCUGCGGUCCGUGCGGAGGCUGAGCCGGCCGCGGGCGCGACCGGAGGCAGUUUCCGUUACU\
) } def
/len { sequence length } bind def

/coor [
[191.72717285 126.29211426]
[176.99285889 123.48139191]
[169.82701111 125.31772614]
[162.04998779 120.50907135]
[147.36164856 117.46726227]
[132.67330933 114.42545319]
[128.65211487 124.49387360]
[121.47357178 133.35963440]
[111.52621460 140.02551270]
[99.51299286 143.62802124]
[86.40347290 143.53564453]
[79.17716980 156.68023682]
[71.95086670 169.82484436]
[75.02793884 185.57003784]
[64.52702332 197.69892883]
[48.50351334 196.90728760]
[39.24927902 183.80238342]
[43.86337280 168.43716431]
[58.80626297 162.59852600]
[66.03256989 149.45393372]
[73.25887299 136.30932617]
[69.04325104 130.10623169]
[56.63689804 138.53727722]
[48.20605850 126.13078308]
[60.61199570 117.70001984]
[56.39636993 111.49691772]
[41.51465225 113.37691498]
[26.63293076 115.25691223]
[11.75121021 117.13690948]
[-3.13051033 119.01690674]
[-12.81039810 131.22090149]
[-27.92935944 132.91549683]
[-39.50435257 123.61199188]
[-54.38607407 125.49198914]
[-69.26779175 127.37199402]
[-84.14951324 129.25198364]
[-99.01600647 131.24880981]
[-113.86636353 133.36231995]
[-128.71672058 135.47584534]
[-143.56707764 137.58937073]
[-158.41743469 139.70288086]
[-173.26777649 141.81640625]
[-182.55537415 154.60374451]
[-198.17758179 156.99589539]
[-210.86601257 147.57362366]
[-213.09286499 131.92700195]
[-203.53695679 119.33889008]
[-187.86767578 117.27759552]
[-175.38130188 126.96604919]
[-160.53094482 124.85253143]
[-145.68058777 122.73900604]
[-130.83023071 120.62548828]
[-115.97988129 118.51197052]
[-101.12952423 116.39845276]
[-94.94483948 112.33998871]
[-86.02951050 114.37026978]
[-71.14778900 112.49027252]
[-56.26607132 110.61026764]
[-41.38434982 108.73027039]
[-32.48669434 96.84047699]
[-17.42129517 94.72189331]
[-5.01050901 104.13518524]
[9.87121201 102.25518799]
[24.75293159 100.37519073]
[39.63465118 98.49519348]
[54.51637268 96.61519623]
[64.25376129 80.61791992]
[78.34569550 71.59701538]
[71.95900726 58.02461243]
[65.57231140 44.45220566]
[59.18562698 30.87979889]
[41.13359833 25.15484810]
[33.12747574 8.34517384]
[39.82537842 -8.68472672]
[33.01552200 -22.04982376]
[26.20566368 -35.41492081]
[19.39580727 -48.78002167]
[12.58594894 -62.14511871]
[-0.57318276 -70.92849731]
[0.54274172 -85.78124237]
[-6.26711559 -99.14633942]
[-13.07697296 -112.51143646]
[-19.88683128 -125.87653351]
[-32.46497345 -137.24432373]
[-25.02341843 -152.47782898]
[-8.32522011 -149.54414368]
[-6.52173281 -132.68640137]
[0.28812462 -119.32129669]
[7.09798193 -105.95619965]
[13.90783978 -92.59110260]
[26.57988548 -84.76367950]
[25.95104790 -68.95497894]
[32.76090622 -55.58987808]
[39.57076263 -42.22478104]
[46.38061905 -28.85968208]
[53.19047546 -15.49458408]
[64.55758667 -14.40219879]
[74.08207703 -7.88746500]
[79.32910156 2.52448153]
[78.88990784 14.29553986]
[72.75803375 24.49311066]
[79.14472198 38.06551743]
[85.53141022 51.63792038]
[91.91809845 65.21032715]
[112.88127136 66.68766785]
[129.38484192 79.69802856]
[135.71511841 99.73710632]
[150.40345764 102.77891541]
[165.09179688 105.82072449]
[179.80357361 108.74708557]
[194.53788757 111.55780029]
[209.78018188 100.31845093]
[228.08537292 103.72183990]
[237.92593384 119.15048218]
[252.74125671 121.49699402]
[267.58190918 116.01377869]
[278.94210815 125.64680481]
[293.75741577 127.99331665]
[308.57275391 130.33984375]
[323.45446777 132.21983337]
[338.38790894 133.63145447]
[353.32131958 135.04309082]
[365.43029785 125.24459839]
[380.55480957 126.88892365]
[389.82156372 138.49337769]
[404.75497437 139.90499878]
[419.68841553 141.31661987]
[434.64218140 142.49351501]
[449.61257935 143.43536377]
[464.58297729 144.37722778]
[479.55337524 145.31907654]
[494.52377319 146.26094055]
[509.49417114 147.20278931]
[524.47753906 147.90939331]
[539.47015381 148.38055420]
[554.46270752 148.85171509]
[569.45532227 149.32287598]
[584.44793701 149.79403687]
[599.44049072 150.26519775]
[614.43310547 150.73635864]
[629.42572021 151.20751953]
[638.11041260 148.34724426]
[644.64959717 151.80566406]
[659.63293457 152.51226807]
[674.61627197 153.21885681]
[689.59960938 153.92546082]
[704.58300781 154.63206482]
[719.57141113 155.22094727]
[732.20355225 145.33108521]
[747.77777100 149.18107605]
[754.34692383 163.81752014]
[746.87170410 178.01260376]
[731.08642578 180.87707520]
[719.10028076 170.21354675]
[712.30987549 173.14825439]
[703.87640381 169.61540222]
[688.89306641 168.90881348]
[673.90966797 168.20220947]
[658.92633057 167.49562073]
[643.94299316 166.78901672]
[628.95452881 166.20011902]
[613.96197510 165.72895813]
[598.96936035 165.25779724]
[583.97674561 164.78663635]
[568.98419189 164.31547546]
[553.99157715 163.84431458]
[538.99896240 163.37315369]
[524.00634766 162.90199280]
[519.96777344 165.46650696]
[514.27368164 165.51513672]
[508.55233765 162.17320251]
[493.58190918 161.23133850]
[478.61151123 160.28947449]
[463.64111328 159.34762573]
[448.67071533 158.40576172]
[433.70031738 157.46391296]
[429.58319092 159.90029907]
[423.89038086 159.77005005]
[418.27679443 156.25004578]
[403.34335327 154.83842468]
[388.40994263 153.42680359]
[377.13287354 163.08929443]
[361.96813965 161.87043762]
[351.90969849 149.97651672]
[336.97628784 148.56489563]
[322.04284668 147.15325928]
[319.79568481 148.84324646]
[316.74075317 149.74084473]
[313.17800903 149.53280640]
[309.51547241 148.02069092]
[306.22622681 145.15516663]
[291.41091919 142.80863953]
[276.59558105 140.46212769]
[262.81463623 146.11318970]
[250.39472961 136.31231689]
[235.57940674 133.96580505]
[228.01423645 142.51989746]
[217.14533997 146.39611816]
[205.63778687 144.52105713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[4 109]
[5 108]
[6 107]
[11 21]
[12 20]
[13 19]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[33 59]
[34 58]
[35 57]
[36 56]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[68 104]
[69 103]
[70 102]
[71 101]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[80 90]
[81 89]
[82 88]
[83 87]
[114 196]
[115 195]
[117 193]
[118 192]
[119 191]
[120 186]
[121 185]
[122 184]
[125 181]
[126 180]
[127 179]
[128 176]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
