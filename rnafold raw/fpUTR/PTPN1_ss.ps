%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCUGCUUCAGGGGCGGAGCCCCUGGCAGGCGUGAUGCGUAGUUCCGGCUGCCGGUUGACAUGAAGAAGCAGCAGCGGCUAGGGCGGCGGUAGCUGCAGGGGUCGGGGAUUGCAGCGGGCCUCGGGGCUAAGAGCGCGACGCGGCCUAGAGCGGCAGACGGCGCAGUGGGCCGAGAAGGAGGCGCAGCAGCCGCCCUGGCCCGUC\
) } def
/len { sequence length } bind def

/coor [
[-264.71603394 242.66485596]
[-270.33035278 238.30334473]
[-284.27365112 243.83364868]
[-294.24902344 256.11380005]
[-308.93234253 253.61395264]
[-322.87564087 259.14422607]
[-336.81896973 264.67453003]
[-350.76226807 270.20483398]
[-364.70556641 275.73510742]
[-378.64889526 281.26541138]
[-392.59219360 286.79571533]
[-404.18734741 296.31161499]
[-412.33157349 308.90808105]
[-420.47583008 321.50457764]
[-428.62005615 334.10107422]
[-436.76428223 346.69754028]
[-444.90850830 359.29403687]
[-448.43084717 375.87805176]
[-465.34182739 377.08428955]
[-471.18234253 361.16809082]
[-457.50500488 351.14981079]
[-449.36077881 338.55331421]
[-441.21652222 325.95681763]
[-433.07229614 313.36035156]
[-424.92807007 300.76385498]
[-416.78384399 288.16735840]
[-426.03460693 276.35961914]
[-440.21411133 281.25265503]
[-454.39361572 286.14569092]
[-468.57312012 291.03875732]
[-482.75259399 295.93179321]
[-493.27398682 307.74749756]
[-507.82897949 304.58511353]
[-522.00848389 309.47814941]
[-529.10192871 315.23706055]
[-536.43927002 314.33627319]
[-550.69104004 319.01458740]
[-555.31311035 333.82730103]
[-567.77917480 343.06719971]
[-583.29583740 343.18142700]
[-595.89660645 334.12600708]
[-600.73620605 319.38293457]
[-595.95367432 304.62124634]
[-583.38812256 295.51708984]
[-567.87115479 295.57122803]
[-555.36938477 304.76281738]
[-541.11755371 300.08447266]
[-526.90155029 295.29864502]
[-512.72204590 290.40560913]
[-503.21487427 278.93988037]
[-487.64566040 281.75228882]
[-473.46615601 276.85925293]
[-459.28665161 271.96621704]
[-445.10714722 267.07315063]
[-430.92764282 262.18011475]
[-445.71719360 259.67614746]
[-452.23159790 246.16458130]
[-452.82412720 231.17630005]
[-447.39669800 217.19262695]
[-436.84780884 206.52861023]
[-422.92388916 200.94969177]
[-407.93005371 201.37948608]
[-394.34857178 207.74682617]
[-384.42785645 218.99760437]
[-379.81036377 233.26921082]
[-381.26049805 248.19894409]
[-388.53744507 261.31433105]
[-398.12249756 272.85238647]
[-384.17916870 267.32211304]
[-370.23587036 261.79180908]
[-356.29254150 256.26150513]
[-342.34924316 250.73123169]
[-328.40594482 245.20092773]
[-314.46261597 239.67063904]
[-305.48458862 227.78602600]
[-289.80395508 229.89033508]
[-275.86062622 224.36004639]
[-263.90960693 205.35403442]
[-240.99081421 208.92208862]
[-227.50450134 202.35557556]
[-214.01817322 195.78906250]
[-200.53186035 189.22254944]
[-187.04553223 182.65603638]
[-173.55920410 176.08952332]
[-160.07289124 169.52299500]
[-146.58656311 162.95648193]
[-133.10025024 156.38996887]
[-119.61392212 149.82345581]
[-106.12760162 143.25694275]
[-92.64128113 136.69042969]
[-84.58547974 124.16232300]
[-68.79077148 125.07756805]
[-55.30444717 118.51104736]
[-52.99885559 101.95924377]
[-36.66582108 90.89997101]
[-35.53411102 75.94271851]
[-34.40240097 60.98547363]
[-33.27069473 46.02822876]
[-32.13898468 31.07098198]
[-31.00727463 16.11373520]
[-29.87556458 1.15648770]
[-42.60452652 -7.43822813]
[-49.31634140 -21.25297165]
[-48.20556259 -36.57164383]
[-39.57099152 -49.27360153]
[-25.73527718 -55.94208145]
[-10.42016220 -54.78329468]
[2.25466824 -46.10894775]
[8.87974644 -32.25240326]
[7.67295980 -16.94099236]
[-1.04107213 -4.29341507]
[-14.91831779 2.28819704]
[-16.05002785 17.24544334]
[-17.18173599 32.20269012]
[-18.31344604 47.15993881]
[-19.44515610 62.11718369]
[-20.57686424 77.07443237]
[-21.70857430 92.03167725]
[-11.02217579 102.55787659]
[0.95265353 93.70052338]
[15.39641476 100.15717316]
[30.33486366 98.79969025]
[45.27331161 97.44220734]
[60.21176147 96.08472443]
[75.15020752 94.72724152]
[85.63923645 71.50611115]
[115.94479370 65.05217743]
[121.59253693 50.27335739]
[136.32312012 48.06896973]
[147.84608459 38.46577835]
[159.36903381 28.86258507]
[167.66567993 14.07738590]
[184.16979980 17.95683861]
[185.01075745 34.88991547]
[168.97222900 40.38554764]
[157.44926453 49.98874283]
[145.92630005 59.59193420]
[141.10276794 73.68386841]
[125.54798889 76.57514191]
[127.72512054 83.75219727]
[142.07929993 79.39816284]
[146.43309021 93.75241089]
[132.07939148 98.10630035]
[134.25653076 105.28335571]
[149.17277527 106.86630249]
[164.08901978 108.44924927]
[179.00524902 110.03219604]
[193.92149353 111.61514282]
[208.83773804 113.19808960]
[223.75398254 114.78103638]
[235.97463989 105.12219238]
[251.07928467 106.94001770]
[260.21218872 118.65007019]
[275.12844849 120.23301697]
[290.04467773 121.81596375]
[304.58432007 115.57820129]
[316.42401123 124.61540222]
[331.18432617 117.46945190]
[344.59927368 126.90192413]
[342.86868286 143.20950317]
[327.77282715 149.61634827]
[314.84106445 139.53164673]
[301.36834717 145.88262939]
[288.46173096 136.73220825]
[273.54550171 135.14926147]
[258.62924194 133.56631470]
[247.24203491 143.09872437]
[232.09228516 141.70587158]
[222.17103577 129.69728088]
[207.25479126 128.11433411]
[192.33854675 126.53138733]
[177.42230225 124.94844055]
[162.50605774 123.36549377]
[147.58982849 121.78254700]
[132.67358398 120.19959259]
[121.95879364 128.83590698]
[109.56674194 132.70613098]
[97.39628601 131.80178833]
[87.11914825 126.80559540]
[79.95055389 118.92625427]
[76.50769043 109.66568756]
[61.56924438 111.02317047]
[46.63079453 112.38065338]
[31.69234657 113.73813629]
[16.75389862 115.09561920]
[3.71057057 124.05007172]
[-9.66469288 117.49633026]
[-26.83270836 138.37715149]
[-48.73793411 131.99737549]
[-62.22425461 138.56388855]
[-71.24468231 151.56167603]
[-86.07476807 150.17674255]
[-99.56108856 156.74325562]
[-113.04740906 163.30976868]
[-126.53372955 169.87629700]
[-140.02005005 176.44281006]
[-153.50637817 183.00932312]
[-166.99269104 189.57583618]
[-180.47901917 196.14234924]
[-193.96533203 202.70886230]
[-207.45166016 209.27539062]
[-220.93798828 215.84190369]
[-234.42430115 222.40841675]
[-235.22312927 229.88374329]
[-238.53434753 236.55723572]
[-243.90472412 241.62167358]
[-250.63545227 244.48291016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 77]
[3 76]
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[33 49]
[34 48]
[36 47]
[37 46]
[79 203]
[80 202]
[81 201]
[82 200]
[83 199]
[84 198]
[85 197]
[86 196]
[87 195]
[88 194]
[89 193]
[90 192]
[92 190]
[93 189]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[119 187]
[121 185]
[122 184]
[123 183]
[124 182]
[125 181]
[127 139]
[129 137]
[130 136]
[131 135]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[153 166]
[154 165]
[155 164]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
