%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGCAGAAUGAGUCCUCCCACCCCCUACCCUGCCACCCCUCCCACCCAAGCCACCUCAUUUCCUCUUCCUCCCCAGCACCGACCCACACUGACCAACACAGGCUGAGCAGUCAGGCCCACAGCAUCUGACCCCAGGCCCAGCUCGUCCUGGCUGGCCUGGGUCGGCCUCUGGAGU\
) } def
/len { sequence length } bind def

/coor [
[-180.76626587 245.12792969]
[-195.48597717 248.01409912]
[-207.54489136 239.09318542]
[-209.09211731 224.17359924]
[-218.82376099 235.58828735]
[-228.55541992 247.00297546]
[-238.28707886 258.41766357]
[-248.01872253 269.83233643]
[-239.32817078 282.15811157]
[-233.97671509 296.25820923]
[-232.30075073 311.24627686]
[-234.40563965 326.18014526]
[-240.15907288 340.12106323]
[-249.19935608 352.19265747]
[-260.95825195 361.63616943]
[-274.69653320 367.85791016]
[-289.55062866 370.46679688]
[-304.58682251 369.29885864]
[-318.85989380 364.42745972]
[-331.47262573 356.15884399]
[-341.63217163 345.01281738]
[-348.69992065 331.68997192]
[-352.23153687 317.02783203]
[-352.00509644 301.94805908]
[-348.03475952 287.39859009]
[-340.57012939 274.29400635]
[-330.08044434 263.45806885]
[-317.22512817 255.57192993]
[-302.81219482 251.13134766]
[-287.74774170 250.41543579]
[-272.97866821 253.46919250]
[-259.43341064 260.10067749]
[-249.70175171 248.68600464]
[-239.97010803 237.27131653]
[-230.23844910 225.85662842]
[-220.50680542 214.44195557]
[-234.58128357 219.62933350]
[-249.32981873 222.36445618]
[-264.32843018 222.56867981]
[-279.14596558 220.23612976]
[-293.35644531 215.43386841]
[-306.55142212 208.29994202]
[-318.35153198 199.03944397]
[-328.41760254 187.91854858]
[-336.46026611 175.25695801]
[-342.24829102 161.41865540]
[-345.61532593 146.80143738]
[-346.46456909 131.82550049]
[-344.77160645 116.92134094]
[-340.58508301 102.51741028]
[-334.02539062 89.02777100]
[-325.28106689 76.84020996]
[-314.60348511 66.30506134]
[-302.29959106 57.72518158]
[-288.72308350 51.34721756]
[-274.26425171 47.35450363]
[-259.33868408 45.86182404]
[-244.37550354 46.91208649]
[-229.80482483 50.47509384]
[-216.04548645 56.44843292]
[-203.49304199 64.66037750]
[-192.50831604 74.87487793]
[-183.40710449 86.79829407]
[-176.45100403 100.08786774]
[-171.84001160 114.36157227]
[-169.70664978 129.20909119]
[-170.11225891 144.20359802]
[-173.04516602 158.91407776]
[-178.42108154 172.91763306]
[-186.08544922 185.81172180]
[-195.82147217 197.22914124]
[-181.74630737 192.04359436]
[-167.67115784 186.85804749]
[-153.59599304 181.67250061]
[-147.60687256 168.08331299]
[-133.40652466 162.62393188]
[-119.19354248 168.99801636]
[-105.11838531 163.81246948]
[-99.75308228 152.94979858]
[-88.04483795 148.52447510]
[-76.09305573 153.42616272]
[-61.92856979 148.48982239]
[-47.76408386 143.55349731]
[-33.59959793 138.61715698]
[-19.43511581 133.68083191]
[-5.27063084 128.74449158]
[8.89385319 123.80815887]
[23.05833817 118.87182617]
[29.28635788 105.39045715]
[43.58083725 100.18253326]
[57.67911148 106.80645752]
[71.84359741 101.87012482]
[86.00807953 96.93379211]
[95.28614807 86.47391510]
[109.05558777 88.90172577]
[123.22006989 83.96538544]
[137.38455200 79.02905273]
[144.31227112 65.07755280]
[158.74739075 60.27318954]
[172.00532532 66.96369171]
[186.16981506 62.02735901]
[196.65504456 50.17955017]
[211.21965027 53.29747009]
[225.38414001 48.36113739]
[239.54861450 43.42480469]
[253.71310425 38.48847198]
[267.87759399 33.55213928]
[278.36282349 21.70433044]
[292.92742920 24.82225227]
[307.09191895 19.88591766]
[320.38241577 1.86271644]
[341.49655151 6.57327080]
[355.27755737 0.65008581]
[369.05856323 -5.27309895]
[382.83953857 -11.19628334]
[396.62054443 -17.11946869]
[410.29486084 -23.28494453]
[423.85824585 -29.69079018]
[430.60308838 -44.24711990]
[446.22253418 -47.90937805]
[458.73468018 -37.86819839]
[458.54129028 -21.82631111]
[445.79071045 -12.08968067]
[430.26406860 -16.12741661]
[416.70071411 -9.72157001]
[414.26721191 -5.58032036]
[409.19201660 -2.93973660]
[402.54373169 -3.33847141]
[388.76272583 2.58471322]
[374.98175049 8.50789833]
[361.20074463 14.43108273]
[347.41973877 20.35426712]
[346.11584473 28.19048309]
[341.75509644 34.94293594]
[334.99249268 39.45970154]
[326.89941406 40.93524551]
[318.79443359 39.05317688]
[312.02822876 34.05040359]
[297.86376953 38.98673630]
[288.39166260 50.48146439]
[272.81393433 47.71662140]
[258.64944458 52.65295410]
[244.48495483 57.58928680]
[230.32046509 62.52562332]
[216.15599060 67.46195221]
[206.68389893 78.95668030]
[191.10614014 76.19184113]
[176.94166565 81.12817383]
[170.71363831 94.60954285]
[156.41915894 99.81746674]
[142.32089233 93.19354248]
[128.15640259 98.12987518]
[113.99192047 103.06620789]
[104.71385193 113.52608490]
[90.94441223 111.09827423]
[76.77993011 116.03461456]
[62.61544800 120.97094727]
[55.68772507 134.92243958]
[41.25260162 139.72680664]
[27.99467087 133.03631592]
[13.83018684 137.97264099]
[-0.33429772 142.90898132]
[-14.49878216 147.84530640]
[-28.66326714 152.78164673]
[-42.82775116 157.71797180]
[-56.99223328 162.65431213]
[-71.15672302 167.59063721]
[-82.84000397 181.80574036]
[-99.93283844 177.88763428]
[-114.00799561 183.07318115]
[-120.68841553 197.14477539]
[-135.03649902 202.20314026]
[-148.41044617 195.74766541]
[-162.48561096 200.93321228]
[-176.56076050 206.11875916]
[-190.63592529 211.30430603]
[-177.17082214 217.91423035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[71 176]
[72 175]
[73 174]
[74 173]
[77 170]
[78 169]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[86 162]
[87 161]
[88 160]
[91 157]
[92 156]
[93 155]
[95 153]
[96 152]
[97 151]
[100 148]
[101 147]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[109 139]
[110 138]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
