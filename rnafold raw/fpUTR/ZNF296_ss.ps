%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGUCAGGGCCCCAGCAGGGCGGCUCGGUCCCCUCCCAUGAGCCCCGCCCUGGUAGGCGGAGCCACGGGCCCGGCCAGCACGUGUAAGAGUUCGCGGCGGGUCGCCGCAGUCACUCACCUGAGCGCGCACGGUCCGCGCGUCCUCCGCUCGUGCGUCCUCCGCCCGCCCGCCUGCCUGCCUGCCCGCCCGCUCGCUCGCCCGGCCCGCGACUC\
) } def
/len { sequence length } bind def

/coor [
[94.48162842 337.68685913]
[79.95844269 331.88934326]
[72.60518646 318.08850098]
[75.89383698 302.80062866]
[88.27160645 293.24423218]
[88.70787048 278.25057983]
[89.14414215 263.25692749]
[79.99581909 248.27922058]
[89.79781342 232.68864441]
[90.01596832 217.69021606]
[90.23413086 202.69180298]
[90.45228577 187.69338989]
[90.67044830 172.69497681]
[80.48921204 164.80096436]
[76.65527344 152.29795837]
[80.78210449 139.68365479]
[91.57643890 131.63156128]
[92.01271057 116.63790894]
[79.13278198 108.94977570]
[66.14240265 116.44977570]
[53.15202332 123.94977570]
[40.16164017 131.44976807]
[27.17126083 138.94976807]
[14.29133224 146.63790894]
[1.52458203 154.51255798]
[-11.24216843 162.38720703]
[-24.00891876 170.26185608]
[-36.77566910 178.13650513]
[-49.36759567 186.28778076]
[-61.77870560 194.71182251]
[-64.50262451 210.27960205]
[-77.48464203 219.29307556]
[-93.02275848 216.40472412]
[-101.89847565 203.32812500]
[-98.84600067 187.82142639]
[-85.67630768 179.08445740]
[-70.20273590 182.30070496]
[-57.79162598 173.87667847]
[-56.77289581 170.50479126]
[-54.07250977 167.45788574]
[-49.86052704 165.51997375]
[-44.65031815 165.36975098]
[-31.88356590 157.49510193]
[-19.11681747 149.62045288]
[-6.35006666 141.74580383]
[6.41668320 133.87115479]
[8.36965466 129.51658630]
[13.07688904 126.34086609]
[19.67126083 125.95938873]
[32.66164017 118.45938873]
[45.65202332 110.95938873]
[58.64240265 103.45938873]
[71.63278198 95.95938873]
[80.59016418 83.92754364]
[84.04940033 69.33187103]
[87.50863647 54.73619843]
[90.96788025 40.14052582]
[94.42711639 25.54485130]
[97.88635254 10.94917774]
[101.34558868 -3.64649510]
[104.80483246 -18.24216843]
[108.26406860 -32.83784103]
[107.19813538 -41.90598297]
[111.88121033 -47.61988449]
[115.55236053 -62.16370392]
[114.12889099 -67.17794037]
[114.71054077 -71.77771759]
[116.80440521 -75.26934814]
[119.71388245 -77.25487518]
[124.01593018 -91.62471771]
[128.31797791 -105.99456024]
[132.62002563 -120.36440277]
[124.03712463 -135.60958862]
[129.03887939 -152.02169800]
[144.06210327 -159.58468628]
[148.15469360 -174.01557922]
[140.28126526 -184.94090271]
[140.13862610 -198.21234131]
[147.55485535 -208.98377991]
[159.63864136 -213.45088196]
[163.94068909 -227.82073975]
[168.24273682 -242.19058228]
[172.54478455 -256.56042480]
[176.84684753 -270.93026733]
[173.39251709 -286.36975098]
[184.45500183 -296.34326172]
[188.75704956 -310.71310425]
[183.33430481 -322.41323853]
[187.21061707 -334.29171753]
[197.79025269 -340.15179443]
[202.30084229 -354.45755005]
[206.81141663 -368.76330566]
[199.76890564 -382.65722656]
[204.54707336 -397.10104370]
[217.83618164 -403.72937012]
[222.34677124 -418.03512573]
[226.85736084 -432.34088135]
[231.36795044 -446.64663696]
[230.96369934 -455.76828003]
[236.04956055 -461.12680054]
[240.76773071 -475.36544800]
[245.48590088 -489.60409546]
[250.20407104 -503.84271240]
[254.92224121 -518.08135986]
[259.64041138 -532.32000732]
[264.35858154 -546.55865479]
[260.21859741 -564.50317383]
[273.77725220 -575.64703369]
[278.28784180 -589.95281982]
[282.79843140 -604.25854492]
[275.75588989 -618.15246582]
[280.53405762 -632.59625244]
[293.82318115 -639.22460938]
[298.33377075 -653.53039551]
[302.84436035 -667.83612061]
[295.32534790 -681.73724365]
[299.91815186 -696.85943604]
[313.89794922 -704.23107910]
[328.97079468 -699.47863770]
[336.19418335 -685.42163086]
[331.28265381 -670.39990234]
[317.15011597 -663.32556152]
[312.63952637 -649.01977539]
[308.12893677 -634.71405029]
[315.21286011 -621.66210938]
[310.84228516 -607.08978271]
[297.10415649 -599.74798584]
[292.59359741 -585.44219971]
[288.08300781 -571.13647461]
[293.38812256 -560.26794434]
[289.75021362 -548.31427002]
[278.59722900 -541.84045410]
[273.87905884 -527.60180664]
[269.16088867 -513.36322021]
[264.44271851 -499.12454224]
[259.72454834 -484.88592529]
[255.00636292 -470.64727783]
[250.28819275 -456.40863037]
[245.67369080 -442.13604736]
[241.16311646 -427.83029175]
[236.65252686 -413.52453613]
[232.14193726 -399.21878052]
[239.22587585 -386.16683960]
[234.85528564 -371.59451294]
[221.11717224 -364.25271606]
[216.60659790 -349.94696045]
[212.09600830 -335.64120483]
[216.81072998 -318.73574829]
[203.12689209 -306.41107178]
[198.82484436 -292.04122925]
[202.58686829 -277.62954712]
[191.21669006 -266.62820435]
[186.91462708 -252.25836182]
[182.61257935 -237.88851929]
[178.31053162 -223.51867676]
[174.00848389 -209.14883423]
[182.61535645 -194.69831848]
[178.01557922 -178.16905212]
[162.58558655 -169.92297363]
[158.49299622 -155.49208069]
[166.28417969 -145.23194885]
[166.75146484 -132.16267395]
[159.50042725 -121.04629517]
[146.98986816 -116.06235504]
[142.68782043 -101.69251251]
[138.38577271 -87.32266998]
[134.08372498 -72.95282745]
[130.09617615 -58.49255371]
[126.42502594 -43.94873428]
[122.85974121 -29.37860298]
[119.40050507 -14.78293037]
[115.94126129 -0.18725711]
[112.48202515 14.40841579]
[109.02278900 29.00408936]
[105.56355286 43.59976196]
[102.10430908 58.19543457]
[98.64507294 72.79110718]
[95.18583679 87.38677979]
[115.38821411 74.81457520]
[145.25672913 95.03579712]
[156.01646423 105.48701477]
[171.59320068 105.42916107]
[182.35621643 116.18145752]
[182.31538391 131.03184509]
[193.07511902 141.48306274]
[208.87211609 141.00262451]
[220.32456970 151.89375305]
[220.63795471 167.69494629]
[209.62635803 179.03161621]
[193.82273865 179.17791748]
[182.60311890 168.04707336]
[182.62390137 152.24279785]
[171.86416626 141.79158020]
[157.02125549 142.26432800]
[145.96046448 131.81857300]
[145.56524658 116.24675751]
[134.80551147 105.79553986]
[127.85572052 108.61519623]
[113.95615387 114.25451660]
[107.00636292 117.07418060]
[106.57009888 132.06784058]
[118.80628967 144.57214355]
[118.22273254 161.71957397]
[105.66886139 172.91314697]
[105.45069885 187.91156006]
[105.23254395 202.90997314]
[105.01438141 217.90838623]
[104.79622650 232.90679932]
[113.20549774 242.68347168]
[112.71716309 255.16886902]
[104.13780212 263.69317627]
[103.70153046 278.68682861]
[103.26525879 293.68048096]
[115.06642151 303.94042969]
[117.46060181 319.39364624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 213]
[6 212]
[7 211]
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[17 201]
[18 200]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 38]
[30 37]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[64 169]
[65 168]
[69 167]
[70 166]
[71 165]
[72 164]
[75 160]
[76 159]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[86 150]
[87 149]
[90 147]
[91 146]
[92 145]
[95 142]
[96 141]
[97 140]
[98 139]
[100 138]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[108 129]
[109 128]
[110 127]
[113 124]
[114 123]
[115 122]
[180 197]
[181 196]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
