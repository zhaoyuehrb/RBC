%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAUCCGAGAACCUUGGAGGGUGGACAGUGCCCCUUUUACAGAUGAGAAAACUGAGGCUUGAAGGGGAGAAGCAGCUGCCUCUGGCGGCAUGGCUUCUGGCUGCAGGAUGCCCAUGGAGUUCGUGGUGACCCUAGGCCUGUGUCUCGGCUUCCUUUGCUGAACUUGAACAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[123.77864838 247.85877991]
[108.86289215 246.27125549]
[98.35050201 235.57127380]
[97.02701569 220.62977600]
[105.49491882 208.24856567]
[119.89939117 204.06390381]
[133.68441772 209.98204041]
[128.25128174 196.00059509]
[122.81813812 182.01913452]
[117.38499451 168.03768921]
[111.95185089 154.05624390]
[106.51870728 140.07478333]
[91.66797638 137.96388245]
[82.55406952 149.87760925]
[73.44016266 161.79132080]
[64.32624817 173.70504761]
[62.74736023 190.02799988]
[47.71174622 196.57493591]
[34.68675613 186.61091614]
[37.07138824 170.38607788]
[52.41253281 164.59112549]
[61.52644348 152.67741394]
[70.64035034 140.76370239]
[79.75425720 128.84997559]
[77.22369385 121.78979492]
[63.51374435 127.87562561]
[53.18852234 138.75633240]
[38.51034927 135.66583252]
[33.44912338 121.54549408]
[42.82184601 109.83429718]
[57.70822525 111.67845917]
[72.16255188 107.66942596]
[69.63198853 100.60923767]
[55.02508545 97.19772339]
[40.41818237 93.78620911]
[25.81128311 90.37469482]
[11.20438099 86.96317291]
[-3.40251994 83.55165863]
[-18.00942039 80.14014435]
[-26.46163559 91.48725128]
[-38.56652832 98.72901917]
[-52.47583389 100.79827881]
[-66.08040619 97.41469574]
[-77.33007050 89.12225342]
[-84.54253387 77.20210266]
[-86.65496826 63.47472382]
[-101.92842865 67.60170746]
[-112.37671661 56.98651123]
[-126.92113495 53.31773758]
[-142.54106140 58.31275177]
[-154.49319458 47.08428192]
[-150.48220825 31.18321037]
[-134.63426208 26.96719933]
[-123.25236511 38.77331924]
[-108.70794678 42.44209290]
[-94.47480011 38.05268860]
[-82.98619843 48.93030548]
[-72.99075317 36.48045731]
[-58.51709366 29.60439873]
[-42.43544388 29.72177124]
[-27.95942497 36.85976791]
[-18.00386047 49.63758850]
[-14.59790611 65.53324890]
[0.00899509 68.94476318]
[14.61589622 72.35627747]
[29.22279739 75.76779175]
[43.82970047 79.17930603]
[58.43659973 82.59082031]
[73.04350281 86.00233459]
[84.10762787 75.87390900]
[81.99673462 61.02317810]
[79.88583374 46.17245102]
[77.77493286 31.32172203]
[75.66403961 16.47099495]
[73.55313873 1.62026739]
[60.40397644 -13.63313675]
[68.31632996 -31.25715065]
[65.68264008 -46.02413177]
[63.04895401 -60.79111099]
[60.41526794 -75.55809021]
[57.78158188 -90.32507324]
[55.14789581 -105.09204865]
[46.41446304 -119.62351990]
[57.96037674 -132.03836060]
[73.08626556 -124.38042450]
[69.91487122 -107.72573853]
[72.54856110 -92.95875549]
[75.18225098 -78.19178009]
[77.81593323 -63.42479706]
[80.44962311 -48.65781784]
[83.08330536 -33.89083862]
[91.98626709 -28.80121613]
[96.70249939 -19.44794846]
[95.45005798 -8.82653999]
[88.40386963 -0.49063009]
[90.51476288 14.36009789]
[92.62566376 29.21082497]
[94.73656464 44.06155396]
[96.84745789 58.91228104]
[98.95835876 73.76300812]
[112.22597504 80.76088715]
[125.67417908 74.11666870]
[139.12239075 67.47244263]
[152.57060242 60.82822418]
[157.45040894 48.86749268]
[168.81268311 43.61722183]
[180.32144165 47.40303421]
[193.88482666 40.99718857]
[207.44819641 34.59134293]
[216.62239075 21.70162964]
[231.43498230 23.26262665]
[236.84924316 8.65702724]
[250.69567871 2.35380292]
[264.58651733 7.60548210]
[278.14990234 1.19963551]
[291.71325684 -5.20621109]
[305.27664185 -11.61205769]
[318.84002686 -18.01790428]
[325.58486938 -32.57423401]
[341.20431519 -36.23649216]
[353.71649170 -26.19531250]
[353.52310181 -10.15342426]
[340.77249146 -0.41679361]
[325.24588013 -4.45452976]
[311.68249512 1.95131683]
[298.11911011 8.35716343]
[284.55575562 14.76301003]
[270.99237061 21.16885757]
[266.22421265 35.23300171]
[252.56025696 41.92265701]
[237.84082031 36.82600021]
[229.63676453 49.25752640]
[213.85404968 48.15471649]
[200.29066467 54.56056213]
[186.72729492 60.96641159]
[177.54283142 75.90502167]
[159.21481323 74.27643585]
[145.76661682 80.92065430]
[132.31840515 87.56487274]
[118.87019348 94.20909882]
[123.83020782 99.26300049]
[127.17034912 106.53175354]
[128.08155823 115.44194794]
[125.96250916 125.15509033]
[120.50015259 134.64164734]
[125.93329620 148.62309265]
[131.36643982 162.60453796]
[136.79959106 176.58599854]
[142.23272705 190.56744385]
[147.66587830 204.54888916]
[153.95178223 218.16827393]
[161.06646729 231.37361145]
[168.18115234 244.57896423]
[175.29585266 257.78430176]
[182.41053772 270.98965454]
[189.52522278 284.19500732]
[204.77346802 286.38534546]
[215.68066406 297.01013184]
[218.21023560 311.84472656]
[211.59869385 325.16485596]
[226.94779968 328.15466309]
[236.74383545 340.34365845]
[236.36143494 355.97656250]
[225.98114014 367.67199707]
[210.50419617 369.90774536]
[197.23837280 361.62814331]
[192.44735718 346.74258423]
[198.39334106 332.27954102]
[183.63262939 330.47424316]
[172.63523865 320.20187378]
[169.76171875 305.24871826]
[176.31988525 291.30969238]
[169.20518494 278.10433960]
[162.09049988 264.89898682]
[154.97581482 251.69364929]
[147.86111450 238.48831177]
[140.74642944 225.28295898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 24]
[14 23]
[15 22]
[16 21]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[46 57]
[48 55]
[49 54]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[101 140]
[102 139]
[103 138]
[104 137]
[107 135]
[108 134]
[109 133]
[111 131]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
