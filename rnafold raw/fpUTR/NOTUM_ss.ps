%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCCGCAGCCAGCGCACCCAGACCCUGCGCUGCCCUCGGACGGCCGGGCGCGGAGCCCCAGCUGCGGAGGCCGACGGCACCCGGCCCCGAGCGCCUCGACGCCGAGCCGCGCGCGCCUUCUCCGCCAGGCCCGGCGGGCGGGAGCGGGGGCGAGGGAGCAGGAGCGGCCAGUGCCCCCGACACCCCCGGCCCGGCACCCCCGGCCCGGCAUCCCCCGCCGCCGCCGCCGCCGCCUCAAGGCCGCCCGCUCCC\
CGCAGGUGGACGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[101.87416840 283.29171753]
[85.48479462 282.72567749]
[78.02021027 268.12390137]
[87.15934753 254.50743103]
[87.67709351 239.51637268]
[88.19483185 224.52529907]
[88.71257782 209.53424072]
[89.23031616 194.54318237]
[89.74806213 179.55212402]
[79.42967987 168.87191772]
[79.74118805 153.66148376]
[91.01351929 142.91102600]
[91.53126526 127.91996002]
[77.17247009 123.58118439]
[69.30190277 136.35044861]
[61.43133545 149.11972046]
[53.56076813 161.88897705]
[45.69020081 174.65824890]
[37.81963348 187.42752075]
[44.58406448 201.29280090]
[42.75583267 216.61145020]
[32.91832733 228.49534607]
[18.21065521 233.15237427]
[3.32598424 229.09651184]
[-6.98604250 217.62194824]
[-9.43489456 202.39018250]
[-3.23915267 188.26161194]
[9.62414551 179.74462891]
[25.05036736 179.55694580]
[32.92093277 166.78767395]
[40.79150009 154.01841736]
[48.66206741 141.24914551]
[56.53263474 128.47987366]
[64.40320587 115.71061707]
[56.75421524 102.80739594]
[41.77432251 103.58381653]
[28.39314270 112.02506256]
[15.28243828 104.95691681]
[0.30254629 105.73333740]
[-14.67734623 106.50975800]
[-29.65723801 107.28617859]
[-44.63713074 108.06259918]
[-50.33095551 111.30437469]
[-55.96709442 111.22371674]
[-59.96990585 108.68048859]
[-74.96369934 109.11196136]
[-89.95749664 109.54344177]
[-104.95128632 109.97492218]
[-119.94507599 110.40639496]
[-134.93887329 110.83787537]
[-149.93266296 111.26935577]
[-163.50456238 119.40042114]
[-176.44912720 112.03242493]
[-191.44293213 112.46389771]
[-205.01481628 120.59496307]
[-217.95939636 113.22696686]
[-234.66575623 124.55059814]
[-251.23886108 114.54873657]
[-266.21875000 115.32515717]
[-281.19863892 116.10157776]
[-296.17382812 116.96417236]
[-311.14376831 117.91292572]
[-321.40048218 129.93687439]
[-337.16168213 131.10319519]
[-349.07653809 120.71993256]
[-350.07614136 104.94728851]
[-339.56750488 93.14289093]
[-323.78515625 92.31008911]
[-312.09252930 102.94295502]
[-297.12255859 101.99420929]
[-290.66992188 98.44805145]
[-281.97506714 101.12168121]
[-266.99517822 100.34526062]
[-252.01527405 99.56884003]
[-245.91601562 91.42686462]
[-236.14299011 87.89323425]
[-225.82070923 90.35308075]
[-218.39086914 98.23317719]
[-205.89143372 90.13297272]
[-191.87440491 97.47010803]
[-176.88061523 97.03862762]
[-164.38116455 88.93843079]
[-150.36413574 96.27555847]
[-135.37034607 95.84408569]
[-120.37655640 95.41260529]
[-105.38276672 94.98112488]
[-90.38896942 94.54965210]
[-75.39517975 94.11817169]
[-60.40138626 93.68669128]
[-45.41355133 93.08270264]
[-30.43365860 92.30628204]
[-15.45376587 91.52986145]
[-0.47387400 90.75344086]
[14.50601864 89.97702026]
[26.81573677 81.59131622]
[40.99790192 88.60392761]
[55.97779465 87.82750702]
[60.09510422 81.55871582]
[45.62656403 77.60127258]
[44.91947937 62.61794662]
[58.95103455 57.31554031]
[68.32972717 69.02113342]
[72.44703674 62.75233841]
[67.20874786 48.69672394]
[61.97046280 34.64110565]
[56.73217392 20.58548927]
[51.49388885 6.52987289]
[39.42443466 -3.69944239]
[42.22999954 -18.32743263]
[36.99171066 -32.38304901]
[31.75342369 -46.43866348]
[17.65688133 -53.06627274]
[12.54474068 -67.39528656]
[18.95002556 -80.79334259]
[13.71173859 -94.84896088]
[8.47345161 -108.90457916]
[2.56577086 -115.82183075]
[3.25677609 -123.15219116]
[-11.14604282 -129.65867615]
[-16.65135574 -144.47309875]
[-9.99295807 -158.80632019]
[4.87884092 -164.15470886]
[19.14086723 -157.34513855]
[24.33171272 -142.41761780]
[17.37174034 -128.22839355]
[22.52906799 -114.14286804]
[27.76735497 -100.08724976]
[33.00564194 -86.03163147]
[46.61719131 -80.09350586]
[52.12978363 -65.91373444]
[45.80904007 -51.67695236]
[51.04732895 -37.62133408]
[56.28561401 -23.56571960]
[67.98039246 -14.34175587]
[65.54950714 1.29158616]
[70.78778839 15.34720230]
[76.02607727 29.40281868]
[81.26436615 43.45843506]
[86.50265503 57.51405334]
[167.21228027 63.11061859]
[180.97790527 57.15181732]
[194.74354553 51.19301224]
[208.50917053 45.23421097]
[222.27481079 39.27540970]
[228.16387939 24.85470581]
[242.20907593 19.00773048]
[255.92071533 24.71092796]
[269.68634033 18.75212479]
[283.45199585 12.79332161]
[297.21762085 6.83451939]
[306.80850220 -5.74823666]
[321.56210327 -3.70360065]
[335.32772827 -9.66240311]
[349.09335327 -15.62120533]
[362.85897827 -21.58000755]
[372.44985962 -34.16276550]
[387.20346069 -32.11812973]
[400.96908569 -38.07693100]
[414.73474121 -44.03573227]
[428.50036621 -49.99453735]
[442.23147583 -56.03244400]
[455.92764282 -62.14925766]
[465.37307739 -74.84154510]
[480.14923096 -72.96681976]
[493.84536743 -79.08364105]
[499.56811523 -93.57115173]
[513.54510498 -99.57936859]
[527.32147217 -94.03433228]
[541.01763916 -100.15114594]
[554.71374512 -106.26795959]
[558.03643799 -119.29786682]
[568.10217285 -127.91824341]
[581.10107422 -129.16061401]
[592.27954102 -122.79517365]
[606.04516602 -128.75398254]
[619.81079102 -134.71278381]
[633.57641602 -140.67158508]
[647.34204102 -146.63038635]
[658.66064453 -163.34017944]
[677.76062012 -160.19438171]
[691.38543701 -166.46839905]
[705.01031494 -172.74241638]
[708.95520020 -187.87423706]
[721.73352051 -196.88798523]
[737.31182861 -195.52763367]
[748.33447266 -184.43550110]
[749.59692383 -168.84895325]
[740.50305176 -156.12748718]
[725.34674072 -152.27778625]
[711.28430176 -159.11755371]
[697.65948486 -152.84353638]
[684.03460693 -146.56953430]
[681.38806152 -136.74667358]
[673.62115479 -129.84202576]
[663.12243652 -128.30024719]
[653.30084229 -132.86474609]
[639.53521729 -126.90594482]
[625.76959229 -120.94714355]
[612.00396729 -114.98834229]
[598.23834229 -109.02954102]
[592.70703125 -93.12979126]
[577.07232666 -86.02644348]
[560.83056641 -92.57180786]
[547.13439941 -86.45499420]
[533.43829346 -80.33818054]
[528.37298584 -66.37830353]
[514.57025146 -59.97987366]
[499.96218872 -65.38748932]
[486.26605225 -59.27067184]
[477.80023193 -47.01589584]
[462.04446411 -48.45310593]
[448.34829712 -42.33629227]
[443.54031372 -36.76001740]
[434.45916748 -36.22890091]
[420.69354248 -30.27009964]
[406.92788696 -24.31129646]
[393.16226196 -18.35249519]
[384.55599976 -6.19595146]
[368.81777954 -7.81437445]
[355.05215454 -1.85557187]
[341.28652954 4.10323048]
[327.52090454 10.06203365]
[318.91464233 22.21857643]
[303.17642212 20.60015297]
[289.41079712 26.55895615]
[275.64514160 32.51775742]
[261.87951660 38.47656250]
[256.65390015 52.37722778]
[242.77847290 58.61639786]
[228.23361206 53.04104233]
[214.46797180 58.99984360]
[200.70234680 64.95864868]
[186.93670654 70.91744995]
[173.17108154 76.87625122]
[170.25531006 91.59013367]
[180.70823669 102.34820557]
[191.16117859 113.10626984]
[207.07780457 117.05508423]
[211.35572815 132.88642883]
[199.59417725 144.31437683]
[183.89244080 139.58283997]
[180.40310669 123.55921173]
[169.95016479 112.80113983]
[159.49723816 102.04306793]
[147.15193176 110.56442261]
[134.80772400 119.08501434]
[141.16001892 132.67353821]
[147.51232910 146.26206970]
[160.36576843 155.48703003]
[158.74636841 170.29333496]
[165.09867859 183.88186646]
[179.62829590 190.68406677]
[183.22892761 206.31784058]
[173.13847351 218.79031372]
[157.09747314 218.53366089]
[147.41120911 205.74476624]
[151.51014709 190.23417664]
[145.15783691 176.64564514]
[132.75875854 168.39263916]
[133.92379761 152.61437988]
[127.57149506 139.02584839]
[121.21918488 125.43731689]
[106.52232361 128.43769836]
[106.00458527 143.42877197]
[116.50837708 154.93128967]
[115.76975250 170.12698364]
[104.73912048 180.06985474]
[104.22138214 195.06092834]
[103.70363617 210.05198669]
[103.18589783 225.04304504]
[102.66815186 240.03410339]
[102.15041351 255.02517700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 272]
[5 271]
[6 270]
[7 269]
[8 268]
[9 267]
[12 264]
[13 263]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[35 97]
[36 96]
[38 94]
[39 93]
[40 92]
[41 91]
[42 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[51 83]
[53 81]
[54 80]
[56 78]
[58 74]
[59 73]
[60 72]
[61 70]
[62 69]
[103 139]
[104 138]
[105 137]
[106 136]
[107 135]
[109 133]
[110 132]
[111 131]
[114 128]
[115 127]
[116 126]
[118 125]
[140 234]
[141 233]
[142 232]
[143 231]
[144 230]
[147 227]
[148 226]
[149 225]
[150 224]
[152 222]
[153 221]
[154 220]
[155 219]
[157 217]
[158 216]
[159 215]
[160 214]
[161 212]
[162 211]
[164 209]
[165 208]
[168 205]
[169 204]
[170 203]
[174 200]
[175 199]
[176 198]
[177 197]
[178 196]
[180 192]
[181 191]
[182 190]
[235 244]
[236 243]
[237 242]
[246 262]
[247 261]
[248 260]
[250 258]
[251 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
