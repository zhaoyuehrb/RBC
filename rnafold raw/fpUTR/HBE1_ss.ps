%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAAAAAAGAGCCUCAGGAUCCAGCACACAUUAUCACAAACUUAGUGUCCAUCCAUCACUGCUGACCCUCUCCGGACCUGACUCCACCCCUGAGGGACACAGGUCAGCCUUGACCAAUGACUUUUAAGUACCAUGGAGAACAGGGGGCCAGAACUUCGGCAGUAAAGAAUAAAAGGCCAGACAGAGAGGCAGCAGCACAUAUCUGCUUCCGACACAGCUGCAAUCACUAGCAAGCUCUCAGGCCUGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[139.94496155 239.90745544]
[130.96189880 252.11730957]
[118.34284973 260.51583862]
[103.61162567 264.08889771]
[88.54708099 262.40499878]
[74.96835327 255.66751099]
[64.51512146 244.68998718]
[58.44967651 230.79804993]
[57.50444794 215.66918945]
[61.79357147 201.13029480]
[70.79911804 188.93702698]
[83.43362427 180.56176758]
[98.17141724 177.01586914]
[99.83770752 162.10870361]
[101.50400543 147.20153809]
[92.47419739 145.49194336]
[84.16011810 142.11470032]
[76.85752106 137.28080750]
[70.80800629 131.25108337]
[58.80494308 140.24699402]
[46.80187988 149.24290466]
[34.79881668 158.23883057]
[34.44058609 171.68658447]
[26.52537727 182.32267761]
[14.11620426 186.40580750]
[1.80390382 182.66082764]
[-10.30950356 191.50759888]
[-22.42291260 200.35437012]
[-34.53631973 209.20114136]
[-30.03989410 223.66007996]
[-30.48440170 238.79550171]
[-35.82162476 252.96565247]
[-45.47261810 264.63342285]
[-58.39051819 272.53320312]
[-73.17408752 275.80807495]
[-88.21971130 274.10284424]
[-101.89535522 267.60241699]
[-112.71759033 257.01196289]
[-119.51249695 243.48020935]
[-121.54301453 228.47502136]
[-118.58889771 213.62402344]
[-110.97057343 200.53816223]
[-99.51442719 190.63688660]
[-85.46313477 184.99420166]
[-70.34087372 184.22218323]
[-55.78799820 188.40458679]
[-43.38309097 197.08773804]
[-31.26968193 188.24096680]
[-19.15627480 179.39419556]
[-7.04286671 170.54742432]
[-5.15592003 153.82334900]
[8.52026939 143.44479370]
[25.80290222 146.23576355]
[37.80596542 137.23985291]
[49.80902863 128.24392700]
[61.81209183 119.24801636]
[57.41321182 103.89460754]
[58.95423889 87.99799347]
[66.22023773 73.77538300]
[78.19776154 63.21052933]
[72.93210602 49.16514587]
[67.66644287 35.11976242]
[62.40078354 21.07437706]
[57.13512421 7.02899170]
[51.86946487 -7.01639318]
[46.60380554 -21.06177711]
[41.33814621 -35.10716248]
[26.52555275 -39.33720016]
[17.15355301 -51.33799362]
[16.65106773 -66.37831879]
[25.00133896 -78.68323517]
[19.73567963 -92.72862244]
[14.47002029 -106.77400970]
[-0.68436229 -108.22523499]
[-13.65300560 -116.08025360]
[-21.89140511 -128.73524475]
[-23.81041336 -143.65095520]
[-19.08252716 -157.86210632]
[-8.69632053 -168.56687927]
[-13.96197987 -182.61225891]
[-19.22764015 -196.65763855]
[-24.49329948 -210.70303345]
[-38.98295975 -222.08717346]
[-35.39586639 -239.27757263]
[-40.83483887 -253.25675964]
[-46.27381134 -267.23593140]
[-51.71278381 -281.21511841]
[-57.15175247 -295.19430542]
[-75.95914459 -302.33413696]
[-83.29689026 -320.73559570]
[-74.82894135 -338.30545044]
[-87.40821838 -347.90090942]
[-85.35823822 -362.65374756]
[-91.31204987 -376.42153931]
[-97.26586151 -390.18933105]
[-103.21967316 -403.95712280]
[-109.17349243 -417.72491455]
[-115.12730408 -431.49270630]
[-127.70658112 -441.08813477]
[-125.65660095 -455.84100342]
[-131.61041260 -469.60879517]
[-146.02897644 -475.50308228]
[-151.87086487 -489.55041504]
[-146.16268921 -503.25997925]
[-152.11651611 -517.02777100]
[-158.07032776 -530.79559326]
[-164.02413940 -544.56335449]
[-169.97795105 -558.33117676]
[-183.45660400 -567.67236328]
[-181.83673096 -583.99127197]
[-166.78472900 -590.50048828]
[-153.78480530 -580.50378418]
[-156.21015930 -564.28497314]
[-150.25634766 -550.51715088]
[-144.30253601 -536.74938965]
[-138.34870911 -522.98156738]
[-132.39489746 -509.21380615]
[-118.49613190 -503.98315430]
[-112.26199341 -490.10546875]
[-117.84262085 -475.56262207]
[-111.88880157 -461.79483032]
[-99.73538208 -453.18414307]
[-101.35951233 -437.44653320]
[-95.40569305 -423.67874146]
[-89.45188141 -409.91094971]
[-83.49806976 -396.14315796]
[-77.54425812 -382.37536621]
[-71.59044647 -368.60757446]
[-59.43702316 -359.99688721]
[-61.06114960 -344.25927734]
[-50.89873886 -343.19708252]
[-42.01734543 -337.98388672]
[-36.04299927 -329.49679565]
[-34.10131073 -319.21902466]
[-36.60591125 -308.98074341]
[-43.17256927 -300.63327026]
[-37.73359680 -286.65408325]
[-32.29462433 -272.67489624]
[-26.85565376 -258.69573975]
[-21.41668129 -244.71653748]
[-10.48725510 -239.57292175]
[-5.83285618 -227.99365234]
[-10.44791412 -215.96868896]
[-5.18225479 -201.92330933]
[0.08340459 -187.87791443]
[5.34906387 -173.83253479]
[20.21283340 -172.59405518]
[33.11796188 -164.99359131]
[41.47760010 -152.49249268]
[43.58914185 -137.54051208]
[38.98073578 -123.09580994]
[28.51540565 -112.03966522]
[33.78106308 -97.99428558]
[39.04672241 -83.94889832]
[53.42828751 -80.16621399]
[62.93725204 -68.50244904]
[63.76450729 -53.29820251]
[55.38353348 -40.37282181]
[60.64919281 -26.32743645]
[65.91484833 -12.28205299]
[71.18051147 1.76333225]
[76.44616699 15.80871677]
[81.71183014 29.85410118]
[86.97748566 43.89948654]
[92.24314880 57.94487000]
[101.60669708 56.85986328]
[111.06964874 57.85388565]
[120.17171478 60.91749573]
[128.46176147 65.93967438]
[135.52009583 72.71141815]
[140.97969055 80.93423462]
[144.54516602 90.23318481]
[146.00852966 100.17394257]
[145.26098633 110.28303528]
[142.29994202 120.07044983]
[137.23106384 129.05332947]
[150.25225830 136.49971008]
[163.27343750 143.94609070]
[176.29463196 151.39247131]
[189.31582642 158.83883667]
[196.76976013 155.21846008]
[204.95327759 154.82638550]
[212.54353333 157.65220642]
[218.34245300 163.17132568]
[221.46583557 170.44052124]
[221.47776794 178.25860596]
[234.11477661 186.33982849]
[246.75178528 194.42103577]
[259.38879395 202.50225830]
[294.93844604 176.98579407]
[309.43530273 180.83821106]
[324.75973511 176.90469360]
[335.07293701 187.65118408]
[349.56979370 191.50358582]
[364.06668091 195.35600281]
[378.56353760 199.20840454]
[393.06039429 203.06082153]
[405.74649048 193.91769409]
[421.33779907 195.11965942]
[432.47259521 206.09921265]
[433.89337158 221.67211914]
[424.92926025 234.48533630]
[409.81283569 238.48886108]
[395.68164062 231.79234314]
[389.20797729 217.55767822]
[374.71112061 213.70527649]
[360.21426392 209.85285950]
[345.71740723 206.00045776]
[331.22055054 202.14804077]
[316.93301392 206.35710144]
[305.58288574 195.33506775]
[291.08602905 191.48266602]
[286.89038086 197.69929504]
[299.32363892 206.09059143]
[311.75674438 214.48211670]
[303.36502075 226.91510010]
[290.93234253 218.52384949]
[278.49908447 210.13253784]
[274.30340576 216.34916687]
[283.29931641 228.35223389]
[292.29525757 240.35530090]
[301.36520386 252.30250549]
[310.50891113 264.19338989]
[326.01599121 263.63659668]
[338.86990356 272.32891846]
[344.12808228 286.92791748]
[339.76864624 301.82003784]
[327.46786499 311.27890015]
[311.95565796 311.66741943]
[299.19677734 302.83621216]
[294.09725952 288.18099976]
[298.61801147 273.33706665]
[289.47433472 261.44619751]
[282.92373657 258.06893921]
[280.29217529 249.35121155]
[271.29626465 237.34814453]
[262.30035400 225.34509277]
[251.30757141 215.13926697]
[238.67057800 207.05804443]
[226.03356934 198.97683716]
[213.39656067 190.89561462]
[191.77156067 191.97636414]
[181.86944580 171.86003113]
[168.84825134 164.41365051]
[155.82705688 156.96726990]
[142.80587769 149.52090454]
[129.78468323 142.07452393]
[116.41117096 148.86784363]
[114.74487305 163.77499390]
[113.07857513 178.68215942]
[126.66970062 185.39462280]
[137.14314270 196.35285950]
[143.23417664 210.23359680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 250]
[14 249]
[15 248]
[19 56]
[20 55]
[21 54]
[22 53]
[26 50]
[27 49]
[28 48]
[29 47]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[71 154]
[72 153]
[73 152]
[79 146]
[80 145]
[81 144]
[82 143]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[91 130]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[100 121]
[101 120]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[176 247]
[177 246]
[178 245]
[179 244]
[180 243]
[186 241]
[187 240]
[188 239]
[189 238]
[190 212]
[191 211]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
[219 237]
[220 236]
[221 235]
[222 233]
[223 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
