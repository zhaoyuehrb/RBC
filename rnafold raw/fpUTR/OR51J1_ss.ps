%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUCUCCAUACUGGAAAUUUCUUGAUGGUGGUCAUUUGUCAGUUUUUAGAAAUAAGAAGUUUGGCCACAUAAAUCUGUGAGUUUGCUUUUUUCUUCCCUUCCCUCAGUGCCCAGUUGUCUUUCUUCAUAAUGAUGUCAUCUCACUAGUUUGUUUCUAAUUUUCAAGGUGGCACUGAUCCCUGAGGAUGAUAUGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[66.95178986 350.19885254]
[51.99478149 349.06399536]
[38.57439804 342.36373901]
[28.67892265 331.09078979]
[23.77441597 316.91525269]
[24.58695984 301.93942261]
[23.27630043 317.70623779]
[9.74154568 323.92395020]
[1.34717464 336.35513306]
[-7.04719639 348.78631592]
[-15.44156742 361.21749878]
[-17.65341187 370.08865356]
[-24.06554604 373.77600098]
[-25.62246895 389.52038574]
[-39.25274658 395.52578735]
[-47.84038162 407.82427979]
[-56.42801666 420.12274170]
[-57.29616547 436.49890137]
[-72.03310394 443.69296265]
[-85.47874451 434.30432129]
[-83.80135345 417.99118042]
[-68.72649384 411.53512573]
[-60.13885880 399.23663330]
[-51.55122375 386.93817139]
[-50.60854721 372.07342529]
[-36.36402130 365.18835449]
[-27.87275887 352.82315063]
[-19.47838783 340.39193726]
[-11.08401680 327.96075439]
[-2.68964601 315.52957153]
[-1.97940719 300.65191650]
[12.15576839 293.54504395]
[19.14258003 280.27160645]
[24.63828087 266.31460571]
[30.13398170 252.35763550]
[35.62968063 238.40066528]
[41.12538147 224.44367981]
[46.62108231 210.48669434]
[42.08472824 199.26748657]
[46.55542755 187.59161377]
[58.14451218 181.91777039]
[63.85767746 168.04838562]
[69.57083893 154.17900085]
[75.28400421 140.30961609]
[66.69950867 133.56819153]
[59.88956070 125.03794098]
[55.21705627 115.17345428]
[52.93098450 104.50038147]
[53.15316772 93.58749390]
[55.87177277 83.01632690]
[60.94192123 73.35018921]
[50.04920959 63.03763580]
[39.15649796 52.72507858]
[23.58178902 52.98242950]
[12.68193626 42.36885834]
[12.53257465 27.51916885]
[1.63986278 17.20661163]
[-9.25284863 6.89405537]
[-20.14556122 -3.41850162]
[-31.03827286 -13.73105812]
[-41.93098450 -24.04361534]
[-52.82369614 -34.35617065]
[-65.72001648 -34.78547287]
[-74.58082581 -43.60586166]
[-75.03772736 -55.69885635]
[-85.76793671 -66.18039703]
[-96.49813843 -76.66194153]
[-107.30992889 -87.05931091]
[-118.20263672 -97.37186432]
[-129.09535217 -107.68441772]
[-139.98806763 -117.99697876]
[-155.77760315 -117.31426239]
[-167.36860657 -128.05783081]
[-167.88433838 -143.85369873]
[-157.01882935 -155.33047485]
[-141.21839905 -155.67916870]
[-129.85714722 -144.69293213]
[-129.67550659 -128.88969421]
[-118.78279114 -118.57713318]
[-107.89008331 -108.26457214]
[-96.99736786 -97.95201874]
[-89.97306824 -95.63444519]
[-86.01659393 -87.39214325]
[-75.28639221 -76.91060638]
[-64.55619049 -66.42906189]
[-47.34640121 -63.01301193]
[-42.51113892 -45.24888229]
[-31.61842728 -34.93632889]
[-20.72571564 -24.62376976]
[-9.83300400 -14.31121349]
[1.05970788 -3.99865651]
[11.95241928 6.31390047]
[22.84513092 16.62645721]
[37.68077469 15.96365833]
[48.87443924 26.26688576]
[49.46905518 41.83236694]
[60.36176682 52.14492416]
[71.25447845 62.45748138]
[80.30902863 57.01149750]
[90.34686279 53.71217728]
[100.86672974 52.72426987]
[111.34332275 54.09711456]
[121.25347137 57.76215363]
[130.10231018 63.53636932]
[137.44798279 71.13142395]
[142.92364502 80.16805267]
[157.36602783 76.11619568]
[171.80841064 72.06433868]
[186.25079346 68.01247406]
[200.69317627 63.96061707]
[215.13555908 59.90876007]
[229.57795715 55.85689926]
[244.02033997 51.80503845]
[249.49501038 37.40594101]
[262.24951172 29.08870888]
[277.27807617 29.86739349]
[288.82809448 39.23406982]
[303.27047729 35.18221283]
[317.71286011 31.13035202]
[317.84341431 15.40760326]
[322.38922119 0.37094405]
[330.97503662 -12.76653481]
[342.89999390 -22.94736481]
[357.19488525 -29.35481453]
[372.70083618 -31.47841263]
[388.16336060 -29.15459442]
[402.33380127 -22.57928467]
[414.07015991 -12.29139519]
[422.42913818 0.87132818]
[436.80642700 -3.40575838]
[451.18371582 -7.68284512]
[465.56100464 -11.95993233]
[469.21398926 -26.81264305]
[479.74136353 -37.77034760]
[494.24365234 -41.95959473]
[508.79830933 -38.35151291]
[519.52050781 -28.01229668]
[533.89782715 -32.28938293]
[541.20135498 -46.30487823]
[556.30102539 -50.97120285]
[570.23852539 -43.51990891]
[574.74493408 -28.37171745]
[567.14672852 -14.51378155]
[551.95172119 -10.16776848]
[538.17492676 -17.91209030]
[523.79760742 -13.63500404]
[520.47039795 0.88377672]
[510.25463867 11.86077881]
[495.82067871 16.27974701]
[481.01562500 12.85816002]
[469.83810425 2.41736031]
[455.46081543 6.69444704]
[441.08352661 10.97153378]
[426.70623779 15.24862003]
[427.05062866 29.58187103]
[423.66537476 43.52635956]
[416.77566528 56.12752533]
[406.84692383 66.52108002]
[394.55319214 73.99230957]
[380.73144531 78.02517700]
[366.32461548 78.33801270]
[352.31729126 74.90314484]
[339.66827393 67.94923401]
[329.24517822 57.94604111]
[321.76473999 45.57273483]
[307.32235718 49.62459564]
[292.87997437 53.67645264]
[287.88769531 67.68413544]
[275.45733643 76.16650391]
[260.23782349 75.69747162]
[248.07218933 66.24742126]
[233.62980652 70.29928589]
[219.18742371 74.35114288]
[204.74504089 78.40299988]
[190.30265808 82.45485687]
[175.86027527 86.50672150]
[161.41789246 90.55857849]
[146.97550964 94.61043549]
[144.17066956 116.87297058]
[131.41865540 135.33573914]
[111.59117889 145.84092712]
[89.15338898 146.02278137]
[83.44022369 159.89216614]
[77.72705841 173.76155090]
[72.01389313 187.63093567]
[74.87884521 205.81707764]
[60.57806015 215.98240662]
[55.08236313 229.93937683]
[49.58666229 243.89636230]
[44.09096146 257.85333252]
[38.59526062 271.81033325]
[33.09955978 285.76730347]
[44.98683167 276.61892700]
[59.44898605 272.63821411]
[74.34339142 274.41491699]
[87.46337891 281.68579102]
[96.86517334 293.37368774]
[101.15584564 307.74691772]
[99.69972992 322.67608643]
[92.71254730 335.94934082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 32]
[8 30]
[9 29]
[10 28]
[11 27]
[13 26]
[15 24]
[16 23]
[17 22]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[41 185]
[42 184]
[43 183]
[44 182]
[51 98]
[52 97]
[53 96]
[56 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[65 85]
[66 84]
[67 83]
[68 81]
[69 80]
[70 79]
[71 78]
[106 178]
[107 177]
[108 176]
[109 175]
[110 174]
[111 173]
[112 172]
[113 171]
[117 167]
[118 166]
[119 165]
[129 154]
[130 153]
[131 152]
[132 151]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
