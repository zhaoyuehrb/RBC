%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAGCACAGGAUGCUACUUCUGCCAACCCUACAAAAAUACUCUGCACAAAUCUUCAAAAAACAUCCUUGUCCCACUGCGUCACCUGCGGACAGAUUUCAUGUCCUGGUCUCCUUCUAAACCUGGAGGUGGGGCAUGAACAGGGUGGAGUCACAGGGGAAAGAAAAUGAGGCCCCAGGACACCUGGGUUCACACCCAGGUCCCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[72.78140259 121.26184082]
[67.30128479 135.22494507]
[61.82117081 149.18804932]
[56.34105682 163.15115356]
[50.86094284 177.11425781]
[45.38082504 191.07737732]
[50.29972839 200.77964783]
[49.09138107 211.36930847]
[42.39468002 219.37695312]
[32.60634613 222.31307983]
[26.71097183 236.10600281]
[29.20508385 252.31437683]
[16.24766159 262.36611938]
[1.16818988 255.92083740]
[-0.52086323 239.60890198]
[12.91805553 230.21063232]
[18.81343079 216.41770935]
[15.10596371 197.44076538]
[31.41771889 185.59725952]
[36.89783478 171.63415527]
[42.37794876 157.67103577]
[47.85806656 143.70793152]
[53.33818054 129.74482727]
[58.81829834 115.78172302]
[57.47370529 100.84210968]
[49.58845139 88.08190918]
[41.70319366 75.32170868]
[34.52926636 69.66600037]
[33.79707336 62.31111526]
[26.10358238 49.43438339]
[18.41009331 36.55765152]
[10.71660423 23.68091965]
[16.68474770 37.44250870]
[20.33780289 51.99087906]
[21.57870483 66.93946838]
[20.37448120 81.89104462]
[16.75712776 96.44834137]
[10.82276535 110.22452545]
[2.72908068 122.85355377]
[-7.30886269 133.99983215]
[-19.02433777 143.36720276]
[-32.10604477 150.70675659]
[-46.20637894 155.82345581]
[-60.95066452 158.58134460]
[-75.94712830 158.90715027]
[-90.79727936 156.79220581]
[-105.10652161 152.29269409]
[-118.49464417 145.52821350]
[-130.60588074 136.67848206]
[-141.11843872 125.97866058]
[-149.75296021 113.71305847]
[-156.28002930 100.20759583]
[-160.52618408 85.82113647]
[-162.37861633 70.93595886]
[-161.78810120 55.94758987]
[-158.77032471 41.25429153]
[-153.40547180 27.24649239]
[-145.83610535 14.29640770]
[-136.26335144 2.74814343]
[-124.94158173 -7.09144258]
[-112.17162323 -14.96089458]
[-98.29280853 -20.65110779]
[-83.67391968 -24.01088142]
[-68.70340729 -24.95094109]
[-53.77906036 -23.44630814]
[-39.29745102 -19.53696442]
[-25.64338112 -13.32678509]
[-13.17965984 -4.98078823]
[-2.23477936 5.28223372]
[-11.76151562 -6.30402040]
[-21.28825188 -17.89027405]
[-30.81498909 -29.47653008]
[-40.34172440 -41.06278229]
[-49.86846161 -52.64903641]
[-53.98715210 -54.02946091]
[-57.13533401 -56.40962982]
[-59.11785126 -59.36153793]
[-59.89865112 -62.43776321]
[-59.59332657 -65.22505951]
[-68.41010284 -77.36031342]
[-77.22688293 -89.49557495]
[-92.78372192 -93.41532898]
[-99.28720093 -108.08107758]
[-91.74842072 -122.24251556]
[-75.95048523 -125.03619385]
[-64.01221466 -114.31904602]
[-65.09162903 -98.31234741]
[-56.27485275 -86.17709351]
[-47.45807266 -74.04183960]
[-38.28220749 -62.17577362]
[-28.75547028 -50.58951950]
[-19.22873497 -39.00326538]
[-9.70199776 -27.41701126]
[-0.17526147 -15.83075714]
[9.35147476 -4.24450254]
[16.78359795 -5.25125217]
[31.64784431 -7.26475096]
[39.07996750 -8.27150059]
[45.18101883 -21.97468185]
[51.28206635 -35.67786407]
[57.38311768 -49.38104630]
[63.48416519 -63.08422852]
[69.58521271 -76.78740692]
[75.68626404 -90.49059296]
[81.78731537 -104.19377136]
[87.88836670 -117.89695740]
[93.98941803 -131.60014343]
[100.09046173 -145.30331421]
[96.20518494 -157.60293579]
[101.56946564 -168.89100647]
[112.81476593 -173.34988403]
[119.12011719 -186.96026611]
[125.42547607 -200.57064819]
[131.73083496 -214.18103027]
[122.82450867 -226.69393921]
[121.38382721 -241.98510742]
[127.79633331 -255.94129944]
[140.33709717 -264.80838013]
[155.63270569 -266.20111084]
[169.56874084 -259.74490356]
[178.39645386 -247.17640686]
[179.74124146 -231.87649536]
[173.24136353 -217.96076965]
[160.64526367 -209.17250061]
[145.34121704 -207.87567139]
[139.03585815 -194.26528931]
[132.73049927 -180.65490723]
[126.42514038 -167.04454041]
[128.93807983 -149.67672729]
[113.79364777 -139.20227051]
[107.69259644 -125.49908447]
[101.59154510 -111.79590607]
[95.49049377 -98.09272766]
[89.38945007 -84.38954163]
[83.28839874 -70.68636322]
[77.18734741 -56.98317719]
[71.08629608 -43.27999496]
[64.98525238 -29.57681465]
[58.88420105 -15.87363243]
[52.78314972 -2.17045093]
[39.41860962 12.36928272]
[23.59333611 15.98743057]
[31.28682518 28.86416245]
[38.98031616 41.74089432]
[46.67380524 54.61762619]
[54.46339417 67.43645477]
[62.34865189 80.19665527]
[70.23390961 92.95685577]
[95.46411133 68.99591064]
[127.79381561 83.97979736]
[142.36616516 87.53600311]
[156.93852234 91.09220886]
[166.01821899 90.08655548]
[171.70146179 94.81214905]
[187.00434875 90.79565430]
[197.37564087 101.48609924]
[211.89315796 105.25990295]
[226.41067505 109.03369904]
[240.92820740 112.80750275]
[250.39024353 100.87479401]
[263.89071655 93.82803345]
[279.09060669 92.88812256]
[293.35641479 98.21789551]
[304.21652222 108.89395142]
[309.78933716 123.06658936]
[309.10934448 138.28031921]
[302.29434204 151.89926147]
[290.52508545 161.56385803]
[275.84066772 165.59967041]
[260.78524780 163.30744934]
[247.96726990 155.08435059]
[239.60752869 142.35505676]
[237.15440369 127.32502747]
[222.63688660 123.55122375]
[208.11935425 119.77742004]
[193.60183716 116.00362396]
[179.33734131 120.29003906]
[167.92765808 109.32966614]
[153.38230896 105.66455841]
[138.80996704 102.10835266]
[124.23760986 98.55214691]
[115.42082977 110.68740082]
[123.30609131 123.44760132]
[131.19134521 136.20780945]
[139.07659912 148.96800232]
[146.96185303 161.72821045]
[154.84712219 174.48840332]
[162.73237610 187.24861145]
[170.61763000 200.00880432]
[185.30718994 207.29914856]
[186.06816101 223.68063354]
[172.11773682 232.30139160]
[157.80690002 224.29313660]
[157.85742188 207.89407349]
[149.97216797 195.13386536]
[142.08691406 182.37367249]
[134.20166016 169.61346436]
[126.31639862 156.85325623]
[118.43114471 144.09306335]
[110.54589081 131.33285522]
[102.66062927 118.57266235]
[95.19082642 119.24495697]
[96.53541565 134.18457031]
[97.88000488 149.12419128]
[103.77520752 162.91717529]
[92.47888947 172.78598022]
[79.60244751 165.09199524]
[82.94039154 150.46878052]
[81.59580231 135.52915955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[10 17]
[11 16]
[25 148]
[26 147]
[27 146]
[29 145]
[30 144]
[31 143]
[32 142]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[79 89]
[80 88]
[81 87]
[98 140]
[99 139]
[100 138]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[107 131]
[108 130]
[111 128]
[112 127]
[113 126]
[114 125]
[150 181]
[151 180]
[152 179]
[154 178]
[156 176]
[157 175]
[158 174]
[159 173]
[182 201]
[183 200]
[184 199]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
