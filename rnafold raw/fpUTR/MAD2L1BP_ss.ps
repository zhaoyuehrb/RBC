%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAUUUAGAGCCUCGAGGCCUGGGGUGGGGACGCGAGGACACCAGCGUAGAAGAGCUUACAUCAGAAUCGAGCUUUGUGGGCGCUCCGGGAUUUGGCCCUUUAGCGCGGAUCCUAGACAACAGGUUUUGGACCUCGAGAGCUGCAGAACUGAGGCUACUGGUGCCGCCAGCCUGCUGGCUCCGCCUCUGCCUCAGUUUCUUCCCCU\
) } def
/len { sequence length } bind def

/coor [
[262.84732056 277.38064575]
[262.39642334 262.38742065]
[261.94555664 247.39419556]
[261.49465942 232.40097046]
[261.04379272 217.40774536]
[251.04150391 213.83615112]
[242.62788391 207.28251648]
[236.66777039 198.38551331]
[233.78469849 188.02638245]
[234.29574585 177.24162292]
[238.17697144 167.11933899]
[227.29505920 156.79539490]
[216.41316223 146.47143555]
[205.45396423 136.22955322]
[194.41810608 126.07032776]
[183.38224792 115.91110992]
[172.34638977 105.75188446]
[161.31053162 95.59265900]
[150.27467346 85.43343353]
[139.23881531 75.27421570]
[122.00926208 128.33824158]
[81.57367706 117.45771027]
[68.12266541 124.09625244]
[54.67165375 130.73480225]
[45.72085953 143.78063965]
[30.88358688 142.47503662]
[21.93279457 155.52087402]
[7.09552050 154.21527100]
[-6.35549212 160.85382080]
[-19.80650520 167.49235535]
[-33.20724487 174.23181152]
[-38.14761353 189.00444031]
[-51.78355408 195.75097656]
[-65.83654785 190.95004272]
[-74.27783203 205.00981140]
[-90.66771698 204.45881653]
[-98.14570618 189.86389160]
[-89.01907349 176.23904419]
[-72.67652893 177.60034180]
[-68.36444855 163.38972473]
[-54.92338181 156.26284790]
[-40.04721832 160.88209534]
[-35.52705002 155.03341675]
[-26.44504738 154.04135132]
[-12.99403477 147.40280151]
[0.45697778 140.76426697]
[8.44566441 128.19325256]
[24.24504471 129.02401733]
[32.23373032 116.45301819]
[48.03311157 117.28378296]
[61.48412323 110.64524078]
[74.93513489 104.00669861]
[64.97364807 92.21421814]
[61.61612320 73.96681213]
[47.87952042 67.94138336]
[34.14292145 61.91595078]
[20.40632248 55.89052200]
[6.66972208 49.86508942]
[-7.06687784 43.83965683]
[-20.80347824 37.81422806]
[-32.72121429 47.41767120]
[-47.73903275 50.37126923]
[-62.40594482 45.99631119]
[-73.35160065 35.29812622]
[-78.06077576 20.73508263]
[-75.45133209 5.65365744]
[-66.12289429 -6.48054600]
[-52.21907806 -12.87917709]
[-36.93487549 -12.07187748]
[-23.78248405 -4.24415827]
[-15.78422737 8.80522728]
[-14.77804661 24.07762718]
[-1.04144657 30.10305786]
[12.69515324 36.12849045]
[26.43175316 42.15392303]
[40.16835403 48.17935181]
[53.90495300 54.20478439]
[67.64155579 60.23021698]
[73.34642792 55.36149979]
[63.60916901 43.95159912]
[75.01921844 34.21451569]
[84.75617981 45.62406540]
[90.46105194 40.75534821]
[86.66958618 26.24242973]
[82.87812042 11.72951126]
[79.08666229 -2.78340745]
[75.29519653 -17.29632568]
[60.04159927 -25.85910225]
[55.78336716 -42.47709274]
[64.68215942 -56.74687576]
[60.67297745 -71.20116425]
[56.66379929 -85.65545654]
[42.78644180 -93.21816254]
[38.40151596 -108.40196991]
[46.11051941 -122.19859314]
[61.33983612 -126.42273712]
[75.05418396 -118.56829834]
[79.11708069 -103.29517365]
[71.11808777 -89.66463470]
[75.12726593 -75.21034241]
[79.13644409 -60.75605392]
[91.12958527 -56.04252625]
[98.32510376 -45.11867523]
[97.90857697 -31.84986115]
[89.80811310 -21.08778954]
[93.59957886 -6.57487154]
[97.39104462 7.93804693]
[101.18250275 22.45096588]
[104.97396851 36.96388245]
[112.38939667 38.08700943]
[121.74989319 26.36603928]
[127.22026062 40.33325958]
[134.63568115 41.45638275]
[142.55470276 28.71711159]
[150.47373962 15.97783852]
[151.18815613 0.17277056]
[164.47850037 -6.55151796]
[172.39752197 -19.29079056]
[180.31654358 -32.03006363]
[188.23556519 -44.76933670]
[186.00505066 -60.65657425]
[197.13967896 -72.20645905]
[213.09790039 -70.55889893]
[221.63795471 -56.97776413]
[216.20863342 -41.88134384]
[200.97483826 -36.85031509]
[193.05581665 -24.11104012]
[185.13679504 -11.37176800]
[177.21777344 1.36750507]
[177.06976318 16.26137543]
[163.21301270 23.89686203]
[155.29397583 36.63613510]
[147.37495422 49.37540817]
[149.39804077 64.23834991]
[160.43389893 74.39757538]
[171.46975708 84.55680084]
[182.50561523 94.71602631]
[193.54147339 104.87524414]
[204.57733154 115.03446960]
[215.61318970 125.19369507]
[224.04780579 128.70426941]
[226.73710632 135.58952332]
[237.61901855 145.91348267]
[248.50093079 156.23744202]
[268.33248901 150.65414429]
[287.64389038 157.46411133]
[299.44079590 174.04757690]
[299.53900146 194.27311707]
[312.56680298 201.70793152]
[325.59460449 209.14276123]
[338.62240601 216.57757568]
[351.65017700 224.01239014]
[364.67797852 231.44720459]
[377.70578003 238.88201904]
[390.73358154 246.31684875]
[403.76138306 253.75166321]
[416.78918457 261.18649292]
[428.89715576 254.59771729]
[442.57116699 254.85050964]
[454.24114990 261.77185059]
[460.91308594 273.46170044]
[460.93695068 286.81329346]
[473.85150146 294.44308472]
[486.76608276 302.07287598]
[499.68066406 309.70269775]
[514.80749512 305.98568726]
[527.79602051 313.90734863]
[531.24639893 328.35140991]
[544.16094971 335.98120117]
[557.07556152 343.61099243]
[569.99011230 351.24081421]
[582.90472412 358.87060547]
[599.29949951 358.49377441]
[607.59094238 372.64242554]
[599.24945068 386.76162720]
[582.85607910 386.32675171]
[575.27490234 371.78515625]
[562.36035156 364.15536499]
[549.44573975 356.52557373]
[536.53118896 348.89578247]
[523.61657715 341.26599121]
[509.30050659 345.21377563]
[496.09460449 337.66006470]
[492.05087280 322.61724854]
[479.13629150 314.98745728]
[466.22171021 307.35766602]
[453.30715942 299.72787476]
[438.46197510 306.73324585]
[422.20349121 303.47769165]
[410.97735596 291.04986572]
[409.35437012 274.21426392]
[396.32656860 266.77944946]
[383.29876709 259.34463501]
[370.27096558 251.90982056]
[357.24316406 244.47500610]
[344.21536255 237.04019165]
[331.18756104 229.60536194]
[318.15979004 222.17054749]
[305.13198853 214.73573303]
[292.10418701 207.30091858]
[284.76211548 213.27954102]
[276.03701782 216.95687866]
[276.48788452 231.95008850]
[276.93878174 246.94331360]
[277.38964844 261.93652344]
[277.84051514 276.92974854]
[284.36022949 292.57998657]
[271.12646484 303.17730713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[11 144]
[12 143]
[13 142]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[22 52]
[23 51]
[24 50]
[26 48]
[28 46]
[29 45]
[30 44]
[31 42]
[34 39]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[90 101]
[91 100]
[92 99]
[113 133]
[114 132]
[115 131]
[117 129]
[118 128]
[119 127]
[120 126]
[148 200]
[149 199]
[150 198]
[151 197]
[152 196]
[153 195]
[154 194]
[155 193]
[156 192]
[157 191]
[162 187]
[163 186]
[164 185]
[165 184]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
