%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAGAAAAAGGAAAAUAAAGCAACGCACGAGCCGGCUGGGCCAGGACCUUGGGGCUGGGCUGGAGUGAAGGUGGCUACGAGUUUUCCAGAUUUAGGAGACUUCAGAAAGGUGGGGCAGAUAGAAUGGAGAUGGCAAAGAUCUCUUUGGGCAUAUAUGGGCCUGGCGAAGUAAUGGAAUAAUUUCUAAUUUUCGGAGAAGGCAAGUGCCCUCAUGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[133.93769836 152.01025391]
[124.56443024 157.03878784]
[114.47053528 160.39401245]
[103.95213318 161.97752380]
[93.31778717 161.74287415]
[82.87947845 159.69691467]
[72.94341278 155.89968872]
[63.80108261 150.46258545]
[55.72068405 143.54510498]
[48.93927002 135.35018921]
[43.65577316 126.11822510]
[40.02519608 116.12006378]
[25.17514229 118.23568726]
[10.32508564 120.35131073]
[-4.52496958 122.46692657]
[-19.37502480 124.58255005]
[-34.22508240 126.69816589]
[-49.07513809 128.81378174]
[-59.86953735 144.39044189]
[-78.30658722 147.07606506]
[-92.59701538 135.62565613]
[-107.38125610 138.16065979]
[-122.16549683 140.69567871]
[-134.45954895 150.65393066]
[-148.31137085 145.17883301]
[-163.09559631 147.71385193]
[-170.03146362 161.46884155]
[-183.57843018 168.42105103]
[-198.44564819 166.09078979]
[-208.96398926 155.57878113]
[-223.74822998 158.11378479]
[-232.88002014 170.73313904]
[-247.90945435 173.09339905]
[-259.88378906 164.30986023]
[-274.66802979 166.84486389]
[-289.45227051 169.37988281]
[-304.23651123 171.91488647]
[-319.02075195 174.44990540]
[-333.80499268 176.98490906]
[-346.09906006 186.94316101]
[-359.95086670 181.46807861]
[-374.73510742 184.00308228]
[-389.51934814 186.53810120]
[-404.30358887 189.07312012]
[-409.54931641 203.50840759]
[-421.32022095 213.37458801]
[-436.44998169 216.01770020]
[-450.86877441 210.72674561]
[-460.69799805 198.92497253]
[-463.29367065 183.78700256]
[-457.95755005 169.38487244]
[-446.12500000 159.59268188]
[-430.97897339 157.04447937]
[-416.59365845 162.42572021]
[-406.83859253 174.28887939]
[-392.05435181 171.75386047]
[-377.27011108 169.21885681]
[-362.48587036 166.68383789]
[-351.24929810 156.90690613]
[-336.33999634 162.20068359]
[-321.55575562 159.66566467]
[-306.77154541 157.13064575]
[-291.98730469 154.59564209]
[-277.20306396 152.06062317]
[-262.41882324 149.52561951]
[-254.05462646 137.25468445]
[-239.09741211 134.47320557]
[-226.28323364 143.32954407]
[-211.49899292 140.79454041]
[-205.08346558 127.37891388]
[-191.84181213 120.22891235]
[-176.75262451 122.27095032]
[-165.63061523 132.92961121]
[-150.84637451 130.39460754]
[-139.60978699 120.61767578]
[-124.70050812 125.91143799]
[-109.91626740 123.37642670]
[-95.13202667 120.84141541]
[-90.72438812 110.32835388]
[-81.69791412 103.17150116]
[-70.22050476 101.23719025]
[-59.12072372 105.11930847]
[-51.19075775 113.96372986]
[-36.34070206 111.84811401]
[-21.49064445 109.73249054]
[-6.64058971 107.61687469]
[8.20946598 105.50125122]
[23.05952072 103.38562775]
[37.90957642 101.27001190]
[38.16283417 94.25559235]
[39.20598221 87.31454468]
[41.02569580 80.53554535]
[43.59873581 74.00517273]
[46.89223099 67.80685425]
[50.86411285 62.01976776]
[55.46364212 56.71782684]
[60.63206863 51.96876526]
[66.30337524 47.83324051]
[72.40510559 44.36408234]
[78.85933685 41.60560226]
[85.58361053 39.59303665]
[83.88907623 24.68905830]
[82.19454193 9.78508091]
[80.50000763 -5.11889648]
[68.89282227 -16.19376755]
[70.45800018 -32.16028595]
[83.99488068 -40.77030945]
[99.11911774 -35.41896057]
[104.22869873 -20.21133995]
[95.40398407 -6.81342983]
[97.09851837 8.09054852]
[98.79305267 22.99452591]
[100.48758698 37.89850235]
[129.40245056 45.29781342]
[151.52619934 65.33178711]
[161.74882507 93.37313843]
[176.74732971 93.58539581]
[191.74583435 93.79766083]
[206.74432373 94.00992584]
[221.74395752 94.11605835]
[236.74395752 94.11605835]
[223.72041321 86.67378235]
[219.04945374 72.41957855]
[225.14271545 58.71293259]
[238.85421753 52.63060760]
[253.10469055 57.31292343]
[260.53659058 70.34239197]
[257.31164551 84.99357605]
[267.38012695 73.87485504]
[277.44857788 62.75613785]
[287.51705933 51.63741684]
[297.58554077 40.51869583]
[307.65399170 29.39997673]
[305.34240723 13.93418980]
[313.55685425 0.62793010]
[328.41876221 -4.23599386]
[342.91079712 1.63901365]
[350.19021606 15.47895432]
[346.81994629 30.74903107]
[334.39129639 40.23918152]
[318.77270508 39.46844482]
[308.70425415 50.58716583]
[298.63577271 61.70588684]
[288.56732178 72.82460785]
[278.49884033 83.94332886]
[268.43035889 95.06204987]
[270.11404419 102.37062073]
[273.48144531 116.98776245]
[275.16513062 124.29632568]
[289.08346558 129.88917542]
[303.00180054 135.48202515]
[316.92013550 141.07487488]
[330.83847046 146.66772461]
[344.75680542 152.26055908]
[352.18280029 146.04498291]
[361.30627441 142.97506714]
[370.86361694 143.43157959]
[379.54727173 147.30990601]
[386.18453979 154.04022217]
[389.89587402 162.67074585]
[390.21139526 172.00222778]
[403.79101562 178.37353516]
[417.37066650 184.74485779]
[430.95028687 191.11618042]
[448.51721191 184.00605774]
[465.40930176 191.86703491]
[471.08407593 209.27752686]
[484.83856201 215.26200867]
[498.59304810 221.24649048]
[512.34753418 227.23097229]
[526.10205078 233.21545410]
[537.97906494 226.87351990]
[551.14825439 228.50364685]
[560.83221436 237.28881836]
[563.64813232 249.85780334]
[577.31658936 256.03631592]
[590.98498535 262.21484375]
[604.65344238 268.39334106]
[618.32183838 274.57186890]
[634.57818604 272.41250610]
[644.36059570 285.57443237]
[637.60577393 300.51779175]
[621.26251221 301.87014771]
[612.14331055 288.24029541]
[598.47491455 282.06176758]
[584.80645752 275.88327026]
[571.13806152 269.70474243]
[557.46960449 263.52621460]
[541.99877930 270.13034058]
[526.22937012 263.36505127]
[520.11755371 246.96994019]
[506.36306763 240.98545837]
[492.60858154 235.00097656]
[478.85406494 229.01649475]
[465.09957886 223.03201294]
[455.65005493 229.40837097]
[444.17739868 230.44575500]
[433.51788330 225.77166748]
[426.36273193 216.44001770]
[424.57894897 204.69580078]
[410.99932861 198.32449341]
[397.41970825 191.95317078]
[383.84008789 185.58184814]
[365.25659180 194.10926819]
[346.15927124 186.01713562]
[339.16394043 166.17889404]
[325.24560547 160.58605957]
[311.32727051 154.99320984]
[297.40893555 149.40036011]
[283.49060059 143.80751038]
[269.57226562 138.21466064]
[236.74395752 109.11605835]
[221.74395752 109.11605835]
[215.06056213 112.25681305]
[206.53205872 109.00842285]
[191.53356934 108.79615784]
[176.53506470 108.58389282]
[161.53657532 108.37163544]
[159.20533752 118.74996185]
[155.13726807 128.57823181]
[149.45167542 137.56814575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 89]
[13 88]
[14 87]
[15 86]
[16 85]
[17 84]
[18 83]
[21 78]
[22 77]
[23 76]
[25 74]
[26 73]
[30 69]
[31 68]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[41 58]
[42 57]
[43 56]
[44 55]
[101 113]
[102 112]
[103 111]
[104 110]
[116 218]
[117 217]
[118 216]
[119 215]
[120 213]
[121 212]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[149 211]
[150 210]
[151 209]
[152 208]
[153 207]
[154 206]
[161 203]
[162 202]
[163 201]
[164 200]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
