%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGGCGCGCGCGCGCGCGCGCGCGCUCCCCGCCCCCAGCCCCGGAGCGGCUCGCGGCCGGCUCCGCGCCGCAUCGCUCGGGUGCAGCGCAGCUCAGCGCAGCGCUGCGGCCUUUCGGCAGCCGAACGGCCGCGGCAGCAUUUCCUUUACAGGCUGCACUUCCUUCCCUGCUGCCAGCCAGGAGUUUCGGAAGGUUUCCUGGAGGAAGUGUGAUACAGCAGUUCAGGACAAAGAGGUGUGGGCAGGCCACUGGG\
CCAGCUGGUAACAUC\
) } def
/len { sequence length } bind def

/coor [
[58.18220139 276.82586670]
[48.43240738 280.49157715]
[38.10463715 281.74377441]
[27.78660965 280.51727295]
[21.86611748 294.29940796]
[15.94562531 308.08157349]
[17.60781670 323.81521606]
[5.47525740 332.45526123]
[-0.44523492 346.23742676]
[-6.36572695 360.01956177]
[-12.28621960 373.80172729]
[-18.20671082 387.58386230]
[-24.12720299 401.36602783]
[-30.04769516 415.14819336]
[-35.96818924 428.93032837]
[-33.50360489 445.14321899]
[-46.47931671 455.17132568]
[-61.54702377 448.69860840]
[-63.20635986 432.38360596]
[-49.75034332 423.00985718]
[-43.82984924 409.22769165]
[-37.90935898 395.44552612]
[-31.98886490 381.66339111]
[-26.06837273 367.88122559]
[-20.14788055 354.09906006]
[-14.22738934 340.31692505]
[-8.30689716 326.53475952]
[-10.39256001 311.78689575]
[2.16347146 302.16107178]
[8.08396339 288.37893677]
[14.00445557 274.59677124]
[0.31799799 260.48022461]
[-5.79174232 241.74084473]
[-3.04263449 222.17465210]
[8.04841709 205.76467896]
[25.26202583 195.87019348]
[45.12032700 194.53910828]
[50.06865311 180.37879944]
[55.01697540 166.21850586]
[59.96529770 152.05819702]
[64.91362000 137.89790344]
[55.50312805 126.21704102]
[40.61411285 128.03837585]
[25.72509766 129.85969543]
[10.83608150 131.68103027]
[2.73244095 135.81591797]
[-4.23596048 133.43614197]
[-19.14508820 135.08474731]
[-34.05421448 136.73335266]
[-48.96334457 138.38195801]
[-63.87247086 140.03056335]
[-70.14049530 148.86434937]
[-80.02408600 152.72950745]
[-90.19312286 150.58169556]
[-97.36059570 143.36067200]
[-112.30393982 144.66320801]
[-127.24727631 145.96572876]
[-142.19061279 147.26824951]
[-157.13395691 148.57077026]
[-172.06950378 149.95988464]
[-186.99673462 151.43556213]
[-200.00068665 161.42701721]
[-215.05007935 154.91181946]
[-216.66337585 138.59222412]
[-203.18098450 129.25643921]
[-188.47239685 136.50831604]
[-173.54516602 135.03265381]
[-167.22090149 131.26095581]
[-158.43647766 133.62742615]
[-143.49314880 132.32490540]
[-128.54980469 131.02238464]
[-113.60646057 129.71986389]
[-98.66312408 128.41734314]
[-83.63338470 116.21932220]
[-65.52108002 125.12143707]
[-50.61194992 123.47283173]
[-35.70282364 121.82421875]
[-20.79369545 120.17561340]
[-5.88456774 118.52700806]
[9.01475430 116.79200745]
[23.90376854 114.97068024]
[38.79278183 113.14935303]
[53.68179703 111.32802582]
[52.26547623 94.72745514]
[56.65865707 78.53304291]
[44.45225525 69.81502533]
[28.72529984 68.09066010]
[22.86528206 54.39725113]
[10.65888023 45.67923737]
[-1.54752100 36.96122360]
[-13.75392246 28.24320793]
[-29.29988289 31.08902359]
[-42.25717545 22.04004288]
[-44.93847275 6.46486425]
[-35.75300598 -6.39603472]
[-20.15034866 -8.91251087]
[-7.38728285 0.40841633]
[-5.03590775 16.03680611]
[7.17049313 24.75482178]
[19.37689400 33.47283554]
[31.58329582 42.19084930]
[46.43716812 43.29164505]
[53.17026901 57.60862350]
[65.37667084 66.32663727]
[77.37767792 57.32798767]
[72.42935944 43.16768646]
[67.48103333 29.00738525]
[62.53271103 14.84708595]
[57.58438492 0.68678629]
[52.63606262 -13.47351360]
[47.68774033 -27.63381386]
[42.73941422 -41.79411316]
[37.79109192 -55.95441437]
[25.93441010 -66.42960358]
[29.03999901 -80.99684906]
[24.09167671 -95.15715027]
[19.14335251 -109.31745148]
[14.19502831 -123.47775269]
[9.24670506 -137.63804626]
[-1.68630409 -150.59588623]
[7.73858166 -164.68872070]
[23.88972664 -159.53344727]
[23.40700531 -142.58638000]
[28.35532951 -128.42607117]
[33.30365372 -114.26577759]
[38.25197601 -100.10547638]
[43.20029831 -85.94517517]
[54.70304489 -76.48281860]
[51.95139313 -60.90273666]
[56.89971542 -46.74243546]
[61.84803772 -32.58213806]
[66.79636383 -18.42183685]
[71.74468994 -4.26153755]
[76.69300842 9.89876270]
[81.64133453 24.05906296]
[86.58966064 38.21936417]
[91.53797913 52.37966156]
[113.02149963 56.12019730]
[129.51916504 68.49159241]
[141.52017212 59.49293900]
[153.52117920 50.49428558]
[165.52218628 41.49563217]
[177.52320862 32.49697876]
[189.52421570 23.49832535]
[201.52522278 14.49967098]
[213.52622986 5.50101757]
[225.52723694 -3.49763560]
[237.52824402 -12.49628925]
[240.44714355 -18.36385918]
[245.17167664 -21.44027901]
[249.91340637 -21.56060982]
[262.11981201 -30.27862358]
[274.32620239 -38.99663925]
[286.53262329 -47.71465302]
[289.26037598 -63.05078888]
[301.76361084 -71.71820831]
[316.36746216 -69.02318573]
[328.57385254 -77.74120331]
[333.71450806 -85.24720764]
[340.97265625 -86.48856354]
[353.27929688 -95.06449127]
[365.58593750 -103.64041901]
[377.89257812 -112.21634674]
[390.19924927 -120.79227448]
[402.30374146 -129.65119934]
[414.19964600 -138.78837585]
[426.09552002 -147.92553711]
[437.99142456 -157.06269836]
[440.18429565 -172.48442078]
[452.37857056 -181.58134460]
[467.06729126 -179.39573669]
[478.96319580 -188.53289795]
[490.85906982 -197.67007446]
[499.73736572 -212.11349487]
[516.07409668 -207.58053589]
[516.24072266 -190.62739563]
[499.99624634 -185.77418518]
[488.10034180 -176.63702393]
[476.20446777 -167.49984741]
[474.52813721 -152.74432373]
[462.59417725 -143.30847168]
[447.12860107 -145.16682434]
[435.23269653 -136.02964783]
[423.33682251 -126.89247894]
[411.44091797 -117.75531006]
[410.92971802 -115.03371429]
[409.32907104 -112.34663391]
[406.64553833 -110.10297394]
[403.03091431 -108.70232391]
[398.77517700 -108.48562622]
[386.46850586 -99.90969849]
[374.16186523 -91.33377075]
[361.85522461 -82.75784302]
[349.54858398 -74.18191528]
[337.29187012 -65.53479767]
[325.08544922 -56.81678772]
[322.89706421 -42.12847137]
[310.64224243 -33.11328125]
[295.25064087 -35.50825119]
[283.04421997 -26.79023743]
[270.83782959 -18.07222176]
[258.63140869 -9.35420799]
[246.52690125 -0.49527934]
[234.52589417 8.50337410]
[222.52488708 17.50202751]
[210.52388000 26.50068092]
[198.52285767 35.49933624]
[186.52185059 44.49798965]
[174.52084351 53.49664307]
[162.51983643 62.49529648]
[150.51882935 71.49394989]
[138.51782227 80.49259949]
[142.68457031 85.74893951]
[146.10487366 91.81639862]
[148.62973022 98.58411407]
[150.12738037 105.91494751]
[150.48771667 113.64826965]
[166.23361206 115.19020844]
[172.25196838 128.81475830]
[184.55860901 137.39068604]
[196.86524963 145.96661377]
[212.61114502 147.50856018]
[218.62950134 161.13311768]
[230.93615723 169.70904541]
[243.24279785 178.28497314]
[257.85836792 173.07301331]
[272.73660278 177.47955322]
[282.15652466 189.81019592]
[282.49597168 205.32356262]
[273.62442017 218.05442810]
[258.95315552 223.10754395]
[244.12359619 218.53985596]
[234.83799744 206.10774231]
[234.66687012 190.59161377]
[222.36022949 182.01568604]
[210.05357361 173.43975830]
[195.18794250 172.51123047]
[188.28932190 158.27325439]
[175.98268127 149.69732666]
[163.67604065 141.12139893]
[148.81040955 140.19287109]
[141.91178894 125.95491028]
[136.21015930 130.82742310]
[138.94827271 145.57539368]
[124.80689240 140.57244873]
[119.10525513 145.44496155]
[125.65824127 158.93786621]
[132.21122742 172.43077087]
[138.76420593 185.92367554]
[152.64027405 194.66363525]
[151.73898315 211.03799438]
[136.98750305 218.20220947]
[123.56089783 208.78636169]
[125.27130127 192.47665405]
[118.71832275 178.98374939]
[112.16533661 165.49084473]
[105.61235809 151.99794006]
[91.37467194 149.24192810]
[79.07392120 142.84622192]
[74.12560272 157.00653076]
[69.17727661 171.16682434]
[64.22895050 185.32713318]
[59.28062820 199.48742676]
[67.78220367 205.70190430]
[74.56298828 213.74238586]
[79.24217987 223.14802551]
[81.55924225 233.38153076]
[81.38835144 243.85993958]
[78.74524689 253.98780823]
[73.78598785 263.19100952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[37 263]
[38 262]
[39 261]
[40 260]
[41 259]
[42 83]
[43 82]
[44 81]
[45 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 67]
[61 66]
[85 104]
[86 103]
[88 101]
[89 100]
[90 99]
[91 98]
[105 137]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
[139 212]
[140 211]
[141 210]
[142 209]
[143 208]
[144 207]
[145 206]
[146 205]
[147 204]
[148 203]
[151 202]
[152 201]
[153 200]
[154 199]
[157 196]
[158 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 185]
[166 184]
[167 183]
[168 182]
[171 179]
[172 178]
[173 177]
[217 242]
[219 240]
[220 239]
[221 238]
[223 236]
[224 235]
[225 234]
[246 257]
[247 256]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
