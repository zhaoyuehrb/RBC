%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUACCCAGGGCACGUGAUCUGUCAGUUCGCGGAGAGGGAAGAAUAUGGCCGCCGGGUGUGGUGAGGGCGACGCGCUUGCAGUCGCCGUCUCUUGCUUCCCCGUCCUCUGACAUCGCCUGCAGCCGAGCGGGCCCGUUCCGCCGGAGCUGAGGACCAGGUAUUCAAAUAAAGUUAAUUGCAGCUUUCUGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[164.96467590 249.11264038]
[164.38439941 237.34458923]
[169.61415100 226.65281677]
[162.07965088 213.68240356]
[154.54515076 200.71200562]
[137.11558533 192.35505676]
[137.34072876 172.20542908]
[129.39645386 159.48188782]
[121.35097504 146.82209778]
[113.20481110 134.22686768]
[105.05863953 121.63162231]
[84.10469818 115.51954651]
[78.49555969 94.42540741]
[66.09877014 85.98031616]
[53.70198059 77.53521729]
[37.94064331 76.16014862]
[31.77830505 62.60010147]
[19.38151741 54.15500641]
[6.98472738 45.70991135]
[-5.41206169 37.26481628]
[-11.98435307 36.39090729]
[-16.45134354 32.85416794]
[-18.06363106 28.34750175]
[-30.18480873 19.51138306]
[-42.30598831 10.67526245]
[-54.42716599 1.83914232]
[-66.54834747 -6.99697733]
[-78.66952515 -15.83309746]
[-93.36777496 -11.22140217]
[-107.79455566 -16.09184837]
[-116.48434448 -28.37808228]
[-116.27571869 -43.24732971]
[-128.39689636 -52.08345032]
[-140.51808167 -60.91956711]
[-152.63925171 -69.75569153]
[-168.34872437 -71.63267517]
[-174.07551575 -85.38233185]
[-186.19670105 -94.21845245]
[-198.31787109 -103.05457306]
[-210.43905640 -111.89069366]
[-226.14852905 -113.76767731]
[-231.87532043 -127.51734161]
[-243.99649048 -136.35345459]
[-256.11767578 -145.18957520]
[-268.23886108 -154.02569580]
[-267.47323608 -139.04524231]
[-278.01693726 -128.37609863]
[-293.00537109 -128.96444702]
[-302.68032837 -140.42724609]
[-300.74279785 -155.30158997]
[-288.45471191 -163.90338135]
[-302.87438965 -168.03538513]
[-317.29403687 -172.16738892]
[-331.71368408 -176.29939270]
[-346.13336182 -180.43139648]
[-360.80438232 -173.93986511]
[-374.95968628 -181.49018860]
[-377.74050903 -197.29039001]
[-367.01364136 -209.21992493]
[-351.00781250 -208.12747192]
[-342.00134277 -194.85105896]
[-327.58169556 -190.71905518]
[-313.16201782 -186.58705139]
[-298.74237061 -182.45504761]
[-284.32272339 -178.32304382]
[-275.68099976 -190.58358765]
[-284.42019653 -202.77482605]
[-298.74884033 -209.48306274]
[-299.87542725 -224.33500671]
[-308.61462402 -236.52626038]
[-317.35382080 -248.71749878]
[-326.09298706 -260.90875244]
[-334.83218384 -273.10000610]
[-343.57138062 -285.29125977]
[-352.40750122 -297.41241455]
[-361.33999634 -309.46276855]
[-376.59164429 -315.48931885]
[-378.73034668 -331.74841309]
[-365.55599976 -341.51406860]
[-350.62121582 -334.74026489]
[-349.28964233 -318.39526367]
[-340.35714722 -306.34490967]
[-333.84082031 -302.83947754]
[-331.38012695 -294.03045654]
[-322.64093018 -281.83920288]
[-313.90176392 -269.64794922]
[-305.16256714 -257.45669556]
[-296.42337036 -245.26544189]
[-287.68417358 -233.07420349]
[-273.98062134 -227.23796082]
[-272.22894287 -211.51402283]
[-263.48974609 -199.32276917]
[-259.40274048 -166.14688110]
[-247.28155518 -157.31076050]
[-235.16036987 -148.47463989]
[-223.03919983 -139.63851929]
[-208.19671631 -138.39355469]
[-201.60293579 -124.01187134]
[-189.48175049 -115.17575073]
[-177.36058044 -106.33963013]
[-165.23939514 -97.50350952]
[-150.39691162 -96.25854492]
[-143.80313110 -81.87686920]
[-131.68196106 -73.04074860]
[-119.56077576 -64.20462799]
[-107.43959808 -55.36850739]
[-93.34735870 -60.11685181]
[-78.99148560 -55.60321808]
[-69.94029999 -43.35865021]
[-69.83340454 -27.95427704]
[-57.71222687 -19.11815643]
[-45.59104919 -10.28203678]
[-33.46986771 -1.44591701]
[-21.34869003 7.39020300]
[-9.22751045 16.22632217]
[3.03303289 24.86802864]
[15.42982197 33.31312180]
[27.82661057 41.75821686]
[40.22340012 50.20331192]
[55.09803772 50.97433472]
[62.14707565 65.13842773]
[74.54386139 73.58352661]
[86.94065094 82.02861786]
[97.12603760 77.97144318]
[108.01141357 79.27961731]
[116.94550323 85.63452148]
[130.99023438 80.36710358]
[145.03495789 75.09967804]
[151.98092651 69.14924622]
[159.34585571 69.86219788]
[173.47279358 64.81940460]
[187.59973145 59.77661896]
[201.72666931 54.73382950]
[215.85360718 49.69104004]
[223.99543762 35.86751175]
[239.89906311 33.75697708]
[251.36456299 44.97845840]
[249.59660339 60.92380142]
[235.95140076 69.36109161]
[220.89639282 63.81797409]
[206.76945496 68.86076355]
[192.64251709 73.90355682]
[178.51557922 78.94634247]
[164.38865662 83.98912811]
[150.30236816 89.14440155]
[136.25764465 94.41182709]
[122.21292877 99.67924500]
[121.73725891 104.58352661]
[120.19223785 109.26231384]
[117.65387726 113.48545837]
[125.80004883 126.08069611]
[133.94621277 138.67593384]
[141.24313354 144.19038391]
[142.11999512 151.53761292]
[150.06427002 164.26113892]
[160.79968262 166.09872437]
[168.58679199 173.39587402]
[171.01480103 183.56205750]
[167.51556396 193.17750549]
[175.05006409 206.14790344]
[182.58456421 219.11831665]
[201.06179810 223.26141357]
[210.49194336 239.31327820]
[205.29640198 256.85797119]
[213.24067688 269.58151245]
[221.18495178 282.30505371]
[229.12924194 295.02859497]
[244.48629761 296.23971558]
[256.05038452 306.14553833]
[259.52307129 320.78811646]
[253.77651978 334.50360107]
[261.72079468 347.22714233]
[269.66506958 359.95068359]
[277.60937500 372.67422485]
[285.55364990 385.39776611]
[293.49792480 398.12130737]
[308.95040894 401.43731689]
[317.46194458 414.75384521]
[313.98272705 430.17041016]
[300.57696533 438.54064941]
[285.19802856 434.89865112]
[276.97000122 421.40515137]
[280.77438354 406.06558228]
[272.83010864 393.34204102]
[264.88583374 380.61849976]
[256.94155884 367.89495850]
[248.99726868 355.17141724]
[241.05297852 342.44790649]
[226.20704651 341.58984375]
[214.57550049 332.04150391]
[210.75199890 317.30264282]
[216.40570068 302.97286987]
[208.46142578 290.24932861]
[200.51713562 277.52578735]
[192.57286072 264.80224609]
[181.15078735 264.70025635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[7 155]
[8 154]
[9 152]
[10 151]
[11 150]
[13 123]
[14 122]
[15 121]
[17 119]
[18 118]
[19 117]
[20 116]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[28 110]
[32 106]
[33 105]
[34 104]
[35 103]
[37 101]
[38 100]
[39 99]
[40 98]
[42 96]
[43 95]
[44 94]
[45 93]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[66 92]
[67 91]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 82]
[76 81]
[126 147]
[127 146]
[128 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[164 195]
[165 194]
[166 193]
[167 192]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
