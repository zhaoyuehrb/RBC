%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCUGUGUAUGAAUGACAAGGAUACCUUCAGCCAGCUCAUUCUGGAUGAAUGAAUGAUUACACUAAGUGUCCUCCACAUUCCUCUGUGGGCUCACUUCAUGGACUCACUUUGCGUGCUUGUUAAAUGUGCUGUGUUGCUCCCAAGACCAUGUAAAGCCUACUGACCACUAACCUCCCUCACAGCAGAAACUAGACGUCAGGUUAAA\
) } def
/len { sequence length } bind def

/coor [
[97.27198029 136.34370422]
[89.54533386 149.20057678]
[81.81868744 162.05743408]
[74.09204102 174.91430664]
[81.41627502 188.34199524]
[81.03852844 203.53257751]
[73.16035461 216.40895081]
[59.98295975 223.56521606]
[45.09311676 223.16749573]
[37.36647415 236.02435303]
[29.63982964 248.88121033]
[21.91318512 261.73806763]
[29.91978073 274.78234863]
[30.93572235 290.05410767]
[24.72755623 304.04400635]
[12.72187042 313.53726196]
[-2.32251382 316.35241699]
[-16.94850922 311.84255981]
[-27.79516602 301.04400635]
[-32.37000656 286.43820190]
[-29.62176132 271.38146973]
[-20.18195915 259.33367920]
[-6.21979856 253.06340027]
[9.05632019 254.01144409]
[16.78296471 241.15457153]
[24.50960922 228.29771423]
[32.23625565 215.44084167]
[24.89688301 202.47938538]
[25.03159332 187.48480225]
[32.70434189 174.48498535]
[45.94074249 167.02210999]
[61.23517990 167.18765259]
[68.96182251 154.33079529]
[76.68846893 141.47392273]
[84.41511536 128.61706543]
[80.21909332 122.40068054]
[65.25600433 123.45233917]
[71.82704163 109.96791840]
[67.63101959 103.75154114]
[52.81746292 106.10919189]
[38.00390625 108.46684265]
[23.19034958 110.82449341]
[8.37679100 113.18214417]
[-6.43676615 115.53979492]
[-16.98286438 127.62943268]
[-33.00330734 126.77800751]
[-42.20858383 113.63866425]
[-37.53719330 98.29077911]
[-22.57262611 92.50793457]
[-8.79441738 100.72623444]
[6.01914024 98.36858368]
[20.83269691 96.01093292]
[35.64625549 93.65328217]
[50.45981216 91.29563141]
[65.27336884 88.93798065]
[74.49153137 78.75066376]
[85.90158844 73.57203674]
[97.23056030 73.43694305]
[88.19633484 61.46269226]
[72.79228210 61.60909653]
[60.40054703 52.76046753]
[55.65147781 38.48075104]
[60.16747284 24.31234169]
[51.13324738 12.33808804]
[35.73102570 10.01228809]
[26.73961258 -2.26000404]
[29.05182648 -16.92933464]
[20.01759911 -28.90358734]
[10.98337269 -40.87784195]
[1.94914615 -52.85209656]
[-7.08508062 -64.82634735]
[-22.48730087 -67.15214539]
[-31.47871399 -79.42443848]
[-29.16650009 -94.09377289]
[-36.83447266 -99.06057739]
[-38.24491882 -106.31658936]
[-47.09813690 -118.42528534]
[-55.95135880 -130.53398132]
[-64.80458069 -142.64266968]
[-73.65779877 -154.75137329]
[-89.31137848 -156.92880249]
[-98.77366638 -169.58741760]
[-96.43085480 -185.21708679]
[-83.67290497 -194.54501343]
[-68.06887054 -192.03709412]
[-58.87635422 -179.18122864]
[-61.54910660 -163.60458374]
[-52.69588852 -151.49589539]
[-43.84266663 -139.38720703]
[-34.98944473 -127.27850342]
[-26.13622284 -115.16981506]
[-17.19224739 -103.12799835]
[-2.45173025 -101.32445526]
[6.88083792 -89.30955505]
[4.88917303 -73.86057281]
[13.92339993 -61.88632202]
[22.95762634 -49.91206741]
[31.99185371 -37.93781662]
[41.02608109 -25.96356201]
[55.76659775 -24.16002083]
[65.09916687 -12.14511967]
[63.10749817 3.30386138]
[72.14172363 15.27811527]
[87.00553131 14.82502842]
[99.43298340 23.31162643]
[104.53998566 37.65637970]
[100.17058563 52.42846680]
[109.20481110 64.40271759]
[122.65583038 71.04125977]
[137.65541077 70.92852783]
[152.65498352 70.81579590]
[167.65455627 70.70305634]
[181.39619446 62.86225510]
[194.18124390 70.50368500]
[209.18083191 70.39094543]
[224.18040466 70.27821350]
[239.17997742 70.16548157]
[247.73941040 66.97126007]
[254.40545654 70.16548157]
[269.40502930 70.27821350]
[283.26296997 62.64484787]
[295.93173218 70.47758484]
[310.93130493 70.59032440]
[325.93087769 70.70305634]
[330.47265625 68.12396240]
[335.08792114 67.59852600]
[338.98181152 68.81060028]
[341.60015869 71.17426300]
[355.78811646 64.17337036]
[368.09088135 72.56924438]
[383.07012939 73.35803223]
[398.04937744 74.14682770]
[413.02862549 74.93561554]
[428.00787354 75.72441101]
[442.98712158 76.51319885]
[457.96636963 77.30199432]
[463.01150513 63.07432556]
[471.85241699 50.85709763]
[483.76565552 41.63540268]
[497.78054810 36.14984131]
[512.75811768 34.83700943]
[527.48388672 37.79479218]
[540.76605225 44.77510071]
[551.53222656 55.20466995]
[558.91577148 68.23211670]
[562.32580566 82.79745483]
[577.30505371 83.58625031]
[585.01025391 69.25658417]
[598.14599609 59.75537491]
[614.05291748 56.94347000]
[629.53790283 61.33379364]
[641.51501465 71.99865723]
[647.62042236 86.76525116]
[662.60980225 87.32879639]
[677.59924316 87.89234924]
[690.29205322 78.08052063]
[705.84228516 82.02641296]
[712.32110596 96.70307159]
[704.75854492 110.85182190]
[688.95593262 113.61894989]
[677.03570557 102.88175964]
[662.04626465 102.31820679]
[647.05688477 101.75465393]
[641.18273926 114.32388306]
[630.92907715 123.73437500]
[617.82183838 128.54086304]
[603.82879639 127.98659515]
[591.06402588 122.12227631]
[581.46887207 111.80336761]
[576.51623535 98.56549072]
[561.53698730 97.77670288]
[556.61608887 111.90334320]
[547.90515137 124.08326721]
[536.10314941 133.32441711]
[522.16131592 138.87113953]
[507.20635986 140.26596069]
[492.44949341 137.38734436]
[479.08822632 130.46018982]
[468.20941162 120.03828430]
[460.70053101 106.96009064]
[457.17758179 92.28124237]
[442.19833374 91.49244690]
[427.21908569 90.70365906]
[412.23983765 89.91486359]
[397.26058960 89.12606812]
[382.28134155 88.33728027]
[367.30209351 87.54848480]
[354.18557739 94.60580444]
[340.81137085 86.15351105]
[325.81814575 85.70263672]
[310.81857300 85.58989716]
[295.81900024 85.47716522]
[283.03393555 93.11859131]
[269.29229736 85.27778625]
[254.29270935 85.16505432]
[239.29270935 85.16505432]
[224.29313660 85.27778625]
[209.29356384 85.39052582]
[194.29399109 85.50325775]
[181.62522888 93.33599854]
[167.76728821 85.70263672]
[152.76771545 85.81536865]
[137.76814270 85.92810059]
[122.76856232 86.04084015]
[127.85176849 94.81556702]
[129.45909119 105.41891479]
[126.95491791 116.44710541]
[120.27597809 126.28879547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[4 32]
[9 27]
[10 26]
[11 25]
[12 24]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[58 108]
[59 107]
[63 103]
[64 102]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[74 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[109 204]
[110 203]
[111 202]
[112 201]
[114 199]
[115 198]
[116 197]
[117 196]
[119 195]
[120 194]
[122 192]
[123 191]
[124 190]
[128 189]
[130 187]
[131 186]
[132 185]
[133 184]
[134 183]
[135 182]
[136 181]
[146 171]
[147 170]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
