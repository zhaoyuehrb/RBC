%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGGGGCAGGCGCGCGCCCGCCUGUCGCGACAGUCGGGGCCGAGGCCCAGGGGGAGGUGGCCUGUCGCGGGUCGCCCGGCUCCCGGAGGCGAGGGGGGCGCGGGCGG\
) } def
/len { sequence length } bind def

/coor [
[98.63349915 127.28881836]
[91.48523712 125.96238708]
[84.93983459 122.79776764]
[73.55408478 132.56324768]
[62.16833115 142.32873535]
[50.78258133 152.09422302]
[39.39682770 161.85969543]
[28.01107788 171.62518311]
[16.62532425 181.39067078]
[11.18753433 196.24801636]
[-3.51033497 198.66088867]
[-14.89608669 208.42637634]
[-15.85316944 224.20164490]
[-27.73996353 234.61700439]
[-43.50424576 233.49319458]
[-53.79334641 221.49694824]
[-52.50292587 205.74542236]
[-40.39856720 195.58374023]
[-24.66156960 197.04061890]
[-13.27581787 187.27513123]
[-8.65241146 173.11627197]
[6.85984230 170.00491333]
[18.24559402 160.23942566]
[29.63134575 150.47395325]
[41.01709747 140.70846558]
[52.40285110 130.94297791]
[63.78860092 121.17749786]
[75.17435455 111.41201782]
[74.06162262 91.41236877]
[86.88921356 76.02805328]
[83.58045197 61.39753723]
[80.27168274 46.76701736]
[76.96291351 32.13650131]
[73.65415192 17.50598145]
[70.34538269 2.87546325]
[67.03661346 -11.75505447]
[63.72784805 -26.38557243]
[53.05061722 -15.85007381]
[38.12542725 -17.34630966]
[29.75200272 -29.79162025]
[33.98926926 -44.18069839]
[47.77118301 -50.10174561]
[61.12579727 -43.26969528]
[59.87616730 -58.21755219]
[58.62654114 -73.16541290]
[57.37691498 -88.11326599]
[56.12728882 -103.06112671]
[43.02220154 -111.15821075]
[37.26508713 -125.25463104]
[40.86973953 -139.86526489]
[52.25029755 -149.43713379]
[51.00067139 -164.38499451]
[49.75104523 -179.33285522]
[42.40618896 -194.61322021]
[55.05612946 -205.90104675]
[69.40468597 -196.87025452]
[64.69889832 -180.58247375]
[65.94853210 -165.63462830]
[67.19815826 -150.68676758]
[80.01004028 -143.13734436]
[85.99057007 -129.32803345]
[82.65390778 -114.47138214]
[71.07514954 -104.31075287]
[72.32477570 -89.36289215]
[73.57440186 -74.41503906]
[74.82402802 -59.46717834]
[76.07365417 -44.51932144]
[78.35836792 -29.69433975]
[81.66712952 -15.06382179]
[84.97589874 -0.43330348]
[88.28466797 14.19721508]
[91.59342957 28.82773209]
[94.90219879 43.45825195]
[98.21096802 58.08876801]
[101.51972961 72.71928406]
[116.50769806 78.22747803]
[125.85754395 91.17196655]
[126.37587738 107.13162231]
[139.22502136 114.87108612]
[152.07417297 122.61055756]
[164.92332458 130.35002136]
[177.77247620 138.08949280]
[190.62162781 145.82896423]
[203.57711792 153.38906860]
[216.63644409 160.76837158]
[229.69577026 168.14765930]
[242.75509644 175.52696228]
[255.81442261 182.90625000]
[268.87374878 190.28553772]
[282.47177124 182.99874878]
[297.84884644 184.24313354]
[310.09826660 193.62161255]
[315.31121826 208.14155579]
[311.82431030 223.16969299]
[300.75015259 233.91059875]
[285.62252808 236.93690491]
[271.26858521 231.28291321]
[262.26861572 218.75279236]
[261.49444580 203.34486389]
[248.43511963 195.96557617]
[235.37579346 188.58628845]
[222.31646729 181.20698547]
[209.25714111 173.82769775]
[196.19781494 166.44839478]
[188.72117615 165.88977051]
[182.88215637 158.67811584]
[170.03300476 150.93864441]
[157.18385315 143.19917297]
[144.33470154 135.45970154]
[131.48556519 127.72023773]
[118.63640594 119.98076630]
[112.70731354 124.18824005]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[11 20]
[12 19]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[51 59]
[52 58]
[53 57]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
