%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUACCAAGGUCUGCGGCAGGAGGAGACCGGCUCACAGGAGCAGCAGCAUUGGAAGAGGCACCCAGCAGCCUCCCAGGCAUCCUGGAGGGUCUGCUCCCUGUCUUUCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[145.47233582 138.25885010]
[136.72102356 146.72300720]
[126.42839813 153.22604370]
[115.02648926 157.49502563]
[102.99386597 159.35073853]
[90.83557892 158.71530151]
[79.06195831 155.61538696]
[68.16717529 150.18110657]
[58.60852051 142.64056396]
[50.78720474 133.31025696]
[37.40338898 140.08325195]
[24.01957703 146.85626221]
[10.63576221 153.62925720]
[-2.74805093 160.40226746]
[-11.56766415 173.53713989]
[-26.41727638 172.38027954]
[-29.80052376 187.64749146]
[-42.23722076 197.12709045]
[-57.85513687 196.34307861]
[-69.27997589 185.66566467]
[-71.11727142 170.13639832]
[-62.49950790 157.08770752]
[-47.49573898 152.68080139]
[-33.19027710 158.99647522]
[-25.32796288 146.34603882]
[-9.52105141 147.01844788]
[3.86276221 140.24545288]
[17.24657631 133.47244263]
[30.63039017 126.69944763]
[44.01420212 119.92644501]
[40.57944489 99.18119812]
[44.58452225 78.53846741]
[31.39241409 71.39926147]
[18.20030785 64.26004791]
[5.00820160 57.12083817]
[-11.36088467 58.11333847]
[-20.17801666 44.28618240]
[-12.37288475 29.86356354]
[4.02525997 29.68223381]
[12.14741230 43.92873001]
[25.33951950 51.06793976]
[38.53162384 58.20715332]
[51.72373199 65.34635925]
[62.62602997 53.79763031]
[76.19774628 45.54887009]
[91.46952057 41.18925476]
[107.35058594 41.03016281]
[122.70663452 45.08295822]
[136.44087219 53.05817032]
[147.57234192 64.38617706]
[155.30599976 78.25788116]
[169.84700012 74.57559967]
[184.38800049 70.89331055]
[198.92900085 67.21102905]
[213.47000122 63.52874756]
[221.14646912 58.32073212]
[228.46243286 59.95122910]
[243.09938049 56.67101288]
[257.73632812 53.39079666]
[272.37326050 50.11057663]
[287.01022339 46.83036041]
[301.64715576 43.55014420]
[307.87777710 29.46165657]
[321.05541992 21.83255386]
[336.02154541 23.40716934]
[347.05856323 33.37321091]
[361.69552612 30.09299469]
[376.33245850 26.81277847]
[390.96939087 23.53256226]
[405.60635376 20.25234604]
[420.19671631 16.77076530]
[434.73770142 13.08848381]
[449.27871704 9.40620136]
[460.75720215 -1.48208153]
[474.99441528 2.89409900]
[489.53543091 -0.78818333]
[504.07644653 -4.47046566]
[518.61743164 -8.15274811]
[533.15844727 -11.83503056]
[547.02862549 -21.58463097]
[560.23681641 -10.95547009]
[553.67950439 4.67901993]
[536.84069824 2.70597363]
[522.29974365 6.38825607]
[507.75872803 10.07053852]
[493.21771240 13.75282097]
[478.67672729 17.43510246]
[468.23828125 28.06000519]
[452.96099854 23.94720459]
[438.41998291 27.62948799]
[423.87899780 31.31176949]
[418.08752441 36.06998825]
[408.88656616 34.88928986]
[394.24963379 38.16950989]
[379.61267090 41.44972610]
[364.97573853 44.72994232]
[350.33877563 48.01015854]
[344.61062622 61.73336411]
[331.74792480 69.54456329]
[316.57473755 68.26903534]
[304.92736816 58.18709183]
[290.29043579 61.46730804]
[275.65347290 64.74752045]
[261.01654053 68.02774048]
[246.37959290 71.30796051]
[231.74264526 74.58817291]
[217.15229797 78.06975555]
[202.61128235 81.75203705]
[188.07028198 85.43431854]
[173.52928162 89.11660004]
[158.98828125 92.79888153]
[159.21786499 104.97159576]
[156.96188354 116.93563080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[16 24]
[32 43]
[33 42]
[34 41]
[35 40]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[57 106]
[58 105]
[59 104]
[60 103]
[61 102]
[62 101]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 91]
[72 90]
[73 89]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
