%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGCGGCCGCGGCGGCGCGGAGCUCGGGCGGCCGUGGAGGAACUCAGCCUCGGCCGCAGGAGGCGCCGGGAGCGGAGCCGCCGGGAGUCGCGCAACAGGUUUCCUUCUCCAUCGCUGCGCCCACAGGGGACGCGCGCCCUGCCGGGAGAGGGGCUUCUCGGUUCGCACUCUCGCUCCCAGUCCAGGCAAA\
) } def
/len { sequence length } bind def

/coor [
[228.94229126 69.52533722]
[214.75415039 69.79216766]
[201.29962158 65.18795013]
[190.20307922 56.24698639]
[177.25358582 63.81735992]
[164.30409241 71.38773346]
[151.35458374 78.95810699]
[138.40509033 86.52848053]
[125.45559692 94.09885406]
[112.50610352 101.66922760]
[114.90132904 145.94390869]
[104.33797455 156.59358215]
[93.77462769 167.24327087]
[83.21127319 177.89294434]
[72.64792633 188.54261780]
[68.42283630 203.78923035]
[53.96667480 207.37652588]
[43.40332413 218.02621460]
[39.17823792 233.27282715]
[24.72207832 236.86012268]
[14.15872669 247.50979614]
[12.78589058 263.49401855]
[-0.64634389 272.26638794]
[-15.83391666 267.09750366]
[-21.12622070 251.95251465]
[-12.46345425 238.44932556]
[3.50905013 236.94644165]
[14.07240105 226.29676819]
[17.54192734 211.81188965]
[32.75365067 207.46286011]
[43.31700134 196.81318665]
[46.78652573 182.32830811]
[61.99824905 177.97926331]
[72.56159973 167.32958984]
[83.12494659 156.67991638]
[93.68830109 146.03024292]
[104.25165558 135.38055420]
[97.97978973 121.75398254]
[91.70849609 108.12860107]
[76.74871826 109.22636414]
[61.78894043 110.32412720]
[46.82916260 111.42189026]
[37.82850266 124.20946503]
[22.70072746 128.16981506]
[8.58870697 121.43298340]
[2.15570688 107.17990112]
[6.43919325 92.14042664]
[19.41663551 83.41574860]
[34.96047974 85.12538910]
[45.73140335 96.46211243]
[60.69117737 95.36434937]
[75.65095520 94.26658630]
[90.61073303 93.16882324]
[104.93572998 88.71973419]
[117.88522339 81.14936066]
[130.83471680 73.57898712]
[143.78421021 66.00861359]
[156.73371887 58.43823624]
[169.68321228 50.86786270]
[182.63270569 43.29748917]
[180.34452820 27.39011192]
[184.32336426 11.85908985]
[193.93193054 -0.92706066]
[207.67674255 -9.03013229]
[223.44017029 -11.23601341]
[238.80673218 -7.23652267]
[251.43316650 2.32792258]
[264.25772095 -5.45222664]
[277.08227539 -13.23237610]
[284.86785889 -27.00536537]
[299.76245117 -26.99154091]
[312.58700562 -34.77169037]
[325.41159058 -42.55183792]
[329.25384521 -59.61064529]
[343.95150757 -68.44532013]
[360.16757202 -64.01270294]
[372.86380005 -72.00056458]
[385.56002808 -79.98843384]
[398.25625610 -87.97629547]
[410.95248413 -95.96415710]
[412.85363770 -99.90617371]
[415.63565063 -102.74452972]
[418.84030151 -104.33745575]
[422.01068115 -104.70763397]
[424.74496460 -104.02735901]
[437.93402100 -111.17221832]
[451.12307739 -118.31707764]
[464.31210327 -125.46193695]
[477.50115967 -132.60679626]
[490.69021606 -139.75166321]
[496.75665283 -146.60147095]
[504.15258789 -146.90348816]
[517.45617676 -153.83273315]
[530.75976562 -160.76196289]
[536.93695068 -167.51213074]
[544.33679199 -167.69372559]
[557.75140381 -174.40550232]
[571.16601562 -181.11727905]
[580.93933105 -196.71556091]
[598.39813232 -195.00392151]
[611.70172119 -201.93315125]
[616.64581299 -218.70581055]
[631.88714600 -226.56547546]
[647.78045654 -221.08715820]
[660.96948242 -228.23200989]
[674.15856934 -235.37687683]
[687.34759521 -242.52174377]
[700.53662109 -249.66659546]
[713.72570801 -256.81146240]
[726.91473389 -263.95632935]
[740.10375977 -271.10119629]
[753.29284668 -278.24603271]
[757.83703613 -300.25561523]
[776.91674805 -311.60253906]
[797.89904785 -305.24618530]
[810.32855225 -313.64306641]
[822.75799561 -322.03997803]
[828.12762451 -329.44866943]
[835.45886230 -330.47045898]
[848.02337646 -338.66390991]
[860.58789062 -346.85736084]
[873.08532715 -355.15280151]
[885.51483154 -363.54971313]
[897.94433594 -371.94659424]
[904.63214111 -386.92007446]
[920.96923828 -388.34558105]
[930.14935303 -374.75671387]
[922.72882080 -360.13250732]
[906.34118652 -359.51708984]
[893.91174316 -351.12020874]
[881.48223877 -342.72332764]
[877.69378662 -336.36416626]
[868.78137207 -334.29284668]
[856.21685791 -326.09939575]
[843.65234375 -317.90591431]
[831.15490723 -309.61047363]
[818.72540283 -301.21359253]
[806.29595947 -292.81671143]
[807.71569824 -284.89477539]
[806.73815918 -276.87219238]
[803.43005371 -269.46133423]
[798.06591797 -263.32614136]
[791.10565186 -259.02264404]
[783.15466309 -256.94857788]
[774.91162109 -257.30673218]
[767.10681152 -260.08526611]
[760.43768311 -265.05700684]
[747.24865723 -257.91213989]
[734.05957031 -250.76727295]
[720.87054443 -243.62240601]
[707.68151855 -236.47755432]
[694.49243164 -229.33268738]
[681.30340576 -222.18783569]
[668.11437988 -215.04296875]
[654.92529297 -207.89810181]
[653.01483154 -195.14637756]
[643.97021484 -185.68540955]
[630.93524170 -183.12823486]
[618.63098145 -188.62956238]
[605.32739258 -181.70031738]
[601.38903809 -170.25279236]
[590.34948730 -164.37448120]
[577.87780762 -167.70265198]
[564.46319580 -160.99087524]
[551.04858398 -154.27909851]
[537.68902588 -147.45837402]
[524.38543701 -140.52912903]
[511.08181763 -133.59989929]
[497.83505249 -126.56261444]
[484.64602661 -119.41775513]
[471.45697021 -112.27289581]
[458.26791382 -105.12802887]
[445.07888794 -97.98316956]
[431.88983154 -90.83831024]
[418.94033813 -83.26793671]
[406.24411011 -75.28007507]
[393.54788208 -67.29220581]
[380.85168457 -59.30434418]
[368.15545654 -51.31648254]
[367.07867432 -38.46747208]
[358.66879272 -28.43806458]
[345.82785034 -25.03818321]
[333.19174194 -29.72728157]
[320.36715698 -21.94713211]
[307.54260254 -14.16698360]
[300.67431641 -0.95048136]
[284.86242676 -0.40781826]
[272.03787231 7.37233114]
[259.21331787 15.15248013]
[261.87344360 28.93943405]
[259.66061401 42.83546829]
[252.82073975 55.16650391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 60]
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[17 31]
[18 30]
[20 28]
[21 27]
[39 53]
[40 52]
[41 51]
[42 50]
[67 189]
[68 188]
[69 187]
[71 185]
[72 184]
[73 183]
[76 179]
[77 178]
[78 177]
[79 176]
[80 175]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
[90 169]
[92 168]
[93 167]
[94 166]
[96 165]
[97 164]
[98 163]
[100 160]
[101 159]
[104 155]
[105 154]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[115 138]
[116 137]
[117 136]
[119 135]
[120 134]
[121 133]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
