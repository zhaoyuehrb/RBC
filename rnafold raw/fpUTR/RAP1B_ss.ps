%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGCGCGCCCCGCCCGCGGGCGGAAGCUGGAGCGAGGCUGAACGCCUGACGUCAAGGCGACAUCGCCAAACCUCGCCCAGAUUCAGGCGUGUAAACCAGCCGGAGCGGCGCGGCAGCGGCAGGACCGCCGUGGCGCCUAGAGUAGCGACCCGGGGGGAGCGCGGGGCGACGCUGGCUGCAGGGACCCGGUGACAGCGUGAGAGGUUCGCAGAGUACUAGGUUUUGACAAGCUUGCAUC\
) } def
/len { sequence length } bind def

/coor [
[391.44729614 356.62973022]
[393.86303711 342.86315918]
[381.87893677 333.84201050]
[369.89480591 324.82086182]
[362.67532349 323.31225586]
[357.81430054 315.60317993]
[345.94882202 306.42657471]
[334.08331299 297.24996948]
[322.21783447 288.07336426]
[310.35232544 278.89675903]
[295.55114746 277.23101807]
[289.36825562 262.66796875]
[277.50274658 253.49137878]
[270.30355835 251.88882446]
[265.54342651 244.11700439]
[253.79855347 234.78651428]
[242.05369568 225.45602417]
[234.87599182 223.75975037]
[230.21757507 215.92655945]
[218.59533691 206.44375610]
[206.97308350 196.96096802]
[195.35084534 187.47816467]
[180.60423279 189.23118591]
[168.68254089 179.77984619]
[166.94380188 164.30035400]
[152.19718933 166.05337524]
[140.27549744 156.60203552]
[138.53675842 141.12254333]
[126.91451263 131.63973999]
[115.29226685 122.15694427]
[99.19264984 128.42639160]
[81.61366272 123.64694977]
[69.73318481 108.61840820]
[69.07187653 88.53153229]
[54.65714645 84.38235474]
[39.49485016 93.12661743]
[23.02680016 88.28511810]
[15.31946087 73.32711029]
[0.85187358 69.36618042]
[-13.61571312 65.40525818]
[-28.08329964 61.44433212]
[-42.55088806 57.48340607]
[-64.44340515 65.15988159]
[-79.58378601 48.58205414]
[-94.27864075 45.57184601]
[-108.97348785 42.56163406]
[-123.66834259 39.55142593]
[-138.36318970 36.54121780]
[-153.05804443 33.53100586]
[-167.75289917 30.52079773]
[-182.44773865 27.51058769]
[-191.46202087 28.85321999]
[-197.31396484 24.36417770]
[-211.96832275 21.16267204]
[-226.62268066 17.96116638]
[-239.82453918 26.22849846]
[-254.64054871 22.77296066]
[-262.44082642 10.13605976]
[-277.09518433 6.93455458]
[-291.74954224 3.73304939]
[-306.40390015 0.53154397]
[-321.05828857 -2.66996121]
[-330.42251587 9.38299179]
[-344.09280396 16.17164421]
[-359.35491943 16.34810448]
[-373.17849731 9.87733459]
[-382.81893921 -1.95588648]
[-386.36206055 -16.80206680]
[-383.10437012 -31.71348381]
[-373.69274902 -43.72946548]
[-359.99581909 -50.46423340]
[-344.73315430 -50.58058929]
[-330.93515015 -44.05543518]
[-321.34140015 -32.18434143]
[-317.85678101 -17.32432556]
[-303.20239258 -14.12281895]
[-288.54803467 -10.92131424]
[-273.89367676 -7.71980858]
[-259.23931885 -4.51830339]
[-246.87971497 -12.75092125]
[-231.97250366 -9.71289635]
[-223.42117310 3.30680299]
[-208.76681519 6.50830841]
[-194.11245728 9.70981407]
[-179.43753052 12.81573677]
[-164.74269104 15.82594681]
[-150.04783630 18.83615685]
[-135.35298157 21.84636497]
[-120.65813446 24.85657501]
[-105.96327972 27.86678505]
[-91.26843262 30.87699509]
[-76.57357788 33.88720322]
[-71.84575653 28.65549660]
[-65.54277039 25.34516525]
[-58.41725540 24.40442657]
[-51.33853531 25.99531364]
[-45.18656540 29.96809769]
[-40.74257278 35.87406158]
[-38.58996201 43.01581955]
[-24.12237549 46.97674561]
[-9.65478897 50.93767166]
[4.81279850 54.89859390]
[19.28038597 58.85951996]
[29.46014023 50.97921753]
[42.51461029 50.38580322]
[53.69528961 57.51912689]
[58.80632401 69.96762848]
[73.22105408 74.11680603]
[85.60413361 65.65162659]
[86.97097778 50.71403122]
[88.33782196 35.77643585]
[89.70466614 20.83884239]
[91.07151031 5.90124750]
[84.62391663 -8.54655743]
[93.48877716 -20.51583290]
[94.85562134 -35.45342636]
[88.40802002 -49.90123367]
[97.27288055 -61.87051010]
[98.63972473 -76.80810547]
[100.00656891 -91.74569702]
[101.37341309 -106.68329620]
[92.25662231 -119.88418579]
[97.03102112 -135.20034790]
[112.03410339 -140.88252258]
[125.75678253 -132.57183838]
[127.67220306 -116.64353180]
[116.31101227 -105.31644440]
[114.94416046 -90.37885284]
[113.57731628 -75.44126129]
[112.21047211 -60.50366211]
[118.75583649 -47.12429428]
[109.79321289 -34.08658218]
[108.42636871 -19.14898872]
[114.97173309 -5.76961994]
[106.00910950 7.26809263]
[104.64226532 22.20568657]
[103.27542114 37.14328384]
[101.90856934 52.08087540]
[100.54172516 67.01847076]
[115.23998260 72.46638489]
[125.11815643 83.68087006]
[128.33015442 97.52748871]
[124.77506256 110.53470612]
[136.39730835 120.01750183]
[148.01956177 129.50028992]
[163.53306580 128.09722900]
[175.18458557 137.87969971]
[176.42660522 152.67811584]
[191.94010925 151.27503967]
[203.59162903 161.05751038]
[204.83364868 175.85592651]
[216.45588684 185.33871460]
[228.07812500 194.82151794]
[239.70037842 204.30430603]
[251.38418579 213.71115112]
[263.12905884 223.04164124]
[274.87390137 232.37213135]
[286.67935181 241.62588501]
[298.54483032 250.80247498]
[314.19470215 253.12460327]
[319.52893066 267.03128052]
[331.39443970 276.20785522]
[343.25991821 285.38446045]
[355.12542725 294.56106567]
[366.99090576 303.73767090]
[378.91595459 312.83673096]
[390.90008545 321.85787964]
[402.88418579 330.87902832]
[418.04364014 324.25341797]
[434.38159180 326.17178345]
[447.44387817 336.01565552]
[453.71762085 351.01901245]
[451.57568359 367.04476929]
[463.67636108 375.90893555]
[479.38143921 377.82229614]
[485.07638550 391.58517456]
[497.17706299 400.44937134]
[509.27774048 409.31353760]
[521.37841797 418.17770386]
[537.42401123 412.79605103]
[553.35504150 417.99429321]
[562.94616699 431.53250122]
[562.57427979 447.95330811]
[574.78948975 456.65899658]
[587.00463867 465.36468506]
[599.21984863 474.07037354]
[611.43505859 482.77603149]
[623.65026855 491.48171997]
[639.37896729 493.19018555]
[645.25280762 506.87768555]
[657.46801758 515.58337402]
[669.68322754 524.28906250]
[681.89843750 532.99468994]
[697.87243652 527.40435791]
[713.86993408 532.39453125]
[723.63671875 545.80657959]
[723.47888184 562.23083496]
[735.80651855 570.77655029]
[748.13415527 579.32226562]
[762.34307861 573.31304932]
[777.54132080 575.96221924]
[788.87908936 586.42443848]
[792.73864746 601.36120605]
[787.88836670 616.00628662]
[775.87597656 625.68646240]
[760.53460693 627.31286621]
[746.75958252 620.36645508]
[738.94647217 607.06390381]
[739.58843994 591.64990234]
[727.26080322 583.10418701]
[714.93316650 574.55847168]
[702.80474854 580.11224365]
[689.40789795 578.94360352]
[678.24615479 571.25091553]
[672.29132080 558.95263672]
[673.19274902 545.20989990]
[660.97753906 536.50421143]
[648.76232910 527.79858398]
[636.54711914 519.09289551]
[621.69213867 518.00708008]
[614.94458008 503.69692993]
[602.72937012 494.99124146]
[590.51416016 486.28555298]
[578.29901123 477.57989502]
[566.08380127 468.87420654]
[553.86859131 460.16851807]
[541.66882324 465.56375122]
[528.28833008 464.22055054]
[517.22778320 456.38302612]
[511.43380737 444.00817871]
[512.51422119 430.27838135]
[500.41357422 421.41421509]
[488.31289673 412.55004883]
[476.21221924 403.68588257]
[461.37265015 402.40652466]
[454.81219482 388.00961304]
[442.71151733 379.14544678]
[430.61410522 385.46011353]
[416.91055298 385.95312500]
[404.26931763 380.47152710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[12 159]
[13 158]
[15 157]
[16 156]
[17 155]
[19 154]
[20 153]
[21 152]
[22 151]
[25 148]
[28 145]
[29 144]
[30 143]
[34 108]
[35 107]
[38 103]
[39 102]
[40 101]
[41 100]
[42 99]
[44 92]
[45 91]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[53 84]
[54 83]
[55 82]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[109 139]
[110 138]
[111 137]
[112 136]
[113 135]
[115 133]
[116 132]
[118 130]
[119 129]
[120 128]
[121 127]
[173 237]
[174 236]
[176 234]
[177 233]
[178 232]
[179 231]
[183 226]
[184 225]
[185 224]
[186 223]
[187 222]
[188 221]
[190 219]
[191 218]
[192 217]
[193 216]
[197 211]
[198 210]
[199 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
