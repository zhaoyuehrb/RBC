%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUGGUUGAAAGAAAACCCACAAUCCAGUGUCAAGAAAGAAGUCAACUUUUCUUCCCCUACUUCCCUGCAUUUCUCCUCUGUGCUCACUGCCACACGCAGCUCAACCUGGACGGCACAGCCAGAGGCGAGAUGCUUCUCUGCUGAUCUGAGUCUGCCUGCAGCAUGGACCUGGGUCUUCCCUGAAGCAUCUCCAGGGCUGGAGGGACGACUGCCAUGCACCGAGGGCUCAUCCAUCCGCAGAGCAGGGCAGUGG\
GAGGAGACGCC\
) } def
/len { sequence length } bind def

/coor [
[7.11368895 421.37026978]
[1.87393725 438.07913208]
[-9.37536621 451.45278931]
[-24.87691307 459.44445801]
[-42.22539520 460.84484863]
[-46.40517807 475.25073242]
[-50.58496094 489.65661621]
[-54.76473999 504.06250000]
[-45.91130066 516.95245361]
[-47.46611786 532.51251221]
[-58.69505310 543.39575195]
[-74.29615021 544.46343994]
[-86.90303802 535.21142578]
[-90.56314087 520.00817871]
[-83.54826355 506.03228760]
[-69.17062378 499.88272095]
[-64.99083710 485.47683716]
[-60.81105804 471.07095337]
[-56.63127899 456.66506958]
[-67.04546356 449.69772339]
[-75.10287476 440.07873535]
[-80.15085602 428.57165527]
[-81.77617645 416.09356689]
[-79.83881378 403.64205933]
[-74.48397064 392.21533203]
[-66.13123322 382.73239136]
[-55.44171906 375.95886230]
[-43.26574707 372.44543457]
[-30.57520103 372.48294067]
[-25.88961792 358.23355103]
[-21.20403481 343.98413086]
[-16.51845360 329.73474121]
[-11.83287048 315.48535156]
[-23.47390366 306.02456665]
[-35.11389160 296.56460571]
[-48.10427094 304.06460571]
[-61.09465408 311.56460571]
[-74.08503723 319.06460571]
[-87.07541656 326.56460571]
[-100.06579590 334.06460571]
[-101.55378723 349.51019287]
[-111.86145782 361.10894775]
[-127.02530670 364.40097046]
[-141.21452332 358.12036133]
[-148.97305298 344.68218994]
[-147.31759644 329.25369263]
[-136.88470459 317.76739502]
[-121.68604279 314.64007568]
[-107.56579590 321.07424927]
[-94.57541656 313.57424927]
[-81.58503723 306.07424927]
[-68.59465027 298.57424927]
[-55.60427094 291.07424927]
[-42.61389160 283.57424927]
[-31.79115295 273.18826294]
[-23.76269531 260.51766968]
[-15.73423576 247.84709167]
[-7.78045797 235.12948608]
[0.09836281 222.36531067]
[7.97718382 209.60113525]
[15.85600471 196.83695984]
[23.73482513 184.07278442]
[31.61364746 171.30860901]
[31.71468925 156.41433716]
[45.54731369 148.73521423]
[53.42613220 135.97103882]
[61.30495453 123.20685577]
[69.18377686 110.44268036]
[67.77391052 95.50908661]
[57.64547729 84.44496155]
[47.51704788 73.38083649]
[37.38861847 62.31670761]
[27.26018715 51.25257874]
[17.13175774 40.18845367]
[7.00332737 29.12432480]
[-8.02204227 24.16964912]
[-10.90876293 9.55745792]
[-21.03719330 -1.50666904]
[-31.16562271 -12.57079601]
[-41.29405212 -23.63492203]
[-51.42248154 -34.69905090]
[-61.55091476 -45.76317596]
[-69.62446594 -49.96072388]
[-71.73248291 -57.01758194]
[-81.73003387 -68.20011139]
[-91.72757721 -79.38264465]
[-102.56155396 -79.35823059]
[-111.44773865 -85.16433716]
[-115.60119629 -94.69427490]
[-113.87893677 -104.72406769]
[-123.61058807 -116.13874817]
[-133.34223938 -127.55342865]
[-143.07388306 -138.96810913]
[-155.26132202 -136.36798096]
[-167.33074951 -139.16661072]
[-177.01686096 -146.77601624]
[-182.52828979 -157.71118164]
[-182.87886047 -169.87963867]
[-178.06344604 -180.98176575]
[-187.52381897 -192.62228394]
[-196.98417664 -204.26278687]
[-212.72856140 -205.63752747]
[-222.82530212 -217.79612732]
[-221.28417969 -233.52510071]
[-209.01950073 -243.49272156]
[-193.30770874 -241.78538513]
[-183.47032166 -229.41601562]
[-185.34367371 -213.72315979]
[-175.88330078 -202.08264160]
[-166.42294312 -190.44213867]
[-148.82417297 -192.20240784]
[-133.57073975 -182.94221497]
[-126.89550781 -166.22354126]
[-131.65921021 -148.69976807]
[-121.92755890 -137.28507996]
[-112.19590759 -125.87039948]
[-102.46425629 -114.45571899]
[-83.80923462 -109.29498291]
[-80.54504395 -89.38019562]
[-70.54750061 -78.19766235]
[-60.54994965 -67.01512909]
[-50.48678589 -55.89160538]
[-40.35835648 -44.82748032]
[-30.22992706 -33.76335144]
[-20.10149574 -22.69922638]
[-9.97306633 -11.63509941]
[0.15536366 -0.57097208]
[14.45628071 3.59232450]
[18.06745529 18.99589539]
[28.19588470 30.06002235]
[38.32431412 41.12414932]
[48.45274353 52.18827438]
[58.58117294 63.25240326]
[68.70960236 74.31652832]
[78.83803558 85.38065338]
[92.46555328 77.51702118]
[106.81755829 79.39557648]
[116.16076660 88.74429321]
[130.80679321 85.50488281]
[145.45281982 82.26546478]
[160.09886169 79.02605438]
[174.74488831 75.78663635]
[189.39091492 72.54722595]
[201.19447327 62.01220703]
[215.29235840 66.81832886]
[229.93840027 63.57891464]
[244.58442688 60.33950043]
[258.86386108 46.07937622]
[277.02127075 52.78401566]
[291.58700562 49.20087051]
[306.15277100 45.61772537]
[320.71850586 42.03458405]
[335.28427124 38.45143890]
[349.85000610 34.86829758]
[364.41577148 31.28515244]
[369.47668457 21.70587540]
[378.77297974 16.58199310]
[389.13766479 17.38467598]
[397.18734741 23.61088943]
[411.83337402 20.37147522]
[420.35098267 7.32969141]
[435.25027466 4.25310326]
[447.63113403 12.45371151]
[462.27716064 9.21429729]
[476.92318726 5.97488356]
[491.56921387 2.73546934]
[506.21524048 -0.50394493]
[520.86126709 -3.74335909]
[528.53326416 -8.63648510]
[535.69866943 -6.93365431]
[539.54077148 -10.36635399]
[543.87915039 -11.85612965]
[547.89904785 -11.53594589]
[550.95373535 -9.83999443]
[565.73596191 -12.38675976]
[580.51818848 -14.93352509]
[595.30041504 -17.48028946]
[607.58654785 -27.44830704]
[621.44268799 -21.98423386]
[636.22491455 -24.53100014]
[651.00714111 -27.07776451]
[665.78936768 -29.62453079]
[680.57159424 -32.17129517]
[689.69329834 -44.79790497]
[704.72088623 -47.17010880]
[716.70220947 -38.39608765]
[731.48443604 -40.94285583]
[746.26666260 -43.48962021]
[754.16033936 -48.01638031]
[761.23767090 -45.97831726]
[776.04882812 -48.35097885]
[788.42694092 -59.10804367]
[803.84167480 -53.51171875]
[806.43566895 -37.31902695]
[793.54040527 -27.18761635]
[778.42150879 -33.53981781]
[763.61035156 -31.16715622]
[748.81341553 -28.70740128]
[734.03118896 -26.16063499]
[719.24896240 -23.61387062]
[710.89453125 -11.33629036]
[695.93951416 -8.54292965]
[683.11834717 -17.38907623]
[668.33612061 -14.84231186]
[653.55389404 -12.29554653]
[638.77166748 -9.74878120]
[623.98944092 -7.20201635]
[612.76062012 2.58383965]
[597.84716797 -2.69807124]
[583.06494141 -0.15130603]
[568.28271484 2.39545918]
[553.50048828 4.94222450]
[538.76550293 7.74947691]
[524.10070801 10.90267086]
[509.45468140 14.14208508]
[494.80862427 17.38150024]
[480.16259766 20.62091446]
[465.51657104 23.86032867]
[450.87054443 27.09974289]
[443.10299683 39.75678253]
[428.29598999 43.25064850]
[415.07278442 35.01750565]
[400.42675781 38.25691986]
[387.11761475 52.31072235]
[367.99890137 45.85090256]
[353.43316650 49.43404770]
[338.86740112 53.01718903]
[324.30166626 56.60033417]
[309.73590088 60.18347549]
[295.17016602 63.76662064]
[280.60440063 67.34976196]
[276.14538574 76.49744415]
[267.20849609 81.80810547]
[256.60430908 81.33207703]
[247.82383728 74.98553467]
[233.17781067 78.22494507]
[218.53178406 81.46436310]
[207.77580261 91.76766968]
[192.63032532 87.19325256]
[177.98429871 90.43267059]
[163.33827209 93.67208099]
[148.69224548 96.91149902]
[134.04620361 100.15090942]
[119.40017700 103.39032745]
[106.92489624 121.62576294]
[81.94795227 118.32150269]
[74.06912994 131.08567810]
[66.19030762 143.84985352]
[58.31148911 156.61402893]
[57.64690018 172.42126465]
[44.37782288 179.18742371]
[36.49900055 191.95159912]
[28.62018013 204.71577454]
[20.74135971 217.47994995]
[12.86253834 230.24412537]
[4.98371744 243.00830078]
[3.14967227 251.92109680]
[-3.06364584 255.87554932]
[-11.09210491 268.54614258]
[-19.12056351 281.21673584]
[2.41652703 320.17092896]
[-2.26905584 334.42031860]
[-6.95463848 348.66973877]
[-11.64022064 362.91912842]
[-16.32580376 377.16851807]
[-2.71945572 388.35958862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[29 265]
[30 264]
[31 263]
[32 262]
[33 261]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[55 260]
[56 259]
[57 258]
[58 256]
[59 255]
[60 254]
[61 253]
[62 252]
[63 251]
[65 249]
[66 248]
[67 247]
[68 246]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[84 121]
[85 120]
[86 119]
[90 117]
[91 116]
[92 115]
[93 114]
[99 110]
[100 109]
[101 108]
[138 244]
[139 243]
[140 242]
[141 241]
[142 240]
[143 239]
[145 237]
[146 236]
[147 235]
[149 231]
[150 230]
[151 229]
[152 228]
[153 227]
[154 226]
[155 225]
[159 223]
[160 222]
[163 219]
[164 218]
[165 217]
[166 216]
[167 215]
[168 214]
[170 213]
[174 212]
[175 211]
[176 210]
[177 209]
[179 207]
[180 206]
[181 205]
[182 204]
[183 203]
[186 200]
[187 199]
[188 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
