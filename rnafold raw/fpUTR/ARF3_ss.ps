%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCGGCUUCCGGUGCUAGGUGGAGGGAAGGAAGGAGGGAGCCGGGGAGUGGGCCAGGGCAGCAGCCGGGCUGAAGUCGGCUUGGGGAGCCAGAGGGAGCGGAGCGGAACCUGCGGGGCAGAGGCGGCGGCCGCAGCGGCGCAGCUGAUAGCAGGAACAGGAUCAAGUCUUCCAUACCAGGGACCAGGCCAAAACCAGACUGCCACUGCCCCUACUUGGGCCCCACUGUCCCCAGAAAGCAGCUGCUGUGAUC\
) } def
/len { sequence length } bind def

/coor [
[30.57029533 846.20208740]
[30.19927979 831.20672607]
[29.82826233 816.21130371]
[29.45724678 801.21588135]
[29.08622932 786.22045898]
[28.71521378 771.22503662]
[28.34419823 756.22961426]
[21.03928757 751.26733398]
[16.75767708 743.38720703]
[16.56327248 734.28375244]
[20.62511253 725.98126221]
[28.15184784 720.38354492]
[20.57255173 707.56158447]
[28.47994423 693.85815430]
[28.66546631 678.85931396]
[28.85098839 663.86041260]
[29.03651047 648.86157227]
[17.00527000 640.12158203]
[12.37269211 625.80364990]
[17.11476707 611.33416748]
[29.61209869 602.32733154]
[29.79762077 587.32849121]
[29.98314285 572.32965088]
[18.63688087 582.14099121]
[3.66833401 581.17010498]
[-6.31545401 569.97528076]
[-5.57371712 554.99365234]
[5.46703911 544.83972168]
[20.45828438 545.35217285]
[30.77998543 556.23645020]
[32.07705307 541.29266357]
[33.37412262 526.34881592]
[26.76634598 513.00018311]
[35.66798019 499.92074585]
[36.96504974 484.97692871]
[30.35727310 471.62826538]
[39.25891113 458.54885864]
[40.55597687 443.60504150]
[41.85304642 428.66122437]
[39.30745316 421.74487305]
[43.25968933 413.54098511]
[44.74148560 398.61434937]
[46.22328186 383.68771362]
[39.78110886 370.25836182]
[48.84383392 357.29003906]
[50.32563019 342.36340332]
[51.80742645 327.43676758]
[53.19688416 312.50125122]
[54.49395370 297.55743408]
[51.94836044 290.64111328]
[55.90059662 282.43719482]
[57.38239288 267.51058960]
[58.86418915 252.58395386]
[60.34598541 237.65731812]
[57.88612747 230.71002197]
[61.93953323 222.55563354]
[63.60583115 207.64848328]
[65.17990875 192.73129272]
[66.66170502 177.80467224]
[68.14350128 162.87803650]
[69.62529755 147.95140076]
[71.10709381 133.02478027]
[61.67209244 121.36369324]
[46.76493073 119.69739532]
[31.85777092 118.03109741]
[16.95060921 116.36479950]
[0.53784275 120.61420441]
[-8.08899784 106.01921082]
[3.54747438 93.68920898]
[18.61690712 101.45764160]
[33.52406693 103.12393951]
[48.43122864 104.79023743]
[63.33839035 106.45653534]
[63.76665878 96.04531860]
[67.03118134 86.38039398]
[72.75350952 78.20053864]
[80.37281799 72.09443665]
[89.19889832 68.45875549]
[98.47376251 67.47369385]
[101.24073029 52.73110962]
[104.00769806 37.98852158]
[106.77467346 23.24593544]
[109.54164124 8.50334835]
[112.30860901 -6.23923922]
[115.07557678 -20.98182678]
[106.60364532 -29.27537346]
[103.20944977 -40.50980377]
[105.62225342 -51.87273788]
[113.13244629 -60.57725143]
[123.79490662 -64.54536438]
[126.92568207 -79.21499634]
[113.53260040 -92.92883301]
[111.16295624 -111.79872894]
[120.59859467 -128.13720703]
[137.84915161 -135.39880371]
[140.43357849 -150.17448425]
[143.01799011 -164.95016479]
[145.60241699 -179.72584534]
[148.18682861 -194.50152588]
[150.67982483 -209.29290771]
[143.75303650 -226.36828613]
[155.40066528 -239.51019287]
[157.61882019 -254.34527588]
[145.38970947 -266.04946899]
[142.58454895 -282.57418823]
[150.11521912 -297.36181641]
[164.83155823 -304.66384888]
[155.54771423 -317.17175293]
[157.82270813 -332.21432495]
[169.80430603 -340.98797607]
[171.83880615 -355.84936523]
[173.87332153 -370.71075439]
[175.90782166 -385.57214355]
[177.94233704 -400.43353271]
[167.32107544 -409.19424438]
[162.44755554 -421.95526123]
[164.49247742 -435.35189819]
[172.81724548 -445.90795898]
[185.16786194 -450.93768311]
[187.38601685 -465.77276611]
[189.60417175 -480.60784912]
[180.47573853 -493.22964478]
[182.93659973 -508.24291992]
[195.02580261 -516.86773682]
[197.24395752 -531.70281982]
[199.46211243 -546.53790283]
[193.85061646 -561.33050537]
[203.38493347 -572.77368164]
[205.60308838 -587.60876465]
[195.10729980 -599.20068359]
[194.56983948 -614.82904053]
[204.24450684 -627.11456299]
[219.56320190 -630.25646973]
[233.29290771 -622.77124023]
[238.95088196 -608.19311523]
[233.86560059 -593.40545654]
[220.43817139 -585.39062500]
[218.22001648 -570.55554199]
[223.99017334 -556.82397461]
[214.29721069 -544.31970215]
[212.07904053 -529.48461914]
[209.86088562 -514.64953613]
[218.89857483 -502.86584473]
[216.86038208 -487.78936768]
[204.43927002 -478.38970947]
[202.22109985 -463.55459595]
[200.00294495 -448.71951294]
[212.07847595 -437.58078003]
[215.15629578 -421.27395630]
[207.82615662 -406.20068359]
[192.80372620 -398.39901733]
[190.76921082 -383.53762817]
[188.73471069 -368.67623901]
[186.70019531 -353.81484985]
[184.66569519 -338.95349121]
[193.84843445 -327.28244019]
[191.99685669 -312.18191528]
[179.69294739 -302.62933350]
[190.13555908 -294.33551025]
[195.16316223 -281.86734009]
[193.36608887 -268.43521118]
[185.10700989 -257.55484009]
[172.45390320 -252.12712097]
[170.23574829 -237.29202271]
[177.16993713 -227.40132141]
[175.46208191 -215.03903198]
[165.48634338 -206.89143372]
[167.51213074 -199.80538940]
[162.96250916 -191.91711426]
[160.37809753 -177.14141846]
[157.79367065 -162.36573792]
[155.20925903 -147.59005737]
[152.62483215 -132.81437683]
[161.72363281 -126.44001007]
[167.82531738 -117.09491730]
[170.02174377 -106.10025024]
[167.96012878 -95.02741241]
[161.89907837 -85.47347260]
[152.67677307 -78.83080292]
[141.59532166 -76.08422852]
[138.46453857 -61.41458893]
[149.32533264 -46.65372467]
[145.86059570 -28.33231354]
[129.81816101 -18.21485710]
[127.05119324 -3.47226954]
[124.28422546 11.27031803]
[121.51725769 26.01290512]
[118.75028992 40.75549316]
[115.98331451 55.49808121]
[113.21634674 70.24066925]
[121.99530792 75.36089325]
[128.87913513 83.03240967]
[133.13981628 92.57600403]
[134.28686523 103.10945129]
[132.12223816 113.62900543]
[126.76770020 123.10502625]
[118.66146088 130.58270264]
[108.52325439 135.27804565]
[97.29092407 136.65946960]
[86.03372192 134.50657654]
[84.55192566 149.43319702]
[83.07012939 164.35983276]
[81.58833313 179.28646851]
[80.10653687 194.21308899]
[82.36869812 203.03390503]
[78.51299286 209.31477356]
[76.84669495 224.22193909]
[75.27261353 239.13911438]
[73.79081726 254.06575012]
[72.30902100 268.99237061]
[70.82722473 283.91900635]
[69.43776703 298.85452271]
[68.14070129 313.79833984]
[70.51178741 322.59048462]
[66.73405457 328.91857910]
[65.25225830 343.84518433]
[63.77046204 358.77182007]
[70.10665131 373.26882935]
[61.14991379 385.16952515]
[59.66811752 400.09613037]
[58.18632126 415.02276611]
[56.79685974 429.95828247]
[55.49979401 444.90209961]
[54.20272446 459.84591675]
[60.71772766 474.26345825]
[51.90886307 486.27398682]
[50.61179733 501.21780396]
[57.12679672 515.63531494]
[48.31793594 527.64587402]
[47.02087021 542.58972168]
[45.72380066 557.53350830]
[44.98199463 572.51519775]
[44.79647446 587.51403809]
[44.61095047 602.51287842]
[56.88167953 611.82604980]
[61.26440811 626.40838623]
[56.27910233 640.60736084]
[44.03536224 649.04711914]
[43.84984207 664.04595947]
[43.66431808 679.04479980]
[43.47879791 694.04364014]
[51.04482269 707.93847656]
[43.15069962 720.56909180]
[54.72298813 738.62573242]
[43.33960724 755.85864258]
[43.71062469 770.85406494]
[44.08164215 785.84942627]
[44.45265579 800.84484863]
[44.82367325 815.84027100]
[45.19469070 830.83569336]
[45.56570816 845.83111572]
[52.00196838 861.51580811]
[38.71193314 872.04254150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 251]
[2 250]
[3 249]
[4 248]
[5 247]
[6 246]
[7 245]
[12 243]
[14 241]
[15 240]
[16 239]
[17 238]
[21 234]
[22 233]
[23 232]
[30 231]
[31 230]
[32 229]
[34 227]
[35 226]
[37 224]
[38 223]
[39 222]
[41 221]
[42 220]
[43 219]
[45 217]
[46 216]
[47 215]
[48 213]
[49 212]
[51 211]
[52 210]
[53 209]
[54 208]
[56 207]
[57 206]
[58 204]
[59 203]
[60 202]
[61 201]
[62 200]
[63 73]
[64 72]
[65 71]
[66 70]
[79 190]
[80 189]
[81 188]
[82 187]
[83 186]
[84 185]
[85 184]
[90 181]
[91 180]
[95 173]
[96 172]
[97 171]
[98 170]
[99 169]
[100 167]
[102 164]
[103 163]
[107 158]
[110 155]
[111 154]
[112 153]
[113 152]
[114 151]
[119 147]
[120 146]
[121 145]
[124 142]
[125 141]
[126 140]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
