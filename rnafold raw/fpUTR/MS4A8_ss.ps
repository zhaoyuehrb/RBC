%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAGGAAAUAAAUACGAAUGAAACUGAGCUCUAAGCAGCAUGUAACCUGGCCUGCAUCCAGGAAAUAGAGGACUUCGGAUCCUUCUAACCCUACCACCCAACUGGCCCCAGUACAUUCAUUCUCUCAGGAAAAAAAACAAGGUCCCCACAGCAAAGAAAAGGAAUAGGAUCAAGAGAUACGUGGCUGCUGGCAGAGCAAGC\
) } def
/len { sequence length } bind def

/coor [
[3.95134354 411.09402466]
[-1.22416639 414.29034424]
[-7.04781723 415.90222168]
[-13.04953861 415.82290649]
[-20.14594269 429.03811646]
[-27.24234581 442.25329590]
[-16.61329460 453.00106812]
[-9.62589931 466.40509033]
[-6.90147734 481.27346802]
[-8.68228054 496.28414917]
[-14.80996132 510.10235596]
[-24.73965073 521.49938965]
[-37.58840561 529.46185303]
[-52.21372604 533.28173828]
[-67.31513977 532.61932373]
[-81.54983521 527.53356934]
[-93.65207672 518.47668457]
[-102.54573822 506.25399780]
[-107.44000244 491.95233154]
[-107.89967346 476.84341431]
[-103.88388062 462.27066040]
[-95.74970245 449.52990723]
[-84.22042847 439.75405884]
[-70.32122803 433.81237793]
[-55.28801727 432.23318481]
[-40.45752716 435.15689087]
[-33.36112595 421.94171143]
[-26.26472282 408.72650146]
[-29.94727325 385.31365967]
[-9.26770115 372.34536743]
[-3.63432646 358.44338989]
[1.99904799 344.54141235]
[7.63242245 330.63943481]
[13.26579666 316.73745728]
[9.19554234 297.83782959]
[25.27003098 285.67944336]
[30.47262192 271.61056519]
[35.67521286 257.54168701]
[40.87780380 243.47282410]
[46.08039474 229.40396118]
[51.28298187 215.33509827]
[56.37709045 201.22657776]
[61.36241150 187.07926941]
[66.34773254 172.93194580]
[71.33305359 158.78463745]
[76.31838226 144.63731384]
[56.63375092 125.93602753]
[49.47035980 99.74617004]
[34.64787674 97.44529724]
[19.82539368 95.14442444]
[5.00291204 92.84354401]
[-9.81957054 90.54267120]
[-21.46984100 100.97364807]
[-37.10094070 101.42391205]
[-49.33234024 91.68087006]
[-52.38875198 76.34488678]
[-44.82702637 62.65714645]
[-30.21758080 57.08057785]
[-15.45854950 62.24826431]
[-7.51869535 75.72019196]
[7.30378675 78.02106476]
[22.12626839 80.32193756]
[36.94874954 82.62281036]
[51.77123260 84.92369080]
[51.10915756 71.09161377]
[54.50539017 56.32485580]
[62.30635452 41.80805206]
[74.51884460 28.82255936]
[64.58531189 17.58312225]
[54.65177917 6.34368563]
[44.71825027 -4.89575100]
[34.69846725 -16.05836678]
[24.59303284 -27.14350128]
[14.48759842 -38.22863388]
[4.29710913 -49.23563004]
[-11.55255413 -53.44516754]
[-15.57002831 -69.34460449]
[-3.62248206 -80.57794952]
[11.99947453 -75.58930969]
[15.22531128 -59.51057053]
[22.10126495 -56.78931046]
[25.57273293 -48.33406830]
[35.67816544 -37.24893570]
[45.78359985 -26.16380119]
[52.61683273 -23.33698082]
[55.95768356 -14.82928371]
[65.89122009 -3.58984685]
[75.82475281 7.64958954]
[85.75828552 18.88902664]
[93.00272369 16.94788361]
[89.12043762 2.45899582]
[85.23815155 -12.02989197]
[81.35586548 -26.51877975]
[77.47358704 -41.00766754]
[69.30415344 -53.58782578]
[78.74425507 -65.24478149]
[92.74775696 -59.86873627]
[91.96247101 -44.88995361]
[95.84475708 -30.40106392]
[99.72704315 -15.91217709]
[103.60932922 -1.42328990]
[107.49161530 13.06559753]
[114.73605347 11.12445450]
[117.71903229 -3.57594919]
[120.70200348 -18.27635193]
[123.68497467 -32.97675705]
[117.96327209 -48.34536362]
[128.61914062 -60.81069183]
[144.69075012 -57.54947662]
[149.64500427 -41.91658020]
[138.38537598 -29.99378395]
[135.40240479 -15.29337978]
[132.41943359 -0.59297585]
[129.43646240 14.10742760]
[136.04405212 17.65563011]
[143.14045715 4.44044685]
[150.23686218 -8.77473640]
[162.99009705 -16.67124367]
[163.45204163 -1.67833292]
[156.35563660 11.53684998]
[149.25923157 24.75203323]
[155.86682129 28.30023384]
[166.47343445 17.69363213]
[177.08003235 7.08703136]
[187.68663025 -3.51957059]
[191.40608215 -19.49134827]
[207.17425537 -23.99654198]
[218.77020264 -12.40059376]
[214.26501465 3.36757851]
[198.29322815 7.08703136]
[187.68663025 17.69363213]
[177.08003235 28.30023384]
[166.47343445 38.90683746]
[168.80203247 46.03618240]
[183.06072998 41.37896347]
[197.31942749 36.72174454]
[209.44110107 27.88630867]
[221.58988953 36.68442917]
[216.97654724 50.95737457]
[201.97663879 50.98043823]
[187.71795654 55.63765717]
[173.45925903 60.29487610]
[175.78787231 67.42422485]
[190.61035156 69.72509766]
[205.43283081 72.02597046]
[220.25531006 74.32684326]
[235.07778931 76.62772369]
[249.96409607 78.47104645]
[264.90011597 79.85507202]
[272.31469727 66.55303955]
[284.50253296 57.42200089]
[299.35208130 54.04396057]
[314.29052734 57.00418854]
[326.72967529 65.78980255]
[334.51440430 78.87864685]
[336.29595947 94.00299835]
[331.76565552 108.54247284]
[321.70840454 119.97801208]
[307.86669922 126.32834625]
[292.63867188 126.49324036]
[278.66268921 120.44412231]
[268.36016846 109.22904968]
[263.51608276 94.79108429]
[248.58007812 93.40705872]
[246.33744812 95.09775543]
[243.28814697 95.99944305]
[239.73027039 95.79972839]
[236.06961060 94.30012512]
[232.77691650 91.45020294]
[217.95443726 89.14933014]
[203.13195801 86.84844971]
[188.30947876 84.54757690]
[173.48698425 82.24670410]
[171.93537903 103.47991180]
[164.66230774 122.41741943]
[152.81921387 137.63626099]
[137.87373352 148.16836548]
[121.44986725 153.55769348]
[105.16291809 153.86494446]
[90.46569824 149.62263489]
[85.48036957 163.76995850]
[80.49504852 177.91726685]
[75.50972748 192.06459045]
[70.52440643 206.21189880]
[70.62324524 215.35151672]
[65.35185242 220.53768921]
[60.14926147 234.60655212]
[54.94667053 248.67541504]
[49.74407959 262.74429321]
[44.54148865 276.81314087]
[39.33890152 290.88201904]
[44.45134735 300.49060059]
[43.44918060 311.10775757]
[36.90415192 319.24746704]
[27.16777802 322.37081909]
[21.53440475 336.27279663]
[15.90102959 350.17477417]
[10.26765537 364.07675171]
[4.63428068 377.97875977]
[8.62025642 382.88983154]
[11.05938339 388.68194580]
[11.77809238 394.88482666]
[10.74151134 401.00164795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 28]
[5 27]
[6 26]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[68 89]
[69 88]
[70 87]
[71 86]
[72 84]
[73 83]
[74 82]
[75 80]
[103 114]
[104 113]
[105 112]
[106 111]
[122 133]
[123 132]
[124 131]
[125 130]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[148 164]
[149 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
