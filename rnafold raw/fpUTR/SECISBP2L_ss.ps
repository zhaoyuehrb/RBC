%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCUAACUACGCCUCCAGCCCAUUCGGGCCCUCCUCGGCUUCCGUCCCAGAUGAUCCCUCCCCGAAGCUGCCACCGCCUCCUCCAUCUCCCGGAGCUGGAGCCGCCUCCUCGGCCAGUGGCGUAGCCGAAUCGGUGUCGCGGCCAGCCAGAUAGGGGCGGAGGUCCGGAACCCAGUCUGGACCCGAGCGGGGGGCCAUGGAGAAAGCGGCCCGAGGCGCUGUUUACACCGACUAGCGCGGGCCCGUUGCGGCU\
GCAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[74.09217072 934.46252441]
[65.16562653 946.71374512]
[52.58551407 955.17047119]
[37.87095261 958.81158447]
[22.79879379 957.19732666]
[9.18907452 950.52264404]
[-1.31476510 939.59350586]
[-7.44433594 925.72973633]
[-8.45946312 910.60540771]
[-4.23756361 896.04687500]
[4.71154690 883.81213379]
[17.30722046 875.37854004]
[32.02846527 871.76458740]
[33.62586594 856.84991455]
[35.22326279 841.93518066]
[36.82066345 827.02050781]
[30.48273087 813.54162598]
[39.64565659 800.64392090]
[41.24305725 785.72918701]
[42.84045792 770.81451416]
[44.43785477 755.89978027]
[46.03525543 740.98510742]
[47.54421997 726.06121826]
[48.96469498 711.12860107]
[41.51214981 701.62683105]
[42.55185318 689.19409180]
[52.07025909 680.52209473]
[53.66765976 665.60742188]
[55.26506042 650.69268799]
[56.86245728 635.77801514]
[58.45985794 620.86328125]
[60.05725479 605.94860840]
[61.65465546 591.03387451]
[63.06288147 578.27282715]
[69.55294037 569.02044678]
[78.38270569 564.80261230]
[76.25598145 549.95416260]
[74.12926483 535.10571289]
[72.00254059 520.25720215]
[69.87581635 505.40875244]
[61.21244812 500.06710815]
[56.81072617 490.64794922]
[58.33338547 480.14163208]
[65.51845551 472.03137207]
[63.74435806 457.13662720]
[61.97026062 442.24191284]
[60.19616318 427.34719849]
[52.72623825 425.85418701]
[45.74130249 422.78158569]
[39.57171249 418.26849365]
[34.51058197 412.52230835]
[30.79989052 405.80911255]
[28.61889076 398.44146729]
[28.07546997 390.76382446]
[29.20082092 383.13632202]
[31.94772148 375.91802979]
[36.19247055 369.45004272]
[41.74046326 364.03921509]
[48.33510590 359.94372559]
[55.66966248 357.36080933]
[55.49184418 342.36187744]
[55.31402206 327.36291504]
[55.13619995 312.36398315]
[44.33097458 306.91244507]
[36.81417847 297.33544922]
[34.05353928 285.40402222]
[36.62999725 273.35775757]
[44.11671448 263.48455811]
[55.14843369 257.68600464]
[55.32625580 242.68707275]
[55.50407791 227.68812561]
[52.45111084 220.98490906]
[55.77396393 212.51269531]
[56.12958145 197.51692200]
[53.15629578 190.77798462]
[56.57935333 182.34574890]
[57.11271667 167.35523987]
[57.64608383 152.36473083]
[58.17944717 137.37420654]
[55.28626251 130.60049438]
[58.80903625 122.20944977]
[59.52007675 107.22631073]
[53.06909561 93.68434906]
[40.98631668 84.79579163]
[28.90353584 75.90723419]
[16.82075691 67.01867676]
[4.73797560 58.13012314]
[-10.96321583 56.18508911]
[-16.63037682 42.41074753]
[-28.71315575 33.52219009]
[-40.79593658 24.63363457]
[-57.13753510 20.11827469]
[-57.32244110 3.16533494]
[-41.08321762 -1.70538521]
[-31.90738106 12.55085468]
[-19.82460022 21.43941116]
[-7.74182081 30.32796669]
[7.09512949 31.63722992]
[13.62653160 46.04734421]
[25.70931244 54.93589783]
[37.79209137 63.82445526]
[49.87487030 72.71301270]
[61.95765305 81.60156250]
[75.38276672 74.91081238]
[75.56059265 59.91186142]
[75.73841095 44.91291809]
[75.91623688 29.91397095]
[76.09405518 14.91502571]
[76.27188110 -0.08392045]
[76.44969940 -15.08286667]
[67.06661224 -30.94482231]
[76.64186859 -45.66809845]
[76.64186859 -60.66809845]
[76.55295563 -75.66783142]
[76.37512970 -90.66677856]
[76.19731140 -105.66572571]
[65.17153931 -116.66891479]
[65.20487213 -131.88250732]
[75.76268005 -142.32609558]
[75.58486176 -157.32504272]
[67.68450165 -171.03251648]
[75.27037811 -183.85061646]
[75.09255981 -198.84956360]
[74.91473389 -213.84851074]
[63.88896942 -224.85169983]
[63.92229843 -240.06529236]
[74.48010254 -250.50886536]
[74.30228424 -265.50781250]
[74.12445831 -280.50677490]
[73.94664001 -295.50570679]
[67.71295929 -311.27206421]
[81.13748932 -321.62667847]
[94.80373383 -311.59323120]
[88.94558716 -295.68353271]
[89.12340546 -280.68457031]
[89.30123138 -265.68563843]
[89.47904968 -250.68669128]
[100.28148651 -240.49635315]
[100.67549133 -225.28782654]
[89.91368103 -214.02633667]
[90.09150696 -199.02738953]
[90.26932526 -184.02844238]
[98.15695953 -171.39378357]
[90.58380127 -157.50285339]
[90.76162720 -142.50390625]
[101.56406403 -132.31356812]
[101.95806122 -117.10504150]
[91.19625854 -105.84355164]
[91.37407684 -90.84460449]
[91.55190277 -75.84565735]
[94.76292419 -69.21670532]
[91.64186859 -60.66809845]
[91.64186859 -45.66809845]
[99.96072388 -36.91476822]
[100.10305023 -24.43946457]
[91.44864655 -14.90504456]
[91.27082825 0.09390138]
[91.09300232 15.09284687]
[90.91518402 30.09179306]
[90.73735809 45.09074020]
[90.55953979 60.08968353]
[90.38171387 75.08863068]
[102.68068695 77.05360413]
[111.02825165 83.91665649]
[123.61637878 75.75949860]
[136.20449829 67.60234833]
[148.79261780 59.44519424]
[161.38075256 51.28804016]
[173.96887207 43.13088608]
[186.55699158 34.97373199]
[199.14511108 26.81657982]
[202.20075989 11.31049824]
[215.37223816 2.57621932]
[230.84515381 5.79563570]
[239.43968201 19.05872536]
[236.05685425 34.49673080]
[222.70364380 42.95055771]
[207.30226135 39.40470123]
[194.71414185 47.56185532]
[182.12602234 55.71900940]
[169.53790283 63.87616348]
[156.94976807 72.03331757]
[144.36164856 80.19046783]
[131.77352905 88.34762573]
[119.18540955 96.50477600]
[105.51399231 122.43476868]
[74.50321198 107.93735504]
[73.79217529 122.92048645]
[73.16996002 137.90757751]
[72.63659668 152.89808655]
[72.10323334 167.88861084]
[71.56987000 182.87911987]
[71.12536621 197.87252808]
[70.76974487 212.86831665]
[70.50302124 227.86595154]
[70.32520294 242.86489868]
[70.14737701 257.86383057]
[85.01858521 268.28466797]
[90.58390808 285.40402222]
[84.78578949 302.27923584]
[70.13514709 312.18615723]
[70.31296539 327.18508911]
[70.49079132 342.18405151]
[70.66860962 357.18298340]
[90.43752289 368.84219360]
[99.02112579 389.99075317]
[93.03678894 411.88488770]
[75.09088135 425.57312012]
[76.86497498 440.46783447]
[78.63907623 455.36254883]
[80.41317749 470.25726318]
[93.19052124 485.87673950]
[84.72428894 503.28204346]
[86.85101318 518.13049316]
[88.97772980 532.97894287]
[91.10445404 547.82745361]
[93.23117065 562.67590332]
[100.39506531 575.85461426]
[111.69949341 585.71417236]
[123.00391388 595.57366943]
[134.30833435 605.43316650]
[145.61276245 615.29266357]
[156.97543335 625.08502197]
[168.39595032 634.80981445]
[179.81646729 644.53460693]
[195.54815674 643.02160645]
[207.68869019 653.14007568]
[209.03529358 668.88690186]
[198.78904724 680.91973877]
[183.02886963 682.09979248]
[171.10499573 671.72692871]
[170.09165955 655.95513916]
[158.67114258 646.23034668]
[147.25062561 636.50549316]
[140.14425659 634.56823730]
[135.75325012 626.59710693]
[124.44882965 616.73760986]
[113.14440155 606.87805176]
[101.83998108 597.01855469]
[90.53555298 587.15905762]
[76.56935883 592.63128662]
[74.97195435 607.54595947]
[73.37455750 622.46069336]
[71.77716064 637.37536621]
[70.17975616 652.29010010]
[68.58235931 667.20477295]
[66.98496246 682.11950684]
[74.82378387 698.79870605]
[63.89728546 712.54907227]
[62.47681046 727.48168945]
[64.77429962 736.28741455]
[60.94995499 742.58251953]
[59.35255814 757.49719238]
[57.75515747 772.41192627]
[56.15775681 787.32659912]
[54.56035995 802.24133301]
[60.78403473 816.78698730]
[51.73536301 828.61791992]
[50.13796616 843.53259277]
[48.54056549 858.44732666]
[46.94316864 873.36199951]
[60.56516266 880.01159668]
[71.08912659 890.92132568]
[77.24423981 904.77374268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 261]
[14 260]
[15 259]
[16 258]
[18 256]
[19 255]
[20 254]
[21 253]
[22 252]
[23 250]
[24 249]
[27 247]
[28 246]
[29 245]
[30 244]
[31 243]
[32 242]
[33 241]
[36 217]
[37 216]
[38 215]
[39 214]
[40 213]
[44 211]
[45 210]
[46 209]
[47 208]
[60 204]
[61 203]
[62 202]
[63 201]
[69 197]
[70 196]
[71 195]
[73 194]
[74 193]
[76 192]
[77 191]
[78 190]
[79 189]
[81 188]
[82 187]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[89 97]
[90 96]
[91 95]
[104 162]
[105 161]
[106 160]
[107 159]
[108 158]
[109 157]
[110 156]
[112 153]
[113 152]
[114 150]
[115 149]
[116 148]
[119 145]
[120 144]
[122 142]
[123 141]
[124 140]
[127 137]
[128 136]
[129 135]
[130 134]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[218 240]
[219 239]
[220 238]
[221 237]
[222 236]
[223 234]
[224 233]
[225 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
