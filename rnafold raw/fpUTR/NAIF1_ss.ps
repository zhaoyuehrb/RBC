%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUACGCUGCUGGCUGGCAGCGGCCGGGCCGGUCGGGGCUGGGCCCUACGCACUUUGCGUAGCGAGGGGGGUUACCAAAGGCCUAGUGCUUGGCCUCGAGCAAGCCUGGCCUAUCCCCUGUAGGGGGUGGGUGAGGGGCGAGGCUGAGGAAGAAGAGAAGGGGAAUUGGGGCGCUUGAGGGGAUUAUAAUUUCUUUAAAAAGAGGGGAGGGGAGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[147.93502808 119.40828705]
[141.55178833 136.06843567]
[129.27441406 150.45202637]
[111.97994232 160.46215820]
[91.28777313 164.35807800]
[69.41152191 161.01443481]
[63.77036285 174.91326904]
[58.12920380 188.81208801]
[52.48804474 202.71092224]
[46.84688568 216.60974121]
[41.20572662 230.50856018]
[43.99698639 246.66842651]
[31.22628784 256.95632935]
[16.03102875 250.78898621]
[14.04279137 234.51081848]
[27.30690193 224.86740112]
[32.94805908 210.96858215]
[38.58921814 197.06976318]
[44.23037720 183.17092896]
[49.87153625 169.27210999]
[55.51269531 155.37329102]
[43.76617050 146.04487610]
[31.50625229 154.68746948]
[19.24633598 163.33006287]
[6.98641920 171.97267151]
[0.16517852 186.24786377]
[-14.69519806 187.25706482]
[-26.95511436 195.89965820]
[-39.21503067 204.54225159]
[-51.47494888 213.18484497]
[-53.92263031 228.79844666]
[-66.74291992 238.04051208]
[-82.32976532 235.42788696]
[-91.43576813 222.51060486]
[-88.65850067 206.95225525]
[-75.64566040 197.98332214]
[-60.11754227 200.92492676]
[-47.85762405 192.28233337]
[-35.59770966 183.63973999]
[-23.33779335 174.99714661]
[-17.39346313 161.34011841]
[-1.65617537 159.71275330]
[10.60374165 151.07015991]
[22.86365891 142.42755127]
[35.12357330 133.78495789]
[30.38658142 119.55257416]
[15.39269829 119.98091888]
[0.39881504 120.40925598]
[-14.59506798 120.83759308]
[-29.58895111 121.26593781]
[-44.58283234 121.69427490]
[-59.57671738 122.12261963]
[-75.23673248 128.61878967]
[-85.81415558 115.36910248]
[-76.01039124 101.53716278]
[-60.00505829 107.12873840]
[-45.01117325 106.70039368]
[-30.01729202 106.27205658]
[-15.02340889 105.84371185]
[-0.02952574 105.41537476]
[14.96435738 104.98703003]
[29.95824051 104.55869293]
[31.60476494 97.24166107]
[16.97075081 93.94838715]
[20.26425362 79.31442261]
[34.89781570 82.60759735]
[36.54433823 75.29056549]
[23.17924118 68.48070526]
[8.22780895 73.60224915]
[-5.92898703 66.57653809]
[-10.89217091 51.57179260]
[-3.71717381 37.49006653]
[11.33920574 32.68579865]
[25.34428406 40.00927734]
[29.98909760 55.11560822]
[43.35419464 61.92546463]
[70.38272858 45.00339890]
[99.49098969 43.32595825]
[123.31979370 54.76953506]
[136.97257996 74.17281342]
[150.52668762 67.74738312]
[164.08079529 61.32196045]
[177.63490295 54.89653397]
[191.18901062 48.47110748]
[190.58706665 39.74473572]
[193.63238525 30.90743256]
[200.27557373 23.50189781]
[196.08245850 8.24646187]
[206.65229797 -2.24771762]
[210.25802612 -16.80789375]
[213.86375427 -31.36806870]
[217.46948242 -45.92824173]
[221.07521057 -60.48841858]
[224.68095398 -75.04859161]
[228.28668213 -89.60877228]
[231.89241028 -104.16894531]
[235.49813843 -118.72911835]
[239.10386658 -133.28929138]
[231.91490173 -139.78230286]
[227.60704041 -148.39421082]
[226.73316956 -157.92561340]
[229.37113953 -167.06608582]
[235.11891174 -174.57426453]
[243.15509033 -179.44647217]
[252.35620117 -181.05078125]
[256.78726196 -195.38136292]
[261.21835327 -209.71194458]
[257.90298462 -225.18188477]
[269.05468750 -235.05552673]
[273.48574829 -249.38610840]
[277.91683960 -263.71670532]
[282.34790039 -278.04727173]
[286.77899170 -292.37786865]
[291.21005249 -306.70843506]
[295.64111328 -321.03903198]
[300.07220459 -335.36959839]
[304.50326538 -349.70019531]
[308.93435669 -364.03076172]
[304.77044678 -379.89248657]
[316.61392212 -391.23550415]
[332.28118896 -386.39111328]
[335.65515137 -370.34280396]
[323.26492310 -359.59970093]
[318.83386230 -345.26910400]
[314.40277100 -330.93853760]
[309.97171021 -316.60794067]
[305.54061890 -302.27737427]
[301.10955811 -287.94677734]
[296.67849731 -273.61621094]
[292.24740601 -259.28561401]
[287.81634521 -244.95503235]
[283.38525391 -230.62445068]
[287.01757812 -216.17953491]
[275.54891968 -205.28086853]
[271.11785889 -190.95028687]
[266.68676758 -176.61970520]
[277.70477295 -159.39706421]
[272.33843994 -139.36355591]
[253.66404724 -129.68356323]
[250.05831909 -115.12339020]
[246.45259094 -100.56321716]
[242.84684753 -86.00303650]
[239.24111938 -71.44286346]
[235.63539124 -56.88268661]
[232.02966309 -42.32251358]
[228.42393494 -27.76233673]
[224.81819153 -13.20216179]
[221.21246338 1.35801315]
[225.66348267 15.57200909]
[214.83573914 27.10762978]
[218.82810974 12.64868546]
[230.25494385 2.93130708]
[245.16744995 1.31355095]
[258.41229248 8.35446930]
[265.41238403 21.62091446]
[263.74871826 36.52836990]
[253.99620056 47.92522812]
[239.52502441 51.87305069]
[225.33575439 47.00737000]
[239.38999939 52.24933243]
[253.44425964 57.49129486]
[267.49850464 62.73325729]
[281.55273438 67.97521973]
[295.60699463 73.21718597]
[309.66122437 78.45914459]
[323.71548462 83.70111084]
[337.76971436 88.94306946]
[351.82397461 94.18503571]
[365.79614258 84.64659882]
[382.53424072 85.31161499]
[395.44671631 95.71987152]
[399.56686401 111.61332703]
[415.16458130 108.96353149]
[424.55157471 120.52785492]
[438.67926025 125.56859589]
[455.62911987 125.19661713]
[460.67874146 141.38110352]
[446.52462769 150.71369934]
[433.63851929 139.69625854]
[419.51083374 134.65551758]
[404.92361450 137.66586304]
[394.52612305 125.74098969]
[384.25558472 134.26506042]
[371.00827026 136.62165833]
[358.22409058 132.09030151]
[349.27639771 121.75325012]
[346.58200073 108.23928070]
[332.52777100 102.99731445]
[318.47351074 97.75535583]
[304.41928101 92.51338959]
[290.36502075 87.27143097]
[276.31079102 82.02946472]
[262.25653076 76.78750610]
[248.20228577 71.54553986]
[234.14804077 66.30358124]
[220.09379578 61.06161499]
[229.91442871 72.39983368]
[242.59651184 80.41012573]
[252.15065002 91.97378540]
[257.62524414 105.93905640]
[258.47500610 120.91497040]
[254.61531067 135.40989685]
[246.43057251 147.98010254]
[234.73602295 157.37356567]
[220.69644165 162.65470886]
[205.71022034 163.29748535]
[191.27001953 159.23789978]
[178.81408691 150.88027954]
[169.58308411 139.05705261]
[164.49641418 124.94586182]
[164.06072998 109.95218658]
[168.31944275 95.56944275]
[176.84835815 83.23017120]
[188.80010986 74.16224670]
[197.61444092 62.02521896]
[184.06033325 68.45064545]
[170.50622559 74.87606812]
[156.95211792 81.30149841]
[143.39799500 87.72692108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[22 45]
[23 44]
[24 43]
[25 42]
[27 40]
[28 39]
[29 38]
[30 37]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[67 76]
[68 75]
[80 219]
[81 218]
[82 217]
[83 216]
[84 215]
[87 150]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[105 136]
[106 135]
[107 134]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[159 196]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[168 187]
[172 182]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
