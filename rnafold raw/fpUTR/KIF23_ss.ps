%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGCGGAGGUCCUGCCUCUCCCUGCGGACGGGCGCUGAUUGGCCCGUUUGAAAUGCGCCAGGCGGGAGCUCACCUGGGCUCUUAGCGUCGCCGCCGGCUUCGCAGAGCACCGCGCCUUAGCCGCGAAGUUCUAGUUCUUGCUGCCGGUCCUAACGUCCCGCAGUCUUCGCCAGCCAGCCGUCCCGCAUGCGCGUUUGGGCGGCGUGGAGCCUGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-6.31225729 717.74627686]
[-22.10217667 717.07250977]
[-32.72920609 705.37457275]
[-31.88851738 689.59265137]
[-20.07887459 679.08990479]
[-19.43937874 664.10351562]
[-18.79988098 649.11718750]
[-18.16038513 634.13079834]
[-17.62742043 619.14025879]
[-17.20101738 604.14636230]
[-16.77461433 589.15240479]
[-16.45479393 574.15582275]
[-16.24156952 559.15734863]
[-16.02834702 544.15887451]
[-15.92173290 529.15924072]
[-15.92173290 514.15924072]
[-15.92173290 499.15921021]
[-15.92173290 484.15921021]
[-23.76165581 477.61972046]
[-26.77495193 467.63580322]
[-23.73704338 457.43011475]
[-15.41846371 450.43667603]
[-14.99206066 435.44274902]
[-14.56565762 420.44879150]
[-20.85665512 416.36550903]
[-33.43864822 408.19888306]
[-39.72964478 404.11560059]
[-53.25077820 410.61013794]
[-66.77191162 417.10464478]
[-80.29304504 423.59918213]
[-93.81418610 430.09371948]
[-107.33531952 436.58825684]
[-120.85645294 443.08276367]
[-134.37757874 449.57730103]
[-147.89872742 456.07183838]
[-150.55232239 471.36032104]
[-161.70890808 482.14505005]
[-177.07853699 484.27905273]
[-190.75128174 476.94177246]
[-197.46969604 462.95455933]
[-194.65039062 447.69573975]
[-183.37747192 437.03268433]
[-167.98559570 435.06552124]
[-154.39324951 442.55068970]
[-140.87211609 436.05618286]
[-127.35098267 429.56164551]
[-113.82984924 423.06710815]
[-100.30871582 416.57257080]
[-86.78758240 410.07806396]
[-73.26644135 403.58352661]
[-59.74531174 397.08898926]
[-46.22417450 390.59445190]
[-35.73125839 379.87536621]
[-29.52649307 366.21884155]
[-23.32172775 352.56231689]
[-17.11696434 338.90579224]
[-10.91219997 325.24923706]
[-4.70743561 311.59271240]
[1.49732864 297.93618774]
[7.70209312 284.27963257]
[1.53352618 272.97177124]
[3.02419019 259.98150635]
[11.85265541 250.07429504]
[24.96487617 247.01397705]
[31.36313820 233.44702148]
[37.76140213 219.88006592]
[44.15966415 206.31311035]
[50.55792999 192.74615479]
[56.95619202 179.17919922]
[63.16095734 165.52267456]
[69.17096710 151.77931213]
[75.18097687 138.03596497]
[63.36838913 128.21350098]
[55.33086395 114.80028534]
[52.12922287 99.21455383]
[54.30140305 83.17562866]
[61.78209686 68.51427460]
[73.89009857 56.96379471]
[67.68533325 43.30726242]
[61.38366318 29.69517326]
[54.98540115 16.12821960]
[48.58713913 2.56126666]
[42.18887329 -11.00568676]
[35.79061127 -24.57263947]
[30.59445953 -28.64138985]
[28.53647995 -33.92879868]
[29.40944672 -38.61742401]
[23.39943504 -52.36077881]
[17.38942337 -66.10413361]
[2.94689703 -71.93946838]
[-2.95233011 -85.96279907]
[2.69977784 -99.69557953]
[-3.31023359 -113.43893433]
[-9.32024479 -127.18228912]
[-21.20626831 -139.27189636]
[-12.87949944 -154.04016113]
[3.61668253 -150.12705994]
[4.42310810 -133.19230652]
[10.43311977 -119.44894409]
[16.44313049 -105.70558929]
[30.36315727 -100.53176880]
[36.65394211 -86.67966461]
[31.13277626 -72.11414337]
[37.14278793 -58.37078857]
[43.15280151 -44.62743759]
[49.35756302 -30.97090340]
[55.75582886 -17.40394974]
[62.15409088 -3.83699656]
[68.55235291 9.72995663]
[74.95061493 23.29691124]
[80.64253998 28.00242996]
[81.34187317 37.10249710]
[87.54663086 50.75902939]
[102.47243500 49.26887894]
[105.85477448 34.65519714]
[97.27561951 21.38215637]
[100.67633820 5.94808006]
[114.03933716 -2.49026608]
[129.43659973 1.07343781]
[137.73318481 14.52490997]
[134.00689697 29.88362885]
[120.46846008 38.03754044]
[117.08611298 52.65122604]
[128.22178650 61.32495880]
[135.98127747 72.28600311]
[149.21324158 65.22093201]
[162.44520569 58.15585709]
[175.67715454 51.09078598]
[188.90911865 44.02571106]
[202.14108276 36.96063614]
[187.22119141 35.41241455]
[174.68116760 27.18151093]
[167.32562256 14.10879230]
[166.79965210 -0.88198298]
[173.22088623 -14.43807888]
[185.15319824 -23.52762794]
[199.92788696 -26.11772156]
[214.24053955 -21.62907982]
[224.89009094 -11.06559944]
[229.49473572 3.21016145]
[227.02461243 18.00538063]
[218.03128052 30.01180458]
[232.20205688 25.09357452]
[246.37283325 20.17534447]
[260.54360962 15.25711441]
[274.71438599 10.33888435]
[285.21475220 -1.49551582]
[299.77536011 1.64101315]
[313.94613647 -3.27721691]
[324.44650269 -15.11161709]
[339.00711060 -11.97508812]
[347.27032471 -25.72640800]
[363.19192505 -27.69685555]
[374.55819702 -16.37487221]
[372.64993286 -0.44571483]
[358.93096924 7.87113094]
[343.92535400 2.19569206]
[334.43856812 13.67830753]
[318.86437988 10.89356327]
[304.69360352 15.81179333]
[295.20681763 27.29440880]
[279.63262939 24.50966454]
[265.46185303 29.42789459]
[251.29106140 34.34612274]
[237.12028503 39.26435471]
[222.94950867 44.18258286]
[209.20614624 50.19259644]
[195.97419739 57.25767136]
[182.74223328 64.32274628]
[169.51026917 71.38781738]
[156.27832031 78.45288849]
[143.04635620 85.51796722]
[145.39331055 101.47183228]
[142.01779175 117.24015808]
[133.34536743 130.83512878]
[120.46928406 140.54289246]
[105.01277161 145.13967896]
[88.92433167 144.04597473]
[82.91432190 157.78932190]
[76.90431213 171.53268433]
[77.25765991 178.12281799]
[74.62886810 183.15087891]
[70.52314758 185.57746887]
[64.12488556 199.14442444]
[57.72661972 212.71138000]
[51.32835388 226.27832031]
[44.93009186 239.84527588]
[38.53182983 253.41223145]
[44.74328232 269.76950073]
[37.34516144 285.25173950]
[21.35862541 290.48440552]
[15.15386200 304.14093018]
[8.94909763 317.79748535]
[2.74433351 331.45401001]
[-3.46043086 345.11053467]
[-9.66519547 358.76708984]
[-15.86995983 372.42361450]
[-22.07472420 386.08013916]
[0.42828035 420.87521362]
[0.00187726 435.86914062]
[-0.42452583 450.86306763]
[9.94124889 468.15777588]
[-0.92173302 484.15921021]
[-0.92173302 499.15921021]
[-0.92173302 514.15924072]
[-0.92173302 529.15924072]
[2.20582247 537.73352051]
[-1.02986276 544.37207031]
[-1.24308586 559.37054443]
[-1.45630896 574.36901855]
[1.54904783 582.98693848]
[-1.78067648 589.57879639]
[-2.20707965 604.57275391]
[-2.63348269 619.56671143]
[0.24906822 628.22644043]
[-3.17402244 634.77032471]
[-3.81351924 649.75665283]
[-4.45301628 664.74304199]
[-5.09251308 679.72937012]
[5.77948189 691.20001221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 219]
[6 218]
[7 217]
[8 216]
[9 214]
[10 213]
[11 212]
[12 210]
[13 209]
[14 208]
[15 206]
[16 205]
[17 204]
[18 203]
[22 201]
[23 200]
[24 199]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[53 198]
[54 197]
[55 196]
[56 195]
[57 194]
[58 193]
[59 192]
[60 191]
[64 188]
[65 187]
[66 186]
[67 185]
[68 184]
[69 183]
[70 180]
[71 179]
[72 178]
[78 113]
[79 112]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[87 105]
[88 104]
[89 103]
[92 100]
[93 99]
[94 98]
[114 123]
[115 122]
[125 172]
[126 171]
[127 170]
[128 169]
[129 168]
[130 167]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[148 160]
[149 159]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
