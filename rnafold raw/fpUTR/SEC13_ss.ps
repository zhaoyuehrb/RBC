%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCGAGCCGAGCGCGUUGCUGCCCGGAGGCUCCUACGCCACGGCCCGUCGGGCCCGGCGCCGGAAGUGAGCUGUUCCGAGGCGCCGCCGGGAGCUGCCACGUCCGAGACCUGGAGCAGCCACCGCCGCAAUCAUGACUUCGGGGACCUGGUUUUUAGAGAGUCUAGAAUCUG\
) } def
/len { sequence length } bind def

/coor [
[284.58679199 383.88357544]
[281.41604614 398.54461670]
[278.24530029 413.20565796]
[285.69152832 427.41601562]
[279.09246826 442.03900146]
[263.51040649 445.85714722]
[250.89852905 435.94149780]
[250.93161011 419.89849854]
[263.58425903 410.03494263]
[266.75500488 395.37387085]
[269.92575073 380.71282959]
[267.01571655 365.99780273]
[258.50317383 353.64724731]
[252.09826660 349.91253662]
[249.95143127 341.00106812]
[241.65942383 328.50137329]
[233.36743164 316.00164795]
[227.02981567 312.15386963]
[225.04147339 303.20568848]
[216.97262573 290.56079102]
[203.60383606 283.99386597]
[202.70291138 268.19830322]
[194.63406372 255.55340576]
[186.56521606 242.90850830]
[178.49636841 230.26359558]
[170.42752075 217.61868286]
[162.24676514 205.04588318]
[153.95477295 192.54617310]
[145.66276550 180.04646301]
[137.37075806 167.54675293]
[131.03315735 163.69897461]
[129.04481506 154.75079346]
[115.67602539 148.18385315]
[114.77509308 132.38832092]
[106.70624542 119.74341583]
[98.63739777 107.09851074]
[93.81466675 114.16471100]
[85.97413635 119.08482361]
[75.90187836 120.92128754]
[64.63699341 118.99337006]
[50.13101959 115.17541504]
[35.62504578 111.35746002]
[21.11907578 107.53950500]
[9.58473492 113.35749817]
[-2.43315911 109.85688782]
[-8.62780476 99.44406128]
[-23.06373024 95.36925507]
[-37.49965286 91.29444122]
[-51.93558121 87.21963501]
[-66.37150574 83.14482880]
[-83.25751495 84.66102600]
[-89.38898468 68.85465240]
[-75.89768219 58.58716965]
[-62.29669571 68.70890045]
[-47.86077118 72.78370667]
[-33.42484665 76.85852051]
[-18.98892021 80.93332672]
[-4.55299520 85.00814056]
[12.18261337 79.77175903]
[24.93703270 93.03353119]
[39.44300461 96.85148621]
[53.94897461 100.66944122]
[68.45494843 104.48739624]
[74.27095795 99.75199890]
[85.90296936 90.28118896]
[91.71897888 85.54578400]
[90.92064667 70.56704712]
[90.12231445 55.58830261]
[81.66150665 42.21948624]
[88.71046448 29.09845543]
[87.91213226 14.11971569]
[87.11380005 -0.85902470]
[83.52258301 -9.29267311]
[86.43661499 -16.11023140]
[85.90425873 -31.10078049]
[77.68205261 -44.61765671]
[84.96277618 -57.61151505]
[84.43041229 -72.60206604]
[83.89805603 -87.59261322]
[83.36569214 -102.58316040]
[82.83332825 -117.57371521]
[73.93318176 -126.93733978]
[73.81527710 -139.45413208]
[81.99639893 -148.39111328]
[81.73017120 -163.38876343]
[81.46395111 -178.38639832]
[75.13745117 -194.11572266]
[88.50071716 -204.54928589]
[102.22586060 -194.59657288]
[96.46158600 -178.65261841]
[96.72781372 -163.65498352]
[96.99403381 -148.65734863]
[106.83889008 -134.14599609]
[97.82388306 -118.10607147]
[98.35623932 -103.11552429]
[98.88860321 -88.12497711]
[99.42096710 -73.13442230]
[99.95332336 -58.14387512]
[108.13745117 -45.69922256]
[100.89480591 -31.63314247]
[101.42716980 -16.64259338]
[102.09253693 -1.65735734]
[102.89086914 13.32138348]
[103.68920898 28.30012321]
[112.09291077 40.59756088]
[105.10105133 54.78997040]
[105.89938354 69.76870728]
[106.69771576 84.74745178]
[111.28230286 99.02966309]
[119.35115051 111.67456818]
[127.41999817 124.31948090]
[141.36592102 131.79086304]
[141.68972778 146.68194580]
[149.87046814 159.25476074]
[158.16247559 171.75447083]
[166.45446777 184.25416565]
[174.74647522 196.75387573]
[182.12197876 202.19679260]
[183.07241821 209.54983521]
[191.14126587 222.19474792]
[199.21011353 234.83966064]
[207.27896118 247.48455811]
[215.34780884 260.12945557]
[229.29374695 267.60086060]
[229.61753845 282.49194336]
[237.68638611 295.13684082]
[245.86714172 307.70965576]
[254.15913391 320.20935059]
[262.45114136 332.70907593]
[270.85372925 345.13470459]
[279.36627197 357.48526001]
[283.28820801 354.32458496]
[288.21972656 351.98190308]
[293.97552490 350.72476196]
[300.30581665 350.77667236]
[306.90710449 352.30276489]
[313.43576050 355.39761353]
[319.52426147 360.07653809]
[324.79919434 366.27020264]
[334.77664185 377.47064209]
[342.84820557 381.81503296]
[344.82965088 388.95956421]
[354.60675049 400.33535767]
[364.38385010 411.71112061]
[377.18261719 413.46652222]
[385.09121704 423.16900635]
[384.28240967 435.25811768]
[393.85604858 446.80563354]
[403.42971802 458.35314941]
[413.00338745 469.90063477]
[422.67913818 481.36273193]
[432.45623779 492.73852539]
[447.72076416 490.50280762]
[461.76135254 496.89541626]
[470.09771729 509.87649536]
[470.06976318 525.30383301]
[461.68640137 538.25463867]
[447.62274170 544.59631348]
[432.36642456 542.30529785]
[420.78570557 532.11260986]
[416.57595825 517.27069092]
[421.08047485 502.51562500]
[411.30337524 491.13983154]
[404.53778076 488.10711670]
[401.45587158 479.47430420]
[391.88220215 467.92678833]
[382.30856323 456.37930298]
[372.73489380 444.83178711]
[355.98361206 439.64575195]
[353.00808716 421.48822021]
[343.23095703 410.11245728]
[333.45385742 398.73666382]
[323.57620239 387.44812012]
[313.59872437 376.24765015]
[306.34576416 378.15664673]
[302.39950562 392.62823486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 131]
[13 130]
[15 129]
[16 128]
[17 127]
[19 126]
[20 125]
[22 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 117]
[28 116]
[29 115]
[30 114]
[32 113]
[34 111]
[35 110]
[36 109]
[40 63]
[41 62]
[42 61]
[43 60]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[66 108]
[67 107]
[68 106]
[70 104]
[71 103]
[72 102]
[74 101]
[75 100]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[84 92]
[85 91]
[86 90]
[139 174]
[140 173]
[142 172]
[143 171]
[144 170]
[147 168]
[148 167]
[149 166]
[150 165]
[151 163]
[152 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
