%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCACUUACCUUUGGUGCCCGGCCCUCUGGCCGCUCUCCUCCCGCCCUCGCGCCCCUUCGGCCCGUCCCGUCCAGCCCGGGCUGCCCGGCUCUCGCAGGCCCCCCCGCGCCGACCGCGUUCCUAUGGACAGACGCACAGACACCUGCAGGAGUGACACUGCUGAUCCUGUAAC\
) } def
/len { sequence length } bind def

/coor [
[87.98293304 181.57151794]
[73.89642334 186.72616577]
[58.90260696 187.15682983]
[44.54345322 182.81922913]
[32.29567337 174.15945435]
[23.41882706 162.06806946]
[18.82582092 147.78855896]
[18.98900223 132.78944397]
[23.89158630 118.61324310]
[33.02939224 106.71784210]
[45.46268082 98.32657623]
[59.91279984 94.30240631]
[74.89369965 95.05917358]
[88.86416626 100.51873016]
[77.70506287 90.49504089]
[66.54595184 80.47135925]
[55.38684082 70.44766998]
[44.22773361 60.42398453]
[33.06862640 50.40029526]
[21.90951729 40.37660980]
[-3.72322345 46.87772751]
[-27.05624199 29.46788406]
[-39.81778336 37.35097122]
[-52.57932281 45.23405838]
[-65.34086609 53.11714554]
[-78.10240936 61.00023270]
[-85.39524078 75.68855286]
[-101.77684784 76.44674683]
[-110.39524078 62.49485016]
[-102.38455200 48.18538284]
[-85.98549652 48.23869324]
[-73.22395325 40.35560608]
[-60.46240997 32.47251892]
[-47.70087051 24.58942986]
[-34.93932724 16.70634270]
[-49.91798782 17.50619316]
[-63.68248749 23.46761322]
[-78.51210785 21.21321487]
[-89.88321686 11.43068027]
[-94.32715607 -2.89591789]
[-90.48834229 -17.39638329]
[-79.53777313 -27.64748573]
[-64.81581879 -30.52221870]
[-50.81327820 -25.14367294]
[-41.80101776 -13.15128994]
[-29.18058205 -5.04421663]
[-36.36931610 -18.20940208]
[-43.55805206 -31.37458611]
[-58.45551300 -35.92469406]
[-65.55836487 -49.37846756]
[-61.12872696 -63.55287933]
[-68.31746674 -76.71806335]
[-85.98341370 -86.38362122]
[-84.76531982 -105.66257477]
[-92.41937256 -118.56278992]
[-100.07341766 -131.46299744]
[-113.87304688 -131.71942139]
[-125.64627838 -138.71278381]
[-132.36557007 -150.52006531]
[-132.36488342 -163.99702454]
[-125.75157928 -175.61526489]
[-133.17416382 -188.65003967]
[-140.59672546 -201.68481445]
[-148.01930237 -214.71960449]
[-155.44187927 -227.75437927]
[-162.86445618 -240.78915405]
[-170.28703308 -253.82392883]
[-185.26333618 -258.10739136]
[-192.60519409 -271.43225098]
[-188.42926025 -285.68347168]
[-203.73481750 -289.62246704]
[-211.70014954 -303.27270508]
[-207.59956360 -318.53573608]
[-193.86587524 -326.35632324]
[-178.64703369 -322.09460449]
[-170.97210693 -308.27899170]
[-175.39448547 -293.10604858]
[-161.00738525 -289.42544556]
[-153.29414368 -276.31207275]
[-157.25225830 -261.24649048]
[-149.82968140 -248.21173096]
[-142.40710449 -235.17694092]
[-134.98452759 -222.14216614]
[-127.56195831 -209.10739136]
[-120.13938141 -196.07261658]
[-112.71680450 -183.03784180]
[-96.36598206 -181.75643921]
[-83.86798859 -170.88151550]
[-80.26741791 -154.54054260]
[-87.17320251 -139.11705017]
[-79.51915741 -126.21683502]
[-71.86510468 -113.31661987]
[-61.73895264 -111.67867279]
[-54.03627777 -104.57572174]
[-51.47922516 -94.18809509]
[-55.15227890 -83.90679932]
[-47.96354294 -70.74161530]
[-33.64442825 -66.80479431]
[-26.16648483 -53.55583572]
[-30.39286804 -38.56332016]
[-23.20413208 -25.39813614]
[-16.01539803 -12.23295116]
[-3.56829453 -17.53435135]
[9.61445618 -17.72553635]
[21.56743431 -13.03799915]
[30.60602379 -4.41160059]
[35.56333160 6.68070030]
[35.93777466 18.47968292]
[31.93320465 29.21750069]
[43.09231186 39.24118805]
[54.25141907 49.26487350]
[65.41053009 59.28856277]
[76.56964111 69.31224823]
[87.72874451 79.33593750]
[98.88785553 89.35961914]
[102.62273407 83.28058624]
[109.34086609 78.81879425]
[118.35828400 77.06833649]
[133.16513062 74.66894531]
[147.97198486 72.26955414]
[162.77883911 69.87016296]
[177.51615906 67.07522583]
[192.17335510 63.88674545]
[206.83056641 60.69826508]
[221.02247620 51.42325211]
[233.86372375 62.49296570]
[226.78143311 77.89678192]
[210.01904297 75.35546875]
[195.36183167 78.54394531]
[180.70463562 81.73242950]
[178.49288940 84.51753235]
[174.80792236 86.35512543]
[170.11671448 86.55805206]
[165.17823792 84.67701721]
[150.37138367 87.07640839]
[135.56452942 89.47579956]
[120.75767517 91.87519073]
[115.89384460 106.06473541]
[126.11511993 117.04315186]
[136.33638000 128.02157593]
[146.55766296 138.99998474]
[159.90298462 134.29557800]
[173.99038696 135.03674316]
[186.69007874 141.07833862]
[196.09471130 151.47633362]
[200.80583191 164.63523865]
[200.14175415 178.55285645]
[194.23602295 191.12493896]
[204.25970459 202.28405762]
[214.28338623 213.44316101]
[224.30708313 224.60226440]
[239.72657776 222.86477661]
[253.20582581 230.55172729]
[259.56179810 244.70733643]
[256.35049438 259.88848877]
[244.80671692 270.25769043]
[229.36927795 271.82781982]
[215.97419739 263.99508667]
[209.77217102 249.77137756]
[213.14796448 234.62596130]
[203.12428284 223.46684265]
[193.10060120 212.30773926]
[183.07690430 201.14863586]
[167.83688354 205.90434265]
[151.98980713 203.53689575]
[138.70910645 194.46919250]
[130.67652893 180.47093201]
[129.54077148 164.31350708]
[135.57923889 149.22125244]
[125.35797119 138.24284363]
[115.13669586 127.26442719]
[104.91542816 116.28600311]
[110.62362671 130.15744019]
[111.64746094 145.12245178]
[107.88164520 159.64204407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 115]
[15 114]
[16 113]
[17 112]
[18 111]
[19 110]
[20 109]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[46 102]
[47 101]
[48 100]
[51 97]
[52 96]
[54 92]
[55 91]
[56 90]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[70 77]
[118 137]
[119 136]
[120 135]
[121 134]
[122 130]
[123 129]
[124 128]
[138 172]
[139 171]
[140 170]
[141 169]
[148 163]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
