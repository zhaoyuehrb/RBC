%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCGCGCAGGCUCUUCAGCUGGAGCGGACACACGGUGUGCGAACCGAACAGAAUAACCCGCCCCCAGCGGGAUGUGAAGGACUCCGGGUGAGGCCGGCCACGCCCCGCACGGAUGGGAAGGCCAUUGUGACUAUGUGGUGAUUACAGUUGUCUUACUACUGAGUUUCCUACUGAAAUC\
) } def
/len { sequence length } bind def

/coor [
[78.93134308 100.03096008]
[64.90609741 94.71189117]
[50.88085556 89.39281464]
[41.72067642 89.27269745]
[36.66074753 83.85899353]
[20.97560310 85.92945862]
[12.02321815 74.02550507]
[-1.90812516 68.46514130]
[-15.83946896 62.90477753]
[-27.99430275 67.27056885]
[-39.49294281 62.33296204]
[-44.37319946 51.24681091]
[-58.20649338 45.44680786]
[-72.03978729 39.64680862]
[-85.87307739 33.84680557]
[-99.80442047 28.28644180]
[-113.82966614 22.96736908]
[-127.85491180 17.64829445]
[-141.88015747 12.32922173]
[-155.90539551 7.01014853]
[-171.55245972 9.35104084]
[-180.70898438 -2.39661312]
[-194.73423767 -7.71568632]
[-208.75947571 -13.03475952]
[-222.78471375 -18.35383224]
[-236.80996704 -23.67290688]
[-250.83520508 -28.99197960]
[-264.90582275 -34.18980789]
[-277.71728516 -25.63567543]
[-292.93127441 -26.25827599]
[-304.72192383 -35.60943985]
[-308.69778442 -49.93880463]
[-322.81274414 -55.01499939]
[-336.92770386 -60.09119797]
[-351.04266357 -65.16738892]
[-365.93331909 -66.97544098]
[-380.85293579 -65.42468262]
[-395.77255249 -63.87392426]
[-410.69216919 -62.32316589]
[-420.45642090 -49.89596939]
[-436.15786743 -48.09595490]
[-448.48114014 -57.99103546]
[-450.11505127 -73.71063995]
[-440.09024048 -85.92860413]
[-424.35421753 -87.39622498]
[-412.24295044 -77.24279022]
[-397.32330322 -78.79354858]
[-382.40368652 -80.34430695]
[-367.48406982 -81.89506531]
[-365.12954712 -89.01589203]
[-379.37118530 -93.72496033]
[-393.61285400 -98.43402863]
[-407.85449219 -103.14309692]
[-422.09606934 -107.85237885]
[-417.38656616 -122.09388733]
[-403.14541626 -117.38475037]
[-388.90377808 -112.67568207]
[-374.66210938 -107.96661377]
[-360.42047119 -103.25754547]
[-358.06594849 -110.37837219]
[-369.12023926 -120.51752472]
[-380.17453003 -130.65667725]
[-391.22882080 -140.79583740]
[-402.28314209 -150.93499756]
[-418.30877686 -151.68220520]
[-427.59930420 -164.76141357]
[-423.02783203 -180.13934326]
[-408.10119629 -186.01939392]
[-394.26983643 -177.89086914]
[-392.14398193 -161.98928833]
[-381.08969116 -151.85012817]
[-370.03536987 -141.71098328]
[-358.98107910 -131.57182312]
[-347.92678833 -121.43267059]
[-338.00198364 -97.28090668]
[-345.96649170 -79.28235626]
[-331.85153198 -74.20616150]
[-317.73654175 -69.12996674]
[-303.62158203 -64.05377197]
[-291.43014526 -72.56884766]
[-276.38439941 -72.26878357]
[-264.25860596 -63.05910873]
[-259.82965088 -48.30477142]
[-252.45227051 -49.00163651]
[-245.51612854 -43.01722336]
[-231.49089050 -37.69815063]
[-217.46565247 -32.37907791]
[-203.44039917 -27.06000328]
[-189.41516113 -21.74093056]
[-175.38990784 -16.42185593]
[-160.74601746 -19.14320564]
[-150.58631897 -7.01509523]
[-136.56108093 -1.69602203]
[-122.53583527 3.62305140]
[-108.51058960 8.94212437]
[-94.48535156 14.26119804]
[-89.81845093 13.14098549]
[-84.39958954 14.95895481]
[-80.07307434 20.01351357]
[-66.23978424 25.81351471]
[-52.40649414 31.61351585]
[-38.57320023 37.41351700]
[-21.32234764 34.25313187]
[-10.27910328 48.97343445]
[3.65224051 54.53379822]
[17.58358383 60.09416580]
[32.27226639 57.62598419]
[42.22111511 69.92765045]
[56.19992828 75.36756897]
[70.22517395 80.68664551]
[84.25041199 86.00572205]
[104.51077271 79.41986084]
[120.15908051 93.87620544]
[135.12333679 94.91107178]
[150.08760071 95.94593811]
[158.89094543 93.41132355]
[165.30050659 97.13001251]
[180.24467468 98.42301941]
[195.18884277 99.71602631]
[207.21963501 89.82170105]
[222.35673523 91.34587860]
[231.71531677 102.87638092]
[246.65948486 104.16938782]
[261.60363770 105.46239471]
[276.54782104 106.75540161]
[290.96359253 100.23648071]
[302.97653198 109.04207611]
[317.92068481 110.33508301]
[332.86486816 111.62808990]
[347.80902100 112.92109680]
[362.75320435 114.21409607]
[377.69735718 115.50710297]
[392.64151001 116.80010986]
[407.59628296 117.96408844]
[417.45776367 105.98363495]
[432.48620605 102.12026978]
[446.90286255 107.85951996]
[455.16427612 120.99454498]
[454.09375000 136.47463989]
[444.10290527 148.34741211]
[429.03341675 152.04753113]
[414.67987061 146.15222168]
[406.56143188 132.92834473]
[399.65365601 135.61050415]
[391.34851074 131.74427795]
[376.40435791 130.45127869]
[361.46017456 129.15826416]
[346.51602173 127.86525726]
[331.57183838 126.57225800]
[316.62768555 125.27925110]
[301.68350220 123.98624420]
[288.33666992 130.59764099]
[275.25482178 121.69956970]
[260.31063843 120.40656281]
[245.36647034 119.11355591]
[230.42230225 117.82054901]
[219.22233582 127.57228088]
[204.04840088 126.47386932]
[193.89582825 114.66019440]
[178.95166016 113.36718750]
[164.00750732 112.07418060]
[149.05273438 110.91020203]
[134.08847046 109.87533569]
[119.12421417 108.84046936]
[116.58491516 112.99345398]
[113.16030121 116.45283508]
[117.74627686 130.73460388]
[122.33225250 145.01637268]
[126.91823578 159.29812622]
[131.50421143 173.57989502]
[145.05882263 182.16197205]
[146.65693665 198.12522888]
[135.07261658 209.22402954]
[119.19236755 206.94430542]
[111.19815063 193.03488159]
[117.22244263 178.16587830]
[112.63646698 163.88410950]
[108.05049133 149.60234070]
[103.46451569 135.32057190]
[98.87854004 121.03881073]
[88.83340454 117.86606598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[5 108]
[7 106]
[8 105]
[9 104]
[12 102]
[13 101]
[14 100]
[15 99]
[16 96]
[17 95]
[18 94]
[19 93]
[20 92]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[27 85]
[28 83]
[32 79]
[33 78]
[34 77]
[35 76]
[36 49]
[37 48]
[38 47]
[39 46]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[113 164]
[114 163]
[115 162]
[117 161]
[118 160]
[119 159]
[122 156]
[123 155]
[124 154]
[125 153]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[134 143]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
