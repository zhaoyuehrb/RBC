%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACCGGGCACCUUCCGGUGGCGGCGCGGAGCCUUGGGCCCGGCUGCGGCCCGGCGGCGGCCCCGGCGCGGUGCGGGCGUUCGCGGCGCCCCGGGAGCUGCAGGGGCCCCGGGCGGCGGCGAGGCCGGAGAGGGGCGGGCCCGGGACACCGGCACCCGGCGCCCUCGGAGCCAAAGGCGCGCGGCGGACACGGCGGGGCCCUCGCGCGCCUGGAGACG\
) } def
/len { sequence length } bind def

/coor [
[-128.97372437 591.33471680]
[-136.81474304 578.12811279]
[-136.98593140 562.77020264]
[-129.44122314 549.39208984]
[-116.21011353 541.59252930]
[-116.42430878 526.59405518]
[-116.63850403 511.59561157]
[-116.85269165 496.59713745]
[-117.06688690 481.59866333]
[-117.28107452 466.60018921]
[-125.19932556 453.98468018]
[-117.65987396 440.07543945]
[-124.26796722 436.52816772]
[-126.93128967 451.28982544]
[-141.79347229 453.31845093]
[-148.31544495 439.81051636]
[-137.48414612 429.43362427]
[-144.09222412 425.88635254]
[-156.71102905 433.99594116]
[-169.32983398 442.10556030]
[-176.75617981 456.07553101]
[-191.64613342 456.44738770]
[-204.26493835 464.55700684]
[-216.88374329 472.66659546]
[-229.50254822 480.77621460]
[-242.12135315 488.88583374]
[-247.64413452 496.15304565]
[-254.97875977 497.01965332]
[-267.71206665 504.94824219]
[-280.44537354 512.87683105]
[-286.07138062 520.06445312]
[-293.41763306 520.82623291]
[-306.26284790 528.57220459]
[-319.10809326 536.31817627]
[-329.54959106 549.67523193]
[-345.27517700 543.33935547]
[-343.54019165 526.47442627]
[-326.85406494 523.47290039]
[-314.00881958 515.72698975]
[-301.16357422 507.98101807]
[-288.37399292 500.14352417]
[-275.64065552 492.21493530]
[-262.90734863 484.28634644]
[-250.23097229 476.26702881]
[-237.61216736 468.15740967]
[-224.99336243 460.04779053]
[-212.37455750 451.93820190]
[-199.75575256 443.82858276]
[-193.23199463 430.43865967]
[-177.43945312 429.48675537]
[-164.82064819 421.37713623]
[-152.20184326 413.26754761]
[-135.25672913 406.79281616]
[-120.29327393 409.04754639]
[-110.93713379 417.17987061]
[-102.64815521 404.67816162]
[-94.35918427 392.17645264]
[-86.07020569 379.67474365]
[-85.48577118 364.79159546]
[-71.41118622 357.56549072]
[-63.12220764 345.06378174]
[-54.83323288 332.56207275]
[-46.54425812 320.06036377]
[-38.25528336 307.55862427]
[-29.96630669 295.05691528]
[-21.67733192 282.55520630]
[-21.09289742 267.67205811]
[-7.01830912 260.44598389]
[1.27066612 247.94425964]
[9.19926167 235.21093750]
[16.76101112 222.25640869]
[16.49483109 207.36418152]
[30.13393593 199.34635925]
[37.69568253 186.39183044]
[45.25743484 173.43728638]
[52.81918335 160.48275757]
[52.55300140 145.59053040]
[66.19210815 137.57270813]
[73.75385284 124.61817932]
[73.48767853 109.72595215]
[87.12677765 101.70812988]
[89.47329712 86.89280701]
[86.28482056 72.23560333]
[83.09633636 57.57839966]
[79.90785980 42.92119598]
[69.41394043 31.08108330]
[74.26904297 16.99998665]
[71.08056641 2.34278440]
[58.06847000 -6.22010994]
[55.04369736 -21.13001823]
[63.28729630 -33.48229218]
[60.09881973 -48.13949585]
[56.91033936 -62.79669952]
[53.72185898 -77.45390320]
[50.53337860 -92.11110687]
[47.34490204 -106.76831055]
[42.46589661 -114.48249817]
[44.21711731 -121.65752411]
[41.23826218 -136.35876465]
[38.25940323 -151.05999756]
[25.73673630 -161.08807373]
[25.91333199 -177.13015747]
[38.65372086 -186.88012695]
[54.18457031 -182.85865784]
[60.59193802 -168.15065002]
[52.96064377 -154.03886414]
[55.93949890 -139.33761597]
[58.91835785 -124.63638306]
[62.00210571 -109.95678711]
[65.19058228 -95.29958344]
[68.37905884 -80.64237976]
[71.56754303 -65.98517609]
[74.75601959 -51.32797623]
[77.94450378 -36.67077255]
[90.57446289 -28.85926437]
[94.01683044 -14.04019642]
[85.73777008 -0.84569496]
[88.92624664 13.81150818]
[99.19210052 24.60324097]
[94.56506348 39.73271561]
[97.75354004 54.38991928]
[100.94202423 69.04712677]
[104.13050079 83.70432281]
[117.68460846 90.12975311]
[131.04971313 83.31989288]
[144.41481018 76.51004028]
[157.73094177 69.60492706]
[166.32551575 56.32171631]
[181.19268799 57.22543716]
[194.45918274 50.22542572]
[207.72567749 43.22541809]
[213.85008240 36.45746994]
[221.23196411 36.22170258]
[234.59706116 29.41184425]
[247.91319275 22.50673485]
[256.50778198 9.22352314]
[271.37493896 10.12724400]
[284.64144897 3.12723422]
[297.90792847 -3.87277555]
[311.17440796 -10.87278557]
[320.62164307 -26.68241692]
[338.12072754 -25.32293510]
[351.28591919 -32.51166916]
[364.45111084 -39.70040512]
[377.61630249 -46.88913727]
[385.68484497 -61.16605759]
[402.08355713 -61.04635239]
[409.94284058 -46.65316391]
[401.17773438 -32.79297256]
[384.80502319 -33.72395325]
[371.63983154 -26.53521919]
[358.47467041 -19.34648514]
[345.30947876 -12.15775013]
[341.60415649 -0.64704710]
[330.70050049 5.45114231]
[318.17443848 2.39370847]
[304.90792847 9.39371872]
[291.64144897 16.39372826]
[278.37493896 23.39373779]
[270.72927856 36.17626190]
[254.91320801 35.77322769]
[250.46726990 41.67080307]
[241.40692139 42.77694321]
[228.04182434 49.58679962]
[214.72567749 56.49190903]
[201.45919800 63.49192047]
[188.19270325 70.49192810]
[180.54702759 83.27445221]
[164.73095703 82.87142181]
[160.28501892 88.76899719]
[151.22467041 89.87513733]
[137.85955811 96.68498993]
[124.49446869 103.49485016]
[115.99481964 111.30229950]
[106.69060516 112.78253937]
[100.08131409 109.26988220]
[99.80662537 125.08869934]
[86.70838928 132.17993164]
[79.14663696 145.13446045]
[78.87195587 160.95327759]
[65.77371216 168.04450989]
[58.21196747 180.99903870]
[50.65021896 193.95356750]
[43.08847046 206.90811157]
[42.81378174 222.72692871]
[29.71554375 229.81814575]
[22.15379524 242.77268982]
[22.28609085 247.09774780]
[21.15278435 250.86334229]
[19.08408165 253.74102783]
[16.48279572 255.54295349]
[13.77238178 256.23321533]
[5.48340607 268.73495483]
[4.30608845 284.51229858]
[-9.17561626 290.84417725]
[-17.46459198 303.34588623]
[-25.75356674 315.84762573]
[-34.04254150 328.34933472]
[-42.33151627 340.85104370]
[-50.62049484 353.35275269]
[-58.90946960 365.85446167]
[-60.08678436 381.63180542]
[-73.56848907 387.96371460]
[-81.85746765 400.46542358]
[-90.14643860 412.96713257]
[-98.43541718 425.46887207]
[-102.66140747 439.86126709]
[-94.72783661 453.54953003]
[-102.28260803 466.38598633]
[-102.06841278 481.38446045]
[-101.85422516 496.38293457]
[-101.64002991 511.38140869]
[-101.42583466 526.37988281]
[-101.21164703 541.37835693]
[-87.76321411 548.79693604]
[-79.83956146 561.95410156]
[-79.57210541 577.31066895]
[-87.03279877 590.73577881]
[-100.21474457 598.61816406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 214]
[6 213]
[7 212]
[8 211]
[9 210]
[10 209]
[12 207]
[18 52]
[19 51]
[20 50]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[28 43]
[29 42]
[30 41]
[32 40]
[33 39]
[34 38]
[55 206]
[56 205]
[57 204]
[58 203]
[60 201]
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[68 193]
[69 192]
[70 187]
[71 186]
[73 184]
[74 183]
[75 182]
[76 181]
[78 179]
[79 178]
[81 176]
[82 123]
[83 122]
[84 121]
[85 120]
[87 118]
[88 117]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[98 108]
[99 107]
[100 106]
[124 173]
[125 172]
[126 171]
[127 169]
[129 167]
[130 166]
[131 165]
[133 164]
[134 163]
[135 161]
[137 159]
[138 158]
[139 157]
[140 156]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
