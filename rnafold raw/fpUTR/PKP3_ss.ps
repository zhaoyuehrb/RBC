%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAGGCUGGCUGGGCGGGGACUUCAGGGAGAGGGCCUCGAGGGACAGGACGUGAAGAUAGUUGGGUUUGGAGGCGGCCGCCAGGCCCAGGCCCGGUGGACCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[107.96406555 332.89367676]
[106.69197845 317.94772339]
[105.41989136 303.00177002]
[101.66204834 296.50918579]
[104.32941437 287.61584473]
[103.48078918 272.63986206]
[102.63216400 257.66387939]
[94.18721008 245.39472961]
[101.13137054 231.17892456]
[92.68641663 218.90977478]
[99.63057709 204.69396973]
[98.78195190 189.71798706]
[97.93332672 174.74201965]
[97.08470154 159.76603699]
[96.23607635 144.79006958]
[95.38745117 129.81408691]
[94.53882599 114.83811951]
[89.82755280 111.69403839]
[86.61113739 107.16918945]
[85.24678040 101.90405273]
[71.21448517 108.66663361]
[56.86936188 103.59988403]
[50.50874329 90.18056488]
[36.29628372 85.38410187]
[22.08382607 80.58764648]
[7.87136745 75.79119110]
[-7.67836761 78.70945740]
[-17.26331329 67.30867004]
[-31.47577095 62.51220703]
[-45.68822861 57.71575165]
[-59.73724747 64.95457458]
[-74.76435852 60.05953979]
[-81.85424805 45.93477249]
[-76.80060577 30.96025085]
[-62.60167313 24.02009583]
[-47.68141937 29.23177338]
[-40.89177322 43.50329208]
[-26.67931366 48.29975128]
[-12.46685410 53.09621048]
[2.06631041 49.83486176]
[12.66782665 61.57872772]
[26.88028526 66.37519073]
[41.09274292 71.17164612]
[55.30520248 75.96810150]
[68.49653625 69.14723206]
[82.97831726 73.80905914]
[90.04323578 87.69158936]
[76.44808960 81.35345459]
[65.94464874 70.64468384]
[59.87088394 56.92938995]
[59.00048065 41.95466232]
[63.44431686 27.62803268]
[72.63632202 15.77446842]
[85.40559387 7.90390873]
[100.12554169 5.01893044]
[114.92110443 7.48703098]
[127.90756226 14.99381542]
[137.43067932 26.58304787]
[142.27735901 40.77845764]
[141.83023071 55.77179337]
[136.14624023 69.65315247]
[125.94942474 80.65429688]
[112.54098511 87.37319946]
[126.61201477 82.17646027]
[140.68304443 76.97972870]
[154.75407410 71.78299713]
[168.82511902 66.58625793]
[182.89614868 61.38952637]
[196.96717834 56.19279099]
[211.03820801 50.99605560]
[225.10923767 45.79932404]
[239.18028259 40.60258865]
[249.44520569 28.56341362]
[264.06484985 31.41218376]
[278.13586426 26.21544838]
[290.89932251 15.05611515]
[305.15582275 24.23155212]
[300.28555298 40.47091293]
[283.33261108 40.28647995]
[269.26156616 45.48321533]
[260.00311279 57.15068436]
[244.37701416 54.67362213]
[230.30598450 59.87035370]
[216.23493958 65.06709290]
[202.16390991 70.26382446]
[188.09288025 75.46055603]
[174.02185059 80.65729523]
[159.95082092 85.85402679]
[145.87977600 91.05075836]
[131.80874634 96.24749756]
[117.73771667 101.44422913]
[109.51480103 113.98949432]
[110.36342621 128.96546936]
[111.21205139 143.94143677]
[112.06067657 158.91741943]
[112.90930176 173.89338684]
[113.75792694 188.86936951]
[114.60655212 203.84533691]
[123.11220551 217.18566895]
[116.10734558 230.33029175]
[124.61299896 243.67062378]
[117.60813904 256.81524658]
[118.45676422 271.79122925]
[119.30538940 286.76721191]
[120.36585236 301.72967529]
[121.63793945 316.67562866]
[122.91002655 331.62161255]
[132.72334290 344.76049805]
[126.00363159 359.71969604]
[109.66356659 361.11044312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[5 104]
[6 103]
[7 102]
[9 100]
[11 98]
[12 97]
[13 96]
[14 95]
[15 94]
[16 93]
[17 92]
[20 47]
[23 44]
[24 43]
[25 42]
[26 41]
[28 39]
[29 38]
[30 37]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[74 80]
[75 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
