%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGUGGGCGGCGGCGGCGGCGGCUGCGCGCUUGGGGCCCGGGGCGCGGGGCGAGGCCGUGGGGACGUGCGAGCGGGGCCGCGGUGGGGCUCGGGGGCGCGUCCACGUGGCCAGAGGGCGGCCACCCGGAGCCAGCGGAGGGACAGGCCUGUCCCCAGGCGCGGCUGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[68.98992920 366.21926880]
[62.45411682 380.29272461]
[48.87801361 387.80731201]
[33.48191071 385.87350464]
[22.18592262 375.23489380]
[19.33358955 359.98220825]
[26.02169037 345.98046875]
[39.67851639 338.61361694]
[41.54788589 323.73052979]
[35.45704269 310.13824463]
[44.85386658 297.40991211]
[46.72323990 282.52685547]
[48.59260941 267.64379883]
[50.46198273 252.76072693]
[52.33135605 237.87767029]
[54.20072937 222.99461365]
[56.07009888 208.11155701]
[49.97925568 194.51924133]
[59.37607956 181.79092407]
[61.24545288 166.90786743]
[63.11482239 152.02479553]
[57.02397919 138.43249512]
[66.42079926 125.70417023]
[63.75750351 110.94249725]
[56.80490112 97.65110016]
[49.85229492 84.35970306]
[42.89969254 71.06829834]
[35.94708633 57.77690125]
[28.99448395 44.48550415]
[7.76819563 40.87065506]
[-5.10193348 24.04979706]
[-20.09237671 24.58518219]
[-35.08281708 25.12056732]
[-50.07326126 25.65595055]
[-65.06370544 26.19133568]
[-78.57891846 34.41626740]
[-91.57424164 27.13816261]
[-105.08946228 35.36309433]
[-118.08478546 28.08498955]
[-133.07522583 28.62037468]
[-148.06567383 29.15575981]
[-163.67890930 35.76358032]
[-174.35066223 22.58974838]
[-164.64590454 8.68816566]
[-148.60105896 14.16531658]
[-133.61061096 13.62993145]
[-118.62017059 13.09454727]
[-106.17716980 4.90791035]
[-92.10962677 12.14772034]
[-79.66662598 3.96108413]
[-65.59909058 11.20089436]
[-50.60864639 10.66550922]
[-35.61820221 10.13012409]
[-20.62775993 9.59473896]
[-5.63731861 9.05935383]
[0.79822922 -3.43183613]
[12.39000797 -11.37392426]
[11.05303764 -26.31422234]
[9.71606731 -41.25452042]
[8.37909698 -56.19482040]
[7.04212713 -71.13511658]
[5.70515680 -86.07541656]
[4.36818647 -101.01571655]
[-4.56834650 -114.07132721]
[2.00375962 -127.43757629]
[0.66678935 -142.37786865]
[-0.67018098 -157.31817627]
[-2.00715113 -172.25846863]
[-3.34412146 -187.19876099]
[-4.68109179 -202.13906860]
[-6.01806211 -217.07936096]
[-7.35503244 -232.01966858]
[-20.50722122 -240.04002380]
[-26.34662628 -254.10255432]
[-22.82743073 -268.73400879]
[-11.50300789 -278.37222290]
[-12.83997822 -293.31253052]
[-14.17694855 -308.25280762]
[-15.51391888 -323.19311523]
[-24.45045280 -336.24871826]
[-17.87834549 -349.61499023]
[-19.21531677 -364.55526733]
[-31.50142670 -374.49645996]
[-33.07643127 -390.22207642]
[-23.00591278 -402.40240479]
[-7.26452589 -403.81103516]
[4.80864048 -393.61230469]
[6.05079174 -377.85690308]
[-4.27501822 -365.89224243]
[-2.93804789 -350.95196533]
[5.90285587 -338.96496582]
[-0.57362086 -324.53009033]
[0.76334941 -309.58978271]
[2.10031962 -294.64950562]
[3.43728995 -279.70919800]
[16.29307938 -272.23480225]
[22.35421944 -258.46066284]
[19.10444260 -243.58476257]
[7.58526611 -233.35662842]
[8.92223644 -218.41633606]
[10.25920677 -203.47604370]
[11.59617710 -188.53573608]
[12.93314743 -173.59544373]
[14.27011681 -158.65513611]
[15.60708714 -143.71484375]
[16.94405746 -128.77455139]
[25.78496170 -116.78756714]
[19.30848503 -102.35268402]
[20.64545441 -87.41238403]
[21.98242569 -72.47208405]
[23.31939507 -57.53178787]
[24.65636635 -42.59149170]
[25.99333572 -27.65119362]
[27.33030701 -12.71089458]
[37.33795929 -9.10385418]
[45.39744568 -2.07009745]
[50.38024902 7.46263170]
[51.56800461 18.21296692]
[48.75578308 28.71811485]
[42.28588486 37.53289795]
[49.23848724 50.82429886]
[56.19108963 64.11569977]
[63.14369583 77.40709686]
[70.09629822 90.69849396]
[77.04890442 103.98989868]
[74.00469208 81.50401306]
[93.47158051 60.01703644]
[128.88705444 60.27078247]
[143.84883118 61.34086990]
[158.81060791 62.41095734]
[169.56054688 51.05432892]
[185.10119629 49.31594086]
[198.09475708 58.01659775]
[202.40605164 73.04812622]
[195.99943542 87.31308746]
[181.89990234 94.07601166]
[166.76481628 90.14364624]
[157.74052429 77.37274170]
[142.77874756 76.30265045]
[127.81696320 75.23256683]
[125.25879669 82.28279877]
[117.58431244 103.43350220]
[129.75097656 112.20690155]
[141.91761780 120.98030090]
[154.08427429 129.75370789]
[166.25093079 138.52709961]
[178.41758728 147.30050659]
[194.77867126 148.41722107]
[201.74812317 163.26170349]
[192.15635681 176.56323242]
[175.87057495 174.63830566]
[169.64418030 159.46716309]
[157.47752380 150.69375610]
[145.31088257 141.92034912]
[133.14422607 133.14695740]
[120.97756958 124.37355804]
[108.81091309 115.60015869]
[101.93415070 118.59350586]
[88.18062592 124.58019257]
[81.30386353 127.57353973]
[87.26099396 142.23039246]
[77.99788666 153.89418030]
[76.12850952 168.77723694]
[74.25914001 183.66029358]
[80.21627045 198.31713867]
[70.95316315 209.98092651]
[69.08378601 224.86398315]
[67.21441650 239.74703979]
[65.34503937 254.63011169]
[63.47566986 269.51315308]
[61.60629654 284.39620972]
[59.73692322 299.27929688]
[65.69406128 313.93612671]
[56.43094635 325.59991455]
[54.56157303 340.48297119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[19 164]
[20 163]
[21 162]
[23 160]
[24 125]
[25 124]
[26 123]
[27 122]
[28 121]
[29 120]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[37 49]
[39 47]
[40 46]
[41 45]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[76 95]
[77 94]
[78 93]
[79 92]
[81 90]
[82 89]
[128 140]
[129 139]
[130 138]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
