%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUCGGCGGGGCGGUCGCUUUGGAGCCGCAAAGUUUGGCUGUGGCGGCAAAUGGGCUUGGGCGGCUCCUCGGCGGGUGGCGGUGGUGGCCGUAGCGGUUCCUCCUGGCCCUGUUAAUGUCGGGGCCAGGCCGGGGGAGGAUGGCGCCCUAGAACCCGGCCUUGCUGGGGUAGGGGCGGGAGGGGACGGGGUGGGGACCGGCC\
) } def
/len { sequence length } bind def

/coor [
[88.33665466 257.42727661]
[99.17297363 245.92292786]
[98.48694611 230.93862915]
[97.80091858 215.95433044]
[97.11488342 200.97001648]
[96.42885590 185.98571777]
[95.74282074 171.00141907]
[87.43153381 158.64132690]
[94.52957916 144.50172424]
[93.84355164 129.51742554]
[85.95265961 128.00291443]
[78.46205902 124.34513855]
[71.96009827 118.65950012]
[66.99922180 111.22375488]
[64.05116272 102.46628571]
[49.13655853 104.06453705]
[36.23935699 113.22821045]
[22.76012611 106.89105225]
[7.84551620 108.48931122]
[-7.06909323 110.08757019]
[-21.98370361 111.68582916]
[-36.89831161 113.28408051]
[-46.80723953 125.30285645]
[-61.95554352 126.71125031]
[-73.35253906 117.19053650]
[-88.26715088 118.78879547]
[-103.18176270 120.38705444]
[-118.09636688 121.98531342]
[-133.01097107 123.58356476]
[-147.92558289 125.18182373]
[-162.84019470 126.78008270]
[-177.75480652 128.37834167]
[-192.37178040 139.57470703]
[-208.12910461 131.85366821]
[-223.01760864 133.67918396]
[-237.90611267 135.50469971]
[-252.79461670 137.33021545]
[-267.68310547 139.15573120]
[-282.57162476 140.98124695]
[-297.46011353 142.80676270]
[-307.18460083 154.97525024]
[-322.30966187 156.61450195]
[-333.85052490 147.26869202]
[-348.73904419 149.09420776]
[-363.62753296 150.91972351]
[-376.39346313 161.21357727]
[-391.59158325 155.05328369]
[-393.58737183 138.77603149]
[-380.32772827 129.12646484]
[-365.45306396 136.03121948]
[-350.56454468 134.20570374]
[-335.67605591 132.38018799]
[-326.73492432 120.52303314]
[-311.66189575 118.45960999]
[-299.28564453 127.91826630]
[-284.39712524 126.09275055]
[-269.50863647 124.26723480]
[-254.62013245 122.44171143]
[-239.73162842 120.61619568]
[-224.84312439 118.79067993]
[-209.95462036 116.96516418]
[-202.25895691 107.62903595]
[-189.86723328 105.98832703]
[-179.35305786 113.46372986]
[-164.43846130 111.86547089]
[-149.52384949 110.26721954]
[-134.60923767 108.66896057]
[-119.69462585 107.07070160]
[-104.78001404 105.47244263]
[-89.86540985 103.87418365]
[-74.95079803 102.27592468]
[-65.82990265 90.55650330]
[-50.72713852 88.72318268]
[-38.49657059 98.36947632]
[-23.58196068 96.77121735]
[-8.66735077 95.17295837]
[6.24725866 93.57469940]
[21.16186714 91.97644043]
[32.99227524 82.92709351]
[47.53829956 89.14993286]
[62.45290756 87.55167389]
[69.78721619 74.46702576]
[63.36742783 60.91024780]
[56.94763947 47.35346603]
[50.52785110 33.79668427]
[44.10806274 20.23990250]
[30.31874466 11.36371517]
[31.38124657 -5.00097609]
[46.20255661 -12.01957989]
[59.53578186 -2.47195721]
[57.66484451 13.82011509]
[64.08463287 27.37689590]
[70.50442505 40.93367767]
[76.92420959 54.49045944]
[83.34399414 68.04724121]
[100.60620880 65.93229675]
[115.84751892 72.06987762]
[125.60472870 84.07586670]
[136.44441223 72.55146790]
[150.90777588 76.10962677]
[165.21543884 71.60510254]
[179.52310181 67.10057068]
[193.83076477 62.59604645]
[208.13842773 58.09152222]
[222.44610596 53.58699417]
[233.97750854 43.99394226]
[241.01060486 30.74496078]
[248.04370117 17.49597549]
[255.07679749 4.24699211]
[262.10989380 -9.00199127]
[269.14297485 -22.25097656]
[276.17608643 -35.49995804]
[283.20916748 -48.74894333]
[290.24227905 -61.99792862]
[297.27536011 -75.24691010]
[291.24026489 -89.67298889]
[295.93936157 -104.58782959]
[309.15386963 -112.94910431]
[324.64428711 -110.80887604]
[335.09655762 -99.17768860]
[335.57537842 -83.54743958]
[325.85470581 -71.29824829]
[310.52435303 -68.21381378]
[303.49124146 -54.96483231]
[296.45816040 -41.71584702]
[289.42504883 -28.46686554]
[282.39196777 -15.21788120]
[275.35885620 -1.96889687]
[268.32577515 11.28008747]
[261.29269409 24.52907181]
[254.25958252 37.77805328]
[247.22648621 51.02703857]
[252.06683350 56.75600052]
[266.83004761 54.10120010]
[261.74752808 68.21392822]
[266.58789062 73.94288635]
[280.82519531 69.22069550]
[295.06250000 64.49850464]
[309.29980469 59.77630997]
[319.96249390 48.08795166]
[334.47842407 51.42513275]
[342.93063354 37.78916168]
[358.87789917 36.03863144]
[370.08685303 47.51640320]
[367.95892334 63.41770554]
[354.12649536 71.54442596]
[339.20062256 65.66243744]
[329.55630493 77.01303101]
[314.02200317 74.01361847]
[299.78469849 78.73580933]
[285.54739380 83.45800018]
[271.31008911 88.18019867]
[270.79577637 95.66254425]
[285.76046753 96.69138336]
[284.73135376 111.65604401]
[269.76718140 110.62723541]
[269.25289917 118.10958099]
[282.71020508 124.73535919]
[296.16751099 131.36114502]
[309.62478638 137.98692322]
[325.42340088 137.14115906]
[333.42398071 149.70458984]
[346.88128662 156.33036804]
[360.33859253 162.95614624]
[373.79589844 169.58192444]
[387.25320435 176.20770264]
[400.71051025 182.83349609]
[417.02923584 181.21122742]
[426.37240601 194.68849182]
[419.12860107 209.40104675]
[402.74960327 210.21386719]
[394.08474731 196.29078674]
[380.62744141 189.66500854]
[367.17013550 183.03923035]
[353.71282959 176.41345215]
[340.25552368 169.78767395]
[326.79821777 163.16189575]
[311.96218872 164.48156738]
[302.99902344 151.44422913]
[289.54171753 144.81843567]
[276.08441162 138.19265747]
[262.62710571 131.56687927]
[227.17645264 102.37928772]
[226.95062256 67.89466095]
[212.64295959 72.39918518]
[198.33529663 76.90370941]
[184.02763367 81.40823364]
[169.71997070 85.91276550]
[155.41230774 90.41728973]
[145.59599304 101.61949158]
[130.10925293 98.38352966]
[124.71421814 117.27389526]
[108.82785034 128.83139038]
[109.51388550 143.81570435]
[117.87424469 157.24755859]
[110.72712708 170.31538391]
[111.41315460 185.29968262]
[112.09918976 200.28399658]
[112.78521729 215.26829529]
[113.47125244 230.25259399]
[114.15727997 245.23690796]
[125.99948120 255.70294189]
[126.88917542 271.48217773]
[116.29852295 283.21304321]
[100.51076508 283.93585205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[9 194]
[10 193]
[15 81]
[16 80]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[43 52]
[44 51]
[45 50]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[98 191]
[100 189]
[101 188]
[102 187]
[103 186]
[104 185]
[105 184]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[136 152]
[137 151]
[138 150]
[139 149]
[141 147]
[157 182]
[158 181]
[159 180]
[160 179]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
