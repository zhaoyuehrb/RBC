%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCCCUCGUCGCCGCCGCCAUUUUAGCUGUUGGUUCCGGCCGCACCGUGUGGGCUGUAGUAGCGGGAGGGGUGGGGGUCCUCCAGAGUUAAGUGGCUGUCCUCGACUGUGCCCAUACAGCAGCCAGCUUUCUUCCUUAAUAACUGCCCGUUCGAAGAGUGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[129.30668640 208.24974060]
[120.09166718 220.88372803]
[104.89926147 224.58840942]
[90.90285492 217.61456299]
[84.71112061 203.25502014]
[89.24761963 188.28991699]
[102.37033844 179.78532410]
[104.03990936 164.87852478]
[105.70948029 149.97172546]
[107.37905121 135.06494141]
[101.12854767 130.91992188]
[87.69867706 137.60112000]
[88.62753296 122.62989044]
[82.37702179 118.48487091]
[69.29469299 125.82331085]
[56.21236801 133.16175842]
[43.13003922 140.50019836]
[38.75016403 155.44857788]
[25.37828445 162.70443726]
[11.15426826 158.43678284]
[-1.92805970 165.77522278]
[-15.01038742 173.11366272]
[-28.09271431 180.45210266]
[-28.20281601 195.81059265]
[-35.99125290 209.04826355]
[-49.36297226 216.60423279]
[-64.72104645 216.44599915]
[-77.93423462 208.61610413]
[-85.44825745 195.22076416]
[-85.24187469 179.86326599]
[-77.37060547 166.67468262]
[-63.95178223 159.20268250]
[-48.59500122 159.45719910]
[-35.43115616 167.36976624]
[-22.34882736 160.03132629]
[-9.26649952 152.69288635]
[3.81582785 145.35444641]
[7.58905125 130.99136353]
[20.75185204 123.36277771]
[35.79159927 127.41786194]
[48.87392807 120.07942200]
[61.95625687 112.74098206]
[75.03858185 105.40254211]
[73.09220886 90.52935791]
[58.56207657 86.80441284]
[44.03194427 83.07946777]
[29.50181007 79.35452271]
[12.65734386 81.27813721]
[6.14589357 65.62446594]
[19.38526154 55.03411865]
[33.22675705 64.82438660]
[47.75688934 68.54933167]
[62.28702164 72.27427673]
[76.81715393 75.99922943]
[89.68980408 68.29889679]
[93.27953339 53.73477173]
[96.86927032 39.17064285]
[100.45900726 24.60651779]
[104.04873657 10.04238987]
[107.63847351 -4.52173710]
[103.42860413 -19.77255821]
[113.98690796 -30.27834129]
[117.57664490 -44.84246826]
[121.16638184 -59.40659714]
[115.16632080 -70.85405731]
[118.48420715 -82.92976379]
[128.80787659 -89.28285217]
[132.66770935 -103.77773285]
[136.52754211 -118.27261353]
[132.60189819 -133.59906006]
[143.35365295 -143.90676880]
[139.42799377 -159.23320007]
[150.17976379 -169.54090881]
[154.03959656 -184.03579712]
[157.89942932 -198.53068542]
[153.97377014 -213.85711670]
[164.72554016 -224.16482544]
[168.58537292 -238.65971375]
[172.44520569 -253.15460205]
[176.30505371 -267.64947510]
[172.37939453 -282.97592163]
[183.13114929 -293.28363037]
[175.46827698 -306.84527588]
[179.58917236 -321.49014282]
[192.56535339 -328.71197510]
[196.42518616 -343.20684814]
[200.28501892 -357.70175171]
[190.39698792 -369.66027832]
[189.46005249 -385.14901733]
[197.83447266 -398.21228027]
[212.30014038 -403.82693481]
[227.29467773 -399.83404541]
[237.05241394 -387.76895142]
[237.82127380 -372.27093506]
[229.30561829 -359.29931641]
[214.77990723 -353.84188843]
[210.92007446 -339.34701538]
[207.06022644 -324.85214233]
[214.72645569 -312.13345337]
[211.01852417 -297.37860107]
[197.62603760 -289.42379761]
[201.82777405 -275.13412476]
[190.79992676 -263.78964233]
[186.94009399 -249.29476929]
[183.08026123 -234.79988098]
[179.22042847 -220.30499268]
[183.42216492 -206.01531982]
[172.39431763 -194.67085266]
[168.53448486 -180.17596436]
[164.67465210 -165.68107605]
[168.87638855 -151.39140320]
[157.84854126 -140.04693604]
[162.05027771 -125.75726318]
[151.02243042 -114.41278076]
[147.16259766 -99.91790009]
[143.30276489 -85.42301178]
[148.79013062 -68.77214050]
[135.73049927 -55.81686020]
[132.14077759 -41.25273514]
[128.55104065 -26.68860626]
[133.01766968 -12.47950935]
[122.20260620 -0.93200213]
[118.61286926 13.63212490]
[115.02313232 28.19625282]
[111.43339539 42.76037979]
[107.84366608 57.32450867]
[104.25392914 71.88863373]
[134.60145569 80.91142273]
[146.36186218 120.28070831]
[157.49658203 130.33146667]
[172.92504883 133.83477783]
[177.18830872 148.10621643]
[188.32302856 158.15698242]
[199.45774841 168.20774841]
[210.59248352 178.25851440]
[221.72720337 188.30928040]
[232.86192322 198.36004639]
[243.72546387 197.17594910]
[253.24124146 202.08580017]
[258.35665894 211.24137878]
[257.58261108 221.47979736]
[268.33605957 231.93750000]
[279.08947754 242.39518738]
[294.35668945 239.62174988]
[308.32366943 246.38215637]
[315.61984253 260.07687378]
[313.43966675 275.44003296]
[302.62149048 286.56417847]
[287.32507324 289.17181396]
[273.43225098 282.26031494]
[266.28509521 268.48724365]
[268.63180542 253.14863586]
[257.87835693 242.69093323]
[247.12490845 232.23324585]
[228.09857178 228.91995239]
[222.81115723 209.49476624]
[211.67643738 199.44400024]
[200.54171753 189.39323425]
[189.40698242 179.34246826]
[178.27226257 169.29170227]
[167.13754272 159.24093628]
[152.50550842 156.45652771]
[147.44581604 141.46620178]
[136.31109619 131.41543579]
[122.28585052 136.73451233]
[120.61627960 151.64129639]
[118.94670868 166.54809570]
[117.27713776 181.45489502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 166]
[10 165]
[14 43]
[15 42]
[16 41]
[17 40]
[20 37]
[21 36]
[22 35]
[23 34]
[44 54]
[45 53]
[46 52]
[47 51]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[62 120]
[63 119]
[64 118]
[67 116]
[68 115]
[69 114]
[71 112]
[73 110]
[74 109]
[75 108]
[77 106]
[78 105]
[79 104]
[80 103]
[82 101]
[85 98]
[86 97]
[87 96]
[129 164]
[130 163]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
