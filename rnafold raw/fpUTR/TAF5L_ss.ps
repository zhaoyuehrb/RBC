%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCCAGAGCGGCGGCGGGGGCGGCGGGGCGCGGGGCGCGGGGGCCCAGCUGAGCCGGCCGUCGGAGUGAGACCCUGCGGCAGAGACGACGGAGGCGGAAGCAACCCGAUCCCGGAGGCGGCGGCGGCGGGGGGAGCCGGAGCCGCCUGGGAUGUUCAGUC\
) } def
/len { sequence length } bind def

/coor [
[-3.63821864 197.78390503]
[-13.47081947 209.11174011]
[-23.30342102 220.43957520]
[-32.70296478 232.12925720]
[-41.65615463 244.16423035]
[-50.60934067 256.19918823]
[-59.56252670 268.23416138]
[-68.51571655 280.26913452]
[-77.46890259 292.30410767]
[-86.42208862 304.33905029]
[-82.94251251 317.37741089]
[-87.55339050 329.85238647]
[-98.35517120 337.27273560]
[-111.26419830 337.10574341]
[-120.44218445 348.97015381]
[-122.10903168 365.28439331]
[-137.17971802 371.75018311]
[-150.15081787 361.71609497]
[-147.67875671 345.50433350]
[-132.30661011 339.79217529]
[-123.12861633 327.92776489]
[-125.97861481 311.37280273]
[-115.78970337 297.59536743]
[-98.45705414 295.38586426]
[-89.50386810 283.35092163]
[-80.55068207 271.31594849]
[-71.59749603 259.28097534]
[-62.64430618 247.24600220]
[-53.69112015 235.21104431]
[-44.73793411 223.17607117]
[-45.03977203 220.34812927]
[-44.21516800 217.22822571]
[-42.14636612 214.25395203]
[-38.87939453 211.89756775]
[-34.63125992 210.60697937]
[-24.79866028 199.27914429]
[-14.96605873 187.95129395]
[-16.30444145 185.04071045]
[-17.20161819 181.96534729]
[-32.05257034 179.85601807]
[-46.90351868 177.74668884]
[-61.75447083 175.63735962]
[-74.23810577 185.32933044]
[-89.90798187 183.27246094]
[-99.46742249 170.68705750]
[-97.24499512 155.03981018]
[-84.55921936 145.61395264]
[-68.93634796 148.00169373]
[-59.64514160 160.78640747]
[-44.79419327 162.89573669]
[-29.94324112 165.00506592]
[-15.09229088 167.11439514]
[-0.69124496 155.51887512]
[17.99587250 159.02551270]
[30.43844604 150.64802551]
[42.88101959 142.27052307]
[55.32358932 133.89303589]
[67.76615906 125.51554108]
[80.20873260 117.13804626]
[92.65130615 108.76055145]
[80.47917175 108.38258362]
[69.00444794 98.08809662]
[64.71749878 79.38343048]
[59.73478699 65.23519897]
[54.75207520 51.08695984]
[49.76936340 36.93872452]
[44.78665161 22.79049110]
[32.90455246 12.34413338]
[35.97474289 -2.23061204]
[30.99202919 -16.37884712]
[16.08366203 -20.68236351]
[6.57867384 -32.94755173]
[6.13192415 -48.45819473]
[14.91519833 -61.25013351]
[29.55114746 -66.40460968]
[44.41194916 -61.93961716]
[53.78332520 -49.57204437]
[54.06179047 -34.05746460]
[45.14026260 -21.36156082]
[50.12297821 -7.21332502]
[61.64867783 2.22105503]
[58.93488693 17.80777740]
[63.91759872 31.95601273]
[68.90031433 46.10424805]
[73.88302612 60.25248337]
[78.86573792 74.40071869]
[86.19091034 76.01062012]
[88.60119629 61.20553970]
[84.66925812 46.73004532]
[95.01341248 35.86733627]
[109.66378021 39.08707809]
[114.50007629 53.28602600]
[104.86087036 64.77903748]
[100.84127045 79.23043060]
[108.16644287 80.84033203]
[118.62234497 70.08514404]
[129.07824707 59.32995224]
[128.49983215 41.86662292]
[140.47921753 29.61403656]
[157.27676392 29.79177856]
[167.52850342 18.84180832]
[170.72023010 2.75625849]
[186.33157349 -2.26550221]
[198.30291748 8.94248295]
[194.31916809 24.85040092]
[178.47846985 29.09354782]
[168.22673035 40.04351807]
[170.44697571 52.76127625]
[164.84115601 64.60673523]
[153.25949097 71.14506531]
[139.83343506 69.78585815]
[129.37753296 80.54104614]
[118.92163086 91.29623413]
[121.86528015 106.00456238]
[135.65502930 111.90734863]
[149.44477844 117.81013489]
[163.23452759 123.71292877]
[177.02426147 129.61570740]
[183.69250488 129.20581055]
[188.78196716 131.85371399]
[191.21505737 136.00865173]
[204.77301025 142.42596436]
[218.33096313 148.84327698]
[231.88891602 155.26058960]
[245.44686890 161.67788696]
[259.00482178 168.09519958]
[272.56277466 174.51251221]
[287.28652954 169.42831421]
[300.94479370 176.12951660]
[305.70108032 190.19769287]
[319.25903320 196.61499023]
[332.81698608 203.03230286]
[346.37493896 209.44961548]
[360.50869751 202.75848389]
[375.62356567 206.76776123]
[384.58279419 219.58439636]
[383.15612793 235.15676880]
[372.01715088 246.13206482]
[356.42535400 247.32810974]
[343.74273682 238.18014526]
[339.95764160 223.00756836]
[326.39968872 216.59025574]
[312.84170532 210.17295837]
[299.28375244 203.75564575]
[285.38848877 208.99557495]
[271.54739380 202.68064880]
[266.14547729 188.07046509]
[252.58750916 181.65315247]
[239.02955627 175.23585510]
[225.47160339 168.81854248]
[211.91365051 162.40122986]
[198.35569763 155.98391724]
[184.79774475 149.56660461]
[171.12147522 143.40545654]
[157.33172607 137.50267029]
[143.54199219 131.59988403]
[129.75224304 125.69709778]
[115.96249390 119.79431152]
[101.02880096 121.20312500]
[88.58622742 129.58061218]
[76.14365387 137.95811462]
[63.70108414 146.33560181]
[51.25851059 154.71310425]
[38.81593704 163.09059143]
[26.37336731 171.46807861]
[24.27555275 187.67849731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[14 21]
[15 20]
[39 52]
[40 51]
[41 50]
[42 49]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[69 80]
[70 79]
[95 113]
[96 112]
[97 111]
[100 107]
[101 106]
[114 158]
[115 157]
[116 156]
[117 155]
[118 154]
[121 153]
[122 152]
[123 151]
[124 150]
[125 149]
[126 148]
[127 147]
[130 144]
[131 143]
[132 142]
[133 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
