%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUGGCUCUCACGGCGUUCAGGUAGGAAAGGAGGUGUGUAUCCAGCUUGGGCUCCAGUUUUCUGCCCGCCUCCUUUUACGUUAUUGCGGAGCGACGGCGCCGGACAGUCAACGUCAUCUAGGAGCACCGAGCAGCUUGGCUAAAAGUAAGGGUGUCGUGCUG\
) } def
/len { sequence length } bind def

/coor [
[356.96020508 335.48464966]
[359.38891602 315.69412231]
[347.86770630 306.08883667]
[336.34649658 296.48352051]
[324.64450073 287.09930420]
[312.76599121 277.93960571]
[300.88745117 268.77987671]
[289.00891113 259.62014771]
[277.13037109 250.46043396]
[262.32687378 248.81575012]
[256.12322998 234.26150513]
[244.24470520 225.10179138]
[236.99461365 223.50024414]
[232.22941589 215.65286255]
[220.52742004 206.26866150]
[208.82543945 196.88444519]
[197.12344360 187.50022888]
[185.42144775 178.11602783]
[173.71946716 168.73181152]
[162.01747131 159.34759521]
[147.72177124 163.44284058]
[133.58866882 158.27375793]
[125.11016846 145.62590027]
[125.71182251 130.23291016]
[114.00983429 120.84869385]
[95.41468811 124.69652557]
[79.44005585 114.43025208]
[75.21546936 95.91706848]
[61.81810760 89.17090607]
[48.42074585 82.42474365]
[35.02338409 75.67858124]
[21.62602234 68.93241882]
[8.22866154 62.18625641]
[-5.16869974 55.44009399]
[-18.56606102 48.69392776]
[-31.96342278 41.94776535]
[-45.36078262 35.20160294]
[-58.75814438 28.45544052]
[-74.56367493 29.15952110]
[-82.45132446 16.52487755]
[-95.84868622 9.77871418]
[-109.24604797 3.03255105]
[-122.99807739 9.97431087]
[-138.02507019 7.51611710]
[-148.59812927 -3.19250035]
[-150.81161499 -17.89754868]
[-164.20898438 -24.64371109]
[-177.60633850 -31.38987350]
[-191.00370789 -38.13603592]
[-200.12145996 -39.21069336]
[-204.59008789 -45.14030075]
[-217.85658264 -52.14031219]
[-234.68685913 -54.18433762]
[-237.38180542 -70.92272186]
[-222.04359436 -78.14599609]
[-210.85656738 -65.40680695]
[-197.59007263 -58.40679550]
[-184.25753784 -51.53339767]
[-170.86018372 -44.78723526]
[-157.46281433 -38.04107285]
[-144.06546021 -31.29491043]
[-130.93359375 -38.27289581]
[-116.03462219 -36.15522385]
[-105.11177063 -25.54651833]
[-102.49988556 -10.36480999]
[-89.10252380 -3.61864734]
[-75.70516205 3.12751555]
[-60.85790253 1.94090509]
[-52.01198196 15.05807972]
[-38.61462021 21.80424309]
[-25.21725845 28.55040550]
[-11.81989861 35.29656982]
[1.57746303 42.04273224]
[14.97482395 48.78889465]
[28.37218475 55.53505707]
[41.76954651 62.28121948]
[55.16690826 69.02738190]
[68.56427002 75.77354431]
[81.96163177 82.51970673]
[88.06701660 77.89689636]
[95.28157806 75.32855988]
[96.99144745 60.42633438]
[98.70131683 45.52410889]
[91.68128204 30.70347786]
[101.22761536 17.36932755]
[117.51986694 19.23868942]
[123.79796600 34.38852310]
[113.60354614 47.23398209]
[111.89367676 62.13620758]
[110.18379974 77.03842926]
[120.07735443 84.90552521]
[124.88672638 96.59499359]
[123.39404297 109.14670563]
[135.09603882 118.53091431]
[149.99081421 114.60005188]
[164.17834473 120.12882233]
[172.29391479 132.80169678]
[171.40168762 147.64561462]
[183.10366821 157.02981567]
[194.80566406 166.41403198]
[206.50765991 175.79824829]
[218.20964050 185.18244934]
[229.91163635 194.56666565]
[241.61363220 203.95088196]
[253.40441895 213.22326660]
[265.28295898 222.38298035]
[280.93609619 224.68283081]
[286.29010010 238.58190918]
[298.16864014 247.74162292]
[310.04718018 256.90133667]
[321.92568970 266.06106567]
[333.80422974 275.22076416]
[340.36749268 276.49002075]
[344.63562012 280.32843018]
[345.95181274 284.96231079]
[357.47302246 294.56762695]
[368.99423218 304.17291260]
[378.61508179 299.46612549]
[389.21847534 298.25662231]
[399.57745361 300.65847778]
[408.50204468 306.36941528]
[414.97583008 314.70858765]
[418.27182007 324.69754028]
[418.03393555 335.17517090]
[414.31533813 344.93255615]
[425.07229614 355.38659668]
[435.82928467 365.84066772]
[446.58624268 376.29473877]
[457.34323120 386.74880981]
[468.24923706 385.96569824]
[477.58145142 391.22854614]
[482.35366821 400.57443237]
[481.19403076 410.78240967]
[491.54519653 421.63842773]
[501.89639282 432.49441528]
[517.01934814 437.14273071]
[520.20239258 451.69323730]
[530.55358887 462.54925537]
[540.90478516 473.40527344]
[556.02777100 478.05355835]
[559.21081543 492.60406494]
[569.56201172 503.46008301]
[579.91320801 514.31610107]
[595.21936035 521.60699463]
[592.45062256 538.33331299]
[575.61151123 540.30303955]
[569.05718994 524.66729736]
[558.70599365 513.81127930]
[548.35479736 502.95526123]
[533.97222900 499.08346558]
[530.04876709 483.75643921]
[519.69757080 472.90045166]
[509.34640503 462.04443359]
[494.96383667 458.17260742]
[491.04037476 442.84561157]
[480.68917847 431.98959351]
[470.33801270 421.13360596]
[451.45196533 417.11047363]
[446.88916016 397.50576782]
[436.13220215 387.05169678]
[425.37521362 376.59765625]
[414.61822510 366.14358521]
[403.86126709 355.68951416]
[384.91702271 360.35260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 117]
[3 116]
[4 115]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[11 106]
[12 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[24 94]
[25 93]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[40 67]
[41 66]
[42 65]
[46 61]
[47 60]
[48 59]
[49 58]
[51 57]
[52 56]
[81 90]
[82 89]
[83 88]
[125 163]
[126 162]
[127 161]
[128 160]
[129 159]
[133 157]
[134 156]
[135 155]
[137 153]
[138 152]
[139 151]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
