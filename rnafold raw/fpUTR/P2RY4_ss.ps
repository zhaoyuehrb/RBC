%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGAGCUUGGGUAGGGGCCAGGCUAGCCUGAGUGCACCCAGAUGCGCUUCUGUCAGCUCUCCCUAGUGCUUCAACCACUGCUCUCCCUGCUCUACUUUUUUUGCUCCAGCUCAGGGAUGGGGGUGGGCAGGGAAAUCCUGCCACCCUCACUUCUCCCCUUCCCAUCUCCAGGGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[67.48711395 142.41137695]
[62.96143341 128.11039734]
[69.19383240 114.46644592]
[82.96855927 108.52385712]
[67.96912384 108.65403748]
[52.96968460 108.78421021]
[37.97024918 108.91438293]
[22.97081566 109.04456329]
[13.91793633 121.50856781]
[-0.56895334 126.19721985]
[-14.86969471 121.51184082]
[-23.56521988 109.44843292]
[-38.56465530 109.57860565]
[-53.56409073 109.70877838]
[-67.29659271 117.56555176]
[-80.09053802 109.93899536]
[-95.08997345 110.06916809]
[-110.08940887 110.19934082]
[-125.08884430 110.32952118]
[-140.08827209 110.45969391]
[-144.63011169 113.14007568]
[-149.27926636 113.73230743]
[-153.21615601 112.54929352]
[-155.86686707 110.18579865]
[-170.85275269 109.53511810]
[-185.83862305 108.88444519]
[-200.82450867 108.23376465]
[-215.81039429 107.58308411]
[-223.41539001 115.40692139]
[-233.85939026 117.69174194]
[-243.62619019 113.91635132]
[-249.56303406 105.55926514]
[-264.51730347 104.38887024]
[-279.47155762 103.21846771]
[-293.83337402 109.85540009]
[-305.91815186 101.14862823]
[-320.87240601 99.97822571]
[-330.97152710 111.61067200]
[-345.81030273 115.02601624]
[-359.65112305 109.11874390]
[-367.26831055 96.34704590]
[-382.22259521 95.17665100]
[-397.17684937 94.00625610]
[-412.13113403 92.83585358]
[-423.97998047 103.29435730]
[-439.74822998 102.22785187]
[-450.08087158 90.26908875]
[-448.84771729 74.51297760]
[-436.78039551 64.30735016]
[-421.03820801 65.70702362]
[-410.96072388 77.88158417]
[-396.00646973 79.05198669]
[-381.05218506 80.22238159]
[-366.09793091 81.39277649]
[-356.58648682 69.96165466]
[-341.99514771 66.27962494]
[-327.86843872 71.96195984]
[-319.70199585 85.02395630]
[-304.74774170 86.19435883]
[-291.45556641 79.47370911]
[-278.30117798 88.26419830]
[-263.34689331 89.43460083]
[-248.39263916 90.60499573]
[-231.62776184 81.00174713]
[-215.15971375 92.59720612]
[-200.17382812 93.24787903]
[-185.18795776 93.89855957]
[-170.20207214 94.54924011]
[-155.21618652 95.19992065]
[-140.21844482 95.46025848]
[-125.21901703 95.33008575]
[-110.21958160 95.19990540]
[-95.22014618 95.06973267]
[-80.22071075 94.93955994]
[-67.56106567 87.09209442]
[-53.69426346 94.70934296]
[-38.69482803 94.57917023]
[-23.69539452 94.44899750]
[-15.21055222 82.23648071]
[-0.99328393 77.30360413]
[13.57279968 81.74011230]
[22.84064102 94.04512787]
[37.84007645 93.91494751]
[52.83951187 93.78477478]
[67.83894348 93.65460205]
[82.83837891 93.52442169]
[95.37334442 85.28582001]
[101.44266510 71.56855774]
[107.51198578 57.85129166]
[113.58130646 44.13402557]
[119.65062714 30.41676140]
[114.19243622 15.82752419]
[120.54299164 2.00272703]
[134.48524475 -3.11092162]
[140.55456543 -16.82818604]
[130.04013062 -27.80613518]
[124.53181458 -41.97394562]
[124.86957550 -57.17112732]
[131.00190735 -71.08022308]
[141.99366760 -81.58019257]
[156.16871643 -87.06987762]
[171.36544800 -86.71212769]
[185.26646423 -80.56150055]
[195.75196838 -69.55593109]
[201.22299194 -55.37367630]
[200.84526062 -40.17743683]
[194.67634583 -26.28452301]
[183.65699768 -15.81350422]
[169.46755981 -10.36113644]
[154.27182007 -10.75886536]
[148.20249939 2.95839930]
[153.79524231 16.71546555]
[147.83549500 30.71318245]
[133.36788940 36.48608017]
[127.29857635 50.20334625]
[121.22925568 63.92061234]
[115.15993500 77.63787842]
[109.09061432 91.35514069]
[119.74993134 81.48149872]
[130.54818726 71.75800323]
[145.54762268 71.62782288]
[160.54705811 71.49765015]
[175.54649353 71.36747742]
[190.54592896 71.23729706]
[205.54536438 71.10712433]
[220.54479980 70.97695160]
[235.54423523 70.84677887]
[250.54365540 70.71659851]
[259.12466431 67.50581360]
[265.80401611 70.71659851]
[280.80343628 70.84677887]
[295.80288696 70.97695160]
[310.80230713 71.10712433]
[323.20629883 60.93261719]
[338.86407471 64.42751312]
[345.76428223 78.91082764]
[338.61373901 93.27220154]
[322.89767456 96.49481964]
[310.67214966 86.10655975]
[295.67269897 85.97638702]
[280.67327881 85.84621429]
[265.67382812 85.71603394]
[250.67384338 85.71603394]
[235.67440796 85.84621429]
[220.67497253 85.97638702]
[205.67553711 86.10655975]
[190.67610168 86.23673248]
[175.67666626 86.36691284]
[160.67723083 86.49708557]
[145.67779541 86.62725830]
[130.67835999 86.75743103]
[126.89083862 93.23081970]
[134.31582642 106.26422119]
[119.31581116 106.17758942]
[115.52829742 112.65097809]
[122.76372528 125.79055786]
[129.99914551 138.93014526]
[137.23458862 152.06971741]
[144.47001648 165.20930481]
[151.70544434 178.34887695]
[158.94087219 191.48846436]
[174.29803467 191.71922302]
[187.47409058 199.61141968]
[194.92477417 213.04209900]
[194.64587402 228.39845276]
[186.71241760 241.54971313]
[173.25845337 248.95826721]
[157.90304565 248.63122559]
[144.77671814 240.65658569]
[137.41036987 227.17947388]
[137.78553772 211.82516479]
[145.80128479 198.72389221]
[138.56585693 185.58430481]
[131.33042908 172.44473267]
[124.09500122 159.30514526]
[116.85957336 146.16557312]
[109.62414551 133.02598572]
[102.38871002 119.88640594]
[103.95764923 134.80412292]
[95.11822510 146.92289734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 86]
[5 85]
[6 84]
[7 83]
[8 82]
[12 78]
[13 77]
[14 76]
[16 74]
[17 73]
[18 72]
[19 71]
[20 70]
[24 69]
[25 68]
[26 67]
[27 66]
[28 65]
[32 63]
[33 62]
[34 61]
[36 59]
[37 58]
[41 54]
[42 53]
[43 52]
[44 51]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[94 111]
[95 110]
[120 151]
[121 150]
[122 149]
[123 148]
[124 147]
[125 146]
[126 145]
[127 144]
[128 143]
[130 142]
[131 141]
[132 140]
[133 139]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
