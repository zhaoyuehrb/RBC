%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUCUGGUGCUCCUGAUGGGCCGGCCAGUCUGGGCCCAGCUCCCCCGAGAGGUGGUCGGAUCCUCUGGGCUGCUCGGUCGAUGCCUGUGCCACUGACGUCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[104.66313934 162.29267883]
[90.20041656 166.27134705]
[77.50826263 158.27702332]
[74.84994507 143.51446533]
[83.95579529 131.59509277]
[71.34783173 139.72154236]
[58.73986053 147.84799194]
[46.13189316 155.97444153]
[33.52392197 164.10087585]
[21.15995216 172.59394836]
[9.05063534 181.44631958]
[3.86538458 189.16259766]
[-3.54662848 190.37463379]
[-15.91059971 198.86770630]
[-22.48207092 213.89260864]
[-38.80759048 215.44483948]
[-48.09286499 201.92759705]
[-40.78599548 187.24626160]
[-24.40366936 186.50372314]
[-12.03969765 178.01066589]
[0.19826508 169.33700562]
[12.30758095 160.48463440]
[13.92298222 155.83634949]
[18.56720924 152.22360229]
[25.39747810 151.49291992]
[38.00544739 143.36647034]
[50.61341476 135.24002075]
[63.22138214 127.11357880]
[75.82935333 118.98712921]
[72.08561707 99.05167389]
[81.34139252 83.17452240]
[96.94774628 77.89119720]
[92.18963623 62.80242538]
[102.36148834 51.92204666]
[105.42270660 37.23773575]
[108.48391724 22.55342674]
[111.54513550 7.86911583]
[106.78702545 -7.21965361]
[116.95887756 -18.10003281]
[120.02008820 -32.78434372]
[123.08130646 -47.46865463]
[114.68809509 -60.59083939]
[118.00178528 -75.43920898]
[130.56350708 -83.35998535]
[133.62472534 -98.04429626]
[136.68594360 -112.72860718]
[131.92782593 -127.81737518]
[142.09968567 -138.69775391]
[145.16088867 -153.38206482]
[148.22210693 -168.06637573]
[146.90330505 -177.26901245]
[151.59474182 -183.13392639]
[155.08572388 -197.72204590]
[158.57669067 -212.31015015]
[150.09652710 -225.64665222]
[153.61196899 -241.05500793]
[167.03738403 -249.39370728]
[182.40769958 -245.71554565]
[190.60398865 -232.20271301]
[186.76353455 -216.87214661]
[173.16481018 -208.81918335]
[169.67384338 -194.23106384]
[166.18286133 -179.64295959]
[162.90641785 -165.00515747]
[159.84519958 -150.32084656]
[156.78399658 -135.63653564]
[161.76106262 -121.59809113]
[151.37023926 -109.66739655]
[148.30903625 -94.98308563]
[145.24781799 -80.29877472]
[153.59826660 -68.01847076]
[150.70294189 -53.08288574]
[137.76560974 -44.40744019]
[134.70440674 -29.72312927]
[131.64318848 -15.03881931]
[136.62025452 -1.00036979]
[126.22943878 10.93032932]
[123.16822815 25.61463928]
[120.10701752 40.29895020]
[117.04579926 54.98326111]
[122.02287292 69.02171326]
[111.63205719 80.95240784]
[126.51429749 99.16337585]
[117.64129639 125.16974640]
[127.35787964 136.59725952]
[137.07446289 148.02476501]
[146.79103088 159.45228577]
[156.50761414 170.87979126]
[171.34152222 176.38124084]
[173.69136047 191.08930969]
[183.40792847 202.51683044]
[199.04295349 202.23387146]
[211.16938782 212.10726929]
[214.06147766 227.47508240]
[206.35369873 241.08111572]
[191.68540955 246.50100708]
[176.98252869 241.17565918]
[169.18731689 227.61952209]
[171.98042297 212.23341370]
[162.26383972 200.80589294]
[148.12492371 196.12182617]
[145.08010864 180.59637451]
[135.36352539 169.16886902]
[125.64694214 157.74134827]
[115.93035889 146.31384277]
[106.21378326 134.88632202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 22]
[11 21]
[13 20]
[14 19]
[32 82]
[34 80]
[35 79]
[36 78]
[37 77]
[39 75]
[40 74]
[41 73]
[44 70]
[45 69]
[46 68]
[48 66]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[90 100]
[91 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
