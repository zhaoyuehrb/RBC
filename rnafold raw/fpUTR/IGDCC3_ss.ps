%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUGCGAGUGUGGAGCGCGCACCCCGGGCGAGGCUGACAGAUCGCCCGGGUGGGUGCAAGAUGGCGCAAGCGGCGCUCCCCCUGCGCCCCCCGCGCUGCUGAGCAGGCAUGCGGCCCCAGUCCCCCACCGCCUGGGCUCGGCCCCGGCCGGAGCCCCAGCCCCGGCCCCGGCGCCGGCCCCGCGGGACGCUGUGAGCCGCGAGAGGCCCGGGAGCCGCGCGUCGCCGAGCCGAGCUGACCGAGAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[390.07376099 147.24580383]
[404.16433716 142.11117554]
[389.26858521 140.34579468]
[374.37280273 138.58042908]
[359.47705078 136.81504822]
[344.58129883 135.04968262]
[329.68554688 133.28430176]
[312.49719238 142.17510986]
[296.56491089 129.79643250]
[281.62991333 128.40150452]
[268.23828125 134.92169189]
[255.21743774 125.93456268]
[240.28244019 124.53963470]
[233.34919739 127.04000854]
[225.17105103 123.03352356]
[210.25451660 121.45324707]
[203.29077148 123.86734772]
[195.16299438 119.75962067]
[180.26724243 117.99424744]
[173.27404785 120.32168579]
[165.19792175 116.11335754]
[150.32522583 114.16315460]
[135.45254517 112.21295929]
[120.57986450 110.26276398]
[107.60989380 136.27290344]
[67.27339172 139.28193665]
[54.80782318 147.62516785]
[42.34224701 155.96839905]
[29.87667656 164.31163025]
[17.41110229 172.65486145]
[4.94552994 180.99809265]
[-7.52004290 189.34132385]
[-19.98561668 197.68455505]
[-32.45118713 206.02778625]
[-31.35472679 221.34748840]
[-38.07944870 235.15594482]
[-50.81643295 243.73876953]
[-66.13949585 244.78720093]
[-79.92681885 238.01924133]
[-88.46967316 225.25541687]
[-89.47006989 209.92913818]
[-82.65892029 196.16310120]
[-69.86837769 187.66029358]
[-54.53903961 186.70794678]
[-40.79441833 193.56221008]
[-28.32884598 185.21897888]
[-15.86327362 176.87574768]
[-3.39770031 168.53251648]
[9.06787300 160.18928528]
[21.53344536 151.84605408]
[33.99901962 143.50282288]
[46.46459198 135.15959167]
[58.93016434 126.81636810]
[57.67878723 119.42150116]
[53.92465210 97.23690033]
[39.40802383 93.45966339]
[24.89139748 89.68242645]
[10.37476826 85.90519714]
[-4.14186001 82.12796021]
[-18.65848732 78.35072327]
[-33.17511749 74.57348633]
[-44.67182159 86.47474670]
[-60.51299286 90.92105865]
[-76.34165192 86.78804779]
[-87.85383606 75.29755402]
[-91.96884918 59.65851593]
[-106.53126526 56.06182861]
[-121.09367371 52.46513748]
[-135.65608215 48.86844635]
[-150.21849060 45.27175522]
[-164.63981628 52.30064392]
[-179.06427002 45.27820969]
[-182.42666626 29.59146881]
[-172.14764404 17.27394295]
[-156.11241150 17.77458572]
[-146.62181091 30.70934486]
[-132.05940247 34.30603409]
[-117.49698639 37.90272522]
[-102.93457031 41.49941635]
[-88.37216187 45.09610748]
[-79.58770752 34.65787506]
[-67.10527039 28.99038124]
[-53.33278275 29.24941826]
[-40.95403671 35.44142532]
[-32.40573883 46.41117096]
[-29.39788055 60.05686188]
[-14.88125324 63.83409500]
[-0.36462489 67.61132812]
[14.15200329 71.38856506]
[28.66863251 75.16580200]
[43.18526077 78.94303894]
[57.70188904 82.72026825]
[62.10274124 76.64717865]
[55.98439407 62.95170593]
[70.90444183 64.50098419]
[75.30529785 58.42788315]
[67.19567871 45.80908203]
[59.94374466 40.30059814]
[59.06484604 32.98285675]
[51.11254883 20.26433182]
[43.16024780 7.54580355]
[35.20795059 -5.17272425]
[21.68408012 -15.39726734]
[27.76526451 -31.22305489]
[44.65601349 -29.76053810]
[47.92647934 -13.12502289]
[55.87877655 -0.40649539]
[63.83107758 12.31203175]
[71.78337860 25.03055954]
[79.81448364 37.69947052]
[87.92409515 50.31827164]
[119.85215759 68.70262909]
[122.53005981 95.39007568]
[137.40274048 97.34027863]
[152.27543640 99.29047394]
[167.14811707 101.24066925]
[182.03262329 103.09849548]
[196.92837524 104.86386871]
[211.83479309 106.53672028]
[226.75132751 108.11699677]
[241.67736816 109.60462952]
[256.61236572 110.99956512]
[271.07226562 104.57915497]
[283.02487183 113.46650696]
[297.95986938 114.86144257]
[305.89096069 107.46771240]
[316.36340332 105.68117523]
[325.89544678 109.85178375]
[331.45092773 118.38855743]
[346.34667969 120.15393066]
[361.24243164 121.91930389]
[376.13818359 123.68467712]
[391.03393555 125.45005035]
[405.92968750 127.21542358]
[420.92852783 127.40167999]
[435.86352539 126.00674438]
[448.88436890 117.01961517]
[462.27603149 123.53980255]
[477.21102905 122.14486694]
[492.14602661 120.74993896]
[507.08102417 119.35500336]
[522.01599121 117.96006775]
[536.95098877 116.56513214]
[551.88598633 115.17019653]
[566.82098389 113.77526093]
[562.45104980 106.22999573]
[560.97003174 96.61521149]
[563.03033447 85.91043091]
[568.97827148 75.26858521]
[579.94079590 65.03028107]
[590.90332031 54.79198837]
[601.86584473 44.55369186]
[612.82843018 34.31539154]
[623.79095459 24.07709503]
[628.59552002 9.00304699]
[643.17816162 5.97070551]
[654.14068604 -4.26759195]
[658.40325928 -20.10307312]
[674.31610107 -24.06729698]
[685.50933838 -12.08221054]
[680.46844482 3.52295756]
[664.37902832 6.69494772]
[653.41644287 16.93324471]
[649.39605713 31.27498245]
[634.02923584 35.03963470]
[623.06671143 45.27793121]
[612.10418701 55.51622772]
[601.14160156 65.75452423]
[590.17907715 75.99282074]
[579.21655273 86.23111725]
[581.10516357 93.48943329]
[584.88238525 108.00606537]
[586.77099609 115.26437378]
[601.33343506 118.86106873]
[615.89587402 122.45775604]
[630.45825195 126.05445099]
[645.02069092 129.65113831]
[659.60510254 133.15734863]
[674.21105957 136.57293701]
[688.81701660 139.98852539]
[703.42297363 143.40411377]
[718.04986572 146.72895813]
[732.69708252 149.96292114]
[747.34429932 153.19688416]
[761.99157715 156.43086243]
[771.01831055 155.22605896]
[776.80004883 159.79698181]
[791.40600586 163.21257019]
[807.92639160 151.73420715]
[827.25347900 156.08184814]
[836.96173096 172.99746704]
[851.68481445 175.86671448]
[866.40783691 178.73594666]
[877.66918945 168.06068420]
[893.05889893 166.07684326]
[906.65936279 173.54728699]
[913.24084473 187.59944153]
[910.27270508 202.83000183]
[898.89624023 213.38247681]
[883.48583984 215.19924927]
[869.96722412 207.58171082]
[863.53857422 193.45898438]
[848.81555176 190.58973694]
[834.09252930 187.72048950]
[827.47216797 195.50460815]
[818.15100098 199.88536072]
[807.77191162 200.01689148]
[798.19512939 195.80892944]
[791.16448975 187.95489502]
[787.99041748 177.81852722]
[773.38446045 174.40293884]
[758.75756836 171.07809448]
[744.11035156 167.84413147]
[729.46313477 164.61015320]
[714.81585693 161.37619019]
[707.62634277 162.99861145]
[700.00738525 158.01007080]
[685.40142822 154.59448242]
[670.79547119 151.17887878]
[656.18951416 147.76329041]
[648.98040771 149.29631042]
[641.42395020 144.21354675]
[626.86157227 140.61685181]
[612.29913330 137.02017212]
[597.73675537 133.42347717]
[583.17431641 129.82678223]
[568.21594238 128.71026611]
[553.28094482 130.10519409]
[538.34594727 131.50012207]
[523.41094971 132.89506531]
[508.47595215 134.28999329]
[493.54095459 135.68493652]
[478.60595703 137.07986450]
[463.67095947 138.47480774]
[451.71838379 147.36215210]
[437.25848389 140.94174194]
[422.32348633 142.33666992]
[436.28485107 147.82119751]
[447.74450684 157.49984741]
[455.48776245 170.34672546]
[458.69384766 185.00007629]
[457.02291870 199.90672302]
[450.65213013 213.48658752]
[440.25671387 224.30026245]
[426.93856812 231.20152283]
[412.10940552 233.45884705]
[397.34103394 230.83297729]
[384.19885254 223.60224915]
[374.07592773 212.53309631]
[368.04522705 198.79881287]
[366.74597168 183.85517883]
[370.31594849 169.28619385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[9 125]
[10 124]
[12 122]
[13 121]
[15 120]
[16 119]
[18 118]
[19 117]
[21 116]
[22 115]
[23 114]
[24 113]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[96 111]
[97 110]
[99 109]
[100 108]
[101 107]
[102 106]
[135 237]
[136 236]
[138 234]
[139 233]
[140 232]
[141 231]
[142 230]
[143 229]
[144 228]
[145 227]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[156 163]
[157 162]
[173 226]
[174 225]
[175 224]
[176 223]
[177 222]
[178 220]
[179 219]
[180 218]
[181 217]
[182 215]
[183 214]
[184 213]
[185 212]
[187 211]
[188 210]
[191 204]
[192 203]
[193 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
