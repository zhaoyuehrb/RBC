%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAGUGAGCGGCUAGGGUGCAGCAGGAGUUUGGGGGAUAGCCCCAGUCUUGGGAUCUCUGUCCUGGGCUGGGGACUGCCCCCUCCCCUGGCCUGGCUCCUGACGCCCGUGCUGCCGGUGAAACGCUGUUGACAUGUCCUGAAUUAUUAAGCGUGGGGAGGGCUCCGGAGCAC\
) } def
/len { sequence length } bind def

/coor [
[349.28338623 223.69429016]
[333.03875732 217.55084229]
[322.07153320 203.96983337]
[319.45993042 186.62013245]
[305.36965942 181.47578430]
[291.27941895 176.33142090]
[283.89309692 176.99330139]
[276.98376465 170.96618652]
[262.98812866 165.56971741]
[248.99247742 160.17326355]
[234.99682617 154.77679443]
[220.90657043 149.63244629]
[206.72622681 144.74185181]
[192.54588318 139.85125732]
[178.36553955 134.96066284]
[164.18519592 130.07006836]
[150.00485229 125.17946625]
[135.82450867 120.28887177]
[121.64417267 115.39827728]
[113.63524628 122.79598999]
[103.32919312 126.35324860]
[92.46225739 125.47076416]
[82.86521912 120.29720306]
[70.34661865 128.56065369]
[57.82801819 136.82411194]
[50.98039246 151.72518921]
[34.62900543 152.97589111]
[25.59476662 139.28959656]
[33.17132187 124.74559784]
[49.56456375 124.30551147]
[62.08316040 116.04205322]
[74.60176086 107.77860260]
[73.44157410 100.47682953]
[74.33890533 93.13811493]
[61.53174973 85.32935333]
[48.72459030 77.52059174]
[35.91743469 69.71183777]
[23.11027718 61.90307617]
[14.12116051 60.09733582]
[10.14508247 53.83743668]
[-2.51983619 45.80003357]
[-15.18475533 37.76263428]
[-27.92130661 29.83923340]
[-40.72846222 22.03047562]
[-53.53562164 14.22171593]
[-66.34278107 6.41295671]
[-79.14993286 -1.39580214]
[-91.95709229 -9.20456123]
[-104.76425171 -17.01332092]
[-117.57141113 -24.82207870]
[-130.37857056 -32.63083649]
[-139.36767578 -34.43657684]
[-143.34376526 -40.69647598]
[-156.00868225 -48.73387909]
[-168.67359924 -56.77127838]
[-181.33851624 -64.80868530]
[-194.00343323 -72.84608459]
[-210.40193176 -72.99182129]
[-218.23835754 -87.39746857]
[-209.45124817 -101.24372864]
[-193.08004761 -100.28675842]
[-185.96603394 -85.51100159]
[-173.30111694 -77.47360229]
[-160.63619995 -69.43619537]
[-147.97128296 -61.39879608]
[-135.30636597 -53.36139679]
[-122.56980896 -45.43799591]
[-109.76264954 -37.62923813]
[-96.95549011 -29.82047844]
[-84.14833832 -22.01171875]
[-71.34117889 -14.20296001]
[-58.53401947 -6.39420080]
[-45.72686386 1.41455829]
[-32.91970444 9.22331715]
[-20.11254692 17.03207588]
[-12.73993969 17.83218765]
[-7.14735317 25.09771538]
[5.51756573 33.13511658]
[18.18248558 41.17251968]
[30.91903687 49.09591675]
[43.72619247 56.90467834]
[56.53335190 64.71343231]
[69.34050751 72.52219391]
[82.14766693 80.33095551]
[101.26239014 73.46730804]
[119.63911438 82.11473846]
[126.53476715 101.21794128]
[140.71510315 106.10853577]
[154.89544678 110.99912262]
[169.07579041 115.88971710]
[183.25613403 120.78031158]
[197.43647766 125.67090607]
[211.61682129 130.56150818]
[225.79716492 135.45210266]
[232.40322876 134.56335449]
[237.66233826 136.82606506]
[240.39329529 140.78114319]
[254.38894653 146.17761230]
[268.38458252 151.57406616]
[282.38024902 156.97053528]
[296.42376709 162.24116516]
[310.51403809 167.38551331]
[324.60427856 172.52987671]
[333.70172119 163.31185913]
[345.57128906 158.24847412]
[358.42758179 158.06275940]
[370.35134888 162.74697876]
[379.57592773 171.56900024]
[384.74911499 183.18649292]
[385.13122559 195.85118103]
[399.02774048 201.49800110]
[412.92425537 207.14483643]
[426.82077026 212.79167175]
[440.71731567 218.43849182]
[449.87982178 218.77467346]
[454.81112671 224.31343079]
[468.60403442 230.20881653]
[482.39697266 236.10418701]
[496.18988037 241.99955750]
[502.42779541 237.65965271]
[509.72216797 235.78735352]
[517.14331055 236.57211304]
[523.76251221 239.86779785]
[528.76800537 245.21705627]
[531.56481934 251.91421509]
[531.84497070 259.09814453]
[545.05389404 266.20617676]
[558.26281738 273.31420898]
[574.08166504 273.04025269]
[581.62280273 285.88473511]
[594.83172607 292.99276733]
[609.79809570 288.67471313]
[623.09252930 296.07144165]
[627.11694336 310.36618042]
[640.32586670 317.47421265]
[653.53479004 324.58224487]
[666.74371338 331.69027710]
[679.95263672 338.79830933]
[691.97393799 329.44906616]
[706.76019287 325.80389404]
[721.74957275 328.49438477]
[734.34509277 337.05435181]
[742.36444092 350.00076294]
[744.41833496 365.09051514]
[740.15087891 379.70928955]
[730.30139160 391.32427979]
[716.57635498 397.92306519]
[701.35375977 398.36242676]
[687.27105713 392.56622314]
[676.76800537 381.53866577]
[671.66448975 367.19036865]
[672.84460449 352.00723267]
[659.63568115 344.89920044]
[646.42675781 337.79116821]
[633.21783447 330.68313599]
[620.00891113 323.57513428]
[605.86187744 328.09143066]
[592.36486816 321.07104492]
[587.72369385 306.20169067]
[574.51477051 299.09365845]
[559.64068604 299.87603760]
[551.15478516 286.52316284]
[537.94586182 279.41513062]
[524.73693848 272.30709839]
[502.51480103 275.49868774]
[490.29449463 255.79248047]
[476.50158691 249.89710999]
[462.70867920 244.00172424]
[448.91574097 238.10635376]
[435.07046509 232.33502197]
[421.17395020 226.68818665]
[407.27743530 221.04136658]
[393.38092041 215.39453125]
[379.48437500 209.74769592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 103]
[5 102]
[6 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 94]
[13 93]
[14 92]
[15 91]
[16 90]
[17 89]
[18 88]
[19 87]
[23 32]
[24 31]
[25 30]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[40 79]
[41 78]
[42 77]
[43 75]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[110 174]
[111 173]
[112 172]
[113 171]
[114 170]
[116 169]
[117 168]
[118 167]
[119 166]
[126 164]
[127 163]
[128 162]
[130 160]
[131 159]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
