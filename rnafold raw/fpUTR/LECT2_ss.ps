%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCAAAUAGCUAUCCAUGGAAUAUUAGAACUUGACUUGCUCCAUCCUCUUAAACUUUUUGUGUCUCACACUAAAGAAAUGAGAGAUGCAGAAUUCUAAGGCUAAAUAGCUAGGAAGUAUUCAUUCAAACUUGAAUAUUCUUCAAAGAGAGUGUGGGGGCAACUCUAAUCAGAGGAAGAAACUAAAGGAAGUAAAACCAG\
) } def
/len { sequence length } bind def

/coor [
[72.25613403 558.49304199]
[57.38647461 555.77557373]
[43.97920227 548.79443359]
[33.22647476 538.17034912]
[26.08442307 524.84814453]
[23.18810654 510.01226807]
[24.79506874 494.98199463]
[30.76241684 481.09378052]
[40.55953979 469.58258057]
[53.31528473 461.47195435]
[67.89541626 457.48306274]
[68.36191559 442.49032593]
[68.82841492 427.49758911]
[65.89213562 420.70928955]
[69.42055511 412.27581787]
[70.12015533 397.29214478]
[70.81976318 382.30847168]
[63.02224350 395.12246704]
[49.09104919 400.68319702]
[34.19578552 402.45269775]
[19.34952736 400.31057739]
[5.56202221 394.40255737]
[-6.22899580 385.13046265]
[-15.22157955 373.12490845]
[-20.80411339 359.20242310]
[-22.59690857 344.30993652]
[-20.47803307 329.46035767]
[-14.59159851 315.66360474]
[-5.33795977 303.85809326]
[6.65351057 294.84674072]
[20.56723213 289.24243164]
[35.45688629 287.42633057]
[50.30977631 289.52197266]
[64.11570740 295.38681030]
[75.93568420 304.62194824]
[84.96580505 316.59930420]
[90.59181976 330.50396729]
[97.98705292 343.55426025]
[97.75377655 328.55609131]
[97.52049255 313.55789185]
[97.28721619 298.55972290]
[97.05393982 283.56152344]
[96.82066345 268.56335449]
[96.58738708 253.56515503]
[85.74734497 243.41482544]
[85.29711914 228.20785522]
[96.01721191 216.90664673]
[95.66731262 201.91073608]
[95.20081329 186.91798401]
[94.73432159 171.92524719]
[94.26782227 156.93249512]
[93.80132294 141.93975830]
[79.09826660 138.52404785]
[66.06996155 129.95776367]
[56.51321793 117.01336670]
[51.88213730 101.08502197]
[53.07587814 84.04084778]
[60.28847885 68.00412750]
[49.76467514 57.31537247]
[39.24087143 46.62660980]
[28.71706963 35.93785095]
[18.19326782 25.24909210]
[7.66946459 14.56033325]
[-2.85433817 3.87157369]
[-13.37814045 -6.81718588]
[-23.90194321 -17.50594521]
[-34.42574692 -28.19470406]
[-44.94954681 -38.88346481]
[-60.14504242 -43.28885651]
[-63.56085587 -57.78649521]
[-74.08465576 -68.47525787]
[-89.16309357 -65.21268463]
[-103.60372925 -70.64144135]
[-112.79862213 -83.02923584]
[-113.81371307 -98.42317200]
[-106.32508087 -111.91108704]
[-92.72232819 -119.18904877]
[-77.34604645 -117.93468475]
[-65.10274506 -108.54824829]
[-59.89921951 -94.02492523]
[-63.39589691 -78.99905396]
[-52.87209320 -68.31029510]
[-38.42933273 -64.66943359]
[-34.26078796 -49.40726852]
[-23.73698616 -38.71850586]
[-13.21318340 -28.02974701]
[-2.68938136 -17.34098816]
[7.83442116 -6.65222883]
[18.35822487 4.03653049]
[28.88202667 14.72529030]
[39.40583038 25.41404915]
[49.92963028 36.10280991]
[60.45343399 46.79156876]
[70.97723389 57.48032761]
[78.13497162 55.24048996]
[73.65529633 40.92502594]
[69.17584229 26.60949326]
[83.49143982 22.13026047]
[87.97075653 36.44535065]
[92.45043182 50.76081467]
[99.60816193 48.52097702]
[102.16181946 33.73994827]
[104.71546936 18.95891762]
[107.26912689 4.17788696]
[101.10233307 -11.01759624]
[111.39071655 -23.78792191]
[127.55046844 -20.99607277]
[132.95782471 -5.51406384]
[122.05015564 6.73154020]
[119.49649811 21.51256943]
[116.94284821 36.29360199]
[114.38919830 51.07463074]
[119.92870331 56.18958282]
[124.34047699 61.83908463]
[127.59120178 67.81160736]
[139.21405029 58.32956314]
[150.83691406 48.84751892]
[162.45976257 39.36547089]
[173.93376160 29.70381546]
[185.25610352 19.86488533]
[196.57844543 10.02595615]
[207.90078735 0.18702745]
[219.22312927 -9.65190125]
[230.54547119 -19.49083138]
[229.06164551 -34.93679810]
[236.96908569 -48.28789520]
[251.22724915 -54.41036224]
[266.35357666 -50.94997787]
[276.53164673 -39.23733139]
[277.84783936 -23.77617836]
[269.79602051 -10.51164436]
[255.47229004 -4.54421425]
[240.38441467 -8.16848660]
[229.06205750 1.67044246]
[217.73971558 11.50937176]
[206.41737366 21.34830093]
[195.09503174 31.18722916]
[183.77268982 41.02615738]
[182.55108643 45.64997482]
[178.40753174 49.55274963]
[171.94181824 50.98832703]
[160.31895447 60.47037506]
[148.69610596 69.95242310]
[137.07324219 79.43446350]
[142.36248779 98.33062744]
[138.57661438 117.58440399]
[126.52667999 133.07116699]
[108.79406738 141.47325134]
[109.26056671 156.46600342]
[109.72706604 171.45874023]
[110.19355774 186.45149231]
[110.66005707 201.44422913]
[114.05689240 209.93157959]
[111.01539612 216.67337036]
[122.08177185 227.63572693]
[122.10469818 242.84933472]
[111.58557129 253.33187866]
[111.81884766 268.33007812]
[112.05212402 283.32824707]
[112.28540802 298.32644653]
[112.51868439 313.32461548]
[112.75196075 328.32281494]
[112.98523712 343.32098389]
[120.35015106 356.38842773]
[133.05987549 364.35479736]
[145.76959229 372.32116699]
[158.47930908 380.28753662]
[174.87837219 380.34146118]
[182.79531860 394.70300293]
[174.08587646 408.59823608]
[157.70956421 407.73294067]
[150.51293945 392.99725342]
[137.80322266 385.03088379]
[125.09349823 377.06451416]
[112.38378143 369.09817505]
[105.73869324 372.57562256]
[113.07324219 385.66015625]
[120.40779114 398.74465942]
[127.74234009 411.82916260]
[139.85441589 420.67776489]
[138.73934937 435.63626099]
[125.44919586 442.59124756]
[112.52328491 434.98068237]
[112.15731049 419.98504639]
[105.58771515 406.50024414]
[99.01811981 393.01541138]
[92.44852448 379.53057861]
[85.80343628 383.00805664]
[85.10383606 397.99172974]
[84.40422821 412.97543335]
[83.82115936 427.96408081]
[83.35466003 442.95681763]
[82.88816071 457.94958496]
[97.19210815 462.83715820]
[109.41893768 471.72512817]
[118.48146057 483.82315063]
[123.57384491 498.05548096]
[124.24327087 513.15655518]
[120.43022156 527.78369141]
[112.47373962 540.63616943]
[101.08132172 550.57116699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 193]
[12 192]
[13 191]
[15 190]
[16 189]
[17 188]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[47 154]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[58 94]
[59 93]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[101 112]
[102 111]
[103 110]
[104 109]
[115 144]
[116 143]
[117 142]
[118 141]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
