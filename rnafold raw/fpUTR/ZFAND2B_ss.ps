%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGCGCCGCGCGCGCCGAGGGAGGAGCGGGCGCCGGGGGCCGGCUGGCGCGGGGGCUCCGGUAACCCGGGCUGGGCGGGGGAGAGGAAGGGGCGGGGCAGGGAGCCCGCCAGAGUGCGGGGUCGCGGUGCGGACUUCGAGCACGAGCCCUAAAGACGCUCAGCACUCGUCGCUUCUCCUAGCAGACCCUGCCCGGCUUGGCG\
) } def
/len { sequence length } bind def

/coor [
[-312.01107788 446.76010132]
[-328.79666138 453.62225342]
[-347.39718628 453.96829224]
[-351.92300415 468.26922607]
[-356.44882202 482.57015991]
[-360.97463989 496.87112427]
[-365.50042725 511.17205811]
[-370.02624512 525.47302246]
[-369.04067993 542.39831543]
[-385.03167725 548.03070068]
[-394.87072754 534.22387695]
[-384.32717896 520.94720459]
[-379.80139160 506.64627075]
[-375.27557373 492.34530640]
[-370.74975586 478.04437256]
[-366.22393799 463.74340820]
[-361.69815063 449.44247437]
[-366.85733032 443.99887085]
[-377.68533325 454.37933350]
[-384.91668701 467.52117920]
[-399.65917969 464.75384521]
[-401.63247681 449.88421631]
[-388.12173462 443.36758423]
[-377.17568970 433.11166382]
[-382.33486938 427.66806030]
[-396.85791016 431.42068481]
[-411.38092041 435.17327881]
[-425.90393066 438.92590332]
[-440.42694092 442.67849731]
[-449.41152954 459.35336304]
[-467.42123413 464.08944702]
[-482.90597534 454.33175659]
[-497.30715942 458.52764893]
[-511.70837402 462.72357178]
[-526.10955811 466.91946411]
[-540.51074219 471.11535645]
[-554.91192627 475.31127930]
[-569.31311035 479.50717163]
[-575.44665527 493.89169312]
[-589.41467285 500.92221069]
[-604.62194824 497.27911377]
[-613.88812256 484.68258667]
[-612.83789062 469.08032227]
[-601.96722412 457.83920288]
[-586.40887451 456.26696777]
[-573.50903320 465.10598755]
[-559.10784912 460.91006470]
[-544.70666504 456.71417236]
[-530.30548096 452.51828003]
[-515.90423584 448.32235718]
[-501.50308228 444.12646484]
[-487.10186768 439.93057251]
[-483.90927124 428.97152710]
[-475.73675537 420.83184814]
[-464.53448486 417.61715698]
[-453.05557251 420.23794556]
[-444.17953491 428.15548706]
[-429.65652466 424.40286255]
[-415.13351440 420.65026855]
[-400.61050415 416.89764404]
[-386.08749390 413.14505005]
[-384.92535400 394.55484009]
[-377.30447388 378.00119019]
[-364.51419067 365.59194946]
[-348.47891235 358.79077148]
[-331.47238159 358.24737549]
[-315.79620361 363.74563599]
[-303.46832275 374.27087402]
[-290.87786865 366.11737061]
[-278.28738403 357.96386719]
[-265.69689941 349.81033325]
[-253.10641479 341.65682983]
[-240.51593018 333.50332642]
[-227.92544556 325.34979248]
[-215.33496094 317.19628906]
[-202.74449158 309.04278564]
[-190.15400696 300.88925171]
[-177.56352234 292.73574829]
[-164.97303772 284.58224487]
[-152.38255310 276.42871094]
[-139.79208374 268.27520752]
[-127.20159912 260.12170410]
[-114.80184937 251.68093872]
[-112.62011719 236.99163818]
[-100.36936188 227.97090149]
[-84.97666168 230.35891724]
[-72.77420044 221.63537598]
[-60.57174683 212.91184998]
[-48.36929321 204.18830872]
[-36.30194855 195.27880859]
[-24.37255669 186.18542480]
[-18.94119644 172.31640625]
[-3.27546978 170.10380554]
[8.65392303 161.01043701]
[20.58331680 151.91705322]
[32.51271057 142.82366943]
[44.44210434 133.73028564]
[56.37149429 124.63690186]
[68.23086548 115.45238495]
[80.01950836 106.17726135]
[71.54470062 82.07021332]
[93.23678589 54.14357376]
[90.97892761 38.48430634]
[102.77499390 29.39023209]
[108.16838837 15.39340210]
[105.91053009 -0.26586506]
[117.70659637 -9.35993958]
[123.09999084 -23.35676956]
[128.49339294 -37.35359955]
[133.88679504 -51.35042953]
[139.28018188 -65.34725952]
[132.64216614 -79.68992615]
[138.16851807 -94.49651337]
[152.58056641 -100.98252869]
[167.32789612 -95.29994202]
[173.66117859 -80.82012939]
[167.82298279 -66.13369751]
[153.27702332 -59.95386124]
[147.88362122 -45.95703125]
[142.49021912 -31.96020126]
[137.09681702 -17.96337128]
[131.70343018 -3.96654105]
[134.34706116 10.69157982]
[122.16522217 20.78680038]
[116.77182007 34.78363037]
[119.41545105 49.44174957]
[107.23361969 59.53697205]
[112.90857697 64.44052887]
[129.93345642 79.15119171]
[142.99977112 71.78429413]
[156.06610107 64.41740417]
[169.13243103 57.05050659]
[169.92121887 41.64332199]
[178.93309021 29.12175560]
[193.29240417 23.48139381]
[208.41714478 26.52205658]
[219.48107910 37.27347946]
[222.95372009 52.30492020]
[217.72698975 66.81990814]
[205.46868896 76.18675232]
[190.09042358 77.41653442]
[176.49932861 70.11683655]
[163.43299866 77.48372650]
[150.36666870 84.85062408]
[137.30033875 92.21751404]
[141.05294800 106.74053192]
[156.05252075 106.85546112]
[171.05207825 106.97039795]
[186.05163574 107.08533478]
[194.40522766 94.11533356]
[208.45429993 87.74137115]
[223.71582031 89.99736023]
[235.31990051 100.16342163]
[239.56373596 114.99559784]
[235.09310913 129.76100159]
[223.33459473 139.74803162]
[208.04029846 141.76988220]
[194.09056091 135.18138123]
[185.93669128 122.08489227]
[170.93713379 121.96995544]
[155.93757629 121.85502625]
[140.93801880 121.74008942]
[109.05590057 132.39093018]
[89.29462433 117.96590424]
[77.50598145 127.24102783]
[72.69364166 135.01072693]
[65.46487427 136.56629944]
[53.53548431 145.65968323]
[41.60609055 154.75306702]
[29.67669678 163.84643555]
[17.74730492 172.93981934]
[5.81791162 182.03320312]
[-0.46671921 196.55264282]
[-15.27917576 198.11482239]
[-27.20856857 207.20819092]
[-30.10952568 213.15779114]
[-34.86689377 216.27749634]
[-39.64575577 216.39076233]
[-51.84821320 225.11430359]
[-64.05066681 233.83782959]
[-76.25312042 242.56137085]
[-78.97395325 257.89874268]
[-91.47325134 266.57180786]
[-106.07831573 263.88339233]
[-108.23977661 268.64517212]
[-111.67022705 271.78485107]
[-115.53799438 273.09066772]
[-119.04808044 272.71218872]
[-131.63856506 280.86569214]
[-144.22904968 289.01919556]
[-156.81953430 297.17272949]
[-169.41000366 305.32623291]
[-182.00048828 313.47973633]
[-194.59097290 321.63327026]
[-207.18145752 329.78677368]
[-219.77194214 337.94027710]
[-232.36241150 346.09381104]
[-244.95289612 354.24731445]
[-257.54336548 362.40081787]
[-270.13385010 370.55435181]
[-282.72433472 378.70785522]
[-295.31481934 386.86135864]
[-290.56961060 402.40927124]
[-291.80087280 419.08920288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[68 202]
[69 201]
[70 200]
[71 199]
[72 198]
[73 197]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[79 191]
[80 190]
[81 189]
[82 188]
[83 184]
[86 181]
[87 180]
[88 179]
[89 178]
[90 175]
[91 174]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 165]
[100 164]
[102 127]
[104 125]
[105 124]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[129 145]
[130 144]
[131 143]
[132 142]
[146 162]
[147 161]
[148 160]
[149 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
