%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAGGGCUCGGCGGCAGGUGCCUCGUCGCGCACACUCGCGGGCCGCGGGGACCGGCUCGGGCGCGGGGCCGGCUGGGGCGGGGCGGGGCGGCGGCGCGCGUUCCCCGCCGGCCACACCGGCCGCCCUGCACUCGGCGAGGGGCGUGUGCGCGGGCCUGGCACCCGCGGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[64.86284637 610.10162354]
[49.83131790 614.41290283]
[35.56635666 608.00628662]
[28.80343246 593.90673828]
[32.73579407 578.77166748]
[45.50670242 569.74737549]
[46.57678986 554.78558350]
[47.64687729 539.82379150]
[48.71696472 524.86199951]
[49.78705215 509.90023804]
[50.85713959 494.93847656]
[51.92722702 479.97668457]
[49.25945663 473.05816650]
[53.15229034 464.75817871]
[54.48925781 449.81787109]
[55.82622910 434.87756348]
[53.82926941 431.93466187]
[53.17675781 427.86892700]
[54.38489532 423.33145142]
[57.65567398 419.18066406]
[59.79039764 404.33334351]
[61.92512131 389.48602295]
[64.05984497 374.63870239]
[66.19456482 359.79138184]
[54.06814575 348.74868774]
[50.86971664 332.49340820]
[58.05099487 317.37982178]
[72.96648407 309.43609619]
[74.83585358 294.55303955]
[76.70523071 279.66998291]
[78.57460022 264.78692627]
[80.44396973 249.90386963]
[82.31334686 235.02081299]
[84.18271637 220.13775635]
[86.05208588 205.25469971]
[87.92146301 190.37164307]
[89.79083252 175.48858643]
[90.99441528 160.53694153]
[91.52980042 145.54650879]
[92.06517792 130.55606079]
[92.60056305 115.56562042]
[83.61140442 103.55749512]
[69.07733917 99.84790039]
[54.54328156 96.13830566]
[40.00922394 92.42870331]
[25.47516441 88.71910858]
[10.94110394 85.00951385]
[1.81881106 85.91931915]
[-3.81809664 81.10182190]
[-19.53786087 85.77311707]
[-31.25550270 74.30015564]
[-26.91691780 58.48532867]
[-10.98526859 54.59757996]
[0.15032850 66.63628387]
[14.65070152 70.47544861]
[29.18476105 74.18505096]
[43.71882248 77.89464569]
[58.25288010 81.60424042]
[72.78694153 85.31384277]
[87.32099915 89.02343750]
[100.61239624 82.07083130]
[105.85436249 68.01658630]
[111.09632111 53.96234512]
[108.66952515 38.32836533]
[120.36671448 29.10746193]
[125.60868073 15.05321598]
[130.85064697 0.99896991]
[136.09260559 -13.05527592]
[141.33456421 -27.10952187]
[146.57652283 -41.16376877]
[151.81849670 -55.21801376]
[151.88902283 -64.38529205]
[157.28147888 -69.47493744]
[162.77346802 -83.43338013]
[168.26544189 -97.39182281]
[173.75743103 -111.35026550]
[179.24940491 -125.30870819]
[184.74139404 -139.26715088]
[189.85771179 -153.36761475]
[194.59471130 -167.60000610]
[199.33169556 -181.83239746]
[194.26242065 -193.71562195]
[198.52455139 -205.48574829]
[209.31297302 -211.00183105]
[214.30325317 -225.14739990]
[219.29351807 -239.29296875]
[224.28379822 -253.43853760]
[229.27406311 -267.58410645]
[234.26434326 -281.72967529]
[239.25460815 -295.87524414]
[239.16151428 -305.04232788]
[244.46226501 -310.22741699]
[249.70422363 -324.28164673]
[254.94618225 -338.33590698]
[260.18814087 -352.39013672]
[254.85838318 -367.52200317]
[263.48770142 -381.04660034]
[279.45642090 -382.58898926]
[290.51473999 -370.96603394]
[288.17962646 -355.09381104]
[274.24240112 -347.14819336]
[269.00042725 -333.09393311]
[263.75848389 -319.03970337]
[258.51651001 -304.98544312]
[253.40019226 -290.88497925]
[248.40991211 -276.73941040]
[243.41963196 -262.59384155]
[238.42936707 -248.44827271]
[233.43908691 -234.30268860]
[228.44882202 -220.15711975]
[223.45854187 -206.01155090]
[227.61360168 -188.97572327]
[213.56408691 -177.09539795]
[208.82708740 -162.86302185]
[204.09010315 -148.63063049]
[205.35675049 -145.30734253]
[205.05676270 -141.20054626]
[202.83750916 -137.06250000]
[198.69982910 -133.77516174]
[193.20785522 -119.81672668]
[187.71586609 -105.85828400]
[182.22389221 -91.89984131]
[176.73190308 -77.94139862]
[171.23992920 -63.98295212]
[165.87274170 -49.97605133]
[160.63076782 -35.92180634]
[155.38880920 -21.86755943]
[150.14685059 -7.81331348]
[144.90489197 6.24093246]
[139.66291809 20.29517937]
[134.42095947 34.34942245]
[137.22270203 48.97814941]
[125.15056610 59.20430756]
[119.90860748 73.25855255]
[114.66664124 87.31279755]
[118.19378662 103.85009766]
[107.59101105 116.10100555]
[107.05562592 131.09144592]
[106.52024078 146.08189392]
[105.98485565 161.07232666]
[118.67487335 153.07461548]
[132.89910889 157.83607483]
[138.21694946 171.86178589]
[130.72514343 184.85687256]
[115.92263794 187.28297424]
[104.67389679 177.35795593]
[102.80451965 192.24101257]
[100.93515015 207.12406921]
[99.06577301 222.00712585]
[97.19640350 236.89018250]
[95.32703400 251.77325439]
[93.45765686 266.65631104]
[91.58828735 281.53936768]
[89.71891022 296.42242432]
[87.84954071 311.30548096]
[98.59003448 319.97366333]
[103.59733582 332.71896362]
[101.66024017 346.16546631]
[93.39198303 356.80804443]
[81.04188538 361.92608643]
[78.90716553 376.77343750]
[76.77244568 391.62075806]
[74.63771820 406.46807861]
[72.50299835 421.31539917]
[70.76652527 436.21453857]
[69.42955780 451.15484619]
[68.09259033 466.09512329]
[66.88900757 481.04678345]
[65.81892395 496.00854492]
[64.74883270 510.97033691]
[63.67874908 525.93212891]
[62.60865784 540.89392090]
[61.53857040 555.85565186]
[60.46848297 570.81744385]
[71.82511139 581.56738281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[11 169]
[12 168]
[14 167]
[15 166]
[16 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[38 140]
[39 139]
[40 138]
[41 137]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[49 54]
[61 135]
[62 134]
[63 133]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 115]
[80 114]
[81 113]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[92 104]
[93 103]
[94 102]
[95 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
