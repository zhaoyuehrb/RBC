%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAUGUCUGUGAGCACCAGUCUGAGAUGCGCGGAUGCUUCAGCAUGCCUCCAGAAGCAGAGAAAGAACAAAAGCACUGGAACCGGUCUCCGGUUGCCUCUAGACUCAGAGAAGCUGGGUCUAAGUGUAGUGUUAGCUGCAGAUACCUGCUCAGCUGGCUAAGCCUUUAAC\
) } def
/len { sequence length } bind def

/coor [
[65.66024780 99.96261597]
[67.26976776 92.04145050]
[53.84946442 85.34103394]
[40.42916489 78.64061737]
[27.00886726 71.94020081]
[17.89717293 70.89878845]
[13.40736961 64.99433136]
[0.11095241 58.05133057]
[-13.18546486 51.10832596]
[-26.48188210 44.16532516]
[-39.77830124 37.22232056]
[-48.86957932 36.01562119]
[-53.25142670 30.03061295]
[-66.41957855 22.84731102]
[-79.58773041 15.66401100]
[-92.82055664 8.60056782]
[-108.36691284 13.83411789]
[-123.52605438 4.18584633]
[-138.14126587 0.81010604]
[-152.75646973 -2.56563425]
[-167.37168884 -5.94137478]
[-181.98689270 -9.31711483]
[-196.63215637 -12.56001568]
[-211.30625916 -15.66980934]
[-224.67031860 1.75312519]
[-244.89517212 10.12445736]
[-266.52621460 7.26140118]
[-283.76708984 -5.99899960]
[-292.03271484 -26.04294395]
[-307.01724243 -26.72369194]
[-322.00180054 -27.40443802]
[-335.45825195 -14.10846329]
[-354.04333496 -14.82080555]
[-366.02496338 -28.62694740]
[-381.02432251 -28.76314163]
[-396.02371216 -28.89933586]
[-409.89358521 -21.28765488]
[-422.55007935 -29.14019585]
[-437.54943848 -29.27639008]
[-446.67520142 -16.72647095]
[-461.44509888 -11.96938610]
[-476.17980957 -16.83432961]
[-485.21356201 -29.45063210]
[-485.07266235 -44.96706772]
[-475.81130981 -57.41725159]
[-460.99069214 -62.01383209]
[-446.30960083 -56.98933029]
[-437.41326904 -44.27577209]
[-422.41387939 -44.13957596]
[-409.61688232 -51.76100159]
[-395.88751221 -43.89871979]
[-380.88815308 -43.76252365]
[-365.88876343 -43.62633133]
[-359.64709473 -53.22633362]
[-349.43310547 -58.66301346]
[-337.74371338 -58.47566605]
[-327.50085449 -52.59490585]
[-321.32104492 -42.38898468]
[-306.33651733 -41.70823669]
[-291.35195923 -41.02748871]
[-288.54101562 -49.35012436]
[-284.04800415 -56.91030884]
[-278.06762695 -63.37213135]
[-270.86083984 -68.44747925]
[-262.74343872 -71.90884399]
[-254.07209778 -73.59957886]
[-245.22888184 -73.44091797]
[-236.60427856 -71.43568420]
[-228.57995605 -67.66831970]
[-221.51199341 -62.30136490]
[-215.71495056 -55.56842422]
[-211.44792175 -47.76400375]
[-208.90296936 -39.23065567]
[-208.19645691 -30.34390831]
[-193.52235413 -27.23411369]
[-186.30110168 -28.92953682]
[-178.61116028 -23.93232536]
[-163.99594116 -20.55658531]
[-149.38073730 -17.18084526]
[-134.76551819 -13.80510426]
[-120.15031433 -10.42936420]
[-107.99906921 -19.22409058]
[-106.63897705 -34.16230392]
[-105.27888489 -49.10051346]
[-103.91879272 -64.03872681]
[-102.55870056 -78.97693634]
[-101.19860840 -93.91514587]
[-105.78386688 -110.23727417]
[-91.36894226 -119.16175079]
[-78.80278778 -107.78070068]
[-86.26039886 -92.55505371]
[-87.62049103 -77.61684418]
[-88.98058319 -62.67863464]
[-90.34067535 -47.74042130]
[-91.70076752 -32.80221176]
[-93.06085968 -17.86400032]
[-85.87755585 -4.69584942]
[-78.46642303 -4.38598204]
[-72.40442657 2.49586034]
[-59.23627853 9.67916107]
[-46.06812668 16.86246109]
[-32.83529663 23.92590523]
[-19.53887939 30.86890793]
[-6.24246264 37.81190872]
[7.05395508 44.75491333]
[20.35037231 51.69791412]
[33.70928192 58.51990509]
[47.12958145 65.22032166]
[60.54988098 71.92073059]
[73.97017670 78.62114716]
[91.79773712 65.81053162]
[114.67961121 66.43437958]
[133.24644470 81.36895752]
[139.21595764 105.40430450]
[153.89006042 108.51409149]
[168.56414795 111.62388611]
[183.23825073 114.73368073]
[197.91235352 117.84347534]
[212.58645630 120.95326996]
[227.26055908 124.06306458]
[241.93464661 127.17285919]
[260.76690674 120.04786682]
[274.61618042 133.51202393]
[289.39349365 136.08692932]
[302.23153687 127.26521301]
[317.18118286 130.08705139]
[325.51223755 142.38052368]
[340.28958130 144.95542908]
[355.06692505 147.53033447]
[369.84423828 150.10525513]
[384.62158203 152.68016052]
[399.39892578 155.25506592]
[414.60327148 149.11013794]
[427.35879517 159.41688538]
[424.54370117 175.57260132]
[409.05392456 180.95768738]
[396.82403564 170.03240967]
[382.04669189 167.45750427]
[367.26934814 164.88259888]
[352.49200439 162.30767822]
[337.71466064 159.73277283]
[322.93731689 157.15785217]
[310.93930054 165.90904236]
[295.91629028 163.50822449]
[286.81860352 150.86427307]
[272.04125977 148.28935242]
[264.20816040 154.91876221]
[253.79867554 156.14897156]
[244.24296570 151.33029175]
[238.82485962 141.84695435]
[224.15075684 138.73716736]
[209.47665405 135.62736511]
[194.80256653 132.51757812]
[180.12846375 129.40777588]
[165.45436096 126.29798889]
[150.78025818 123.18819427]
[136.10617065 120.07839966]
[126.55740356 131.64651489]
[132.39189148 145.46528625]
[138.22637939 159.28407288]
[149.95747375 171.52409363]
[141.44328308 186.18508911]
[124.99827576 182.06222534]
[124.40760040 165.11856079]
[118.57311249 151.29977417]
[112.73861694 137.48100281]
[103.50611877 138.77253723]
[94.38415527 137.86065674]
[85.88250732 134.86958313]
[78.45899963 130.03767395]
[72.49494171 123.70008087]
[68.27565765 116.26634979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[13 101]
[14 100]
[15 99]
[16 97]
[18 81]
[19 80]
[20 79]
[21 78]
[22 77]
[23 75]
[24 74]
[29 60]
[30 59]
[31 58]
[34 53]
[35 52]
[36 51]
[38 49]
[39 48]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[114 157]
[115 156]
[116 155]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[123 146]
[124 145]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
