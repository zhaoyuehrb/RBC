%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGACAAGGCUGUGGGCUGGUCAGAAGCUGGUUACAAUUCCUCCCGCCCCAGUACUUGCUGGCAGGGAUUAAGAGCAGAUAAAAGUGUGCUCACACACUGUAGACACGGCUACCAUGCCAUCCACAGUGUUGCCAUCCACAGUGUUGCCAUCACUCCUGCCCACAGCAGGAGCUGGCUGGAGC\
) } def
/len { sequence length } bind def

/coor [
[182.55018616 362.91821289]
[177.81288147 348.68591309]
[181.40446472 334.12225342]
[192.21586609 323.72448730]
[206.90849304 320.70343018]
[220.94651794 325.99298096]
[213.40979004 313.02389526]
[205.87304688 300.05477905]
[192.78851318 292.93829346]
[192.54435730 277.11895752]
[185.00761414 264.14987183]
[177.47088623 251.18077087]
[169.93414307 238.21166992]
[162.39741516 225.24256897]
[154.86067200 212.27345276]
[147.32394409 199.30435181]
[139.78720093 186.33525085]
[133.69406128 182.12213135]
[132.23474121 173.08131409]
[124.91931915 159.98609924]
[117.60389709 146.89089966]
[110.28847504 133.79568481]
[96.28787231 135.13148499]
[82.87562561 130.89913940]
[72.17749786 121.76945496]
[58.67086792 128.29409790]
[45.16423798 134.81874084]
[40.18124390 146.73168945]
[28.77873230 151.88265991]
[17.30615807 148.00279236]
[3.69068384 154.29714966]
[-5.31243658 168.00393677]
[-21.66662025 166.79039001]
[-28.54808617 151.90490723]
[-18.87777138 138.66040039]
[-2.60366654 140.68167114]
[11.01180840 134.38732910]
[20.32308960 119.52375793]
[38.63959503 121.31211090]
[52.14622498 114.78746796]
[65.65285492 108.26282501]
[59.74135971 102.31675720]
[55.00857925 94.52406311]
[40.82350159 89.64723206]
[26.63842010 84.77040100]
[12.45333862 79.89356995]
[1.09809470 87.16281128]
[-12.17647648 86.56612396]
[-22.52581787 78.54589844]
[-26.30241394 66.21265411]
[-40.40263748 61.09564972]
[-54.50286102 55.97864914]
[-68.60308075 50.86164474]
[-82.70330811 45.74464417]
[-98.74736786 49.13877869]
[-109.50605774 36.76208115]
[-103.91175842 21.34663963]
[-87.71940613 18.75053596]
[-77.58630371 31.64442062]
[-63.48608017 36.76142120]
[-49.38585663 41.87842560]
[-35.28563309 46.99542618]
[-21.18541145 52.11243057]
[-6.28052044 44.34476471]
[9.95372105 49.85840225]
[17.33016968 65.70848846]
[31.51525116 70.58531952]
[45.70033264 75.46215057]
[59.88541412 80.33898163]
[65.25582886 75.10365295]
[54.78533554 64.36266327]
[65.52648163 53.89234161]
[75.99665070 64.63299561]
[81.36706543 59.39766693]
[76.85310364 45.09297562]
[72.33914185 30.78828812]
[67.82518005 16.48359680]
[63.31121826 2.17890716]
[51.77967834 -8.65318012]
[55.32829666 -23.11888313]
[50.81433487 -37.42357254]
[38.36212921 -48.09477997]
[41.64311600 -64.16236115]
[57.28209686 -69.09736633]
[69.19103241 -57.82308960]
[65.11902618 -41.93753433]
[69.63298798 -27.63284492]
[80.84165955 -17.82392502]
[77.61591339 -2.33505368]
[82.12986755 11.96963596]
[86.64382935 26.27432632]
[91.15779114 40.57901764]
[95.67175293 54.88370514]
[104.30369568 58.22981644]
[111.46088409 63.07872772]
[116.91487885 68.98568726]
[126.72903442 57.64186478]
[136.54319763 46.29804230]
[146.35734558 34.95421982]
[156.17150879 23.61039543]
[165.98567200 12.26657295]
[175.79981995 0.92275083]
[178.97758484 -14.57603550]
[193.15612793 -19.13875771]
[202.97029114 -30.48258018]
[201.55883789 -41.29662704]
[206.24726868 -50.89907837]
[215.26382446 -56.21319199]
[225.49642944 -55.68592453]
[235.69012451 -66.68994904]
[245.88381958 -77.69396973]
[245.02973938 -93.47516632]
[255.64683533 -105.18212128]
[271.43618774 -105.86931610]
[283.03021240 -95.12904358]
[283.55044556 -79.33331299]
[272.68820190 -67.85346222]
[256.88784790 -67.50027466]
[246.69415283 -56.49625397]
[236.50045776 -45.49222946]
[233.62977600 -26.38373375]
[214.31410217 -20.66842079]
[204.49995422 -9.32459927]
[202.02415466 5.36280060]
[187.14364624 10.73690891]
[177.32948303 22.08073044]
[167.51533508 33.42455292]
[157.70117188 44.76837540]
[147.88700867 56.11219788]
[138.07286072 67.45602417]
[128.25869751 78.79984283]
[135.14384460 103.59323120]
[123.38368225 126.48025513]
[130.69911194 139.57546997]
[138.01454163 152.67068481]
[145.32995605 165.76589966]
[152.75630188 178.79852295]
[160.29304504 191.76762390]
[167.82977295 204.73672485]
[175.36651611 217.70582581]
[182.90324402 230.67492676]
[190.43998718 243.64402771]
[197.97673035 256.61312866]
[205.51345825 269.58224487]
[219.13706970 277.62634277]
[218.84214783 292.51803589]
[226.37889099 305.48715210]
[233.91561890 318.45623779]
[242.42045593 330.81213379]
[251.84376526 342.48266602]
[261.26705933 354.15319824]
[270.78912354 365.74331665]
[280.40924072 377.25213623]
[290.02932739 388.76098633]
[299.74682617 400.18771362]
[309.56097412 411.53155518]
[319.37515259 422.87536621]
[329.18930054 434.21917725]
[339.00344849 445.56301880]
[348.81762695 456.90682983]
[358.63177490 468.25067139]
[374.46499634 470.83697510]
[382.18878174 484.89837646]
[375.87814331 499.64813232]
[360.37402344 503.77148438]
[347.56988525 494.10537720]
[347.28796387 478.06481934]
[337.47378540 466.72100830]
[327.65963745 455.37716675]
[317.84548950 444.03335571]
[308.03131104 432.68951416]
[298.21716309 421.34570312]
[288.40301514 410.00189209]
[281.63342285 406.99362183]
[278.52050781 398.38110352]
[268.90039062 386.87225342]
[259.28027344 375.36343384]
[252.56274414 372.24063110]
[249.59652710 363.57650757]
[240.17321777 351.90597534]
[230.74992371 340.23541260]
[230.67903137 355.23526001]
[222.61190796 367.88125610]
[209.03968811 374.26834106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 148]
[7 147]
[8 146]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[19 136]
[20 135]
[21 134]
[22 133]
[25 41]
[26 40]
[27 39]
[30 37]
[31 36]
[43 69]
[44 68]
[45 67]
[46 66]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[80 87]
[81 86]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[104 123]
[105 122]
[109 120]
[110 119]
[111 118]
[149 181]
[150 180]
[151 179]
[152 177]
[153 176]
[154 175]
[155 173]
[156 172]
[157 171]
[158 170]
[159 169]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
