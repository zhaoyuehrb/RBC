%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAACACGGCUUCUCCUGGUACGGGCUGGUUACGCCCUCCAGCUGCGCCCCCUACACGACGACAGACGCGUCCCCCAGCCCUUCUCCUGUCCUACCACUUGUGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[85.60617828 350.08224487]
[71.36082458 355.82379150]
[56.15546417 353.65753174]
[44.08026505 344.16622925]
[38.38339615 329.90292358]
[40.59728622 314.70443726]
[50.12640762 302.65905762]
[64.40747833 297.00692749]
[58.54259491 283.31558228]
[68.14894104 270.74465942]
[70.26456451 255.89459229]
[72.38018036 241.04454041]
[66.51529694 227.35321045]
[76.12165070 214.78227234]
[65.31618500 204.56562805]
[62.56613922 189.77030945]
[69.13218689 176.03202820]
[82.68540192 168.70968628]
[84.80101776 153.85963440]
[86.91664124 139.00958252]
[89.03226471 124.15952301]
[91.14788055 109.30947113]
[87.28005981 100.12185669]
[91.14788055 91.04071045]
[89.03226471 76.19065094]
[86.91664124 61.34059906]
[84.80101776 46.49054337]
[82.68540192 31.64048576]
[80.56977844 16.79043007]
[78.45416260 1.94037485]
[64.30667877 -8.22861958]
[61.86585999 -25.14055634]
[72.14859009 -38.36454010]
[69.61357880 -53.14878082]
[67.07856750 -67.93302155]
[64.54355621 -82.71725464]
[55.61412430 -85.37578583]
[48.11923981 -90.83580780]
[42.90085602 -98.44764709]
[40.53302765 -107.32206726]
[41.25886154 -116.43411255]
[44.96590042 -124.74146271]
[51.20235825 -131.30369568]
[59.23199081 -135.38867188]
[58.80750656 -150.38267517]
[58.38302231 -165.37666321]
[57.74640656 -180.36314392]
[56.89778137 -195.33912659]
[48.39212799 -208.67945862]
[55.39698792 -221.82408142]
[42.27513885 -230.10639954]
[36.55884933 -244.53219604]
[40.44614792 -259.55444336]
[52.44228745 -269.39682007]
[67.93450928 -270.27471924]
[80.96573639 -261.85052490]
[86.52519989 -247.36357117]
[82.47516632 -232.38435364]
[70.37296295 -222.67269897]
[78.81791687 -210.40354919]
[71.87375641 -196.18774414]
[72.72238159 -181.21177673]
[76.29498291 -174.61546326]
[73.37701416 -165.80114746]
[73.80149841 -150.80715942]
[74.22598267 -135.81315613]
[91.05017090 -123.03778839]
[93.36504364 -101.76459503]
[79.32778931 -85.25226593]
[81.86280823 -70.46803284]
[84.39781952 -55.68379211]
[86.93283081 -40.89955139]
[98.45647430 -34.94733047]
[104.49715424 -23.24934769]
[102.62388611 -10.02024746]
[93.30421448 -0.17524508]
[95.41983795 14.67481041]
[97.53545380 29.52486610]
[99.65107727 44.37492371]
[101.76669312 59.22497559]
[103.88231659 74.07503510]
[105.99794006 88.92508698]
[114.28281403 76.42065430]
[127.29385376 68.95655060]
[142.27030945 68.11655426]
[156.03442383 74.07888794]
[165.66563416 85.57844543]
[169.12034607 100.17518616]
[165.66554260 114.77191162]
[156.03425598 126.27140808]
[142.27012634 132.23365784]
[127.29366302 131.39356995]
[114.28266907 123.92938995]
[105.99794006 111.42508698]
[103.88231659 126.27514648]
[101.76669312 141.12519836]
[99.65107727 155.97525024]
[97.53545380 170.82531738]
[108.50459290 181.64123535]
[110.97281647 196.66659546]
[104.20040131 210.10528564]
[90.97170258 216.89788818]
[96.68526459 231.65139771]
[87.23023987 243.16015625]
[85.11461639 258.01022339]
[82.99900055 272.86026001]
[88.71256256 287.61376953]
[79.25753021 299.12252808]
[91.39199829 308.53796387]
[97.17816925 322.76525879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 108]
[10 106]
[11 105]
[12 104]
[14 102]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[33 72]
[34 71]
[35 70]
[36 69]
[44 66]
[45 65]
[46 64]
[47 62]
[48 61]
[50 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
