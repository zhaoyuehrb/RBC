%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCAGCUGCCCGGCGCCGGCUUCCGGGUGGUGCGAGCGAGAUGGGGCGGAGGGCCGGUCUUGCAGAGUAGCUGCGGUGAGUGGGCGUGUGCGCCGAGCGGUCUGGCCCAAGGGCUGGGGGCCGGCCGAGGGUCUUCGGGAGCAGGCCGCAGGGCGCGGAGAGAUCCUGGGAUCGCCGUCCGCCGCUGCUACCCGGC\
) } def
/len { sequence length } bind def

/coor [
[112.35386658 124.44535828]
[105.16565704 126.89813232]
[97.58023834 127.28256226]
[90.18087769 125.56909180]
[81.17457581 137.56436157]
[72.16827393 149.55963135]
[63.16197205 161.55490112]
[60.50836182 170.30496216]
[53.91879272 173.66636658]
[44.72518539 185.51869202]
[35.53157806 197.37101746]
[26.33797455 209.22334290]
[17.14436722 221.07566833]
[7.95076227 232.92799377]
[-1.24284351 244.78031921]
[-10.43644905 256.63262939]
[-5.19678020 271.14297485]
[-8.65603447 286.17749023]
[-19.71037674 296.93878174]
[-34.83240509 299.99291992]
[-49.19673920 294.36535645]
[-58.21976852 281.85180664]
[-59.02227783 266.44534302]
[-51.34819031 253.06205750]
[-37.64627838 245.97254944]
[-22.28877449 247.43904114]
[-13.09516907 235.58671570]
[-3.90156293 223.73439026]
[5.29204273 211.88206482]
[14.48564911 200.02973938]
[23.67925453 188.17741394]
[32.87285995 176.32508850]
[42.06646729 164.47276306]
[51.16670227 152.54859924]
[60.17300415 140.55332947]
[69.17930603 128.55805969]
[78.18560791 116.56278992]
[75.03697205 111.27124023]
[73.14995575 105.41004944]
[58.19619751 104.23316193]
[43.24243546 103.05627441]
[28.28867722 101.87938690]
[13.33491707 100.70249939]
[-1.61884332 99.52561188]
[-16.57260323 98.34873199]
[-30.93729591 104.97943115]
[-43.01827240 96.26741028]
[-57.97203064 95.09052277]
[-72.33672333 101.72122192]
[-84.41770172 93.00920105]
[-98.97832489 100.55374908]
[-112.64471436 91.48942566]
[-111.35804749 75.14083099]
[-96.44194794 68.32599640]
[-83.24081421 78.05544281]
[-69.94571686 71.34056854]
[-56.79514694 80.13676453]
[-41.84138489 81.31365204]
[-28.54628563 74.59877014]
[-15.39571667 83.39496613]
[-0.44195685 84.57185364]
[14.51180363 85.74874115]
[29.46556282 86.92562866]
[44.41932297 88.10251617]
[59.37308502 89.27940369]
[74.32684326 90.45628357]
[93.39703369 73.41815948]
[118.22326660 79.55236053]
[125.72928619 65.62503815]
[140.62112427 65.33824158]
[153.28604126 57.30084229]
[165.95095825 49.26343918]
[178.61589050 41.22603989]
[191.28080750 33.18863678]
[198.78681946 19.26131439]
[213.67866516 18.97451973]
[226.34358215 10.93711853]
[239.00849915 2.89971685]
[251.67341614 -5.13768530]
[264.33834839 -13.17508698]
[277.00326538 -21.21248817]
[276.84362793 -35.00034332]
[283.46713257 -46.97052383]
[295.04898071 -54.04623795]
[308.50628662 -54.46942520]
[320.31832886 -48.23643494]
[333.10791016 -56.07391357]
[345.89752197 -63.91139221]
[358.68713379 -71.74887085]
[358.22061157 -92.73697662]
[371.57028198 -110.01124573]
[393.62823486 -115.24250793]
[414.82669067 -105.08084106]
[425.76119995 -115.34905243]
[436.69573975 -125.61725616]
[447.63027954 -135.88546753]
[458.56478882 -146.15367126]
[459.22265625 -161.71661377]
[470.45809937 -171.97425842]
[485.29092407 -171.25117493]
[496.22546387 -181.51937866]
[507.16000366 -191.78759766]
[518.09454346 -202.05580139]
[529.02905273 -212.32400513]
[539.96356201 -222.59220886]
[550.89813232 -232.86041260]
[561.83264160 -243.12863159]
[566.73956299 -260.87268066]
[583.96258545 -264.21963501]
[594.73449707 -274.65832520]
[605.50634766 -285.09701538]
[616.19592285 -295.61999512]
[626.80255127 -306.22659302]
[637.40911865 -316.83319092]
[648.01574707 -327.43978882]
[652.30285645 -342.66909790]
[666.77349854 -346.19754028]
[677.38006592 -356.80413818]
[677.54876709 -372.38006592]
[688.45648193 -382.98556519]
[703.30468750 -382.72875977]
[713.91131592 -393.33535767]
[715.34918213 -409.31384277]
[728.81701660 -418.03149414]
[743.98339844 -412.80087280]
[749.21405029 -397.63446045]
[740.49639893 -384.16662598]
[724.51788330 -382.72875977]
[713.91131592 -372.12216187]
[714.16809082 -357.27392578]
[703.56262207 -346.36624146]
[687.98669434 -346.19754028]
[677.38006592 -335.59094238]
[673.85162354 -321.12030029]
[658.62237549 -316.83319092]
[648.01574707 -306.22659302]
[637.40911865 -295.61999512]
[626.80255127 -285.01339722]
[624.29351807 -278.05450439]
[615.94506836 -274.32513428]
[605.17315674 -263.88644409]
[594.40124512 -253.44775391]
[593.89599609 -241.35614014]
[584.99932861 -232.57112122]
[572.10083008 -232.19409180]
[561.16632080 -221.92588806]
[550.23181152 -211.65768433]
[539.29724121 -201.38948059]
[528.36273193 -191.12127686]
[517.42822266 -180.85305786]
[506.49365234 -170.58485413]
[495.55914307 -160.31665039]
[495.34942627 -145.46769714]
[484.40652466 -134.89849854]
[468.83300781 -135.21914673]
[457.89846802 -124.95093536]
[446.96395874 -114.68273163]
[436.02941895 -104.41452026]
[425.09487915 -94.14631653]
[427.32498169 -79.31301880]
[440.79537964 -72.71392822]
[454.26580811 -66.11484528]
[470.58126831 -67.76946259]
[479.95114136 -54.31073380]
[472.73651123 -39.58384705]
[456.35916138 -38.73855972]
[447.66671753 -52.64442825]
[434.19628906 -59.24351501]
[420.72589111 -65.84260559]
[414.88363647 -58.09124756]
[407.31481934 -52.33220291]
[398.65014648 -48.91277695]
[389.57754517 -47.99100876]
[380.78778076 -49.53102875]
[372.92196655 -53.31341934]
[366.52459717 -58.95926666]
[353.73501587 -51.12178802]
[340.94540405 -43.28430939]
[328.15579224 -35.44683075]
[327.39477539 -19.05280876]
[316.90951538 -6.21212578]
[300.67645264 -2.10751915]
[285.04064941 -8.54757023]
[272.37573242 -0.51016819]
[259.71081543 7.52723360]
[247.04589844 15.56463528]
[234.38098145 23.60203743]
[221.71606445 31.63943863]
[215.11593628 44.99187088]
[199.31820679 45.85355377]
[186.65328979 53.89095688]
[173.98837280 61.92835999]
[161.32345581 69.96575928]
[148.65852356 78.00316620]
[142.05839539 91.35559845]
[126.26066589 92.21727753]
[127.38831329 99.72826385]
[126.40991974 107.26013947]
[123.40072632 114.23374939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[7 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[47 58]
[48 57]
[50 55]
[68 196]
[70 194]
[71 193]
[72 192]
[73 191]
[74 190]
[76 188]
[77 187]
[78 186]
[79 185]
[80 184]
[81 183]
[86 179]
[87 178]
[88 177]
[89 176]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[100 152]
[101 151]
[102 150]
[103 149]
[104 148]
[105 147]
[106 146]
[107 145]
[109 142]
[110 141]
[111 140]
[112 138]
[113 137]
[114 136]
[115 135]
[117 133]
[118 132]
[121 129]
[122 128]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
