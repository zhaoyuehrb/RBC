%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGUGAGGGCCUGCGCUGGAGCCGGCUUGACAGGGUCUGAGGGGGAGUGGAGAACUGGGCGAGGAGGUUCCCGUGGGUGAGCGCGUACGGGAUGGCUGGCUCGCAGGACGGCCGAAGGUGGUGGUUGGUGGGAGCAGCCAGCGACGAGCCCGUAGACACUCGUACGCGUGCGGGCUGACGUGCGCGCUAC\
) } def
/len { sequence length } bind def

/coor [
[76.29820251 109.98592377]
[68.87854004 108.89110565]
[64.65345001 124.13771820]
[50.19729233 127.72501373]
[45.97220230 142.97163391]
[31.51604271 146.55892944]
[27.29095459 161.80554199]
[12.83479595 165.39283752]
[2.27144480 176.04252625]
[-8.29190636 186.69219971]
[-12.51699448 201.93881226]
[-26.97315407 205.52610779]
[-37.53650665 216.17578125]
[-48.09985733 226.82545471]
[-58.66320801 237.47514343]
[-69.13953400 248.21043396]
[-79.35064697 259.19830322]
[-89.38155365 270.35092163]
[-99.41246033 281.50354004]
[-109.44337463 292.65615845]
[-112.31307220 308.80227661]
[-127.82096100 314.13494873]
[-140.01385498 303.16839600]
[-136.34875488 287.18405151]
[-120.59599304 282.62524414]
[-110.56507874 271.47262573]
[-100.53417206 260.32000732]
[-90.50326538 249.16738892]
[-89.85865784 244.42129517]
[-86.21601868 240.03431702]
[-79.95973969 237.82182312]
[-77.59146118 230.80882263]
[-69.31288147 226.91178894]
[-58.74953461 216.26211548]
[-48.18618011 205.61242676]
[-37.62282944 194.96275330]
[-34.15330505 180.47787476]
[-18.94158363 176.12884521]
[-8.37823200 165.47917175]
[2.18511939 154.82949829]
[5.65464592 140.34461975]
[20.86636734 135.99557495]
[24.33589363 121.51070404]
[39.54761505 117.16166687]
[43.01713943 102.67678833]
[58.22886276 98.32775116]
[95.79048157 87.21893311]
[99.88851929 72.78958893]
[103.98655701 58.36024094]
[108.08459473 43.93088913]
[112.18263245 29.50154305]
[102.88140869 19.31749916]
[99.85475159 5.97241545]
[103.78967285 -7.02051306]
[113.55480194 -16.29485703]
[126.52295685 -19.50311661]
[130.85531616 -33.86384964]
[130.33857727 -42.99920654]
[135.37683105 -48.42202377]
[139.94236755 -62.71033478]
[144.50790405 -76.99864960]
[149.07344055 -91.28696442]
[142.08436584 -105.20783234]
[146.91801453 -119.63317108]
[160.23249817 -126.21039581]
[153.24342346 -140.13127136]
[158.07707214 -154.55661011]
[171.39157104 -161.13383484]
[161.67874146 -171.38136292]
[159.66336060 -186.72177124]
[167.65977478 -201.52812195]
[161.05740356 -214.99691772]
[154.45501709 -228.46572876]
[147.85264587 -241.93452454]
[141.25027466 -255.40332031]
[134.64788818 -268.87213135]
[128.04551697 -282.34094238]
[115.02378082 -291.32675171]
[116.36923981 -306.16046143]
[109.76686096 -319.62927246]
[95.85887146 -328.31832886]
[96.70016479 -344.69586182]
[111.42528534 -351.91409302]
[124.88629913 -342.54748535]
[123.23566437 -326.23162842]
[129.83804321 -312.76281738]
[142.38754272 -304.74038696]
[141.51431274 -288.94329834]
[148.11669922 -275.47451782]
[154.71907043 -262.00570679]
[161.32145691 -248.53689575]
[167.92382812 -235.06809998]
[174.52619934 -221.59928894]
[181.12858582 -208.13049316]
[196.00157166 -206.18269348]
[205.84962463 -217.49710083]
[215.69767761 -228.81150818]
[225.54573059 -240.12593079]
[235.39376831 -251.44033813]
[245.24182129 -262.75476074]
[248.52255249 -271.29632568]
[255.34342957 -274.17150879]
[265.37432861 -285.32409668]
[275.40524292 -296.47671509]
[278.88104248 -311.91140747]
[293.14486694 -316.20007324]
[303.17578125 -327.35269165]
[306.56777954 -345.44464111]
[323.44320679 -350.23626709]
[333.29125977 -361.55068970]
[343.13931274 -372.86511230]
[346.36343384 -388.35430908]
[360.55557251 -392.87460327]
[370.40359497 -404.18899536]
[380.25164795 -415.50341797]
[378.90930176 -431.25061035]
[389.15875244 -443.28073120]
[404.91925049 -444.45651245]
[416.84033203 -434.08041382]
[417.84945679 -418.30838013]
[407.34790039 -406.49768066]
[391.56607056 -405.65536499]
[381.71801758 -394.34097290]
[371.86996460 -383.02655029]
[369.35025024 -368.34661865]
[354.45373535 -363.01705933]
[344.60568237 -351.70263672]
[334.75762939 -340.38821411]
[335.27847290 -328.29336548]
[327.15328979 -318.78506470]
[314.32839966 -317.32180786]
[304.29748535 -306.16918945]
[301.53915405 -291.53219604]
[286.55786133 -286.44583130]
[276.52694702 -275.29321289]
[266.49603271 -264.14059448]
[256.55624390 -252.90669250]
[246.70819092 -241.59228516]
[236.86013794 -230.27787781]
[227.01208496 -218.96345520]
[217.16403198 -207.64904785]
[207.31599426 -196.33464050]
[207.83091736 -167.92143250]
[185.67987061 -156.56829834]
[192.71360779 -143.48922729]
[188.28704834 -128.93380737]
[174.52081299 -121.64486694]
[181.55453491 -108.56578827]
[177.12797546 -94.01036835]
[163.36175537 -86.72142792]
[158.79621887 -72.43311310]
[154.23068237 -58.14480209]
[149.66514587 -43.85648727]
[145.21604919 -29.53149033]
[140.88368225 -15.17075729]
[151.22329712 -2.42940426]
[151.94371033 14.12986469]
[142.56358337 27.99621010]
[126.61197662 33.59957886]
[122.51393890 48.02892685]
[118.41590118 62.45827484]
[114.31786346 76.88762665]
[110.21983337 91.31697083]
[111.80394745 106.23309326]
[118.84122467 119.47985077]
[125.87850952 132.72660828]
[133.02337646 145.91566467]
[140.27532959 159.04611206]
[147.52729797 172.17657471]
[154.77926636 185.30703735]
[162.03123474 198.43750000]
[169.28320312 211.56796265]
[176.53517151 224.69841003]
[183.78713989 237.82887268]
[199.04002380 241.96711731]
[206.82667542 255.72006226]
[202.52740479 270.92834473]
[188.69290161 278.56915283]
[173.53092957 274.10934448]
[166.03680420 260.19482422]
[170.65667725 245.08084106]
[163.40470886 231.95037842]
[156.15274048 218.81993103]
[148.90077209 205.68946838]
[141.64880371 192.55900574]
[134.39685059 179.42854309]
[127.14487457 166.29808044]
[119.89290619 153.16763306]
[113.89794159 148.82582092]
[112.63175201 139.76390076]
[105.59446716 126.51713562]
[98.55718231 113.27037048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 46]
[4 44]
[6 42]
[8 40]
[9 39]
[10 38]
[12 36]
[13 35]
[14 34]
[15 33]
[16 31]
[17 28]
[18 27]
[19 26]
[20 25]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[56 155]
[57 154]
[59 153]
[60 152]
[61 151]
[62 150]
[65 147]
[68 144]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[79 86]
[80 85]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[102 136]
[103 135]
[104 134]
[106 132]
[107 131]
[109 128]
[110 127]
[111 126]
[113 124]
[114 123]
[115 122]
[164 192]
[165 191]
[166 190]
[167 188]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
