%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUCCGGCCGCUGGCUGUCGAAGCCGGAGUCCCACCUGUGUCCCCACAGCCCUGUCACGAAUCCCGGUCGGGUUCUGGGAGGCACAGCCUCGGGGUUGCGGGCCGGGUGCGGCUCGGCGGUGGAGGACUCACUUCCUGCUCCAUCCCCGGCUGGGCCCUGGGGCGGAACUGAUGACGCUUGAUA\
) } def
/len { sequence length } bind def

/coor [
[74.99343872 193.22862244]
[82.18670654 179.94580078]
[92.83177948 169.22856140]
[106.06570435 161.94572449]
[102.81569672 147.30203247]
[99.56568146 132.65835571]
[96.31567383 118.01467133]
[81.75852966 114.39671326]
[72.03118896 125.81507111]
[68.97174072 141.33764648]
[54.82842255 146.00839233]
[51.76897430 161.53096008]
[37.62565613 166.20170593]
[27.89831543 177.62005615]
[18.17097473 189.03842163]
[8.44363213 200.45677185]
[-1.28370893 211.87512207]
[-11.01105022 223.29348755]
[-11.17061806 239.33573914]
[-23.90065193 249.09922791]
[-39.43576050 245.09423828]
[-45.85873795 230.39305115]
[-38.24242401 216.27316284]
[-22.42940521 213.56613159]
[-12.70206356 202.14778137]
[-2.97472239 190.72943115]
[6.75261879 179.31108093]
[16.47995949 167.89271545]
[26.20730209 156.47436523]
[28.57098579 141.76850891]
[43.41006851 136.28105164]
[45.77375412 121.57518768]
[60.61283493 116.08773041]
[70.34017944 104.66937256]
[69.21049500 97.25493622]
[54.38159180 99.51405334]
[52.12271881 84.68511200]
[66.95113373 82.42607117]
[65.82144928 75.01164246]
[53.13497162 67.00830841]
[40.44849396 59.00498199]
[27.76201820 51.00165176]
[15.07554054 42.99832153]
[2.38906312 34.99499130]
[-10.36419392 27.09850883]
[-23.18333054 19.30943108]
[-36.00246811 11.52035236]
[-48.82160568 3.73127460]
[-64.63311768 3.17760062]
[-71.49220276 -10.04368114]
[-84.31133270 -17.83275986]
[-97.13047028 -25.62183762]
[-109.94960785 -33.41091537]
[-122.76874542 -41.19999313]
[-131.74824524 -42.98810577]
[-135.73625183 -49.22913361]
[-151.53623962 -50.04835129]
[-158.17224121 -63.38299179]
[-167.12043762 -65.32170105]
[-171.00303650 -71.62884521]
[-183.55328369 -79.84416962]
[-199.48841858 -77.98649597]
[-210.77424622 -89.38866425]
[-208.75325012 -105.30391693]
[-194.97575378 -113.52342224]
[-180.01068115 -107.74188232]
[-175.33795166 -92.39440918]
[-162.78771973 -84.17908478]
[-150.16891479 -76.06947327]
[-135.27635193 -75.82270813]
[-127.73292542 -61.91561127]
[-114.97966766 -54.01913071]
[-102.16053009 -46.23005295]
[-89.34139252 -38.44097519]
[-76.52225494 -30.65189552]
[-63.70312119 -22.86281776]
[-48.80851746 -22.86627007]
[-41.03252411 -9.08786201]
[-28.21338844 -1.29878402]
[-15.39425278 6.49029398]
[-2.57511592 14.27937222]
[4.78923559 15.06742764]
[10.39239311 22.30851364]
[23.07887077 30.31184387]
[35.76534653 38.31517410]
[48.45182419 46.31850433]
[61.13830185 54.32183075]
[73.82478333 62.32516098]
[111.41420746 87.69273376]
[125.05868530 81.46150970]
[138.70317078 75.23028564]
[152.34764099 68.99906158]
[165.99212646 62.76783371]
[179.63661194 56.53660583]
[193.28108215 50.30538177]
[206.92556763 44.07415771]
[220.57003784 37.84293365]
[234.21452332 31.61170578]
[238.37521362 26.43025208]
[243.72723389 24.44223976]
[248.42364502 25.40894890]
[258.18627930 12.95898914]
[272.91043091 15.20589066]
[286.75653076 9.43655014]
[300.60266113 3.66720891]
[314.44876099 -2.10213208]
[328.29486084 -7.87147284]
[342.14096069 -13.64081383]
[355.98709106 -19.41015434]
[365.74972534 -31.86011505]
[380.47387695 -29.61321259]
[390.23651123 -42.06317139]
[404.96066284 -39.81627274]
[418.80676270 -45.58561325]
[421.99789429 -49.76901627]
[426.07147217 -52.06639099]
[430.15563965 -52.45856094]
[433.49871826 -51.27730560]
[447.61788940 -56.34177399]
[461.73709106 -61.40624237]
[475.85626221 -66.47071075]
[489.97543335 -71.53517914]
[497.01440430 -77.39023590]
[504.37457275 -76.56395721]
[518.57684326 -81.39051819]
[532.77911377 -86.21707916]
[546.98132324 -91.04364777]
[553.74072266 -105.32951355]
[568.64990234 -110.57279968]
[582.86352539 -103.66274261]
[587.94891357 -88.69896698]
[580.88891602 -74.55920410]
[565.87225342 -69.63233948]
[551.80792236 -76.84137726]
[537.60565186 -72.01481628]
[523.40338135 -67.18825531]
[509.20111084 -62.36169052]
[495.03991699 -57.41600037]
[480.92071533 -52.35153198]
[466.80154419 -47.28706360]
[452.68237305 -42.22259903]
[438.56320190 -37.15813065]
[424.57611084 -31.73950386]
[410.73001099 -25.97016335]
[401.95773315 -13.93286514]
[386.24322510 -15.76710510]
[377.47094727 -3.72980714]
[361.75640869 -5.56404686]
[347.91030884 0.20529397]
[334.06420898 5.97463512]
[320.21810913 11.74397564]
[306.37197876 17.51331711]
[292.52587891 23.28265762]
[278.67977905 29.05199814]
[269.90750122 41.08929825]
[254.19297791 39.25505829]
[240.44575500 45.25618744]
[226.80126953 51.48741150]
[213.15678406 57.71863556]
[199.51231384 63.94986343]
[185.86782837 70.18108368]
[172.22335815 76.41231537]
[158.57887268 82.64353943]
[144.93438721 88.87476349]
[131.28991699 95.10598755]
[117.64543152 101.33721161]
[110.95935822 114.76466370]
[114.20936584 129.40834045]
[117.45938110 144.05203247]
[120.70938873 158.69570923]
[135.78173828 159.69627380]
[149.96118164 164.90396118]
[162.09825134 173.89663696]
[171.20906067 185.94526672]
[176.55503845 200.07316589]
[177.70280457 215.13500977]
[174.55931091 229.90982056]
[167.37939453 243.19987488]
[156.74510193 253.92779541]
[143.51849365 261.22393799]
[128.77180481 264.49679565]
[113.70046997 263.48110962]
[99.52626038 258.25915527]
[87.39822388 249.25431824]
[78.29952240 237.19651794]
[72.96774292 223.06327820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 34]
[9 33]
[11 31]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 81]
[46 80]
[47 79]
[48 78]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[56 71]
[58 69]
[60 68]
[61 67]
[89 166]
[90 165]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[101 156]
[103 154]
[104 153]
[105 152]
[106 151]
[107 150]
[108 149]
[109 148]
[111 146]
[113 144]
[114 143]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[124 137]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
