%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUGGUAGCUCUUGGGCUGAAGCUGGGCUUUGGUGCUCAAGAGAGGCUUGGAGGAGACCACAGUUCUUUCUCCAUGUGUGAGGAAUUAAAGGCAACUGUGCAGAAACACACGCAGAGCCUGAAGCCCAGCAAGGAGGAUCUGAACAGGCUUAAUCAGGCCAUCCAGUGGCUGACGGUGGAGGUGGGCAGUGCUGAGAGUCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[124.54006958 193.81178284]
[121.83030701 182.79089355]
[123.56485748 171.51100159]
[129.52638245 161.70516968]
[121.60736084 148.96589661]
[113.68833160 136.22662354]
[105.76931000 123.48734283]
[101.18541718 124.15647125]
[96.55803680 123.93936920]
[92.05693054 122.84399414]
[87.84723663 120.91053772]
[76.65991974 130.90274048]
[65.47260284 140.89492798]
[54.28528976 150.88713074]
[43.09797668 160.87931824]
[31.91066170 170.87152100]
[20.72334671 180.86372375]
[9.53603077 190.85591125]
[-1.65128374 200.84811401]
[-7.08500957 220.25935364]
[-26.16650200 223.38168335]
[-37.04841232 233.70564270]
[-47.93032074 244.02958679]
[-58.81222916 254.35354614]
[-69.69413757 264.67749023]
[-77.02333069 279.96539307]
[-93.74267578 277.15472412]
[-95.67023468 260.31069946]
[-80.01808929 253.79559326]
[-69.13618469 243.47163391]
[-58.25427628 233.14768982]
[-47.37236786 222.82373047]
[-36.49045944 212.49977112]
[-37.14143753 202.30035400]
[-31.96140671 193.23637390]
[-22.45158005 188.42132568]
[-11.64348030 189.66079712]
[-0.45616490 179.66859436]
[10.73114967 169.67640686]
[21.91846466 159.68420410]
[33.10578156 149.69201660]
[44.29309464 139.69981384]
[55.48041153 129.70761108]
[66.66772461 119.71542358]
[77.85504150 109.72322845]
[77.92517090 90.11859131]
[92.50000000 77.00672913]
[92.50000000 62.00673294]
[92.50000000 47.00673294]
[92.50000000 32.00673294]
[92.50000000 17.00673294]
[92.50000000 2.00673223]
[80.11502075 -7.15397358]
[75.55226898 -21.68100739]
[80.36157990 -35.94054794]
[92.50000000 -44.53105545]
[92.50000000 -59.53105545]
[92.50000000 -74.53105927]
[89.37020111 -83.11425018]
[92.61443329 -89.75609589]
[92.83989716 -104.75440216]
[84.82536316 -112.11093903]
[82.23672485 -122.45117950]
[85.69462585 -132.30162048]
[93.82913208 -138.48884583]
[94.50532532 -153.47360229]
[95.18151093 -168.45834351]
[95.85770416 -183.44309998]
[85.77668762 -200.89860535]
[96.88379669 -216.72529602]
[97.10926819 -231.72360229]
[97.33473206 -246.72190857]
[97.56019592 -261.72021484]
[97.78565979 -276.71850586]
[98.01112366 -291.71682739]
[90.48212433 -305.63174438]
[98.40985870 -318.24127197]
[98.63532257 -333.23959351]
[98.86078644 -348.23788452]
[95.86035156 -356.86715698]
[99.20404816 -363.45947266]
[99.65493011 -378.45269775]
[96.78453827 -387.12609863]
[100.22695160 -393.66741943]
[100.90313721 -408.65219116]
[89.40850067 -414.54263306]
[81.02631378 -424.30776978]
[76.97526550 -436.47363281]
[77.82375336 -449.22128296]
[83.41045380 -460.65893555]
[92.87347412 -469.10260010]
[104.78318024 -473.32397461]
[105.90948486 -488.28161621]
[107.03578949 -503.23925781]
[108.16209412 -518.19689941]
[100.35897064 -528.46826172]
[101.60594940 -540.90423584]
[110.69171143 -548.89166260]
[112.04271698 -563.83068848]
[113.39372253 -578.76977539]
[114.74472809 -593.70880127]
[116.09573364 -608.64782715]
[103.49422455 -617.42834473]
[96.98579407 -631.34002686]
[98.32116699 -646.64080811]
[107.14114380 -659.21472168]
[121.07319641 -665.67950439]
[136.36965942 -664.29620361]
[148.91587830 -655.43682861]
[155.33697510 -641.48455811]
[153.90570068 -626.19250488]
[145.00708008 -613.67413330]
[131.03477478 -607.29681396]
[129.68376160 -592.35778809]
[128.33276367 -577.41876221]
[126.98175049 -562.47973633]
[125.63074493 -547.54064941]
[133.84858704 -532.03546143]
[123.11975098 -517.07061768]
[121.99344635 -502.11297607]
[120.86714172 -487.15530396]
[119.74083710 -472.19766235]
[134.30520630 -463.01757812]
[142.25566101 -447.64688110]
[141.32229614 -430.27770996]
[131.67211914 -415.69900513]
[115.88789368 -407.97598267]
[115.21170044 -392.99124146]
[114.64814758 -378.00183105]
[114.19727325 -363.00860596]
[113.85909271 -348.01242065]
[113.63362885 -333.01409912]
[113.40816498 -318.01580811]
[120.95328522 -305.17367554]
[113.00942993 -291.49136353]
[112.78396606 -276.49304199]
[112.55850220 -261.49475098]
[112.33303833 -246.49644470]
[112.10756683 -231.49813843]
[111.88210297 -216.49983215]
[119.63011932 -209.83499146]
[122.48986053 -199.79455566]
[119.28456116 -189.62855530]
[110.84245300 -182.76690674]
[110.16626740 -167.78215027]
[109.49007416 -152.79740906]
[108.81388092 -137.81265259]
[118.94990540 -121.34712982]
[107.83820343 -104.52893829]
[107.61273193 -89.53063202]
[107.50000000 -74.53105927]
[107.50000000 -59.53105545]
[107.50000000 -44.53105545]
[119.63842010 -35.94054794]
[124.44773102 -21.68100739]
[119.88497925 -7.15397358]
[107.50000000 2.00673223]
[107.50000000 17.00673294]
[107.50000000 32.00673294]
[107.50000000 47.00673294]
[107.50000000 62.00673294]
[107.50000000 77.00672913]
[119.90795135 86.26631927]
[124.15800476 101.15370178]
[118.50858307 115.56832123]
[126.42760468 128.30760193]
[134.34663391 141.04687500]
[142.26565552 153.78614807]
[164.06234741 155.94804382]
[178.09353638 172.45057678]
[176.75219727 193.82727051]
[188.23480225 203.47866821]
[199.71742249 213.13008118]
[215.25994873 216.08651733]
[220.02436829 230.19854736]
[231.50698853 239.84996033]
[246.87695312 236.96936035]
[260.47723389 244.68731689]
[265.88613892 259.35964966]
[260.54980469 274.05856323]
[246.98783875 281.84362793]
[231.60380554 279.03900146]
[221.66159058 266.96896362]
[221.85557556 251.33256531]
[210.37297058 241.68116760]
[195.65176392 239.41505432]
[190.06600952 224.61268616]
[178.58340454 214.96128845]
[167.10078430 205.30987549]
[166.65699768 205.61067200]
[166.20761108 205.90304565]
[170.64945984 220.23028564]
[175.09129333 234.55754089]
[179.53314209 248.88479614]
[183.97497559 263.21203613]
[188.41682434 277.53927612]
[192.85867310 291.86654663]
[203.32415771 305.20480347]
[193.40426636 318.95370483]
[177.44657898 313.22756958]
[178.53141785 296.30838013]
[174.08956909 281.98114014]
[169.64773560 267.65386963]
[165.20588684 253.32662964]
[160.76405334 238.99938965]
[156.32220459 224.67213440]
[151.88035583 210.34489441]
[140.84436035 208.69180298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[7 165]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[56 153]
[57 152]
[58 151]
[60 150]
[61 149]
[65 147]
[66 146]
[67 145]
[68 144]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[77 133]
[78 132]
[79 131]
[81 130]
[82 129]
[84 128]
[85 127]
[92 122]
[93 121]
[94 120]
[95 119]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[171 189]
[172 188]
[173 187]
[175 185]
[176 184]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
