%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGACUCGCCUCUUUUCUCUUAGCGACAGAUGCGUCCUGGCAACAGUCGGCAGAGUUGCUGCGGUUUGUGCCCUUGCGAUUUCUUUUUCUGAGAGAGGAGAGUCAAACUCCCACCUCCAGCUCUCGAAGGAGCUUUUCCUGAGGGCACUGCAAAGAGGCUCCUUUUCUUUCAGAUCAGCAGUAUCAGCCCAAGUCAGAACC\
) } def
/len { sequence length } bind def

/coor [
[193.71363831 289.08132935]
[200.85914612 275.55767822]
[192.96266174 262.80441284]
[185.06617737 250.05114746]
[177.16969299 237.29789734]
[169.27320862 224.54464722]
[165.93737793 223.38635254]
[162.99836731 220.55162048]
[161.23944092 216.24533081]
[161.32232666 211.01498413]
[154.02326965 197.91064453]
[146.72419739 184.80630493]
[139.42512512 171.70196533]
[132.12606812 158.59764099]
[124.82699585 145.49330139]
[117.52792358 132.38896179]
[110.22885895 119.28462982]
[105.66881561 133.57469177]
[90.83412170 135.79545593]
[82.28931427 123.46717834]
[89.57662964 110.35516357]
[78.08049774 121.22482300]
[63.85039520 116.82556915]
[49.30344009 120.48427582]
[34.75648880 124.14298248]
[20.20953369 127.80168915]
[5.66257906 131.46038818]
[-8.88437462 135.11909485]
[-23.43132973 138.77780151]
[-28.97002220 151.05899048]
[-40.40470886 157.80778503]
[-53.44517517 156.75236511]
[-63.34659576 148.50161743]
[-77.94816589 151.93586731]
[-92.54973602 155.37013245]
[-98.63156891 169.52348328]
[-111.72809601 177.29101562]
[-126.70996857 175.87417603]
[-137.85139465 166.02497864]
[-152.45295715 169.45924377]
[-167.05453491 172.89349365]
[-178.62493896 184.51493835]
[-194.40298462 180.04446411]
[-198.15757751 164.08090210]
[-186.02630615 153.04621887]
[-170.48878479 158.29193115]
[-155.88722229 154.85766602]
[-141.28564453 151.42341614]
[-135.70242310 137.64060974]
[-122.92273712 129.69432068]
[-107.73692322 130.80990601]
[-95.98399353 140.76855469]
[-81.38242340 137.33430481]
[-66.78085327 133.90003967]
[-58.54915619 119.23738861]
[-41.93325043 114.97854614]
[-27.09003448 124.23085022]
[-12.54308033 120.57214355]
[2.00387335 116.91343689]
[16.55082703 113.25473022]
[31.09778214 109.59602356]
[45.64473724 105.93731689]
[60.19168854 102.27861786]
[70.64732361 91.67064667]
[85.91792297 95.80820465]
[96.44254303 85.12024689]
[99.87680054 70.51867676]
[93.76169586 59.15811157]
[96.92655182 47.06444550]
[107.14608765 40.58584213]
[110.80479431 26.03888893]
[114.46350098 11.49193478]
[118.12220764 -3.05501890]
[121.78091431 -17.60197258]
[125.43962097 -32.14892578]
[129.09832764 -46.69588089]
[132.75703430 -61.24283600]
[136.41574097 -75.78978729]
[132.27818298 -91.06038666]
[142.88613892 -101.51602173]
[146.54484558 -116.06298065]
[135.52441406 -128.89091492]
[134.33132935 -145.59390259]
[143.23809814 -159.57766724]
[158.56883240 -165.43957520]
[162.00309753 -180.04113770]
[165.43736267 -194.64271545]
[168.87161255 -209.24429321]
[172.30587769 -223.84585571]
[175.74012756 -238.44743347]
[179.17439270 -253.04899597]
[178.09278870 -262.12490845]
[182.77558899 -267.84814453]
[186.43429565 -282.39508057]
[190.09300232 -296.94204712]
[193.75170898 -311.48901367]
[197.41041565 -326.03594971]
[191.95994568 -343.62228394]
[204.65251160 -355.73767090]
[208.08677673 -370.33923340]
[211.52102661 -384.94082642]
[214.95529175 -399.54238892]
[213.87368774 -408.61831665]
[218.55650330 -414.34152222]
[222.21519470 -428.88848877]
[211.58848572 -440.07223511]
[208.71757507 -455.23013306]
[214.51855469 -469.52529907]
[227.14035034 -478.39624023]
[242.55541992 -479.01223755]
[255.84483337 -471.17675781]
[262.76800537 -457.39007568]
[261.11578369 -442.05142212]
[251.41539001 -430.05535889]
[236.76216125 -425.22976685]
[233.10345459 -410.68283081]
[229.55686951 -396.10812378]
[226.12260437 -381.50656128]
[222.68833923 -366.90496826]
[219.25408936 -352.30340576]
[225.35427856 -341.85357666]
[222.60861206 -329.65792847]
[211.95736694 -322.37725830]
[208.29866028 -307.83029175]
[204.63995361 -293.28335571]
[200.98124695 -278.73638916]
[197.32254028 -264.18942261]
[193.77595520 -249.61474609]
[190.34170532 -235.01316833]
[186.90744019 -220.41160583]
[183.47319031 -205.81002808]
[180.03892517 -191.20845032]
[176.60467529 -176.60688782]
[173.17041016 -162.00531006]
[182.79028320 -152.74342346]
[186.60668945 -139.83363342]
[183.51980591 -126.61904907]
[174.23204041 -116.57704163]
[161.09181213 -112.40427399]
[157.43310547 -97.85731506]
[161.83235168 -83.62721252]
[150.96269226 -72.13108063]
[147.30398560 -57.58412933]
[143.64527893 -43.03717422]
[139.98657227 -28.49022102]
[136.32786560 -13.94326687]
[132.66915894 0.60368699]
[129.01045227 15.15064144]
[125.35175323 29.69759560]
[121.69304657 44.24454880]
[127.39983368 60.83720398]
[114.47837067 73.95293427]
[111.04411316 88.55450439]
[123.33319855 111.98555756]
[130.63226318 125.08989716]
[137.93133545 138.19422913]
[145.23039246 151.29856873]
[152.52946472 164.40290833]
[159.82853699 177.50723267]
[167.12759399 190.61157227]
[174.42666626 203.71591187]
[182.02647400 216.64816284]
[189.92295837 229.40141296]
[197.81942749 242.15467834]
[205.71591187 254.90792847]
[213.61239624 267.66119385]
[228.90328979 267.29281616]
[242.23751831 274.57946777]
[250.08200073 287.47637939]
[250.41555786 302.46786499]
[243.24874878 315.52551270]
[251.14521790 328.27877808]
[259.04171753 341.03204346]
[272.88494873 348.69201660]
[273.00662231 363.58612061]
[280.90307617 376.33938599]
[288.79956055 389.09265137]
[307.38989258 392.71893311]
[317.26184082 408.50823975]
[312.54547119 426.19223022]
[320.83096313 438.69628906]
[336.38827515 440.27862549]
[347.25161743 451.52679443]
[348.29168701 467.12976074]
[339.01733398 479.72027588]
[323.80767822 483.35345459]
[309.84420776 476.31384277]
[303.72009277 461.92535400]
[308.32690430 446.98175049]
[300.04144287 434.47772217]
[288.62777710 434.68545532]
[278.42675781 429.29974365]
[272.02893066 419.55731201]
[271.12179565 407.81704712]
[276.04632568 396.98913574]
[268.14984131 384.23587036]
[260.25335693 371.48260498]
[246.97491455 364.73483276]
[246.28845215 348.92852783]
[238.39196777 336.17526245]
[230.49548340 323.42199707]
[215.61222839 324.01718140]
[202.34107971 317.03631592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[4 164]
[5 163]
[6 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[21 65]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[33 54]
[34 53]
[35 52]
[39 48]
[40 47]
[41 46]
[66 153]
[67 152]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[80 140]
[81 139]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[99 120]
[100 119]
[101 118]
[102 117]
[104 116]
[105 115]
[171 201]
[172 200]
[173 199]
[175 197]
[176 196]
[177 195]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
