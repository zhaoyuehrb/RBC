%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCCCGGCACGCCCAGGGCGCGGGAGCGGCCGGGUCAGCCCGCAGACCUGAGUCCGGCCCGCAGCCUCGGGGCCCCGCGGGCGCAGCGGGGCGGGAGGCGGGGCGGCCCGGCCGUGGGCGGAGCGGCGGCCGCGGCCGUGAGCCUGCCCCCAACUCGCCCUCAGCCGGCUGGCCGGCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[96.03498077 264.73397827]
[96.03498077 249.73397827]
[96.03498077 234.73397827]
[96.03498077 219.73397827]
[95.90830994 204.73451233]
[95.52832031 189.73931885]
[95.02170563 174.74787903]
[94.51509094 159.75643921]
[94.00848389 144.76499939]
[93.50186920 129.77355957]
[83.92059326 125.88711548]
[76.19027710 119.02071381]
[71.20079803 109.96475983]
[56.25426102 111.23002625]
[41.30771637 112.49528503]
[26.36117744 113.76055145]
[11.50937939 124.62948608]
[-4.07442236 116.58053589]
[-18.99746323 118.09806061]
[-33.92050171 119.61558533]
[-48.84354019 121.13311005]
[-63.75323486 122.77660370]
[-78.64851379 124.54595947]
[-93.54379272 126.31530762]
[-108.43907928 128.08465576]
[-123.33435822 129.85400391]
[-131.92543030 139.49377441]
[-144.38320923 140.65022278]
[-153.96641541 133.24615479]
[-168.88946533 134.76367188]
[-183.81250000 136.28120422]
[-198.72219849 137.92469788]
[-213.60200500 139.81977844]
[-228.46527100 141.84045410]
[-243.32855225 143.86112976]
[-258.19183350 145.88179016]
[-273.05508423 147.90246582]
[-287.91836548 149.92314148]
[-295.14593506 163.65419006]
[-309.07891846 170.48437500]
[-324.35980225 167.78735352]
[-335.11279297 156.60017395]
[-337.20312500 141.22453308]
[-329.82702637 127.57269287]
[-315.82077026 120.89405060]
[-300.57003784 123.75669098]
[-289.93902588 135.05986023]
[-275.07577515 133.03919983]
[-260.21249390 131.01852417]
[-245.34921265 128.99784851]
[-230.48594666 126.97718048]
[-215.62268066 124.95650482]
[-209.40472412 120.93122864]
[-200.49154663 123.02941895]
[-194.20649719 119.10973358]
[-185.33003235 121.35816193]
[-170.40698242 119.84063721]
[-155.48394775 118.32311249]
[-141.83938599 107.30192566]
[-125.10370636 114.95872498]
[-110.20842743 113.18937683]
[-95.31314850 111.42002869]
[-80.41786957 109.65067291]
[-65.52258301 107.88132477]
[-59.23753738 103.96163940]
[-50.36106873 106.21006775]
[-35.43802643 104.69254303]
[-20.51498795 103.17501831]
[-5.59194708 101.65749359]
[2.30466318 92.47589874]
[14.74022770 91.10093689]
[25.09591103 98.81401062]
[40.04245377 97.54874420]
[54.98899460 96.28347778]
[69.93553162 95.01821136]
[77.16843414 79.81560516]
[91.36947632 70.77322388]
[108.20453644 70.65079498]
[122.53559113 79.48567963]
[135.77186584 72.42869568]
[144.30926514 59.10865402]
[159.18017578 59.94844818]
[172.41644287 52.89146423]
[185.65272522 45.83448410]
[186.12077332 35.13777161]
[190.96043396 25.67780495]
[199.23408508 19.13961601]
[209.39942932 16.65620041]
[219.59689331 18.61259651]
[227.98963928 24.58789825]
[241.56636047 18.21037865]
[255.14308167 11.83286095]
[268.71978760 5.45534277]
[282.29650879 -0.92217547]
[295.87322998 -7.29969358]
[309.44995117 -13.67721176]
[323.02667236 -20.05472946]
[328.47140503 -34.64899445]
[342.33096313 -40.92330170]
[356.21081543 -35.64263535]
[362.66506958 -42.13800430]
[370.07113647 -42.01104736]
[383.75363159 -48.15835190]
[397.43612671 -54.30565643]
[411.11862183 -60.45296097]
[424.80111694 -66.60026550]
[438.43118286 -72.86289978]
[452.00790405 -79.24041748]
[465.58462524 -85.61793518]
[479.10699463 -92.10988617]
[492.51782227 -98.82929230]
[505.87139893 -105.66171265]
[519.22497559 -112.49413300]
[532.57855225 -119.32655334]
[545.93212891 -126.15897369]
[559.28570557 -132.99139404]
[572.63928223 -139.82382202]
[585.99285889 -146.65625000]
[599.34643555 -153.48866272]
[608.10754395 -166.66261292]
[622.96215820 -165.57177734]
[636.31573486 -172.40420532]
[640.93505859 -187.51835632]
[654.92773438 -194.86547852]
[669.99218750 -190.08663940]
[677.19097900 -176.01705933]
[672.25311279 -161.00395203]
[658.10821533 -153.95433044]
[643.14819336 -159.05062866]
[629.79461670 -152.21820068]
[621.98858643 -139.53295898]
[606.17883301 -140.13508606]
[592.82525635 -133.30267334]
[579.47167969 -126.47024536]
[566.11810303 -119.63782501]
[552.76452637 -112.80539703]
[539.41094971 -105.97297668]
[526.05737305 -99.14055634]
[512.70379639 -92.30813599]
[499.35021973 -85.47571564]
[494.81774902 -79.61718750]
[485.71292114 -78.64281464]
[481.08212280 -72.86167908]
[471.96215820 -72.04122162]
[458.38543701 -65.66370392]
[444.80871582 -59.28618240]
[440.08093262 -53.58408356]
[430.94842529 -52.91777039]
[417.26593018 -46.77046585]
[403.58343506 -40.62316132]
[389.90093994 -34.47585678]
[376.21844482 -28.32855225]
[362.58834839 -22.06591606]
[357.79083252 -8.01175785]
[344.11294556 -1.35064161]
[329.40417480 -6.47801256]
[315.82745361 -0.10049432]
[302.25076294 6.27702379]
[288.67404175 12.65454197]
[275.09732056 19.03206062]
[261.52059937 25.40957832]
[247.94387817 31.78709602]
[234.36715698 38.16461563]
[229.14691162 56.91417313]
[211.56565857 65.94951630]
[192.70970154 59.07075882]
[179.47343445 66.12773895]
[166.23715210 73.18472290]
[158.64649963 86.00000000]
[142.82884216 85.66497040]
[129.59257507 92.72195435]
[129.38105774 108.08972931]
[121.69644165 121.39987946]
[108.49330902 129.26693726]
[108.99992371 144.25837708]
[109.50653839 159.24983215]
[110.01314545 174.24127197]
[110.51976013 189.23271179]
[113.94345856 197.72538757]
[110.90616608 204.48117065]
[114.18594360 213.03045654]
[111.03498077 219.73397827]
[111.03498077 234.73397827]
[111.03498077 249.73397827]
[111.03498077 264.73397827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 180]
[6 178]
[7 177]
[8 176]
[9 175]
[10 174]
[13 75]
[14 74]
[15 73]
[16 72]
[18 69]
[19 68]
[20 67]
[21 66]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[29 58]
[30 57]
[31 56]
[32 54]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[79 171]
[80 170]
[82 168]
[83 167]
[84 166]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[100 153]
[102 152]
[103 151]
[104 150]
[105 149]
[106 148]
[107 146]
[108 145]
[109 144]
[110 142]
[111 140]
[112 139]
[113 138]
[114 137]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
