%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCGCAGGCGUAGUGCUCCUGCUUCCUGGCCGAGGGCGGGCGAGCGGAGCCUGCUUUCGCAGCGAUCGCGAGCGUGUGGCGAUUGCUUCUGUCUGUUAUUUAGAUAUGGAAGCUGAGGGGAUGCACAGAGGCAGCCAGAACCUAGGUCAGGGUCUCGCUCGGUGCUGACCGCCCCCGGGGUCGAGUAGGCG\
) } def
/len { sequence length } bind def

/coor [
[379.03176880 375.16122437]
[383.03341675 358.76727295]
[371.84298706 348.77853394]
[360.65258789 338.78982544]
[353.55883789 336.67800903]
[349.36352539 328.54757690]
[338.33633423 318.37896729]
[326.23208618 318.55270386]
[316.96087646 310.15887451]
[315.86526489 297.29794312]
[305.00418091 286.95208740]
[290.45211792 283.77615356]
[285.79638672 268.65548706]
[268.54708862 265.45932007]
[263.48226929 247.76225281]
[252.45507812 237.59361267]
[241.42788696 227.42498779]
[230.40068054 217.25636292]
[219.29151917 207.17736816]
[208.10110474 197.18862915]
[196.91069031 187.19990540]
[185.72029114 177.21118164]
[174.21229553 167.59005737]
[162.39877319 158.34661865]
[150.58526611 149.10319519]
[138.77175903 139.85977173]
[126.95824432 130.61634827]
[115.14472961 121.37291718]
[96.71913910 132.61241150]
[71.30331421 126.93799591]
[54.08995056 101.70230865]
[39.12141037 102.67325592]
[30.74637032 106.35608673]
[23.90298271 103.53673553]
[8.92068005 104.26516724]
[-6.06162214 104.99359894]
[-21.04392433 105.72203064]
[-36.02622604 106.45046234]
[-51.00852966 107.17890167]
[-65.99082947 107.90733337]
[-80.97313690 108.63576508]
[-95.95543671 109.36419678]
[-110.93773651 110.09263611]
[-120.25107574 122.65431213]
[-135.47193909 126.24031830]
[-149.41349792 119.15745544]
[-155.49296570 104.75003052]
[-150.83982849 89.82078552]
[-137.65113831 81.41886139]
[-122.15419006 83.51138306]
[-111.66617584 95.11032867]
[-96.68386841 94.38189697]
[-81.70156860 93.65346527]
[-66.71926880 92.92503357]
[-51.73696136 92.19659424]
[-36.75466156 91.46816254]
[-21.77235794 90.73973083]
[-6.79005527 90.01129913]
[8.19224644 89.28285980]
[23.17454910 88.55442810]
[38.15046310 87.70471191]
[53.11900330 86.73376465]
[59.13858032 72.99459839]
[49.70507050 61.33231354]
[40.27155685 49.67003250]
[30.83804512 38.00774765]
[21.40453339 26.34546471]
[11.97102165 14.68318176]
[2.53750968 3.02089858]
[-6.89600229 -8.64138508]
[-16.32951355 -20.30366707]
[-31.02409363 -26.16710854]
[-33.01264572 -40.92837143]
[-48.75162888 -44.03707123]
[-56.00602341 -58.34627151]
[-49.21088028 -72.87918854]
[-33.57884979 -76.48740387]
[-21.10149002 -66.40300751]
[-21.35036278 -50.36188507]
[-7.33053112 -45.33260727]
[-4.66723108 -29.73718071]
[4.76628113 -18.07489586]
[14.19979286 -6.41261339]
[23.63330460 5.24967003]
[33.06681824 16.91195297]
[42.50032806 28.57423592]
[51.93384171 40.23651886]
[61.36735153 51.89880371]
[70.80086517 63.56108475]
[77.98449707 61.40575409]
[92.35175323 57.09508514]
[99.53538513 54.93975449]
[100.99053192 40.01050186]
[102.44567871 25.08125114]
[103.90082550 10.15199947]
[105.35597229 -4.77725172]
[106.81112671 -19.70650291]
[97.77254486 -32.96107483]
[102.63742828 -48.24873352]
[117.67385101 -53.84209442]
[131.34715271 -45.45040894]
[133.16835022 -29.51106262]
[121.74037170 -18.25135612]
[120.28522491 -3.32210398]
[118.83007812 11.60714722]
[117.37493134 26.53639793]
[115.91978455 41.46564865]
[114.46463776 56.39490128]
[132.65623474 84.68716431]
[124.38816071 109.55940247]
[136.20167542 118.80283356]
[148.01518250 128.04626465]
[159.82868958 137.28968811]
[171.64219666 146.53311157]
[183.45571899 155.77653503]
[187.80645752 156.23127747]
[191.41741943 157.88737488]
[194.00047302 160.36219788]
[195.42234802 163.21862793]
[195.70901489 166.02076721]
[206.89942932 176.00949097]
[218.08984375 185.99821472]
[229.28024292 195.98695374]
[237.77931213 199.37376404]
[240.56930542 206.22917175]
[251.59651184 216.39779663]
[262.62371826 226.56642151]
[273.65090942 236.73504639]
[286.55575562 236.99586487]
[295.53210449 245.70429993]
[296.14224243 257.79440308]
[311.47116089 261.71032715]
[315.35003662 276.09100342]
[326.21112061 286.43685913]
[344.19894409 290.34552002]
[348.50494385 307.35177612]
[359.53213501 317.52038574]
[370.64129639 327.59939575]
[381.83172607 337.58813477]
[393.02212524 347.57684326]
[410.06433105 341.28009033]
[428.72302246 347.06491089]
[440.81091309 364.11776733]
[455.76177979 365.33099365]
[470.71264648 366.54418945]
[483.81912231 357.29217529]
[499.18353271 361.90887451]
[505.01965332 376.85272217]
[496.85049438 390.66012573]
[480.94271851 392.73919678]
[469.49942017 381.49505615]
[454.54858398 380.28182983]
[439.59771729 379.06863403]
[432.59381104 392.33306885]
[442.02731323 403.99536133]
[451.46081543 415.65762329]
[460.89434814 427.31991577]
[468.73614502 432.03274536]
[470.38433838 439.24829102]
[479.62777710 451.06179810]
[488.87118530 462.87530518]
[498.11462402 474.68881226]
[507.35806274 486.50231934]
[516.60150146 498.31585693]
[525.84490967 510.12936401]
[540.44262695 516.22998047]
[542.19189453 531.02148438]
[551.43530273 542.83502197]
[560.67871094 554.64855957]
[576.18054199 553.96124268]
[589.10717773 562.54510498]
[594.48803711 577.09936523]
[590.25408936 592.02758789]
[578.03332520 601.58966064]
[562.52496338 602.10870361]
[549.69219971 593.38519287]
[544.46954346 578.77343750]
[548.86523438 563.89196777]
[539.62176514 552.07843018]
[530.37835693 540.26495361]
[516.44183350 535.00927734]
[514.03137207 519.37280273]
[504.78796387 507.55926514]
[495.54452515 495.74575806]
[486.30111694 483.93225098]
[477.05767822 472.11874390]
[467.81427002 460.30523682]
[458.57083130 448.49169922]
[449.23205566 436.75341797]
[439.79855347 425.09115601]
[430.36502075 413.42886353]
[420.93151855 401.76657104]
[401.16461182 402.21194458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 140]
[3 139]
[4 138]
[6 137]
[7 136]
[10 134]
[11 133]
[13 131]
[15 128]
[16 127]
[17 126]
[18 125]
[19 123]
[20 122]
[21 121]
[22 120]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[28 110]
[31 62]
[32 61]
[34 60]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[73 79]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[143 153]
[144 152]
[145 151]
[154 192]
[155 191]
[156 190]
[157 189]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[164 183]
[165 182]
[167 180]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
