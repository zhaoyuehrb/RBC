%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCGCGGGCAAUCCCUCAACCUGAUUGGUCCCCUCGCCCGUCACUCCAGUGCGCCCCCAACCUACCACGCAGUAAAAGCCACCCCCGCCUCGGCCCGGACGGUUUCCAAGCUGGUUUUGAAGUCGCGGCAGCUGUUCCUGGGACGUCCGGUUGACCGCGCGUCUGCUGCAGAGACC\
) } def
/len { sequence length } bind def

/coor [
[87.89187622 138.71971130]
[73.93457031 132.88342285]
[64.00298309 144.12458801]
[54.07139206 155.36573792]
[44.13980484 166.60688782]
[40.80104446 182.07179260]
[26.57583046 186.48683167]
[16.64424133 197.72798157]
[6.71265459 208.96914673]
[-2.91788816 220.46925354]
[-12.24063683 232.22027588]
[-21.56338501 243.97128296]
[-30.88613319 255.72230530]
[-40.20888138 267.47332764]
[-35.12830353 282.04010010]
[-38.75186539 297.03588867]
[-49.92330170 307.67556763]
[-65.07784271 310.56402588]
[-79.37973785 304.77963257]
[-88.26529694 292.16812134]
[-88.89917755 276.75378418]
[-81.07910156 263.45529175]
[-67.30043793 256.51611328]
[-51.95989609 258.15057373]
[-42.63714981 246.39955139]
[-33.31439972 234.64854431]
[-23.99165154 222.89752197]
[-14.66890335 211.14651489]
[-14.72044373 207.59246826]
[-13.03413963 203.83894348]
[-9.53624630 200.71174622]
[-4.52850056 199.03755188]
[5.40308714 187.79640198]
[15.33467484 176.55523682]
[17.96306229 161.89437866]
[32.89865112 156.67530823]
[42.83023834 145.43414307]
[52.76182556 134.19299316]
[62.69341278 122.95183563]
[57.13710022 109.01887512]
[42.19546890 107.69689178]
[33.34076691 110.06270599]
[27.00259399 106.21744537]
[12.08662033 104.63196564]
[-2.82935238 103.04648590]
[-17.59089851 110.18992615]
[-31.00423241 100.75518036]
[-29.27086639 84.44789886]
[-14.17393780 78.04361725]
[-1.24387383 88.13050842]
[13.67209911 89.71598816]
[28.58807182 91.30146790]
[43.51745605 92.75525665]
[58.45908737 94.07724762]
[62.21184921 84.49034882]
[68.06655884 76.35688019]
[75.54771423 70.10757446]
[84.10028839 66.03117371]
[93.12964630 64.26245880]
[93.39437103 49.26479340]
[93.65909576 34.26712799]
[85.63936615 26.86306953]
[83.08757782 16.47695923]
[86.61524200 6.61379194]
[94.82314301 0.46583673]
[95.61698914 -14.51314163]
[96.41084290 -29.49212074]
[97.20469666 -44.47109985]
[94.52785492 -53.23678970]
[98.14704132 -59.70672226]
[99.20513153 -74.66935730]
[87.21129608 -81.89912415]
[79.54463959 -93.53928375]
[77.65673065 -107.28210449]
[81.86019135 -120.43228912]
[91.27857971 -130.43559265]
[104.02847290 -135.37493896]
[105.35045624 -150.31655884]
[106.67244720 -165.25819397]
[107.99443817 -180.19982910]
[109.31642151 -195.14146423]
[99.44544983 -207.19142151]
[100.99898529 -222.32553101]
[112.54761505 -231.66174316]
[113.86960602 -246.60336304]
[103.99863434 -258.65332031]
[105.55216980 -273.78744507]
[117.10079956 -283.12365723]
[118.42279053 -298.06527710]
[111.01993561 -312.69845581]
[120.21649170 -326.27621460]
[136.55183411 -324.83090210]
[143.22155762 -309.84936523]
[133.36442566 -296.74328613]
[132.04243469 -281.80166626]
[141.77241516 -270.58279419]
[140.64459229 -255.41102600]
[128.81123352 -245.28138733]
[127.48925018 -230.33975220]
[137.21923828 -219.12088013]
[136.09140015 -203.94911194]
[124.25805664 -193.81947327]
[122.93606567 -178.87783813]
[121.61408234 -163.93620300]
[120.29209137 -148.99458313]
[118.97010040 -134.05294800]
[132.41184998 -125.10957336]
[139.55821228 -110.52768707]
[138.37767029 -94.23771667]
[129.09756470 -80.68377686]
[114.16776276 -73.61127472]
[113.10968018 -58.64863586]
[112.18367767 -43.67724609]
[111.38982391 -28.69826889]
[110.59597015 -13.71928978]
[109.80211639 1.25968850]
[119.82599640 17.77431870]
[108.65676117 34.53185654]
[108.39203644 49.52951813]
[108.12730408 64.52718353]
[125.92321014 74.45864105]
[135.58950806 92.39994812]
[134.09481812 112.72465515]
[146.76541138 120.75311279]
[159.43600464 128.78157043]
[173.80293274 123.22299957]
[188.51612854 127.14412689]
[197.98715210 138.83872986]
[198.74674988 153.69001770]
[211.41734314 161.71847534]
[224.08793640 169.74693298]
[236.75852966 177.77539062]
[249.42910767 185.80384827]
[245.41787720 171.35014343]
[250.54048157 157.25195312]
[262.89465332 148.74462891]
[277.89270020 148.98738098]
[289.96508789 157.89002991]
[294.62875366 172.14662170]
[290.15188599 186.46295166]
[278.19692993 195.52268982]
[263.20501709 195.96199036]
[274.61968994 205.69364929]
[286.03436279 215.42529297]
[297.44906616 225.15695190]
[308.86373901 234.88859558]
[320.27841187 244.62025452]
[335.79983521 247.68556213]
[340.46524048 261.83062744]
[351.87991333 271.56228638]
[363.29461670 281.29394531]
[379.51113892 283.73449707]
[385.25314331 299.09552002]
[374.61376953 311.57492065]
[358.53787231 308.33496094]
[353.56295776 292.70861816]
[342.14828491 282.97695923]
[330.73358154 273.24533081]
[316.02862549 270.87609863]
[310.54678345 256.03494263]
[299.13208008 246.30328369]
[287.71740723 236.57162476]
[276.30273438 226.83998108]
[264.88803101 217.10832214]
[253.47335815 207.37667847]
[241.40065002 198.47444153]
[228.73005676 190.44598389]
[216.05947876 182.41752625]
[203.38888550 174.38906860]
[190.71829224 166.36061096]
[176.96498108 172.01609802]
[162.34577942 168.44641113]
[152.51683044 156.81690979]
[151.40754700 141.45216370]
[138.73695374 133.42370605]
[126.06636810 125.39524841]
[115.79461670 134.32458496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[5 36]
[7 34]
[8 33]
[9 32]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[40 54]
[41 53]
[43 52]
[44 51]
[45 50]
[59 120]
[60 119]
[61 118]
[65 116]
[66 115]
[67 114]
[68 113]
[70 112]
[71 111]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[84 99]
[85 98]
[88 95]
[89 94]
[123 176]
[124 175]
[125 174]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[142 165]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
