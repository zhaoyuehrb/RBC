%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGCUUUCAUUUUGGGCCGAGCUGGAGGCGGCGGGGCCGUCCCGGAACGGCUGCGGCCGGGCACCCCGGGAGUUAAUCCGAAAGCGCCGCAAGCCCCGCGGGCCGGCCGCACCGCACGUGUCACCGAGAAGCUGAUGUAGAGAGAGACACAGAAGGAGACAGAAAGCAAGAGACCAGAGUCCCGGGAAAGUCCUGCCGCGCCUCGGGACAAUUAUAAAA\
) } def
/len { sequence length } bind def

/coor [
[70.70886993 670.62225342]
[55.89508057 673.48822021]
[40.84434891 672.42150879]
[26.58286095 667.49481201]
[14.08299255 659.04400635]
[4.19700289 647.64532471]
[-2.40106440 634.07598877]
[-5.26134205 619.26110840]
[-4.18881130 604.21075439]
[0.74340010 589.95117188]
[9.19900608 577.45458984]
[20.60149002 567.57299805]
[34.17341232 560.98016357]
[48.98941422 558.12561035]
[50.04987717 543.16314697]
[51.11034012 528.20068359]
[41.18562698 517.15368652]
[42.04794312 501.96450806]
[53.70232010 491.62945557]
[54.76278305 476.66699219]
[55.82324982 461.70452881]
[56.88371277 446.74206543]
[54.86874008 443.85781860]
[54.14622879 439.85668945]
[55.22488403 435.35470581]
[58.32000732 431.17141724]
[60.01454163 416.26742554]
[52.73182678 406.61517334]
[54.01626968 394.18917847]
[63.72199631 385.70239258]
[65.62726593 370.82388306]
[67.53253174 355.94537354]
[69.43779755 341.06686401]
[71.34306335 326.18835449]
[73.24833679 311.30984497]
[75.15360260 296.43133545]
[77.05886841 281.55282593]
[78.96413422 266.67431641]
[80.86940002 251.79582214]
[71.58557129 240.20504761]
[73.30583191 225.08898926]
[85.52625275 215.42984009]
[87.43151855 200.55133057]
[89.33678436 185.67282104]
[91.24205017 170.79431152]
[93.14731598 155.91580200]
[95.05258942 141.03730774]
[78.59053802 127.71737671]
[73.28752136 110.52658081]
[77.89408112 96.37962341]
[87.69490814 89.63452911]
[77.01352692 79.10324097]
[68.71263885 75.31081390]
[66.25682831 68.34654236]
[55.72554016 57.66515732]
[45.19425201 46.98377609]
[34.66296387 36.30239105]
[24.13167381 25.62100601]
[13.60038567 14.93962193]
[3.06909752 4.25823736]
[-7.46219063 -6.42314720]
[-17.99347878 -17.10453033]
[-23.01058769 -18.48601151]
[-26.63771439 -21.36269760]
[-28.53849030 -24.95687294]
[-28.73301315 -28.46986008]
[-38.80148315 -39.58858109]
[-48.86994934 -50.70730209]
[-59.01683807 -61.75450134]
[-69.24163818 -72.72962952]
[-79.46643829 -83.70476532]
[-89.69123840 -94.67989349]
[-97.82369232 -98.82119751]
[-99.98171234 -105.88342285]
[-110.05018616 -117.00214386]
[-120.11865234 -128.12086487]
[-136.24934387 -124.47138214]
[-151.92884827 -129.42851257]
[-162.90394592 -141.54820251]
[-166.24777222 -157.45718384]
[-161.13987732 -172.79151917]
[-171.36468506 -183.76664734]
[-187.19490051 -188.04870605]
[-191.13954163 -203.96636963]
[-179.14068604 -215.14489746]
[-163.54174805 -210.08479309]
[-160.38955688 -193.99143982]
[-150.16474915 -183.01631165]
[-137.09161377 -186.95236206]
[-123.53260803 -184.86340332]
[-112.14104462 -177.10055542]
[-105.17084503 -165.13084412]
[-104.03076172 -151.26019287]
[-108.99993134 -138.18933105]
[-98.93146515 -127.07061768]
[-88.86299133 -115.95189667]
[-78.71611023 -104.90469360]
[-68.49131012 -93.92956543]
[-58.26650620 -82.95442963]
[-48.04170990 -71.97930145]
[-41.18793869 -69.23013306]
[-37.75122833 -60.77576828]
[-27.68276215 -49.65704727]
[-17.61429405 -38.53832626]
[-7.31209421 -27.63581848]
[3.21919370 -16.95443535]
[13.75048161 -6.27305079]
[24.28177071 4.40833330]
[34.81305695 15.08971786]
[45.34434509 25.77110291]
[55.87563324 36.45248795]
[66.40692139 47.13386917]
[76.93820953 57.81525421]
[87.54481506 68.42185974]
[98.22619629 78.95314789]
[113.20780182 79.69578552]
[124.87834167 70.27248383]
[123.78868103 53.38939667]
[132.88902283 39.32483673]
[148.42459106 33.51694489]
[164.20008850 38.07021713]
[175.73611450 28.48271370]
[187.27212524 18.89520836]
[198.80815125 9.30770397]
[204.47599792 -5.46341991]
[219.20956421 -7.64776134]
[230.74557495 -17.23526573]
[228.80647278 -26.72310066]
[230.44178772 -36.20928192]
[235.38595581 -44.40113449]
[242.92550659 -50.19791794]
[252.00166321 -52.83869171]
[261.35900879 -52.00201416]
[269.71905518 -47.84444427]
[281.77902222 -56.76394272]
[293.83898926 -65.68344116]
[298.87249756 -73.29599762]
[306.13330078 -74.64239502]
[318.31826782 -83.39034271]
[330.50323486 -92.13828278]
[330.45639038 -107.65528870]
[339.56643677 -120.21659851]
[354.33038330 -124.99214172]
[369.07116699 -120.14561462]
[378.12066650 -107.54061127]
[377.99917603 -92.02400970]
[368.75338745 -79.56226349]
[353.93850708 -74.94716644]
[339.25115967 -79.95331573]
[327.06619263 -71.20536804]
[314.88122559 -62.45742416]
[302.75848389 -53.62348175]
[290.69851685 -44.70398331]
[278.63854980 -35.78448868]
[277.30862427 -15.38118744]
[261.11215210 -2.42496133]
[240.33308411 -5.69924593]
[228.79705811 3.88825870]
[223.95436096 17.97362137]
[208.39566040 20.84372520]
[196.85963440 30.43122864]
[185.32362366 40.01873398]
[173.78759766 49.60623932]
[175.88871765 62.78608704]
[171.16703796 75.38486481]
[160.75505066 84.07611847]
[147.30232239 86.50892639]
[134.30163574 81.94302368]
[122.63110352 91.36631775]
[123.89860535 98.75843811]
[138.68289185 96.22365570]
[141.21743774 111.00797272]
[126.43361664 113.54267883]
[127.70112610 120.93479919]
[141.84428406 125.93189240]
[155.98744202 130.92898560]
[172.00212097 127.39875793]
[182.86550903 139.68365479]
[177.40229797 155.14604187]
[161.23257446 157.87953186]
[150.99035645 145.07215881]
[136.84719849 140.07505798]
[122.70403290 135.07795715]
[109.93109131 142.94256592]
[108.02582550 157.82107544]
[106.12055969 172.69958496]
[104.21529388 187.57809448]
[102.31002045 202.45658875]
[100.40475464 217.33509827]
[109.79695892 229.76185608]
[107.65280151 244.82363892]
[95.74790955 253.70109558]
[93.84264374 268.57958984]
[91.93737793 283.45809937]
[90.03210449 298.33660889]
[88.12683868 313.21511841]
[86.22157288 328.09362793]
[84.31630707 342.97213745]
[82.41104126 357.85064697]
[80.50576782 372.72912598]
[78.60050201 387.60763550]
[86.09811401 404.43038940]
[74.91851807 417.96197510]
[73.22398376 432.86593628]
[71.84617615 447.80252075]
[70.78571320 462.76498413]
[69.72525024 477.72747803]
[68.66478729 492.68994141]
[78.74499512 504.56542969]
[77.45639038 519.72436523]
[66.07280731 529.26110840]
[65.01234436 544.22357178]
[63.95188141 559.18609619]
[78.21716309 564.10174561]
[90.72355652 572.54290771]
[100.61834717 583.93389893]
[107.22689056 597.49816895]
[110.09860992 612.31085205]
[109.03769684 627.36199951]
[104.11650085 641.62542725]
[95.67054749 654.12854004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 213]
[15 212]
[16 211]
[19 208]
[20 207]
[21 206]
[22 205]
[26 204]
[27 203]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[51 115]
[52 114]
[54 113]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[61 106]
[62 105]
[66 104]
[67 103]
[68 102]
[69 100]
[70 99]
[71 98]
[72 97]
[74 96]
[75 95]
[76 94]
[81 88]
[82 87]
[116 169]
[117 168]
[121 163]
[122 162]
[123 161]
[124 160]
[126 158]
[127 157]
[134 154]
[135 153]
[136 152]
[138 151]
[139 150]
[140 149]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
