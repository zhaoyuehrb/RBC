%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCAGCCCGGCCCGGCAUUUUACGACGUUCGCAGCGCUACCCUUUUCCGCUCCACGGUGACCUCCGUGCGGCCGGGUGCGGGCGGAGUCUUCCUCGAUCCCGUGGUGCUCCGCGGCGCGGCCUUGCUCUCUUCCGGUCGCGGGACACCGGGUGUAGAGGGCGGUCGCGGCGGGCAGUGGCGGCAGA\
) } def
/len { sequence length } bind def

/coor [
[87.47865295 347.51281738]
[87.38165283 331.70880127]
[98.54745483 320.52398682]
[98.29680634 305.52609253]
[90.34791565 292.92987061]
[97.85353851 279.00234985]
[97.60289001 264.00442505]
[97.35224152 249.00653076]
[96.97629547 234.01124573]
[88.81803131 221.54962158]
[96.08988190 207.49861145]
[95.58865356 192.50698853]
[95.08743286 177.51536560]
[94.58620453 162.52374268]
[94.08498383 147.53211975]
[85.92671967 135.07049561]
[93.19857025 121.01948547]
[90.08203125 135.69215393]
[78.63604736 145.38696289]
[63.65056610 146.04679871]
[51.39677429 137.39552307]
[47.00268173 123.05355835]
[52.30714417 109.02278900]
[65.09033203 101.17485046]
[80.00383759 102.79452515]
[65.91799927 97.63806152]
[51.83215714 92.48159790]
[42.67736435 92.46810150]
[37.55524063 87.11949158]
[23.55753136 81.72837830]
[9.55982208 76.33725739]
[-4.43788671 70.94614410]
[-18.43559647 65.55502319]
[-30.53265762 70.06719208]
[-42.08800125 65.27382660]
[-47.10580444 54.25338745]
[-61.01147461 48.62912369]
[-74.91714478 43.00486374]
[-84.06637573 42.68546677]
[-89.00691223 37.16868973]
[-102.81666565 31.31284904]
[-116.62641144 25.45701027]
[-130.43615723 19.60117149]
[-140.40003967 26.12975311]
[-152.15866089 27.01942444]
[-162.77313232 22.16412544]
[-169.64663696 12.87922764]
[-171.15950012 1.54752064]
[-184.76585388 -4.76650095]
[-198.37222290 -11.08052254]
[-211.97859192 -17.39454269]
[-217.21699524 -16.92258072]
[-221.66113281 -18.37393761]
[-224.70857239 -21.11931992]
[-226.09631348 -24.38109589]
[-239.36918640 -31.36901093]
[-252.64205933 -38.35692596]
[-265.91491699 -45.34484100]
[-280.93350220 -40.42362595]
[-294.99508667 -47.63796234]
[-299.75726318 -62.70771408]
[-292.39465332 -76.69226074]
[-277.27539062 -81.29483032]
[-263.36947632 -73.78478241]
[-258.92700195 -58.61771011]
[-245.65414429 -51.62979507]
[-232.38127136 -44.64188004]
[-219.10839844 -37.65396500]
[-205.66456604 -31.00090790]
[-192.05819702 -24.68688583]
[-178.45184326 -18.37286377]
[-164.84547424 -12.05884266]
[-148.08349609 -19.38179779]
[-130.99098206 -12.01955032]
[-124.58032227 5.79142284]
[-110.77057648 11.64726162]
[-96.96082306 17.50310135]
[-83.15107727 23.35894012]
[-69.29288483 29.09919167]
[-55.38721466 34.72345352]
[-41.48154449 40.34771729]
[-24.26905632 36.97130203]
[-13.04447937 51.55731583]
[0.95322967 56.94843292]
[14.95093918 62.33955002]
[28.94864845 67.73066711]
[42.94635773 73.12178040]
[56.98862076 78.39575958]
[71.07446289 83.55222321]
[85.16030121 88.70868683]
[75.27095795 77.43035126]
[62.51062775 69.54530334]
[55.82199860 56.11912155]
[57.21372223 41.18382645]
[66.26785278 29.22461510]
[80.26535034 23.83295250]
[95.00263977 26.62800217]
[106.05397797 36.77038574]
[110.10054016 51.21425247]
[105.92598724 65.62378693]
[106.15686798 80.62200928]
[113.14477539 67.34914398]
[120.13269043 54.07627487]
[127.12060547 40.80340576]
[134.10852051 27.53053665]
[141.09643555 14.25766850]
[139.91685486 -2.09900022]
[153.64228821 -11.07364655]
[168.15321350 -3.43392348]
[168.52200317 12.96107674]
[154.36930847 21.24558258]
[147.38139343 34.51845169]
[140.39347839 47.79132080]
[133.40556335 61.06418991]
[126.41764832 74.33705902]
[119.42973328 87.60992432]
[120.05116272 91.43840790]
[119.97443390 95.12387085]
[134.94093323 96.12576294]
[149.90744019 97.12764740]
[164.87394714 98.12953949]
[179.84045410 99.13142395]
[194.80694580 100.13331604]
[200.92874146 97.55235291]
[206.58142090 98.34590912]
[210.25416565 101.42698669]
[225.17883301 102.92842865]
[240.10350037 104.42986298]
[255.02816772 105.93129730]
[269.95285034 107.43273163]
[284.87750244 108.93416595]
[299.80218506 110.43560028]
[314.75979614 111.56250763]
[329.74093628 112.31417084]
[344.72210693 113.06582642]
[359.70324707 113.81748962]
[374.68441772 114.56915283]
[389.66555786 115.32081604]
[399.29867554 103.15599823]
[414.25134277 99.00907898]
[428.77398682 104.47464752]
[437.28234863 117.45107269]
[436.50476074 132.94865417]
[426.74026489 145.00825500]
[411.74346924 148.99272156]
[397.28097534 143.36993408]
[388.91390991 130.30197144]
[373.93273926 129.55030823]
[358.95159912 128.79864502]
[343.97042847 128.04698181]
[328.98928833 127.29531860]
[314.00811768 126.54366302]
[311.15185547 128.64288330]
[307.13073730 129.45198059]
[302.56735229 128.43592834]
[298.30075073 125.36026764]
[283.37606812 123.85883331]
[268.45141602 122.35739899]
[253.52673340 120.85596466]
[238.60206604 119.35453033]
[223.67739868 117.85309601]
[208.75273132 116.35165405]
[193.80506897 115.09982300]
[178.83856201 114.09793091]
[163.87205505 113.09603882]
[148.90554810 112.09415436]
[133.93905640 111.09226227]
[118.97254944 110.09037018]
[108.19019318 120.51825714]
[116.38430023 134.05218506]
[109.07660675 147.03088379]
[109.57782745 162.02250671]
[110.07905579 177.01412964]
[110.58027649 192.00575256]
[111.08150482 206.99739075]
[119.27561188 220.53131104]
[111.96791840 233.51000977]
[115.38800049 242.00196838]
[112.35015106 248.75587463]
[112.60079956 263.75378418]
[112.85144043 278.75167847]
[120.81826019 292.42065430]
[113.29471588 305.27542114]
[113.54535675 320.27334595]
[125.07866669 331.07882690]
[125.50980377 346.87722778]
[114.58299255 358.29565430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 184]
[4 183]
[6 181]
[7 180]
[8 179]
[9 177]
[11 175]
[12 174]
[13 173]
[14 172]
[15 171]
[17 169]
[25 90]
[26 89]
[27 88]
[29 87]
[30 86]
[31 85]
[32 84]
[33 83]
[36 81]
[37 80]
[38 79]
[40 78]
[41 77]
[42 76]
[43 75]
[48 72]
[49 71]
[50 70]
[51 69]
[55 68]
[56 67]
[57 66]
[58 65]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[118 168]
[119 167]
[120 166]
[121 165]
[122 164]
[123 163]
[126 162]
[127 161]
[128 160]
[129 159]
[130 158]
[131 157]
[132 156]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
