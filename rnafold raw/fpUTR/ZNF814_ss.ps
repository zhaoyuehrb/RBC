%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGUCCGGACUUCCGGCGCCCUCUGGUGGCGGCCAUUUUGAUUGGUGUUGGAUUUAUUUGUAGGAGAGGCUCCUGAGCGCUAGGUCCGCACUGUGGUGACUGAACCCAGAAGUCGGGGAGCAGUUGUCCUCCGCUGCACAGAGGCUACUCUGGAGCUCUGUGACGGCGCCCAGCGUGACCCACUCCUGGGCCAGGAUACGGACCGUCGUGCCCAUAUCUCCUGGCUGGUCGCCCUAUCCUCCCGACUCUGCU\
UAAAACCACGUGGUUCG\
) } def
/len { sequence length } bind def

/coor [
[120.09741211 342.12686157]
[121.04636383 327.15737915]
[121.99510956 312.18740845]
[114.51012421 311.71304321]
[109.76010895 325.94107056]
[105.01008606 340.16912842]
[100.26007080 354.39718628]
[95.59198761 368.65231323]
[91.00601196 382.93408203]
[86.42003632 397.21585083]
[81.83406067 411.49761963]
[85.82597351 427.40347290]
[73.86038971 438.61761475]
[58.24646759 433.60388184]
[55.04647827 417.51995850]
[67.55229187 406.91162109]
[72.13827515 392.62988281]
[76.72425079 378.34811401]
[81.31022644 364.06634521]
[80.36661530 356.76419067]
[86.03202057 349.64715576]
[90.78204346 335.41909790]
[95.53205872 321.19107056]
[100.28208160 306.96301270]
[112.93069458 292.58648682]
[127.99573517 287.00570679]
[141.11537170 289.61593628]
[139.90837097 274.66458130]
[138.70138550 259.71322632]
[135.04437256 253.32276917]
[137.56752014 244.58303833]
[136.53265381 229.61877441]
[135.49778748 214.65452576]
[134.46292114 199.69026184]
[133.42805481 184.72599792]
[132.39318848 169.76174927]
[131.35832214 154.79748535]
[130.32345581 139.83322144]
[119.88441467 144.87167358]
[108.78128815 147.28988647]
[97.64820862 147.05772400]
[87.09666443 144.29342651]
[77.68195343 139.25148010]
[69.87393951 132.30316162]
[64.03383636 123.91099548]
[60.39795685 114.59910583]
[59.06929398 104.92098999]
[44.09932709 103.97224426]
[29.12936211 103.02349091]
[14.15939617 102.07474518]
[-0.81056988 101.12599182]
[-9.53563118 103.69939423]
[-15.94703197 100.07921600]
[-30.90508842 98.95826721]
[-45.86314392 97.83731842]
[-60.82120132 96.71636200]
[-75.77925873 95.59541321]
[-90.73731995 94.47446442]
[-105.69537354 93.35350800]
[-114.88294983 107.12151337]
[-129.68008423 114.32640839]
[-145.99668884 113.08226776]
[-159.37571716 103.82415009]
[-166.21063232 89.16318512]
[-181.18058777 88.21443176]
[-196.15055847 87.26568604]
[-211.12052917 86.31693268]
[-226.09048462 85.36818695]
[-241.06045532 84.41944122]
[-257.25030518 89.45185089]
[-266.56784058 75.28781128]
[-255.53669739 62.41341400]
[-240.11170959 69.44947052]
[-225.14173889 70.39822388]
[-210.17178345 71.34696960]
[-195.20181274 72.29571533]
[-180.23184204 73.24446869]
[-165.26188660 74.19321442]
[-158.47792053 62.36289978]
[-147.20895386 54.56573486]
[-133.61618042 52.36625671]
[-120.33643341 56.24874878]
[-109.97062683 65.51206207]
[-104.57442474 78.39545441]
[-89.61636353 79.51640320]
[-74.65830994 80.63735962]
[-59.70025253 81.75830841]
[-44.74219513 82.87925720]
[-29.78413773 84.00021362]
[-14.82608032 85.12116241]
[0.13817877 86.15602875]
[15.10814476 87.10477448]
[30.07810974 88.05352783]
[45.04807663 89.00227356]
[60.01804352 89.95102692]
[63.09341431 81.63038635]
[67.87760925 74.16028595]
[74.14910889 67.88660431]
[67.02588654 54.68585587]
[59.82682419 41.52631760]
[52.55216217 28.40841484]
[45.27750015 15.29051495]
[38.00284195 2.17261410]
[30.72818184 -10.94528675]
[23.45352173 -24.06318665]
[8.52662945 -28.51579094]
[1.33595908 -41.92283630]
[5.67282534 -56.12590790]
[-1.60183501 -69.24380493]
[-8.87649536 -82.36170959]
[-24.29407692 -84.11607361]
[-35.71320343 -94.62241364]
[-38.74298859 -109.84082794]
[-32.21841812 -123.91951752]
[-18.64832115 -131.44494629]
[-3.25067759 -129.52343750]
[8.05380344 -118.89383698]
[10.91831970 -103.64345551]
[4.24140501 -89.63636780]
[11.51606560 -76.51847076]
[18.79072571 -63.40056610]
[33.13527679 -59.55746078]
[40.69968414 -46.35767365]
[36.57142258 -31.33784676]
[43.84608078 -18.21994781]
[51.12074280 -5.10204649]
[58.39540100 8.01585388]
[65.67005920 21.13375473]
[72.94472504 34.25165558]
[78.91469574 38.56108093]
[80.22663116 47.56262970]
[87.34985352 60.76337433]
[94.15256500 59.19134521]
[101.12299347 58.78983307]
[108.06121826 59.57036209]
[113.62158203 45.63901901]
[119.18194580 31.70767403]
[124.74230957 17.77633095]
[130.30267334 3.84498692]
[135.78279114 -10.11811924]
[141.18247986 -24.11252594]
[146.58216858 -38.10693359]
[151.98184204 -52.10133743]
[157.38153076 -66.09574890]
[162.78121948 -80.09014893]
[168.18089294 -94.08455658]
[168.34591675 -103.17971039]
[173.72407532 -108.20834351]
[179.28443909 -122.13969421]
[171.72595215 -135.82922363]
[174.78598022 -151.16447449]
[187.01968384 -160.90463257]
[202.65068054 -160.45066833]
[214.29847717 -150.01695251]
[216.46336365 -134.52993774]
[208.12312317 -121.30214691]
[193.21578979 -116.57932281]
[187.65541077 -102.64797974]
[182.17530823 -88.68487549]
[176.77561951 -74.69046783]
[171.37593079 -60.69606018]
[165.97625732 -46.70165634]
[160.57656860 -32.70724869]
[155.17687988 -18.71284294]
[149.77720642 -4.71843576]
[150.29933167 2.62588811]
[144.23402405 9.40535259]
[138.67366028 23.33669662]
[133.11329651 37.26803970]
[127.55292511 51.19938278]
[121.99256134 65.13072968]
[136.41209412 72.47715759]
[148.02281189 85.85758972]
[161.09863281 78.50756836]
[174.17446899 71.15755463]
[187.25028992 63.80753708]
[196.29229736 47.74670029]
[213.83235168 48.67577362]
[226.82273865 41.17577362]
[239.81311035 33.67577362]
[250.50703430 20.51992607]
[266.10913086 27.15402222]
[264.05337524 43.98287582]
[247.31311035 46.66615677]
[234.32273865 54.16615677]
[221.33235168 61.66615677]
[217.91249084 73.24506378]
[207.18296814 79.60668182]
[194.60031128 76.88336182]
[181.52447510 84.23338318]
[168.44865417 91.58339691]
[155.37283325 98.93341827]
[158.20388794 113.66382599]
[173.07273865 115.64311218]
[187.94157410 117.62239838]
[202.81040955 119.60167694]
[217.67926025 121.58096313]
[232.54809570 123.56024170]
[247.41693115 125.53952789]
[262.36111450 126.83253479]
[277.34893799 127.43652344]
[292.33676147 128.04051208]
[307.32461548 128.64450073]
[322.31243896 129.24848938]
[336.57382202 121.15246582]
[350.57693481 129.68736267]
[349.91659546 146.07321167]
[335.27212524 153.45365906]
[321.70846558 144.23632812]
[306.72061157 143.63233948]
[291.73278809 143.02835083]
[276.74496460 142.42436218]
[261.75711060 141.82037354]
[272.84997559 151.91731262]
[275.97665405 166.58782959]
[269.96456909 180.33029175]
[257.06835938 187.99108887]
[242.12426758 186.69735718]
[230.73648071 176.93424988]
[227.17558289 162.36303711]
[232.77693176 148.44812012]
[245.43765259 140.40837097]
[230.56881714 138.42909241]
[215.69996643 136.44979858]
[200.83113098 134.47052002]
[185.96229553 132.49124146]
[171.09344482 130.51194763]
[156.22460938 128.53266907]
[145.28771973 138.79835510]
[146.32258606 153.76261902]
[147.35745239 168.72688293]
[148.39231873 183.69113159]
[149.42718506 198.65539551]
[150.46205139 213.61965942]
[151.49691772 228.58390808]
[152.53178406 243.54817200]
[153.65274048 258.50622559]
[154.85974121 273.45758057]
[156.06674194 288.40893555]
[159.45840454 273.79742432]
[166.91459656 260.78186035]
[177.80342102 250.46519470]
[191.20214844 243.72174072]
[205.97531128 241.12294006]
[220.87097168 242.88903809]
[234.62684631 248.87034607]
[246.07717896 258.56002808]
[254.25166321 271.13690186]
[258.45755005 285.53518677]
[258.33840942 300.53469849]
[253.90434265 314.86437988]
[245.53111267 327.30981445]
[233.92829895 336.81637573]
[220.07916260 342.57843018]
[205.15731812 344.10769653]
[190.42730713 341.27456665]
[177.13739014 334.31912231]
[166.41380310 323.83081055]
[159.16394043 310.69476318]
[162.07971191 325.40863037]
[164.99548340 340.12252808]
[167.91125488 354.83639526]
[179.11627197 366.81051636]
[174.09065247 382.42062378]
[158.00431824 385.60836792]
[147.40550232 373.09448242]
[153.19737244 357.75216675]
[150.28160095 343.03829956]
[147.36582947 328.32440186]
[144.45005798 313.61053467]
[136.96507263 313.13616943]
[136.01632690 328.10610962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[8 19]
[9 18]
[10 17]
[11 16]
[27 239]
[28 238]
[29 237]
[31 236]
[32 235]
[33 234]
[34 233]
[35 232]
[36 231]
[37 230]
[38 229]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[53 90]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[98 132]
[99 131]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[108 121]
[109 120]
[110 119]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[148 158]
[149 157]
[173 192]
[174 191]
[175 190]
[176 189]
[178 186]
[179 185]
[180 184]
[193 228]
[194 227]
[195 226]
[196 225]
[197 224]
[198 223]
[199 222]
[200 213]
[201 212]
[202 211]
[203 210]
[204 209]
[259 270]
[260 269]
[261 268]
[262 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
