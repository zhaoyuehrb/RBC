%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAAGUCCGGGGCUGGCAAGCGCUUCCUGCGCAGCGCCUAGGCGACCUGGAGUUUGUGACGCUGUGAUGGUCUAGAGGCUGGAGAUUCAAGAUCUGGGUGCCAUCAUUUUCUGGUUCUGUUGAUGACCCUCUUCCAGGUUACAUACAGCUUACAUCUUGCAUCCUCAAGCGUUUUUCUUAUAAGGCUAAAAAUUCACAAAGCAUAUAUCA\
) } def
/len { sequence length } bind def

/coor [
[-263.02365112 592.71673584]
[-274.63195801 602.21661377]
[-286.24026489 611.71649170]
[-297.84857178 621.21630859]
[-309.45687866 630.71618652]
[-311.51272583 643.44842529]
[-321.37561035 651.12194824]
[-333.42395020 650.05407715]
[-345.17111206 659.38165283]
[-356.91827393 668.70928955]
[-368.66540527 678.03692627]
[-380.41256714 687.36450195]
[-392.15972900 696.69213867]
[-403.76803589 706.19201660]
[-415.23495483 715.86206055]
[-426.70187378 725.53204346]
[-438.02493286 735.37017822]
[-449.20169067 745.37420654]
[-460.37841797 755.37823486]
[-461.02590942 772.86041260]
[-473.86447144 784.24066162]
[-490.62469482 782.84173584]
[-501.65264893 793.00952148]
[-512.68060303 803.17730713]
[-523.70861816 813.34509277]
[-525.79321289 829.25213623]
[-539.60345459 837.41650391]
[-554.54528809 831.57519531]
[-559.15661621 816.20916748]
[-549.90002441 803.10589600]
[-533.87640381 802.31713867]
[-522.84838867 792.14935303]
[-511.82043457 781.98156738]
[-500.79248047 771.81378174]
[-502.07656860 758.99353027]
[-495.64663696 747.60430908]
[-483.65481567 741.91375732]
[-470.38244629 744.20147705]
[-459.20571899 734.19744873]
[-448.02899170 724.19342041]
[-446.87518311 719.56048584]
[-442.79962158 715.60253906]
[-436.37191772 714.06512451]
[-424.90499878 704.39508057]
[-413.43804932 694.72509766]
[-412.14810181 690.12811279]
[-407.95758057 686.29217529]
[-401.48733521 684.94500732]
[-389.74017334 675.61737061]
[-377.99304199 666.28973389]
[-366.24588013 656.96215820]
[-354.49871826 647.63452148]
[-342.75158691 638.30688477]
[-337.19381714 621.66058350]
[-318.95672607 619.10784912]
[-307.34841919 609.60803223]
[-295.74014282 600.10815430]
[-284.13183594 590.60833740]
[-272.52352905 581.10845947]
[-275.44635010 560.34204102]
[-265.15170288 541.91668701]
[-245.68721008 533.41192627]
[-224.91024780 538.43927002]
[-214.18696594 527.95062256]
[-203.46368408 517.46203613]
[-192.89627075 506.81637573]
[-182.48701477 496.01605225]
[-172.07774353 485.21569824]
[-161.66848755 474.41537476]
[-151.66445923 463.23864746]
[-142.07925415 451.70071411]
[-132.49404907 440.16278076]
[-122.90883636 428.62484741]
[-113.32363129 417.08691406]
[-103.73842621 405.54898071]
[-94.85021210 393.46594238]
[-86.68990326 380.87988281]
[-78.52959442 368.29379272]
[-78.09785461 353.40545654]
[-64.09812927 346.03536987]
[-55.93782043 333.44927979]
[-47.77751541 320.86318970]
[-47.34577179 305.97485352]
[-33.34604263 298.60476685]
[-25.18573761 286.01867676]
[-17.02543259 273.43261719]
[-8.95816422 260.78668213]
[-0.98437470 248.08161926]
[-0.77226222 233.18853760]
[13.11724281 225.61276245]
[21.09103203 212.90769958]
[29.06482315 200.20263672]
[37.03861237 187.49757385]
[45.01240158 174.79251099]
[52.98619080 162.08743286]
[53.19830322 147.19435120]
[67.08780670 139.61857605]
[75.06159973 126.91351318]
[83.03538513 114.20845032]
[91.00917816 101.50338745]
[72.37593079 93.61222839]
[61.27195740 72.34172058]
[62.59765625 57.40041733]
[63.92335892 42.45911407]
[65.24906158 27.51781273]
[53.46266556 17.42521858]
[49.89230347 2.32448530]
[55.91085434 -11.97784615]
[69.20405579 -19.98223686]
[84.66041565 -18.61083603]
[96.33663177 -8.39097500]
[99.74296570 6.74760103]
[93.56961823 20.98380089]
[80.19036102 28.84351540]
[78.86466217 43.78481674]
[77.53896332 58.72612000]
[76.21325684 73.66741943]
[82.94285583 76.97838593]
[103.13166046 86.91127777]
[114.15962982 76.74348450]
[125.18759918 66.57569885]
[136.21556091 56.40791321]
[147.16825867 46.15907288]
[158.04505920 35.82974625]
[162.11196899 27.65236473]
[169.15928650 25.42974663]
[180.18725586 15.26195812]
[191.21522522 5.09417105]
[202.24319458 -5.07361603]
[213.27116394 -15.24140358]
[211.33352661 -30.63702583]
[218.84475708 -44.21499252]
[232.91661072 -50.75429916]
[248.13818359 -47.74044800]
[258.65646362 -36.33232880]
[260.42697144 -20.91659164]
[252.76890564 -7.42090511]
[238.62693787 -1.03463602]
[223.43894958 -4.21343470]
[212.41098022 5.95435286]
[201.38301086 16.12214088]
[190.35504150 26.28992844]
[179.32707214 36.45771408]
[168.37438965 46.70655060]
[157.49758911 57.03588104]
[154.81245422 63.92027664]
[146.38336182 67.43588257]
[135.35539246 77.60366821]
[124.32741547 87.77145386]
[113.29944611 97.93923950]
[103.71424103 109.47717285]
[95.74045563 122.18223572]
[87.76666260 134.88729858]
[79.79287720 147.59236145]
[79.01042175 163.39421082]
[65.69125366 170.06123352]
[57.71746826 182.76629639]
[49.74367523 195.47135925]
[41.76988602 208.17642212]
[33.79609680 220.88148499]
[25.82230759 233.58654785]
[25.03985596 249.38839722]
[11.72069073 256.05541992]
[3.74690056 268.76046753]
[1.83612573 277.69122314]
[-4.43935156 281.59292603]
[-12.59965801 294.17898560]
[-20.75996399 306.76507568]
[-21.77538681 322.55364990]
[-35.19143295 329.02349854]
[-43.35174179 341.60958862]
[-51.51204681 354.19567871]
[-52.52746964 369.98425293]
[-65.94351959 376.45410156]
[-74.10382080 389.04019165]
[-82.26412964 401.62625122]
[-67.83924866 397.51254272]
[-53.71249008 402.55581665]
[-45.15406418 414.87463379]
[-45.35683060 429.87326050]
[-54.24513626 441.95623779]
[-68.50306702 446.61578369]
[-82.81147003 442.11361694]
[-91.83238220 430.12933350]
[-92.20050049 415.13418579]
[-101.78570557 426.67211914]
[-111.37091064 438.21005249]
[-120.95611572 449.74798584]
[-130.54132080 461.28591919]
[-140.12652588 472.82385254]
[-125.17710114 474.05459595]
[-116.69314575 486.42480469]
[-120.92979431 500.81408691]
[-134.76339722 506.61331177]
[-147.99459839 499.54681396]
[-150.86814880 484.82461548]
[-161.27740479 495.62496948]
[-171.68667603 506.42529297]
[-182.09593201 517.22564697]
[-184.05625916 523.53723145]
[-188.27575684 527.34130859]
[-192.97506714 528.18530273]
[-203.69834900 538.67395020]
[-214.42161560 549.16253662]
[-210.79304504 557.70758057]
[-209.64649963 566.89636230]
[-211.05694580 576.02471924]
[-214.90383911 584.39642334]
[-220.88131714 591.37652588]
[-228.52247620 596.43963623]
[-237.23583984 599.20916748]
[-246.35113525 599.48559570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[3 57]
[4 56]
[5 55]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 45]
[15 44]
[16 43]
[17 40]
[18 39]
[19 38]
[22 34]
[23 33]
[24 32]
[25 31]
[63 204]
[64 203]
[65 202]
[66 199]
[67 198]
[68 197]
[69 196]
[70 190]
[71 189]
[72 188]
[73 187]
[74 186]
[75 185]
[76 176]
[77 175]
[78 174]
[80 172]
[81 171]
[82 170]
[84 168]
[85 167]
[86 166]
[87 164]
[88 163]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[95 156]
[97 154]
[98 153]
[99 152]
[100 151]
[102 117]
[103 116]
[104 115]
[105 114]
[119 150]
[120 149]
[121 148]
[122 147]
[123 145]
[124 144]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
