%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAGGUGGCGGCGGCGGCGGCGGUUGUCCCGGCUGUGCCGGUUGGUGUGGCCCGUCAGCCCGCGUACCACAGCGCCCGGGCCGCGUCGAGCCCAGUACAGCCAAGCCGCUGCGGCCGGGUCCGGCGCGGGCGGCGCGCGCAGACGGAGGGCGGCGGCCGCGGCCAGGGCGGCCCGUGGGACCGCGGGCCCCCGGCGCAGCGCUGCCCGGCUCCCGGCCCUGCCGGCCUCCUCCCUUGGCGCCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[129.03898621 319.87728882]
[126.42398834 305.10699463]
[123.80899811 290.33670044]
[121.19400024 275.56640625]
[116.94429016 269.54364014]
[118.63992310 260.59494019]
[116.20999908 245.79307556]
[106.51313782 234.48731995]
[111.91268921 219.61601257]
[109.48275757 204.81414795]
[107.05283356 190.01226807]
[104.53032684 175.22589111]
[101.91533661 160.45559692]
[99.30033875 145.68528748]
[96.68534851 130.91499329]
[94.07035065 116.14468384]
[91.97995758 112.32344818]
[91.22687531 108.48857117]
[91.69007111 105.02614594]
[76.75611877 103.62012482]
[61.82215500 102.21411133]
[46.88819885 100.80809021]
[31.95423889 99.40207672]
[17.02028084 97.99605560]
[2.08632278 96.59004211]
[-12.84763527 95.18402100]
[-27.78159332 93.77800751]
[-33.07802200 100.15573120]
[-40.37319183 103.89242554]
[-48.45668793 104.45089722]
[-56.01940155 101.81456757]
[-61.86552429 96.47834015]
[-65.10156250 89.35754395]
[-79.94644165 87.20593262]
[-94.79132843 85.05431366]
[-109.63620758 82.90270233]
[-124.48109436 80.75108337]
[-139.32597351 78.59947205]
[-154.17085266 76.44785309]
[-169.01574707 74.29624176]
[-185.97100830 81.51015472]
[-199.30801392 70.08748627]
[-214.17864990 68.12183380]
[-229.04930115 66.15618896]
[-243.91995239 64.19053650]
[-258.61505127 70.05269623]
[-270.21865845 60.71429443]
[-285.10131836 58.84174728]
[-299.99539185 57.06237411]
[-314.88946533 55.28300095]
[-329.78356934 53.50362778]
[-344.67764282 51.72425461]
[-359.57174683 49.94488144]
[-374.46582031 48.16550827]
[-389.35992432 46.38613129]
[-404.25399780 44.60675812]
[-412.37411499 51.79445267]
[-422.89056396 53.30998993]
[-432.31262207 48.89338684]
[-437.64538574 40.21418762]
[-452.49026489 38.06257248]
[-458.72259521 40.14079285]
[-464.24743652 38.95571518]
[-467.67794800 35.66682053]
[-482.46432495 33.14431381]
[-493.47174072 44.08124542]
[-508.81060791 46.42613602]
[-522.58282471 39.27733231]
[-529.49273682 25.38369370]
[-526.88323975 10.08760452]
[-515.75781250 -0.72927392]
[-500.39440918 -2.90763187]
[-486.70056152 4.39015388]
[-479.94180298 18.35793495]
[-465.15542603 20.88044357]
[-450.33865356 23.21768951]
[-435.49374390 25.36930466]
[-418.08135986 16.92711258]
[-402.47463989 29.71267128]
[-387.58053589 31.49204636]
[-372.68646240 33.27141953]
[-357.79235840 35.05079269]
[-342.89828491 36.83016586]
[-328.00418091 38.60953903]
[-313.11010742 40.38891602]
[-298.21600342 42.16828918]
[-283.32192993 43.94766235]
[-276.32577515 41.62651825]
[-268.25299072 45.84364700]
[-254.62155151 39.84088898]
[-241.95431519 49.31988907]
[-227.08366394 51.28553772]
[-212.21301270 53.25118637]
[-197.34236145 55.21683502]
[-187.56997681 48.11513901]
[-175.17951965 49.61367798]
[-166.86412048 59.45135880]
[-152.01924133 61.60297394]
[-137.17436218 63.75458908]
[-122.32947540 65.90620422]
[-107.48459625 68.05781555]
[-92.63970947 70.20943451]
[-77.79483032 72.36104584]
[-62.94994736 74.51266479]
[-43.69672775 64.60807037]
[-26.37557602 78.84404755]
[-11.44161797 80.25006866]
[3.49234009 81.65608215]
[18.42629814 83.06210327]
[33.36025620 84.46811676]
[48.29421616 85.87413788]
[63.22817230 87.28015137]
[78.16213226 88.68617249]
[93.09609222 90.09218597]
[107.75781250 86.92456055]
[120.77937317 79.47882080]
[133.80093384 72.03308105]
[146.82249451 64.58734131]
[159.84405518 57.14160538]
[172.86560059 49.69586945]
[185.88716125 42.25012970]
[188.49076843 37.78542328]
[192.17138672 35.02566910]
[196.10610962 34.09606934]
[199.54028320 34.77982712]
[212.83218384 27.82816887]
[226.12408447 20.87651062]
[232.25831604 14.14411068]
[239.62611389 13.92220497]
[253.00398254 7.13745165]
[266.38183594 0.35269821]
[279.75970459 -6.43205500]
[293.13757324 -13.21680832]
[306.51541138 -20.00156212]
[319.89328003 -26.78631401]
[333.27114868 -33.57106781]
[346.64898682 -40.35581970]
[360.02685547 -47.14057541]
[373.36199951 -54.00891495]
[386.65390015 -60.96057510]
[399.94577026 -67.91223145]
[413.23767090 -74.86389160]
[416.00704956 -79.22771454]
[419.78866577 -81.84735107]
[423.75552368 -82.62858582]
[427.16162109 -81.81639099]
[440.70510864 -88.26416779]
[454.24859619 -94.71194458]
[460.63125610 -101.20932007]
[468.00219727 -101.15448761]
[481.62530518 -107.43225098]
[495.24844360 -113.71001434]
[508.87158203 -119.98777771]
[519.16564941 -135.27023315]
[536.57177734 -132.95059204]
[550.11523438 -139.39837646]
[563.65875244 -145.84614563]
[577.20220947 -152.29393005]
[590.66394043 -158.91072083]
[604.04180908 -165.69546509]
[617.41967773 -172.48022461]
[630.79754639 -179.26496887]
[644.17541504 -186.04972839]
[657.55328369 -192.83447266]
[670.88842773 -199.70281982]
[684.18029785 -206.65447998]
[690.32812500 -221.47283936]
[705.78588867 -225.76672363]
[718.69567871 -216.24221802]
[719.15423584 -200.20571899]
[706.80981445 -189.95906067]
[691.13195801 -193.36257935]
[677.84002686 -186.41091919]
[673.38110352 -180.54139709]
[664.33801270 -179.45661926]
[650.96014404 -172.67185974]
[637.58227539 -165.88711548]
[624.20440674 -159.10235596]
[610.82659912 -152.31761169]
[597.44873047 -145.53285217]
[595.14501953 -141.37617493]
[590.21820068 -138.60939026]
[583.65002441 -138.75044250]
[570.10650635 -132.30265808]
[556.56304932 -125.85488129]
[543.01953125 -119.40709686]
[538.68920898 -108.12959290]
[527.48040771 -102.64038849]
[515.14935303 -106.36464691]
[501.52621460 -100.08688354]
[487.90307617 -93.80912018]
[474.27993774 -87.53135681]
[460.69638062 -81.16845703]
[447.15289307 -74.72068024]
[433.60940552 -68.27289581]
[420.18933105 -61.57199860]
[406.89743042 -54.62033844]
[393.60556030 -47.66868210]
[380.31365967 -40.71702194]
[375.85470581 -34.84748459]
[366.81161499 -33.76271439]
[353.43374634 -26.97796249]
[340.05587769 -20.19320869]
[326.67803955 -13.40845585]
[313.30017090 -6.62370205]
[299.92230225 0.16105111]
[286.54446411 6.94580460]
[273.16659546 13.73055744]
[259.78872681 20.51531029]
[246.41087341 27.30006409]
[233.07572937 34.16840363]
[219.78384399 41.12006378]
[206.49194336 48.07172394]
[193.33290100 55.27169037]
[180.31134033 62.71742630]
[167.28977966 70.16316223]
[154.26823425 77.60890198]
[141.24667358 85.05464172]
[128.22511292 92.50038147]
[115.20355225 99.94611359]
[108.84065247 113.52969360]
[111.45565033 128.29998779]
[114.07064056 143.07029724]
[116.68563843 157.84059143]
[119.30062866 172.61090088]
[123.86724854 180.49125671]
[121.85471344 187.58235168]
[124.28463745 202.38421631]
[126.71456146 217.18609619]
[136.58522034 229.55058289]
[131.01187134 243.36314392]
[133.44180298 258.16503906]
[135.96430969 272.95141602]
[138.57929993 287.72171021]
[141.19429016 302.49200439]
[143.80928040 317.26229858]
[153.90229797 325.26583862]
[155.78775024 337.60336304]
[148.99526978 347.59313965]
[151.42518616 362.39501953]
[153.85511780 377.19689941]
[166.83773804 386.20950317]
[169.56268311 401.77709961]
[160.41331482 414.66369629]
[144.81777954 417.22390747]
[132.02862549 407.93881226]
[129.63343811 392.31707764]
[139.05323792 379.62680054]
[136.62332153 364.82495117]
[134.19338989 350.02307129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 236]
[2 235]
[3 234]
[4 233]
[6 232]
[7 231]
[9 229]
[10 228]
[11 227]
[12 225]
[13 224]
[14 223]
[15 222]
[16 221]
[19 114]
[20 113]
[21 112]
[22 111]
[23 110]
[24 109]
[25 108]
[26 107]
[27 106]
[33 104]
[34 103]
[35 102]
[36 101]
[37 100]
[38 99]
[39 98]
[40 97]
[42 94]
[43 93]
[44 92]
[45 91]
[47 89]
[48 87]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[54 81]
[55 80]
[56 79]
[60 77]
[61 76]
[64 75]
[65 74]
[115 220]
[116 219]
[117 218]
[118 217]
[119 216]
[120 215]
[121 214]
[125 213]
[126 212]
[127 211]
[129 210]
[130 209]
[131 208]
[132 207]
[133 206]
[134 205]
[135 204]
[136 203]
[137 202]
[138 201]
[139 199]
[140 198]
[141 197]
[142 196]
[146 195]
[147 194]
[148 193]
[150 192]
[151 191]
[152 190]
[153 189]
[155 186]
[156 185]
[157 184]
[158 183]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 173]
[166 172]
[239 250]
[240 249]
[241 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
