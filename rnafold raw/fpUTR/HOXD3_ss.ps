%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCACAGAUAUCAAAAGAAACCUGAAGAGCCUACAAAAAAAAAAGAGAUAAAGACAAAAUUCAAGAAAACACACACAUACAUAAUUGUGGUCACCUGGAGCCUGGGGGCCGGCCCAGCUCUCUCAGGAUUCAGCAGACAUUGGAGGUGGCAGUGAAGGAUACAGUGGUAGUCA\
) } def
/len { sequence length } bind def

/coor [
[81.39060974 549.51245117]
[80.85824585 534.52191162]
[69.81791687 524.58978271]
[69.06448364 509.39480591]
[79.55705261 497.88204956]
[79.02468872 482.89151001]
[78.49232483 467.90093994]
[77.95996857 452.91040039]
[69.77584076 440.46575928]
[77.01848602 426.39965820]
[73.62817383 419.80599976]
[76.61209106 411.13885498]
[76.34587097 396.14120483]
[76.07964325 381.14355469]
[75.81342316 366.14593506]
[64.69734192 362.67300415]
[54.98861694 356.20620728]
[47.47532272 347.25747681]
[42.77098465 336.54064941]
[41.26448441 324.91464233]
[43.08792877 313.31457520]
[48.10515976 302.67654419]
[55.92183304 293.86212158]
[65.91641235 287.58847046]
[77.28958130 284.37017822]
[78.08791351 269.39144897]
[78.88624573 254.41270447]
[69.57502747 247.75686646]
[64.59438324 237.31872559]
[65.29246521 225.65399170]
[71.61093903 215.68148804]
[82.07064056 209.95278931]
[83.40007782 195.01181030]
[84.72951508 180.07084656]
[86.05895233 165.12986755]
[79.48010254 151.76693726]
[88.41005707 138.70681763]
[89.73949432 123.76584625]
[91.06893158 108.82488251]
[88.49633026 123.60262299]
[83.61557007 137.78634644]
[76.54986572 151.01797485]
[67.47760010 162.96343994]
[56.62783051 173.32115173]
[44.27445984 181.82963562]
[30.72937775 188.27407837]
[16.33454704 192.49176025]
[1.45339060 194.37622070]
[-13.53839493 193.87986755]
[-28.26231766 191.01524353]
[-42.34664917 185.85466003]
[-55.43581009 178.52841187]
[-67.19934082 169.22146606]
[-77.34025574 158.16877747]
[-85.60253143 145.64939880]
[-91.77757263 131.97940063]
[-95.70948029 117.50390625]
[-97.29898834 102.58836365]
[-96.50596619 87.60933685]
[-93.35043335 72.94500732]
[-87.91205597 58.96559143]
[-80.32814026 46.02402115]
[-70.79015350 34.44702911]
[-59.53888702 24.52689362]
[-46.85840988 16.51406479]
[-33.06885147 10.61083984]
[-18.51835251 6.96625233]
[-3.57426524 5.67231750]
[11.38612366 6.76170206]
[25.98511696 10.20690346]
[39.85413742 15.92094040]
[52.64304352 23.75955582]
[64.02896118 33.52484894]
[73.72442627 44.97027969]
[81.48466492 57.80689621]
[87.11376953 71.71060944]
[90.46996307 86.33285522]
[88.34722137 71.48381042]
[86.22447968 56.63477707]
[84.10173798 41.78573608]
[70.32135010 34.65267944]
[63.39559555 20.76694679]
[65.98757172 5.46788502]
[77.10060883 -5.36170340]
[92.46152496 -7.55762148]
[106.16371918 -0.27549347]
[112.93843079 13.68455315]
[110.18064117 28.95459747]
[98.95077515 39.66299438]
[101.07351685 54.51203156]
[103.19625854 69.36106873]
[105.31900787 84.21011353]
[118.92298126 90.52926636]
[131.63899231 82.57295227]
[144.35501099 74.61663818]
[148.01425171 59.47571182]
[161.02343750 51.58802414]
[175.43545532 55.16985321]
[188.15147400 47.21353912]
[200.86749268 39.25722504]
[213.58349609 31.30091095]
[226.29951477 23.34459686]
[233.89437866 9.46552181]
[248.78775024 9.27388668]
[261.50375366 1.31757307]
[274.21978760 -6.63874054]
[286.93579102 -14.59505463]
[299.65182495 -22.55136871]
[312.36782837 -30.50768089]
[325.08383179 -38.46399689]
[337.79986572 -46.42030716]
[341.25845337 -52.11419678]
[346.32049561 -54.78283310]
[351.11138916 -54.42404938]
[364.10177612 -61.92404938]
[377.09216309 -69.42404938]
[387.78607178 -82.57989502]
[403.38815308 -75.94580078]
[401.33242798 -59.11694717]
[384.59216309 -56.43366623]
[371.60177612 -48.93366623]
[358.61138916 -41.43366623]
[345.75616455 -33.70429230]
[333.04016113 -25.74797821]
[320.32412720 -17.79166412]
[307.60812378 -9.83535099]
[294.89212036 -1.87903774]
[282.17608643 6.07727575]
[269.46008301 14.03358936]
[256.74404907 21.98990250]
[250.05873108 35.29988861]
[234.25582886 36.06061554]
[221.53981018 44.01692963]
[208.82379150 51.97323990]
[196.10778809 59.92955399]
[183.39176941 67.88587189]
[180.31047058 82.41312408]
[167.52796936 90.66310120]
[152.31132507 87.33265686]
[139.59530640 95.28897095]
[126.87929535 103.24528503]
[116.27674103 110.62380981]
[106.00989532 110.15431976]
[104.68045807 125.09528351]
[103.35102844 140.03625488]
[109.83477783 154.46786499]
[100.99992371 166.45930481]
[99.67048645 181.40028381]
[98.34104919 196.34124756]
[97.01161194 211.28222656]
[109.71216583 225.30676270]
[108.18735504 243.84626770]
[93.86498260 255.21102905]
[93.06665039 270.18978882]
[92.26831818 285.16851807]
[108.89908600 293.52426147]
[120.19461060 308.25274658]
[123.93144226 326.38208008]
[119.40569305 344.27844238]
[107.56511688 358.37432861]
[90.81105804 365.87969971]
[91.07728577 380.87734985]
[91.34350586 395.87496948]
[91.60972595 410.87261963]
[92.00903320 425.86730957]
[100.23123932 439.38418579]
[92.95051575 452.37805176]
[93.48287964 467.36859131]
[94.01523590 482.35913086]
[94.54759979 497.34970093]
[105.83041382 508.08914185]
[106.15676117 523.29925537]
[95.84879303 533.98950195]
[96.38115692 548.98010254]
[102.98583221 564.59466553]
[89.80984497 575.26373291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[5 170]
[6 169]
[7 168]
[8 167]
[10 165]
[12 164]
[13 163]
[14 162]
[15 161]
[25 155]
[26 154]
[27 153]
[32 150]
[33 149]
[34 148]
[35 147]
[37 145]
[38 144]
[39 143]
[77 92]
[78 91]
[79 90]
[80 89]
[93 141]
[94 140]
[95 139]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[111 123]
[114 122]
[115 121]
[116 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
