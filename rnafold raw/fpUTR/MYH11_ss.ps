%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAUUUGGACGCUCCGGCCUGGGAGGUGCGUCAGAUCCGAGCUCGCCAUCCAGUUUCCUCUCCACUAGUCCCCCCAGUUGGAGAUCUGGGACCAACAAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[93.36615753 101.53832245]
[81.33430481 92.58094788]
[69.30245972 83.62356567]
[57.27061081 74.66618347]
[43.18583679 80.62994385]
[28.10662079 78.75536346]
[16.07031822 69.64527130]
[10.24900532 55.82614517]
[12.11379719 41.04818344]
[0.08194885 32.09080505]
[-11.94989872 23.13342667]
[-23.98174667 14.17604733]
[-48.38935852 22.69868469]
[-72.53445435 8.56098175]
[-85.30120087 16.43563080]
[-92.60374451 31.11912346]
[-108.98585510 31.86648750]
[-117.59501648 17.90889931]
[-109.57487488 3.60472918]
[-93.17584991 3.66888046]
[-80.40910339 -4.20576811]
[-79.31922913 -19.16612244]
[-90.80989838 -28.80793571]
[-102.30056763 -38.44974899]
[-113.79122925 -48.09156418]
[-125.28189850 -57.73337936]
[-140.82688904 -60.67684174]
[-145.60310364 -74.78488922]
[-157.09376526 -84.42670441]
[-168.58442688 -94.06851959]
[-180.07510376 -103.71033478]
[-195.62008667 -106.65380096]
[-200.39630127 -120.76184845]
[-212.02598572 -130.23551941]
[-223.79222107 -139.53904724]
[-239.45857239 -137.45558167]
[-251.95864868 -147.12634277]
[-253.87637329 -162.81385803]
[-244.07398987 -175.21098328]
[-228.36708069 -176.96273804]
[-216.07427979 -167.02983093]
[-214.48867798 -151.30528259]
[-202.72244263 -142.00175476]
[-195.41069031 -140.29556274]
[-190.75448608 -132.25251770]
[-176.03138733 -129.99870300]
[-170.43328857 -115.20100403]
[-158.94261169 -105.55918884]
[-147.45195007 -95.91737366]
[-135.96128845 -86.27555847]
[-121.23818970 -84.02174377]
[-115.64008331 -69.22404480]
[-104.14941406 -59.58222961]
[-92.65875244 -49.94041824]
[-81.16808319 -40.29860306]
[-69.67742157 -30.65678787]
[-60.06840897 -38.22629547]
[-48.63438797 -41.88575745]
[-36.86946487 -41.32335281]
[-26.25403404 -36.76845932]
[-18.06851768 -28.94287872]
[-13.23918724 -18.95131874]
[-12.23465252 -8.12730598]
[-15.02436829 2.14419937]
[-2.99252009 11.10157871]
[9.03932762 20.05895805]
[21.07117653 29.01633644]
[34.69347763 22.99151802]
[49.60163116 24.60490417]
[61.78105545 33.52275085]
[67.90164948 47.43084717]
[66.22798920 62.63433838]
[78.25983429 71.59172058]
[90.29168701 80.54909515]
[102.32353210 89.50647736]
[116.00891113 95.64736176]
[130.69902039 98.68062592]
[145.38912964 101.71389008]
[160.07923889 104.74715424]
[174.76934814 107.78041077]
[186.14906311 97.23139954]
[201.55996704 95.41931915]
[215.07626343 103.04096985]
[221.50064087 117.16565704]
[218.36282349 132.36216736]
[206.86933899 142.78710938]
[191.43968201 144.43190002]
[178.00686646 136.66407776]
[171.73608398 122.47052765]
[157.04597473 119.43726349]
[142.35586548 116.40399933]
[127.66575623 113.37073517]
[112.97564697 110.33747101]
[104.19382477 122.49886322]
[95.41276550 134.65916443]
[102.91276550 147.64955139]
[117.97464752 153.17396545]
[122.90952301 168.43917847]
[113.93176270 181.73501587]
[97.92834473 182.86206055]
[87.17572021 170.95573425]
[89.92238617 155.14955139]
[82.42238617 142.15916443]
[79.41087341 133.35635376]
[78.64667511 124.79332733]
[79.95880127 116.94291687]
[83.08604431 110.22708893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 75]
[2 74]
[3 73]
[4 72]
[9 67]
[10 66]
[11 65]
[12 64]
[14 21]
[15 20]
[22 56]
[23 55]
[24 54]
[25 53]
[26 52]
[28 50]
[29 49]
[30 48]
[31 47]
[33 45]
[34 43]
[35 42]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
