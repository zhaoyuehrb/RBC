%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGGGCGGAAACUUUGCGAGAGUAGCGCGGGAGCUGAGAAGUUGCAGGGUUGAGUUGGUCCCGGCAAGUCCUUGAGCAGUUUGUUCCUCUGUCUUCCCGCUUCCUGGUGCCCCGACUGCGUCCCCACGAACGCCCCGUCCUUACCGCCGGCUGCUGUGGAGUGCCUCGCUGUCUCCCAGGUCCCCGAGUUCCUGGUUUCAGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[264.55065918 746.74816895]
[268.31585693 728.76165771]
[280.74771118 715.11340332]
[275.71078491 700.98437500]
[270.67388916 686.85534668]
[265.63696289 672.72631836]
[260.60003662 658.59722900]
[255.56312561 644.46820068]
[250.52621460 630.33917236]
[245.31916809 625.09436035]
[245.52119446 615.96215820]
[240.69519043 601.75970459]
[235.86920166 587.55725098]
[226.61267090 586.20550537]
[218.43399048 581.54650879]
[212.47753906 574.18371582]
[209.59434509 565.10198975]
[210.22068787 555.53619385]
[214.31257629 546.80310059]
[221.34609985 540.12030029]
[217.37399292 525.65576172]
[213.40190125 511.19125366]
[209.42980957 496.72674561]
[205.45770264 482.26220703]
[200.65518188 476.64459229]
[201.53587341 467.55273438]
[197.77957153 453.03067017]
[194.02326965 438.50860596]
[179.49731445 425.74600220]
[185.18156433 406.40557861]
[180.99455261 392.00180054]
[176.80754089 377.59802246]
[172.62052917 363.19424438]
[168.43351746 348.79046631]
[157.45114136 338.72882080]
[161.02880859 323.31741333]
[156.84179688 308.91363525]
[152.65478516 294.50985718]
[148.46777344 280.10607910]
[144.28076172 265.70230103]
[139.39514160 260.15679932]
[140.14035034 251.05282593]
[127.10858154 243.93183899]
[122.87425995 229.31933594]
[130.43177795 215.69869995]
[126.45967865 201.23417664]
[109.65458679 197.48889160]
[96.99604797 185.68740845]
[92.03289795 169.01493835]
[96.21887207 152.03883362]
[108.48838806 139.45741272]
[104.08738708 125.11756134]
[99.68639374 110.77771759]
[92.48919678 112.41732788]
[84.09641266 108.93569183]
[78.02822876 99.93428040]
[77.66865540 87.27639771]
[70.59155273 74.05087280]
[63.51444244 60.82534790]
[56.43733978 47.59981918]
[49.36023331 34.37429047]
[42.28312683 21.14876366]
[26.41997337 11.79772663]
[27.66984940 -5.70669365]
[20.29916000 -18.77087975]
[12.83141899 -31.77983093]
[5.36367750 -44.78878403]
[-2.10406375 -57.79773712]
[-15.68474960 -65.91410828]
[-15.31073666 -80.80402374]
[-22.77847672 -93.81297302]
[-30.24621773 -106.82192230]
[-37.71395874 -119.83087921]
[-51.49029541 -120.28189087]
[-63.15229416 -127.42445374]
[-69.70970917 -139.30174255]
[-69.54336548 -152.75968933]
[-62.80363846 -164.28437805]
[-70.07686615 -177.40306091]
[-77.35009766 -190.52175903]
[-84.72078705 -203.58593750]
[-92.18852997 -216.59489441]
[-99.65627289 -229.60385132]
[-115.06909943 -230.27343750]
[-127.65999603 -239.18818665]
[-133.41125488 -253.50344849]
[-130.48767090 -268.65124512]
[-119.82215118 -279.79800415]
[-104.81802368 -283.38681030]
[-90.26304626 -278.27252197]
[-80.80165863 -266.08703613]
[-79.45296478 -250.71875000]
[-86.64731598 -237.07159424]
[-79.17958069 -224.06263733]
[-71.71183777 -211.05368042]
[-65.65557098 -206.81771851]
[-64.23140717 -197.79498291]
[-56.95817566 -184.67630005]
[-49.68494415 -171.55760193]
[-33.33569717 -170.08128357]
[-20.96406364 -159.04023743]
[-17.57764053 -142.63800049]
[-24.70500755 -127.29861450]
[-17.23726654 -114.28966522]
[-9.76952457 -101.28071594]
[-2.30178380 -88.27175903]
[10.74475861 -81.08587646]
[10.90488911 -65.26548004]
[18.37262917 -52.25652313]
[25.84037018 -39.24757385]
[33.30811310 -26.23862076]
[39.36437607 -22.00264740]
[40.78854370 -12.97992325]
[52.32645798 -9.34632015]
[58.49327087 1.52355564]
[55.50865555 14.07165813]
[62.58576202 27.29718590]
[69.66286469 40.52271271]
[76.73997498 53.74824142]
[83.81707764 66.97377014]
[90.89418030 80.19929504]
[105.80075836 81.87083435]
[115.63134003 70.54124451]
[125.46191406 59.21165085]
[135.29249573 47.88205719]
[131.65710449 32.79684830]
[137.61398315 18.46871758]
[150.87257385 10.40712452]
[166.33468628 11.71191692]
[178.05484009 21.88137436]
[181.52636719 37.00513458]
[175.41441345 51.26779938]
[162.06915283 59.18508911]
[146.62208557 57.71263885]
[136.79150391 69.04222870]
[126.96092987 80.37182617]
[117.13034821 91.70141602]
[114.02623749 106.37671661]
[118.42723846 120.71656799]
[122.82823181 135.05641174]
[135.63246155 136.73912048]
[146.80860901 143.11630249]
[154.71392822 153.20993042]
[158.20181274 165.49868774]
[156.78813171 178.14738464]
[150.71800232 189.28085327]
[140.92419434 197.26206970]
[144.89630127 211.72659302]
[158.35005188 219.57734680]
[162.17227173 234.30300903]
[154.60487366 247.08073425]
[158.68453979 261.51528931]
[162.87155151 275.91906738]
[167.05856323 290.32284546]
[171.24557495 304.72662354]
[175.43258667 319.13040161]
[186.71444702 330.22232056]
[182.83731079 344.60345459]
[187.02432251 359.00723267]
[191.21133423 373.41101074]
[195.39834595 387.81478882]
[199.58534241 402.21856689]
[209.40452576 406.89749146]
[214.91424561 416.02017212]
[214.50205994 426.44985962]
[208.54533386 434.75228882]
[212.30162048 449.27435303]
[216.05792236 463.79641724]
[219.92224121 478.29010010]
[223.89433289 492.75463867]
[227.86642456 507.21914673]
[231.83851624 521.68365479]
[235.81062317 536.14819336]
[254.72236633 545.34149170]
[260.61505127 565.22045898]
[250.07165527 582.73126221]
[254.89764404 596.93371582]
[259.72366333 611.13616943]
[264.65524292 625.30230713]
[269.69216919 639.43133545]
[274.72906494 653.56036377]
[279.76599121 667.68939209]
[284.80291748 681.81842041]
[289.83981323 695.94744873]
[294.87673950 710.07647705]
[306.87872314 710.70959473]
[317.93237305 715.33929443]
[326.75198364 723.40179443]
[332.32028198 733.93542480]
[334.00564575 745.69549561]
[331.63375854 757.30126953]
[325.50534058 767.39794922]
[316.35815430 774.81500244]
[320.75915527 789.15484619]
[325.16015625 803.49468994]
[329.66778564 817.80139160]
[334.28179932 832.07409668]
[338.89578247 846.34686279]
[351.42242432 856.93060303]
[348.25399780 873.02075195]
[332.64996338 878.06512451]
[320.66238403 866.87451172]
[324.62304688 850.96087646]
[320.00906372 836.68811035]
[315.39505005 822.41540527]
[310.34646606 817.01782227]
[310.82031250 807.89569092]
[306.41931152 793.55584717]
[302.01831055 779.21600342]
[284.18957520 775.97448730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[11 178]
[12 177]
[13 176]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[26 168]
[27 167]
[28 166]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[42 151]
[45 148]
[46 147]
[51 140]
[52 139]
[53 138]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[64 113]
[65 111]
[66 110]
[67 109]
[68 108]
[70 106]
[71 105]
[72 104]
[73 103]
[78 99]
[79 98]
[80 97]
[81 95]
[82 94]
[83 93]
[122 137]
[123 136]
[124 135]
[125 134]
[193 209]
[194 208]
[195 207]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
