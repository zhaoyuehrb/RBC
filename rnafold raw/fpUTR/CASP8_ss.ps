%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGAGUCAUCUCUGUUCUGCUUUAGGAGUAAAGUUUACCCUGCAGUUCCUUCUGUGGUGAAGUUUUCUCUUUCUCUCGGAGACCAGAUUCUGCCUUUCUGCUGGAGGGAAGUGUUUUCACAGGUUCUCCUCCUUUUAUCUUUUGUGUUUUUUUUCAAGCCCUGCUGAAUUUGCUAGUCAACUCAACAGGAAGUGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[-41.67560577 140.80525208]
[-48.97373581 141.44714355]
[-55.97512436 139.53356934]
[-61.82140350 135.34809875]
[-65.81290436 129.44978333]
[-80.78388977 130.38233948]
[-95.75486755 131.31488037]
[-110.72585297 132.24742126]
[-125.69683838 133.17996216]
[-141.96591187 145.07489014]
[-158.89505005 135.74058533]
[-173.82978821 137.13827515]
[-188.76454163 138.53596497]
[-203.69927979 139.93365479]
[-218.63401794 141.33134460]
[-233.56875610 142.72903442]
[-236.31433105 154.17214966]
[-242.14521790 164.37168884]
[-250.58540344 172.51669312]
[-260.95184326 177.96304321]
[-272.40988159 180.28437805]
[-284.04031372 179.30549622]
[-294.91317749 175.11550903]
[-304.16217041 168.05979919]
[-311.05358887 158.71170044]
[-315.04458618 147.82574463]
[-330.03732300 148.29225159]
[-345.03005981 148.75874329]
[-360.02282715 149.22525024]
[-375.01556396 149.69174194]
[-388.56842041 157.85447693]
[-401.53018188 150.51673889]
[-416.52291870 150.98324585]
[-431.51565552 151.44973755]
[-445.06851196 159.61247253]
[-458.03027344 152.27473450]
[-473.02301025 152.74124146]
[-488.01574707 153.20773315]
[-503.00851440 153.67422485]
[-518.00122070 154.14073181]
[-532.99401855 154.60722351]
[-538.81610107 157.76466370]
[-544.50372314 157.53665161]
[-548.45867920 154.84776306]
[-563.45867920 154.84776306]
[-578.45867920 154.84776306]
[-593.45867920 154.84776306]
[-604.45538330 166.19889832]
[-620.25878906 166.36599731]
[-631.49304199 155.24990845]
[-631.49304199 139.44561768]
[-620.25878906 128.32952881]
[-604.45538330 128.49662781]
[-593.45867920 139.84776306]
[-578.45867920 139.84776306]
[-563.45867920 139.84776306]
[-548.45867920 139.84776306]
[-533.46051025 139.61448669]
[-518.46777344 139.14797974]
[-503.47500610 138.68148804]
[-488.48226929 138.21499634]
[-473.48950195 137.74848938]
[-458.49676514 137.28199768]
[-446.01629639 129.15261841]
[-431.98214722 136.45700073]
[-416.98941040 135.99049377]
[-401.99667358 135.52400208]
[-389.51617432 127.39462280]
[-375.48205566 134.69900513]
[-360.48931885 134.23249817]
[-345.49655151 133.76600647]
[-330.50381470 133.29949951]
[-315.51107788 132.83300781]
[-308.80480957 115.70746613]
[-295.25027466 103.20114136]
[-277.54394531 97.86254883]
[-259.23486328 100.80822754]
[-244.01315308 111.48955536]
[-234.96644592 127.79428864]
[-220.03170776 126.39659882]
[-205.09696960 124.99890900]
[-190.16223145 123.60121918]
[-175.22747803 122.20352936]
[-160.29273987 120.80583954]
[-154.50007629 112.37738037]
[-144.81970215 108.44984436]
[-134.36120605 110.54566956]
[-126.62938690 118.20898438]
[-111.65840149 117.27643585]
[-96.68741608 116.34389496]
[-81.71643066 115.41134644]
[-66.74544525 114.47880554]
[-49.49870300 100.10518646]
[-28.80150032 110.57318878]
[-13.94820118 108.48046112]
[0.90509737 106.38773346]
[15.75839615 104.29499817]
[30.61169434 102.20227051]
[42.13502121 92.76499176]
[56.87969971 98.50128937]
[71.73299408 96.40855408]
[73.14987183 80.60797119]
[83.71090698 65.94840240]
[102.24153900 57.68575287]
[124.64794159 59.98149109]
[132.81100464 47.39719772]
[140.97406006 34.81290436]
[149.13713074 22.22861481]
[157.30018616 9.64432240]
[165.36515808 -3.00306654]
[173.33151245 -15.71278763]
[181.29788208 -28.42250824]
[188.96560669 -41.31459808]
[196.33052063 -54.38204193]
[203.69543457 -67.44948578]
[202.98443604 -83.83321381]
[216.96110535 -92.41136932]
[231.24743652 -84.35948944]
[231.14688110 -67.96064758]
[216.76287842 -60.08457565]
[209.39796448 -47.01713181]
[202.03305054 -33.94968796]
[202.62783813 -30.46733475]
[201.56091309 -26.52366257]
[198.63380432 -22.90489388]
[194.00759888 -20.45614052]
[186.04124451 -7.74642038]
[178.07487488 4.96330023]
[177.18554688 12.30575562]
[169.88449097 17.80738449]
[161.72142029 30.39167595]
[153.55836487 42.97596741]
[145.39529419 55.56026077]
[137.23223877 68.14455414]
[140.50137329 74.89456940]
[153.69836426 67.76439667]
[166.89535522 60.63422394]
[180.09234619 53.50405121]
[193.28933716 46.37387466]
[205.56396484 37.75218964]
[218.41098022 45.49520493]
[216.52067566 60.37561798]
[202.14585876 64.66057587]
[188.36929321 70.59408569]
[174.59274292 76.52759552]
[160.81619263 82.46110535]
[147.03962708 88.39461517]
[150.30876160 95.14463043]
[165.24349976 96.54232025]
[180.17825317 97.94001007]
[195.11299133 99.33769989]
[207.11952209 89.06060791]
[222.86975098 90.36679077]
[233.01931763 102.48131561]
[231.54669189 118.21684265]
[219.32553101 128.23777771]
[203.60646057 126.59885406]
[193.71530151 114.27243805]
[178.78056335 112.87474823]
[163.84580994 111.47705841]
[148.91107178 110.07937622]
[142.58355713 123.67945862]
[153.27230835 134.20326233]
[163.96107483 144.72706604]
[174.64982605 155.25086975]
[189.91200256 159.41941833]
[193.55285645 173.86218262]
[204.24162292 184.38597107]
[214.93037415 194.90977478]
[227.81527710 195.59129333]
[236.50169373 204.58273315]
[236.72256470 216.68180847]
[247.24636841 227.37057495]
[257.77017212 238.05932617]
[273.73699951 239.62141418]
[282.34963989 253.15661621]
[277.00125122 268.28189087]
[261.79461670 273.39443970]
[248.39498901 264.57232666]
[247.08142090 248.58312988]
[236.55761719 237.89437866]
[226.03381348 227.20561218]
[208.89363098 223.45420837]
[204.40657043 205.59854126]
[193.71781921 195.07473755]
[183.02905273 184.55093384]
[168.53141785 181.13513184]
[164.12602234 165.93963623]
[153.43727112 155.41583252]
[142.74850464 144.89202881]
[132.05975342 134.36822510]
[92.24544525 136.94201660]
[73.82572937 111.26185608]
[58.97242737 113.35458374]
[46.38669586 122.94155121]
[32.70442581 117.05557251]
[17.85112572 119.14830017]
[2.99782753 121.24102783]
[-11.85547161 123.33376312]
[-26.70877075 125.42649078]
[-29.77612686 132.30415344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 92]
[6 91]
[7 90]
[8 89]
[9 88]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[32 67]
[33 66]
[34 65]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[44 57]
[45 56]
[46 55]
[47 54]
[94 200]
[95 199]
[96 198]
[97 197]
[98 196]
[100 194]
[101 193]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 128]
[111 127]
[112 126]
[113 122]
[114 121]
[115 120]
[148 161]
[149 160]
[150 159]
[151 158]
[162 191]
[163 190]
[164 189]
[165 188]
[167 186]
[168 185]
[169 184]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
