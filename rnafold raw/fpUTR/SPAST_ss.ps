%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCGAGCCACCGACUGCAGGAGGAGAAGGGGUUGUGCUCCUGGCCGAGGAAGGAGAAAGGGGCGGGGCCGGCGGGCAGCGUGCGGCAGUGCGGAGCUCCUGAGACCGGCGGGCACACGGGGGUCUGUGGCCCCCGCCGUAGCAGUGGCUGCCGCCGUCGCUUGGUUCCCGUCGGUCUGCGGGAGGCGGGUUAUGGCGGCGGCGGCAGUGAGAGCUGUGA\
) } def
/len { sequence length } bind def

/coor [
[158.36273193 90.91767883]
[150.23088074 74.73783875]
[135.28492737 73.46575165]
[120.33895874 72.19366455]
[105.39299774 70.92156982]
[124.00741577 104.60418701]
[96.24626160 118.94729614]
[87.84664154 131.37493896]
[79.44701385 143.80258179]
[71.04739380 156.23023987]
[68.83745575 165.08480835]
[62.43994522 168.77316284]
[53.86530304 181.08068848]
[56.44013977 196.44323730]
[47.56890869 208.80268860]
[32.90719604 211.16273499]
[24.33255196 223.47027588]
[22.79225731 239.21632385]
[9.16832924 245.23609924]
[8.31747723 261.61315918]
[-6.41185951 268.82278442]
[-19.86740112 259.44833374]
[-18.20724106 243.13343811]
[-3.13920951 236.66146851]
[-2.21223044 221.79573059]
[12.02501392 214.89562988]
[20.59965706 202.58808899]
[17.73400116 188.01675415]
[26.25458336 175.41300964]
[41.55776215 172.50605774]
[50.13240433 160.19851685]
[58.61975098 147.83061218]
[67.01937103 135.40296936]
[75.41899109 122.97531891]
[83.81861877 110.54767609]
[76.44620514 106.54013824]
[70.44483185 98.93621826]
[55.54085922 100.63075256]
[40.63687897 102.32528687]
[25.73290253 104.01982117]
[10.82892418 105.71435547]
[-4.07505417 107.40888214]
[-18.97903252 109.10341644]
[-30.20991135 124.36837006]
[-48.71557999 126.53116608]
[-62.67625046 114.68093872]
[-77.52630615 116.79656219]
[-86.81208801 129.58522034]
[-102.43395233 131.97956848]
[-115.12371826 122.55909729]
[-117.35277557 106.91278839]
[-107.79866791 94.32333374]
[-92.12966919 92.25981903]
[-79.64192200 101.94650269]
[-64.79187012 99.83087921]
[-60.08848572 89.44676208]
[-50.86309814 82.54821777]
[-39.33554459 80.93947601]
[-28.35007095 85.13415527]
[-20.67356491 94.19944000]
[-5.76958704 92.50490570]
[9.13439083 90.81037140]
[24.03836823 89.11584473]
[38.94234467 87.42131042]
[53.84632492 85.72677612]
[68.75030518 84.03224182]
[71.88784027 77.22005463]
[78.16291809 63.59568787]
[81.30045319 56.78350449]
[72.90083313 44.35586166]
[64.50121307 31.92821503]
[56.10158920 19.50057030]
[47.70196915 7.07292604]
[39.04045868 -5.17363358]
[30.12095833 -17.23359108]
[21.20146179 -29.29354668]
[12.28196430 -41.35350418]
[4.66940928 -46.38701630]
[3.32301021 -53.64782333]
[-5.42493582 -65.83278656]
[-14.17288208 -78.01776123]
[-31.12596703 -85.21576691]
[-32.16998672 -102.73709869]
[-41.08948517 -114.79705811]
[-50.00898361 -126.85700989]
[-58.92847824 -138.91697693]
[-74.17362976 -144.95994568]
[-76.29481506 -161.22132874]
[-63.10994720 -170.97280884]
[-48.18248749 -164.18289185]
[-46.86852264 -147.83647156]
[-37.94902420 -135.77650452]
[-29.02952766 -123.71655273]
[-20.11002922 -111.65659332]
[-8.20194054 -109.55855560]
[-0.67152864 -99.59122467]
[-1.98791397 -86.76570129]
[6.76003218 -74.58073425]
[15.50797844 -62.39576721]
[24.34192085 -50.27300262]
[33.26141739 -38.21304703]
[42.18091583 -26.15308762]
[51.10041428 -14.09313107]
[54.50639343 -13.21096992]
[57.65614319 -10.63995266]
[59.76264572 -6.51757288]
[60.12961197 -1.32669556]
[68.52923584 11.10094929]
[76.92885590 23.52859306]
[85.32847595 35.95623779]
[93.72810364 48.38388443]
[106.66509247 55.97560883]
[121.61105347 57.24769974]
[136.55700684 58.51978683]
[151.50297546 59.79187775]
[157.27619934 49.97826004]
[166.13188171 42.95596695]
[176.84289551 39.62100601]
[187.95248413 40.36371994]
[194.89440918 27.06673241]
[201.83631897 13.76974773]
[208.77822876 0.47276258]
[215.72015381 -12.82422256]
[222.66206360 -26.12120819]
[229.60397339 -39.41819382]
[236.54589844 -52.71517944]
[238.51628113 -69.55423737]
[255.24272156 -72.32237244]
[262.53302002 -57.01589966]
[249.84288025 -45.77326202]
[242.90097046 -32.47628021]
[235.95904541 -19.17929268]
[229.01713562 -5.88230801]
[222.07522583 7.41467762]
[215.13330078 20.71166229]
[208.19139099 34.00864792]
[201.24948120 47.30563354]
[209.34979248 59.14406586]
[211.09046936 73.38252258]
[225.08654785 78.77785492]
[239.08262634 84.17318726]
[253.07872009 89.56851959]
[267.07479858 94.96384430]
[281.07089233 100.35917664]
[295.37756348 94.19823456]
[309.49472046 99.86924744]
[315.28005981 113.54642487]
[330.93963623 111.29073334]
[340.03210449 123.08805084]
[354.02816772 128.48338318]
[368.02426147 133.87870789]
[382.02035522 139.27404785]
[396.01641846 144.66937256]
[410.01251221 150.06469727]
[424.00860596 155.46003723]
[438.00469971 160.85536194]
[452.00076294 166.25070190]
[465.99685669 171.64602661]
[479.99295044 177.04135132]
[493.98901367 182.43669128]
[507.98510742 187.83201599]
[521.98120117 193.22735596]
[535.97729492 198.62268066]
[546.38598633 189.28463745]
[559.73840332 185.35931396]
[573.41412354 187.55763245]
[584.75482178 195.39459229]
[591.58099365 207.29473877]
[592.61059570 220.90867615]
[606.52893066 226.50152588]
[620.44726562 232.09437561]
[634.36560059 237.68722534]
[648.28393555 243.28005981]
[662.20227051 248.87290955]
[674.34484863 244.53865051]
[685.81927490 249.47740173]
[690.69415283 260.54266357]
[704.53192139 266.33190918]
[720.72064209 263.71337891]
[730.87164307 276.59320068]
[724.54241943 291.72174072]
[708.24389648 293.53604126]
[698.74267578 280.16970825]
[684.90490723 274.38046265]
[667.63940430 277.54113770]
[656.60943604 262.79125977]
[642.69110107 257.19839478]
[628.77276611 251.60556030]
[614.85443115 246.01271057]
[600.93609619 240.41986084]
[587.01776123 234.82701111]
[574.54699707 245.10862732]
[558.50000000 247.71089172]
[543.24383545 241.82963562]
[532.97875977 228.98254395]
[530.58197021 212.61875916]
[516.58587646 207.22343445]
[502.58978271 201.82810974]
[488.59368896 196.43276978]
[474.59762573 191.03744507]
[460.60153198 185.64210510]
[446.60543823 180.24678040]
[432.60934448 174.85145569]
[418.61328125 169.45611572]
[404.61718750 164.06079102]
[390.62109375 158.66545105]
[376.62500000 153.27012634]
[362.62893677 147.87480164]
[348.63284302 142.47946167]
[334.63674927 137.08413696]
[319.97827148 139.72573853]
[309.88473511 127.54251099]
[296.41580200 133.79737854]
[282.14492798 128.52513123]
[275.67556763 114.35526276]
[261.67947388 108.95993042]
[247.68339539 103.56460571]
[233.68730164 98.16927338]
[219.69122314 92.77394104]
[205.69512939 87.37860870]
[191.80596924 98.36397552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 115]
[3 114]
[4 113]
[5 112]
[7 35]
[8 34]
[9 33]
[10 32]
[12 31]
[13 30]
[16 27]
[17 26]
[19 24]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[46 55]
[47 54]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 103]
[75 102]
[76 101]
[77 100]
[79 99]
[80 98]
[81 97]
[83 94]
[84 93]
[85 92]
[86 91]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[126 130]
[139 220]
[140 219]
[141 218]
[142 217]
[143 216]
[144 215]
[147 212]
[149 210]
[150 209]
[151 208]
[152 207]
[153 206]
[154 205]
[155 204]
[156 203]
[157 202]
[158 201]
[159 200]
[160 199]
[161 198]
[162 197]
[163 196]
[169 191]
[170 190]
[171 189]
[172 188]
[173 187]
[174 186]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
