%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACUGGCCGCGGCGGCCUCCAGGAAGCGGAAAAGCAAGGGGCGGUCGAGCUGGGCCGCCGCGCCCCACUGCUCGCCGCGCUGCUCUUUGACCUCGCAGGGUGUGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[195.11900330 242.65449524]
[188.85731506 237.52749634]
[184.24882507 230.84179688]
[181.66798401 223.11399841]
[181.33181763 214.94628906]
[183.28186035 206.97961426]
[187.37962341 199.84333801]
[178.42843628 187.80686951]
[169.47724915 175.77041626]
[162.86764526 172.23130798]
[160.45007324 163.27264404]
[151.83694458 150.99201965]
[143.22380066 138.71138000]
[134.61067200 126.43074799]
[125.99754333 114.15011597]
[117.38440704 101.86948395]
[106.30100250 114.76808167]
[91.06498718 111.58153534]
[77.10914612 117.08013153]
[67.33046722 130.24484253]
[51.07350159 128.09008789]
[45.06201553 112.83248901]
[55.48011398 100.16777039]
[71.61054993 103.12429047]
[85.56639099 97.62569427]
[93.09326172 85.50531769]
[108.66366577 84.81272125]
[103.75167847 70.63977814]
[98.83968353 56.46683121]
[93.92769623 42.29388809]
[89.01570129 28.12094307]
[74.01528931 25.13184166]
[62.60042953 15.10199642]
[57.77063370 0.80026728]
[60.72813416 -13.90038490]
[70.58048248 -25.07163620]
[65.66848755 -39.24457932]
[60.76298141 -44.01304626]
[59.32969666 -49.69721985]
[60.90129852 -54.34384155]
[49.67365265 -65.49060822]
[53.62086105 -79.85267639]
[49.50411987 -94.27669525]
[45.38737869 -108.70072174]
[41.27063751 -123.12474060]
[37.15389633 -137.54876709]
[33.03715515 -151.97279358]
[28.92041588 -166.39680481]
[14.98710823 -173.85592651]
[10.48919678 -189.00665283]
[18.09521294 -202.86032104]
[33.29264069 -207.19779968]
[47.06511688 -199.44573975]
[51.24167633 -184.20330811]
[43.34444046 -170.51354980]
[47.46117783 -156.08952332]
[51.57791901 -141.66551208]
[55.69466019 -127.24148560]
[59.81140137 -112.81745911]
[63.92814255 -98.39344025]
[68.04488373 -83.96941376]
[78.97807312 -73.85434723]
[75.32532501 -58.46058273]
[79.84143066 -44.15657043]
[84.75342560 -29.98362732]
[99.40576172 -27.30508804]
[110.82604218 -17.58741951]
[115.88229370 -3.36417413]
[113.12223816 11.57834530]
[103.18865204 23.20895195]
[108.10063934 37.38189697]
[113.01262665 51.55484009]
[117.92462158 65.72778320]
[122.83660889 79.90073395]
[129.66503906 93.25634766]
[138.27816772 105.53697968]
[146.89131165 117.81761169]
[155.50444031 130.09825134]
[164.11756897 142.37887573]
[172.73069763 154.65951538]
[181.51371765 166.81922913]
[190.46488953 178.85569763]
[199.41607666 190.89215088]
[222.38523865 191.69825745]
[237.51086426 208.66317749]
[235.72764587 231.06640625]
[246.83753967 241.14460754]
[257.94741821 251.22282410]
[269.05731201 261.30102539]
[280.16720581 271.37924194]
[298.19702148 274.78430176]
[303.03939819 291.58905029]
[314.42517090 301.35452271]
[325.81091309 311.11999512]
[337.19665527 320.88549805]
[353.40588379 323.37414551]
[359.10229492 338.75213623]
[348.42590332 351.19992065]
[332.35971069 347.91226196]
[327.43118286 332.27124023]
[316.04544067 322.50576782]
[304.65966797 312.74026489]
[293.27392578 302.97479248]
[281.10345459 303.56527710]
[271.52371216 295.39990234]
[270.08898926 282.48913574]
[258.97909546 272.41091919]
[247.86921692 262.33270264]
[236.75932312 252.25450134]
[225.64942932 242.17628479]
[218.42146301 245.56733704]
[210.50942993 246.82369995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 83]
[8 82]
[9 81]
[11 80]
[12 79]
[13 78]
[14 77]
[15 76]
[16 75]
[18 25]
[19 24]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[36 65]
[37 64]
[40 63]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[86 110]
[87 109]
[88 108]
[89 107]
[90 106]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
