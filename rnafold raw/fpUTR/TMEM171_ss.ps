%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCUCCGCACCAGGACGCGCGGUGGGUAGGGUGCAGGGCGGCCGGCGCAGCCGAGGCCGCGUGCGGAGGCGGACGCCGCGCCCAGCCAGUGCCCACAGCAGCGCGGUCAGCCAGGCGCCGGACCCAGCUUCAGAGCUGCUGAAAUCUUGGAGGGAAGAAAACACAUCCCACCCUGCCUCCGGGAAGGGGCCUCUCCUGGAC\
) } def
/len { sequence length } bind def

/coor [
[65.22286987 244.06024170]
[57.75607300 257.06973267]
[50.38917923 270.13607788]
[43.12261963 283.25845337]
[35.85606003 296.38085938]
[28.58950233 309.50323486]
[28.67297554 325.32421875]
[15.73861980 332.71014404]
[8.47206116 345.83251953]
[1.20550239 358.95492554]
[-6.06105661 372.07730103]
[-5.97758245 387.89828491]
[-18.91193962 395.28421021]
[-14.30887413 410.40332031]
[-21.81845474 424.30947876]
[-36.98538208 428.75244141]
[-50.81138611 421.09625244]
[-55.09374237 405.88320923]
[-47.29180527 392.13891602]
[-32.03432846 388.01763916]
[-32.63755417 373.13525391]
[-19.18344688 364.81072998]
[-11.91688728 351.68835449]
[-4.65032864 338.56597900]
[2.61623001 325.44357300]
[2.01300335 310.56118774]
[15.46711254 302.23666382]
[22.73367119 289.11428833]
[30.00023079 275.99188232]
[37.26678848 262.86950684]
[37.75721359 255.49154663]
[44.74657822 249.60293579]
[52.21337509 236.59344482]
[50.84340668 214.83570862]
[61.91072845 199.29953003]
[77.72537994 195.07788086]
[80.01512146 180.25367737]
[82.30486298 165.42945862]
[84.59459686 150.60525513]
[86.88433838 135.78105164]
[89.17407990 120.95684814]
[64.12185669 90.48662567]
[102.10442352 49.39566422]
[94.43914032 36.50212097]
[86.67529297 23.66769028]
[78.81332397 10.89312458]
[70.95136261 -1.88144064]
[63.08940125 -14.65600586]
[55.22743607 -27.43057251]
[47.36547089 -40.20513535]
[39.50350952 -52.97970200]
[21.35572052 -61.74869156]
[21.64052391 -81.08000183]
[13.39077854 -93.60764313]
[2.62243676 -95.18306732]
[-5.33558416 -102.28072357]
[-8.01449299 -112.37500000]
[-4.76250172 -122.06811523]
[-12.62446594 -134.84268188]
[-20.48642921 -147.61724854]
[-28.34839439 -160.39181519]
[-36.21035767 -173.16636658]
[-44.07232285 -185.94093323]
[-51.93428421 -198.71549988]
[-59.89390182 -211.42945862]
[-67.95070648 -224.08204651]
[-76.00750732 -236.73463440]
[-84.16101837 -249.32510376]
[-99.38291168 -252.63140869]
[-107.57086945 -265.45373535]
[-104.32501221 -279.94509888]
[-112.57476044 -292.47274780]
[-120.82450867 -305.00039673]
[-129.07424927 -317.52801514]
[-144.45611572 -318.36727905]
[-156.25643921 -327.99047852]
[-160.08233643 -342.54473877]
[-154.66925049 -356.39526367]
[-162.91899109 -368.92288208]
[-178.42527771 -369.50146484]
[-190.60922241 -379.11038208]
[-194.78584290 -394.05480957]
[-189.34916687 -408.58828735]
[-176.38967896 -417.12240601]
[-160.89057922 -416.37564087]
[-148.81159973 -406.63513184]
[-144.79733276 -391.64627075]
[-150.39135742 -377.17263794]
[-142.14161682 -364.64498901]
[-127.27926636 -364.14633179]
[-115.42014313 -354.88214111]
[-111.24121857 -340.24008179]
[-116.54661560 -325.77777100]
[-108.29686737 -313.25012207]
[-100.04712677 -300.72250366]
[-91.79737854 -288.19485474]
[-77.20242310 -285.45208740]
[-68.65754700 -272.86477661]
[-71.63337708 -257.57485962]
[-65.32615662 -253.71560669]
[-63.35491562 -244.79142761]
[-55.29811478 -232.13883972]
[-47.24131393 -219.48625183]
[-40.99396896 -215.53080750]
[-39.15972137 -206.57746887]
[-31.29775620 -193.80290222]
[-23.43579292 -181.02833557]
[-15.57382774 -168.25376892]
[-7.71186447 -155.47920227]
[0.15009964 -142.70463562]
[8.01206398 -129.93006897]
[25.64917755 -122.01091766]
[25.91841507 -101.85739136]
[34.16816330 -89.32975006]
[44.32696533 -88.17624664]
[52.34048080 -81.47888947]
[55.40559006 -71.26557159]
[52.27807236 -60.84166718]
[60.14003754 -48.06710052]
[68.00199890 -35.29253387]
[75.86396790 -22.51797104]
[83.72592926 -9.74340439]
[91.58789062 3.03116083]
[99.44985962 15.80572605]
[105.63585663 19.85643959]
[107.33268738 28.83684158]
[114.99796295 41.73038483]
[129.62915039 45.03617477]
[142.09321594 36.69068146]
[154.55726624 28.34518623]
[167.02133179 19.99968910]
[179.48538208 11.65419483]
[186.23500061 -3.29153323]
[202.57781982 -4.64959669]
[211.70175171 8.97706318]
[204.22087097 23.57050705]
[187.83087158 24.11825180]
[175.36682129 32.46374512]
[162.90277100 40.80924225]
[150.43870544 49.15473557]
[137.97465515 57.50023270]
[143.68833923 71.36940002]
[158.41397095 68.51352692]
[173.13960266 65.65766144]
[187.86521912 62.80179596]
[199.88484192 51.64559937]
[215.47434998 56.73471069]
[218.59660339 72.83389282]
[206.03968811 83.38168335]
[190.72108459 77.52742004]
[175.99546814 80.38328552]
[161.26983643 83.23915100]
[146.54421997 86.09502411]
[146.14213562 93.58423615]
[144.93588257 116.05187988]
[159.27108765 120.46797180]
[173.60627747 124.88407135]
[187.94148254 129.30017090]
[203.40795898 125.96864319]
[213.29324341 137.11001587]
[227.14440918 129.49946594]
[242.29661560 133.99240112]
[249.76029968 147.92324829]
[245.10742188 163.02709961]
[231.09843445 170.34309387]
[216.04461670 165.53077698]
[208.87715149 151.44522095]
[194.43603516 155.09262085]
[183.52539062 143.63537598]
[169.19018555 139.21928406]
[154.85498047 134.80317688]
[140.51977539 130.38708496]
[119.36417389 131.66661072]
[103.99828339 123.24658203]
[101.70854187 138.07078552]
[99.41880798 152.89498901]
[97.12906647 167.71920776]
[94.83932495 182.54341125]
[92.54959106 197.36761475]
[110.37280273 211.76303101]
[108.99150085 240.07827759]
[114.81129456 253.90325928]
[120.63109589 267.72824097]
[126.45088959 281.55319214]
[132.27069092 295.37817383]
[138.09048462 309.20315552]
[143.91027832 323.02813721]
[149.83583069 336.80810547]
[155.86680603 350.54226685]
[169.39765930 359.80770874]
[167.86938477 376.13546753]
[152.85414124 382.72900391]
[139.79832458 372.80541992]
[142.13264465 356.57324219]
[136.10166931 342.83908081]
[130.53134155 337.97634888]
[130.08529663 328.84793091]
[124.26550293 315.02294922]
[118.44570923 301.19796753]
[112.62591553 287.37301636]
[106.80611420 273.54803467]
[100.98632050 259.72305298]
[95.16651917 245.89807129]
[87.68061066 245.43861389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 30]
[4 29]
[5 28]
[6 27]
[8 25]
[9 24]
[10 23]
[11 22]
[13 20]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[43 127]
[44 126]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
[53 114]
[54 113]
[58 111]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 103]
[66 102]
[67 101]
[68 99]
[71 96]
[72 95]
[73 94]
[74 93]
[78 89]
[79 88]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[142 153]
[143 152]
[144 151]
[145 150]
[155 172]
[156 171]
[157 170]
[158 169]
[160 167]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
