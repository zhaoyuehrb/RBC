%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAGACGGUGAUUGGGCUGCUGGAAGCUGGGAGGGGUGAGGGACUGGAGGGAGUCGGAGAAAAAGCUGACCUAAUGAAACUGUGGCAACGUCAGCGCUUGAGGCUUGAAGAGGGAGACAAGCUAAAAGAGGAUAUCCAGUUGUUUC\
) } def
/len { sequence length } bind def

/coor [
[88.12579346 307.75747681]
[88.13796234 322.88543701]
[83.47280121 337.27612305]
[74.58737183 349.51965332]
[62.35217285 358.41656494]
[47.96588135 363.09521484]
[32.83792114 363.09722900]
[18.45037651 358.42245483]
[6.21279049 349.52880859]
[-2.67592096 337.28765869]
[-7.34493303 322.89822388]
[-7.33682346 307.77026367]
[-2.65238714 293.38586426]
[6.24944305 281.15423584]
[18.49655533 272.27374268]
[32.88910675 267.61434937]
[48.01705551 267.63259888]
[52.65230942 253.36676025]
[57.28756332 239.10090637]
[61.92282104 224.83506775]
[58.49715424 210.33975220]
[70.12024689 199.60597229]
[74.75550842 185.34011841]
[79.39076233 171.07426453]
[84.02601624 156.80842590]
[88.66127014 142.54257202]
[93.29652405 128.27673340]
[76.53347778 107.61673737]
[84.62249756 86.77390289]
[77.67305756 73.48085022]
[70.72361755 60.18779755]
[63.77417374 46.89474106]
[56.82473373 33.60168839]
[44.73551559 28.98321915]
[39.23487473 17.71440315]
[42.79574585 6.11050129]
[28.08718872 0.98253220]
[21.51473618 -12.73816395]
[26.49411392 -26.72892380]
[19.82458687 -40.16460037]
[6.75815392 -49.08530045]
[8.02955246 -63.92554474]
[-5.03688097 -72.84624481]
[-3.76548266 -87.68648529]
[-10.43501091 -101.12216187]
[-25.48681259 -99.48858643]
[-40.16178894 -103.09650421]
[-52.69337463 -111.49171448]
[-61.57982635 -123.64495087]
[-65.76419067 -138.07798767]
[-64.75997162 -153.04348755]
[-58.70764160 -166.73648071]
[-48.35532379 -177.51214600]
[-55.02485275 -190.94781494]
[-61.68788147 -197.29483032]
[-61.69004822 -204.73544312]
[-68.07673645 -218.30784607]
[-74.46342468 -231.88024902]
[-80.85012054 -245.45265198]
[-87.23680878 -259.02505493]
[-102.50369263 -261.80029297]
[-113.19926453 -273.04235840]
[-115.21085358 -288.42849731]
[-107.76496124 -302.04241943]
[-93.72469330 -308.64926147]
[-78.48881531 -305.70858765]
[-67.91582489 -294.35113525]
[-66.07126617 -278.94409180]
[-73.66439819 -265.41174316]
[-67.27770996 -251.83934021]
[-60.89102173 -238.26693726]
[-54.50433350 -224.69453430]
[-48.11764526 -211.12213135]
[-41.58917618 -197.61735535]
[-34.91965103 -184.18167114]
[-20.07751274 -185.91264343]
[-5.51139021 -182.45472717]
[7.01622152 -174.20649719]
[15.98270607 -162.14732361]
[20.29037666 -147.72116089]
[19.40083313 -132.66365051]
[13.40216732 -118.79324341]
[3.00066590 -107.79169464]
[9.67019367 -94.35601807]
[22.25957680 -86.39632416]
[21.46522903 -70.59506989]
[34.05461121 -62.63537979]
[33.26026535 -46.83412933]
[39.92979050 -33.39845276]
[54.08437729 -28.90587425]
[61.03962326 -15.37519836]
[56.23142242 -0.55902624]
[71.34188843 8.30952263]
[70.11779022 26.65224838]
[77.06723022 39.94530106]
[84.01667023 53.23835373]
[90.96611023 66.53141022]
[97.91555023 79.82446289]
[118.32954407 83.48576355]
[128.43974304 105.97415924]
[143.32147217 107.85415649]
[158.20318604 109.73415375]
[170.61398315 100.32086182]
[185.67938232 102.43944550]
[194.57702637 114.32923889]
[209.45875549 116.20924377]
[224.34046936 118.08924103]
[239.22219849 119.96923828]
[254.10391235 121.84923553]
[268.98562622 123.72923279]
[278.20758057 111.44707489]
[292.34136963 105.43614197]
[307.58511353 107.31334686]
[319.83831787 116.57373810]
[325.80490112 130.72630310]
[323.87991333 145.96408081]
[314.58117676 158.18820190]
[300.40997314 164.11041260]
[285.17828369 162.13768005]
[272.98339844 152.80064392]
[267.10562134 138.61096191]
[252.22392273 136.73095703]
[237.34219360 134.85095215]
[222.46047974 132.97096252]
[207.57875061 131.09095764]
[192.69703674 129.21096802]
[181.12203979 138.51446533]
[166.00308228 136.81987000]
[156.32319641 124.61587524]
[141.44146729 122.73587799]
[126.55975342 120.85588074]
[140.53848267 126.29602051]
[147.26060486 139.70545959]
[143.25547791 154.16087341]
[130.59095764 162.19889832]
[115.80575562 159.66947937]
[106.53350830 147.87857056]
[107.56237030 132.91198730]
[102.92711639 147.17782593]
[98.29186249 161.44367981]
[93.65660858 175.70953369]
[89.02135468 189.97537231]
[84.38610077 204.24122620]
[87.48021698 219.75692749]
[76.18866730 229.47032166]
[71.55341339 243.73617554]
[66.91815948 258.00201416]
[62.28290176 272.26785278]
[74.53239441 281.14508057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 148]
[18 147]
[19 146]
[20 145]
[22 143]
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
[29 98]
[30 97]
[31 96]
[32 95]
[33 94]
[36 92]
[39 89]
[40 88]
[42 86]
[44 84]
[45 83]
[53 75]
[54 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[100 131]
[101 130]
[102 129]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
