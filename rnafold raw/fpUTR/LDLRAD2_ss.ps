%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAACCAAAUGAAGAGGAUCUGGAAGGCAAAGCACUAAGAUCAUAGUGAAGACUUGCCUCCCCCUUCUCCUUGUGUCCCACCAGCCUCCCUGCUGGCCUGACCAGGCCCCAUACUCCAGUCUCCCCAGAGACCCCAAGCUGAAGAUUCUGUGGGUCUGCCCCAUUGCUGGGCACAGCAGAGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[-17.61290359 141.92742920]
[-36.08528900 146.37088013]
[-54.74503326 143.02328491]
[-70.45165253 132.48207092]
[-80.57535553 116.55246735]
[-95.27478027 119.54026031]
[-109.94873047 122.65075684]
[-124.59617615 125.88375854]
[-139.24362183 129.11676025]
[-148.37519836 144.02651978]
[-165.13273621 147.65736389]
[-179.05723572 138.24218750]
[-193.64862061 141.71949768]
[-208.24000549 145.19679260]
[-222.83137512 148.67410278]
[-230.47193909 153.71713257]
[-237.69561768 152.08543396]
[-252.34306335 155.31843567]
[-255.47042847 158.39541626]
[-259.05633545 160.13031006]
[-262.61859131 160.54464722]
[-265.73226929 159.81558228]
[-268.07592773 158.24340820]
[-282.90658569 160.49084473]
[-297.73727417 162.73828125]
[-305.77206421 167.12608337]
[-312.83435059 164.89721680]
[-327.70050049 166.89651489]
[-342.56668091 168.89582825]
[-357.43283081 170.89512634]
[-372.29898071 172.89442444]
[-383.59338379 189.48883057]
[-403.14462280 192.41403198]
[-418.32626343 180.23292542]
[-433.07354736 182.97467041]
[-447.82086182 185.71641541]
[-462.56814575 188.45816040]
[-477.31546021 191.19990540]
[-486.05209351 204.36982727]
[-501.55871582 207.42269897]
[-514.63555908 198.54731750]
[-517.52429199 183.00927734]
[-508.51113892 170.02703857]
[-492.94342041 167.30271912]
[-480.05718994 176.45260620]
[-465.30990601 173.71086121]
[-450.56262207 170.96911621]
[-435.81530762 168.22737122]
[-421.06802368 165.48562622]
[-417.73941040 155.73915100]
[-410.60223389 148.20216370]
[-400.90148926 144.28724670]
[-390.37060547 144.76646423]
[-380.92166138 149.62014771]
[-374.29830933 158.02827454]
[-359.43212891 156.02896118]
[-344.56597900 154.02966309]
[-329.69979858 152.03034973]
[-314.83364868 150.03105164]
[-299.98471069 147.90760803]
[-285.15402222 145.66017151]
[-270.32336426 143.41273499]
[-255.57604980 140.67098999]
[-240.92860413 137.43798828]
[-226.30868530 134.08271790]
[-211.71730042 130.60542297]
[-197.12593079 127.12812042]
[-182.53454590 123.65081787]
[-177.37852478 111.82953644]
[-166.18502808 105.04032898]
[-152.93049622 105.95742035]
[-142.47662354 114.46930695]
[-127.82917786 111.23631287]
[-113.18172455 108.00331116]
[-107.31604767 103.48252106]
[-98.26257324 104.84083557]
[-83.56314850 101.85304260]
[-82.46575928 90.06591797]
[-78.39109802 78.95115662]
[-71.61004639 69.24765015]
[-62.57339096 61.60046768]
[-51.88186264 56.51796341]
[-54.12929916 41.68728256]
[-56.37673569 26.85660553]
[-58.62417221 12.02592659]
[-60.87160873 -2.80475235]
[-73.74224091 -11.97658062]
[-76.27525330 -27.57656097]
[-66.96786499 -40.34950256]
[-51.34197235 -42.71744156]
[-38.66815186 -33.27552795]
[-36.46554565 -17.62547684]
[-46.04092789 -5.05218840]
[-43.79349136 9.77849007]
[-41.54605865 24.60916901]
[-39.29862213 39.43984604]
[-37.05118561 54.27052689]
[-25.47241783 55.81355286]
[-14.63268185 60.23528290]
[-5.23700523 67.26215363]
[2.09998178 76.45071411]
[6.89424324 87.21560669]
[8.82425880 98.86682892]
[23.69042015 100.86613464]
[38.55658340 102.86543274]
[53.42274475 104.86473846]
[68.28890991 106.86404419]
[83.15506744 108.86334991]
[71.06730652 99.98157501]
[57.48572159 93.61442566]
[47.65094757 82.28846741]
[43.25143814 67.94816589]
[45.04250336 53.05548096]
[52.71665192 40.16720963]
[64.95636749 31.49603844]
[79.66033173 28.53063965]
[94.30413055 31.78012085]
[106.37370300 40.68660736]
[113.79722595 53.72197723]
[105.49937439 66.21780396]
[118.77223969 59.22988510]
[132.04510498 52.24197006]
[145.31797791 45.25405502]
[158.59085083 38.26614380]
[166.87535095 24.11343956]
[183.27035522 24.48224258]
[190.91007996 38.99315643]
[181.93542480 52.71860123]
[165.57876587 51.53900909]
[152.30589294 58.52692413]
[139.03302002 65.51483917]
[125.76015472 72.50275421]
[112.48728180 79.49066925]
[115.22903442 94.23796844]
[130.12652588 95.98857880]
[145.02401733 97.73919678]
[159.92152405 99.48981476]
[167.65625000 90.43027496]
[178.69422913 86.28061676]
[190.24409485 87.96634674]
[199.44442749 94.95263672]
[204.07263184 105.40615082]
[218.90332031 107.65358734]
[233.96801758 101.17387390]
[246.94837952 111.19596863]
[244.49130249 127.40999603]
[229.12443542 133.13636780]
[216.65588379 122.48426819]
[201.82519531 120.23683167]
[187.78749084 131.96423340]
[169.31658936 129.68766785]
[158.17089844 114.38730621]
[143.27340698 112.63668823]
[128.37591553 110.88607788]
[113.47841644 109.13545990]
[106.05089569 122.16741943]
[115.14913940 134.09310913]
[124.24737549 146.01878357]
[133.34562683 157.94447327]
[142.44386292 169.87016296]
[151.93551636 181.48516846]
[161.80999756 192.77653503]
[171.68446350 204.06788635]
[181.55894470 215.35925293]
[197.24662781 220.13719177]
[200.68855286 236.17106628]
[188.34397888 246.96659851]
[172.91192627 241.41825867]
[170.26757812 225.23371887]
[160.39311218 213.94236755]
[150.51863098 202.65100098]
[140.64416504 191.35964966]
[137.83938599 191.04710388]
[134.99092102 189.59356689]
[132.53810120 186.97727966]
[130.91981506 183.33726501]
[130.51817322 178.96839905]
[121.41993713 167.04272461]
[112.32169342 155.11703491]
[103.22344971 143.19134521]
[94.12520599 131.26565552]
[81.15576935 123.72950745]
[66.28960419 121.73020935]
[51.42344284 119.73090363]
[36.55727768 117.73159790]
[21.69111633 115.73229218]
[6.82495403 113.73298645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 77]
[6 76]
[7 74]
[8 73]
[9 72]
[12 68]
[13 67]
[14 66]
[15 65]
[17 64]
[18 63]
[23 62]
[24 61]
[25 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[103 187]
[104 186]
[105 185]
[106 184]
[107 183]
[108 182]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[134 155]
[135 154]
[136 153]
[137 152]
[142 149]
[143 148]
[156 181]
[157 180]
[158 179]
[159 178]
[160 177]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
