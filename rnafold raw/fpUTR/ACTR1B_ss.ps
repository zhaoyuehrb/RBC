%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUGUCAAUCGGGCCAGGUGGGAGCGAUGAUUGGCCGCCGGGCCCGCCCUCCAGAAAGCCCCGCGGGGCUCGCGUAGGCUGCAGGCUCGGGGAGGGAGGGCAGCGGCGCCGCGUCGGGAGCCGCCGCCGUCCCGGUCCUCCCGCCCGCCCGCCCAUCCGGUGCCUCCUGCAGCCCGCCUGCUGGGCAGGGCCGGCGCGGCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[283.54446411 398.26303101]
[274.47885132 395.98171997]
[266.02947998 391.96383667]
[258.52566528 386.36264038]
[252.26054382 379.39309692]
[247.47958374 371.32376099]
[244.37101746 362.46630859]
[243.05839539 353.16360474]
[243.59567261 343.77633667]
[245.96505737 334.66912842]
[250.07748413 326.19622803]
[255.77607727 318.68795776]
[246.56288147 306.85086060]
[237.34968567 295.01373291]
[228.13650513 283.17663574]
[218.92330933 271.33953857]
[206.96154785 269.53219604]
[199.18911743 259.74456787]
[200.20042419 246.88507080]
[191.16619873 234.91082764]
[182.13197327 222.93656921]
[173.09774780 210.96231079]
[164.06352234 198.98806763]
[155.02929688 187.01380920]
[145.99507141 175.03955078]
[136.96084595 163.06530762]
[130.42182922 159.61848450]
[127.88242340 150.84248352]
[119.02920532 138.73379517]
[110.17597961 126.62509155]
[101.98350525 128.43434143]
[93.61917877 127.78005219]
[85.80767822 124.71890259]
[79.22579956 119.51612091]
[74.44379425 112.62246704]
[71.87596893 104.63520050]
[71.74479675 96.24634552]
[57.91918182 90.42807007]
[48.79397964 89.98353577]
[43.93053055 84.41703033]
[30.19392967 78.39160156]
[16.45733070 72.36617279]
[2.72073054 66.34073639]
[-11.01586914 60.31530762]
[-24.75247002 54.28987503]
[-38.48907089 48.26444626]
[-54.23493576 49.80659103]
[-62.78219604 37.60849380]
[-76.51879883 31.58306122]
[-90.34441376 25.76478577]
[-104.25592041 20.15497971]
[-118.16742706 14.54517269]
[-129.87394714 21.20829582]
[-143.08767700 19.93070602]
[-153.00563049 11.40191555]
[-156.15255737 -1.09406865]
[-170.63987732 4.62915230]
[-184.57814026 -1.46835816]
[-189.94506836 -15.31507587]
[-203.77069092 -21.13335228]
[-217.59629822 -26.95162773]
[-231.42192078 -32.76990509]
[-245.24752808 -38.58818054]
[-261.44174194 -36.00361252]
[-271.56564331 -48.90471268]
[-265.20465088 -64.01993561]
[-248.90242004 -65.80003357]
[-239.42926025 -52.41379547]
[-225.60363770 -46.59552002]
[-211.77803040 -40.77724457]
[-197.95240784 -34.95896912]
[-184.12680054 -29.14069176]
[-170.47395325 -34.98326111]
[-156.36993408 -29.27965164]
[-150.33427429 -14.91968441]
[-135.04692078 -21.92767334]
[-119.10697937 -15.58667088]
[-112.55762482 0.63366377]
[-98.64611053 6.24347019]
[-84.73460388 11.85327625]
[-80.06576538 10.84111500]
[-74.71161652 12.75224113]
[-70.49336243 17.84646225]
[-56.75676346 23.87189293]
[-41.99343109 21.89876556]
[-32.46363831 34.52784729]
[-18.72703743 40.55327606]
[-4.99043798 46.57870865]
[8.74616146 52.60414124]
[22.48276138 58.62957001]
[36.21936035 64.65499878]
[49.95596313 70.68043518]
[63.73745728 76.60245514]
[77.56307220 82.42073059]
[88.35443878 73.98409271]
[101.83528900 71.55570221]
[106.70578003 57.36844635]
[111.57627106 43.18118668]
[116.44676208 28.99392700]
[113.60960388 13.42918873]
[125.06021118 3.90381336]
[129.93070984 -10.28344536]
[134.80119324 -24.47070312]
[131.96403503 -40.03544235]
[143.41464233 -49.56081772]
[148.28514099 -63.74807739]
[153.15562439 -77.93533325]
[158.02612305 -92.12259674]
[162.89660645 -106.30985260]
[160.05944824 -121.87458801]
[171.51005554 -131.39996338]
[176.38055420 -145.58721924]
[169.21507263 -159.67379761]
[174.18838501 -174.67518616]
[188.34992981 -181.69132996]
[203.29789734 -176.55969238]
[210.16392517 -162.32476807]
[204.87452698 -147.43188477]
[190.56781006 -140.71673584]
[185.69731140 -126.52947235]
[188.88285828 -111.97950745]
[177.08387756 -101.43936157]
[172.21337891 -87.25210571]
[167.34288025 -73.06484222]
[162.47239685 -58.87758636]
[157.60189819 -44.69032669]
[160.78742981 -30.14035606]
[148.98844910 -19.60021210]
[144.11796570 -5.41295338]
[139.24746704 8.77430534]
[142.43299866 23.32427597]
[130.63401794 33.86441803]
[125.76353455 48.05167770]
[120.89304352 62.23893738]
[116.02254486 76.42619324]
[128.18203735 95.73160553]
[122.28467560 117.77187347]
[131.13789368 129.88056946]
[139.99111938 141.98925781]
[148.93508911 154.03108215]
[157.96931458 166.00532532]
[167.00355530 177.97958374]
[176.03778076 189.95384216]
[185.07200623 201.92808533]
[194.10623169 213.90234375]
[203.14045715 225.87660217]
[212.17468262 237.85084534]
[229.29096985 244.63964844]
[230.76042175 262.12634277]
[239.97360229 273.96343994]
[249.18679810 285.80056763]
[258.39999390 297.63766479]
[267.61318970 309.47476196]
[288.06591797 303.69570923]
[308.95935059 307.34463501]
[326.17132568 319.66305542]
[336.32260132 338.18585205]
[337.44049072 359.23446655]
[329.34201050 378.64743042]
[340.06750488 389.13378906]
[350.79299927 399.62014771]
[361.51849365 410.10650635]
[369.84378052 413.86901855]
[372.32492065 420.83200073]
[382.89157104 431.47839355]
[393.45825195 442.12475586]
[404.32128906 441.53698730]
[413.52459717 446.91479492]
[418.15063477 456.27365112]
[416.88793945 466.41552734]
[427.12982178 477.37472534]
[437.37170410 488.33392334]
[455.10632324 493.28750610]
[458.40420532 510.52313232]
[468.80966187 521.32714844]
[479.21511841 532.13116455]
[489.62057495 542.93518066]
[500.10690308 553.66070557]
[510.67358398 564.30706787]
[521.24023438 574.95343018]
[531.80694580 585.59985352]
[547.25616455 592.58245850]
[544.82318115 609.36096191]
[528.02685547 611.66778564]
[521.16052246 596.16650391]
[510.59387207 585.52014160]
[500.02719116 574.87371826]
[489.46054077 564.22735596]
[482.51638794 561.69396973]
[478.81655884 553.34063721]
[468.41110229 542.53662109]
[458.00564575 531.73260498]
[447.60021973 520.92858887]
[435.51477051 520.38757324]
[426.75738525 511.47036743]
[426.41250610 498.57580566]
[416.17062378 487.61660767]
[405.92874146 476.65740967]
[387.06933594 472.39410400]
[382.81185913 452.69143677]
[372.24520874 442.04504395]
[361.67852783 431.39865112]
[351.03213501 420.83200073]
[340.30664062 410.34564209]
[329.58114624 399.85928345]
[318.85565186 389.37292480]
[310.87799072 394.18615723]
[302.10412598 397.34439087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 153]
[13 152]
[14 151]
[15 150]
[16 149]
[19 147]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[28 139]
[29 138]
[30 137]
[37 94]
[38 93]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[45 87]
[46 86]
[48 84]
[49 83]
[50 80]
[51 79]
[52 78]
[56 75]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[96 135]
[97 134]
[98 133]
[99 132]
[101 130]
[102 129]
[103 128]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[111 120]
[112 119]
[159 206]
[160 205]
[161 204]
[162 203]
[164 202]
[165 201]
[166 200]
[170 198]
[171 197]
[172 196]
[174 193]
[175 192]
[176 191]
[177 190]
[178 188]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
