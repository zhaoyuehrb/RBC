%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAAGAAGUGAGAGCUACUUUGAAAGGACAACCAUUUUUCUUUCCGCUAAUUUAUAAUGGUUUUGAAGUGGUUGUUCAUUCUCAAACAUAGACUUUUAAAUGUUAGGUCUUUCCUAUAACUCUUUGUUAUUGGAAGUUUCAAGGAUUUGGACACUCAAUUAAGGAUUCUGUCCUCUCCUCAUUCCUUUGGUUUUGGCCCAA\
) } def
/len { sequence length } bind def

/coor [
[164.72917175 420.26434326]
[175.76034546 410.10003662]
[190.73762512 409.27462769]
[202.81956482 418.16607666]
[200.51869202 403.34356689]
[198.21781921 388.52108765]
[195.91694641 373.69860840]
[186.31895447 362.30880737]
[191.84785461 347.48510742]
[189.54698181 332.66262817]
[187.24610901 317.84014893]
[184.94523621 303.01766968]
[182.64436340 288.19519043]
[180.34347534 273.37271118]
[164.49409485 269.88946533]
[151.14051819 260.59262085]
[142.32594299 246.86418152]
[139.41452026 230.76725769]
[142.88026428 214.73599243]
[152.23025513 201.20756531]
[143.94479370 188.70353699]
[135.65931702 176.19949341]
[127.37384033 163.69546509]
[119.08836365 151.19142151]
[110.80288696 138.68739319]
[102.51741791 126.18335724]
[94.23194122 113.67932129]
[81.29969025 106.07951355]
[66.34413910 104.92565918]
[51.38858414 103.77180481]
[36.43302917 102.61795044]
[21.47747421 101.46408844]
[6.52191973 100.31023407]
[-8.43363476 99.15637970]
[-23.38918877 98.00252533]
[-38.34474564 96.84866333]
[-53.30030060 95.69480896]
[-68.25585175 94.54095459]
[-83.21141052 93.38710022]
[-98.16696167 92.23323822]
[-105.46455383 104.17028046]
[-117.13832092 111.76129150]
[-130.87814331 113.57212830]
[-143.99417114 109.30579376]
[-153.94345093 99.84943390]
[-158.82287598 87.09053040]
[-173.75888062 85.70650482]
[-188.69490051 84.32247925]
[-203.15011597 90.75345612]
[-215.10917664 81.87483215]
[-230.04519653 80.49080658]
[-243.25656128 89.59241486]
[-258.56723022 84.80039978]
[-264.23214722 69.79079437]
[-255.90567017 56.07767868]
[-239.97517395 54.18058395]
[-228.66116333 65.55479431]
[-213.72515869 66.93881989]
[-200.33827209 60.40885162]
[-187.31086731 69.38646698]
[-172.37486267 70.77049255]
[-157.43884277 72.15451813]
[-148.43002319 58.74293137]
[-133.80340576 51.66237640]
[-117.50846863 52.92988586]
[-103.99837494 62.29401398]
[-97.01310730 77.27768707]
[-82.05754852 78.43154144]
[-67.10199738 79.58539581]
[-52.14644241 80.73925781]
[-37.19088745 81.89311218]
[-22.23533249 83.04696655]
[-7.27977848 84.20082092]
[7.67577648 85.35468292]
[22.63133049 86.50853729]
[37.58688736 87.66239166]
[52.54243851 88.81624603]
[67.49799347 89.97010803]
[82.45355225 91.12396240]
[87.95704651 86.02871704]
[75.38549805 77.84603882]
[62.81395340 69.66336060]
[48.61606979 64.82393646]
[40.73036957 52.06400681]
[42.75196838 37.20086288]
[53.75920868 27.01064110]
[68.73387146 26.13909721]
[80.84896088 34.98356628]
[84.58127594 49.51074982]
[91.77265930 62.67448807]
[98.96404266 75.83822632]
[104.46753693 70.74298096]
[104.46753693 55.74298096]
[104.46753693 40.74298096]
[104.46753693 25.74298286]
[104.46753693 10.74298191]
[104.46753693 -4.25701809]
[91.43390656 -12.51099014]
[84.95248413 -26.51080132]
[87.09146881 -41.78916168]
[97.16831207 -53.47080231]
[111.96753693 -57.82815552]
[126.76676178 -53.47080231]
[136.84361267 -41.78916168]
[138.98258972 -26.51080132]
[132.50115967 -12.51099014]
[119.46753693 -4.25701809]
[119.46753693 10.74298191]
[119.46753693 25.74298286]
[119.46753693 40.74298096]
[119.46753693 55.74298096]
[119.46753693 70.74298096]
[133.53640747 75.94557190]
[143.29568481 64.55449677]
[153.05496216 53.16342545]
[162.81422424 41.77235031]
[165.91712952 26.25840378]
[180.07347107 21.62727928]
[189.83274841 10.23620605]
[199.59202576 -1.15486777]
[209.35128784 -12.54594135]
[219.11056519 -23.93701553]
[219.31504822 -39.97876358]
[232.07237244 -49.70657349]
[247.59620667 -45.65810013]
[253.97799683 -30.93898582]
[246.32217407 -16.84047699]
[230.50164795 -14.17774105]
[220.74237061 -2.78666711]
[210.98309326 8.60440636]
[201.22381592 19.99547958]
[191.46453857 31.38655472]
[189.05969238 46.08573532]
[174.20530701 51.53162766]
[164.44602966 62.92269897]
[154.68675232 74.31377411]
[144.92747498 85.70484924]
[127.41957855 105.09079742]
[106.73597717 105.39384460]
[115.02145386 117.89788055]
[123.30692291 130.40191650]
[131.59239197 142.90594482]
[139.87786865 155.40998840]
[148.16334534 167.91401672]
[156.44882202 180.41806030]
[164.73429871 192.92208862]
[182.06376648 189.60646057]
[199.18078613 193.64845276]
[213.10752869 204.29783630]
[221.44036865 219.65904236]
[222.76475525 237.02838135]
[237.05888367 241.57566833]
[251.35301208 246.12297058]
[265.64712524 250.67025757]
[279.94128418 255.21754456]
[299.41333008 250.01612854]
[311.81576538 264.84658813]
[326.24316406 268.95153809]
[339.08697510 260.03128052]
[354.65490723 261.50531006]
[365.59631348 272.67761230]
[366.74493408 288.27294922]
[357.55847168 300.92770386]
[342.37445068 304.66665649]
[328.36233521 297.72442627]
[322.13821411 283.37890625]
[307.71081543 279.27395630]
[299.26116943 285.03207397]
[288.81762695 285.18905640]
[279.82830811 279.45141602]
[275.39398193 269.51168823]
[261.09985352 264.96438599]
[246.80572510 260.41708374]
[232.51159668 255.86979675]
[218.21745300 251.32250977]
[214.89958191 256.57003784]
[210.83810425 261.26568604]
[206.12338257 265.30499268]
[200.86030579 268.59814453]
[195.16596985 271.07183838]
[197.46684265 285.89431763]
[199.76771545 300.71679688]
[202.06858826 315.53927612]
[204.36946106 330.36175537]
[206.67033386 345.18423462]
[216.43290710 357.63424683]
[210.73942566 371.39773560]
[213.04029846 386.22021484]
[215.34117126 401.04269409]
[217.64204407 415.86517334]
[220.73812866 430.54217529]
[224.62040710 445.03106689]
[228.50270081 459.51995850]
[240.47494507 470.72698975]
[236.49246216 486.63522339]
[220.65209961 490.87963867]
[209.24906921 479.09393311]
[214.01380920 463.40225220]
[210.13153076 448.91336060]
[206.24923706 434.42446899]
[198.78903198 447.43774414]
[184.75477600 452.73300171]
[170.55770874 447.89117432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[27 139]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[46 62]
[47 61]
[48 60]
[50 58]
[51 57]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[113 137]
[114 136]
[115 135]
[116 134]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[151 175]
[152 174]
[153 173]
[154 172]
[155 171]
[157 167]
[158 166]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
