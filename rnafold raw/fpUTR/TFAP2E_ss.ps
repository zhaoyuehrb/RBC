%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCGUCCGUCCUGCCUCCAUGGACCCGCCCGGGAACGGCCACCGCUGAGGACCCCACGCCCACUAGGAUCCCGGCUGGGUCGCACCCAGCUACCGCACCGUGACCUCCGCGGGCUGUGCCGGCUCCCGGCGCCUCUGCCCGCAGCGCUCGCCGUCGGGCUAGGGCUCCGCCGCCGCCACGCCUCGCGCCCGGCACUCACCGCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.72904968 214.31948853]
[107.48280334 199.48863220]
[105.23654938 184.65777588]
[102.99030304 169.82691956]
[100.74404907 154.99606323]
[90.13269806 154.10874939]
[79.89118958 151.19331360]
[72.55449677 164.27662659]
[65.21780396 177.35992432]
[57.88110733 190.44323730]
[50.54441071 203.52653503]
[43.20771790 216.60984802]
[50.53878784 230.18405151]
[49.34452820 245.56512451]
[40.00601959 257.84500122]
[25.50314903 263.10525513]
[10.46372509 259.66732788]
[-0.31322274 248.62828064]
[-3.38881111 233.51058960]
[2.21836925 219.13829041]
[14.71908760 210.09751892]
[30.12441063 209.27314758]
[37.46110535 196.18984985]
[44.79779816 183.10653687]
[52.13449478 170.02323914]
[59.47118759 156.93992615]
[66.80788422 143.85662842]
[53.64095306 129.59660339]
[46.24708557 111.65092468]
[45.54703903 92.25437164]
[31.12328911 88.13667297]
[19.49010086 93.70964813]
[7.56060076 89.98195648]
[1.56816864 79.47286224]
[-12.79205799 75.13882446]
[-27.15228462 70.80478668]
[-40.95839310 78.01791382]
[-55.45996475 73.41801453]
[-62.25149536 60.21155167]
[-76.61171722 55.87751389]
[-90.97194672 51.54347610]
[-105.33217621 47.20943832]
[-119.69239807 42.87540054]
[-128.81382751 43.39171600]
[-134.23500061 38.36679077]
[-149.73182678 41.55414581]
[-159.51293945 30.32119942]
[-173.80639648 25.77180290]
[-188.09985352 21.22240639]
[-202.39331055 16.67300987]
[-211.52146912 17.05216408]
[-216.86651611 11.94631958]
[-231.08998108 7.18259287]
[-245.31343079 2.41886544]
[-260.85641479 5.37292862]
[-270.46759033 -6.00576878]
[-284.69104004 -10.76949596]
[-295.69540405 -0.13168870]
[-310.38613892 4.16251755]
[-325.38748169 1.12634504]
[-337.25222778 -8.54251575]
[-343.25390625 -22.62223053]
[-342.01339722 -37.87738419]
[-333.81576538 -50.80245590]
[-320.54476929 -58.42735672]
[-305.24996948 -58.99994278]
[-291.44601440 -52.38863373]
[-282.30496216 -40.11266327]
[-279.92730713 -24.99295998]
[-265.70385742 -20.22923088]
[-251.17823792 -23.52402878]
[-240.54971313 -11.80459785]
[-226.32624817 -7.04087067]
[-212.10278320 -2.27714324]
[-197.84391785 2.37955022]
[-183.55046082 6.92894697]
[-169.25700378 11.47834301]
[-154.96354675 16.02774048]
[-140.48908997 12.51498127]
[-129.68560791 24.07332993]
[-115.35836029 28.51517296]
[-100.99813843 32.84921265]
[-86.63790894 37.18325043]
[-72.27767944 41.51728821]
[-57.91745377 45.85132599]
[-44.95375061 38.60715866]
[-30.32869911 42.79792023]
[-22.81824684 56.44456482]
[-8.45802021 60.77860260]
[5.90220642 65.11264038]
[22.74543381 60.18827438]
[35.24098969 73.71292114]
[49.66473770 77.83062744]
[55.99414444 67.00598907]
[64.61080933 57.89625931]
[75.06686401 50.97491837]
[86.81884766 46.60171127]
[85.24344635 31.68467140]
[83.66804504 16.76762962]
[75.99161530 1.65112519]
[88.39231110 -9.90997410]
[102.93445587 -1.19433105]
[98.58509064 15.19222832]
[100.16049194 30.10927010]
[101.73589325 45.02630997]
[112.75264740 46.49775696]
[123.24862671 50.15402603]
[132.79522705 55.84580612]
[141.00260925 63.34067154]
[147.53559875 72.33255768]
[152.12741089 82.45427704]
[166.86341858 79.65241241]
[181.59941101 76.85055542]
[196.33540344 74.04869843]
[211.04992676 71.13616180]
[225.74214172 68.11312103]
[240.43435669 65.09008026]
[248.21066284 60.29468155]
[255.37005615 62.13377380]
[270.10604858 59.33191299]
[284.84204102 56.53005219]
[296.95407104 46.35118484]
[310.90261841 51.57497406]
[325.63861084 48.77311325]
[340.37460327 45.97125244]
[355.11059570 43.16939163]
[361.35638428 31.23499680]
[373.16320801 25.16588974]
[386.11773682 26.97871971]
[395.52093506 35.78964996]
[410.29736328 33.20960236]
[425.07382202 30.62955475]
[437.33749390 20.63389587]
[451.20590210 26.06675148]
[465.98236084 23.48670578]
[480.75878906 20.90665817]
[495.53524780 18.32661057]
[504.62854004 5.67949343]
[519.65069580 3.27345467]
[531.65179443 12.02046967]
[546.42822266 9.44042301]
[561.20465088 6.86037588]
[575.98114014 4.28032875]
[590.75756836 1.70028174]
[605.51422119 -0.99074781]
[617.62622070 -11.16961288]
[631.57476807 -5.94582701]
[646.31072998 -8.74768734]
[658.37121582 -19.85974312]
[673.94195557 -14.71350956]
[677.00512695 1.39700830]
[664.40966797 11.89869213]
[649.11260986 5.98830938]
[634.37658691 8.79016876]
[623.31860352 18.76862717]
[608.31604004 13.74524784]
[602.33123779 18.08354568]
[593.33758545 16.47672844]
[578.56115723 19.05677414]
[563.78472900 21.63682175]
[549.00830078 24.21686935]
[534.23181152 26.79691696]
[525.90502930 39.09327698]
[510.95639038 41.92031097]
[498.11529541 33.10305786]
[483.33883667 35.68310547]
[468.56240845 38.26314926]
[453.78594971 40.84319687]
[442.57919312 50.65431595]
[427.65386963 45.40600204]
[412.87741089 47.98604965]
[398.10098267 50.56609726]
[389.02923584 64.72656250]
[372.19149780 68.00995636]
[357.91244507 57.90538788]
[343.17645264 60.70724869]
[328.44046021 63.50910950]
[313.70446777 66.31096649]
[302.64645386 76.28942871]
[287.64392090 71.26604462]
[272.90792847 74.06790924]
[258.17190552 76.86976624]
[243.45739746 79.78230286]
[228.76518250 82.80534363]
[214.07296753 85.82837677]
[208.15400696 90.25614929]
[199.13726807 88.78469086]
[184.40126038 91.58655548]
[169.66526794 94.38841248]
[154.92927551 97.19026947]
[152.81950378 115.33687592]
[144.88235474 131.79142761]
[131.99349976 144.73852539]
[115.57490540 152.74980164]
[117.82115936 167.58065796]
[120.06741333 182.41152954]
[122.31365967 197.24238586]
[124.55991364 212.07324219]
[139.04531860 217.01606750]
[149.56604004 228.13241577]
[153.70448303 242.86779785]
[150.50968933 257.83615112]
[140.71577454 269.59786987]
[126.57331085 275.45016479]
[111.33214569 274.04824829]
[98.49457550 265.71426392]
[91.01058197 252.36329651]
[90.59993744 237.06329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[30 93]
[31 92]
[34 90]
[35 89]
[36 88]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[45 80]
[47 78]
[48 77]
[49 76]
[50 75]
[52 74]
[53 73]
[54 72]
[56 70]
[57 69]
[97 105]
[98 104]
[99 103]
[111 190]
[112 189]
[113 188]
[114 187]
[115 185]
[116 184]
[117 183]
[119 182]
[120 181]
[121 180]
[123 178]
[124 177]
[125 176]
[126 175]
[130 172]
[131 171]
[132 170]
[134 168]
[135 167]
[136 166]
[137 165]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 156]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
