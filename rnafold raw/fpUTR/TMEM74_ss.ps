%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGCGCUGCCCACCCGGCGGAGCCGAGCGGCGUGCAGAGGCUACAAGUGCCGUAGCUGGUGAUUGGGGGACUUUCUCCGGGAACCGUGCCGGGAGAGCGCGCGGUGCUGGAGCCGCACCGGGUGGCCGAAGCAGAAGACUUUCCGGAAGCUGCUGGGGGAUGUCUGACUAGCUCUC\
) } def
/len { sequence length } bind def

/coor [
[388.56246948 541.47796631]
[377.64416504 530.05139160]
[378.08703613 514.25329590]
[389.62835693 503.45642090]
[389.89013672 488.45870972]
[390.15191650 473.46096802]
[390.41372681 458.46325684]
[381.40036011 435.19177246]
[391.12045288 418.05880737]
[382.73254395 405.62326050]
[374.34466553 393.18768311]
[365.95675659 380.75213623]
[357.03442383 368.69427490]
[347.59460449 357.03707886]
[338.15481567 345.37991333]
[328.71499634 333.72271729]
[319.27520752 322.06552124]
[309.83538818 310.40832520]
[300.39559937 298.75112915]
[290.75378418 287.26046753]
[280.91290283 275.93981934]
[271.07199097 264.61920166]
[261.23110962 253.29853821]
[246.40115356 252.51896667]
[236.25982666 241.17842102]
[237.17807007 225.62867737]
[227.33717346 214.30802917]
[220.55691528 211.31428528]
[217.42543030 202.70286560]
[207.78361511 191.21220398]
[198.14181519 179.72152710]
[188.50000000 168.23086548]
[174.39195251 163.45465088]
[171.44848633 147.90966797]
[161.80667114 136.41900635]
[152.16485596 124.92832947]
[142.52304077 113.43766785]
[132.88122559 101.94699860]
[124.65268707 121.32729340]
[106.52018738 131.59068298]
[86.10298157 128.73089600]
[71.79555511 114.19302368]
[57.12333679 111.07434845]
[42.45112228 107.95567322]
[27.77890968 104.83699799]
[13.10669613 101.71831512]
[-1.56551814 98.59963989]
[-13.77588463 108.36903381]
[-29.40791893 107.95246887]
[-41.08065033 97.54663849]
[-43.28257751 82.06485748]
[-34.97401047 68.81714630]
[-20.07800484 64.05867767]
[-5.62799931 70.03624725]
[1.55315721 83.92742920]
[16.22537041 87.04610443]
[30.89758492 90.16477966]
[45.56979752 93.28345490]
[60.24201202 96.40213013]
[74.91423035 99.52080536]
[83.62477112 87.30907440]
[75.89920044 74.45156097]
[68.17362976 61.59405518]
[53.10119247 57.66221237]
[45.44952393 44.51281738]
[49.29082108 30.16778183]
[41.56524658 17.31027222]
[33.83967590 4.45276260]
[26.11410713 -8.40474701]
[18.38853455 -21.26225662]
[10.66296387 -34.11976624]
[2.93739295 -46.97727585]
[-11.66013813 -54.45016861]
[-12.21684265 -70.83985901]
[1.83997071 -79.28604889]
[16.04985619 -71.10001373]
[15.79490280 -54.70284653]
[23.52047348 -41.84533691]
[31.24604416 -28.98782730]
[38.97161484 -16.13031769]
[46.69718552 -3.27280855]
[54.42275620 9.58470154]
[62.14833069 22.44221115]
[76.61762238 25.78513336]
[84.63561249 38.71442413]
[81.03113556 53.86848450]
[88.75670624 66.72599030]
[96.48228455 79.58350372]
[103.87942505 78.34564209]
[118.67370605 75.86993408]
[126.07084656 74.63207245]
[129.18952942 59.95986176]
[132.18003845 45.26099014]
[126.33230591 29.93989372]
[136.88543701 17.38746834]
[152.98329163 20.51657295]
[158.06576538 36.10825348]
[146.90444946 48.12312317]
[148.71969604 55.30918121]
[143.86174011 63.07853699]
[140.74305725 77.75074768]
[144.37188721 92.30518341]
[154.01370239 103.79585266]
[163.65551758 115.28652191]
[173.29733276 126.77718353]
[182.93914795 138.26785278]
[197.73684692 143.86595154]
[199.99066162 158.58905029]
[209.63247681 170.07972717]
[219.27429199 181.57038879]
[228.91610718 193.06105042]
[238.65782166 204.46714783]
[248.49870300 215.78778076]
[264.02493286 217.04258728]
[273.84371948 228.66352844]
[272.55175781 243.45765686]
[282.39263916 254.77830505]
[292.23352051 266.09893799]
[302.07443237 277.41958618]
[308.23291016 279.94656372]
[311.65710449 284.52630615]
[312.05276489 289.31134033]
[321.49258423 300.96853638]
[330.93240356 312.62570190]
[340.37219238 324.28289795]
[349.81201172 335.94009399]
[359.25180054 347.59729004]
[368.69161987 359.25448608]
[372.98669434 344.88253784]
[386.83312988 339.11398315]
[400.06170654 346.18536377]
[402.95703125 360.90325928]
[393.39266968 372.45849609]
[378.39233398 372.36422729]
[386.78021240 384.79980469]
[395.16812134 397.23535156]
[403.55599976 409.67092896]
[426.02590942 409.42718506]
[441.40246582 433.59439087]
[453.38201904 442.62161255]
[465.36154175 451.64883423]
[477.34106445 460.67605591]
[489.47631836 469.49282837]
[501.76361084 478.09649658]
[514.05090332 486.70013428]
[526.33819580 495.30377197]
[538.62542725 503.90740967]
[550.91271973 512.51104736]
[563.20001221 521.11474609]
[578.71868896 518.12384033]
[591.75994873 527.05145264]
[594.58654785 542.60089111]
[585.52160645 555.54699707]
[569.94311523 558.20910645]
[557.09356689 549.00775146]
[554.59637451 533.40197754]
[542.30908203 524.79833984]
[530.02178955 516.19470215]
[517.73449707 507.59106445]
[505.44723511 498.98742676]
[493.15997314 490.38375854]
[480.87268066 481.78012085]
[476.07168579 481.71920776]
[471.26425171 478.62280273]
[468.31384277 472.65557861]
[456.33432007 463.62835693]
[444.35476685 454.60113525]
[432.37524414 445.57391357]
[425.63430786 448.86169434]
[436.05413818 459.65182495]
[429.01202393 472.89599609]
[414.23992920 470.29119873]
[412.15237427 455.43725586]
[405.41143799 458.72503662]
[405.14962769 473.72277832]
[404.88784790 488.72048950]
[404.62606812 503.71820068]
[415.78356934 514.91131592]
[415.67480469 530.71520996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[5 176]
[6 175]
[7 174]
[9 137]
[10 136]
[11 135]
[12 134]
[13 128]
[14 127]
[15 126]
[16 125]
[17 124]
[18 123]
[19 122]
[20 119]
[21 118]
[22 117]
[23 116]
[26 113]
[27 112]
[29 111]
[30 110]
[31 109]
[32 108]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[61 88]
[62 87]
[63 86]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[91 101]
[92 100]
[93 98]
[139 168]
[140 167]
[141 166]
[142 165]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
