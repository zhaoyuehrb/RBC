%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCAUCCGCCCUCCCGGCCUGGCCUGCCCUUGCGCCCGGCUCCCCAGUGCCCGCCGCCCGCCCGCCGCGCUCCCGCGCUCCGUUCCGCCCAGGCCGCGCCCAGCUGGA\
) } def
/len { sequence length } bind def

/coor [
[111.17868042 133.02476501]
[95.66564178 134.59495544]
[81.01947784 129.24615479]
[70.33808899 139.77743530]
[59.65670776 150.30873108]
[48.97532272 160.84001160]
[49.52104187 171.88789368]
[43.93757629 181.17922974]
[34.32686996 185.69439697]
[24.04859924 184.12713623]
[12.78851509 194.03726196]
[1.52843058 203.94738770]
[-0.92336315 219.80198669]
[-14.91865921 227.64489746]
[-29.72146416 221.45970154]
[-33.97633362 205.99116516]
[-24.41929436 193.10542297]
[-8.38169003 192.68730164]
[2.87839437 182.77717590]
[14.13847923 172.86705017]
[18.79243469 154.18884277]
[38.44403458 150.15863037]
[49.12541962 139.62734985]
[59.80680466 129.09605408]
[70.48818970 118.56476593]
[66.79454041 110.62990570]
[65.19344330 102.02516174]
[65.78580475 93.29279327]
[52.03131485 87.30831909]
[38.27682495 81.32383728]
[25.50824738 89.98217773]
[10.08503437 90.33998871]
[-3.07132339 82.28307343]
[-9.76267910 68.38237762]
[-7.85384464 53.07356262]
[2.04607654 41.24161148]
[16.77805519 36.66205597]
[31.64117241 40.79621887]
[41.89266205 52.32490158]
[44.26130676 67.56934357]
[58.01579666 73.55382538]
[71.77028656 79.53830719]
[84.81674194 68.61423492]
[101.47972870 65.16599274]
[117.79025269 70.01493073]
[129.86328125 82.00606537]
[144.07574463 77.20960999]
[158.28820801 72.41314697]
[172.50067139 67.61669159]
[186.71311951 62.82023239]
[191.48867798 46.66727829]
[204.78648376 36.59988785]
[221.29875183 36.39047623]
[234.57907104 45.92467499]
[248.65010071 40.72794342]
[262.72113037 35.53120804]
[272.98605347 23.49203300]
[287.60571289 26.34080315]
[301.67672729 21.14406776]
[315.74777222 15.94733429]
[327.74346924 -0.13157319]
[346.62979126 3.58881783]
[360.38427734 -2.39566231]
[371.79675293 -20.41609764]
[392.18566895 -17.79536629]
[405.38308716 -24.92474937]
[410.00021362 -39.80157089]
[423.48583984 -46.84377670]
[437.64016724 -42.35036087]
[450.83758545 -49.47974396]
[464.03500366 -56.60912704]
[477.23242188 -63.73851013]
[485.36517334 -77.97895050]
[501.76318359 -77.78540802]
[509.55758667 -63.35697937]
[500.73016357 -49.53639603]
[484.36181641 -50.54108810]
[471.16439819 -43.41170502]
[457.96697998 -36.28232193]
[444.76956177 -29.15293884]
[440.76831055 -14.85169506]
[427.48580933 -7.43348455]
[412.51248169 -11.72732925]
[399.31506348 -4.59794617]
[398.14547729 4.46074963]
[392.78762817 12.02915192]
[384.38412476 16.26785469]
[374.83505249 16.07263374]
[366.36877441 11.35882759]
[352.61428833 17.34330750]
[349.66738892 27.31401062]
[341.49755859 34.09682465]
[330.71444702 35.20504761]
[320.94448853 30.01836586]
[306.87347412 35.21509933]
[292.80242920 40.41183472]
[283.54397583 52.07930374]
[267.91787720 49.60224152]
[253.84683228 54.79897308]
[239.77580261 59.99570847]
[237.33331299 73.20324707]
[228.58508301 83.53794861]
[215.75784302 88.20222473]
[202.20040894 85.86350250]
[191.50958252 77.03269196]
[177.29711914 81.82914734]
[163.08467102 86.62561035]
[148.87220764 91.42206573]
[134.65974426 96.21852875]
[132.84207153 111.70451355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[10 20]
[11 19]
[12 18]
[28 42]
[29 41]
[30 40]
[46 109]
[47 108]
[48 107]
[49 106]
[50 105]
[54 100]
[55 99]
[56 98]
[58 96]
[59 95]
[60 94]
[62 90]
[63 89]
[65 84]
[66 83]
[69 80]
[70 79]
[71 78]
[72 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
