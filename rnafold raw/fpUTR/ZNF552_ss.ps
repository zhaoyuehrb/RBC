%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGCGACCAUUUCCAUUGGCGUUAGGGAGUCCUUGGAGCGCUGUGUUGGGACCGUGGUGGUGACUGGAUCCAGGAGGUCGAGAGUCGUUCUUCUCUUUGCACAGACGUGACUCUGCAGCUCUUUAACGGCGCCCGCUGCUCUCAACCCAGCUUACCCCACGUGGUCCC\
) } def
/len { sequence length } bind def

/coor [
[-145.16691589 337.44671631]
[-160.71749878 343.15246582]
[-176.44943237 338.52517700]
[-188.02818298 348.06103516]
[-199.60691833 357.59689331]
[-211.18566895 367.13275146]
[-222.76441956 376.66860962]
[-208.37370300 380.90026855]
[-202.53549194 394.71746826]
[-209.53189087 407.98587036]
[-224.23133850 410.97363281]
[-235.85235596 401.48931885]
[-235.87110901 386.48867798]
[-248.27577209 394.92221069]
[-260.68041992 403.35574341]
[-273.08508301 411.78927612]
[-285.48974609 420.22280884]
[-288.57128906 435.49179077]
[-301.27151489 443.86788940]
[-315.80917358 440.83599854]
[-328.21383667 449.26953125]
[-340.61849976 457.70306396]
[-340.96841431 473.21618652]
[-350.39666748 485.54046631]
[-365.27789307 489.93695068]
[-379.88995361 484.71508789]
[-388.61419678 471.88281250]
[-388.09597778 456.37438965]
[-378.53460693 444.15313721]
[-363.60656738 439.91833496]
[-349.05203247 445.29840088]
[-336.64736938 436.86486816]
[-324.24270630 428.43133545]
[-321.71536255 413.79754639]
[-309.25543213 405.06802368]
[-293.92327881 407.81814575]
[-281.51861572 399.38461304]
[-269.11395264 390.95108032]
[-256.70928955 382.51754761]
[-244.30464172 374.08401489]
[-232.30027771 365.08984375]
[-220.72152710 355.55398560]
[-209.14277649 346.01812744]
[-197.56402588 336.48226929]
[-185.98527527 326.94641113]
[-188.02618408 313.73135376]
[-183.22317505 301.13592529]
[-172.73408508 292.49728394]
[-159.23799133 290.16076660]
[-146.25137329 294.84396362]
[-134.49940491 285.52243042]
[-122.74742126 276.20089722]
[-110.99544525 266.87936401]
[-99.24346924 257.55783081]
[-87.49148560 248.23629761]
[-75.91274261 238.70043945]
[-64.51112366 228.95347595]
[-53.10951233 219.20651245]
[-41.70789719 209.45956421]
[-38.65528488 202.69728088]
[-30.00612831 199.64060974]
[-18.42737961 190.10475159]
[-6.84862900 180.56889343]
[4.73012066 171.03303528]
[16.30887032 161.49717712]
[27.79953766 151.85537720]
[39.20115280 142.10841370]
[50.60276413 132.36145020]
[62.00437927 122.61449432]
[55.83157349 102.05732727]
[60.06673050 81.01536560]
[73.71186829 64.44699097]
[93.55160522 56.25642014]
[114.91086578 58.37370300]
[122.29122162 45.31497574]
[129.67158508 32.25624847]
[137.05194092 19.19752121]
[144.43229675 6.13879538]
[144.48634338 -9.68231869]
[157.48442078 -16.95551491]
[153.47758484 -32.00819016]
[161.14834595 -45.14645767]
[175.52346802 -48.87360001]
[182.90382385 -61.93232727]
[190.28417969 -74.99105072]
[197.66453552 -88.04978180]
[205.04489136 -101.10850525]
[212.42524719 -114.16723633]
[219.80560303 -127.22595978]
[220.12956238 -133.89111328]
[223.31394958 -138.65599060]
[227.70454407 -140.62164307]
[228.33976746 -156.43008423]
[241.59625244 -163.22088623]
[249.45133972 -175.99967957]
[257.30642700 -188.77845764]
[251.26380920 -203.07063293]
[254.80873108 -218.17736816]
[266.57809448 -228.28979492]
[282.04638672 -229.51950073]
[295.26568604 -221.39363098]
[301.15292358 -207.03674316]
[297.44430542 -191.96936035]
[285.56591797 -181.98519897]
[270.08523560 -180.92337036]
[262.23013306 -168.14457703]
[254.37504578 -155.36578369]
[254.30166626 -140.47135925]
[240.48333740 -132.76654053]
[232.86431885 -119.84560394]
[225.48396301 -106.78688049]
[218.10360718 -93.72814941]
[210.72325134 -80.66942596]
[203.34289551 -67.61069489]
[195.96253967 -54.55197144]
[188.58218384 -41.49324417]
[192.80421448 -27.25561523]
[185.50550842 -13.90707397]
[170.54315186 -9.57515812]
[171.01698303 5.31190872]
[157.49101257 13.51915169]
[150.11065674 26.57787895]
[142.73030090 39.63660431]
[135.34994507 52.69533157]
[127.96958923 65.75405884]
[135.20916748 73.25309753]
[140.49212646 82.23851013]
[143.52485657 92.21095276]
[144.13885498 102.61624908]
[158.74504089 106.03077698]
[173.35124207 109.44530487]
[187.95744324 112.85984039]
[203.48785400 107.59313965]
[215.63401794 118.61143494]
[211.90098572 134.58004761]
[196.12899780 139.07183838]
[184.54290771 127.46603394]
[169.93670654 124.05150604]
[155.33052063 120.63697815]
[140.72431946 117.22244263]
[136.31321716 125.22761536]
[130.35046387 132.15480042]
[123.09084320 137.70802307]
[114.84455109 141.64999390]
[105.96395111 143.81225586]
[96.82851410 144.10243225]
[87.82859039 142.50810242]
[79.34874725 139.09742737]
[71.75133514 134.01611328]
[60.34972382 143.76306152]
[48.94810867 153.51002502]
[37.54649734 163.25698853]
[33.03435898 171.24395752]
[25.84472656 173.07592773]
[14.26597691 182.61178589]
[2.68722725 192.14764404]
[-8.89152241 201.68350220]
[-20.47027206 211.21936035]
[-31.96093941 220.86117554]
[-43.36255264 230.60813904]
[-54.76416779 240.35508728]
[-66.16577911 250.10205078]
[-68.74981689 256.25445557]
[-73.37185669 259.64285278]
[-78.16995239 259.98828125]
[-89.92192841 269.30981445]
[-101.67391205 278.63134766]
[-113.42588806 287.95288086]
[-125.17786407 297.27441406]
[-136.92984009 306.59594727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 45]
[4 44]
[5 43]
[6 42]
[7 41]
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[20 33]
[21 32]
[22 31]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[56 162]
[57 161]
[58 160]
[59 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 152]
[67 151]
[68 150]
[69 149]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[80 119]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[92 109]
[94 107]
[95 106]
[96 105]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
