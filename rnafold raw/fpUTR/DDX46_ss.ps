%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGGUCGGCUUUUCUCUUCCUUCGGCUGCCGGCGCCAGCACGUCCUGUUUUCGUUGGCCGCGCUGGGAUGGCCGCCACAGCUGUAGGUGCUGCUAGUGUUUAGCGCUGGUCUUUGCCGGGCGUUGAGGGCAGCUCAGCCUCCUUGUUUGUCCGGUUCGCCUGUGCGUGGUACUCAAGGGCACCAGUAUUCCCGCGGUCGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[80.78400421 264.76443481]
[75.05613708 278.73074341]
[63.18602753 287.89352417]
[48.42275620 289.87124634]
[42.84138489 303.79418945]
[48.81112289 318.18167114]
[42.95248032 332.22201538]
[29.19941711 337.82458496]
[23.61804581 351.74752808]
[30.06235313 366.17828369]
[24.33713531 380.90908813]
[9.83906269 387.20046997]
[-4.83041620 381.31982422]
[-10.96815968 366.75607300]
[-4.93275261 352.14956665]
[9.69510460 346.16613770]
[15.27647591 332.24322510]
[9.20165348 318.69210815]
[14.66362000 304.49276733]
[28.91844177 298.21279907]
[34.49981308 284.28988647]
[25.19065285 272.66210938]
[22.93659401 257.83728027]
[28.44199753 243.78178406]
[40.32155228 234.30693054]
[55.44729996 232.03558350]
[61.02867126 218.11264038]
[66.61004639 204.18969727]
[72.19141388 190.26675415]
[77.77278900 176.34381104]
[83.35415649 162.42088318]
[88.93553162 148.49794006]
[94.51689911 134.57499695]
[100.09827423 120.65205383]
[90.86135101 108.83345795]
[76.00241852 110.88581085]
[61.14348602 112.93816376]
[46.28455353 114.99051666]
[31.42562294 117.04286957]
[16.56669044 119.09522247]
[12.37487030 133.73587036]
[2.58558965 145.40162659]
[-11.10509872 152.07133484]
[-26.32519913 152.58941650]
[-40.43774033 146.86611938]
[-50.99763489 135.89303589]
[-56.17531967 121.57132721]
[-55.07373047 106.38230133]
[-47.88372421 92.95755768]
[-35.85100937 83.62301636]
[-21.06032944 79.99594116]
[-6.07426023 82.70473480]
[6.51077366 91.28009796]
[14.51433754 104.23628998]
[29.37327003 102.18393707]
[44.23220062 100.13158417]
[59.09113312 98.07923126]
[73.95006561 96.02687836]
[88.80899811 93.97452545]
[102.16369629 87.14429474]
[112.52490997 76.29785156]
[122.88612366 65.45141602]
[133.24732971 54.60497665]
[143.10163879 43.29601288]
[152.42842102 31.54819489]
[161.75518799 19.80037498]
[171.08197021 8.05255508]
[172.43043518 1.57355285]
[176.27342224 -2.61989522]
[180.87670898 -3.90559173]
[190.55740356 -15.36351681]
[193.55352783 -30.89843750]
[207.67768860 -35.62681198]
[217.35838318 -47.08473969]
[226.50492859 -58.97342300]
[235.09815979 -71.26799011]
[243.69139099 -83.56255341]
[252.28462219 -95.85712433]
[260.87786865 -108.15168762]
[263.23059082 -116.98210907]
[269.69705200 -120.56686401]
[278.47677612 -132.72895813]
[277.19470215 -145.56584167]
[284.76098633 -155.51562500]
[296.68383789 -157.57284546]
[305.64801025 -169.59962463]
[314.61218262 -181.62641907]
[323.57635498 -193.65319824]
[332.54052734 -205.67999268]
[341.50469971 -217.70677185]
[333.52020264 -229.70993042]
[333.96697998 -246.43225098]
[345.20538330 -261.82766724]
[344.74795532 -276.82070923]
[344.29049683 -291.81372070]
[343.83306885 -306.80673218]
[343.37561035 -321.79977417]
[342.91818237 -336.79278564]
[342.46072388 -351.78582764]
[342.00329590 -366.77883911]
[335.47674561 -382.42620850]
[348.70587158 -393.02932739]
[362.55682373 -383.25244141]
[356.99630737 -367.23626709]
[357.45376587 -352.24325562]
[357.91119385 -337.25024414]
[358.36865234 -322.25720215]
[358.82608032 -307.26419067]
[359.28353882 -292.27114868]
[359.74096680 -277.27813721]
[360.19842529 -262.28512573]
[366.82290649 -258.76855469]
[373.85620117 -272.01745605]
[387.10498047 -264.98394775]
[380.07189941 -251.73547363]
[386.69638062 -248.21893311]
[399.37109375 -256.24087524]
[412.04580688 -264.26281738]
[424.72052002 -272.28475952]
[437.39523315 -280.30670166]
[450.06994629 -288.32864380]
[462.74465942 -296.35058594]
[475.41940308 -304.37252808]
[476.53656006 -319.73672485]
[486.37149048 -331.36114502]
[500.99255371 -334.92333984]
[514.74291992 -329.26077271]
[527.41766357 -337.28271484]
[540.09234619 -345.30465698]
[552.76708984 -353.32659912]
[556.34802246 -368.48623657]
[569.31622314 -376.44110107]
[583.74658203 -372.93380737]
[596.42126465 -380.95574951]
[606.57147217 -394.53549194]
[622.43041992 -388.54122925]
[621.06054688 -371.64270020]
[604.44323730 -368.28103638]
[591.76849365 -360.25909424]
[588.76239014 -345.71609497]
[576.02264404 -337.40014648]
[560.78900146 -340.65188599]
[548.11431885 -332.62994385]
[535.43957520 -324.60800171]
[522.76489258 -316.58605957]
[521.99761963 -301.73516846]
[512.52062988 -290.04544067]
[497.80538940 -286.13186646]
[483.44134521 -291.69781494]
[470.76663208 -283.67587280]
[458.09188843 -275.65393066]
[445.41717529 -267.63198853]
[432.74246216 -259.61004639]
[420.06774902 -251.58810425]
[407.39303589 -243.56616211]
[394.71832275 -235.54420471]
[378.89309692 -208.41764832]
[353.53149414 -208.74259949]
[344.56732178 -196.71582031]
[335.60314941 -184.68902588]
[326.63897705 -172.66224670]
[317.67480469 -160.63545227]
[308.71063232 -148.60867310]
[307.60760498 -131.09606934]
[290.63888550 -123.94922638]
[281.85916138 -111.78713989]
[273.17242432 -99.55845642]
[264.57919312 -87.26388550]
[255.98596191 -74.96932220]
[247.39273071 -62.67475510]
[238.79949951 -50.38019180]
[253.72250366 -51.89799500]
[265.43664551 -42.52895737]
[267.23516846 -27.63717270]
[258.08837891 -15.74868774]
[243.23310852 -13.67006207]
[231.17449951 -22.59137917]
[228.81631470 -37.40403748]
[219.13562012 -25.94611359]
[216.83190918 -11.23073959]
[202.01533508 -5.68281603]
[192.33462524 5.77510881]
[182.82978821 17.37932968]
[173.50300598 29.12714958]
[164.17623901 40.87496948]
[154.84945679 52.62279129]
[169.83724976 52.01757431]
[180.95843506 62.08332443]
[181.84574890 77.05706024]
[171.99119568 88.36580658]
[157.03683472 89.53492737]
[145.54452515 79.89506531]
[144.09378052 64.96619415]
[133.73255920 75.81262970]
[123.37134552 86.65907288]
[113.01013184 97.50550842]
[114.02121735 126.23342133]
[108.43984222 140.15637207]
[102.85847473 154.07929993]
[97.27709961 168.00224304]
[91.69572449 181.92518616]
[86.11435699 195.84812927]
[80.53298187 209.77107239]
[74.95161438 223.69401550]
[69.37023926 237.61695862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[8 17]
[9 16]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[60 196]
[61 195]
[62 194]
[63 193]
[64 186]
[65 185]
[66 184]
[67 183]
[70 182]
[71 181]
[73 179]
[74 178]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[81 166]
[82 165]
[85 163]
[86 162]
[87 161]
[88 160]
[89 159]
[90 158]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[116 156]
[117 155]
[118 154]
[119 153]
[120 152]
[121 151]
[122 150]
[123 149]
[127 145]
[128 144]
[129 143]
[130 142]
[133 139]
[134 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
