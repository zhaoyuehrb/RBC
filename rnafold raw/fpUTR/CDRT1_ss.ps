%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUCUGCUGGCAGUUACUGAGAGAGAUAGGCUUUCCAUCCAUGGCAGCCAUUUACUUUUGCUCUGGGAGACGUUUGUAAUAGAAAAGGCACAACUGGGGUAUUUAUUCAUUUCCCCCCGUUCCUCUAGUGUUUGGUGGCGUUGCCGUUGCAAGUGCGCAGGGCUAAAAUGAACUGGUUAUCUUAGGAUC\
) } def
/len { sequence length } bind def

/coor [
[86.03749084 113.06969452]
[71.64196777 117.28503418]
[57.24645233 121.50036621]
[42.85093689 125.71570587]
[31.78125000 137.01936340]
[17.39251709 133.17051697]
[2.99699974 137.38584900]
[-11.39851761 141.60119629]
[-22.46820259 152.90484619]
[-36.85693741 149.05599976]
[-51.25245285 153.27134705]
[-65.64797211 157.48667908]
[-80.04348755 161.70202637]
[-87.41332245 167.12487793]
[-94.70771027 165.86676025]
[-109.16993713 169.84722900]
[-123.63215637 173.82769775]
[-126.59085846 177.05259705]
[-130.07408142 178.96649170]
[-133.60223389 179.56594849]
[-136.74443054 179.00466919]
[-139.16569519 177.56364441]
[-153.85626221 180.59469604]
[-168.54682922 183.62574768]
[-183.23739624 186.65679932]
[-197.92796326 189.68785095]
[-212.59336853 192.83836365]
[-227.23265076 196.10812378]
[-241.87193298 199.37789917]
[-256.51123047 202.64765930]
[-264.21826172 207.57949829]
[-271.41534424 205.84945679]
[-286.10592651 208.88050842]
[-300.79647827 211.91154480]
[-315.48706055 214.94259644]
[-323.22290039 225.27581787]
[-335.53213501 227.49151611]
[-345.71075439 220.93771362]
[-360.44869995 223.72924805]
[-375.18667603 226.52078247]
[-387.25488281 237.62437439]
[-402.82205200 232.46722412]
[-405.87396240 216.35456848]
[-393.27108765 205.86170959]
[-377.97821045 211.78282166]
[-363.24023438 208.99128723]
[-348.50228882 206.19975281]
[-335.84875488 194.04949951]
[-318.51809692 200.25202942]
[-303.82754517 197.22097778]
[-289.13696289 194.18994141]
[-274.44641113 191.15888977]
[-259.78097534 188.00837708]
[-245.14170837 184.73860168]
[-230.50242615 181.46884155]
[-215.86314392 178.19908142]
[-210.01158142 173.66584778]
[-200.95901489 174.99728394]
[-186.26844788 171.96623230]
[-171.57788086 168.93518066]
[-156.88731384 165.90412903]
[-142.19674683 162.87307739]
[-127.61262512 159.36546326]
[-113.15039825 155.38500977]
[-98.68817902 151.40454102]
[-84.25882721 147.30650330]
[-69.86331177 143.09117126]
[-55.46779251 138.87582397]
[-41.07227707 134.66049194]
[-31.03225327 123.65834045]
[-15.61385632 127.20568085]
[-1.21833873 122.99034119]
[13.17717838 118.77500153]
[23.21720123 107.77285004]
[38.63559723 111.32019043]
[53.03111649 107.10485077]
[67.42663574 102.88951111]
[81.82215118 98.67417145]
[66.90971375 100.29258728]
[53.05734253 94.53830719]
[43.68074799 82.83020782]
[41.09200668 68.05528259]
[45.92944717 53.85672379]
[57.00025940 43.73560333]
[71.57460785 40.18758011]
[86.05874634 44.08753204]
[96.88119507 54.47380829]
[101.37334442 68.78536224]
[98.42806244 83.49215698]
[103.91358948 69.53117371]
[109.39911652 55.57019424]
[108.61532593 50.37887192]
[109.79282379 45.86246872]
[112.34266663 42.65741348]
[115.50826263 41.07235336]
[121.66873932 27.39578247]
[127.82920837 13.71921158]
[126.44226837 -2.04108524]
[138.72398376 -10.46775150]
[144.88446045 -24.14432144]
[151.04493713 -37.82089233]
[157.20539856 -51.49745941]
[146.76426697 -62.54513931]
[141.35035706 -76.74929047]
[141.78924561 -91.94389343]
[148.01400757 -105.81186676]
[159.07540894 -116.23845673]
[173.28666687 -121.63368225]
[188.48068237 -121.17481232]
[202.34045410 -114.93181610]
[212.75248718 -103.85670471]
[218.12901306 -89.63835907]
[217.65014648 -74.44496155]
[211.38893127 -60.59341049]
[200.30012512 -50.19595718]
[186.07472229 -44.83814240]
[170.88197327 -45.33698654]
[164.72149658 -31.66041756]
[158.56103516 -17.98384857]
[152.40055847 -4.30727768]
[154.22813416 10.47477913]
[141.50578308 19.87968445]
[135.34530640 33.55625534]
[129.18482971 47.23282623]
[123.36009979 61.05572128]
[117.87457275 75.01670074]
[112.38904572 88.97768402]
[118.99141693 102.44648743]
[133.38693237 106.66182709]
[147.78245544 110.87715912]
[162.17797852 115.09249878]
[176.57348633 119.30783844]
[186.13784790 107.52655029]
[199.44825745 100.32403564]
[214.46157837 98.77044678]
[228.88684082 103.07156372]
[240.53472900 112.54211426]
[247.64996338 125.71476746]
[249.17567444 140.56742859]
[263.57119751 144.78276062]
[277.96670532 148.99810791]
[292.36221313 153.21343994]
[307.78063965 149.66610718]
[317.82064819 160.66825867]
[332.21615601 164.88359070]
[346.61169434 169.09892273]
[361.00720215 173.31427002]
[370.13803101 172.72319031]
[375.60168457 177.71714783]
[389.92669678 182.16624451]
[402.98031616 173.55598450]
[418.50854492 175.40222168]
[429.17938232 186.83319092]
[429.95440674 202.45155334]
[420.46765137 214.88279724]
[405.19851685 218.25726318]
[391.35656738 210.98164368]
[385.47760010 196.49124146]
[371.15258789 192.04214478]
[356.79187012 187.70977783]
[342.39633179 183.49444580]
[328.00082397 179.27911377]
[313.60531616 175.06376648]
[299.21658325 178.91261292]
[288.14688110 167.60896301]
[273.75137329 163.39361572]
[259.35586548 159.17828369]
[244.96034241 154.96295166]
[235.66415405 166.64669800]
[222.56748962 173.90084839]
[207.65097046 175.59272766]
[193.18414307 171.43357849]
[181.38012695 162.02725220]
[174.05706787 148.78279114]
[172.35815430 133.70335388]
[157.96263123 129.48802185]
[143.56712341 125.27268219]
[129.17160034 121.05734253]
[114.77608490 116.84200287]
[126.44458008 126.26782227]
[133.91003418 139.27809143]
[136.15998840 154.10838318]
[132.88932800 168.74746704]
[124.54158783 181.21002197]
[112.24887848 189.80592346]
[97.67830658 193.36940002]
[82.80588531 191.41719055]
[69.64857483 184.21405029]
[59.99073410 172.73684692]
[55.14213181 158.54209900]
[55.76032257 143.55484009]
[61.76146698 129.80761719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[6 73]
[7 72]
[8 71]
[10 69]
[11 68]
[12 67]
[13 66]
[15 65]
[16 64]
[17 63]
[22 62]
[23 61]
[24 60]
[25 59]
[26 58]
[27 56]
[28 55]
[29 54]
[30 53]
[32 52]
[33 51]
[34 50]
[35 49]
[38 47]
[39 46]
[40 45]
[89 127]
[90 126]
[91 125]
[95 124]
[96 123]
[97 122]
[99 120]
[100 119]
[101 118]
[102 117]
[128 179]
[129 178]
[130 177]
[131 176]
[132 175]
[139 168]
[140 167]
[141 166]
[142 165]
[144 163]
[145 162]
[146 161]
[147 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
