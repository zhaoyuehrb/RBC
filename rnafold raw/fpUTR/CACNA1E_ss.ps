%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAGAUUCAACAGUUCACAGCGGCGGGCUGCUGCUGCUGCCUCUCCGAAGAGCUCGCGGAGCUCCCCAGAGGCGGUGGUCCCCGUGCUUGUCUGGAUGCGGCUCUGAGUCUCCGUGUGUCUUUCUGCUUGUUGCUGUGUGCGGGUGUUCGGCCGCGAUCACCUUUGUGUGUCUUCUGUCUGUUUAAACCUCAGG\
) } def
/len { sequence length } bind def

/coor [
[127.59286499 373.65423584]
[125.91339874 358.74853516]
[124.23393250 343.84286499]
[122.55446625 328.93716431]
[120.87500000 314.03149414]
[119.19552612 299.12579346]
[117.51605988 284.22012329]
[106.41167450 277.66967773]
[101.03086090 265.73986816]
[103.54434204 252.69807434]
[113.25382996 243.35241699]
[111.81348419 228.42173767]
[110.37313843 213.49104309]
[108.93279266 198.56036377]
[94.13241577 187.80232239]
[91.84391022 169.32725525]
[103.98093414 154.79315186]
[102.06277466 139.91630554]
[100.14461517 125.03945160]
[86.38021088 119.07781982]
[74.21675110 127.85565186]
[62.05329514 136.63348389]
[49.88983917 145.41131592]
[37.72638321 154.18914795]
[25.56292534 162.96697998]
[13.39946842 171.74481201]
[1.23601222 180.52264404]
[-4.98485804 195.69606018]
[-21.26993942 197.62690735]
[-30.86653519 184.32888794]
[-23.90249252 169.48187256]
[-7.54181910 168.35919189]
[4.62163734 159.58135986]
[16.78509331 150.80352783]
[28.94855118 142.02569580]
[41.11200714 133.24786377]
[53.27546310 124.47002411]
[65.43891907 115.69219208]
[77.60237885 106.91436768]
[74.85308838 92.16847229]
[60.34366226 88.36364746]
[45.83423996 84.55883026]
[31.32481575 80.75401306]
[16.81539345 76.94919586]
[2.30597019 73.14437866]
[-6.24922466 82.27849579]
[-17.81094170 86.87714386]
[-30.15842247 86.12316895]
[-40.94797134 80.22125244]
[-48.15782547 70.34735870]
[-50.46690750 58.41492462]
[-64.84692383 54.14701080]
[-79.22694397 49.87909698]
[-93.60696411 45.61118317]
[-107.98697662 41.34326935]
[-122.36699677 37.07535553]
[-139.27182007 38.36511612]
[-145.19088745 22.47798729]
[-131.56320190 12.39223576]
[-118.09908295 22.69533730]
[-103.71906281 26.96325111]
[-89.33905029 31.23116493]
[-74.95903015 35.49907684]
[-60.57901001 39.76699066]
[-46.19899368 44.03490448]
[-32.70876694 32.65335464]
[-14.93102074 31.62971115]
[0.03825106 41.56131363]
[6.11078882 58.63495255]
[20.62021255 62.43977356]
[35.12963486 66.24459076]
[49.63905716 70.04940796]
[64.14848328 73.85422516]
[78.65790558 77.65904999]
[92.89373779 72.93242645]
[102.24608612 61.20495224]
[111.59843445 49.47747803]
[120.95078278 37.75000763]
[130.30313110 26.02253532]
[139.65547180 14.29506207]
[149.00782776 2.56759000]
[158.26588440 -9.23445702]
[167.23753357 -21.25566101]
[176.01536560 -33.41911697]
[184.79319763 -45.58257294]
[186.59475708 -61.30087662]
[200.31677246 -67.09360504]
[209.09460449 -79.25705719]
[206.73880005 -89.89191437]
[210.55297852 -99.86003113]
[219.04922485 -105.94961548]
[229.27516174 -106.34211731]
[238.43833923 -118.21797943]
[247.60151672 -130.09384155]
[256.76470947 -141.96971130]
[259.06912231 -157.62219238]
[272.96975708 -162.97213745]
[282.13293457 -174.84799194]
[291.29611206 -186.72386169]
[300.45928955 -198.59971619]
[309.62246704 -210.47558594]
[318.78564453 -222.35145569]
[327.94882202 -234.22731018]
[326.12432861 -249.69692993]
[335.58627319 -261.61019897]
[350.34542847 -263.25424194]
[359.50860596 -275.13012695]
[368.67178345 -287.00598145]
[377.83496094 -298.88183594]
[386.99813843 -310.75772095]
[378.86679077 -323.55053711]
[375.60424805 -338.35363770]
[377.60449219 -353.37945557]
[384.62597656 -366.81350708]
[395.82083130 -377.03363037]
[409.83724976 -382.80566406]
[424.98263550 -383.43261719]
[439.42813110 -378.83877563]
[451.42935181 -369.57885742]
[459.53713989 -356.77105713]
[462.77239990 -341.96197510]
[460.74447632 -326.93988037]
[453.69824219 -313.51876831]
[442.48455811 -303.31927490]
[428.45755005 -297.57308960]
[413.31103516 -296.97406006]
[398.87402344 -301.59451294]
[389.71084595 -289.71865845]
[380.54766846 -277.84280396]
[371.38449097 -265.96694946]
[362.22128296 -254.09106445]
[364.37475586 -239.39759827]
[355.25115967 -227.22325134]
[339.82467651 -225.06413269]
[330.66149902 -213.18826294]
[321.49832153 -201.31240845]
[312.33514404 -189.43653870]
[303.17196655 -177.56068420]
[294.00878906 -165.68481445]
[284.84561157 -153.80894470]
[283.19659424 -139.00590515]
[268.64056396 -132.80653381]
[259.47738647 -120.93066406]
[250.31420898 -109.05480194]
[241.15103149 -97.17893982]
[239.99835205 -77.88437653]
[221.25805664 -70.47922516]
[212.48022461 -58.31576920]
[211.30651855 -43.46747971]
[196.95666504 -36.80474472]
[188.17883301 -24.64128685]
[179.40100098 -12.47782993]
[179.26815796 -7.69247866]
[176.11946106 -2.94264030]
[170.14173889 -0.07127739]
[168.54272461 7.15393591]
[160.73529053 11.91993713]
[151.38294983 23.64740944]
[142.03059387 35.37488174]
[132.67825317 47.10235214]
[123.32590485 58.82982635]
[113.97355652 70.55729675]
[104.62121582 82.28476715]
[111.85907745 84.07929230]
[118.29054260 88.89808655]
[122.64544678 96.33414459]
[123.86957550 105.45201111]
[121.34004974 114.90228271]
[115.02146912 123.12129211]
[116.93962097 137.99813843]
[118.85778046 152.87500000]
[129.51640320 158.17439270]
[136.22000122 167.86511230]
[137.39532471 179.46919250]
[132.86509705 190.08660889]
[123.86347961 197.12001038]
[125.30382538 212.05070496]
[126.74417114 226.98138428]
[128.18452454 241.91207886]
[141.88380432 252.78132629]
[143.45884705 269.85867310]
[132.42175293 282.54064941]
[134.10121155 297.44635010]
[135.78068542 312.35202026]
[137.46014404 327.25772095]
[139.13961792 342.16339111]
[140.81907654 357.06906128]
[142.49855042 371.97476196]
[156.06033325 379.51513672]
[162.56938171 393.60101318]
[159.52281189 408.81610107]
[148.09210205 419.30981445]
[132.67259216 421.04718018]
[119.19340515 413.36010742]
[112.83755493 399.20446777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[11 179]
[12 178]
[13 177]
[14 176]
[17 171]
[18 170]
[19 169]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[75 163]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[82 155]
[83 152]
[84 151]
[85 150]
[87 148]
[88 147]
[92 145]
[93 144]
[94 143]
[95 142]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
