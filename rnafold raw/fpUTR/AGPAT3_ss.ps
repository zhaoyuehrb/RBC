%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGACGCAGGGCCGGGCCGGGCCCAGGGCCGAGGAGCGCGGCGGCCAGAGCGGGGCCGCGGAGGCGACGCCGGGGACGCCCGCGCGACGAGCAGGUGGCGGCGGCUGCAGGCUUGUCCAGCCGGAAGCCCUGAGGGCAGCUGUUCCCACUGGCUCUGCUGACCUUGUGCCUUGGACGGCUGUCCUCAGCGAGGGGCCGUGCACCCGCUCCUGAGCAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-71.66455841 372.21948242]
[-78.95005035 385.33135986]
[-86.14299774 398.49426270]
[-93.24304962 411.70748901]
[-92.95954132 427.52615356]
[-105.79946899 435.07501221]
[-105.51595306 450.89367676]
[-118.35588837 458.44253540]
[-118.07237244 474.26119995]
[-130.91230774 481.81008911]
[-138.01235962 495.02331543]
[-145.11241150 508.23651123]
[-152.21246338 521.44976807]
[-159.31251526 534.66296387]
[-154.51864624 549.72265625]
[-161.85179138 563.72265625]
[-176.96133423 568.35705566]
[-190.88304138 560.87628174]
[-195.35740662 545.71862793]
[-187.72988892 531.87677002]
[-172.52574158 527.56292725]
[-165.42568970 514.34967041]
[-158.32563782 501.13647461]
[-151.22558594 487.92324829]
[-144.12553406 474.71002197]
[-144.91688538 459.83645630]
[-131.56910706 451.34249878]
[-132.36047363 436.46893311]
[-119.01269531 427.97494507]
[-119.80404663 413.10137939]
[-106.45627594 404.60742188]
[-99.35621643 391.39419556]
[-98.95936584 384.02081299]
[-92.06193542 378.04589844]
[-84.77645111 364.93399048]
[-86.00610352 347.42440796]
[-70.12516022 338.09564209]
[-63.02510834 324.88241577]
[-55.92505646 311.66921997]
[-48.82500076 298.45599365]
[-49.61635971 283.58242798]
[-36.26858139 275.08843994]
[-29.16852951 261.87521362]
[-32.97877121 252.40545654]
[-30.90869141 242.18597412]
[-23.40443039 234.63389587]
[-12.76874638 232.40878296]
[-5.29926872 219.40081787]
[2.17020965 206.39286804]
[9.54787636 193.33262634]
[16.83336449 180.22073364]
[24.11885452 167.10884094]
[31.40434265 153.99694824]
[38.68983078 140.88507080]
[45.97531891 127.77317047]
[39.34494019 114.31813812]
[24.50874710 112.10738373]
[9.67255688 109.89662933]
[-4.02354336 118.25105286]
[-19.04467583 112.61676788]
[-23.86791420 97.31591797]
[-14.79328060 84.08600616]
[1.21794093 83.07588959]
[11.88331223 95.06043243]
[26.71950340 97.27118683]
[41.55569458 99.48194122]
[44.38917542 92.53778076]
[35.19476700 80.68608093]
[50.05613327 78.64945984]
[52.88961411 71.70529175]
[40.74195099 62.90562057]
[28.53260231 54.19173050]
[16.26218033 45.56406021]
[3.99175739 36.93638992]
[-8.27866554 28.30871582]
[-24.65190125 27.38720131]
[-31.79789734 12.62689209]
[-22.36546707 -0.78807324]
[-6.05788469 0.94247329]
[0.34900644 16.03829384]
[12.61942959 24.66596603]
[24.88985252 33.29363632]
[37.16027451 41.92131042]
[44.43345642 43.19615173]
[49.54162216 50.75795746]
[61.68928909 59.55763245]
[74.08003235 51.10367203]
[70.31694794 36.58337021]
[66.55385590 22.06307030]
[62.79077148 7.54276752]
[59.02768326 -6.97753429]
[55.26459503 -21.49783707]
[51.50151062 -36.01813889]
[38.16236877 -44.06208420]
[34.55290985 -58.84134293]
[42.30378723 -71.50860596]
[38.54069901 -86.02890778]
[34.77761078 -100.54920959]
[31.01452446 -115.06951141]
[27.25143623 -129.58981323]
[15.37169838 -140.89485168]
[19.48476982 -156.76982117]
[35.35947418 -160.88391113]
[46.66527939 -149.00489807]
[41.77173996 -133.35290527]
[45.53482437 -118.83259583]
[49.29791260 -104.31229401]
[53.06100082 -89.79199219]
[56.82408905 -75.27169037]
[69.75180817 -67.96350098]
[73.77496338 -53.29145813]
[66.02181244 -39.78122711]
[69.78489685 -25.26092339]
[73.54798889 -10.74062157]
[77.31107330 3.77968025]
[81.07415771 18.29998207]
[84.83724976 32.82028580]
[88.60033417 47.34058762]
[110.53734589 56.12928772]
[122.99243164 71.83561707]
[125.00077820 88.31428528]
[139.80435181 85.89474487]
[154.59051514 83.37099457]
[169.35853577 80.74314880]
[184.12655640 78.11531067]
[190.97587585 64.31700897]
[204.47889709 57.27983856]
[219.36045837 59.51665115]
[229.94462585 69.96237946]
[244.69377136 67.23057556]
[259.40295410 64.29126740]
[274.09109497 61.24842453]
[288.77923584 58.20557785]
[303.46734619 55.16273499]
[318.15548706 52.11989212]
[332.84359741 49.07704926]
[347.53173828 46.03420258]
[362.21987915 42.99135971]
[376.90798950 39.94851685]
[391.59613037 36.90567017]
[406.28424072 33.86282730]
[420.97238159 30.81998253]
[435.66049194 27.77713966]
[450.34863281 24.73429489]
[465.03677368 21.69145012]
[479.72488403 18.64860725]
[494.84133911 3.45173860]
[514.13562012 10.79237652]
[528.68206787 7.13166189]
[543.22851562 3.47094679]
[556.15093994 -9.65314484]
[572.83099365 -4.18749714]
[587.32440186 -8.05277061]
[594.80194092 -13.28347683]
[602.04925537 -11.86887169]
[616.59570312 -15.52958584]
[627.98413086 -27.32939911]
[643.82977295 -23.10460854]
[647.83190918 -7.20131779]
[635.87359619 4.02053118]
[620.25640869 -0.98313767]
[605.70996094 2.67757726]
[591.18969727 6.44066477]
[576.69622803 10.30593777]
[570.37054443 20.61026001]
[558.33422852 23.95264053]
[546.88922119 18.01739502]
[532.34277344 21.67811012]
[517.79632568 25.33882523]
[514.54864502 33.58599854]
[507.77011108 39.50801086]
[498.89453125 41.68450928]
[489.87802124 39.50582504]
[482.76773071 33.33673477]
[468.07958984 36.37957764]
[453.39147949 39.42242432]
[438.70333862 42.46526718]
[424.01522827 45.50811005]
[409.32708740 48.55095673]
[394.63897705 51.59379959]
[379.95083618 54.63664246]
[365.26269531 57.67948532]
[350.57458496 60.72233200]
[335.88644409 63.76517487]
[321.19833374 66.80802155]
[306.51019287 69.85086060]
[291.82208252 72.89370728]
[277.13394165 75.93655396]
[262.44580078 78.97939301]
[256.53890991 83.41029358]
[247.52940369 81.96011353]
[241.56065369 86.30735779]
[232.57246399 84.73040009]
[226.24134827 98.18605804]
[213.04486084 105.41911316]
[197.94314575 103.47190857]
[186.75439453 92.88333130]
[171.98637390 95.51116943]
[157.21835327 98.13901520]
[151.18896484 102.40174103]
[142.22389221 100.69831848]
[127.42031860 103.11785889]
[111.94691467 138.94692993]
[59.08721161 135.05867004]
[51.80171967 148.17054749]
[44.51623154 161.28244019]
[37.23074341 174.39433289]
[29.94525528 187.50622559]
[22.65976524 200.61811829]
[21.22947884 209.63079834]
[15.17816448 213.86235046]
[7.70868635 226.87030029]
[0.23920833 239.87825012]
[1.18779099 260.02005005]
[-15.95530796 268.97528076]
[-23.05536079 282.18850708]
[-22.77184677 298.00717163]
[-35.61177826 305.55603027]
[-42.71183395 318.76925659]
[-49.81188583 331.98248291]
[-56.91194153 345.19570923]
[-53.94928360 357.74313354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 32]
[4 31]
[6 29]
[8 27]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[37 221]
[38 220]
[39 219]
[40 218]
[42 216]
[43 215]
[47 213]
[48 212]
[49 211]
[50 209]
[51 208]
[52 207]
[53 206]
[54 205]
[55 204]
[56 66]
[57 65]
[58 64]
[70 86]
[71 85]
[72 83]
[73 82]
[74 81]
[75 80]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[121 202]
[122 201]
[123 199]
[124 198]
[125 197]
[129 193]
[130 191]
[131 189]
[132 188]
[133 187]
[134 186]
[135 185]
[136 184]
[137 183]
[138 182]
[139 181]
[140 180]
[141 179]
[142 178]
[143 177]
[144 176]
[145 175]
[146 174]
[148 169]
[149 168]
[150 167]
[152 164]
[153 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
