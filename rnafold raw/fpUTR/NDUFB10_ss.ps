%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGCCCUCGGCGUCCUCUGUAGCGGGCGACCUAGGCCGCGGGACCCGGACGGAGGUAGAGGCCAGGGCAGCGCGUCCGGGAGCGGAGUCCGCGCCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[149.73735046 200.76965332]
[153.12461853 186.15710449]
[164.30899048 176.16162109]
[179.20870972 174.43092346]
[167.59658813 164.93572998]
[152.84606934 162.86898804]
[147.06057739 148.14353943]
[135.44845581 138.64834595]
[123.83633423 129.15316772]
[112.22421265 119.65797424]
[100.61208344 110.16278839]
[92.75289154 107.85472107]
[88.80900574 100.22687531]
[77.47276306 90.40396118]
[66.13652039 80.58105469]
[50.64019394 77.39131927]
[46.08841705 63.20927048]
[34.34189224 53.88086700]
[22.20663643 45.06408691]
[10.07138062 36.24730682]
[-2.06387424 27.43053055]
[-14.19912910 18.61375046]
[-26.33438492 9.79697227]
[-38.46963882 0.98019338]
[-51.40669632 2.21256900]
[-61.35826492 -5.50392866]
[-63.25959015 -17.54468727]
[-75.13812256 -26.70440483]
[-87.01665497 -35.86412430]
[-98.89518738 -45.02384186]
[-112.05638123 -41.76673126]
[-124.49153137 -46.65852737]
[-131.69206238 -57.68250275]
[-131.18870544 -70.64444733]
[-142.80082703 -80.13964081]
[-157.77331543 -76.06481934]
[-172.26945496 -81.60029602]
[-180.71519470 -94.61756134]
[-179.86296082 -110.11122131]
[-170.04045105 -122.12363434]
[-155.02464294 -126.03578949]
[-140.58940125 -120.34338379]
[-132.28538513 -107.23526001]
[-133.30564880 -91.75176239]
[-121.69351959 -82.25657654]
[-105.12005615 -84.68260956]
[-91.61009216 -74.22283173]
[-89.73547363 -56.90237427]
[-77.85694122 -47.74265671]
[-65.97840881 -38.58293915]
[-54.09987259 -29.42322159]
[-36.66456223 -28.10682869]
[-29.65286064 -11.15506172]
[-17.51760483 -2.33828282]
[-5.38235044 6.47849607]
[6.75290442 15.29527473]
[18.88815880 24.11205292]
[31.02341461 32.92883301]
[43.15866852 41.74560928]
[46.81759644 41.48296356]
[50.77932358 43.07756424]
[54.12245178 46.64752197]
[55.91132736 51.87302780]
[70.59680939 54.36015701]
[75.95943451 69.24480438]
[87.29567719 79.06771851]
[98.63191986 88.89063263]
[110.10727692 98.55066681]
[121.71939850 108.04585266]
[133.33152771 117.54103851]
[144.94364929 127.03622437]
[156.55577087 136.53141785]
[172.13687134 139.27732849]
[177.09176636 153.32360840]
[188.70388794 162.81880188]
[201.32269287 170.92840576]
[214.78367615 177.54672241]
[228.24464417 184.16503906]
[240.78208923 180.74465942]
[251.90373230 186.65118408]
[255.83042908 198.19137573]
[269.09692383 205.19137573]
[282.36340332 212.19139099]
[295.62991333 219.19140625]
[311.44598389 218.78836060]
[319.09164429 231.57089233]
[332.35815430 238.57090759]
[345.62463379 245.57090759]
[358.89114380 252.57092285]
[375.72140503 254.61494446]
[378.41635132 271.35333252]
[363.07815552 278.57659912]
[351.89111328 265.83740234]
[338.62463379 258.83740234]
[325.35812378 251.83740234]
[312.09164429 244.83738708]
[297.22448730 245.74110413]
[288.62988281 232.45790100]
[275.36340332 225.45788574]
[262.09692383 218.45787048]
[248.83041382 211.45787048]
[231.42599487 213.13386536]
[221.62632751 197.62602234]
[208.16535950 191.00770569]
[194.70437622 184.38938904]
[199.31965637 198.66171265]
[194.87353516 212.98762512]
[182.98858643 222.13902283]
[168.00212097 222.77615356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 75]
[5 74]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[13 67]
[14 66]
[15 65]
[17 63]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 54]
[24 53]
[27 51]
[28 50]
[29 49]
[30 48]
[34 45]
[35 44]
[76 105]
[77 104]
[78 103]
[81 101]
[82 100]
[83 99]
[84 98]
[86 96]
[87 95]
[88 94]
[89 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
