%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGGCGGUUCGAAUUCUGUGCUGCCGGGGUUCGCUGGUUCUCCGAGUUGUGUCCGAGGCUUCCACGCGCAGGGGCCCGGGAAAGGGUCAGAGGCUUCCUAACGCAGACUCGAGUGCGAAGCGCGCAGUCGCCGGGUGGGUCUCUCCCCAGCGACGAUUUGGGUGAA\
) } def
/len { sequence length } bind def

/coor [
[9.56802559 271.79568481]
[0.97699869 284.09179688]
[-7.61402845 296.38790894]
[-9.97806931 305.25271606]
[-16.47915459 308.82986450]
[-25.29593468 320.96511841]
[-34.11271286 333.10037231]
[-42.92949295 345.23562622]
[-51.74626923 357.37088013]
[-60.56304932 369.50613403]
[-69.37982941 381.64138794]
[-71.23175812 397.35385132]
[-84.97226715 403.10253906]
[-93.78904724 415.23779297]
[-92.70963287 431.24450684]
[-104.64790344 441.96163940]
[-120.44583893 439.16796875]
[-127.98461914 425.00653076]
[-121.48113251 410.34078979]
[-105.92430115 406.42102051]
[-97.10752106 394.28576660]
[-95.88623047 379.44131470]
[-81.51508331 372.82461548]
[-72.69830322 360.68936157]
[-63.88152695 348.55410767]
[-55.06474686 336.41885376]
[-46.24796677 324.28359985]
[-37.43119049 312.14834595]
[-28.61441040 300.01309204]
[-19.91013527 287.79687500]
[-11.31910896 275.50076294]
[-2.72808146 263.20468140]
[5.74896479 250.82969666]
[14.11130619 238.37693787]
[22.47364807 225.92417908]
[30.83598900 213.47142029]
[39.19832993 201.01866150]
[47.56067276 188.56590271]
[48.23260880 173.68646240]
[62.34944153 166.54324341]
[62.57374954 149.01240540]
[79.13681793 141.00750732]
[87.26761627 128.40234375]
[73.19087219 111.48625183]
[74.34900665 90.93214417]
[88.19798279 77.68122864]
[85.44174194 62.93663025]
[82.68550110 48.19203186]
[79.92925262 33.44743729]
[77.17301178 18.70283890]
[74.28064728 3.98433924]
[71.25241089 -10.70680714]
[68.22417450 -25.39795303]
[65.19593811 -40.08909988]
[62.16770554 -54.78024673]
[47.39177704 -64.10950470]
[43.98238373 -80.90431976]
[53.56632614 -94.70258331]
[50.26712799 -109.33526611]
[46.96793365 -123.96794128]
[43.66873932 -138.60061646]
[40.36954498 -153.23330688]
[37.07034683 -167.86598206]
[33.77115250 -182.49865723]
[30.47195816 -197.13134766]
[23.36060715 -183.92419434]
[10.77312756 -175.76605225]
[-4.18666744 -174.66853333]
[-17.82999611 -180.90228271]
[-26.79269218 -192.93017578]
[-28.86473846 -207.78636169]
[-23.53520775 -221.80764771]
[-12.11825657 -231.53663635]
[2.57092881 -234.57435608]
[16.91029549 -230.17179871]
[27.36343956 -219.41557312]
[26.53226662 -234.39253235]
[25.70109558 -249.36949158]
[24.86992264 -264.34643555]
[24.03875160 -279.32339478]
[12.09570980 -289.67419434]
[11.05318356 -305.44406128]
[21.52968597 -317.27700806]
[37.30969238 -318.15274048]
[49.03120804 -307.55172729]
[49.74006271 -291.76333618]
[39.01570511 -280.15457153]
[39.84687805 -265.17761230]
[40.67805099 -250.20065308]
[41.50922012 -235.22370911]
[42.34039307 -220.24674988]
[48.19368362 -211.68490601]
[45.10463715 -200.43054199]
[48.40383148 -185.79785156]
[51.70302963 -171.16517639]
[55.00222397 -156.53250122]
[58.30141830 -141.89982605]
[61.60061264 -127.26714325]
[64.89981079 -112.63446045]
[68.19900513 -98.00177765]
[79.96568298 -92.69501495]
[86.61611938 -81.40537262]
[85.52153015 -68.15283203]
[76.85884857 -57.80848312]
[79.88708496 -43.11733627]
[82.91532135 -28.42618942]
[85.94355774 -13.73504353]
[88.97179413 0.95610309]
[93.41937256 6.89573765]
[91.91761017 15.94659615]
[94.67385101 30.69119263]
[97.43009186 45.43579102]
[100.18634033 60.18038559]
[102.94258118 74.92498016]
[114.07498169 79.04027557]
[122.09687805 87.78757477]
[136.78802490 84.75933838]
[151.47917175 81.73110199]
[166.17031860 78.70286560]
[180.86146545 75.67462921]
[195.15380859 66.55514526]
[207.87342834 77.76441956]
[200.62335205 93.08997345]
[183.88969421 90.36577606]
[169.19854736 93.39401245]
[154.50740051 96.42224884]
[139.81625366 99.45048523]
[125.12511444 102.47872162]
[125.73007202 111.50803375]
[122.92626953 121.05214691]
[135.37902832 129.41448975]
[147.83178711 137.77682495]
[160.28454590 146.13917542]
[172.73730469 154.50151062]
[188.50746155 155.77157593]
[194.75996399 169.29028320]
[207.21272278 177.65261841]
[219.66549683 186.01496887]
[228.57246399 188.21478271]
[232.26913452 194.64866638]
[244.56524658 203.23968506]
[256.86135864 211.83071899]
[273.30828857 215.94590759]
[273.90686035 232.88929749]
[257.79135132 238.15487671]
[248.27032471 224.12683105]
[235.97421265 215.53579712]
[223.67811584 206.94476318]
[211.30314636 198.46772766]
[198.85038757 190.10537720]
[186.39762878 181.74304199]
[171.51818848 181.07110596]
[164.37496948 166.95426941]
[151.92221069 158.59193420]
[139.46945190 150.22958374]
[127.01668549 141.86724854]
[114.56392670 133.50489807]
[99.87277985 136.53314209]
[91.74198151 149.13830566]
[93.69330597 161.91395569]
[86.62976837 172.25408936]
[74.80220032 174.90557861]
[73.53213501 190.67573547]
[60.01343155 196.92823792]
[51.65109253 209.38099670]
[43.28874969 221.83377075]
[34.92640686 234.28652954]
[26.56406593 246.73928833]
[18.20172501 259.19204712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[13 21]
[14 20]
[33 169]
[34 168]
[35 167]
[36 166]
[37 165]
[38 164]
[40 162]
[42 159]
[43 158]
[46 114]
[47 113]
[48 112]
[49 111]
[50 110]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[64 94]
[65 93]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
[136 151]
[137 150]
[138 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
