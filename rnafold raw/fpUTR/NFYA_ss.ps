%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUUGCUAGGCAGCGGCAGUGGCGGCGGCAGCGGCGGCUGGAGCCUCUGAUUGGGUUUCGGAGUCCGGUACUGGAGCCAAUCAGCGCGGGCAGCGAACCGGGGGAGCGAGGCACGGAGUGUACCUCACAGCCUUCUAGGAUCUCCAGAGUGGACAGGAAUCUCACUUGGAGGGACC\
) } def
/len { sequence length } bind def

/coor [
[128.14581299 129.52882385]
[120.50279999 135.94123840]
[111.41075897 140.38084412]
[101.37765503 142.52391052]
[90.98262024 142.17716980]
[85.09070587 155.97157288]
[79.19879150 169.76596069]
[73.30686951 183.56036377]
[67.41495514 197.35475159]
[69.91313171 213.56250000]
[56.95822906 223.61747742]
[41.87714005 217.17597961]
[40.18399811 200.86447144]
[53.62055969 191.46282959]
[59.51247787 177.66844177]
[65.40439606 163.87403870]
[71.29631042 150.07965088]
[77.18822479 136.28526306]
[66.08225250 126.20273590]
[52.91993713 133.39671326]
[39.75761795 140.59069824]
[26.59530258 147.78468323]
[18.19662285 161.19262695]
[3.31779528 160.50723267]
[-9.84452057 167.70121765]
[-18.24320221 181.10914612]
[-33.12202835 180.42375183]
[-46.28434372 187.61773682]
[-54.34720993 201.89787292]
[-70.74596405 201.78469849]
[-78.61097717 187.39465332]
[-69.85140228 173.53096008]
[-53.47832870 174.45541382]
[-40.31601334 167.26142883]
[-32.85879135 154.36805725]
[-17.03850746 154.53889465]
[-3.87619019 147.34490967]
[3.58103323 134.45153809]
[19.40131760 134.62237549]
[32.56363297 127.42839050]
[45.72594833 120.23439789]
[58.88826752 113.04041290]
[60.08905029 88.02050018]
[74.70261383 68.74517059]
[96.83825684 61.37978745]
[118.43332672 67.58565521]
[128.31939697 56.30443954]
[138.20545959 45.02322769]
[148.09152222 33.74201584]
[157.97758484 22.46080208]
[167.86364746 11.17958927]
[177.74971008 -0.10162366]
[181.02592468 -15.57989788]
[195.23316956 -20.05240631]
[205.11923218 -31.33361816]
[215.00529480 -42.61483002]
[224.89135742 -53.89604568]
[228.16757202 -69.37432098]
[242.37483215 -73.84682465]
[252.26089478 -85.12803650]
[262.14694214 -96.40924835]
[259.72006226 -109.67552948]
[265.30398560 -121.73735809]
[276.65197754 -128.27586365]
[289.49975586 -127.09313965]
[299.58227539 -138.19911194]
[309.66479492 -149.30508423]
[319.74734497 -160.41107178]
[329.82986450 -171.51704407]
[333.37719727 -186.93544006]
[347.66076660 -191.15791321]
[351.12615967 -199.64164734]
[358.01901245 -202.36834717]
[368.29489136 -213.29566956]
[378.57077026 -224.22297668]
[388.84664917 -235.15029907]
[399.12252808 -246.07762146]
[409.39840698 -257.00494385]
[419.48095703 -268.11090088]
[429.36700439 -279.39212036]
[423.99633789 -286.85430908]
[420.86944580 -295.93630981]
[420.47000122 -305.94531250]
[423.06347656 -316.04675293]
[428.65673828 -325.33398438]
[436.98007202 -332.90884399]
[447.49414062 -337.96612549]
[448.80874634 -352.90841675]
[450.12338257 -367.85067749]
[440.96047974 -381.01962280]
[445.68133545 -396.35238647]
[460.66445923 -402.08697510]
[474.41610718 -393.82431030]
[476.38717651 -377.90280151]
[465.06564331 -366.53607178]
[463.75103760 -351.59378052]
[462.43640137 -336.65148926]
[468.74905396 -332.60171509]
[476.84878540 -345.22686768]
[489.47381592 -337.12695312]
[481.37432861 -324.50219727]
[487.68695068 -320.45242310]
[500.72097778 -327.87628174]
[513.75500488 -335.30017090]
[526.78906250 -342.72402954]
[539.82312012 -350.14791870]
[548.73455811 -366.24673462]
[566.25494385 -365.49304199]
[574.17791748 -379.18746948]
[589.07165527 -379.02465820]
[601.97338867 -386.67611694]
[614.87512207 -394.32760620]
[627.77685547 -401.97906494]
[635.69982910 -415.67349243]
[650.59356689 -415.51068115]
[663.49530029 -423.16217041]
[668.84307861 -438.28765869]
[684.04949951 -443.40078735]
[697.44952393 -434.57922363]
[698.76373291 -418.59008789]
[686.98400879 -407.69888306]
[671.14678955 -410.26043701]
[658.24505615 -402.60894775]
[651.24487305 -389.46179199]
[635.42834473 -389.07733154]
[622.52661133 -381.42587280]
[609.62487793 -373.77438354]
[596.72314453 -366.12289429]
[589.72296143 -352.97576904]
[573.90643311 -352.59130859]
[570.59985352 -340.93649292]
[559.88891602 -334.46157837]
[547.24694824 -337.11389160]
[534.21295166 -329.69000244]
[521.17889404 -322.26614380]
[508.14486694 -314.84225464]
[495.11080933 -307.41836548]
[488.01162720 -278.43817139]
[464.81005859 -264.04696655]
[440.64822388 -269.50607300]
[430.76214600 -258.22485352]
[430.18081665 -253.45782471]
[426.57992554 -249.01394653]
[420.32574463 -246.72904968]
[410.04986572 -235.80174255]
[399.77398682 -224.87442017]
[389.49810791 -213.94709778]
[379.22222900 -203.01977539]
[368.94635010 -192.09246826]
[358.76675415 -181.07539368]
[355.94055176 -166.45137024]
[340.93582153 -161.43450928]
[330.85330200 -150.32853699]
[320.77078247 -139.22256470]
[310.68826294 -128.11659241]
[300.60574341 -117.01061249]
[302.14160156 -100.27624512]
[290.88833618 -87.34504700]
[273.42816162 -86.52318573]
[263.54211426 -75.24197388]
[253.65603638 -63.96076202]
[251.08694458 -49.28939819]
[236.17257690 -44.00997925]
[226.28651428 -32.72876740]
[216.40045166 -21.44755554]
[206.51438904 -10.16634369]
[203.94528198 4.50502348]
[189.03091431 9.78443909]
[179.14485168 21.06565285]
[169.25878906 32.34686279]
[159.37272644 43.62807846]
[149.48666382 54.90929031]
[139.60060120 66.19050598]
[129.71453857 77.47171783]
[134.79908752 85.05326843]
[137.94961548 93.77145386]
[138.91555786 103.13306427]
[137.57208252 112.59076691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[19 42]
[20 41]
[21 40]
[22 39]
[24 37]
[25 36]
[27 34]
[28 33]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[54 166]
[55 165]
[56 164]
[57 163]
[59 161]
[60 160]
[61 159]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[71 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 141]
[80 140]
[87 97]
[88 96]
[89 95]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[108 130]
[110 128]
[111 127]
[112 126]
[113 125]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
