%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGGAGCCGGGUCCCUGUCCCCGGGCCGGGCGCCGCCGCCGCCCCCUGCCCAGCGCCCGCGUCUCCGCGGCGCCACCCCAGCGCCAAUAUUCCGGAGAUCAAGCGUUACGCGGCGGCGGCGGCGGCGGCGGCGGGGCCCGGAGCGGGAGGCGCCGGGGACCGGGGCGAGGCGGCCCCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[219.12062073 487.44070435]
[217.57514954 484.20959473]
[217.13151550 480.25643921]
[218.06404114 475.97607422]
[212.98529053 461.86203003]
[207.90653992 447.74798584]
[202.82780457 433.63394165]
[189.28437805 427.54202271]
[183.93275452 413.30072021]
[190.41433716 399.13644409]
[185.33560181 385.02236938]
[173.74604797 375.66656494]
[176.35385132 360.06173706]
[171.27510071 345.94769287]
[166.19635010 331.83364868]
[154.60681152 322.47781372]
[157.21461487 306.87301636]
[152.13586426 292.75897217]
[147.05711365 278.64492798]
[144.02238464 276.81835938]
[141.72821045 273.42272949]
[140.90618896 268.82519531]
[142.09477234 263.70751953]
[137.71838379 249.36015320]
[133.34197998 235.01277161]
[128.96557617 220.66540527]
[115.73912811 213.91288757]
[111.09645081 199.42494202]
[118.26879883 185.59761047]
[113.89240265 171.25024414]
[109.51600647 156.90286255]
[105.13960266 142.55549622]
[100.76320648 128.20811462]
[96.38680267 113.86074066]
[86.29927063 104.17915344]
[89.26582336 90.51565552]
[84.88941956 76.16828156]
[80.51302338 61.82090759]
[76.13661957 47.47353363]
[71.76022339 33.12615967]
[67.38382721 18.77878761]
[63.00742722 4.43141365]
[58.63102722 -9.91596031]
[54.25462723 -24.26333427]
[49.87822723 -38.61070633]
[45.50182724 -52.95808029]
[41.00758743 -67.26898193]
[36.39580154 -81.54242706]
[31.66678810 -95.77747345]
[26.82086754 -109.97314453]
[21.97494698 -124.16881561]
[17.12902451 -138.36448669]
[12.28310394 -152.56015015]
[7.32060194 -166.71548462]
[-4.63221169 -177.08085632]
[-1.66114366 -191.67613220]
[-6.73989105 -205.79017639]
[-11.81863880 -219.90422058]
[-27.77424049 -227.05638123]
[-33.51564789 -243.21435547]
[-25.95381927 -258.22766113]
[-31.26401901 -272.25625610]
[-36.57421875 -286.28488159]
[-42.22888184 -300.17822266]
[-48.22457123 -313.92782593]
[-54.22026062 -327.67742920]
[-60.21594620 -341.42703247]
[-66.21163177 -355.17663574]
[-72.20732117 -368.92623901]
[-78.20301056 -382.67587280]
[-98.65528107 -394.94717407]
[-95.58752441 -417.87191772]
[-102.90876770 -430.96386719]
[-110.23001099 -444.05584717]
[-117.55125427 -457.14779663]
[-124.87249756 -470.23974609]
[-140.26667786 -472.98806763]
[-150.25299072 -485.02169800]
[-150.11618042 -500.65866089]
[-139.92088318 -512.51574707]
[-124.48097992 -514.99432373]
[-111.08673096 -506.92413330]
[-106.06248474 -492.11563110]
[-111.78054047 -477.56100464]
[-104.45929718 -464.46902466]
[-97.13805389 -451.37707520]
[-89.81681061 -438.28512573]
[-82.49555969 -425.19317627]
[-75.95964050 -425.23739624]
[-69.68348694 -423.23547363]
[-64.29656219 -419.35455322]
[-60.34946060 -413.95187378]
[-58.25777054 -407.54199219]
[-58.25844955 -400.74780273]
[-60.38344955 -394.24017334]
[-64.45340729 -388.67153931]
[-58.45771408 -374.92193604]
[-52.46202850 -361.17233276]
[-46.46633911 -347.42272949]
[-40.47064972 -333.67312622]
[-34.47496414 -319.92349243]
[-28.47927475 -306.17388916]
[-25.33102798 -304.55081177]
[-22.81855965 -301.31335449]
[-21.69605446 -296.77981567]
[-22.54561234 -291.59506226]
[-17.23541260 -277.56646729]
[-11.92521286 -263.53787231]
[0.45572081 -259.93273926]
[8.61729717 -249.69888306]
[9.40061188 -236.43746948]
[2.29540873 -224.98297119]
[7.37415600 -210.86892700]
[12.45290375 -196.75488281]
[24.04245186 -187.39904785]
[21.43464851 -171.79423523]
[26.66654778 -166.55601501]
[26.47877502 -157.40608215]
[31.32469559 -143.21040344]
[36.17061615 -129.01473999]
[41.01653671 -114.81906128]
[45.86245728 -100.62339783]
[51.00749588 -95.29982758]
[50.66925430 -86.15421295]
[55.28103638 -71.88076019]
[60.33781815 -66.47328949]
[59.84920120 -57.33448029]
[64.22560120 -42.98710632]
[68.60199738 -28.63973236]
[72.97840118 -14.29235935]
[77.35479736 0.05501426]
[81.73120117 14.40238762]
[86.10759735 28.74976158]
[90.48399353 43.09713364]
[94.86039734 57.44450760]
[99.23679352 71.79188538]
[103.61319733 86.13925934]
[113.70072937 95.82084656]
[110.73417664 109.48434448]
[115.11058044 123.83171844]
[119.48697662 138.17909241]
[123.86338043 152.52645874]
[128.23977661 166.87384033]
[132.61618042 181.22120667]
[146.28492737 188.69136047]
[150.51882935 203.30398560]
[143.31295776 216.28900146]
[147.68934631 230.63638306]
[152.06575012 244.98374939]
[156.44215393 259.33111572]
[161.17115784 273.56616211]
[166.24990845 287.68020630]
[171.32865906 301.79425049]
[183.28146362 312.15963745]
[180.31040955 326.75491333]
[185.38914490 340.86895752]
[190.46789551 354.98300171]
[202.42071533 365.34835815]
[199.44964600 379.94363403]
[204.52839661 394.05767822]
[218.54896545 400.84454346]
[223.49847412 415.23052979]
[216.94184875 428.55517578]
[222.02059937 442.66921997]
[227.09933472 456.78326416]
[232.17808533 470.89730835]
[237.71830750 484.83670044]
[243.71398926 498.58630371]
[249.70967102 512.33593750]
[254.81402588 516.58111572]
[256.71047974 521.96112061]
[255.66816711 526.63775635]
[261.20837402 540.57708740]
[266.74859619 554.51647949]
[272.28881836 568.45587158]
[277.82904053 582.39520264]
[283.36926270 596.33459473]
[296.56307983 606.07391357]
[294.45684814 622.33728027]
[279.21725464 628.39422607]
[266.52148438 618.01397705]
[269.42987061 601.87481689]
[263.88964844 587.93542480]
[258.34945679 573.99609375]
[252.80923462 560.05670166]
[247.26901245 546.11730957]
[241.72880554 532.17797852]
[235.96006775 518.33160400]
[229.96438599 504.58200073]
[223.96868896 490.83236694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[10 160]
[11 159]
[13 157]
[14 156]
[15 155]
[17 153]
[18 152]
[19 151]
[23 150]
[24 149]
[25 148]
[26 147]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[47 125]
[48 124]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 116]
[56 114]
[57 113]
[58 112]
[61 108]
[62 107]
[63 106]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[167 190]
[168 189]
[169 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
