%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGUCCCGGGCAGGAGAGCCCGCCAGAGCCGGUGCUGCCUGGCGCCGAGAGGCCCGGACUGGCGACUGCUGCCGCGCCACCGGGGCCCACCUGCGCAGGGACGCUCGGCCUCAGGCCCUCUGGGCUGCUCCACCCUGCUCCGGCCGCAGGCGAGCGGCGAGGGGAGGGGGGCACGGUUU\
) } def
/len { sequence length } bind def

/coor [
[417.20880127 215.29785156]
[403.04144287 210.36972046]
[388.47863770 213.49606323]
[377.98657227 201.65432739]
[363.42376709 204.78068542]
[352.93167114 192.93893433]
[338.76434326 188.01080322]
[324.59701538 183.08267212]
[310.42965698 178.15452576]
[296.26232910 173.22639465]
[282.05322266 168.42004395]
[267.54623413 171.79592896]
[256.85241699 160.13604736]
[242.60255432 155.45182800]
[228.35270691 150.76762390]
[214.10285950 146.08341980]
[199.85301208 141.39921570]
[185.34602356 144.77508545]
[174.65220642 133.11520386]
[160.14521790 136.49108887]
[149.45140076 124.83119965]
[135.20155334 120.14698792]
[120.95169830 115.46278381]
[106.70185089 110.77857208]
[91.70406342 111.03607178]
[77.62341309 116.20668030]
[63.54275513 121.37728882]
[49.46210480 126.54790497]
[35.38145065 131.71850586]
[28.38335037 137.62872314]
[21.01445961 136.85475159]
[6.84712172 141.78289795]
[1.45857739 156.46272278]
[-12.13095570 164.19956970]
[-27.50491524 161.34030151]
[-37.40418625 149.23500061]
[-37.15464020 133.59941101]
[-26.87409973 121.81616974]
[-11.41672421 119.44898224]
[1.91898596 127.61555481]
[16.08632469 122.68741608]
[30.21084023 117.63786316]
[44.29149246 112.46724701]
[58.37214661 107.29663849]
[72.45279694 102.12602997]
[86.53345490 96.95541382]
[85.37581635 82.00015259]
[70.66719055 79.05801392]
[55.95855713 76.11587524]
[40.60589981 81.88024139]
[28.11102867 71.25902557]
[31.32759857 55.17842484]
[46.94667816 50.18078232]
[58.90069580 61.40724564]
[73.60932922 64.34938812]
[88.31795502 67.29151917]
[96.04018402 54.43122864]
[103.76174164 41.57208252]
[94.25206757 29.97182465]
[84.74238586 18.37156296]
[78.66412354 15.66975403]
[75.37425232 10.99738789]
[75.11363983 6.20595264]
[66.00777435 -5.71391487]
[56.90190887 -17.63378334]
[47.79604721 -29.55364990]
[38.69018173 -41.47351837]
[30.97376633 -46.40919113]
[29.53241158 -53.67707062]
[13.91546059 -54.48011017]
[2.50364757 -65.17144012]
[0.68528175 -80.70294189]
[9.31893921 -93.74111176]
[24.32807159 -98.12973022]
[38.62582397 -91.79662323]
[45.46123886 -77.73208618]
[41.60683823 -62.57696915]
[50.61005020 -50.57938004]
[59.71591568 -38.65951538]
[68.82177734 -26.73964691]
[77.92764282 -14.81977844]
[87.03350830 -2.89991069]
[96.34264374 8.86188602]
[105.85232544 20.46214676]
[115.36199951 32.06240845]
[111.38606262 96.52872467]
[125.63591003 101.21293640]
[139.88575745 105.89714050]
[154.13560486 110.58135223]
[169.66183472 107.54051971]
[179.33641052 118.86535645]
[194.86264038 115.82452393]
[204.53721619 127.14936066]
[218.78706360 131.83357239]
[233.03691101 136.51777649]
[247.28675842 141.20198059]
[261.53662109 145.88619995]
[277.06283569 142.84536743]
[286.73742676 154.17019653]
[295.89270020 153.87898254]
[301.19046021 159.05905151]
[315.35778809 163.98719788]
[329.52514648 168.91532898]
[343.69247437 173.84346008]
[357.85980225 178.77160645]
[373.43597412 175.99774170]
[382.91470337 187.48698425]
[398.49084473 184.71313477]
[407.96957397 196.20237732]
[422.13693237 201.13052368]
[436.99569702 199.07691956]
[449.29525757 190.49085999]
[461.59484863 181.90480042]
[466.85702515 174.40725708]
[474.18005371 173.27905273]
[486.62521362 164.90539551]
[499.07037354 156.53175354]
[503.54830933 141.12629700]
[518.43890381 135.15563965]
[532.31945801 143.19995117]
[534.54187012 159.08831787]
[523.40142822 170.63255310]
[507.44403076 168.97689819]
[494.99887085 177.35055542]
[482.55371094 185.72421265]
[470.18090820 194.20437622]
[457.88131714 202.79043579]
[445.58175659 211.37649536]
[446.22531128 226.36268616]
[459.21569824 233.86268616]
[472.20608521 241.36268616]
[481.22735596 242.95036316]
[485.35348511 249.10458374]
[498.21322632 256.82647705]
[507.20590210 258.56875610]
[511.22579956 264.79290771]
[523.95104980 272.73440552]
[536.67633057 280.67593384]
[549.40161133 288.61743164]
[565.20538330 289.35977173]
[571.90618896 302.66195679]
[584.63146973 310.60348511]
[597.35675049 318.54498291]
[612.56945801 315.19683838]
[625.36157227 323.43191528]
[628.45977783 337.95559692]
[641.18505859 345.89709473]
[653.91033936 353.83859253]
[666.63555908 361.78012085]
[679.36083984 369.72161865]
[694.69958496 365.91387939]
[708.19488525 374.13897705]
[711.84020996 389.51712036]
[703.47290039 402.92471313]
[688.05706787 406.40725708]
[674.73870850 397.89865112]
[671.41931152 382.44689941]
[658.69409180 374.50537109]
[645.96881104 366.56387329]
[633.24353027 358.62234497]
[620.51824951 350.68084717]
[606.11041260 354.27944946]
[593.09204102 346.40692139]
[589.41522217 331.27023315]
[576.68994141 323.32873535]
[563.96466064 315.38723755]
[549.07110596 315.21292114]
[541.46008301 301.34271240]
[528.73480225 293.40118408]
[516.00958252 285.45968628]
[503.28430176 277.51818848]
[490.49133301 269.68618774]
[477.63159180 261.96429443]
[464.70608521 254.35307312]
[451.71569824 246.85307312]
[438.72531128 239.35307312]
[434.15881348 238.52514648]
[429.88452148 236.85768127]
[426.05316162 234.43115234]
[422.79565430 231.35235596]
[420.21865845 227.74984741]
[418.40109253 223.76869202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[4 107]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 99]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[19 91]
[21 89]
[22 88]
[23 87]
[24 86]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[31 41]
[32 40]
[47 56]
[48 55]
[49 54]
[58 85]
[59 84]
[60 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[69 77]
[111 128]
[112 127]
[113 126]
[115 125]
[116 124]
[117 123]
[129 176]
[130 175]
[131 174]
[133 173]
[134 172]
[136 171]
[137 170]
[138 169]
[139 168]
[141 166]
[142 165]
[143 164]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
