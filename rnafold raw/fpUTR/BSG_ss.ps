%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACAUGCGAGCGUGUGCGCGCGUGCGCAGGCGGGGCGACCGGCGUCCCCGGCGCUCGCCCCGCCCCCGAGAUGACGCCGUGCGUGCGCGCGCCCGGUCCGCGCCUCCGCCGCUUUUUAUAGCGGCCGCGGGCGGCGGCGGCAGCGGUUGGAGGUUGUAGGACCGGCGAGGAAUAGGAAUC\
) } def
/len { sequence length } bind def

/coor [
[63.08565903 222.15878296]
[52.37750244 211.65472412]
[44.33398819 198.99368286]
[39.37526703 184.83702087]
[37.76035309 169.92420959]
[39.57360840 155.03421021]
[44.72031021 140.94480896]
[52.93162918 128.39193726]
[63.77864075 118.03133392]
[76.69476318 110.40415192]
[91.00595856 105.90868378]
[76.27554321 103.07761383]
[61.54513550 100.24655151]
[46.81472015 97.41548920]
[32.08430862 94.58442688]
[17.35389328 91.75335693]
[2.62348032 88.92229462]
[-12.10693264 86.09123230]
[-26.83734703 83.26016998]
[-41.56776047 80.42910767]
[-56.29817200 77.59803772]
[-71.02858734 74.76697540]
[-85.75900269 71.93591309]
[-94.80368042 73.39092255]
[-100.71826172 68.92675781]
[-115.39762115 65.84186554]
[-130.07696533 62.75696564]
[-144.78239441 59.79887390]
[-159.51281738 56.96780777]
[-174.38728333 55.03131104]
[-189.35154724 53.99644089]
[-204.31581116 52.96157455]
[-219.28005981 51.92670822]
[-234.24432373 50.89184189]
[-249.20858765 49.85697556]
[-264.17285156 48.82210541]
[-279.13711548 47.78723907]
[-294.10134888 46.75237274]
[-309.06561279 45.71750641]
[-323.36672974 52.48427963]
[-335.52984619 43.88734818]
[-350.49411011 42.85247803]
[-364.79519653 49.61925507]
[-376.95834351 41.02231979]
[-391.92260742 39.98745346]
[-406.41094971 47.66989517]
[-420.16278076 38.73572159]
[-419.03137207 22.37565041]
[-404.18066406 15.41951561]
[-390.88775635 25.02319527]
[-375.92349243 26.05806160]
[-362.69274902 19.21726608]
[-349.45925903 27.88821983]
[-334.49499512 28.92308807]
[-321.26425171 22.08229256]
[-308.03076172 30.75324631]
[-293.06649780 31.78811264]
[-278.10223389 32.82297897]
[-263.13796997 33.85784912]
[-248.17372131 34.89271545]
[-233.20945740 35.92758179]
[-218.24519348 36.96244812]
[-203.28094482 37.99731827]
[-188.31668091 39.03218460]
[-173.35241699 40.06705093]
[-183.12153625 28.68441391]
[-183.43402100 13.68766880]
[-174.14755249 1.90796196]
[-159.49218750 -1.28895020]
[-146.14356995 5.55315304]
[-140.18211365 19.31763458]
[-144.32330322 33.73465729]
[-156.68174744 42.23739624]
[-141.95133972 45.06845856]
[-134.77064514 43.23849487]
[-126.99207306 48.07761002]
[-112.31272125 51.16250992]
[-97.63336945 54.24740982]
[-82.92793274 57.20549774]
[-68.19752502 60.03656387]
[-53.46710968 62.86762619]
[-38.73669434 65.69869232]
[-24.00628281 68.52975464]
[-9.27586937 71.36081696]
[5.45454407 74.19187927]
[20.18495750 77.02294922]
[34.91537094 79.85401154]
[49.64578247 82.68507385]
[64.37619781 85.51613617]
[79.10661316 88.34720612]
[93.83702087 91.17826843]
[108.83199310 90.78992462]
[123.39612579 87.20018768]
[137.96025085 83.61045837]
[145.56716919 78.50573730]
[152.80673218 80.08676147]
[167.43066406 76.74894714]
[182.05458069 73.41113281]
[196.67849731 70.07331848]
[211.30241394 66.73550415]
[225.89697266 63.27160263]
[240.46110535 59.68186569]
[255.02523804 56.09213257]
[269.55783081 52.37683487]
[284.05783081 48.53624725]
[298.55783081 44.69565964]
[313.05783081 40.85507584]
[327.55783081 37.01448822]
[342.05783081 33.17390060]
[356.52413940 29.20831299]
[370.95568848 25.11802101]
[385.38720703 21.02772713]
[399.81875610 16.93743324]
[414.25030518 12.84714031]
[401.20556641 5.44210005]
[395.83642578 -8.56404972]
[400.58856201 -22.79138947]
[413.29733276 -30.75924301]
[428.17382812 -28.83818817]
[438.44161987 -17.90327835]
[439.42367554 -2.93546104]
[430.67184448 9.24785614]
[445.49121094 6.92691565]
[457.92797852 -2.85249472]
[471.69915771 2.82234216]
[486.51852417 0.50140202]
[501.33789062 -1.81953800]
[516.15722656 -4.14047813]
[530.97656250 -6.46141815]
[541.55261230 -18.52488899]
[557.57086182 -17.63377380]
[566.74359131 -4.47165918]
[562.03417969 10.86460686]
[547.05529785 16.61035347]
[533.29754639 8.35793591]
[518.47814941 10.67887592]
[503.65881348 12.99981594]
[488.83947754 15.32075596]
[474.02011108 17.64169502]
[462.64331055 27.25509644]
[447.81213379 21.74626923]
[432.99279785 24.06720924]
[418.34060669 27.27868462]
[403.90905762 31.36897850]
[389.47750854 35.45927048]
[375.04595947 39.54956436]
[360.61441040 43.63985825]
[355.02191162 48.50143814]
[345.89840698 47.67389679]
[331.39840698 51.51448441]
[316.89840698 55.35507202]
[302.39840698 59.19565582]
[287.89840698 63.03624344]
[273.39843750 66.87683105]
[267.72283936 71.64115906]
[258.61495972 70.65625763]
[244.05084229 74.24599457]
[229.48670959 77.83573151]
[223.72973633 82.50138092]
[214.64022827 81.35942078]
[200.01631165 84.69723511]
[185.39239502 88.03504944]
[170.76847839 91.37286377]
[156.14454651 94.71067810]
[141.54998779 98.17458344]
[126.98585510 101.76432037]
[112.42173004 105.35405731]
[126.94582367 109.10249329]
[140.23948669 116.05075836]
[151.60833740 125.83591461]
[160.45852661 137.94682312]
[166.32775879 151.75088501]
[168.90945435 166.52705383]
[168.06877136 181.50346375]
[163.84960938 195.89787292]
[156.47235107 208.95834351]
[146.32237244 220.00270081]
[133.92982483 228.45402527]
[119.94205475 233.87088013]
[105.08969879 235.97029114]
[90.14857483 234.64262390]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[18 84]
[19 83]
[20 82]
[21 81]
[22 80]
[23 79]
[25 78]
[26 77]
[27 76]
[28 74]
[29 73]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[41 54]
[42 53]
[44 51]
[45 50]
[92 167]
[93 166]
[94 165]
[96 164]
[97 163]
[98 162]
[99 161]
[100 160]
[101 158]
[102 157]
[103 156]
[104 154]
[105 153]
[106 152]
[107 151]
[108 150]
[109 149]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[122 142]
[123 141]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
