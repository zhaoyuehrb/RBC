%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAGGCUGAGUCCUAAACCUGAAGAAAGUUUAGAGCCUGGGGCUCUAAACUACCUGAGUCUUUCCAAACGACAAGCCAAGAAGACCUGUUGAAAGUUUCCUCUUAAGUUUCGUGGAGAGAGACUCAGGUAUAGAAAUAUCCUUACUGCCACCUGACCUGAAGCAGAAGAAAUCACAGACAGCUUCCAGACCAGGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[100.00697327 119.76728058]
[94.32064819 133.64768982]
[88.63432312 147.52809143]
[82.94799805 161.40850830]
[77.26166534 175.28890991]
[71.57534027 189.16931152]
[73.50364685 204.87257385]
[61.51909637 213.71676636]
[69.79236603 226.84431458]
[68.73580933 242.32537842]
[58.75569153 254.20716858]
[43.68957520 257.92089844]
[29.33068657 252.03854370]
[21.20031166 238.82202148]
[22.42474747 223.35333252]
[32.53317261 211.58050537]
[47.63868713 208.03044128]
[45.30365753 193.32000732]
[57.69493484 183.48298645]
[63.38125992 169.60258484]
[69.06758881 155.72218323]
[74.75391388 141.84176636]
[80.44023895 127.96136475]
[86.12656403 114.08095551]
[80.99076080 108.61528778]
[66.38821411 112.04539490]
[70.71915436 97.68395233]
[65.58335114 92.21828461]
[51.37627792 97.03067017]
[37.16920471 101.84306335]
[22.96213150 106.65544891]
[8.75505733 111.46783447]
[-5.45201588 116.28022003]
[-19.65909004 121.09260559]
[-33.86616135 125.90499115]
[-48.07323456 130.71737671]
[-62.28031158 135.52976990]
[-76.48738098 140.34214783]
[-89.54940796 151.15046692]
[-103.55126953 141.59095764]
[-98.24143982 125.48995972]
[-81.29976654 126.13507843]
[-67.09269714 121.32269287]
[-52.88562393 116.51030731]
[-38.67855072 111.69792175]
[-24.47147560 106.88553619]
[-10.26440239 102.07314301]
[3.94267082 97.26075745]
[18.14974403 92.44837189]
[32.35681915 87.63598633]
[46.56389236 82.82360077]
[60.77096558 78.01121521]
[67.62236023 64.66736603]
[63.25413895 50.31749725]
[58.88592148 35.96763229]
[54.51770020 21.61776543]
[50.14947891 7.26789951]
[45.78125763 -7.08196640]
[41.41303635 -21.43183136]
[37.04481506 -35.78169632]
[32.67659378 -50.13156509]
[28.30837440 -64.48143005]
[23.94015503 -78.83129883]
[19.57193375 -93.18115997]
[15.20371246 -107.53102875]
[0.68779671 -112.68799591]
[-7.90768003 -125.25666046]
[-7.45940447 -140.29870605]
[1.65122437 -152.05175781]
[-2.71699619 -166.40162659]
[-7.08521700 -180.75149536]
[-11.45343781 -195.10136414]
[-16.02260971 -199.89604187]
[-17.28879929 -205.44560242]
[-15.72687340 -209.96582031]
[-19.64670181 -224.44459534]
[-23.56653023 -238.92337036]
[-36.91860580 -251.59934998]
[-31.77097130 -268.37316895]
[-35.91549683 -282.78921509]
[-40.06002426 -297.20529175]
[-44.20454788 -311.62133789]
[-55.45365524 -322.74645996]
[-51.53412628 -337.11608887]
[-55.67865372 -351.53216553]
[-69.22624969 -363.99896240]
[-64.34009552 -380.85079956]
[-68.70832062 -395.20065308]
[-82.76987457 -402.41513062]
[-87.53190613 -417.48489380]
[-80.16918945 -431.46939087]
[-65.04989624 -436.07183838]
[-51.14403152 -428.56167603]
[-46.70169830 -413.39456177]
[-54.35845184 -399.56887817]
[-49.99023438 -385.21902466]
[-39.46429825 -379.24899292]
[-35.71035767 -367.32391357]
[-41.26258850 -355.67669678]
[-37.11806488 -341.26062012]
[-26.16540146 -331.16665649]
[-29.78848457 -315.76586914]
[-25.64395905 -301.34982300]
[-21.49943352 -286.93374634]
[-17.35490608 -272.51766968]
[-6.92308807 -266.38467407]
[-3.35505891 -254.40266418]
[-9.08775520 -242.84320068]
[-5.16792679 -228.36442566]
[-1.24809790 -213.88563538]
[2.89642811 -199.46957397]
[7.26464891 -185.11972046]
[11.63286972 -170.76985168]
[16.00109100 -156.41998291]
[30.11508369 -151.73669434]
[38.86853409 -139.49572754]
[38.73403168 -124.26959229]
[29.55357933 -111.89924622]
[33.92179871 -97.54938507]
[38.29001999 -83.19951630]
[42.65824127 -68.84964752]
[47.02646255 -54.49978256]
[51.39468384 -40.14991760]
[55.76290131 -25.80005264]
[60.13112259 -11.45018673]
[64.49934387 2.89967871]
[68.86756134 17.24954414]
[73.23578644 31.59941101]
[77.60400391 45.94927597]
[81.97222900 60.29914093]
[78.08497620 45.81158447]
[77.65796661 30.81766510]
[80.71440125 16.13235855]
[87.08815002 2.55387092]
[96.43277740 -9.17975330]
[108.24036407 -18.43074608]
[121.86912537 -24.69627762]
[136.57827759 -27.63579369]
[151.56832886 -27.08952141]
[166.02450562 -23.08714867]
[179.16105652 -15.84622383]
[190.26396179 -5.76031733]
[198.72973633 6.62236071]
[204.09822083 20.62876320]
[206.07763672 35.49758911]
[204.56037903 50.42065430]
[199.62892151 64.58683777]
[191.55130005 77.22614288]
[180.76658630 87.65158844]
[167.86094666 95.29649353]
[153.53587341 99.74533844]
[138.56498718 100.75605774]
[150.18785095 110.23810577]
[161.81069946 119.72015381]
[173.43356323 129.20219421]
[188.94699097 127.79813385]
[200.59913635 137.57984924]
[201.84210205 152.37817383]
[213.46495056 161.86022949]
[225.08781433 171.34226990]
[236.78405762 180.73364258]
[248.55296326 190.03379822]
[260.32186890 199.33393860]
[272.09078979 208.63407898]
[284.81631470 200.42799377]
[299.51745605 196.80093384]
[314.59951782 198.14633179]
[328.42651367 204.31825256]
[339.49862671 214.64720154]
[346.61480713 228.01278687]
[349.00314331 242.96519470]
[346.40460205 257.88250732]
[339.10101318 271.14660645]
[327.88461304 281.31869507]
[313.97210693 287.29541016]
[298.87261963 288.42837524]
[284.22399902 284.59478760]
[271.61520386 276.21041870]
[262.41400146 264.18475342]
[257.61843872 249.82225037]
[257.74868774 234.68086243]
[262.79064941 220.40299988]
[251.02172852 211.10284424]
[239.25282288 201.80270386]
[227.48390198 192.50256348]
[220.28155518 190.82072449]
[215.60575867 182.96513367]
[203.98291016 173.48307800]
[192.36004639 164.00103760]
[177.61355591 165.75500488]
[165.69125366 156.30442810]
[163.95150757 140.82505798]
[152.32865906 131.34300232]
[140.70579529 121.86096191]
[129.08294678 112.37891388]
[121.81394958 114.22600555]
[127.46803284 128.11958313]
[133.91758728 141.66223145]
[123.87916565 152.80809021]
[109.73785400 147.80577087]
[108.94036865 132.82756042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[8 17]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[69 114]
[70 113]
[71 112]
[72 111]
[75 110]
[76 109]
[77 108]
[79 105]
[80 104]
[81 103]
[82 102]
[84 100]
[85 99]
[87 96]
[88 95]
[152 195]
[153 194]
[154 193]
[155 192]
[158 189]
[159 188]
[160 187]
[161 185]
[162 184]
[163 183]
[164 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
