%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCAAAGAGGAUUGUGGGAGCUCCGUUGUGCGUCGCUUAAGUGAGGGCGGCGGAUGGGCGAAGGUCCGGUGACUGCGACUGUCGCUGCUUUCUGAGGCCACAGGAAAGGGGCCGUCGGUCGCCGCCAUGACAGCGAGCGAGGCGGAGUUUCUUCCAUCUGCACCCAGUUGUCUUCAGC\
) } def
/len { sequence length } bind def

/coor [
[185.64430237 834.51538086]
[182.30648804 819.89147949]
[169.59750366 812.20916748]
[166.00416565 797.42602539]
[174.14822388 784.14776611]
[170.81040955 769.52380371]
[167.47259521 754.89990234]
[163.95541382 751.63427734]
[162.46835327 746.11541748]
[164.28120422 739.71380615]
[161.45013428 724.98339844]
[158.49205017 710.27795410]
[155.40715027 695.59863281]
[152.32225037 680.91925049]
[150.02262878 679.27349854]
[148.24522400 676.60583496]
[147.38691711 673.11395264]
[147.76461792 669.13665771]
[149.56800842 665.12207031]
[147.50320435 650.26489258]
[145.43840027 635.40765381]
[143.37359619 620.55047607]
[141.30879211 605.69323730]
[139.24398804 590.83605957]
[137.17918396 575.97882080]
[135.11437988 561.12164307]
[133.04959106 546.26440430]
[130.98478699 531.40722656]
[128.91998291 516.54998779]
[126.85517883 501.69281006]
[117.43957520 490.15176392]
[123.20358276 475.41787720]
[121.13877869 460.56066895]
[119.07397461 445.70346069]
[115.02850342 439.49499512]
[117.10404968 430.57223511]
[115.29599762 415.68161011]
[113.48795319 400.79098511]
[111.67990112 385.90032959]
[109.87184906 371.00970459]
[107.31139374 368.55014038]
[105.82775116 364.71786499]
[106.05767059 360.03848267]
[108.37628937 355.30407715]
[107.34142303 340.33981323]
[98.74448395 328.17666626]
[105.51126099 313.87557983]
[96.91432953 301.71243286]
[103.68110657 287.41134644]
[102.64623260 272.44708252]
[101.61136627 257.48281860]
[100.57649994 242.51856995]
[99.54163361 227.55430603]
[98.50676727 212.59004211]
[97.47190094 197.62579346]
[93.86439514 191.15299988]
[96.55059052 182.39471436]
[95.77416992 167.41481018]
[87.38845825 155.10510254]
[94.40106964 140.92292786]
[93.62464905 125.94303894]
[92.84822845 110.96315002]
[55.39653778 91.30687714]
[49.35862732 77.57575989]
[43.32072067 63.84463882]
[37.28281021 50.11352158]
[31.24490356 36.38240051]
[25.20699501 22.65127945]
[20.07850838 18.41265678]
[18.16727638 13.02598000]
[19.20676994 8.34044456]
[13.64640427 -5.59089899]
[8.08603859 -19.52224350]
[2.52567291 -33.45358658]
[-3.03469276 -47.38492966]
[-8.59505844 -61.31627274]
[-23.50240326 -66.03909302]
[-31.84263802 -79.26689148]
[-29.67775726 -94.75389099]
[-18.02995110 -105.18762207]
[-2.39895749 -105.64157867]
[9.83474541 -95.90142822]
[12.89477730 -80.56616974]
[5.33628511 -66.87664032]
[10.89665127 -52.94529724]
[16.45701599 -39.01395035]
[22.01738167 -25.08260918]
[27.57774734 -11.15126514]
[33.13811493 2.78007889]
[38.93811417 16.61337090]
[44.97602463 30.34449196]
[51.01393127 44.07561111]
[57.05184174 57.80673218]
[63.08974838 71.53784943]
[69.12765503 85.26897430]
[76.60504150 85.85095978]
[85.09043884 73.48172760]
[91.55981445 87.01493835]
[99.03720093 87.59693146]
[107.12699890 74.96541595]
[115.21679688 62.33390427]
[123.30660248 49.70239258]
[124.23371887 33.90837479]
[137.61338806 27.36360741]
[133.98530579 11.98138809]
[142.36769104 -1.41678965]
[157.78741455 -4.88202524]
[171.09622192 3.64154434]
[174.39823914 19.09703636]
[165.73443604 32.31498337]
[150.24488831 35.45340729]
[149.89640808 50.34393692]
[135.93811035 57.79219055]
[127.84831238 70.42370605]
[119.75851440 83.05522156]
[111.66870880 95.68672943]
[107.82812500 110.18672943]
[108.60454559 125.16661835]
[109.38096619 140.14651489]
[117.82221222 153.52769470]
[110.75405884 166.63839722]
[111.53047943 181.61828613]
[112.43615723 196.59092712]
[113.47102356 211.55517578]
[114.50588989 226.51943970]
[115.54076385 241.48370361]
[116.57563019 256.44796753]
[117.61049652 271.41223145]
[118.64536285 286.37646484]
[127.31631470 299.60995483]
[120.47551727 312.84072876]
[129.14646912 326.07418823]
[122.30567932 339.30496216]
[123.34054565 354.26919556]
[124.76248169 369.20166016]
[126.57053375 384.09228516]
[128.37858582 398.98294067]
[130.18663025 413.87356567]
[131.99468994 428.76419067]
[133.93118286 443.63867188]
[135.99598694 458.49588013]
[138.06079102 473.35308838]
[147.62406921 485.95681763]
[141.71238708 499.62799072]
[143.77719116 514.48522949]
[145.84199524 529.34240723]
[147.90678406 544.19958496]
[149.97158813 559.05682373]
[152.03639221 573.91400146]
[154.10119629 588.77124023]
[156.16600037 603.62841797]
[158.23080444 618.48565674]
[160.29560852 633.34283447]
[162.36041260 648.20007324]
[164.42521667 663.05725098]
[167.00160217 677.83435059]
[170.08650208 692.51373291]
[173.17140198 707.19305420]
[178.01051331 714.97161865]
[176.18054199 722.15234375]
[179.01161194 736.88275146]
[182.09651184 751.56207275]
[185.43432617 766.18603516]
[188.77214050 780.80993652]
[201.87089539 789.23968506]
[205.04759216 804.11791992]
[196.93040466 816.55364990]
[200.26821899 831.17755127]
[210.88235474 842.91003418]
[206.17114258 857.03991699]
[209.50895691 871.66381836]
[212.84675598 886.28778076]
[216.18457031 900.91168213]
[227.72940063 912.55853271]
[223.15487671 928.30670166]
[207.16690063 931.95587158]
[196.21250916 919.75207520]
[201.56065369 904.24951172]
[198.22283936 889.62554932]
[194.88502502 875.00164795]
[191.54721069 860.37774658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[5 164]
[6 163]
[7 162]
[10 161]
[11 160]
[12 158]
[13 157]
[14 156]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[32 142]
[33 141]
[34 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[44 134]
[45 133]
[47 131]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[57 122]
[58 121]
[60 119]
[61 118]
[62 117]
[63 95]
[64 94]
[65 93]
[66 92]
[67 91]
[68 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[99 116]
[100 115]
[101 114]
[102 113]
[104 111]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
