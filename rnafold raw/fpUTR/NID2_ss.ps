%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUAGAAAAGUUAACGAGAACCAGAUGUGGUGGCCACUGCCGAACUUUCUCAGAGCCGGUGAUUGGUCCCCAGCCGAGGGCCUCAGCCAAUUAGCUUGCUGGGUGGGCCUGGAGUCCCGCCCCGCCCAGGCGCCCGCGGAGAUCCAGGUUCGAGGCUGGCGCGGCGCGGAGAGUGGGCUGGAGGCCGGGGCGGGACGCGUUGUGCAGCGGGUAAGCGCACGGCCGAGCGAGC\
) } def
/len { sequence length } bind def

/coor [
[88.61462402 121.88085175]
[77.97263336 132.45195007]
[67.40154266 143.09393311]
[56.90181732 153.80635071]
[52.76762772 169.07786560]
[38.33309174 172.75120544]
[27.83336830 183.46362305]
[17.33364296 194.17604065]
[6.83391905 204.88844299]
[-3.66580558 215.60086060]
[-7.42929125 223.90530396]
[-14.37821770 226.38511658]
[-25.02020836 236.95620728]
[-35.66220093 247.52731323]
[-32.58201218 253.45938110]
[-31.17010498 260.25918579]
[-31.66737175 267.44784546]
[-34.17509460 274.48110962]
[-38.63784409 280.79064941]
[-44.83854294 285.82919312]
[-52.40661621 289.11679077]
[-60.83927917 290.28356934]
[-70.90104675 301.40835571]
[-80.96282196 312.53314209]
[-91.02458954 323.65789795]
[-93.93901062 339.79602051]
[-109.46161652 345.08569336]
[-121.62407684 334.08538818]
[-117.91470337 318.11126709]
[-102.14937592 313.59613037]
[-92.08760071 302.47134399]
[-82.02583313 291.34658813]
[-71.96405792 280.22180176]
[-81.49448395 268.63858032]
[-94.34912109 276.36892700]
[-107.20376587 284.09927368]
[-114.67123413 298.69955444]
[-131.06072998 299.26235962]
[-139.51213074 285.20867920]
[-131.33137512 270.99575806]
[-114.93411255 271.24462891]
[-102.07946777 263.51428223]
[-89.22483063 255.78393555]
[-70.93909454 233.83306885]
[-46.23329544 236.88531494]
[-35.59130478 226.31422424]
[-24.94931221 215.74313354]
[-14.37821770 205.10113525]
[-3.87849331 194.38871765]
[6.62123156 183.67631531]
[17.12095642 172.96389771]
[27.62068176 162.25148010]
[31.00386047 147.74620056]
[46.18940353 143.30662537]
[56.68912888 132.59420776]
[59.12244034 125.62886810]
[67.40154266 121.80995941]
[78.04353333 111.23886108]
[75.70581818 104.26512146]
[75.52831268 96.91212463]
[61.92194748 90.59810638]
[48.31558609 84.28408051]
[36.81353378 91.86263275]
[23.17725945 92.76536560]
[10.97136879 86.86334991]
[3.33375454 75.79256439]
[2.16907477 62.50194931]
[-11.35166645 56.00659943]
[-24.87240791 49.51124954]
[-38.39315033 43.01590347]
[-51.91389084 36.52055359]
[-67.70355988 37.51902771]
[-75.82527161 25.03355598]
[-92.12753296 26.81353760]
[-101.60059357 13.42723274]
[-94.49938202 -1.35467577]
[-78.12901306 -2.32582831]
[-69.32992554 11.51281357]
[-54.50735092 10.04974937]
[-45.41854477 22.99981308]
[-31.89780235 29.49516106]
[-18.37705994 35.99050903]
[-4.85631847 42.48585892]
[8.66442299 48.98120499]
[22.86399078 40.72899246]
[39.34881210 42.59119797]
[51.59269714 54.03016663]
[54.62960815 70.67771912]
[68.23596954 76.99173737]
[81.84233093 83.30576324]
[87.54566193 78.70944214]
[94.34732056 75.99071503]
[101.64749146 75.38935089]
[108.80236816 76.95836639]
[115.18096924 80.55941010]
[120.22077942 85.87489319]
[134.54731750 81.43076324]
[148.87385559 76.98662567]
[163.20039368 72.54249573]
[177.52693176 68.09835815]
[191.85346985 63.65422821]
[206.18000793 59.21009445]
[217.06820679 47.73152542]
[231.51643372 51.35065842]
[245.84297180 46.90652466]
[260.16949463 42.46239090]
[271.05770874 30.98382187]
[285.50592041 34.60295868]
[286.26873779 24.77522850]
[290.40435791 15.59644890]
[297.55255127 8.21183109]
[306.96914673 3.59431052]
[317.60226440 2.41785407]
[328.20944214 4.96280766]
[337.50283813 11.06624031]
[344.30551147 20.12508011]
[357.36221313 12.74114990]
[370.41891479 5.35722113]
[383.47561646 -2.02670836]
[396.53231812 -9.41063786]
[409.58905029 -16.79456711]
[422.64575195 -24.17849541]
[435.70245361 -31.56242561]
[448.75915527 -38.94635391]
[461.81585693 -46.33028412]
[474.87255859 -53.71421432]
[487.87963867 -61.18524933]
[500.83645630 -68.74306488]
[513.74249268 -76.38731384]
[521.58142090 -90.12999725]
[536.47589111 -90.05840302]
[549.33050537 -97.78874207]
[562.18511963 -105.51908875]
[570.02410889 -119.26177979]
[584.91851807 -119.19017792]
[597.50769043 -127.34574127]
[609.81726074 -135.91741943]
[622.12689209 -144.48910522]
[634.43652344 -153.06077576]
[646.74609375 -161.63244629]
[649.65673828 -176.93493652]
[662.26257324 -185.45248413]
[676.83319092 -182.58331299]
[679.74383545 -197.88578796]
[692.34960938 -206.40333557]
[706.92028809 -203.53417969]
[719.22985840 -212.10585022]
[731.53948975 -220.67752075]
[743.84906006 -229.24920654]
[744.02557373 -244.76527405]
[753.31542969 -257.19418335]
[768.14660645 -261.75674438]
[782.81610107 -256.69857788]
[791.68328857 -243.96463013]
[791.33843994 -228.45140076]
[781.91430664 -216.12399292]
[767.03454590 -211.72259521]
[752.42077637 -216.93960571]
[740.11114502 -208.36791992]
[727.80157471 -199.79624939]
[715.49194336 -191.22456360]
[713.12835693 -176.56343079]
[700.76678467 -167.69517517]
[685.40484619 -170.27371216]
[683.04125977 -155.61256409]
[670.67968750 -146.74430847]
[655.31774902 -149.32284546]
[643.00817871 -140.75117493]
[630.69854736 -132.17948914]
[618.38897705 -123.60781860]
[606.07934570 -115.03614044]
[620.19219971 -109.95404053]
[625.14801025 -95.79635620]
[617.28564453 -83.02201080]
[602.41351318 -81.06800842]
[591.51818848 -91.37785339]
[592.64886475 -106.33554077]
[585.72937012 -93.14577484]
[569.91546631 -92.66445160]
[557.06085205 -84.93410492]
[544.20623779 -77.20375824]
[537.28674316 -64.01399994]
[521.47283936 -63.53267288]
[517.36737061 -57.40224838]
[508.39428711 -55.78623199]
[495.43743896 -48.22842026]
[491.25036621 -42.15342712]
[482.25650024 -40.65750504]
[469.19979858 -33.27357864]
[456.14309692 -25.88964844]
[443.08639526 -18.50571823]
[430.02966309 -11.12178898]
[416.97296143 -3.73786020]
[403.91625977 3.64606905]
[390.85955811 11.02999878]
[377.80285645 18.41392708]
[364.74615479 25.79785728]
[351.68942261 33.18178558]
[348.89840698 47.91983795]
[358.35119629 59.56650543]
[367.80398560 71.21317291]
[377.25677490 82.85984039]
[386.70956421 94.50650024]
[394.53372192 99.18733978]
[396.20962524 106.37262726]
[405.50585938 118.14462280]
[414.80212402 129.91661072]
[430.50360107 133.20947266]
[437.58987427 147.60267639]
[430.62493896 162.05499268]
[414.95172119 165.47984314]
[402.59335327 155.24996948]
[403.03012085 139.21286011]
[393.73385620 127.44087219]
[384.43762207 115.66887665]
[375.06289673 103.95928955]
[365.61010742 92.31262207]
[356.15731812 80.66595459]
[346.70452881 69.01929474]
[337.25173950 57.37262726]
[310.42214966 64.30416870]
[289.95007324 48.92949677]
[280.08657837 60.09019089]
[264.61364746 56.78892899]
[250.28710938 61.23306274]
[235.96057129 65.67719269]
[226.09709167 76.83789062]
[210.62413025 73.53662872]
[196.29759216 77.98076630]
[181.97106934 82.42489624]
[167.64453125 86.86903381]
[153.31799316 91.31316376]
[138.99145508 95.75730133]
[124.66490936 100.20143127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 55]
[4 54]
[6 52]
[7 51]
[8 50]
[9 49]
[10 48]
[12 47]
[13 46]
[14 45]
[22 33]
[23 32]
[24 31]
[25 30]
[34 43]
[35 42]
[36 41]
[60 90]
[61 89]
[62 88]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[73 78]
[96 234]
[97 233]
[98 232]
[99 231]
[100 230]
[101 229]
[102 228]
[104 226]
[105 225]
[106 224]
[108 222]
[116 198]
[117 197]
[118 196]
[119 195]
[120 194]
[121 193]
[122 192]
[123 191]
[124 190]
[125 189]
[126 188]
[127 186]
[128 185]
[129 183]
[131 181]
[132 180]
[133 179]
[135 177]
[136 171]
[137 170]
[138 169]
[139 168]
[140 167]
[143 164]
[146 161]
[147 160]
[148 159]
[149 158]
[199 220]
[200 219]
[201 218]
[202 217]
[203 216]
[205 215]
[206 214]
[207 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
