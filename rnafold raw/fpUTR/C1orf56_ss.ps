%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCGGUUCAAACGACCCGGUGGGUCUACAGCGGAAGGGAGGGAGCGAAGGUAGGAGGCAGGGCUUGCCUCACUGGCCACCCUCCCAACCCCAAGAGCCCAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.98436737 275.09689331]
[98.12018585 260.12182617]
[97.25600433 245.14672852]
[86.46877289 237.93952942]
[81.77674103 225.63487244]
[85.12420654 212.69647217]
[95.49401855 203.95925903]
[95.06175232 188.96548462]
[94.62948608 173.97171021]
[94.19721222 158.97793579]
[93.76494598 143.98417664]
[85.50560760 141.99281311]
[77.77641296 138.46551514]
[70.86006927 133.53129578]
[65.00955200 127.37063599]
[60.43884659 120.20886993]
[46.12051010 124.67935181]
[31.80217361 129.14984131]
[17.48383522 133.62031555]
[3.16549826 138.09080505]
[-10.15183353 148.58294678]
[-23.92054176 138.69056702]
[-18.22632408 122.72146606]
[-1.30498445 123.77246857]
[13.01335335 119.30197906]
[27.33168983 114.83149719]
[41.65002823 110.36101532]
[55.96836472 105.89053345]
[56.14554596 92.90986633]
[60.06775665 80.53466797]
[67.40005493 69.82174683]
[77.51628113 61.68595886]
[89.55255127 56.82206345]
[102.48099518 55.64542770]
[115.19757843 58.25653458]
[122.63508606 45.23027420]
[118.69425201 30.16018677]
[126.42251587 17.05565834]
[140.81382751 13.39154720]
[148.25134277 0.36528832]
[155.68884277 -12.66096973]
[163.12635803 -25.68722916]
[170.56387329 -38.71348572]
[178.00138855 -51.73974609]
[185.43890381 -64.76600647]
[185.56228638 -80.58673096]
[198.59211731 -87.80289459]
[200.17182922 -96.95819855]
[206.43630981 -101.09292603]
[202.93139648 -116.27031708]
[211.03410339 -129.14669800]
[225.52502441 -132.39454651]
[233.33483887 -145.20106506]
[241.14465332 -158.00758362]
[241.70419312 -164.84426880]
[245.19241333 -169.57336426]
[249.79148865 -171.30854797]
[258.32614136 -183.64385986]
[266.86077881 -195.97915649]
[275.39544678 -208.31446838]
[283.93008423 -220.64976501]
[292.46475220 -232.98507690]
[291.01657104 -248.96263123]
[302.70458984 -259.95217896]
[318.56271362 -257.52346802]
[326.42599487 -243.53959656]
[320.26239014 -228.72781372]
[304.80004883 -224.45042419]
[296.26541138 -212.11512756]
[287.73074341 -199.77981567]
[279.19610596 -187.44450378]
[270.66143799 -175.10920715]
[262.12680054 -162.77389526]
[253.95117188 -150.19776917]
[246.14135742 -137.39125061]
[238.33154297 -124.58473969]
[242.07858276 -110.21479797]
[234.34074402 -97.11591339]
[219.24282837 -93.28311157]
[211.61837769 -80.36537933]
[212.02696228 -65.47637939]
[198.46516418 -57.32849121]
[191.02764893 -44.30223465]
[183.59013367 -31.27597427]
[176.15261841 -18.24971581]
[168.71510315 -5.22345781]
[161.27760315 7.80280066]
[153.84008789 20.82905960]
[157.99967957 35.08505249]
[150.64254761 48.40148163]
[135.66134644 52.66778946]
[128.22383118 65.69404602]
[140.35343933 81.42357635]
[144.41545105 100.86697388]
[139.59776306 120.13703918]
[126.86357117 135.38124084]
[108.75871277 143.55189514]
[109.19098663 158.54566956]
[109.62325287 173.53944397]
[110.05552673 188.53321838]
[110.48779297 203.52697754]
[123.40103149 215.21939087]
[123.92884064 232.29573059]
[112.23109436 244.28256226]
[113.09526825 259.25762939]
[113.95944977 274.23272705]
[120.90827179 289.69720459]
[107.97177124 300.65545654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[35 92]
[36 91]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 82]
[47 80]
[49 79]
[52 76]
[53 75]
[54 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
