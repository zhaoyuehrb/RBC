%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUAAAAGGGCGGCCGGCAGCUGGGCAAUUGCUUUGCGAGGCUGGGUGUUGAGUCGAGCCGCGGGAAAGGCGCGUGUCGGCCUCUCACUGGCGCAGCCUGCACUGCCGCUGCCGCCUCGCCCCGCCCUGCCCUGGCGUUGUCUCUGGCACUGUGGCGGACUGACCACGGCCCGGGC\
) } def
/len { sequence length } bind def

/coor [
[194.80917358 256.44754028]
[182.57777405 265.13046265]
[167.60003662 265.94732666]
[154.49687195 258.64614868]
[147.31089783 245.47944641]
[148.25910950 230.50946045]
[157.04896545 218.35469055]
[170.96861267 212.76513672]
[185.72369385 215.46534729]
[176.03713989 204.01237488]
[166.35058594 192.55940247]
[156.66403198 181.10643005]
[146.97747803 169.65344238]
[137.29092407 158.20046997]
[127.60436249 146.74749756]
[122.97668457 145.46411133]
[119.11736298 141.24270630]
[117.78740692 134.71838379]
[108.50875092 122.93252563]
[99.23009491 111.14665985]
[89.84837341 99.44267273]
[80.36431122 87.82146454]
[66.87924194 88.01300812]
[55.91138840 80.50472260]
[51.34688568 68.22898102]
[54.64544296 55.75564575]
[45.36678696 43.96978378]
[36.08813477 32.18392181]
[26.80947876 20.39805794]
[11.41170120 20.86133003]
[-1.15945089 12.26950073]
[-6.20128345 -1.90949488]
[-1.97772419 -16.16781044]
[-11.25637817 -27.95367241]
[-26.70318794 -29.96212006]
[-35.94516754 -42.04684067]
[-33.93522644 -56.76063156]
[-43.21388245 -68.54649353]
[-52.49253845 -80.33235931]
[-60.28349686 -85.15766144]
[-61.82843399 -92.40746307]
[-70.89881897 -104.35434723]
[-79.96920013 -116.30123901]
[-89.03958893 -128.24812317]
[-98.10997009 -140.19500732]
[-107.18035889 -152.14190674]
[-121.68766022 -158.45448303]
[-123.22129822 -173.26992798]
[-132.29168701 -185.21681213]
[-149.65119934 -187.26139832]
[-159.96966553 -200.95010376]
[-157.26374817 -217.53552246]
[-166.54240417 -229.32138062]
[-175.82106018 -241.10725403]
[-185.40673828 -252.64479065]
[-195.29280090 -263.92599487]
[-205.17886353 -275.20721436]
[-215.06492615 -286.48843384]
[-224.95098877 -297.76962280]
[-240.48210144 -298.96237183]
[-250.34725952 -310.54394531]
[-249.11447144 -325.34313965]
[-259.00051880 -336.62435913]
[-268.88659668 -347.90554810]
[-278.77264404 -359.18676758]
[-294.40170288 -358.67050171]
[-306.67416382 -368.36178589]
[-309.79531860 -383.68472290]
[-302.29147339 -397.40426636]
[-287.70571899 -403.04251099]
[-272.92498779 -397.93719482]
[-264.92828369 -384.49893188]
[-267.49145508 -369.07284546]
[-257.60537720 -357.79162598]
[-247.71931458 -346.51040649]
[-237.83325195 -335.22918701]
[-223.00028992 -334.50891113]
[-212.81372070 -323.20898438]
[-213.66978455 -307.65570068]
[-203.78372192 -296.37448120]
[-193.89765930 -285.09326172]
[-184.01159668 -273.81207275]
[-174.12553406 -262.53085327]
[-170.62107849 -261.94311523]
[-167.23243713 -259.61111450]
[-164.78434753 -255.61050415]
[-164.03520203 -250.38591003]
[-154.75654602 -238.60003662]
[-145.47789001 -226.81417847]
[-132.57878113 -227.09277344]
[-121.71740723 -219.77436829]
[-116.99331665 -207.35055542]
[-120.34479523 -194.28720093]
[-111.27441406 -182.34031677]
[-97.41588593 -176.88224792]
[-95.23346710 -161.21228027]
[-86.16308594 -149.26539612]
[-77.09269714 -137.31851196]
[-68.02231598 -125.37162018]
[-58.95193100 -113.42473602]
[-49.88154602 -101.47784424]
[-40.70667267 -89.61101532]
[-31.42801857 -77.82514954]
[-22.14936447 -66.03928375]
[-7.37486458 -64.53937531]
[2.20290446 -52.71901321]
[0.52948475 -37.23232651]
[9.80813885 -25.44646454]
[24.65947723 -26.20524025]
[37.25889206 -17.97610092]
[42.65991592 -3.73944688]
[38.59534073 11.11940289]
[47.87399673 22.90526581]
[57.15264893 34.69112778]
[66.43130493 46.47699356]
[83.18849945 47.73968887]
[94.07276917 60.98296356]
[91.98551941 78.33740234]
[101.46958160 89.95861053]
[108.62205505 93.73002625]
[111.01596069 101.86801147]
[120.29461670 113.65386963]
[129.57327271 125.43973541]
[139.05732727 137.06094360]
[148.74389648 148.51391602]
[158.43045044 159.96688843]
[168.11700439 171.41986084]
[177.80355835 182.87284851]
[187.49011230 194.32582092]
[197.17666626 205.77879333]
[207.73663330 216.43182373]
[219.10417175 226.21852112]
[230.47169495 236.00520325]
[241.83923340 245.79188538]
[257.34564209 248.93215942]
[261.94265747 263.09960938]
[273.31021118 272.88629150]
[284.67773438 282.67297363]
[296.13070679 292.35952759]
[307.66824341 301.94522095]
[323.22738647 304.81286621]
[328.07232666 318.89746094]
[339.60986328 328.48312378]
[351.14739990 338.06881714]
[362.85137939 347.45053101]
[374.71823120 356.62539673]
[386.58505249 365.80029297]
[398.45187378 374.97515869]
[414.10208130 377.29498291]
[419.43832397 391.20089722]
[431.30517578 400.37576294]
[447.53414917 405.28048706]
[447.31372070 422.23300171]
[430.96267700 426.71411133]
[422.13027954 412.24258423]
[410.26345825 403.06771851]
[395.46203613 401.40411377]
[389.27700806 386.84197998]
[377.41018677 377.66711426]
[365.54333496 368.49224854]
[353.67651367 359.31738281]
[348.88278198 359.02978516]
[344.22622681 355.70846558]
[341.56170654 349.60635376]
[330.02416992 340.02066040]
[318.48663330 330.43499756]
[303.75274658 328.25299072]
[298.08255005 313.48275757]
[286.54501343 303.89706421]
[279.36996460 302.03561401]
[274.89105225 294.04049683]
[263.52349854 284.25381470]
[252.15597534 274.46713257]
[237.46263123 272.02688599]
[232.05253601 257.15942383]
[220.68501282 247.37272644]
[209.31747437 237.58604431]
[197.94995117 227.79936218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[18 123]
[19 122]
[20 121]
[21 119]
[22 118]
[26 115]
[27 114]
[28 113]
[29 112]
[33 108]
[34 107]
[37 104]
[38 103]
[39 102]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[46 96]
[48 94]
[49 93]
[52 89]
[53 88]
[54 87]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[62 76]
[63 75]
[64 74]
[65 73]
[131 178]
[132 177]
[133 176]
[134 175]
[136 173]
[137 172]
[138 171]
[139 169]
[140 168]
[142 166]
[143 165]
[144 164]
[145 161]
[146 160]
[147 159]
[148 158]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
