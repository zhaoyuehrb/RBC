%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUCGGACCAUGACGUCAAGGUGGGCUGGUGGCGGCAGGUGCGGGGUUGACAAUCAUACUCCUUUAAGGCGGAGGGAUCUACAGGAGGGCGGCUGUACUGUGCUUCGCCUUAUAUAGGGCGACUUGGGGCACGCAGUAGCUCUCUCGAGUCACUCCGGCGCAGUGUUGGGACUGUCUGGGUAUCGGAAAGCAAGCCUACGUUGCUCACUAUUACGUAUAAUCCUUUUCUUUUCAAGAUUUUUAUUUUAG\
) } def
/len { sequence length } bind def

/coor [
[168.81814575 684.09875488]
[172.45933533 669.50488281]
[178.64802551 655.79577637]
[187.18530273 643.41210938]
[197.79672241 632.75201416]
[210.14115906 624.15814209]
[223.82179260 617.90673828]
[220.12043762 603.37060547]
[216.41908264 588.83441162]
[203.07046509 586.01562500]
[192.18289185 577.68493652]
[185.91181946 565.41992188]
[185.52951050 551.58392334]
[191.16732788 538.87042236]
[201.77906799 529.77917480]
[198.25920105 515.19799805]
[194.73934937 500.61682129]
[191.21948242 486.03564453]
[177.40417480 480.53338623]
[169.38304138 467.80053711]
[170.40951538 452.60842896]
[180.29905701 440.79730225]
[176.77919006 426.21612549]
[173.25932312 411.63494873]
[169.73947144 397.05377197]
[166.21960449 382.47259521]
[162.69973755 367.89141846]
[159.17988586 353.31027222]
[144.46122742 345.14938354]
[140.12600708 328.53787231]
[149.33511353 313.64984131]
[145.63375854 299.11367798]
[141.84185791 284.60089111]
[137.95956421 270.11199951]
[134.07728577 255.62310791]
[121.01762390 243.88401794]
[125.96669769 226.13471985]
[121.90409088 211.69535828]
[105.03468323 198.12268066]
[111.01245117 176.51336670]
[106.23515320 162.29444885]
[101.45785522 148.07554626]
[96.68054962 133.85662842]
[91.90325165 119.63771820]
[78.86637115 112.21884155]
[64.20198059 115.37408447]
[49.53759003 118.52933502]
[34.87319565 121.68458557]
[20.20880318 124.83982849]
[5.56436396 128.08642578]
[-9.05955505 131.42424011]
[-23.68347359 134.76205444]
[-37.78004837 144.18133545]
[-50.73354340 133.24317932]
[-43.80873871 117.76792908]
[-27.02128792 120.13813782]
[-12.39736843 116.80032349]
[2.22654986 113.46250916]
[8.03283978 108.92216492]
[17.05355644 110.17543793]
[31.71794891 107.02018738]
[46.38233948 103.86494446]
[61.04673386 100.70969391]
[75.71112823 97.55444336]
[79.62188721 91.15476227]
[65.03202820 87.67108917]
[63.83687592 72.71877289]
[77.68811798 66.96176910]
[87.44342041 78.35540009]
[91.35417938 71.95571899]
[80.30877686 60.62833786]
[84.48837280 46.33217621]
[80.60608673 31.84328842]
[76.72380066 17.35440063]
[72.84151459 2.86551332]
[68.95922852 -11.62337399]
[57.91382599 -22.95075607]
[62.09342194 -37.24691772]
[58.21113968 -51.73580551]
[52.98053360 -59.19132614]
[54.37196732 -66.42953491]
[50.67060852 -80.96569061]
[45.53335571 -88.48583984]
[47.01491547 -95.70614624]
[36.25534058 -107.30537415]
[40.79005432 -121.49288940]
[37.27019119 -136.07406616]
[33.75033188 -150.65524292]
[30.23047066 -165.23640442]
[26.71060944 -179.81758118]
[23.19074821 -194.39875793]
[19.67088699 -208.97991943]
[8.91131401 -220.57914734]
[13.44602585 -234.76667786]
[9.92616463 -249.34783936]
[6.40630388 -263.92901611]
[2.88644290 -278.51019287]
[-0.63341808 -293.09136963]
[-4.19436979 -296.83581543]
[-5.81842232 -301.13900757]
[-5.61467695 -305.17620850]
[-4.00142765 -308.28347778]
[-6.97361994 -322.98605347]
[-9.94581223 -337.68862915]
[-12.91800404 -352.39123535]
[-15.89019585 -367.09381104]
[-19.31909943 -381.69665527]
[-23.20138550 -396.18554688]
[-27.08367157 -410.67440796]
[-30.96595764 -425.16329956]
[-34.84824371 -439.65219116]
[-38.73052979 -454.14108276]
[-42.61281586 -468.62997437]
[-54.58505249 -479.83700562]
[-50.60258102 -495.74523926]
[-34.76221848 -499.98965454]
[-23.35917854 -488.20394897]
[-28.12392616 -472.51226807]
[-24.24164200 -458.02337646]
[-20.35935593 -443.53448486]
[-16.47706985 -429.04559326]
[-12.59478378 -414.55670166]
[-8.71249866 -400.06781006]
[-4.83021307 -385.57891846]
[4.69851589 -397.16354370]
[19.69819069 -397.06463623]
[29.07332420 -385.35537720]
[25.88899231 -370.69726562]
[12.50069141 -363.93316650]
[-1.18760884 -370.06600952]
[1.78458333 -355.36343384]
[4.75677538 -340.66082764]
[7.72896767 -325.95825195]
[10.70115948 -311.25567627]
[13.94775391 -296.61123657]
[17.46761513 -282.03005981]
[20.98747635 -267.44888306]
[24.50733757 -252.86770630]
[28.02719879 -238.28652954]
[38.53500748 -227.73023987]
[34.25205994 -212.49978638]
[37.77191925 -197.91860962]
[41.29178238 -183.33744812]
[44.81164169 -168.75627136]
[48.33150482 -154.17509460]
[51.85136414 -139.59391785]
[55.37122345 -125.01274872]
[65.87903595 -114.45646667]
[61.59608459 -99.22600555]
[65.20676422 -84.66705322]
[68.90812683 -70.13089752]
[72.70002747 -55.61809158]
[76.58231354 -41.12920380]
[87.35002899 -30.83816338]
[83.44812012 -15.50566006]
[87.33040619 -1.01677239]
[91.21269226 13.47211456]
[95.09497833 27.96100235]
[98.97726440 42.44989014]
[109.74497986 52.74092865]
[105.84307098 68.07343292]
[119.59149933 74.07181549]
[132.85324097 67.06278229]
[146.11495972 60.05375671]
[159.37669373 53.04472733]
[172.63842773 46.03569412]
[177.05673218 30.86157036]
[190.95069885 23.32940674]
[206.07725525 27.90790176]
[213.46211243 41.88071823]
[208.72393799 56.95802689]
[194.67382812 64.19473267]
[179.64746094 59.29742813]
[166.38572693 66.30645752]
[153.12399292 73.31548309]
[139.86225891 80.32451630]
[126.60053253 87.33354187]
[126.59317780 96.80628967]
[123.59970093 104.91573334]
[118.48577118 110.83714294]
[112.30243683 114.14985657]
[106.12216187 114.86042023]
[110.89945984 129.07933044]
[115.67676544 143.29823303]
[120.45406342 157.51715088]
[125.23136139 171.73605347]
[133.20881653 173.98721313]
[139.58442688 179.13642883]
[143.37619019 186.29588318]
[144.03767395 194.27638245]
[141.53559875 201.78459167]
[136.34346008 207.63275146]
[140.40606689 222.07211304]
[151.24072266 229.03822327]
[154.33702087 241.12843323]
[148.56617737 251.74082947]
[152.44845581 266.22970581]
[156.33074951 280.71859741]
[161.56134033 288.17413330]
[160.16990662 295.41232300]
[163.87127686 309.94848633]
[176.15263367 315.43991089]
[182.93716431 326.83132935]
[181.94514465 339.85791016]
[173.76106262 349.79040527]
[177.28091431 364.37158203]
[180.80078125 378.95275879]
[184.32063293 393.53390503]
[187.84049988 408.11508179]
[191.36036682 422.69625854]
[194.88021851 437.27743530]
[209.06901550 443.27612305]
[216.91323853 456.32684326]
[215.58432007 471.31677246]
[205.80065918 482.51580811]
[209.32052612 497.09698486]
[212.84037781 511.67813110]
[216.36024475 526.25933838]
[232.27798462 530.77941895]
[243.67326355 542.64752197]
[247.49890137 558.55297852]
[242.80113220 574.12493896]
[230.95523071 585.13305664]
[234.65660095 599.66925049]
[238.35795593 614.20538330]
[253.36233521 613.15264893]
[268.31353760 614.79620361]
[282.73095703 619.08319092]
[296.15109253 625.87579346]
[308.14257812 634.95568848]
[318.31994629 646.03094482]
[326.35598755 658.74554443]
[331.99240112 672.69079590]
[335.04803467 687.41845703]
[335.42462158 702.45501709]
[333.11004639 717.31707764]
[328.17874146 731.52703857]
[320.78924561 744.62799072]
[311.17904663 756.19879150]
[299.65710449 765.86755371]
[286.59381104 773.32342529]
[272.40905762 778.32672119]
[257.55886841 780.71661377]
[242.52059937 780.41632080]
[227.77766418 777.43542480]
[213.80400085 771.86975098]
[201.04878235 763.89831543]
[189.92205811 753.77722168]
[180.78149414 741.83197021]
[173.92091370 728.44641113]
[169.56088257 714.05096436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 225]
[8 224]
[9 223]
[15 218]
[16 217]
[17 216]
[18 215]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[31 201]
[32 200]
[33 198]
[34 197]
[35 196]
[37 193]
[38 192]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 58]
[51 57]
[52 56]
[70 161]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[78 153]
[79 152]
[81 151]
[82 150]
[84 149]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
