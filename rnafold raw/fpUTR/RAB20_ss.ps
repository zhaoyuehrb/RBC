%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACGUGGGCUCCGUGCUCUGCACCCAGCUCCUUCCCGGGCGCGCACACGCGCUUCCUCUCUUGAGCUCCCGGGCGUCCGGAGGCGAAGGUCCCGGAGCGUUCACGAGAAUCCGGGUCCCGGCGAGUCCGGGGUCCGCUCCUCCAGCUGCGCCCAGGGCGCACGAGCCGGCCAGCCUCGGGGAGAGGGCGCGGGGGCGCUGGGGGUUCUUACGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[96.22402191 247.43202209]
[103.93829346 260.29632568]
[101.69834900 275.12811279]
[90.52916718 285.14059448]
[75.54163361 285.75210571]
[63.59388733 276.68286133]
[60.15300751 262.08340454]
[52.37524414 274.90942383]
[44.59747696 287.73541260]
[36.81970978 300.56143188]
[29.04194450 313.38742065]
[32.58479309 328.55603027]
[24.51432037 341.45260620]
[10.03155994 344.73669434]
[2.25379419 357.56271362]
[-5.52397203 370.38870239]
[-13.30173779 383.21469116]
[-16.34458351 399.89337158]
[-33.21377182 401.58654785]
[-39.51063538 385.84533691]
[-26.12774086 375.43695068]
[-18.34997559 362.61093140]
[-10.57220936 349.78494263]
[-2.79444289 336.95892334]
[-6.57740211 322.59838867]
[1.12764740 309.48022461]
[16.21594238 305.60968018]
[23.99370766 292.78366089]
[31.77147293 279.95767212]
[39.54924011 267.13165283]
[47.32700729 254.30564880]
[54.45127106 241.10546875]
[60.90408325 227.56437683]
[67.35689545 214.02328491]
[73.80970001 200.48219299]
[80.26251221 186.94108582]
[86.71532440 173.39999390]
[93.16813660 159.85890198]
[83.71997070 148.20849609]
[69.13819885 151.72586060]
[54.55642700 155.24322510]
[39.97465134 158.76060486]
[25.39287949 162.27796936]
[10.81110668 165.79534912]
[-0.69291240 177.48249817]
[-16.49616814 173.10195923]
[-20.34162712 157.16004944]
[-8.27341080 146.05644226]
[7.29373550 151.21357727]
[21.87550926 147.69619751]
[36.45728302 144.17883301]
[51.03905487 140.66145325]
[65.62082672 137.14408875]
[80.20259857 133.62670898]
[80.04122925 126.12844849]
[79.71849060 111.13192749]
[79.55711365 103.63365936]
[64.83751678 100.74688721]
[50.11792374 97.86011505]
[34.78706360 103.68220520]
[22.25231552 93.10807800]
[25.40835762 77.01548767]
[41.00852203 71.95911407]
[53.00469589 83.14051819]
[67.72429657 86.02729034]
[82.44389343 88.91406250]
[86.91298676 82.89100647]
[95.85117340 70.84490204]
[100.32027435 64.82184601]
[93.29086304 51.57089996]
[86.26145935 38.31995773]
[79.23205566 25.06901741]
[72.20265198 11.81807423]
[40.36169434 7.04273844]
[31.16638756 -4.80826759]
[23.43803787 -9.66618633]
[21.92563629 -16.89586830]
[12.90127468 -28.87755775]
[3.87691426 -40.85924911]
[-5.14744663 -52.84093857]
[-14.17180729 -64.82263184]
[-21.82967758 -69.79090881]
[-23.23821640 -77.04154205]
[-32.08977509 -89.15145111]
[-40.94133377 -101.26136017]
[-56.15226746 -107.38993835]
[-58.18200684 -123.66299438]
[-44.94252777 -133.34019470]
[-30.05347252 -126.46646881]
[-28.83142471 -110.11292267]
[-19.97986603 -98.00301361]
[-11.12830734 -85.89309692]
[-2.19011712 -73.84699249]
[6.83424377 -61.86529922]
[15.85860443 -49.88360977]
[24.88296509 -37.90192032]
[33.90732574 -25.92022896]
[43.01739502 -14.00357342]
[52.21269989 -2.15256739]
[66.10157013 -7.81818676]
[64.38392639 -22.71951866]
[62.66628265 -37.62084961]
[60.94863892 -52.52218246]
[50.74751663 -65.36231995]
[57.01771164 -80.51542664]
[73.30899048 -82.39328766]
[82.86227417 -69.06411743]
[75.84996796 -54.23982620]
[77.56761169 -39.33849716]
[79.28526306 -24.43716431]
[81.00290680 -9.53583145]
[85.45359802 4.78867006]
[92.48300171 18.03961182]
[99.51240540 31.29055405]
[106.54180908 44.54149628]
[113.57121277 57.79243851]
[126.82215881 64.82184601]
[141.73542786 63.21112442]
[156.64869690 61.60040283]
[171.56196594 59.98968506]
[186.47523499 58.37896347]
[201.38850403 56.76824188]
[216.30177307 55.15752411]
[231.21504211 53.54680252]
[239.89321899 44.00994110]
[252.34361267 42.97246933]
[261.84982300 50.44697571]
[276.78466797 49.05034637]
[291.71951294 47.65372086]
[304.73931885 38.66511536]
[318.13171387 45.18378830]
[331.15151978 36.19518280]
[344.54391479 42.71385574]
[359.47875977 41.31722641]
[374.41360474 39.92059708]
[389.34844971 38.52397156]
[402.36825562 29.53536606]
[415.76065063 36.05403900]
[430.69549561 34.65740967]
[445.63034058 33.26078033]
[460.56518555 31.86415291]
[475.50000000 30.46752357]
[490.43484497 29.07089615]
[501.35366821 15.39984322]
[518.44531250 13.88816833]
[531.08612061 24.98497200]
[545.99938965 23.37425232]
[560.91265869 21.76353264]
[575.82592773 20.15281105]
[584.01617432 16.12211227]
[590.96447754 18.62752724]
[605.89929199 17.23089981]
[620.83410645 15.83427143]
[625.08172607 12.82067394]
[629.60797119 11.83245087]
[633.59606934 12.63734245]
[636.43939209 14.71304798]
[651.42047119 13.96024227]
[666.40161133 13.20743752]
[676.81475830 1.31871188]
[692.58984375 0.35870427]
[704.36779785 10.89696980]
[705.16094971 26.68134308]
[694.49877930 38.34723282]
[678.70690918 38.97347641]
[667.15435791 28.18853569]
[652.17327881 28.94133949]
[637.19219971 29.69414520]
[622.23077393 30.76911163]
[607.29589844 32.16574097]
[592.36108398 33.56236649]
[577.43664551 35.06608200]
[562.52337646 36.67679977]
[547.61010742 38.28752136]
[532.69683838 39.89824295]
[526.10290527 50.96443176]
[514.16168213 56.29343414]
[501.13952637 53.73605347]
[491.83148193 44.00573349]
[476.89663696 45.40236282]
[461.96179199 46.79899216]
[447.02694702 48.19562149]
[432.09213257 49.59224701]
[417.15728760 50.98887634]
[405.20571899 59.87758255]
[390.74508667 53.45880890]
[375.81024170 54.85543823]
[360.87539673 56.25206757]
[345.94055176 57.64869308]
[333.98898315 66.53739929]
[319.52835083 60.11862564]
[307.57678223 69.00733185]
[293.11614990 62.58855820]
[278.18130493 63.98518753]
[263.24645996 65.38181305]
[249.49568176 76.28923798]
[232.82575989 68.46006775]
[217.91249084 70.07079315]
[202.99922180 71.68151093]
[188.08595276 73.29222870]
[173.17268372 74.90295410]
[158.25941467 76.51367188]
[143.34614563 78.12438965]
[128.43287659 79.73511505]
[140.11926270 89.13875580]
[148.18562317 101.78524780]
[151.78515625 116.34695435]
[150.53999329 131.29518127]
[144.58082581 145.06066895]
[134.53327942 156.19828796]
[121.45213318 163.53883362]
[106.70922852 166.31172180]
[100.25641632 179.85281372]
[93.80361176 193.39390564]
[87.35079956 206.93499756]
[80.89798737 220.47608948]
[74.44517517 234.01718140]
[67.99236298 247.55827332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[14 24]
[15 23]
[16 22]
[17 21]
[32 218]
[33 217]
[34 216]
[35 215]
[36 214]
[37 213]
[38 212]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[57 66]
[58 65]
[59 64]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 99]
[75 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[83 92]
[84 91]
[85 90]
[100 111]
[101 110]
[102 109]
[103 108]
[117 204]
[118 203]
[119 202]
[120 201]
[121 200]
[122 199]
[123 198]
[124 197]
[127 195]
[128 194]
[129 193]
[131 191]
[133 189]
[134 188]
[135 187]
[136 186]
[138 184]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[146 175]
[147 174]
[148 173]
[149 172]
[151 171]
[152 170]
[153 169]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
