%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUUCAGGUGAGGAAACAGAGGCUCUGGGAGCUCUCGCCUGAAGCCACUCGCUGUCCGCCGGGCCGGUGGCGUUCACCCCGCACCGCGCUGCCCCGCCCGGGGCACUAUGGCCUGGGGCUGGACUAUGCCCUCCCCACCUCAGCCGGCGCCCCCCACCCACGCGCGCUGAGGGUGCGGUGAGCUGAGUGCGGGGCCAAGC\
) } def
/len { sequence length } bind def

/coor [
[-70.82579041 211.46624756]
[-81.40641022 211.01742554]
[-91.68550110 208.17762756]
[-101.12609100 203.06065369]
[-109.22730255 195.90010071]
[-119.71008301 206.62910461]
[-130.19287109 217.35809326]
[-140.67564392 228.08709717]
[-151.15843201 238.81608582]
[-161.64120483 249.54507446]
[-172.12399292 260.27407837]
[-182.60676575 271.00305176]
[-193.08955383 281.73205566]
[-203.57232666 292.46105957]
[-188.61431885 291.33950806]
[-175.79129028 299.12216187]
[-169.88159180 312.90896606]
[-173.08740234 327.56237793]
[-184.21409607 337.62203979]
[-199.11547852 339.33929443]
[-212.23870850 332.07427979]
[-218.69360352 318.53417969]
[-216.07540894 303.76568604]
[-227.80288696 313.11804199]
[-239.53036499 322.47036743]
[-251.25782776 331.82272339]
[-262.98529053 341.17507935]
[-271.59899902 355.77783203]
[-288.01559448 351.54321289]
[-288.49102783 334.59591675]
[-272.33764648 329.44760132]
[-260.61016846 320.09524536]
[-248.88270569 310.74291992]
[-237.15522766 301.39056396]
[-225.42776489 292.03820801]
[-214.30133057 281.97827148]
[-203.81854248 271.24926758]
[-193.33576965 260.52029419]
[-182.85298157 249.79129028]
[-172.37019348 239.06230164]
[-161.88742065 228.33329773]
[-151.40463257 217.60430908]
[-140.92185974 206.87532043]
[-130.43907166 196.14631653]
[-119.95629883 185.41732788]
[-123.85726929 170.93345642]
[-138.31051636 166.92053223]
[-152.76376343 162.90760803]
[-167.21701050 158.89468384]
[-181.67027283 154.88175964]
[-196.12351990 150.86883545]
[-211.49061584 154.63217163]
[-221.68403625 143.77198792]
[-236.13728333 139.75906372]
[-250.59053040 135.74613953]
[-262.65298462 145.50714111]
[-278.15078735 146.28021240]
[-291.12472534 137.76809692]
[-296.58605957 123.24385834]
[-292.43481445 108.29238129]
[-280.26721191 98.66280365]
[-264.76193237 98.05789948]
[-251.88107300 106.71026611]
[-246.57760620 121.29289246]
[-232.12435913 125.30581665]
[-217.67111206 129.31874084]
[-203.33779907 125.26837158]
[-192.11059570 136.41558838]
[-177.65733337 140.42851257]
[-163.20408630 144.44143677]
[-148.75083923 148.45436096]
[-134.29759216 152.46728516]
[-119.84433746 156.48020935]
[-112.55821991 139.56863403]
[-99.57199860 126.87226105]
[-82.96909332 120.15949249]
[-65.31366730 120.25994110]
[-49.25501251 126.96652985]
[-37.13001251 139.09523010]
[-23.66624260 132.48260498]
[-10.20247459 125.86996460]
[3.26129365 119.25733185]
[16.72506142 112.64469910]
[30.18883133 106.03205872]
[43.65259933 99.41942596]
[57.11636734 92.80679321]
[70.52856445 86.09017944]
[79.88091278 74.36270142]
[83.55727386 59.82020187]
[87.23363495 45.27769852]
[79.39998627 31.81398010]
[83.33550262 17.11818504]
[96.21937561 9.73297310]
[92.10035706 -5.54263639]
[102.72100830 -15.98538876]
[106.39736938 -30.52789116]
[102.27834320 -45.80350113]
[112.89899445 -56.24625397]
[116.57535553 -70.78875732]
[120.25171661 -85.33126068]
[123.92807770 -99.87375641]
[119.80905914 -115.14936829]
[130.42970276 -125.59211731]
[134.10606384 -140.13462830]
[137.78242493 -154.67712402]
[141.45878601 -169.21963501]
[133.14904785 -182.66297913]
[136.86030579 -198.02532959]
[150.39076233 -206.19248962]
[165.71302795 -202.31900024]
[173.73666382 -188.70295715]
[169.70140076 -173.42250061]
[156.00128174 -165.54327393]
[152.32492065 -151.00076294]
[148.64857483 -136.45826721]
[144.97221375 -121.91576385]
[149.35418701 -107.68032837]
[138.47058105 -96.19740295]
[134.79421997 -81.65489960]
[131.11785889 -67.11239624]
[127.44149780 -52.56989288]
[131.82347107 -38.33446121]
[120.93987274 -26.85153008]
[117.26351166 -12.30902863]
[121.64548492 1.92640400]
[110.76187897 13.40933323]
[118.58821869 26.03010941]
[115.06703186 40.83064651]
[101.77613831 48.95405960]
[98.09977722 63.49656296]
[94.42341614 78.03906250]
[110.52741241 82.57859802]
[117.55619812 95.79666138]
[132.27639771 98.68031311]
[146.99661255 101.56396484]
[161.73869324 104.33363342]
[176.50177002 106.98914337]
[191.28494263 109.53033447]
[206.08734131 111.95706940]
[220.88973999 114.38379669]
[235.69213867 116.81052399]
[250.51286316 119.12264252]
[265.35104370 121.32001495]
[280.18923950 123.51738739]
[295.02740479 125.71475220]
[309.86557007 127.91212463]
[316.15374756 125.83665466]
[321.71002197 127.06806183]
[325.12612915 130.41395569]
[339.88919067 133.06947327]
[354.65225220 135.72497559]
[369.41534424 138.38049316]
[378.76461792 126.26234436]
[392.67941284 119.88762665]
[407.96221924 120.72120667]
[421.10113525 128.57153320]
[429.07693481 141.63464355]
[430.05685425 156.90875244]
[423.81570435 170.88397217]
[411.78765869 180.34889221]
[396.73669434 183.12855530]
[382.12136841 178.58421326]
[371.30020142 167.76011658]
[366.75982666 153.14355469]
[351.99676514 150.48805237]
[337.23367310 147.83253479]
[322.47061157 145.17703247]
[307.66821289 142.75030518]
[292.83004761 140.55293274]
[277.99185181 138.35556030]
[263.15368652 136.15818787]
[248.31549072 133.96083069]
[241.23376465 136.09208679]
[233.26541138 131.61293030]
[218.46301270 129.18618774]
[203.66061401 126.75946808]
[188.85821533 124.33273315]
[181.74433899 126.35415649]
[173.84625244 121.75221252]
[159.08319092 119.09670258]
[151.93888855 121.00778961]
[144.11296082 116.28417969]
[129.39274597 113.40052032]
[114.67253876 110.51686859]
[101.97323608 119.48790741]
[85.64710236 115.49723053]
[77.34876251 99.44999695]
[71.12339783 106.14347076]
[63.72900391 106.27056122]
[50.26523590 112.88319397]
[36.80146408 119.49582672]
[23.33769608 126.10846710]
[9.87392807 132.72109985]
[-3.58984041 139.33374023]
[-17.05360985 145.94636536]
[-30.51737785 152.55900574]
[-28.49056244 162.34947205]
[-28.72261810 172.41885376]
[-31.23491859 182.24897766]
[-35.93063354 191.32644653]
[-42.59805298 199.16952515]
[-50.91996384 205.35363770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[46 73]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[53 66]
[54 65]
[55 64]
[79 196]
[80 195]
[81 194]
[82 193]
[83 192]
[84 191]
[85 190]
[86 189]
[87 187]
[88 131]
[89 130]
[90 129]
[93 126]
[95 124]
[96 123]
[98 121]
[99 120]
[100 119]
[101 118]
[103 116]
[104 115]
[105 114]
[106 113]
[133 184]
[134 183]
[135 182]
[136 180]
[137 179]
[138 177]
[139 176]
[140 175]
[141 174]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[149 167]
[150 166]
[151 165]
[152 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
