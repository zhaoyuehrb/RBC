%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUCAGCCGGCCGGAGACAGAGACUUCACGACUCCCAGUCUCCUCCUCGCCGCGGCCGCCGCCUCCUCCUUCUCUCCUCCUCCUCUUCCUCCUCCUCCCUCGCUCCCACAGCCAUGUCUGCUUAGACCAGAGCAGCCCCACAGCCAACUAGGGCAGCUGCCGCCGCCACAACAGCAAGGACAGCCGCUGCCGCCGCCCGUGAGCG\
) } def
/len { sequence length } bind def

/coor [
[56.83053207 556.07061768]
[58.78807831 549.75292969]
[56.31916046 534.95751953]
[46.59254456 523.67736816]
[51.95288467 508.79187012]
[47.75062180 502.71075439]
[49.55979538 493.75564575]
[47.31354523 478.92480469]
[45.06729507 464.09393311]
[42.82104492 449.26309204]
[38.71065903 443.11947632]
[40.65423203 434.19256592]
[38.63116074 419.32962036]
[36.60808563 404.46667480]
[27.11447716 399.68249512]
[21.71426964 389.18890381]
[9.67245483 398.13290405]
[-2.36935925 407.07687378]
[-14.41117287 416.02084351]
[-26.45298767 424.96481323]
[-38.49480057 433.90881348]
[-45.65475464 452.75173950]
[-64.93991089 454.14276123]
[-76.70744324 463.44467163]
[-88.47497559 472.74655151]
[-94.50313568 487.37432861]
[-109.28580475 489.19692993]
[-112.57112885 504.89999390]
[-126.96092987 511.99316406]
[-141.41658020 505.03518677]
[-144.84895325 489.36361694]
[-134.62501526 477.00033569]
[-118.58769989 477.42941284]
[-113.40123749 463.46694946]
[-97.77687073 460.97903442]
[-86.00933838 451.67712402]
[-74.24180603 442.37524414]
[-73.97151184 432.15866089]
[-67.99617004 423.59805298]
[-58.09131622 419.65908813]
[-47.43877792 421.86697388]
[-35.39696503 412.92300415]
[-23.35515022 403.97903442]
[-11.31333542 395.03506470]
[0.72847825 386.09106445]
[12.77029228 377.14709473]
[21.53225899 364.97219849]
[26.18895149 350.71334839]
[30.84564590 336.45449829]
[35.50233841 322.19561768]
[32.09846497 307.69515991]
[43.73768234 296.97888184]
[48.39437866 282.72000122]
[41.02005386 260.80410767]
[58.81227493 244.92272949]
[62.16579056 230.30241394]
[65.51930237 215.68208313]
[68.87281799 201.06175232]
[72.22633362 186.44142151]
[67.53028107 172.30648804]
[78.15700531 160.58543396]
[81.51052094 145.96510315]
[76.81446838 131.83016968]
[87.44119263 120.10911560]
[90.79470825 105.48878479]
[85.16426849 119.39196014]
[77.50140381 132.28694153]
[67.98142242 143.87873840]
[56.82210541 153.90219116]
[44.27873230 162.12800598]
[30.63825226 168.36798096]
[16.21270561 172.47937012]
[1.33209527 174.36814880]
[-13.66316509 173.99107361]
[-28.43003845 171.35679626]
[-42.63071823 166.52557373]
[-55.94034195 159.60792542]
[-68.05443573 150.76208496]
[-78.69587708 140.19044495]
[-87.62122345 128.13481140]
[-94.62630463 114.87099457]
[-99.55086517 100.70241547]
[-102.28224945 85.95319366]
[-102.75797272 70.96073914]
[-100.96715546 56.06802368]
[-96.95076752 41.61573792]
[-90.80068207 27.93449211]
[-82.65759277 15.33726501]
[-72.70778656 4.11223507]
[-61.17887115 -5.48381281]
[-48.33459091 -13.23135567]
[-34.46876907 -18.95315933]
[-19.89861107 -22.51833153]
[-4.95742226 -23.84531212]
[10.01299763 -22.90374565]
[24.67017937 -19.71517181]
[38.67882538 -14.35253429]
[51.71846390 -6.93850851]
[63.49080276 2.35729980]
[73.72653198 13.32223701]
[82.19149780 25.70546722]
[88.69204712 39.22370529]
[93.07948303 53.56771088]
[95.25343323 68.40933990]
[95.16350555 83.41700745]
[97.63242340 68.62158966]
[100.10134888 53.82616806]
[91.98682404 39.98657990]
[97.88197327 25.06589890]
[113.26453400 20.50998878]
[126.33432770 29.81375694]
[127.06532288 45.84014893]
[114.89676666 56.29508591]
[112.42784882 71.09050751]
[109.95893097 85.88592529]
[116.68443298 89.20519257]
[123.32297516 75.75418091]
[135.79760742 67.42450714]
[136.77398682 82.39272308]
[130.13545227 95.84374237]
[136.86094666 99.16300964]
[147.10282898 88.20381927]
[157.34471130 77.24462128]
[167.58659363 66.28543091]
[177.82847595 55.32623672]
[188.07034302 44.36704254]
[187.28550720 28.58225441]
[197.95387268 16.92199326]
[213.74607849 16.30408669]
[225.29289246 27.09512711]
[225.74380493 42.89298248]
[214.83128357 54.32506561]
[199.02954102 54.60892105]
[188.78765869 65.56811523]
[178.54577637 76.52730560]
[168.30390930 87.48650360]
[158.06202698 98.44569397]
[147.82014465 109.40489197]
[151.34007263 116.02758789]
[164.58546448 108.98772430]
[175.00715637 98.19938660]
[188.48794556 104.77724457]
[186.39779663 119.63090515]
[171.62533569 122.23311615]
[158.37994385 129.27297974]
[161.89987183 135.89567566]
[176.71342468 133.53802490]
[191.52697754 131.18037415]
[200.60285950 118.24188995]
[216.18356323 115.59294891]
[229.02536011 124.80510712]
[231.50942993 140.41296387]
[222.16201782 153.15663147]
[206.52877808 155.47555542]
[193.88462830 145.99392700]
[179.07107544 148.35157776]
[164.25752258 150.70922852]
[130.61660767 134.48164368]
[105.41503906 108.84230042]
[102.06152344 123.46263123]
[106.51770782 138.64331055]
[96.13084412 149.31861877]
[92.77733612 163.93894958]
[97.23352051 179.11962891]
[86.84665680 189.79493713]
[83.49314117 204.41526794]
[80.13963318 219.03559875]
[76.78611755 233.65591431]
[73.43260193 248.27624512]
[78.42548370 252.96867371]
[81.69882202 258.92932129]
[82.96000671 265.55917358]
[82.11682129 272.20309448]
[79.28340912 278.21447754]
[74.76605988 283.01821899]
[69.03032684 286.16574097]
[62.65324020 287.37670898]
[57.99654770 301.63555908]
[61.06734467 317.15591431]
[49.76120377 326.85232544]
[45.10450745 341.11117554]
[40.44781494 355.37005615]
[35.79112244 369.62890625]
[53.36318588 373.66189575]
[59.79502106 389.21389771]
[51.47103119 402.44360352]
[53.49410629 417.30654907]
[55.51718140 432.16949463]
[57.65190125 447.01681519]
[59.89815140 461.84768677]
[62.14440155 476.67855835]
[64.39065552 491.50939941]
[66.74830627 506.32296753]
[76.65151215 518.66137695]
[71.11457825 532.48858643]
[73.58349609 547.28399658]
[76.27452850 562.04064941]
[79.18705750 576.75518799]
[82.09959412 591.46972656]
[95.36991119 600.05310059]
[98.60234833 615.52325439]
[89.87916565 628.70208740]
[74.37566376 631.77081299]
[61.28979492 622.90875244]
[58.38517761 607.37365723]
[67.38507080 594.38226318]
[64.47253418 579.66772461]
[61.56000519 564.95318604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[5 193]
[7 192]
[8 191]
[9 190]
[10 189]
[12 188]
[13 187]
[14 186]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[23 37]
[24 36]
[25 35]
[27 33]
[47 183]
[48 182]
[49 181]
[50 180]
[52 178]
[53 177]
[55 169]
[56 168]
[57 167]
[58 166]
[59 165]
[61 163]
[62 162]
[64 160]
[65 159]
[105 115]
[106 114]
[107 113]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[146 157]
[147 156]
[148 155]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
