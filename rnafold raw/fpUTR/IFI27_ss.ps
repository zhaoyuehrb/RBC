%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGGAGCUACCCUUCCCGUGGCCCCGGACCUUGGGUGGGCUGUGGGCUCAGGGAGCGGAGGGGAGGCCUUAAGCAUCCACUCUCUGCCCGGUGUUUUUGUUCUCAUCAGGGAGCCUCAGAUGGGAAGGGACUCGAGCCCCACCUGUCCCUGGACUCUGGAAUGCCACGGAAUUAACCCGAGCAGGC\
) } def
/len { sequence length } bind def

/coor [
[104.01689911 694.03686523]
[101.28948975 708.78686523]
[98.56208801 723.53680420]
[104.54965210 738.80377197]
[94.11170959 751.45220947]
[77.98593140 748.47039795]
[72.76112366 732.92578125]
[83.81213379 720.80938721]
[86.53953552 706.05944824]
[89.26693726 691.30950928]
[76.83621216 679.61535645]
[68.65450287 664.97839355]
[65.32656097 648.84796143]
[66.98652649 632.76165771]
[73.30152893 618.19842529]
[83.51907349 606.44305420]
[96.55217743 598.47296143]
[111.09298706 594.87774658]
[111.09298706 579.87774658]
[111.09298706 564.87774658]
[111.09298706 549.87774658]
[111.09298706 534.87774658]
[111.09298706 519.87774658]
[111.09298706 504.87774658]
[100.21535492 488.90463257]
[110.51172638 471.58850098]
[110.01315308 456.59677124]
[109.51457977 441.60507202]
[109.01600647 426.61337280]
[108.51743317 411.62164307]
[107.76974487 396.64028931]
[106.77314758 381.67343140]
[97.87329102 373.46331787]
[96.93088531 360.98937988]
[104.99654388 350.90832520]
[104.24885559 335.92697144]
[103.50116730 320.94561768]
[102.62899017 305.97100830]
[101.63239288 291.00415039]
[100.63580322 276.03729248]
[99.63920593 261.07043457]
[96.05095673 254.59297180]
[98.75253296 245.84690857]
[98.00484467 230.86555481]
[94.52475739 224.32934570]
[97.37133789 215.62937927]
[96.87276459 200.63768005]
[96.37418365 185.64596558]
[95.87561035 170.65425110]
[95.37703705 155.66253662]
[94.87846375 140.67082214]
[94.25531769 125.68377686]
[93.50762939 110.70242310]
[60.34408569 97.01345825]
[50.32566833 85.84961700]
[42.24879074 81.54191589]
[40.23540497 74.41595459]
[30.40393066 63.08713531]
[20.57245636 51.75831985]
[10.74098301 40.42950058]
[0.90950984 29.10068130]
[-8.92196369 17.77186203]
[-18.84725189 6.52514458]
[-28.95810318 -4.55504751]
[-39.16069412 -15.55082607]
[-49.36328506 -26.54660416]
[-64.42163086 -31.40014458]
[-67.40653229 -45.99259567]
[-77.60912323 -56.98837280]
[-93.52267456 -59.02269363]
[-101.73064423 -72.80706024]
[-95.93658447 -87.76728821]
[-80.58519745 -92.42716980]
[-67.45275116 -83.21204376]
[-66.61334229 -67.19096375]
[-56.41075134 -56.19518661]
[-42.08216476 -52.12813950]
[-38.36750793 -36.74919510]
[-28.16491699 -25.75341606]
[-17.96232605 -14.75763893]
[-11.09503174 -11.98757076]
[-7.68341064 -3.49327183]
[-0.86310780 -0.60944253]
[2.40685511 7.94038916]
[12.23832893 19.26920700]
[22.06980133 30.59802628]
[31.90127563 41.92684555]
[41.73274994 53.25566483]
[51.56422043 64.58448029]
[61.48950958 75.83119965]
[71.50792694 86.99504089]
[79.00559235 86.80805969]
[71.18415833 74.00864410]
[78.35816193 60.83542252]
[93.35350800 60.46178818]
[101.17465973 73.26137543]
[94.00093079 86.43409729]
[101.49860382 86.24712372]
[110.94808960 74.59777832]
[120.39758301 62.94844055]
[123.08226013 47.35667801]
[137.10897827 42.34662628]
[146.55845642 30.69728661]
[156.00794983 19.04794693]
[165.45744324 7.39860630]
[174.90693665 -4.25073338]
[184.35643005 -15.90007305]
[193.80592346 -27.54941368]
[203.25541687 -39.19875336]
[205.94009399 -54.79051590]
[219.96679688 -59.80056763]
[229.41629028 -71.44990540]
[238.86578369 -83.09925079]
[244.14817810 -99.20926666]
[261.09091187 -98.59300995]
[265.18896484 -82.14179993]
[250.51512146 -73.64975739]
[241.06562805 -62.00041580]
[231.61613464 -50.35107803]
[229.60734558 -35.59255219]
[214.90475464 -29.74926186]
[205.45526123 -18.09992218]
[196.00576782 -6.45058203]
[186.55627441 5.19875765]
[177.10678101 16.84809685]
[167.65728760 28.49743652]
[158.20780945 40.14677811]
[148.75831604 51.79611588]
[146.74952698 66.55464172]
[132.04692078 72.39793396]
[122.59743500 84.04727173]
[113.14794159 95.69660950]
[108.48898315 109.95473480]
[109.23667145 124.93608856]
[112.79564667 133.36970520]
[109.87017822 140.17225647]
[110.36875153 155.16397095]
[110.86732483 170.15567017]
[111.36589813 185.14738464]
[111.86447144 200.13909912]
[112.36304474 215.13081360]
[112.98619843 230.11785889]
[113.73388672 245.09921265]
[114.60605621 260.07385254]
[115.60265350 275.04071045]
[116.59925079 290.00753784]
[117.59584808 304.97439575]
[121.29451752 313.34771729]
[118.48252106 320.19793701]
[119.23020935 335.17929077]
[119.97789764 350.16064453]
[130.32650757 365.38122559]
[121.74000549 380.67684937]
[122.73660278 395.64370728]
[126.10767365 401.36669922]
[126.07324982 407.07348633]
[123.50914001 411.12307739]
[124.00772095 426.11477661]
[124.50629425 441.10650635]
[125.00486755 456.09820557]
[125.50344086 471.08993530]
[133.87931824 478.06649780]
[136.95922852 488.29382324]
[133.95471191 498.31427002]
[126.09298706 504.87774658]
[126.09298706 519.87774658]
[126.09298706 534.87774658]
[126.09298706 549.87774658]
[126.09298706 564.87774658]
[126.09298706 579.87774658]
[126.09298706 594.87774658]
[140.54130554 598.42724609]
[153.51480103 606.29760742]
[163.72915649 617.91656494]
[170.11282349 632.33306885]
[171.91760254 648.29431152]
[168.80194092 664.35412598]
[160.87829590 679.00415039]
[148.71844482 690.81536865]
[151.69064331 705.51794434]
[164.20875549 715.55169678]
[164.02488708 731.59368896]
[151.28009033 741.33789062]
[135.75105286 737.30938721]
[129.35035706 722.59851074]
[136.98805237 708.49017334]
[134.01585388 693.78753662]
[126.51612091 693.84991455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 154]
[32 153]
[35 151]
[36 150]
[37 149]
[38 147]
[39 146]
[40 145]
[41 144]
[43 143]
[44 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[52 134]
[53 133]
[54 91]
[55 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 82]
[64 80]
[65 79]
[66 78]
[68 76]
[69 75]
[98 132]
[99 131]
[100 130]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[111 119]
[112 118]
[113 117]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
