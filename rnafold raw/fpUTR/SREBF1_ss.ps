%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGAGCUGCGGCCGGGGGAACCCAGUUUCCGAGGAACUUUUCGCCGGCGCCGGGCCGCCUCUGAGGCCAGGGCAGGACACGAACGCGCGGAGCGGCGGCGGCGACUGAGAGCCGGGGCCGCGGCGGCGCUCCCUAGGAAGGGCCGUACGAGGCGGCGGGCCCGGCGGGCCUCCCGGAGGAGGCGGCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[105.50775909 263.61950684]
[92.27854156 271.72921753]
[76.81178284 270.48059082]
[65.05477142 260.35379028]
[61.52831268 245.24273682]
[67.58840179 230.95796204]
[80.90482330 222.99224854]
[82.11181641 208.04087830]
[79.51292419 201.11149597]
[83.46060181 192.85902405]
[84.90830994 177.92904663]
[86.35601807 162.99906921]
[87.80372620 148.06909180]
[89.25143433 133.13912964]
[90.69914246 118.20914459]
[76.76141357 112.66481781]
[67.55825806 124.50973511]
[58.35511017 136.35464478]
[56.65364075 152.66528320]
[41.56926727 159.09909058]
[28.61950111 149.03749084]
[31.12594986 132.83102417]
[46.51019287 127.15149689]
[55.71334457 115.30657959]
[64.91649628 103.46166992]
[55.15182495 92.07521820]
[42.04230499 99.36496735]
[28.93278313 106.65472412]
[15.82326317 113.94447327]
[2.71374249 121.23422241]
[-10.39577770 128.52397156]
[-21.30025291 141.50584412]
[-36.79343796 134.62124634]
[-34.46684647 117.82770538]
[-17.68552971 115.41445160]
[-4.57600880 108.12470245]
[8.53351212 100.83495331]
[21.64303207 93.54520416]
[34.75255203 86.25544739]
[47.86207199 78.96569824]
[80.38984680 60.63003540]
[108.25573730 69.34621429]
[116.29128265 89.26790619]
[120.34835052 74.82698059]
[124.40541840 60.38606262]
[128.46249390 45.94514084]
[132.51956177 31.50422096]
[136.57662964 17.06329918]
[140.63369751 2.62237859]
[139.94238281 -6.49955416]
[144.87419128 -12.01751041]
[149.16337585 -26.39119720]
[153.45256042 -40.76488495]
[148.01670837 -52.47127533]
[151.89468384 -64.36071777]
[162.48617554 -70.22153473]
[167.00636292 -84.52425385]
[171.52655029 -98.82698059]
[176.04673767 -113.12969971]
[180.56692505 -127.43242645]
[185.08712769 -141.73515320]
[189.60731506 -156.03787231]
[194.12750244 -170.34059143]
[198.53233337 -184.67926025]
[202.82151794 -199.05294800]
[199.35337830 -214.48936462]
[210.40692139 -224.47276306]
[214.69610596 -238.84645081]
[218.98529053 -253.22013855]
[223.27447510 -267.59384155]
[212.84309387 -278.78012085]
[209.43395996 -293.58804321]
[213.86508179 -308.01828003]
[224.85067749 -318.22479248]
[239.37225342 -321.53982544]
[243.54551697 -335.94760132]
[247.60258484 -350.38851929]
[251.65965271 -364.82943726]
[250.42662048 -369.02435303]
[250.58483887 -372.99206543]
[251.89028931 -376.32107544]
[253.98986816 -378.72219849]
[256.47106934 -380.05371094]
[261.44970703 -394.20336914]
[258.73138428 -409.78930664]
[270.25436401 -419.22702026]
[275.23297119 -433.37670898]
[280.21160889 -447.52639771]
[280.10916138 -456.67391968]
[285.38607788 -461.86279297]
[290.59201050 -475.93045044]
[284.23849487 -490.15264893]
[289.71844482 -504.34506226]
[303.31631470 -510.31451416]
[308.52221680 -524.38214111]
[313.72814941 -538.44976807]
[318.93408203 -552.51739502]
[324.13998413 -566.58502197]
[317.78649902 -580.80725098]
[323.26644897 -594.99963379]
[336.86428833 -600.96911621]
[342.07022095 -615.03674316]
[347.27615356 -629.10437012]
[352.48205566 -643.17199707]
[343.76251221 -656.00744629]
[344.28637695 -671.51568604]
[353.85226440 -683.73345947]
[368.78182983 -687.96276855]
[383.33441162 -682.57739258]
[391.91421509 -669.64813232]
[391.22213745 -654.14648438]
[381.52429199 -642.03320312]
[366.54968262 -637.96606445]
[361.34378052 -623.89843750]
[356.13784790 -609.83081055]
[350.93191528 -595.76318359]
[357.36804199 -582.37988281]
[352.28887939 -568.03912354]
[338.20764160 -561.37908936]
[333.00170898 -547.31146240]
[327.79577637 -533.24383545]
[322.58984375 -519.17620850]
[317.38394165 -505.10858154]
[323.82003784 -491.72531128]
[318.74090576 -477.38455200]
[304.65963745 -470.72451782]
[299.45370483 -456.65689087]
[294.36126709 -442.54776001]
[289.38265991 -428.39810181]
[284.40405273 -414.24841309]
[287.47845459 -399.67456055]
[275.59936523 -389.22476196]
[270.62075806 -375.07507324]
[266.10055542 -360.77236938]
[262.04348755 -346.33145142]
[257.98641968 -331.89053345]
[259.20559692 -324.59091187]
[253.74594116 -317.25064087]
[264.07611084 -306.51971436]
[267.67196655 -291.96203613]
[263.47052002 -277.46325684]
[252.50395203 -266.94512939]
[237.64816284 -263.30465698]
[233.35897827 -248.93095398]
[229.06979370 -234.55726624]
[224.78060913 -220.18357849]
[228.55554199 -205.77528381]
[217.19520569 -194.76376343]
[212.90602112 -180.39007568]
[214.00741577 -173.07177734]
[208.43022156 -165.82040405]
[203.91003418 -151.51768494]
[199.38984680 -137.21496582]
[194.86965942 -122.91223907]
[190.34947205 -108.60951233]
[185.82928467 -94.30679321]
[181.30908203 -80.00406647]
[176.78889465 -65.70134735]
[181.49809265 -48.80189896]
[167.82624817 -36.47570038]
[163.53706360 -22.10201263]
[159.24787903 -7.72832489]
[155.07461548 6.67944670]
[151.01754761 21.12036705]
[146.96047974 35.56128693]
[142.90341187 50.00220871]
[138.84634399 64.44313049]
[134.78927612 78.88404846]
[130.73220825 93.32497406]
[132.89953613 108.16757202]
[140.91653442 120.84542084]
[148.93351746 133.52326965]
[156.95050049 146.20112610]
[164.96748352 158.87896729]
[172.98448181 171.55682373]
[187.74874878 178.69462585]
[188.67935181 195.06735229]
[174.81895447 203.83213806]
[160.42594910 195.97251892]
[160.30662537 179.57380676]
[152.28964233 166.89596558]
[144.27265930 154.21810913]
[136.25566101 141.54025269]
[128.23867798 128.86241150]
[120.22168732 116.18455505]
[105.62911987 119.65685272]
[104.18141174 134.58683777]
[102.73370361 149.51679993]
[101.28599548 164.44677734]
[99.83827972 179.37675476]
[98.39057159 194.30673218]
[97.06317902 209.24787903]
[95.85617828 224.19923401]
[107.72235870 234.19790649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 25]
[17 24]
[18 23]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[51 162]
[52 161]
[53 160]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 149]
[65 148]
[67 146]
[68 145]
[69 144]
[70 143]
[75 138]
[76 136]
[77 135]
[78 134]
[83 133]
[84 132]
[86 130]
[87 129]
[88 128]
[90 127]
[91 126]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[101 116]
[102 115]
[103 114]
[104 113]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
