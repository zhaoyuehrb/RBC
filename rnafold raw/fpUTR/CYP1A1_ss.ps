%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCAGCUCGCUCCAGGGAAGGAGGCGUGGCCACACGUACAAGCCCGCCUAUAAAGGUGGCAGUGCCUUCACCCUCACCCUGAAGGUGACAGUUCCUUGGAACCUUCCCUGAUCCUUGUGAUCCCAGGCUCCAAGAGUCCACCCUUCCCAGCUCAGCUCAGUACCUCAGCAGCCACCUCCAAGAUCCCUACACUGAUC\
) } def
/len { sequence length } bind def

/coor [
[244.56166077 366.69070435]
[243.22219849 361.61489868]
[243.94068909 355.95617676]
[236.10321045 343.16656494]
[222.85609436 336.35751343]
[222.24266052 320.54818726]
[214.40518188 307.75860596]
[206.56770325 294.96899414]
[198.73022461 282.17938232]
[182.88069153 274.65438843]
[182.54066467 256.24749756]
[174.50326538 243.58258057]
[166.46585083 230.91766357]
[163.11392212 229.79678345]
[160.14076233 226.99160767]
[158.33439636 222.69900513]
[158.36451721 217.46138000]
[150.93263245 204.43190002]
[143.50074768 191.40243530]
[136.06887817 178.37295532]
[128.63699341 165.34349060]
[121.20511627 152.31401062]
[113.77323151 139.28454590]
[99.15872192 144.69998169]
[82.50379944 144.46861267]
[66.04604340 137.87400818]
[53.25643921 145.71148682]
[40.46683884 153.54896545]
[27.67723465 161.38644409]
[14.88763237 169.22392273]
[7.54241085 183.88610840]
[-8.84180260 184.58581543]
[-17.41033363 170.60324097]
[-9.34861183 156.32246399]
[7.05015373 156.43431091]
[19.83975601 148.59683228]
[32.62936020 140.75936890]
[45.41896057 132.92189026]
[58.20856476 125.08440399]
[56.51505280 117.77810669]
[41.90239716 121.16487885]
[38.51586151 106.55216980]
[53.12803650 103.16550446]
[51.43452454 95.85919952]
[36.50109482 94.44757843]
[21.56766701 93.03594971]
[12.72050762 95.34527588]
[6.41139460 91.48307037]
[-8.49802017 89.83705902]
[-23.40743446 88.19104004]
[-38.31684875 86.54502869]
[-53.10726929 93.62849426]
[-66.48219299 84.13936615]
[-64.68264771 67.83925629]
[-49.55984497 61.49631119]
[-36.67083359 71.63561249]
[-21.76141930 73.28163147]
[-6.85200500 74.92764282]
[8.05740929 76.57365417]
[22.97929192 78.10252380]
[37.91271973 79.51414490]
[52.84614944 80.92577362]
[63.66843033 67.80033875]
[77.64144135 59.53843307]
[63.27029800 52.92173004]
[62.04900360 38.07727814]
[53.23222351 25.94202423]
[37.87445831 23.33879471]
[29.10586357 10.90632248]
[31.68229103 -3.71891689]
[22.86551094 -15.85417175]
[14.04873276 -27.98942757]
[5.23195410 -40.12468338]
[-3.58482480 -52.25993729]
[-17.95597076 -58.87664032]
[-19.17726517 -73.72109222]
[-27.99404335 -85.85634613]
[-36.81082153 -97.99160004]
[-51.01242447 -107.25177765]
[-46.04552841 -123.46184540]
[-29.09398460 -123.17645264]
[-24.67556763 -106.80838013]
[-15.85878944 -94.67312622]
[-7.04201031 -82.53787231]
[6.69849968 -76.78916168]
[8.55043030 -61.07671356]
[17.36720848 -48.94145966]
[26.18398666 -36.80620575]
[35.00076675 -24.67094994]
[43.81754684 -12.53569603]
[58.52313232 -10.46657562]
[67.63747406 1.71470058]
[65.36747742 17.12524605]
[74.18425751 29.26049995]
[87.92476654 35.00920868]
[89.77670288 50.72165298]
[104.75403595 49.89739990]
[112.18591309 36.86792755]
[119.61779785 23.83845520]
[127.04967499 10.80898285]
[134.48155212 -2.22048998]
[141.91343689 -15.24996281]
[142.02998352 -31.07073975]
[155.05668640 -38.29253769]
[162.48857117 -51.32201004]
[169.92045593 -64.35147858]
[164.62101746 -73.62902832]
[163.66282654 -84.18926239]
[167.15226746 -94.11666107]
[174.39508057 -101.63844299]
[184.03324890 -105.44107819]
[194.29936218 -104.89942169]
[202.33676147 -117.56434631]
[210.37416077 -130.22926331]
[218.41157532 -142.89418030]
[216.32920837 -158.80151367]
[227.57098389 -170.24713135]
[243.51316833 -168.45091248]
[251.92628479 -154.79078674]
[246.35650635 -139.74562073]
[231.07649231 -134.85678101]
[223.03909302 -122.19185638]
[215.00167847 -109.52693939]
[206.96427917 -96.86202240]
[212.60513306 -78.22328949]
[202.57734680 -61.17527390]
[182.94992065 -56.91960144]
[175.51803589 -43.89012909]
[168.08616638 -30.86065674]
[168.50119019 -15.97183514]
[154.94290161 -7.81808281]
[147.51103210 5.21139002]
[140.07914734 18.24086189]
[132.64726257 31.27033615]
[125.21538544 44.29980850]
[117.78350830 57.32928085]
[127.65681458 63.67752457]
[135.49731445 72.21509552]
[140.84655762 82.33308411]
[143.41998291 93.33457947]
[143.12135315 104.48252869]
[140.04438782 115.04906464]
[134.46177673 124.36304474]
[126.80270386 131.85266113]
[134.23458862 144.88212585]
[141.66647339 157.91160583]
[149.09834290 170.94107056]
[156.53022766 183.97055054]
[163.96211243 197.00003052]
[171.39398193 210.02949524]
[179.13078308 222.88026428]
[187.16818237 235.54518127]
[195.20558167 248.21009827]
[207.60510254 251.78300476]
[214.03749084 262.50454712]
[211.51982117 274.34191895]
[219.35729980 287.13153076]
[227.19477844 299.92111206]
[235.03225708 312.71072388]
[248.83996582 320.43457031]
[248.89280701 335.32910156]
[256.73028564 348.11868286]
[255.62857056 333.15921021]
[258.51730347 318.44000244]
[265.19128418 305.00653076]
[275.17651367 293.81298828]
[287.76373291 285.65441895]
[302.05886841 281.11032104]
[317.04660034 280.50344849]
[331.66232300 283.87692261]
[344.86795044 290.99108887]
[355.72546387 301.34066772]
[363.46371460 314.19058228]
[367.53305054 328.62805176]
[367.64440918 343.62762451]
[363.78988647 358.12393188]
[356.24328613 371.08731079]
[345.54064941 381.59695435]
[332.44210815 388.90643311]
[317.87805176 392.49652100]
[302.88299561 392.11227417]
[288.52194214 387.78091431]
[275.81500244 379.81015015]
[265.66610718 368.76815796]
[269.62420654 383.23654175]
[273.58230591 397.70489502]
[277.54040527 412.17324829]
[292.10281372 417.53198242]
[300.70626831 430.44552612]
[300.04260254 445.94839478]
[290.36694336 458.07943726]
[275.39984131 462.17395020]
[260.89642334 456.65759277]
[252.43354797 443.65145874]
[253.26538086 428.15667725]
[263.07205200 416.13134766]
[259.11395264 401.66299438]
[255.15585327 387.19464111]
[251.19775391 372.72625732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[6 159]
[7 158]
[8 157]
[9 156]
[11 153]
[12 152]
[13 151]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[23 144]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[64 96]
[66 94]
[67 93]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[76 84]
[77 83]
[78 82]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[104 129]
[105 128]
[106 127]
[112 124]
[113 123]
[114 122]
[115 121]
[184 199]
[185 198]
[186 197]
[187 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
