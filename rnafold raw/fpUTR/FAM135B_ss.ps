%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACACCAGCUCGCAGGUGCUGCGGACUCCCCAGUCCGCCCGCCGCCGCCGCCGCCGCAACUGUUGGCGGCCAGAGACGGCGAAAGAGGAGAGAGAGGGACCCAGGAGCGCGGCCCCCGGGGGAGAGAGAGGGGAGCCCUGCAGUGGAGACAGGUAAUGAGCCAAAAAGAUC\
) } def
/len { sequence length } bind def

/coor [
[154.69459534 672.47546387]
[145.15037537 660.73822021]
[139.70217896 646.62542725]
[138.88377380 631.51959229]
[142.77534485 616.90075684]
[150.99560547 604.20104980]
[162.73925781 594.66467285]
[176.85574341 589.22595215]
[176.03422546 574.24847412]
[175.21272278 559.27099609]
[174.39120483 544.29351807]
[173.15969849 529.34411621]
[171.51911926 514.43414307]
[159.77386475 505.34649658]
[157.89770508 490.24899292]
[167.50926208 477.99111938]
[165.86868286 463.08111572]
[163.68467712 448.24096680]
[160.96011353 433.49047852]
[158.23556519 418.73999023]
[155.51101685 403.98950195]
[152.78645325 389.23901367]
[149.92730713 374.51403809]
[146.93380737 359.81576538]
[136.81221008 348.88861084]
[141.63981628 333.82192993]
[138.64631653 319.12368774]
[135.65280151 304.42541504]
[132.65930176 289.72714233]
[129.66580200 275.02886963]
[126.67230225 260.33062744]
[114.14721680 252.35203552]
[110.90200043 237.48855591]
[119.35559845 224.40518188]
[116.36209869 209.70692444]
[113.23448944 195.03660583]
[102.91500092 184.29614258]
[107.46662140 169.14381409]
[104.20516968 154.50267029]
[100.94371796 139.86154175]
[90.62422943 129.12107849]
[95.17584991 113.96873474]
[70.70732880 98.98522949]
[59.17761993 89.39013672]
[47.64791107 79.79504395]
[36.11820602 70.19994354]
[24.58849716 60.60485077]
[12.97164440 51.11545181]
[1.18341482 41.83980179]
[-10.85449028 32.89056396]
[-23.05383682 24.16268158]
[-35.25318146 15.43479824]
[-47.45252991 6.70691442]
[-59.65187454 -2.02096939]
[-71.85121918 -10.74885273]
[-84.05056763 -19.47673607]
[-96.32910919 -28.09284782]
[-112.71080017 -28.84936523]
[-120.00513458 -43.53693771]
[-110.70832825 -57.04624557]
[-94.38414001 -55.48007584]
[-87.82549286 -40.44956589]
[-80.50571442 -39.24347305]
[-75.32268524 -31.67608261]
[-63.12333679 -22.94819832]
[-50.92399216 -14.22031593]
[-38.72464371 -5.49243164]
[-26.52529907 3.23545194]
[-14.32595253 11.96333599]
[-2.12660599 20.69121933]
[2.68164444 20.79878807]
[7.46488619 23.95285416]
[10.35102081 29.96735573]
[17.59376144 31.57252502]
[22.35456085 39.41242218]
[29.56677628 41.14960480]
[34.18359375 49.07514572]
[45.71329880 58.67023849]
[57.24300766 68.26533508]
[68.77271271 77.86042786]
[80.30242157 87.45552826]
[74.78428650 73.50740051]
[69.26615143 59.55927658]
[59.02944565 48.59524918]
[54.60362244 34.26304626]
[56.87602234 19.43617249]
[65.39105225 7.08731413]
[78.44150543 -0.30766699]
[93.41085052 -1.26612902]
[107.29784393 4.40409279]
[117.31823730 15.56615829]
[121.46301270 29.98215103]
[118.90116882 44.76176453]
[110.14566803 56.94237518]
[106.45106506 71.48025513]
[102.75646210 86.01812744]
[112.96861267 75.03122711]
[123.18076324 64.04433441]
[122.78047943 48.47264099]
[133.29356384 37.47583771]
[148.14126587 37.19019318]
[158.35340881 26.20329475]
[155.23585510 11.00262165]
[161.67906189 -3.11349058]
[175.20550537 -10.71710968]
[190.61398315 -8.88448811]
[201.97961426 1.67969310]
[204.93209839 16.91329002]
[198.33613586 30.95867538]
[184.72799683 38.41511154]
[169.34031677 36.41544342]
[159.12815857 47.40234375]
[159.92709351 62.23128128]
[149.72703552 73.51903534]
[134.16766357 74.25648499]
[123.95551300 85.24338531]
[113.74336243 96.23027802]
[109.81698608 110.70728302]
[120.36975098 122.49497986]
[115.58485413 136.60008240]
[118.84630585 151.24122620]
[122.10775757 165.88235474]
[132.66052246 177.67004395]
[127.87562561 191.77516174]
[132.81314087 199.50497437]
[131.06036377 206.71342468]
[134.05386353 221.41168213]
[146.95106506 230.14666748]
[149.77751160 245.09544373]
[141.37055969 257.33712769]
[144.36407471 272.03536987]
[147.35757446 286.73364258]
[150.35107422 301.43191528]
[153.34457397 316.13018799]
[156.33807373 330.82843018]
[166.67379761 342.80688477]
[161.63208008 356.82226562]
[164.62557983 371.52053833]
[169.42108154 379.33923340]
[167.53694153 386.51446533]
[170.26148987 401.26495361]
[172.98605347 416.01544189]
[175.71060181 430.76593018]
[178.43515015 445.51638794]
[181.43074036 448.77478027]
[183.04766846 452.45141602]
[183.32568359 456.05410767]
[182.46261597 459.15570068]
[180.77870178 461.44055176]
[182.41926575 476.35055542]
[194.46611023 486.22534180]
[195.91748047 501.36959839]
[186.42913818 512.79357910]
[188.06970215 527.70355225]
[191.20664978 531.96771240]
[192.26281738 536.55065918]
[191.46995544 540.59729004]
[189.36868286 543.47198486]
[190.19020081 558.44946289]
[191.01171875 573.42694092]
[191.83323669 588.40441895]
[206.45988464 592.26660156]
[219.17608643 600.46130371]
[228.73602295 612.18579102]
[234.20312500 626.29132080]
[235.04176331 641.39599609]
[231.16979980 656.02008057]
[222.96655273 668.73077393]
[211.23570251 678.28283691]
[197.12651062 683.74047852]
[182.02125549 684.56903076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 161]
[9 160]
[10 159]
[11 158]
[12 154]
[13 153]
[16 150]
[17 149]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 138]
[24 137]
[26 135]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[34 127]
[35 126]
[36 124]
[38 122]
[39 121]
[40 120]
[42 118]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[48 75]
[49 73]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[57 62]
[96 117]
[97 116]
[98 115]
[101 112]
[102 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
