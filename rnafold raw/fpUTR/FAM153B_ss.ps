%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCGACACCAAAUUUUGGAACUUAAAAAGAAGAUUCUUAAAACUUACAAUCCAGAUUACGAUGAGGACCUGGUGCAGGAAGCUUCAUCUGAAGAUGUCCUGGGCGUUCAU\
) } def
/len { sequence length } bind def

/coor [
[21.03493881 133.99639893]
[10.69682026 139.66224670]
[-0.43708035 143.52645874]
[-12.05551529 145.48223877]
[-23.83390045 145.47613525]
[-35.44337845 143.50949097]
[-46.56000519 139.63836670]
[-56.87378693 133.97193909]
[-66.09731293 126.66945648]
[-73.97380066 117.93572235]
[-80.28418732 108.01535797]
[-84.85328674 97.18598175]
[-87.55459595 85.75040436]
[-88.31382751 74.02818298]
[-87.11096191 62.34667206]
[-83.98073578 51.03190994]
[-97.42997742 44.38978958]
[-110.87922668 37.74766922]
[-124.32847595 31.10554695]
[-137.77772522 24.46342468]
[-151.22695923 17.82130432]
[-163.61093140 30.36429024]
[-179.46542358 38.01319122]
[-196.94433594 39.89469910]
[-214.01824951 35.80605316]
[-228.71003723 26.23675346]
[-239.32377625 12.31002617]
[-244.64059448 -4.34900761]
[-244.05851746 -21.80296516]
[-258.16180420 -26.91148949]
[-272.26510620 -32.02001572]
[-286.36840820 -37.12854004]
[-302.41043091 -33.72476196]
[-313.17654419 -46.09498978]
[-307.59152222 -61.51379013]
[-291.40072632 -64.11962891]
[-281.25988770 -51.23183823]
[-267.15658569 -46.12331009]
[-253.05328369 -41.01478577]
[-238.94998169 -35.90626144]
[-231.67994690 -46.21561050]
[-222.10380554 -54.44459534]
[-210.79791260 -60.09070587]
[-198.44454956 -62.80712128]
[-185.79063416 -62.42398834]
[-173.60269165 -58.95904922]
[-162.62031555 -52.61688232]
[-153.51135254 -43.77683258]
[-146.83125305 -32.97034073]
[-142.98921204 -20.84897614]
[-142.22312927 -8.14517021]
[-144.58483887 4.37205791]
[-131.13560486 11.01417923]
[-117.68634796 17.65629959]
[-104.23710632 24.29842186]
[-90.78785706 30.94054222]
[-77.33861542 37.58266449]
[-65.28786469 23.20241547]
[-49.85267639 12.51752281]
[-32.13023376 6.29437780]
[-13.38215256 4.98196459]
[5.05536842 8.67947674]
[21.86676407 17.12884140]
[35.85097885 29.73272133]
[46.00726318 45.59674835]
[51.60680389 63.59298325]
[52.24500656 82.44010162]
[66.92010498 85.54517365]
[81.59520721 88.65025330]
[96.27030182 91.75533295]
[99.89651489 90.03005981]
[104.28230286 89.98523712]
[108.62532806 91.92790985]
[112.01495361 95.77921295]
[126.38035583 100.09605408]
[141.82341003 96.65763855]
[151.78552246 107.73037720]
[166.15092468 112.04721832]
[180.51634216 116.36405945]
[194.88174438 120.68090057]
[209.24714661 124.99774933]
[224.69020081 121.55932617]
[234.65231323 132.63206482]
[249.07633972 136.74880981]
[263.55618286 140.66465759]
[278.03604126 144.58049011]
[292.51589966 148.49633789]
[308.21859741 143.76795959]
[319.97784424 155.19827271]
[315.69674683 171.02874756]
[299.77932739 174.97436523]
[288.60006714 162.97619629]
[274.12020874 159.06034851]
[259.64035034 155.14450073]
[245.16049194 151.22866821]
[237.77835083 152.53874207]
[230.33546448 146.99746704]
[215.91992188 150.74465942]
[204.93029785 139.36314392]
[190.56489563 135.04631042]
[176.19949341 130.72946167]
[161.83409119 126.41262054]
[147.46868896 122.09577942]
[133.05314636 125.84297180]
[122.06351471 114.46145630]
[107.69811249 110.14461517]
[93.16522217 106.43042755]
[78.49012756 103.32534790]
[63.81502914 100.22027588]
[49.13993073 97.11519623]
[44.54046249 107.98509979]
[38.19714355 117.93444061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 57]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[29 40]
[30 39]
[31 38]
[32 37]
[67 110]
[68 109]
[69 108]
[70 107]
[74 106]
[75 105]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[83 97]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
