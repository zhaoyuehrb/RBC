%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUAGAAUGCAGAUGAGCAAAGUGAGUGGGAGAGGGAAGUCAUUUGUAACAAAAACUCAUUAUUUACAGAUGAGAAAUUUAUAUUGUCAGCGUAAUAUCUGUGAGGCUAAACAGAGCUGGAGAGUAUAUAAAAGCAGUGCGCCUUGGUGCAGAAGUACAGAGCUUAGGACACAGAGCACAUCAAAAGUUCCCAAAGAGGGCUUGCUCUCUCUUCACCUGCUCUGUUCUACAGCACACUACCAGAAGACAGCAGA\
A\
) } def
/len { sequence length } bind def

/coor [
[201.63201904 574.64825439]
[197.64651489 560.18737793]
[184.50347900 548.54003906]
[189.32939148 530.75561523]
[185.16741943 516.34460449]
[181.00544739 501.93353271]
[176.84347534 487.52249146]
[172.68151855 473.11145020]
[168.51954651 458.70043945]
[164.35757446 444.28939819]
[155.06694031 456.06582642]
[140.06834412 456.27029419]
[130.46011353 444.75155640]
[133.35194397 430.03292847]
[146.60401917 423.00567627]
[160.41056824 428.86987305]
[157.13662720 414.23153687]
[153.86268616 399.59317017]
[150.58874512 384.95483398]
[147.31481934 370.31646729]
[137.28428650 363.58789062]
[134.42425537 351.44134521]
[140.79396057 340.24768066]
[137.69920349 325.57037354]
[134.60444641 310.89309692]
[131.50968933 296.21582031]
[128.41493225 281.53854370]
[123.97277832 275.65930176]
[125.37320709 266.66299438]
[122.45809174 251.94898987]
[119.54297638 237.23497009]
[116.62786865 222.52096558]
[113.71275330 207.80694580]
[110.79763794 193.09294128]
[107.88252258 178.37893677]
[97.81931305 167.39799500]
[102.72715759 152.35725403]
[99.81204224 137.64324951]
[68.93542480 129.12484741]
[52.56274033 97.17708588]
[66.25508881 59.83380508]
[51.45887756 62.29796219]
[36.66266632 64.76212311]
[21.86645126 67.22628021]
[7.07023907 69.69043732]
[-7.72597408 72.15460205]
[-22.52218628 74.61875916]
[-37.31840134 77.08291626]
[-52.11461258 79.54708099]
[-66.91082764 82.01123810]
[-70.30776215 96.82775879]
[-79.12022400 109.21359253]
[-92.00439453 117.27998352]
[-106.99551392 119.79687500]
[-121.80755615 116.38045502]
[-134.18177795 107.55170441]
[-142.23121643 94.65693665]
[-144.72839355 79.66252136]
[-141.29248047 64.85498810]
[-132.44746399 52.49238205]
[-119.54212189 44.45991135]
[-104.54443359 41.98246765]
[-89.74143219 45.43784714]
[-77.39047241 54.29912567]
[-69.37498474 67.21502686]
[-54.57877350 64.75086212]
[-39.78255844 62.28670502]
[-24.98634529 59.82254791]
[-10.19013309 57.35838699]
[4.60608006 54.89422607]
[19.40229225 52.43006897]
[34.19850540 49.96590805]
[48.99472046 47.50175095]
[63.79093170 45.03759003]
[66.81910706 38.17609024]
[51.90645599 39.79253006]
[43.05034256 27.68595314]
[49.10699081 13.96308708]
[64.01967621 12.34697342]
[72.87545776 24.45309448]
[75.90362549 17.59159660]
[67.75199127 4.99989986]
[59.60035706 -7.59179688]
[51.44871902 -20.18349266]
[43.29708481 -32.77518845]
[35.14544678 -45.36688614]
[21.15079880 -52.74661636]
[20.72930908 -67.63525391]
[12.57767296 -80.22695160]
[4.34922791 -92.76859283]
[-3.95571756 -105.25970459]
[-12.26066303 -117.75081635]
[-16.08776474 -103.24725342]
[-28.99203873 -95.60005188]
[-43.55182266 -99.20735931]
[-51.39331818 -111.99449921]
[-48.00662994 -126.60717773]
[-35.33955002 -134.64117432]
[-20.67704391 -131.47567749]
[-28.04432678 -144.54179382]
[-35.41160965 -157.60789490]
[-42.77889252 -170.67399597]
[-50.14617920 -183.74011230]
[-65.57578278 -185.38536072]
[-77.06895447 -195.81065369]
[-80.20632935 -211.00724792]
[-73.78152466 -225.13174438]
[-60.26500702 -232.75299072]
[-44.85415649 -230.94046021]
[-33.47475433 -220.39109802]
[-30.50242043 -205.16136169]
[-37.08007050 -191.10739136]
[-29.71278763 -178.04129028]
[-22.34550476 -164.97517395]
[-14.97822094 -151.90907288]
[-7.61093760 -138.84297180]
[0.23044910 -126.05576324]
[8.53539467 -113.56465149]
[16.84033966 -101.07353973]
[23.14232826 -97.25472260]
[25.16936874 -88.37858582]
[33.32100677 -75.78689575]
[46.73259354 -69.30780792]
[47.73714447 -53.51852417]
[55.88877869 -40.92682648]
[64.04041290 -28.33513069]
[72.19205475 -15.74343300]
[80.34368896 -3.15173626]
[88.49532318 9.43996048]
[95.96788788 10.08094215]
[94.85092926 -4.87741327]
[90.17234039 -19.12910843]
[99.48216248 -30.89036942]
[114.42729187 -29.60858154]
[121.59844208 -16.43381119]
[114.56109619 -3.18671250]
[110.91300201 11.36290646]
[118.38555908 12.00388908]
[128.56253052 0.98438507]
[138.73948669 -10.03511906]
[148.91644287 -21.05462265]
[149.18061829 -33.93103790]
[157.85949707 -42.89736176]
[169.92083740 -43.53728867]
[180.23173523 -54.43156815]
[182.12207031 -60.71808624]
[186.26927185 -64.55003357]
[190.93034363 -65.46223450]
[201.50448608 -76.10120392]
[212.07861328 -86.74016571]
[222.58753967 -97.44356537]
[222.51821899 -113.02024078]
[233.26258850 -123.79117584]
[248.11300659 -123.76126862]
[258.55630493 -134.52868652]
[268.99960327 -145.29612732]
[279.44290161 -156.06355286]
[280.63647461 -172.06213379]
[293.96951294 -180.98454285]
[309.21408081 -175.98626709]
[314.67584229 -160.90155029]
[306.16497803 -147.30209351]
[290.21032715 -145.62025452]
[279.76702881 -134.85281372]
[269.32373047 -124.08539581]
[258.88043213 -113.31796265]
[259.36410522 -98.47540283]
[248.92648315 -87.40692902]
[233.35496521 -87.00026703]
[230.96107483 -80.03121185]
[222.71759033 -76.16603088]
[212.14344788 -65.52706146]
[201.56930542 -54.88809586]
[191.12600708 -44.12067032]
[180.81510925 -33.22638702]
[177.65097046 -15.95245838]
[159.93594360 -10.87766171]
[149.75898743 0.14184199]
[139.58203125 11.16134548]
[129.40505981 22.18084908]
[132.13699341 29.16558838]
[146.10647583 23.70173264]
[160.07594299 18.23787689]
[174.04542542 12.77402115]
[188.01498413 7.31038094]
[193.47840881 21.28002548]
[179.50927734 26.74349785]
[165.53981018 32.20735168]
[151.57032776 37.67120743]
[137.60084534 43.13506317]
[140.33277893 50.11980438]
[155.28544617 51.31039810]
[170.23812866 52.50099564]
[183.33059692 43.22916031]
[198.70198059 47.82260895]
[204.56069946 62.75764084]
[196.41241455 76.57737732]
[180.50781250 78.68049622]
[169.04753113 67.45366669]
[154.09486389 66.26307678]
[139.14218140 65.07247925]
[143.93588257 109.96511841]
[114.52605438 134.72813416]
[117.44116211 149.44213867]
[127.71288300 161.47552490]
[122.59653473 175.46382141]
[125.51165009 190.17782593]
[128.42675781 204.89183044]
[131.34187317 219.60585022]
[134.25698853 234.31985474]
[137.17210388 249.03387451]
[140.08721924 263.74789429]
[143.09220886 278.44378662]
[146.18696594 293.12106323]
[149.28172302 307.79833984]
[152.37648010 322.47561646]
[155.47123718 337.15292358]
[168.08520508 350.58657837]
[161.95317078 367.04254150]
[165.22709656 381.68087769]
[168.50103760 396.31924438]
[171.77497864 410.95758057]
[175.04891968 425.59594727]
[178.76860046 440.12741089]
[182.93057251 454.53845215]
[187.09254456 468.94949341]
[191.25451660 483.36053467]
[195.41648865 497.77157593]
[199.57846069 512.18261719]
[203.74043274 526.59362793]
[214.62153625 533.48370361]
[217.80200195 545.55029297]
[212.10736084 556.20190430]
[216.09284973 570.66271973]
[231.17182922 570.38781738]
[245.84524536 573.87231445]
[259.19070435 580.89715576]
[270.36935425 591.02087402]
[278.67846680 603.60693359]
[283.59570312 617.86431885]
[284.81198120 632.89666748]
[282.25082397 647.75903320]
[276.07327271 661.51727295]
[266.66763306 673.30645752]
[254.62512207 682.38549805]
[240.70277405 688.18365479]
[225.77575684 690.33654785]
[210.78237915 688.70880127]
[196.66516113 683.40264893]
[184.31150818 674.75177002]
[174.49797058 663.29992676]
[167.84146118 649.76690674]
[164.76039124 635.00354004]
[165.44845581 619.93774414]
[169.86238098 605.51666260]
[177.72473145 592.64678955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[4 230]
[5 229]
[6 228]
[7 227]
[8 226]
[9 225]
[10 224]
[16 223]
[17 222]
[18 221]
[19 220]
[20 219]
[23 217]
[24 216]
[25 215]
[26 214]
[27 213]
[29 212]
[30 211]
[31 210]
[32 209]
[33 208]
[34 207]
[35 206]
[37 204]
[38 203]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[88 122]
[89 121]
[90 119]
[91 118]
[92 117]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[138 180]
[139 179]
[140 178]
[141 177]
[144 175]
[145 174]
[148 173]
[149 172]
[150 171]
[151 169]
[154 166]
[155 165]
[156 164]
[157 163]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
