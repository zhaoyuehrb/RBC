%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCUGCGCCAACCCCGCGCGCCACCCGCGGCUUCCUCCGCUCGGGGUCCUCGUUCGGCCUCUGCUGGCCUCCGCGACUCCGCGGUGCCCGCCCCCGUUGAGUUCAAAAGGACGCGCGGAGCGGCGCCGGCCCUUCACCAGCAGCCCGUCCGACUGGAAAGAUCUGCCUCUUCUCCAAGAAACUCAACCACUAGUGACA\
) } def
/len { sequence length } bind def

/coor [
[372.14218140 303.45306396]
[359.19085693 295.88583374]
[346.23953247 288.31860352]
[333.28820801 280.75134277]
[323.66912842 284.22518921]
[313.51358032 281.77578735]
[306.23568726 273.97799683]
[304.41809082 263.24468994]
[291.70837402 255.27832031]
[278.99865723 247.31195068]
[266.28894043 239.34558105]
[253.57922363 231.37921143]
[241.71809387 233.77717590]
[231.06253052 227.23815918]
[227.61373901 214.80470276]
[212.72547913 214.36968994]
[205.35845947 200.36836243]
[192.77416992 192.20529175]
[180.18988037 184.04223633]
[167.60559082 175.87916565]
[155.02130127 167.71611023]
[142.43699646 159.55303955]
[129.85270691 151.38998413]
[117.20532227 143.32502747]
[104.49559784 135.35865784]
[89.55044556 134.07714844]
[75.67003632 139.76347351]
[61.78963089 145.44979858]
[47.90922165 151.13612366]
[34.16523361 157.14468384]
[20.56514549 163.47219849]
[6.96505690 169.79972839]
[-6.63503218 176.12725830]
[-11.81712246 191.05781555]
[-26.07515144 197.87574768]
[-40.95008469 192.53608704]
[-47.61688614 178.20677185]
[-42.12026215 163.38912964]
[-27.72126389 156.87419128]
[-12.96255779 162.52716064]
[0.63753128 156.19964600]
[14.23762035 149.87211609]
[27.83770943 143.54458618]
[29.38366127 140.36802673]
[32.54884338 137.78491211]
[37.03638458 136.54983521]
[42.22289658 137.25570679]
[56.10330200 131.56938171]
[69.98371124 125.88306427]
[83.86412048 120.19673157]
[76.79015350 104.67619324]
[81.12122345 89.70903778]
[71.28228760 78.38669586]
[61.44336319 67.06434631]
[51.60443115 55.74200439]
[38.81141663 54.06159973]
[30.84973907 44.42253876]
[31.56943321 32.34286499]
[21.90777779 20.86887932]
[12.24612141 9.39489079]
[1.71223497 11.16431332]
[-8.52670574 8.41874027]
[-16.63745499 1.71923852]
[-21.19676971 -7.67154360]
[-21.44093704 -18.02693558]
[-17.39291573 -27.47362709]
[-26.50890732 -39.38575363]
[-41.04023361 -45.64283371]
[-42.63050079 -60.45230103]
[-51.74649429 -72.36442566]
[-60.86248398 -84.27655029]
[-73.52628326 -86.74904633]
[-80.87329865 -96.86443329]
[-79.40400696 -108.87599182]
[-88.33364105 -120.92845154]
[-97.26327515 -132.98089600]
[-106.19290924 -145.03335571]
[-115.12254333 -157.08581543]
[-130.37275696 -163.11596680]
[-132.50762939 -179.37556458]
[-119.33095551 -189.13812256]
[-104.39778900 -182.36076355]
[-103.07009125 -166.01544189]
[-94.14045715 -153.96299744]
[-85.21082306 -141.91053772]
[-76.28118896 -129.85807800]
[-67.35155487 -117.80562592]
[-50.90238953 -111.69958496]
[-48.95035934 -93.39253998]
[-39.83436584 -81.48041534]
[-30.71837807 -69.56829071]
[-16.83908463 -64.16324615]
[-14.59678173 -48.50174332]
[-5.48079109 -36.58961868]
[13.96113586 -35.45435715]
[26.50222206 -20.15822029]
[23.72010994 -0.26676565]
[33.38176727 11.20722198]
[43.04342270 22.68120956]
[59.84037781 27.75280190]
[62.92677689 45.90307617]
[72.76570892 57.22542191]
[82.60463715 68.54776764]
[92.44356537 79.87010956]
[100.34397125 77.95754242]
[108.59458160 79.11007690]
[116.02055359 83.31299591]
[121.51039886 90.10724640]
[124.18148041 98.63592529]
[123.51924896 107.75125885]
[119.46860504 116.16891479]
[112.46196747 122.64893341]
[125.17169189 130.61529541]
[134.11213684 132.52363586]
[138.01577759 138.80569458]
[150.60006714 146.96875000]
[163.18435669 155.13180542]
[175.76864624 163.29487610]
[188.35293579 171.45793152]
[200.93722534 179.62100220]
[213.52153015 187.78405762]
[229.30989075 188.80294800]
[235.77679443 202.22041321]
[254.18016052 202.74438477]
[261.54559326 218.66949463]
[274.25531006 226.63586426]
[286.96502686 234.60223389]
[299.67474365 242.56860352]
[312.38446045 250.53495789]
[332.53732300 250.34912109]
[340.85543823 267.80001831]
[353.80676270 275.36727905]
[366.75808716 282.93450928]
[379.70941162 290.50173950]
[396.54196167 285.75164795]
[411.31307983 294.47027588]
[415.13488770 310.84472656]
[428.20233154 318.20962524]
[441.26977539 325.57455444]
[454.33721924 332.93945312]
[458.67251587 320.27383423]
[471.47122192 310.12176514]
[490.84893799 307.10189819]
[505.70220947 309.19461060]
[520.55554199 311.28735352]
[535.40881348 313.38009644]
[547.95300293 304.14532471]
[562.98657227 306.47924805]
[571.71319580 318.49511719]
[588.62005615 311.20700073]
[602.01586914 322.53887939]
[616.89990234 324.40036011]
[631.78393555 326.26184082]
[646.67529297 319.39303589]
[659.91156006 329.07461548]
[657.87646484 345.34698486]
[642.66345215 351.47055054]
[629.92248535 341.14590454]
[615.03839111 339.28442383]
[600.15435791 337.42294312]
[590.41174316 344.60052490]
[577.99224854 343.16668701]
[569.62048340 333.34841919]
[557.91351318 342.48535156]
[542.82037354 340.57461548]
[533.31610107 328.23336792]
[518.46276855 326.14065552]
[503.60949707 324.04791260]
[488.75619507 321.95520020]
[485.43466187 328.67959595]
[475.47009277 348.85278320]
[486.15887451 359.37655640]
[496.84762573 369.90036011]
[507.53637695 380.42416382]
[523.53662109 384.01931763]
[528.16424561 399.75198364]
[516.65881348 411.43774414]
[500.85610962 407.05529785]
[497.01257324 391.11294556]
[486.32382202 380.58914185]
[475.63507080 370.06533813]
[464.94628906 359.54153442]
[471.01336670 373.25979614]
[471.18417358 388.25881958]
[465.43106079 402.11169434]
[454.68493652 412.57690430]
[440.68457031 417.96115112]
[425.69534302 417.39321899]
[412.14254761 410.96499634]
[402.21914673 399.71664429]
[397.53076172 385.46813965]
[398.83605957 370.52505493]
[405.92379761 357.30520630]
[417.64712524 347.94769287]
[432.10916138 343.96658325]
[446.97232056 346.00689697]
[433.90487671 338.64199829]
[420.83743286 331.27706909]
[407.76998901 323.91217041]
[395.96148682 329.07913208]
[383.14221191 326.46011353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 134]
[2 133]
[3 132]
[4 131]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[15 123]
[17 121]
[18 120]
[19 119]
[20 118]
[21 117]
[22 116]
[23 115]
[24 113]
[25 112]
[26 50]
[27 49]
[28 48]
[29 47]
[30 43]
[31 42]
[32 41]
[33 40]
[52 104]
[53 103]
[54 102]
[55 101]
[58 99]
[59 98]
[60 97]
[66 94]
[67 93]
[69 91]
[70 90]
[71 89]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[137 199]
[138 198]
[139 197]
[140 196]
[143 169]
[144 168]
[145 167]
[146 166]
[149 163]
[151 160]
[152 159]
[153 158]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
