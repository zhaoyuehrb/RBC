%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGGCGCUCCAUUAAAUAGCCGUAGACGGAACUUCGCCUUUCUCUCGGCCUUAGCGCCAUUUUUUUGGGUGAGUGUUUUUUGGUUCCUGCGUUGGGAUUCCGUGUACAAUCCAUAGACAUCUGACCUCGGCACUUAGCAUCAUCACAGCAAACUAACUGUAGCCUUUCUCUCUUUCCCUGUAGAAACCUCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[110.79933167 133.43252563]
[101.10911560 135.11593628]
[91.33197784 134.04739380]
[82.23413849 130.31062317]
[74.52857208 124.19846344]
[61.69892120 131.97021484]
[48.86927795 139.74197388]
[36.03963089 147.51373291]
[23.20998383 155.28549194]
[10.38033867 163.05723572]
[24.95112991 166.61982727]
[33.93011856 178.63555908]
[33.21794128 193.61863708]
[23.13973999 204.72854614]
[8.29672813 206.89302063]
[-4.53450871 199.12390137]
[-9.49586105 184.96815491]
[-4.32123566 170.88745117]
[-9.83898926 185.45425415]
[-23.72980690 191.65908813]
[-37.58303833 186.30897522]
[-51.19152069 192.61842346]
[-64.80000305 198.92788696]
[-78.40848541 205.23733521]
[-84.88555145 211.69248962]
[-92.28196716 211.53707886]
[-105.98835754 217.63090515]
[-119.69474792 223.72474670]
[-126.27290344 230.07685852]
[-133.66593933 229.80470276]
[-147.46682739 235.68141174]
[-161.26770020 241.55810547]
[-175.06858826 247.43481445]
[-179.45013428 262.44601440]
[-192.48423767 271.08581543]
[-208.01658630 269.27478027]
[-218.71330261 257.86801147]
[-219.52369690 242.25143433]
[-210.06513977 229.79873657]
[-194.80368042 226.38967896]
[-180.94529724 233.63394165]
[-167.14440918 227.75723267]
[-153.34352112 221.88052368]
[-139.54264832 216.00381470]
[-125.78858185 210.01835632]
[-112.08219147 203.92451477]
[-98.37580109 197.83068848]
[-84.71794128 191.62884521]
[-71.10945892 185.31939697]
[-57.50097275 179.00994873]
[-43.89248657 172.70050049]
[-39.02465057 158.67053223]
[-25.31359291 152.07800293]
[-10.63068676 157.27896118]
[2.60858297 150.22760010]
[15.43822861 142.45584106]
[28.26787567 134.68408203]
[41.09752274 126.91233063]
[53.92716599 119.14057159]
[66.75681305 111.36882019]
[65.23033905 105.04284668]
[64.89673615 98.54386139]
[65.76744080 92.09484100]
[67.81259155 85.91702271]
[70.96201324 80.22235870]
[75.10766602 75.20622253]
[80.10731506 71.04070282]
[85.78943634 67.86871338]
[91.95909119 65.79907227]
[91.72229767 50.80094147]
[91.48550415 35.80281067]
[91.24871063 20.80468178]
[83.29452515 7.12837172]
[90.82994080 -5.71945715]
[90.59314728 -20.71758842]
[90.23797607 -35.71338272]
[89.76445007 -50.70590591]
[89.29092407 -65.69843292]
[88.81739044 -80.69095612]
[88.34386444 -95.68347931]
[79.48805237 -105.06978607]
[79.40761566 -117.57315826]
[87.59994507 -126.48164368]
[87.36315155 -141.47976685]
[87.12635803 -156.47790527]
[73.81136322 -164.00506592]
[66.10264587 -177.09980774]
[65.98417664 -192.19459534]
[73.38764191 -205.23471069]
[86.23764801 -212.76750183]
[86.00085449 -227.76562500]
[85.76406097 -242.76376343]
[77.05752563 -252.28869629]
[77.17448425 -264.79177856]
[85.50642395 -273.56982422]
[85.50642395 -288.56982422]
[85.50642395 -303.56982422]
[76.84272003 -317.49362183]
[84.80684662 -331.82907104]
[101.20599365 -331.82907104]
[109.17012024 -317.49362183]
[100.50642395 -303.56982422]
[100.50642395 -288.56982422]
[100.50642395 -273.56982422]
[110.08871460 -258.87286377]
[100.76219177 -243.00054932]
[100.99898529 -228.00242615]
[101.23577881 -213.00428772]
[114.31718445 -205.88092041]
[122.12861633 -193.08100891]
[122.48672485 -177.99002075]
[115.19522858 -164.65844727]
[102.12448883 -156.71469116]
[102.36128235 -141.71656799]
[102.59807587 -126.71843719]
[112.41118622 -112.17458344]
[103.33638763 -96.15700531]
[103.80992126 -81.16448212]
[104.28344727 -66.17195892]
[104.75697327 -51.17943573]
[105.23049927 -36.18691254]
[108.58714294 -29.59418106]
[105.59127808 -20.95438194]
[105.82807159 -5.95625067]
[113.76532745 6.64729214]
[106.24684143 20.56788826]
[106.48363495 35.56601715]
[106.72042847 50.56414795]
[106.95722198 65.56227875]
[129.90536499 81.56013489]
[133.89436340 109.24832916]
[147.18888855 116.19496918]
[160.48339844 123.14160919]
[152.14675903 110.67163086]
[142.91328430 98.85034180]
[138.66229248 84.46530914]
[139.98699951 69.52391815]
[146.70254517 56.11118698]
[157.87181091 46.09881592]
[171.93615723 40.88399124]
[186.93293762 41.19442749]
[200.76942444 46.98680496]
[211.51477051 57.45281601]
[217.66952515 71.13196564]
[218.37478638 86.11537933]
[213.53132629 100.31358337]
[199.36141968 105.23432159]
[214.15582275 107.70938873]
[228.95021057 110.18445587]
[243.74459839 112.65951538]
[254.71687317 101.68733215]
[270.04815674 99.29325104]
[283.84323120 106.39784241]
[290.79763794 120.26924133]
[288.23724365 135.57362366]
[277.14660645 146.42613220]
[261.79025269 148.65376282]
[248.07305908 141.39993286]
[241.26953125 127.45391083]
[226.47514343 124.97884369]
[211.68075562 122.50377655]
[196.88635254 120.02871704]
[192.04029846 125.75285339]
[203.83699036 135.01773071]
[215.63368225 144.28262329]
[227.43037415 153.54750061]
[239.22706604 162.81239319]
[251.02375793 172.07727051]
[262.82046509 181.34214783]
[277.58465576 183.99142456]
[285.48797607 196.74044800]
[281.29397583 211.14219666]
[267.78146362 217.65464783]
[253.90328979 211.96289062]
[248.85455322 197.83860779]
[237.77015686 187.73236084]
[226.68576050 177.62611389]
[215.60137939 167.51986694]
[204.51698303 157.41362000]
[193.43258667 147.30737305]
[182.34819031 137.20112610]
[177.50213623 142.92526245]
[182.38441467 157.10847473]
[187.26669312 171.29167175]
[192.14897156 185.47488403]
[197.03125000 199.65809631]
[209.75518799 210.00379944]
[206.89070129 226.15083313]
[191.38452148 231.48851013]
[179.18809509 220.52589417]
[182.84803772 204.54037476]
[177.96575928 190.35716248]
[173.08348083 176.17395020]
[168.20120239 161.99075317]
[163.31892395 147.80754089]
[153.53675842 136.43612671]
[140.24223328 129.48948669]
[126.94772339 122.54283905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[10 55]
[18 54]
[21 51]
[22 50]
[23 49]
[24 48]
[26 47]
[27 46]
[28 45]
[30 44]
[31 43]
[32 42]
[33 41]
[69 129]
[70 128]
[71 127]
[72 126]
[74 124]
[75 123]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[83 115]
[84 114]
[85 113]
[90 108]
[91 107]
[92 106]
[95 104]
[96 103]
[97 102]
[131 198]
[132 197]
[133 196]
[147 162]
[148 161]
[149 160]
[150 159]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
