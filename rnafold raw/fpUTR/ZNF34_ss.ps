%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGAUUGGCGGGGAGGGAGGGCCGAACGGGCGAGGUUGGGCUGCCGUGCUGCUCGGCGGCGCUGAGGCCAAAUAGUUGCAUCACAUGUAUCUAAUCCGAGAGUCUCAUGCUUCUGGUAGCUCCUCAGUGACCAGCUCCUGCUCACUGCCCUCAGAAAGCCCAACCCUCAGGCA\
) } def
/len { sequence length } bind def

/coor [
[63.66332245 388.56689453]
[59.93297577 403.09564209]
[56.20262527 417.62438965]
[52.47227859 432.15313721]
[59.36835480 446.63842773]
[52.21367645 460.99777222]
[36.49670029 464.21588135]
[24.27414513 453.82409668]
[24.92210960 437.79412842]
[37.94353104 428.42279053]
[41.67387772 413.89404297]
[45.40422821 399.36529541]
[49.13457489 384.83654785]
[52.07743454 370.12805176]
[54.22427368 355.28250122]
[56.37110901 340.43692017]
[58.51794815 325.59133911]
[60.66478348 310.74575806]
[53.27873993 294.84249878]
[64.75088501 280.45843506]
[66.63088226 265.57672119]
[68.51087952 250.69499207]
[70.39087677 235.81326294]
[55.96628189 227.07034302]
[46.77036285 212.86442566]
[44.68572235 196.01510620]
[50.17777634 179.89183044]
[62.19192123 167.73999023]
[78.35569000 162.02777100]
[79.70027924 147.08815002]
[81.04486847 132.14854431]
[82.38945770 117.20892334]
[87.04772949 89.02651215]
[82.79826355 74.64103699]
[78.54878998 60.25555420]
[74.29931641 45.87007523]
[70.46347046 42.23183060]
[68.61463928 37.91353989]
[68.67635345 33.79482651]
[70.23081970 30.59486771]
[66.76187897 16.00149727]
[63.29293823 1.40812814]
[59.82399368 -13.18524170]
[56.35505295 -27.77861214]
[52.88611221 -42.37198257]
[49.41717148 -56.96535110]
[39.75245667 -68.43675995]
[25.95953751 -74.33213806]
[12.16662121 -80.22751617]
[-1.62629485 -86.12288666]
[-15.41921139 -92.01826477]
[-29.21212769 -97.91364288]
[-43.00504303 -103.80901337]
[-59.94593048 -104.47441101]
[-63.99623871 -120.93744659]
[-49.29782867 -129.38688660]
[-37.10966873 -117.60192871]
[-23.31675339 -111.70655823]
[-9.52383614 -105.81118011]
[4.26908064 -99.91580963]
[18.06199646 -94.02043152]
[31.85491371 -88.12505341]
[45.64783096 -82.22968292]
[57.93939972 -90.82719421]
[57.13195038 -105.80545044]
[56.32450485 -120.78369904]
[55.51705551 -135.76194763]
[54.70960999 -150.74020386]
[53.90216064 -165.71846008]
[52.96030426 -180.68885803]
[36.31175232 -190.05903625]
[28.69732475 -207.41717529]
[33.00989914 -225.72132874]
[47.34295654 -237.66297913]
[45.46295929 -252.54469299]
[43.58295822 -267.42642212]
[34.17705154 -280.14804077]
[40.25819016 -293.74468994]
[38.37818909 -308.62640381]
[36.49819183 -323.50811768]
[34.61819458 -338.38986206]
[32.73819351 -353.27157593]
[24.75436211 -368.22799683]
[36.91614532 -380.04016113]
[51.63340759 -371.62359619]
[47.61991501 -355.15158081]
[49.49991226 -340.26983643]
[51.37991333 -325.38812256]
[53.25991058 -310.50640869]
[55.13990784 -295.62469482]
[64.41134644 -283.96749878]
[58.46467972 -269.30642700]
[60.34467697 -254.42469788]
[62.22467804 -239.54298401]
[72.89167786 -236.09019470]
[81.52896881 -228.86111450]
[86.85488892 -218.87823486]
[88.06040192 -207.57615662]
[84.93178558 -196.59556580]
[77.88727570 -187.54495239]
[67.92164612 -181.76504517]
[71.54994965 -175.29736328]
[68.88041687 -166.52590942]
[69.68785858 -151.54765320]
[70.49530792 -136.56939697]
[71.30275726 -121.59114838]
[72.11020660 -106.61289978]
[72.91764832 -91.63464355]
[74.67074585 -87.28379822]
[75.54600525 -82.73645020]
[75.53342438 -78.16559601]
[74.65635681 -73.74075317]
[72.96977997 -69.62166595]
[70.55746460 -65.95256805]
[67.52810669 -62.85712051]
[64.01053619 -60.43429184]
[67.47948456 -45.84092331]
[70.94842529 -31.24755287]
[74.41736603 -16.65418434]
[77.88630676 -2.06081367]
[81.35524750 12.53255653]
[84.82418823 27.12592506]
[88.68479919 41.62060547]
[92.93426514 56.00608444]
[97.18373871 70.39156342]
[101.43321228 84.77703857]
[112.45946503 94.94668579]
[127.14094543 98.02144623]
[141.82241821 101.09621429]
[156.50390625 104.17097473]
[171.18537903 107.24573517]
[186.27853394 102.50154877]
[197.14952087 112.68344116]
[211.83100891 115.75820160]
[226.51248169 118.83296967]
[243.25468445 116.16178894]
[250.45616150 131.51023865]
[237.70111084 142.67916870]
[223.43771362 133.51445007]
[208.75624084 130.43968201]
[194.07476807 127.36492157]
[180.03172302 132.32904053]
[168.11062622 121.92721558]
[153.42913818 118.85245514]
[138.74766541 115.77769470]
[124.06618500 112.70292664]
[109.38470459 109.62816620]
[97.32907104 118.55351257]
[95.98448181 133.49313354]
[94.63989258 148.43273926]
[93.29530334 163.37236023]
[105.12532806 169.33921814]
[114.19404602 178.95504761]
[119.43302917 191.05523682]
[120.23589325 204.18437195]
[116.52838898 216.77136230]
[108.77470398 227.31744385]
[97.91944122 234.57461548]
[85.27259827 237.69326782]
[83.39260101 252.57498169]
[81.51260376 267.45669556]
[79.63260651 282.33843994]
[86.91545105 293.01025391]
[85.02191162 305.38497925]
[75.51036072 312.89260864]
[73.36351776 327.73818970]
[71.21668243 342.58374023]
[69.06984711 357.42932129]
[66.92301178 372.27490234]
[79.67385864 364.37454224]
[94.31360626 367.64221191]
[102.49478149 380.21475220]
[99.55252838 394.92333984]
[87.16450500 403.38128662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[20 162]
[21 161]
[22 160]
[23 159]
[29 151]
[30 150]
[31 149]
[32 148]
[33 126]
[34 125]
[35 124]
[36 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[64 108]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 101]
[74 94]
[75 93]
[76 92]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
