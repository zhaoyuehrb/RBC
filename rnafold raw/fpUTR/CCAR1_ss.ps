%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACGUCAGCCAGUAAGCGCCGUUCCUCCGGGAGAUGUGGAGGAGGGGGGCGGCGUGGAGGAAGAGGGGGAAGUUGGCGCAUGCGCCUAAAGCUGACGGGUUUGAAAUGGCUUCGAUGUUAGCCGGGACCCGACUCAGAUCGAUGCUAUAGAAGACAAACAAGGGAAGGUUUUUUUUCCUUUUGCAUC\
) } def
/len { sequence length } bind def

/coor [
[181.81390381 159.87002563]
[184.22846985 145.06562805]
[193.02294922 132.91421509]
[206.33129883 125.99410248]
[221.32948303 125.77360535]
[206.49526978 123.54965210]
[191.66105652 121.32569885]
[176.82682800 119.10173798]
[161.99261475 116.87778473]
[147.15840149 114.65383148]
[132.32417297 112.42987823]
[126.76302338 123.16603851]
[117.68301392 131.54324341]
[106.04953766 136.42773438]
[93.18511963 137.07040405]
[80.61932373 133.21594238]
[69.90694427 125.15431976]
[62.43591309 113.70634460]
[48.69931412 119.73177338]
[39.16952515 132.36085510]
[24.40618896 130.38772583]
[10.66958904 136.41316223]
[1.13979757 149.04223633]
[-13.62353706 147.06910706]
[-27.36013603 153.09454346]
[-41.09673691 159.11997986]
[-54.83333588 165.14540100]
[-68.56993866 171.17083740]
[-82.30653381 177.19627380]
[-96.04313660 183.22169495]
[-109.77973938 189.24713135]
[-113.99887848 204.30477905]
[-126.93890381 213.08486938]
[-142.48991394 211.44169617]
[-153.30920410 200.15112305]
[-154.28823853 184.54421997]
[-144.96475220 171.99008179]
[-129.74099731 168.41638184]
[-115.80516815 175.51052856]
[-102.06856537 169.48509216]
[-88.33197021 163.45967102]
[-74.59536743 157.43423462]
[-60.85876846 151.40879822]
[-47.12216949 145.38337708]
[-33.38556671 139.35794067]
[-19.64896774 133.33250427]
[-11.10171032 121.13440704]
[4.64415789 122.67655945]
[18.38075829 116.65112305]
[26.92801666 104.45302582]
[42.67388535 105.99517059]
[56.41048431 99.96974182]
[59.00163651 85.19523621]
[48.13525772 74.85493469]
[37.26887894 64.51463318]
[26.40250206 54.17433548]
[15.53612328 43.83403397]
[4.66974497 33.49373245]
[-10.50412750 36.15075684]
[-24.17322350 29.44186974]
[-31.18788147 16.12802124]
[-29.04340172 1.41274989]
[-44.61871338 1.63038123]
[-55.49146652 -9.01095009]
[-55.60295868 -23.86097336]
[-66.46933746 -34.20127487]
[-81.70552826 -31.26219749]
[-95.74510193 -37.87052155]
[-103.18955994 -51.48520660]
[-101.17636108 -66.87113190]
[-90.47960663 -78.11209106]
[-75.21243286 -80.88570404]
[-61.24537277 -74.12547302]
[-53.94904327 -60.43083191]
[-56.12903595 -45.06764984]
[-45.26265717 -34.72735214]
[-30.42537308 -35.35231400]
[-19.25801849 -25.02057457]
[-18.70310020 -9.45362854]
[-4.11226082 -12.32510853]
[9.53302479 -5.97923040]
[16.91142654 7.34040117]
[15.01004601 22.62735367]
[25.87642479 32.96765518]
[36.74280167 43.30795670]
[47.60918045 53.64825821]
[58.47555923 63.98855972]
[69.34193420 74.32885742]
[84.89228058 64.13665771]
[102.88496399 62.26551437]
[119.26212311 68.67475128]
[130.53985596 81.50682831]
[134.54814148 97.59565735]
[149.38235474 99.81961060]
[164.21656799 102.04357147]
[179.05079651 104.26752472]
[193.88500977 106.49147797]
[208.71922302 108.71543121]
[223.55343628 110.93938446]
[231.80139160 94.37833405]
[254.43153381 87.29927826]
[267.96139526 80.82295990]
[281.49127197 74.34664917]
[295.02114868 67.87033081]
[297.93673706 52.74401855]
[309.07000732 42.35634613]
[324.00842285 40.53768158]
[336.99780273 47.77743912]
[350.52767944 41.30112457]
[364.05755615 34.82481003]
[377.58743286 28.34849358]
[391.11727905 21.87217903]
[400.22430420 8.93491650]
[415.04479980 10.41883850]
[428.57467651 3.94252372]
[442.10455322 -2.53379154]
[455.63439941 -9.01010704]
[469.16427612 -15.48642254]
[478.27130127 -28.42368317]
[493.09179688 -26.93976212]
[502.19882202 -39.87702179]
[517.01934814 -38.39310074]
[530.54919434 -44.86941528]
[539.65618896 -57.80667877]
[554.47674561 -56.32275772]
[568.00659180 -62.79907227]
[581.53643799 -69.27538300]
[593.21270752 -81.56774902]
[608.25695801 -73.75069427]
[604.91003418 -57.13038635]
[588.01275635 -55.74551773]
[574.48291016 -49.26920319]
[560.95300293 -42.79288864]
[552.81378174 -30.31885529]
[537.02551270 -31.33954811]
[523.49566650 -24.86323357]
[515.35638428 -12.38920116]
[499.56811523 -13.40989304]
[491.42883301 -0.93586123]
[475.64059448 -1.95655382]
[462.11071777 4.51976156]
[448.58087158 10.99607658]
[435.05099487 17.47239113]
[421.52111816 23.94870758]
[413.38183594 36.42274094]
[397.59359741 35.40204620]
[384.06372070 41.87836075]
[370.53387451 48.35467911]
[357.00399780 54.83099365]
[343.47412109 61.30730820]
[340.96636963 75.96504211]
[330.18084717 86.45961761]
[315.10760498 88.61616516]
[301.49746704 81.40019989]
[287.96759033 87.87651825]
[274.43771362 94.35282898]
[260.90783691 100.82914734]
[258.88696289 108.05175018]
[273.33212280 112.09373474]
[269.28991699 126.53882599]
[254.84521484 122.49696350]
[252.82432556 129.71957397]
[261.02856445 142.27706909]
[269.23275757 154.83456421]
[277.43698120 167.39205933]
[285.64120483 179.94955444]
[293.84542847 192.50706482]
[302.04965210 205.06455994]
[310.25387573 217.62205505]
[318.45809937 230.17955017]
[333.32666016 237.09748840]
[334.50009155 253.45460510]
[320.77130127 262.42410278]
[306.26324463 254.77891541]
[305.90060425 238.38377380]
[297.69638062 225.82627869]
[289.49215698 213.26878357]
[281.28793335 200.71127319]
[273.08370972 188.15377808]
[264.87948608 175.59628296]
[256.67526245 163.03878784]
[248.47105408 150.48129272]
[240.26683044 137.92379761]
[246.31741333 151.64933777]
[245.57356262 166.63088989]
[238.19314575 179.68957520]
[225.74215698 188.05455017]
[210.86251831 189.95089722]
[196.71144104 184.97622681]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 99]
[6 98]
[7 97]
[8 96]
[9 95]
[10 94]
[11 93]
[18 52]
[19 51]
[21 49]
[22 48]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[62 79]
[65 76]
[66 75]
[101 157]
[102 156]
[103 155]
[104 154]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[114 144]
[115 143]
[116 142]
[117 141]
[118 140]
[120 138]
[122 136]
[123 135]
[125 133]
[126 132]
[127 131]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
