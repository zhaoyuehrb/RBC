%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCGUCUAGCUGCACUUCCUCCUUAGGCGGAGGGGAGGAUUCAGGGAAGCUUGGUUAAAAACAGUUAUGGCAGUGGGAGUCGAAGCGAGGGUCUGAAGUUCACGACUACUAGAAGGGGAGGGGAGUGGAAAGGCUCUCAGUGAAAAAGGUAUGGAACCCUUCAGAUCAAAGCUUACCAAUAAAUUCAGUAUGUAGAACAGAUUAACGUAGUUGAA\
) } def
/len { sequence length } bind def

/coor [
[286.32049561 48.93289185]
[278.51068115 36.12637711]
[270.70086670 23.31986237]
[256.62612915 18.13317680]
[250.15248108 31.49834251]
[235.76510620 36.44385910]
[221.79039001 29.56309891]
[207.53796387 34.23945236]
[193.28552246 38.91580582]
[183.60472107 50.23530579]
[168.08015442 47.18591690]
[153.82772827 51.86227036]
[139.57530212 56.53862000]
[125.32287598 61.21497345]
[111.07044220 65.89132690]
[132.65222168 78.40117645]
[142.27380371 103.73616028]
[133.12287903 131.52622986]
[106.72032928 148.55407715]
[95.30722046 158.28756714]
[83.89411926 168.02107239]
[72.48101044 177.75456238]
[61.06790543 187.48806763]
[49.65479660 197.22157288]
[38.24169159 206.95506287]
[26.82858658 216.68856812]
[27.13469696 232.32315063]
[17.27928352 244.46418762]
[1.91576898 247.37905884]
[-11.70166492 239.69143677]
[-17.14328194 225.03118896]
[-11.83971596 210.32043457]
[1.70484984 202.50514221]
[17.09508705 205.27546692]
[28.50819206 195.54196167]
[39.92129898 185.80845642]
[51.33440399 176.07496643]
[62.74750900 166.34146118]
[74.16061401 156.60797119]
[85.57372284 146.87446594]
[96.98682404 137.14096069]
[93.89357758 130.30856323]
[84.61382294 109.81133270]
[69.76931000 111.96550751]
[54.92479706 114.11968231]
[40.08028412 116.27384949]
[25.23577309 118.42802429]
[12.70050907 129.00154114]
[-2.63006735 123.17869568]
[-4.98517275 106.94953918]
[8.05792236 97.00923157]
[23.08160019 103.58351135]
[37.92611313 101.42933655]
[52.77062607 99.27516937]
[67.61513519 97.12099457]
[82.45964813 94.96681976]
[83.32239532 87.51660919]
[68.42196655 85.79112244]
[53.52154160 84.06563568]
[41.47995377 75.12135315]
[55.24703217 69.16520691]
[70.14745331 70.89069366]
[85.04788208 72.61618042]
[85.91062927 65.16596985]
[71.95128632 59.67627335]
[55.82273483 62.64308548]
[45.39656448 49.98500443]
[51.39831924 34.72358322]
[67.65390778 32.55846405]
[77.44097900 45.71693420]
[91.40032196 51.20662689]
[106.39409637 51.63889694]
[120.64652252 46.96254349]
[134.89895630 42.28619385]
[149.15138245 37.60984039]
[163.40380859 32.93348694]
[174.10404968 21.27950096]
[188.60917664 24.66337585]
[202.86160278 19.98702240]
[217.11402893 15.31067085]
[224.29585266 1.48825312]
[238.81645203 -3.05120206]
[251.94976807 3.88074827]
[260.00531006 -6.85240698]
[271.83663940 -8.19173908]
[280.54815674 -20.40277481]
[289.25967407 -32.61381149]
[297.97119141 -44.82484436]
[293.20922852 -59.47509384]
[297.93167114 -73.95099640]
[310.12826538 -82.76615906]
[324.99887085 -82.70981598]
[333.71038818 -94.92085266]
[342.42190552 -107.13188934]
[351.13342285 -119.34292603]
[359.84494019 -131.55395508]
[368.55645752 -143.76499939]
[377.26800537 -155.97602844]
[385.97952271 -168.18705750]
[394.69104004 -180.39810181]
[382.64935303 -223.73800659]
[388.73721313 -237.44703674]
[394.82510376 -251.15608215]
[400.91299438 -264.86511230]
[407.00085449 -278.57415771]
[398.49533081 -289.51962280]
[398.41146851 -305.15444946]
[408.88400269 -319.06875610]
[411.46505737 -333.84500122]
[409.85937500 -342.83178711]
[414.19125366 -348.81497192]
[416.98498535 -363.55249023]
[407.88058472 -376.47091675]
[410.65975952 -392.02893066]
[423.67370605 -400.99624634]
[439.20147705 -398.05270386]
[448.03070068 -384.94467163]
[444.92315674 -369.44891357]
[431.72253418 -360.75875854]
[428.92880249 -346.02124023]
[426.24133301 -331.26394653]
[423.66024780 -316.48767090]
[437.41281128 -310.49871826]
[446.47259521 -322.45364380]
[455.53240967 -334.40856934]
[464.59219360 -346.36346436]
[473.65200806 -358.31838989]
[482.71182251 -370.27331543]
[480.30688477 -385.89355469]
[489.71875000 -398.58969116]
[505.36352539 -400.82934570]
[517.95947266 -391.28378296]
[520.03356934 -375.61618042]
[510.35537720 -363.12185669]
[494.66671753 -361.21350098]
[485.60693359 -349.25860596]
[476.54711914 -337.30368042]
[467.48733521 -325.34875488]
[458.42752075 -313.39385986]
[449.36770630 -301.43893433]
[441.15826416 -277.75659180]
[420.70989990 -272.48626709]
[414.62200928 -258.77722168]
[408.53414917 -245.06819153]
[402.44625854 -231.35916138]
[396.35836792 -217.65011597]
[401.18389893 -211.90864563]
[415.95391846 -214.52522278]
[410.83489990 -200.42570496]
[415.66040039 -194.68423462]
[430.21249390 -198.32238770]
[444.76461792 -201.96054077]
[454.21835327 -214.92227173]
[470.25210571 -215.46858215]
[480.56613159 -203.18037415]
[477.24844360 -187.48413086]
[462.84405518 -180.42063904]
[448.40277100 -187.40843201]
[433.85064697 -183.77027893]
[419.29855347 -180.13212585]
[406.90206909 -171.68658447]
[398.19055176 -159.47554016]
[389.47903442 -147.26451111]
[380.76751709 -135.05346680]
[372.05596924 -122.84243774]
[363.34445190 -110.63140106]
[354.63293457 -98.42036438]
[345.92141724 -86.20932770]
[337.20989990 -73.99829102]
[342.10232544 -59.95542145]
[337.73593140 -45.55407715]
[325.58471680 -36.37797165]
[310.18222046 -36.11332321]
[301.47070312 -23.90228844]
[292.75918579 -11.69125271]
[284.04766846 0.51978278]
[283.50735474 15.51004887]
[291.31716919 28.31656265]
[299.12698364 41.12307739]
[306.62463379 41.21374512]
[313.56369019 43.87017059]
[319.10275269 48.71984100]
[322.58773804 55.12750626]
[323.62899780 62.27811432]
[322.14425659 69.28042603]
[318.36328125 75.27806091]
[325.23086548 88.61359406]
[332.09844971 101.94912720]
[338.96603394 115.28466034]
[345.83358765 128.62019348]
[352.79708862 141.90589905]
[359.85610962 155.14106750]
[366.91513062 168.37625122]
[373.97418213 181.61143494]
[381.03320312 194.84661865]
[394.35458374 203.38194275]
[393.51708984 218.25299072]
[400.57611084 231.48817444]
[415.44375610 237.51583862]
[419.86264038 252.93832397]
[410.44296265 265.92483521]
[394.41070557 266.51321411]
[384.06442261 254.25212097]
[387.34094238 238.54721069]
[380.28189087 225.31202698]
[367.46545410 217.72335815]
[367.79803467 201.90565491]
[360.73898315 188.67047119]
[353.67996216 175.43528748]
[346.62094116 162.20010376]
[339.56188965 148.96492004]
[333.64370728 144.54467773]
[332.49807739 135.48776245]
[325.63049316 122.15222931]
[318.76290894 108.81670380]
[311.89532471 95.48117065]
[305.02777100 82.14563751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 83]
[7 80]
[8 79]
[9 78]
[11 76]
[12 75]
[13 74]
[14 73]
[15 72]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[64 71]
[65 70]
[85 176]
[86 175]
[87 174]
[88 173]
[92 169]
[93 168]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[99 162]
[100 161]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[108 122]
[109 121]
[111 120]
[112 119]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[150 160]
[151 159]
[152 158]
[186 217]
[187 216]
[188 215]
[189 214]
[190 213]
[191 211]
[192 210]
[193 209]
[194 208]
[195 207]
[197 205]
[198 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
