%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGACCCGGGCUUUUCCUUCGUACCCUGCGGCCCCCUCCGCACCCCUCACGGAGCUCCUCGGGUCCUGCCCCCUCCCAGCGCUUGCCCGCGCCGCCCCGCCCCCGUUUUUAAACCUGGCGCGCGGGUAGGUGAGCGCGUUAGCCCGAGUGGAUCUAGGCGCGCUCGUAGGCCGGCGCCGCAGCAAGGGGCGCGGGCUCCGCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[20.58033371 178.57107544]
[14.39734840 180.99496460]
[7.81942654 181.38694763]
[1.49208796 179.74043274]
[-3.97356129 176.24734497]
[-17.14603615 183.42271423]
[-30.31851196 190.59808350]
[-43.49098969 197.77345276]
[-56.66346359 204.94882202]
[-69.83593750 212.12417603]
[-83.00841522 219.29954529]
[-96.18089294 226.47491455]
[-95.66154480 237.92675781]
[-99.43614197 248.69674683]
[-106.92324829 257.24163818]
[-117.01239777 262.35220337]
[-128.22871399 263.32427979]
[-138.94848633 260.05554199]
[-147.63418579 253.05487061]
[-161.11392212 259.63488770]
[-174.59365845 266.21493530]
[-188.07339478 272.79495239]
[-201.55313110 279.37496948]
[-215.03286743 285.95501709]
[-215.84185791 303.51004028]
[-225.38197327 318.16256714]
[-240.94941711 325.92523193]
[-258.21524048 324.74023438]
[-272.42910767 315.02401733]
[-285.70693970 322.00247192]
[-298.98480225 328.98092651]
[-312.26263428 335.95938110]
[-325.54046631 342.93783569]
[-329.99374390 358.10174561]
[-343.90502930 365.60186768]
[-359.02099609 360.98852539]
[-366.37362671 346.99874878]
[-361.60073853 331.93237305]
[-347.53399658 324.72805786]
[-332.51892090 329.66000366]
[-319.24108887 322.68154907]
[-305.96322632 315.70309448]
[-292.68539429 308.72463989]
[-279.40756226 301.74618530]
[-280.26754761 289.14147949]
[-276.28176880 277.10342407]
[-268.00881958 267.43148804]
[-256.65084839 261.58547974]
[-243.87901306 260.46527100]
[-231.58753967 264.27249146]
[-221.61288452 272.47528076]
[-208.13316345 265.89523315]
[-194.65342712 259.31521606]
[-181.17369080 252.73519897]
[-167.69395447 246.15516663]
[-154.21421814 239.57513428]
[-152.04571533 221.01199341]
[-139.02325439 207.39787292]
[-120.27823639 204.35916138]
[-103.35625458 213.30244446]
[-90.18378448 206.12707520]
[-77.01130676 198.95170593]
[-63.83882904 191.77633667]
[-50.66635513 184.60096741]
[-37.49387741 177.42561340]
[-24.32140350 170.25024414]
[-11.14892769 163.07487488]
[-1.46695137 142.07681274]
[22.37244797 142.75007629]
[34.85224152 134.42813110]
[47.33203506 126.10618591]
[59.81182861 117.78424835]
[56.64529419 109.23085785]
[55.29451752 100.13162994]
[55.84905243 90.87106323]
[58.31726074 81.84714508]
[62.62456131 73.45429230]
[68.61534119 66.06609344]
[76.05837250 60.01874161]
[84.65563202 55.59576035]
[94.05421448 53.01484680]
[103.86076355 52.41733170]
[113.65795898 53.86083984]
[114.77361298 38.90238571]
[115.88925934 23.94393349]
[117.00490570 8.98547935]
[118.12055969 -5.97297382]
[119.23620605 -20.93142700]
[120.35185242 -35.88988113]
[121.46749878 -50.84833527]
[122.58315277 -65.80678558]
[123.69879913 -80.76524353]
[124.81444550 -95.72369385]
[125.93009949 -110.68214417]
[123.44763184 -119.47277832]
[127.17533875 -125.85446930]
[128.51358032 -140.79464722]
[129.85180664 -155.73483276]
[115.79059601 -161.25379944]
[103.85468292 -170.51179504]
[95.01165009 -182.75833130]
[89.97837067 -197.00062561]
[89.16287231 -212.08410645]
[92.63125610 -226.78604126]
[100.10235596 -239.91461182]
[110.97053528 -250.40553284]
[124.35474396 -257.40835571]
[139.16999817 -260.35540771]
[154.21527100 -259.00775146]
[168.27093506 -253.47467041]
[180.19755554 -244.20468140]
[189.02827454 -231.94926453]
[194.04724121 -217.70193481]
[194.84759521 -202.61763000]
[191.36444092 -187.91918945]
[183.88014221 -174.79812622]
[173.00143433 -164.31813049]
[159.61019897 -157.32875061]
[144.79199219 -154.39660645]
[143.45376587 -139.45642090]
[142.11552429 -124.51623535]
[140.88854980 -109.56649780]
[139.77290344 -94.60804749]
[138.65725708 -79.64958954]
[137.54161072 -64.69113922]
[136.42594910 -49.73268509]
[135.31030273 -34.77423096]
[134.19465637 -19.81577873]
[133.07901001 -4.85732508]
[131.96336365 10.10112858]
[130.84771729 25.05958176]
[129.73207092 40.01803589]
[128.61640930 54.97649002]
[140.01887512 64.72245789]
[154.62120056 61.29139328]
[169.22352600 57.86033249]
[183.82585144 54.42927170]
[198.42816162 50.99821091]
[213.03048706 47.56715012]
[227.63281250 44.13608932]
[242.23513794 40.70502853]
[256.81152344 37.16535568]
[271.36114502 33.51726532]
[285.91073608 29.86917877]
[298.83901978 16.75654793]
[315.51388550 22.22607422]
[330.00759888 18.36176872]
[341.22946167 6.40344286]
[357.13275146 10.40565205]
[361.35751343 26.25126648]
[349.55767822 37.63967514]
[333.87188721 32.85546112]
[319.37820435 36.71976471]
[313.04760742 47.02753830]
[301.00430298 50.36557388]
[289.55883789 44.41880035]
[275.00921631 48.06688690]
[260.45959473 51.71497345]
[254.73612976 56.39085007]
[245.66619873 55.30735016]
[231.06387329 58.73841095]
[216.46154785 62.16947174]
[201.85922241 65.60053253]
[187.25691223 69.03159332]
[172.65458679 72.46265411]
[158.05226135 75.89371490]
[143.44993591 79.32477570]
[146.34138489 91.71879578]
[145.84452820 104.15875244]
[142.14134216 115.75476074]
[135.63795471 125.71584320]
[146.12545776 136.44023132]
[156.61296082 147.16461182]
[167.10046387 157.88899231]
[182.28092957 162.34587097]
[185.64756775 176.85501099]
[196.13507080 187.57939148]
[206.62257385 198.30377197]
[217.11006165 209.02815247]
[227.59756470 219.75253296]
[242.77804565 224.20941162]
[246.14466858 238.71855164]
[262.10610962 240.33476257]
[270.67282104 253.89909363]
[265.27316284 269.00613403]
[250.04928589 274.06710815]
[236.67965698 265.19961548]
[235.42030334 249.20605469]
[220.98995972 245.51625061]
[216.87318420 230.24003601]
[206.38568115 219.51565552]
[195.89819336 208.79127502]
[185.41069031 198.06689453]
[174.92318726 187.34251404]
[160.49284363 183.65269470]
[156.37608337 168.37648010]
[145.88858032 157.65209961]
[135.40107727 146.92771912]
[124.91357422 136.20335388]
[115.77236176 141.01951599]
[105.75933075 143.56832886]
[95.42794800 143.70886230]
[85.34928131 141.43338013]
[76.08044434 136.86764526]
[68.13377380 130.26403809]
[55.65397644 138.58598328]
[43.17418289 146.90792847]
[30.69439125 155.22987366]
[31.09922409 162.06515503]
[29.38553619 168.64126587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 62]
[11 61]
[12 60]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[69 208]
[70 207]
[71 206]
[72 205]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[96 121]
[97 120]
[98 119]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 158]
[143 157]
[144 156]
[146 153]
[147 152]
[171 199]
[172 198]
[173 197]
[174 196]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
