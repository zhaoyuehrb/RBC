%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGACAGAGAGGGAGAGAGAGAGCAAGAGGGAGAGUGUGUGAGAGAGAGUUAGUUCAAGCCAAAAUGGCCGACAGAGUCUCUGCUGGUUUCUGAAUAUUUAAAAUACAAAAAAACAGAUAGACAAAAAGAAUUCAUUUUUUGGACCUUUUUUCAUUUCCAUUUCUACCUUGUAUGCCUCAAUUUGCUGGAUUUAAGCACUGCUGCACUUU\
) } def
/len { sequence length } bind def

/coor [
[102.12487030 283.70404053]
[98.19388580 298.62219238]
[86.80614471 309.03002930]
[71.59543610 311.60644531]
[57.41544342 305.52932739]
[48.79095078 292.73785400]
[48.47400284 277.31375122]
[56.56573486 264.17877197]
[70.48410797 257.52426147]
[72.25820160 242.62954712]
[74.03230286 227.73483276]
[75.80639648 212.84011841]
[77.47008514 197.93266296]
[71.09223175 184.47264099]
[80.21689606 171.54780579]
[81.77008057 156.62844849]
[83.21268463 141.69796753]
[84.54462433 126.75722504]
[73.51985168 100.01222229]
[88.94848633 80.90770721]
[86.29512787 66.14424896]
[83.64177704 51.38079071]
[79.04402924 43.48875809]
[81.06018066 36.37901688]
[78.62589264 21.57786179]
[76.19159698 6.77670670]
[73.64770508 -8.00600624]
[63.59130096 -20.21990395]
[68.95525360 -34.11512756]
[66.30190277 -48.87858582]
[63.64854813 -63.64204407]
[60.99519348 -78.40550232]
[58.23252487 -93.14889526]
[55.36069489 -107.87141418]
[52.48886108 -122.59393311]
[49.61703110 -137.31645203]
[44.90284348 -145.13949585]
[46.81341934 -152.27833557]
[44.16006851 -167.04179382]
[41.50671387 -181.80525208]
[36.90896988 -189.69728088]
[38.92512131 -196.80702209]
[36.49082947 -211.60816956]
[34.05653381 -226.40933228]
[31.62224197 -241.21047974]
[29.07834816 -255.99319458]
[26.42499352 -270.75665283]
[23.77163887 -285.52011108]
[21.11828613 -300.28356934]
[18.46493149 -315.04702759]
[4.65481806 -321.87249756]
[-2.40567160 -335.36334229]
[-0.19457558 -350.24874878]
[10.23284912 -360.85095215]
[7.57949495 -375.61441040]
[4.92614079 -390.37786865]
[2.27278662 -405.14132690]
[-0.38056743 -419.90478516]
[-3.03392148 -434.66824341]
[-6.40264177 -438.65356445]
[-7.76963520 -443.08898926]
[-7.29857635 -447.13684082]
[-5.46181488 -450.14575195]
[-7.45643187 -465.01254272]
[-9.45104885 -479.87933350]
[-11.44566536 -494.74615479]
[-13.44028282 -509.61294556]
[-15.43489933 -524.47973633]
[-22.18527412 -537.87493896]
[-32.94788361 -548.32324219]
[-43.71049118 -558.77148438]
[-54.47309875 -569.21978760]
[-69.76425171 -573.28070068]
[-73.50673676 -587.69744873]
[-84.26934052 -598.14575195]
[-95.03195190 -608.59399414]
[-105.79456329 -619.04229736]
[-121.37083435 -625.73675537]
[-119.24993134 -642.55749512]
[-102.49940491 -645.17596436]
[-95.34629822 -629.80487061]
[-84.58368683 -619.35662842]
[-73.82107544 -608.90832520]
[-63.05846786 -598.46008301]
[-48.53713226 -595.14648438]
[-44.02483368 -579.98236084]
[-33.26222610 -569.53411865]
[-22.49961662 -559.08581543]
[-11.73700809 -548.63757324]
[-4.87341595 -551.66101074]
[15.71736050 -560.73126221]
[15.27286053 -575.72467041]
[14.82836056 -590.71807861]
[14.38386059 -605.71148682]
[-0.26999116 -609.34014893]
[-13.40086746 -616.78881836]
[-24.03437042 -627.50476074]
[-31.38142395 -640.69281006]
[-34.89682388 -655.37420654]
[-34.31971359 -670.45959473]
[-29.69290733 -684.82958984]
[-21.35975075 -697.41772461]
[-9.93862057 -707.28991699]
[3.72296309 -713.71356201]
[18.61121750 -716.21209717]
[33.62133789 -714.59997559]
[47.63946915 -708.99688721]
[59.62537766 -699.81860352]
[68.68962860 -687.74627686]
[74.15959167 -673.67565918]
[75.62935638 -658.65093994]
[72.98986816 -643.78698730]
[66.43698120 -630.18695068]
[56.45697403 -618.85986328]
[43.79042435 -610.64642334]
[29.37727356 -606.15600586]
[29.82177353 -591.16259766]
[30.26627350 -576.16918945]
[30.71077347 -561.17578125]
[37.50891113 -574.54681396]
[52.38496017 -576.47119141]
[67.07897949 -573.45697021]
[79.99598694 -565.83129883]
[89.73387146 -554.42193604]
[95.23561096 -540.46734619]
[95.90401459 -525.48223877]
[91.66652679 -511.09320068]
[82.98311615 -498.86215210]
[70.79633331 -490.11672974]
[56.42902756 -485.80621338]
[41.44072723 -486.39849854]
[27.45836449 -491.82931519]
[15.99968815 -501.50912476]
[8.30985260 -514.38378906]
[-0.56810778 -526.47436523]
[1.42650926 -511.60754395]
[3.42112613 -496.74075317]
[5.41574335 -481.87396240]
[7.41036034 -467.00717163]
[9.40497684 -452.14038086]
[11.72953701 -437.32159424]
[14.38289165 -422.55813599]
[17.03624535 -407.79467773]
[19.68959999 -393.03121948]
[22.34295273 -378.26776123]
[24.99630737 -363.50430298]
[38.46288681 -357.19644165]
[45.71873093 -344.01248169]
[43.79762268 -328.90740967]
[33.22838974 -317.70037842]
[35.88174438 -302.93692017]
[38.53509903 -288.17346191]
[41.18845367 -273.41000366]
[43.84180450 -258.64654541]
[48.11857224 -252.61973572]
[46.42339706 -243.64477539]
[48.85768890 -228.84362793]
[51.29198456 -214.04246521]
[53.72627640 -199.24131775]
[56.27017212 -184.45860291]
[58.92352676 -169.69514465]
[61.57688141 -154.93168640]
[64.33954620 -140.18829346]
[67.21138000 -125.46576691]
[70.08321381 -110.74324799]
[72.95504761 -96.02072906]
[77.32064819 -90.05795288]
[75.75865173 -81.05886078]
[78.41201019 -66.29540253]
[81.06536102 -51.53194046]
[83.71871185 -36.76848221]
[93.58533478 -25.61056519]
[88.41116333 -10.65935993]
[92.68792725 -4.63254356]
[90.99275208 4.34241343]
[93.42704773 19.14356995]
[95.86134338 33.94472504]
[98.40523529 48.72743988]
[101.05858612 63.49089813]
[103.71194458 78.25435638]
[112.61772156 79.78676605]
[120.77590179 85.04923248]
[126.61332703 93.63388062]
[128.78656006 104.47386169]
[126.45299530 115.97050476]
[134.83268738 128.41159058]
[143.21238708 140.85267639]
[151.59210205 153.29376221]
[167.16091919 154.75852966]
[178.10894775 165.92433167]
[179.26684570 181.51898193]
[170.08787537 194.17918396]
[154.90609741 197.92716980]
[140.88986206 190.99327087]
[134.65721130 176.65142822]
[139.15101624 161.67346191]
[130.77131653 149.23237610]
[122.39160919 136.79129028]
[114.01190948 124.35020447]
[99.48537445 128.08915710]
[98.15343475 143.02990723]
[100.50833893 151.85475159]
[96.68945312 158.18162537]
[95.13626862 173.10099792]
[101.40302277 187.62815857]
[92.38945770 199.48585510]
[94.61333466 208.34461975]
[90.70111084 214.61421204]
[88.92701721 229.50892639]
[87.15291595 244.40364075]
[85.37882233 259.29837036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 211]
[10 210]
[11 209]
[12 208]
[13 206]
[15 204]
[16 203]
[17 201]
[18 200]
[20 180]
[21 179]
[22 178]
[24 177]
[25 176]
[26 175]
[27 173]
[29 171]
[30 170]
[31 169]
[32 168]
[33 166]
[34 165]
[35 164]
[36 163]
[38 162]
[39 161]
[40 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 89]
[70 88]
[71 87]
[72 86]
[74 84]
[75 83]
[76 82]
[77 81]
[91 119]
[92 118]
[93 117]
[94 116]
[185 199]
[186 198]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
