%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAUUGCUUUGGCGCCGUCUGGGGAGCGCGAGCCCGCGGGUGGCGCGCGGCGCAUGGUGGCGGCUCCUUUCGGAGCGCAGCCGAACCUCUGACCCGGACUCCGUUACCCCUGCCCGGCGCGCCCCGGCGGCCGGCUGGAGGCAGAAACAGCAGAAGCGUUAACAGCAGCAGCGGCGGCGGCUGCUCCGCCGCCGUCUCCGCGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[141.34747314 169.07617188]
[128.45405579 176.74168396]
[113.46178436 177.22291565]
[100.10332489 170.40005493]
[91.70459747 157.97180176]
[90.35667419 143.03248596]
[96.39508057 129.30169678]
[98.53691101 114.45539856]
[89.53958130 126.45740509]
[80.54225922 138.45941162]
[71.54492950 150.46141052]
[73.58412933 165.90419006]
[64.28858948 177.94775391]
[49.55369186 179.79666138]
[40.55636597 191.79866028]
[38.46959305 207.48164368]
[24.64462280 213.02415466]
[15.64729500 225.02616882]
[18.13366699 240.63363647]
[8.78813362 253.37870789]
[-6.84476376 255.69992065]
[-19.49030495 246.22016907]
[-21.64611626 230.56359863]
[-12.03319073 218.01899719]
[3.64529181 216.02883911]
[12.64262009 204.02682495]
[14.08584309 189.20231628]
[28.55436134 182.80133057]
[37.55168915 170.79933167]
[35.19433594 156.13719177]
[44.14793396 143.83728027]
[59.54292297 141.46408081]
[68.54025269 129.46208191]
[77.53758240 117.46007538]
[86.53491211 105.45806885]
[86.64710999 90.45848846]
[77.83032990 78.32323456]
[69.01354980 66.18798065]
[60.19677353 54.05272675]
[45.82562637 47.43602371]
[44.60433197 32.59157181]
[35.78755188 20.45631790]
[28.21103096 15.35253239]
[26.93125534 8.07293129]
[18.29699898 -4.19285965]
[9.66274357 -16.45865059]
[1.02848732 -28.72444153]
[-7.60576868 -40.99023056]
[-16.24002457 -53.25602341]
[-24.87428093 -65.52181244]
[-33.60004044 -77.72267914]
[-42.41682053 -89.85793304]
[-49.99334335 -94.96171570]
[-51.27311707 -102.24131775]
[-59.90737534 -114.50711060]
[-68.54163361 -126.77290344]
[-85.42481995 -134.12315369]
[-86.31568146 -151.64918518]
[-95.13246155 -163.78443909]
[-103.94924164 -175.91969299]
[-112.76602173 -188.05494690]
[-121.58280182 -200.19020081]
[-130.39958191 -212.32545471]
[-139.21635437 -224.46070862]
[-148.03314209 -236.59596252]
[-165.02439880 -243.69282532]
[-166.17733765 -261.20358276]
[-175.17466736 -273.20556641]
[-184.17199707 -285.20758057]
[-201.53115845 -287.36758423]
[-211.75627136 -301.14254761]
[-208.91246033 -317.71783447]
[-218.08831787 -329.58389282]
[-227.26419067 -341.44998169]
[-236.44004822 -353.31604004]
[-245.61592102 -365.18209839]
[-254.79177856 -377.04815674]
[-262.51757812 -381.92300415]
[-264.01455688 -389.16107178]
[-279.52731323 -388.79431152]
[-292.27377319 -397.64340210]
[-297.35272217 -412.30575562]
[-292.81115723 -427.14334106]
[-280.39544678 -436.45080566]
[-264.87963867 -436.64926147]
[-252.22990417 -427.66241455]
[-247.31031799 -412.94583130]
[-252.01255798 -398.15838623]
[-242.92570496 -386.22402954]
[-233.74984741 -374.35797119]
[-224.57398987 -362.49191284]
[-215.39811707 -350.62582397]
[-206.22225952 -338.75976562]
[-197.04638672 -326.89370728]
[-184.16181946 -327.06387329]
[-173.37086487 -319.67132568]
[-168.74002075 -307.23034668]
[-172.16998291 -294.20489502]
[-163.17266846 -282.20291138]
[-154.17533875 -270.20089722]
[-142.24871826 -268.17749023]
[-134.65473938 -258.25137329]
[-135.89788818 -245.41275024]
[-127.08110046 -233.27749634]
[-118.26432037 -221.14224243]
[-109.44754791 -209.00697327]
[-100.63076782 -196.87171936]
[-91.81398773 -184.73646545]
[-82.99720764 -172.60121155]
[-74.18042755 -160.46595764]
[-62.28541946 -158.26435852]
[-54.84077835 -148.22575378]
[-56.27584076 -135.40715027]
[-47.64158249 -123.14136505]
[-39.00732803 -110.87557220]
[-30.28156662 -98.67471313]
[-21.46478653 -86.53945923]
[-14.98953724 -82.97553253]
[-12.60848999 -74.15606689]
[-3.97423387 -61.89027786]
[4.66002226 -49.62448883]
[13.29427814 -37.35869598]
[21.92853355 -25.09290695]
[30.56278992 -12.82711601]
[39.19704437 -0.56132501]
[47.92280579 11.63953876]
[56.73958588 23.77479362]
[70.48009491 29.52350235]
[72.33202362 45.23594666]
[81.14880371 57.37120056]
[89.96558380 69.50645447]
[98.78236389 81.64170837]
[125.40473175 94.10225677]
[139.44825745 99.37287903]
[155.08714294 96.97798920]
[164.28416443 108.69396210]
[178.32769775 113.96458435]
[187.46250916 114.05017853]
[192.54089355 119.42051697]
[206.50399780 124.90063477]
[220.46710205 130.38075256]
[234.43020630 135.86087036]
[248.39331055 141.34097290]
[262.35641479 146.82109070]
[249.01968384 139.95587158]
[242.05690002 126.66979980]
[244.00114441 111.79634094]
[254.14509583 100.74643707]
[268.79837036 97.54003906]
[282.63015747 103.34363556]
[290.60845947 116.04587555]
[289.83096313 131.02511597]
[304.62832642 133.48239136]
[319.50958252 128.11032104]
[330.79739380 137.82806396]
[343.56484985 128.90449524]
[358.53646851 131.60729980]
[366.96505737 143.83410645]
[381.76239014 146.29136658]
[393.52218628 135.98400879]
[409.15716553 135.69882202]
[421.28500366 145.57048035]
[424.17929077 160.93788147]
[416.47344971 174.54501343]
[401.80593872 179.96699524]
[387.10229492 174.64375305]
[379.30514526 161.08872986]
[364.50778198 158.63146973]
[352.57977295 167.47782898]
[337.53811646 165.19659424]
[328.34011841 152.62541199]
[314.51727295 158.17323303]
[302.17105103 148.27973938]
[287.37368774 145.82247925]
[280.26565552 159.03140259]
[290.46826172 170.02719116]
[300.67083740 181.02296448]
[310.87344360 192.01873779]
[321.07601929 203.01452637]
[331.27862549 214.01029968]
[341.48120117 225.00607300]
[351.68380737 236.00186157]
[367.59735107 238.03617859]
[375.80532837 251.82054138]
[370.01126099 266.78076172]
[354.65988159 271.44064331]
[341.52743530 262.22552490]
[340.68801880 246.20445251]
[330.48544312 235.20866394]
[320.28283691 224.21289062]
[310.08026123 213.21711731]
[299.87765503 202.22132874]
[289.67507935 191.22555542]
[279.47247314 180.22978210]
[269.26989746 169.23399353]
[256.87631226 160.78419495]
[242.91320801 155.30409241]
[228.95008850 149.82397461]
[214.98698425 144.34385681]
[201.02388000 138.86373901]
[187.06077576 133.38362122]
[173.05706787 128.00810242]
[159.01354980 122.73748016]
[144.37913513 125.50936890]
[134.17762756 113.41640472]
[120.13410950 108.14578247]
[129.93157959 119.50401306]
[142.41232300 127.82453156]
[149.31893921 141.13989258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 35]
[9 34]
[10 33]
[11 32]
[14 29]
[15 28]
[17 26]
[18 25]
[36 132]
[37 131]
[38 130]
[39 129]
[41 127]
[42 126]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 117]
[52 116]
[54 115]
[55 114]
[56 113]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[67 100]
[68 99]
[69 98]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[79 88]
[133 206]
[134 205]
[136 203]
[137 202]
[139 201]
[140 200]
[141 199]
[142 198]
[143 197]
[144 196]
[152 174]
[153 173]
[155 171]
[158 168]
[159 167]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
