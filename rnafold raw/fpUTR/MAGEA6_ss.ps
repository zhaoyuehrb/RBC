%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUCGCCCUGAGCAACGAGCGACGGCCUGACGUCGGCGGAGGGAAGCCGGCCCAGGCUCGGUGAGGAGGCAAGUCCUGCAGCCUCAGCAUGCGCUGGCCGGAUGUACCCUGAGGUGCCCUCUCACUUCCUCCUUCAGGUUCUGAGGGGACAGGCUGACCUGGAGGACCAGAGGCCCCCGGAGGAGCACUGAAGGAGAAGAUCUGCCAGUGGGUCUCCAUUGCCCAGCUCCUGCCCACACUCCCGCCUGUUGC\
CCUGACCAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[111.01108551 498.97674561]
[110.49143982 483.98574829]
[109.97180176 468.99475098]
[109.45215607 454.00375366]
[108.93251038 439.01275635]
[108.41286469 424.02175903]
[105.05278778 417.46990967]
[107.97480011 408.85482788]
[97.05845642 398.78659058]
[96.49346924 383.58346558]
[107.12796021 372.20166016]
[99.09875488 359.65649414]
[106.51523590 345.68130493]
[98.48602295 333.13613892]
[105.90250397 319.16094971]
[105.55603790 304.16494751]
[105.20957184 289.16894531]
[104.86309814 274.17294312]
[104.51663208 259.17694092]
[104.17016602 244.18093872]
[96.14095306 231.63578796]
[103.55743408 217.66058350]
[103.21096802 202.66458130]
[89.07327271 197.65203857]
[79.35792542 209.08059692]
[69.64257812 220.50915527]
[59.92723465 231.93771362]
[61.45326996 247.66816711]
[51.34487152 259.81707764]
[35.59917831 261.17669678]
[23.55782318 250.94042969]
[22.36473465 235.18124390]
[32.72774887 223.24877930]
[48.49867249 222.22236633]
[58.21401596 210.79380798]
[67.92936707 199.36524963]
[77.64471436 187.93669128]
[83.06333923 173.94960022]
[83.58297729 158.95860291]
[84.10262299 143.96760559]
[84.62226868 128.97660828]
[85.14191437 113.98561859]
[76.03341675 102.06776428]
[61.43184662 98.63350677]
[46.83027649 95.19924164]
[32.22870636 91.76498413]
[18.82108498 104.01576996]
[0.89824498 105.72245026]
[-14.31167030 96.38734436]
[-20.78910446 79.92760468]
[-35.46610260 76.83152771]
[-50.14310455 73.73545074]
[-64.82009888 70.63937378]
[-79.49710083 67.54329681]
[-94.17410278 64.44721985]
[-103.17940521 65.73646545]
[-109.00228119 61.22969818]
[-123.64254761 57.96431351]
[-138.30142212 54.78353119]
[-152.97842407 51.68745422]
[-166.12049866 60.04947662]
[-180.96096802 56.70053482]
[-188.85188293 44.12003708]
[-203.95190430 48.84230042]
[-214.80810547 38.64463806]
[-229.48510742 35.54856110]
[-244.16209412 32.45248413]
[-258.83911133 29.35640717]
[-273.51611328 26.26033020]
[-286.65817261 34.62235260]
[-301.49862671 31.27341270]
[-309.38955688 18.69291306]
[-324.06655884 15.59683609]
[-338.74356079 12.50076008]
[-352.91580200 20.01920319]
[-367.57220459 13.49466991]
[-371.46963501 -2.06777573]
[-361.61828613 -14.72995758]
[-345.57531738 -14.77853298]
[-335.64749146 -2.17623949]
[-320.97048950 0.91983712]
[-306.29348755 4.01591349]
[-293.99337769 -4.30534124]
[-279.06472778 -1.37455893]
[-270.42001343 11.58333111]
[-255.74302673 14.67940807]
[-241.06602478 17.77548409]
[-226.38902283 20.87156105]
[-211.71202087 23.96763802]
[-197.66180420 19.02392197]
[-185.75581360 29.44303703]
[-173.45571899 21.12178230]
[-158.52703857 24.05256462]
[-149.88233948 37.01045609]
[-135.20533752 40.10653305]
[-128.03825378 38.41842270]
[-120.37715912 43.32405472]
[-105.73690033 46.58943939]
[-91.07802582 49.77022171]
[-76.40102386 52.86629868]
[-61.72402573 55.96237564]
[-47.04702759 59.05845261]
[-32.37002563 62.15452957]
[-17.69302750 65.25060272]
[-10.01993752 55.89620590]
[0.96115690 50.64787292]
[13.20366096 50.55146790]
[24.39700508 55.68628311]
[32.40272903 65.13854218]
[35.66296387 77.16341400]
[50.26453400 80.59767151]
[64.86610413 84.03192902]
[79.46767426 87.46619415]
[89.63696289 76.43959808]
[85.03466797 62.16308212]
[80.43238068 47.88656616]
[75.83009338 33.61005020]
[71.22780609 19.33353233]
[66.62551880 5.05701494]
[52.44787216 -1.92653298]
[47.44004822 -16.91643906]
[54.57310104 -31.01945686]
[69.61511230 -35.86851501]
[83.64192963 -28.58675766]
[88.33168793 -13.49431705]
[80.90203094 0.45472652]
[85.50432587 14.73124313]
[90.10661316 29.00776100]
[94.70890045 43.28427887]
[99.31118774 57.56079483]
[103.91347504 71.83731079]
[118.65807343 74.59355164]
[128.10685730 62.94363785]
[137.55563354 51.29372025]
[147.00440979 39.64380264]
[156.45318604 27.99388504]
[165.90196228 16.34396744]
[175.35075378 4.69405079]
[184.79953003 -6.95586681]
[194.24830627 -18.60578346]
[203.62965393 -30.31007385]
[212.94323730 -42.06834412]
[222.25683594 -53.82661438]
[231.57043457 -65.58488464]
[240.88403320 -77.34315491]
[236.86357117 -92.21400452]
[242.30683899 -106.43456268]
[254.93061829 -114.62627411]
[269.77963257 -113.82341766]
[279.09323120 -125.58168793]
[288.40682983 -137.33996582]
[289.15911865 -142.43222046]
[291.53424072 -146.35202026]
[294.82296753 -148.68052673]
[298.25244141 -149.33686829]
[307.96777344 -160.76542664]
[317.68313599 -172.19400024]
[327.39846802 -183.62255859]
[325.89764404 -194.34909058]
[330.43557739 -203.94177246]
[339.30645752 -209.35639954]
[349.47463989 -209.02151489]
[359.45138550 -220.22262573]
[369.42810059 -231.42373657]
[379.40484619 -242.62484741]
[382.19622803 -258.78466797]
[397.67807007 -264.19247437]
[409.92398071 -253.28514099]
[406.33642578 -237.28321838]
[390.60592651 -232.64811707]
[380.62921143 -221.44700623]
[370.65246582 -210.24589539]
[360.67575073 -199.04478455]
[358.11172485 -179.85832214]
[338.82705688 -173.90721130]
[329.11169434 -162.47865295]
[319.39636230 -151.05007935]
[309.68099976 -139.62152100]
[300.16510010 -128.02636719]
[290.85150146 -116.26809692]
[281.53790283 -104.50982666]
[285.71911621 -90.23903656]
[280.63522339 -76.07506561]
[268.03863525 -67.52058411]
[252.64230347 -68.02956390]
[243.32870483 -56.27128983]
[234.01510620 -44.51301956]
[224.70152283 -32.75474930]
[215.38792419 -20.99647713]
[213.70440674 -13.82831097]
[205.89822388 -9.15700531]
[196.44944763 2.49291253]
[187.00067139 14.14282990]
[177.55187988 25.79274750]
[168.10310364 37.44266510]
[158.65432739 49.09258270]
[149.20555115 60.74250031]
[139.75677490 72.39241791]
[130.30798340 84.04233551]
[125.82915497 86.57052612]
[121.32511902 89.05194092]
[116.79624939 91.48638153]
[131.12496948 95.92347717]
[146.59629822 92.61460876]
[156.46525574 103.77045441]
[170.79397583 108.20755005]
[185.12269592 112.64463806]
[203.00032043 108.16231537]
[214.38958740 121.53372192]
[228.76860046 125.80502319]
[243.14761353 130.07632446]
[257.52661133 134.34762573]
[271.90563965 138.61892700]
[286.28463745 142.89022827]
[302.09902954 138.55004883]
[313.57318115 150.26654053]
[308.90347290 165.98677063]
[292.89367676 169.53912354]
[282.01333618 157.26924133]
[267.63433838 152.99794006]
[253.25531006 148.72663879]
[238.87629700 144.45533752]
[224.49729919 140.18403625]
[210.11828613 135.91273499]
[199.36064148 141.39422607]
[187.36277771 137.98075867]
[180.68560791 126.97335815]
[166.35688782 122.53627014]
[152.02816772 118.09917450]
[137.58172607 121.72541046]
[126.68788147 110.25219727]
[112.35916138 105.81510162]
[100.13291168 114.50526428]
[99.61326599 129.49626160]
[99.09362030 144.48725891]
[98.57397461 159.47825623]
[98.05432892 174.46925354]
[101.58670807 159.89109802]
[111.74342346 148.85293579]
[125.97792053 144.12228394]
[140.72125244 146.88525391]
[152.27690125 156.44911194]
[157.74755859 170.41592407]
[155.76158142 185.28387451]
[146.81692505 197.32518005]
[133.15623474 203.52078247]
[118.20696259 202.31811523]
[118.55343628 217.31410217]
[126.60742188 230.93188477]
[119.16616058 243.83447266]
[119.51262665 258.83047485]
[119.85910034 273.82647705]
[120.20556641 288.82247925]
[120.55203247 303.81848145]
[120.89850616 318.81445312]
[128.95249939 332.43225098]
[121.51123047 345.33483887]
[129.56521606 358.95260620]
[122.12396240 371.85519409]
[133.27275085 382.73370361]
[133.41050720 397.94671631]
[122.97079468 408.50836182]
[123.40386200 423.50210571]
[123.92350769 438.49310303]
[124.44314575 453.48410034]
[124.96279144 468.47509766]
[125.48243713 483.46609497]
[126.00208282 498.45709229]
[135.14294434 512.07238770]
[127.68022156 526.67510986]
[111.29091644 527.24322510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 268]
[2 267]
[3 266]
[4 265]
[5 264]
[6 263]
[8 262]
[11 259]
[13 257]
[15 255]
[16 254]
[17 253]
[18 252]
[19 251]
[20 250]
[22 248]
[23 247]
[24 37]
[25 36]
[26 35]
[27 34]
[38 237]
[39 236]
[40 235]
[41 234]
[42 233]
[43 113]
[44 112]
[45 111]
[46 110]
[50 104]
[51 103]
[52 102]
[53 101]
[54 100]
[55 99]
[57 98]
[58 97]
[59 95]
[60 94]
[63 91]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[72 82]
[73 81]
[74 80]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[132 199]
[133 198]
[134 197]
[135 196]
[136 195]
[137 194]
[138 193]
[139 192]
[140 191]
[141 189]
[142 188]
[143 187]
[144 186]
[145 185]
[149 181]
[150 180]
[151 179]
[155 178]
[156 177]
[157 176]
[158 175]
[162 173]
[163 172]
[164 171]
[165 170]
[202 232]
[203 231]
[205 229]
[206 228]
[207 227]
[209 224]
[210 223]
[211 222]
[212 221]
[213 220]
[214 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
