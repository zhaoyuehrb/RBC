%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGGCUCGGGGCUCGGCUCUGGGAGAGCUCGGGCGGGAGCCCAGAGAGAGCCGCACGGGGACCUCAAGCCAGACCCCAGCGUUCAGCCGCCACCUCGGCCCGGGCCCGCCCCGCCCCGGCCCCGCCCCUUUCCUGCCCGCCCCACCCCCUCUACGCCCCUCCACCCGGACCCCGCCCCCUGGGCAGCCCCCCGCCCUCUCCGCCCGGGCUCCGCCCCCUCCCCCUGGCCCUCGCCACCGGUCCAGGGAGGGG\
ACGGCGGGACAGGCGGGACCAGUGGGACCGGCGGGAGGGCUGACAGGGCGGGGAC\
) } def
/len { sequence length } bind def

/coor [
[630.67987061 154.25877380]
[624.86242676 151.45690918]
[619.92541504 146.81431580]
[616.45440674 140.62370300]
[601.53869629 139.03567505]
[586.62298584 137.44766235]
[571.70727539 135.85964966]
[556.79162598 134.27162170]
[540.24621582 150.97967529]
[516.50128174 149.72767639]
[501.47479248 130.96038818]
[486.47650146 130.73310852]
[471.47824097 130.50584412]
[456.47994995 130.27856445]
[441.48165894 130.05128479]
[432.61441040 138.23086548]
[420.15063477 138.19563293]
[410.74392700 129.42092896]
[395.74871826 129.04216003]
[380.75350952 128.66339111]
[377.98565674 130.76762390]
[374.07748413 131.66345215]
[369.59545898 130.83648682]
[365.31155396 128.03910828]
[350.33471680 127.20615387]
[335.35784912 126.37319946]
[320.38101196 125.54025269]
[305.40414429 124.70729828]
[290.42727661 123.87434387]
[275.45043945 123.04138947]
[272.62008667 125.06079102]
[268.68658447 125.83778381]
[264.23168945 124.87539673]
[260.03448486 121.94949341]
[245.08976746 120.66312408]
[230.14501953 119.37675476]
[215.20028687 118.09038544]
[200.25553894 116.80401611]
[185.31080627 115.51764679]
[170.36605835 114.23127747]
[163.46881104 116.77485657]
[155.27711487 112.85568237]
[140.34613037 111.41841888]
[125.41514587 109.98114777]
[124.97019958 119.34967041]
[121.03414154 129.06161499]
[113.44852448 137.84130859]
[102.50694275 144.37434387]
[88.95703888 147.46243286]
[73.95111084 146.17436218]
[58.94834900 139.97608948]
[44.18211746 142.61396790]
[29.41588402 145.25184631]
[14.64965248 147.88970947]
[6.80106831 152.45736694]
[-0.27900884 150.47886658]
[-15.07113361 152.96745300]
[-23.14711189 162.98042297]
[-35.48149490 164.77210999]
[-45.41315079 157.92402649]
[-60.22966003 160.26306152]
[-75.04616547 162.60209656]
[-89.86267853 164.94113159]
[-93.84264374 168.15626526]
[-98.21842194 169.43099976]
[-102.19699097 168.93385315]
[-105.16294098 167.11947632]
[-120.04351807 169.00848389]
[-129.52316284 181.65411377]
[-145.17970276 183.81007385]
[-157.72439575 174.19726562]
[-159.71470642 158.51879883]
[-149.96980286 146.07644653]
[-134.27117920 144.25201416]
[-121.93253326 154.12791443]
[-107.05195618 152.23889160]
[-92.20171356 150.12461853]
[-77.38520050 147.78559875]
[-62.56869507 145.44656372]
[-47.75218582 143.10752869]
[-34.69007111 131.35482788]
[-17.55971527 138.17532349]
[-2.76759100 135.68675232]
[12.01177597 133.12348938]
[26.77800751 130.48561096]
[41.54423904 127.84773254]
[56.31047058 125.20985413]
[57.67235947 110.27114105]
[59.03414536 95.33374786]
[44.98834229 90.06920624]
[30.94253731 84.80466461]
[16.89673424 79.54012299]
[2.61567354 86.30967712]
[-12.24107265 80.91963196]
[-18.85926056 66.56779480]
[-13.31243801 51.76886749]
[1.10856438 45.30278397]
[15.84802246 51.00576019]
[22.16127586 65.49432373]
[36.20708084 70.75886536]
[50.25288391 76.02340698]
[64.29868317 81.28794861]
[68.05961609 74.79907990]
[75.58147430 61.82134247]
[79.34240723 55.33247757]
[67.79243469 45.76177979]
[56.24246979 36.19108200]
[44.69250107 26.62038612]
[29.34309196 29.60863495]
[15.68907642 21.98617744]
[10.17746353 7.35210323]
[15.41066837 -7.38382530]
[28.91773224 -15.26375294]
[44.32102966 -12.56701851]
[54.34759903 -0.56693774]
[54.26319885 15.07041740]
[65.81316376 24.64111519]
[77.36313629 34.21181107]
[88.91310120 43.78250885]
[123.77733612 65.01221466]
[126.85240936 95.05016327]
[141.78340149 96.48743439]
[156.71437073 97.92469788]
[171.65243530 99.28653717]
[186.59716797 100.57290649]
[201.54191589 101.85927582]
[216.48664856 103.14564514]
[231.43139648 104.43201447]
[246.37612915 105.71838379]
[261.32086182 107.00475311]
[276.28338623 108.06453705]
[291.26025391 108.89749146]
[306.23709106 109.73043823]
[321.21395874 110.56339264]
[336.19079590 111.39634705]
[351.16766357 112.22930145]
[366.14453125 113.06224823]
[381.13226318 113.66818237]
[396.12750244 114.04695129]
[411.12271118 114.42572021]
[427.12069702 105.25875854]
[441.70895386 115.05300903]
[456.70721436 115.28028107]
[471.70550537 115.50756073]
[486.70379639 115.73484039]
[501.70205688 115.96211243]
[504.27215576 109.82825470]
[508.14019775 104.44062805]
[513.10302734 100.06824493]
[518.90313721 96.92715454]
[525.24188232 95.16981506]
[531.79504395 94.87765503]
[538.22924805 96.05740356]
[544.21905518 98.64110565]
[549.46337891 102.48999786]
[553.70056152 107.40196228]
[556.72137451 113.12208557]
[558.37963867 119.35592651]
[573.29528809 120.94393921]
[588.21099854 122.53195953]
[603.12670898 124.11997986]
[618.04241943 125.70799255]
[630.32727051 117.10089874]
[633.92834473 102.53956604]
[637.52941895 87.97823334]
[632.46173096 72.38172913]
[643.63446045 60.37747574]
[659.55401611 64.31442261]
[663.84375000 80.14257050]
[652.09069824 91.57928467]
[648.48968506 106.14061737]
[644.88861084 120.70195007]
[653.24578857 133.15818787]
[668.08514404 135.34744263]
[682.92456055 137.53668213]
[697.76391602 139.72593689]
[712.60333252 141.91517639]
[727.44268799 144.10443115]
[742.28204346 146.29367065]
[757.12145996 148.48292542]
[763.31884766 146.43389893]
[768.81201172 147.60934448]
[772.23730469 150.86920166]
[787.02941895 153.35778809]
[797.93719482 146.53858948]
[810.17883301 148.88150024]
[817.32299805 158.60235596]
[832.08923340 161.24023438]
[846.85546875 163.87811279]
[861.62170410 166.51599121]
[876.38793945 169.15386963]
[891.15411377 171.79173279]
[905.93353271 174.35499573]
[920.72564697 176.84358215]
[935.51776123 179.33216858]
[950.30987549 181.82075500]
[965.10198975 184.30932617]
[979.89410400 186.79791260]
[994.72229004 189.06208801]
[1009.58300781 191.10131836]
[1024.44372559 193.14054871]
[1039.35949707 194.72857666]
[1054.31640625 195.86390686]
[1069.27343750 196.99925232]
[1084.23034668 198.13459778]
[1099.18737793 199.26994324]
[1114.14428711 200.40527344]
[1124.38793945 192.62393188]
[1136.79174805 193.84576416]
[1144.78894043 202.87786865]
[1155.11059570 195.20037842]
[1167.50146484 196.54745483]
[1175.40698242 205.65986633]
[1190.33801270 207.09713745]
[1205.26892090 208.53440857]
[1220.19995117 209.97167969]
[1235.13085938 211.40893555]
[1250.06188965 212.84620667]
[1262.18774414 203.06854248]
[1277.30932617 204.73883057]
[1286.55615234 216.35917664]
[1301.48718262 217.79644775]
[1316.41809082 219.23370361]
[1331.34912109 220.67097473]
[1346.28710938 222.03280640]
[1361.23193359 223.31918335]
[1376.17663574 224.60554504]
[1391.12133789 225.89192200]
[1406.06616211 227.17828369]
[1421.01086426 228.46466064]
[1435.42370605 221.93934631]
[1447.44055176 230.73960876]
[1462.38525391 232.02597046]
[1472.44689941 220.21305847]
[1487.53808594 216.60295105]
[1501.85620117 222.58383179]
[1509.89562988 235.85592651]
[1508.56494141 251.31584167]
[1498.37585449 263.01892090]
[1483.24621582 266.46508789]
[1468.99389648 260.32922363]
[1461.09887695 246.97071838]
[1446.15417480 245.68434143]
[1432.81030273 252.30166626]
[1419.72448730 243.40940857]
[1404.77978516 242.12303162]
[1389.83496094 240.83665466]
[1374.89025879 239.55029297]
[1359.94555664 238.26391602]
[1345.00073242 236.97755432]
[1338.10351562 239.52113342]
[1329.91186523 235.60195923]
[1314.98083496 234.16468811]
[1300.04980469 232.72741699]
[1285.11889648 231.29016113]
[1273.82519531 240.93327332]
[1258.66259766 239.68836975]
[1248.62463379 227.77719116]
[1233.69360352 226.33992004]
[1218.76269531 224.90266418]
[1203.83166504 223.46539307]
[1188.90075684 222.02812195]
[1173.96972656 220.59085083]
[1158.38537598 228.70703125]
[1143.50256348 217.82260132]
[1128.00097656 226.09577942]
[1113.00891113 215.36224365]
[1098.05200195 214.22691345]
[1083.09497070 213.09156799]
[1068.13806152 211.95622253]
[1053.18103027 210.82087708]
[1038.22412109 209.68554688]
[1047.42773438 221.53012085]
[1045.65332031 236.42480469]
[1033.92492676 245.77587891]
[1019.00915527 244.18804932]
[1009.51208496 232.57746887]
[1010.91314697 217.64305115]
[1022.40447998 208.00129700]
[1007.54376221 205.96205139]
[992.68304443 203.92282104]
[989.69891357 205.70713806]
[985.71551514 206.16407776]
[981.35284424 204.84519958]
[977.40557861 201.59004211]
[962.61340332 199.10145569]
[947.82128906 196.61286926]
[933.02917480 194.12428284]
[918.23706055 191.63571167]
[903.44494629 189.14712524]
[896.36486816 191.12562561]
[888.51629639 186.55796814]
[873.75006104 183.92008972]
[858.98382568 181.28221130]
[844.21759033 178.64434814]
[829.45135498 176.00646973]
[814.68511963 173.36859131]
[798.49639893 180.20022583]
[784.54083252 168.14991760]
[769.74871826 165.66133118]
[754.93218994 163.32229614]
[740.09283447 161.13305664]
[725.25341797 158.94380188]
[710.41406250 156.75456238]
[695.57470703 154.56530762]
[680.73529053 152.37606812]
[665.89593506 150.18681335]
[651.05651855 147.99757385]
[647.38793945 151.65843201]
[642.49462891 154.17015076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[11 146]
[12 145]
[13 144]
[14 143]
[15 142]
[18 140]
[19 139]
[20 138]
[24 137]
[25 136]
[26 135]
[27 134]
[28 133]
[29 132]
[30 131]
[34 130]
[35 129]
[36 128]
[37 127]
[38 126]
[39 125]
[40 124]
[42 123]
[43 122]
[44 121]
[51 87]
[52 86]
[53 85]
[54 84]
[56 83]
[57 82]
[60 80]
[61 79]
[62 78]
[63 77]
[67 76]
[68 75]
[89 102]
[90 101]
[91 100]
[92 99]
[105 119]
[106 118]
[107 117]
[108 116]
[163 172]
[164 171]
[165 170]
[173 308]
[174 307]
[175 306]
[176 305]
[177 304]
[178 303]
[179 302]
[180 301]
[183 300]
[184 299]
[187 297]
[188 296]
[189 295]
[190 294]
[191 293]
[192 292]
[193 290]
[194 289]
[195 288]
[196 287]
[197 286]
[198 285]
[199 281]
[200 280]
[201 279]
[202 272]
[203 271]
[204 270]
[205 269]
[206 268]
[207 267]
[210 265]
[213 263]
[214 262]
[215 261]
[216 260]
[217 259]
[218 258]
[221 255]
[222 254]
[223 253]
[224 252]
[225 250]
[226 249]
[227 248]
[228 247]
[229 246]
[230 245]
[232 243]
[233 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
