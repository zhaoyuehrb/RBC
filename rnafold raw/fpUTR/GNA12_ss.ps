%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGACGAGUGCGGGCCUCGGAGCGACUGCAGCGGCGGCGGCGGACGCGGCCUGAGGCGAGCGGCGGGGCGUGGGGCGGUGCCUCGGCCCGGGCUCGCCCUCGCCGGCGGGAGCGUCCAUGGCCCCCGGGCGCCGGCGGGGCGCGGCCGCGGCCUGAGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[84.62625885 133.60377502]
[79.05132294 147.52929688]
[73.47638702 161.45481873]
[67.90145111 175.38034058]
[72.25634003 187.55256653]
[67.29201508 199.05323792]
[56.18234253 203.91015625]
[50.34329224 217.72702026]
[52.90351486 233.92507935]
[39.98720932 244.02958679]
[24.88156700 237.64588928]
[23.12597656 221.34098816]
[36.52643967 211.88796997]
[42.36548996 198.07110596]
[39.24631500 180.82118225]
[53.97593307 169.80540466]
[59.55086899 155.87988281]
[65.12580872 141.95436096]
[70.70074463 128.02883911]
[65.62943268 122.50328064]
[54.57815933 132.64573669]
[44.43587494 121.59430695]
[55.48680878 111.45216370]
[50.41549683 105.92660522]
[36.06398392 110.28941345]
[28.58089828 123.95108795]
[13.96427441 128.17115784]
[0.98607790 120.95298004]
[-13.36543369 125.31578827]
[-27.71694565 129.67860413]
[-42.06845856 134.04141235]
[-52.87042618 146.38035583]
[-68.90250397 142.93005371]
[-73.67225647 127.23988342]
[-62.27297974 115.45054626]
[-46.43126678 119.68989563]
[-32.07975388 115.32708740]
[-17.72824478 110.96427917]
[-3.37673211 106.60147095]
[3.38831520 93.38141632]
[17.88063812 88.75246429]
[31.70117569 95.93790436]
[46.05268478 91.57509613]
[54.75354004 79.35645294]
[54.18247986 64.36733246]
[53.61141968 49.37820435]
[53.04035950 34.38908005]
[52.46929932 19.39995384]
[51.89823532 4.41082764]
[42.96895981 -4.93776321]
[42.82635117 -17.46331978]
[51.00004959 -26.41905594]
[50.71446609 -41.41633606]
[50.42888641 -56.41362000]
[50.14330292 -71.41089630]
[40.26575851 -86.92680359]
[49.28813934 -101.95629883]
[48.71707916 -116.94542694]
[48.14601898 -131.93455505]
[47.57495880 -146.92367554]
[47.00389862 -161.91279602]
[46.43283844 -176.90193176]
[42.96586227 -185.40301514]
[45.99634171 -192.18128967]
[45.71075821 -207.17857361]
[45.42517471 -222.17585754]
[45.13959503 -237.17314148]
[44.85401154 -252.17041016]
[44.56843185 -267.16769409]
[41.26393509 -275.73324585]
[44.42291260 -282.45260620]
[36.68561554 -296.25277710]
[44.42291260 -308.98004150]
[44.42291260 -323.98004150]
[44.42291260 -338.98004150]
[44.42291260 -353.98004150]
[36.68561554 -367.78021240]
[44.42291260 -380.50747681]
[44.42291260 -395.50747681]
[44.42291260 -410.50747681]
[35.75921249 -424.43130493]
[43.72333908 -438.76672363]
[60.12248611 -438.76672363]
[68.08661652 -424.43130493]
[59.42291260 -410.50747681]
[59.42291260 -395.50747681]
[59.42291260 -380.50747681]
[67.16021729 -367.78021240]
[59.42291260 -353.98004150]
[59.42291260 -338.98004150]
[59.42291260 -323.98004150]
[59.42291260 -308.98004150]
[67.16021729 -296.25277710]
[59.42291260 -282.45260620]
[59.56571198 -267.45327759]
[59.85129166 -252.45599365]
[60.13687515 -237.45870972]
[60.42245865 -222.46144104]
[60.70803833 -207.46415710]
[60.99362183 -192.46687317]
[61.42196274 -177.47299194]
[61.99302292 -162.48387146]
[62.56408310 -147.49473572]
[63.13514328 -132.50561523]
[63.70620346 -117.51648712]
[64.27726746 -102.52735901]
[72.94890594 -94.05285645]
[73.52159882 -81.53958893]
[65.14058685 -71.69647980]
[65.42616272 -56.69919968]
[65.71174622 -41.70191956]
[65.99732971 -26.70463753]
[75.86301422 -12.21473122]
[66.88735962 3.83976698]
[67.45841980 18.82889175]
[68.02948761 33.81801987]
[68.60054779 48.80714417]
[69.17160797 63.79626846]
[69.74266815 78.78539276]
[100.67635345 67.49082184]
[123.64134979 84.85043335]
[121.68003845 109.42855072]
[132.82720947 119.46550751]
[143.97438049 129.50247192]
[155.12155151 139.53942871]
[166.26872253 149.57638550]
[177.41589355 159.61334229]
[188.65811157 169.54373169]
[199.99435425 179.36663818]
[211.33061218 189.18954468]
[222.66685486 199.01246643]
[234.00309753 208.83537292]
[249.55136108 207.89247131]
[260.90798950 218.01577759]
[261.71109009 232.84449768]
[273.04733276 242.66740417]
[284.38357544 252.49031067]
[295.71981812 262.31323242]
[311.21615601 265.50296021]
[315.76791382 279.68499756]
[331.96435547 282.25558472]
[337.58294678 297.66217041]
[326.84381104 310.05581665]
[310.79440308 306.68698120]
[305.94500732 291.02124023]
[291.25952148 288.53411865]
[285.89691162 273.64947510]
[274.56066895 263.82656860]
[263.22442627 254.00364685]
[251.88818359 244.18074036]
[237.09611511 245.49615479]
[225.45962524 235.69581604]
[224.18017578 220.17161560]
[212.84393311 210.34870911]
[201.50769043 200.52578735]
[190.17144775 190.70288086]
[178.83520508 180.87997437]
[171.68836975 178.86712646]
[167.37893677 170.76051331]
[156.23176575 160.72355652]
[145.08459473 150.68659973]
[133.93742371 140.64964294]
[122.79025269 130.61268616]
[111.64308167 120.57572174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[7 14]
[8 13]
[24 43]
[25 42]
[28 39]
[29 38]
[30 37]
[31 36]
[44 119]
[45 118]
[46 117]
[47 116]
[48 115]
[49 114]
[52 112]
[53 111]
[54 110]
[55 109]
[57 106]
[58 105]
[59 104]
[60 103]
[61 102]
[62 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[71 94]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[80 85]
[122 164]
[123 163]
[124 162]
[125 161]
[126 160]
[127 159]
[128 157]
[129 156]
[130 155]
[131 154]
[132 153]
[135 150]
[136 149]
[137 148]
[138 147]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
