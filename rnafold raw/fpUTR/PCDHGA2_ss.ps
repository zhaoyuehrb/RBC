%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCAGCAAUACGGCUCCCACAGCACAAGGGGGUGGAGGUUUGGCCCUAAAGCUUCAGGACACCAAAGAAAUUCAGUCGAACAGCCCACCAGUUCUCUCCAUAGGGACCUGGGUCCCGUGAAUGCUGGUUAUCUCACACCCUGAGGAAUAAAGAUUGGAAUCCGCACUGGAUGCUGGAAGUUGACUCGGAGAAAAUUGCGACAGGAGGGAA\
) } def
/len { sequence length } bind def

/coor [
[289.98745728 233.46095276]
[277.60400391 224.81977844]
[270.17016602 211.60519409]
[269.20712280 196.41197205]
[255.33837891 190.69728088]
[241.46961975 184.98258972]
[227.60087585 179.26789856]
[213.73211670 173.55320740]
[199.86335754 167.83851624]
[182.61842346 171.09455872]
[171.50454712 156.41160583]
[157.55300903 150.90208435]
[143.60148621 145.39256287]
[129.64994812 139.88302612]
[115.69842529 134.37350464]
[101.08870697 137.77291870]
[91.00251770 148.87556458]
[80.91633606 159.97822571]
[70.83014679 171.08087158]
[60.74396515 182.18353271]
[64.84107971 197.05690002]
[60.22483444 211.77742004]
[48.36825180 221.64782715]
[33.05472565 223.51850891]
[19.17074776 216.79254150]
[11.14664268 203.61614990]
[11.54287434 188.19387817]
[20.23300743 175.44691467]
[34.44404984 169.44276428]
[49.64131165 172.09733582]
[59.72749710 160.99468994]
[69.81368256 149.89204407]
[79.89986420 138.78938293]
[89.98605347 127.68673706]
[78.36014557 116.26265717]
[75.35552979 101.60888672]
[60.79753113 97.99436951]
[47.36722946 105.88516998]
[32.65484238 102.01215363]
[25.21493530 89.15979004]
[10.65693760 85.54527283]
[-3.90105963 81.93075562]
[-18.45905685 78.31623840]
[-33.01705551 74.70172882]
[-47.57505035 71.08721161]
[-62.13304901 67.47269440]
[-70.63207245 80.00233459]
[-82.88208771 88.85157776]
[-97.39329529 92.96802521]
[-112.40901184 91.87341309]
[-126.11835480 85.71910858]
[-136.87458801 75.26549530]
[-143.39294434 61.78810501]
[-144.90409851 46.92197800]
[-159.46209717 43.30746460]
[-174.02009583 39.69294739]
[-187.45039368 47.58374786]
[-202.16278076 43.71073151]
[-209.60269165 30.85836220]
[-225.20387268 35.91158676]
[-237.19779968 24.72775841]
[-233.24612427 8.81184292]
[-217.41401672 4.53676891]
[-205.98817444 16.30036545]
[-193.40078735 8.42045307]
[-178.58541870 11.87870216]
[-170.40557861 25.13495064]
[-155.84757996 28.74946594]
[-141.28958130 32.36398315]
[-133.00053406 19.93108940]
[-120.93531036 11.06770420]
[-106.53869629 6.85913754]
[-91.54285431 7.83186150]
[-77.75893402 13.88773441]
[-66.85832977 24.31352234]
[-60.17001343 37.86484909]
[-58.51853180 52.91469574]
[-43.96053696 56.52921295]
[-29.40253830 60.14373016]
[-14.84454155 63.75824356]
[-0.28654408 67.37275696]
[14.27145290 70.98727417]
[28.82945061 74.60179138]
[41.41684723 66.72187805]
[56.23221588 70.18013000]
[64.41204834 83.43637848]
[78.97004700 87.05088806]
[81.75423431 83.35576630]
[85.17874908 80.24477386]
[89.12341309 77.82707977]
[86.91903687 62.98994064]
[84.71466064 48.15280151]
[82.51028442 33.31566238]
[72.82893372 20.80238342]
[78.61185455 7.07623482]
[76.40747070 -7.76090527]
[74.20309448 -22.59804535]
[71.99871826 -37.43518448]
[69.79434204 -52.27232361]
[59.17848587 -64.77175140]
[64.94943237 -80.12193298]
[81.17053223 -82.53192902]
[91.15489960 -69.52253723]
[84.63148499 -54.47670364]
[86.83586121 -39.63956070]
[89.04023743 -24.80242157]
[91.24461365 -9.96528149]
[93.44898987 4.87185812]
[102.97266388 16.32388496]
[97.34741974 31.11128616]
[99.55179596 45.94842529]
[101.75617218 60.78556442]
[103.96054840 75.62270355]
[116.77566528 80.28914642]
[125.68160248 91.44355774]
[127.55950165 106.23397064]
[121.20794678 120.42198181]
[135.15948486 125.93150330]
[149.11100769 131.44102478]
[163.06253052 136.95054626]
[177.01406860 142.46006775]
[189.13478088 138.05264282]
[200.64103699 142.92761230]
[205.57804871 153.96977234]
[219.44680786 159.68446350]
[233.31556702 165.39915466]
[247.18431091 171.11384583]
[261.05307007 176.82853699]
[274.92181396 182.54322815]
[286.30883789 172.43891907]
[300.89431763 168.29750061]
[315.77062988 170.88887024]
[327.99636841 179.64627075]
[335.17782593 192.78918457]
[335.93759155 207.68508911]
[349.80633545 213.39978027]
[358.93145752 213.77558899]
[363.83648682 219.30239868]
[378.36505127 213.68463135]
[392.25860596 219.88328552]
[397.52474976 233.76864624]
[411.30770874 239.68727112]
[425.09066772 245.60588074]
[438.87362671 251.52450562]
[457.10531616 248.93354797]
[467.05035400 263.39334106]
[482.75750732 261.49716187]
[491.57717896 273.49975586]
[505.44595337 279.21444702]
[519.31469727 284.92913818]
[529.93774414 275.83023071]
[543.38055420 272.21298218]
[557.00512695 274.72811890]
[568.16326904 282.82888794]
[574.71118164 294.88836670]
[575.42120361 308.52621460]
[589.20416260 314.44482422]
[604.93756104 312.78051758]
[613.57928467 324.91189575]
[627.36224365 330.83050537]
[643.09564209 329.16616821]
[651.73736572 341.29754639]
[665.52032471 347.21618652]
[681.25372314 345.55184937]
[689.89538574 357.68322754]
[703.67834473 363.60183716]
[721.91003418 361.01089478]
[731.85510254 375.47070312]
[745.72381592 381.18539429]
[759.59259033 386.90008545]
[773.46136475 392.61477661]
[790.40948486 393.05880737]
[794.67449951 409.46752930]
[780.08770752 418.10824585]
[767.74664307 406.48352051]
[753.87792969 400.76882935]
[740.00915527 395.05413818]
[726.14038086 389.33944702]
[714.85742188 393.69805908]
[703.25689697 389.05175781]
[697.75976562 377.38479614]
[683.97680664 371.46618652]
[669.22924805 373.55386353]
[659.60168457 360.99914551]
[645.81872559 355.08050537]
[631.07116699 357.16818237]
[621.44360352 344.61346436]
[607.66064453 338.69485474]
[592.91308594 340.78250122]
[583.28552246 328.22778320]
[569.50256348 322.30917358]
[556.79650879 332.29367065]
[540.69616699 334.52041626]
[525.58343506 328.28771973]
[515.61968994 315.20938110]
[513.59997559 298.79791260]
[499.73126221 293.08322144]
[485.86248779 287.36853027]
[471.14730835 289.67346191]
[461.33566284 277.26211548]
[450.05267334 281.62072754]
[438.45217896 276.97442627]
[432.95501709 265.30746460]
[419.17205811 259.38885498]
[405.38909912 253.47023010]
[391.60614014 247.55160522]
[377.91119385 253.29478455]
[363.84899902 247.48881531]
[357.91787720 233.08535767]
[344.09164429 227.26853943]
[330.22290039 221.55384827]
[319.18960571 231.59036255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 129]
[5 128]
[6 127]
[7 126]
[8 125]
[9 124]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[36 87]
[37 86]
[40 83]
[41 82]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[54 69]
[55 68]
[56 67]
[59 64]
[90 113]
[91 112]
[92 111]
[93 110]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[135 211]
[136 210]
[138 209]
[141 206]
[142 205]
[143 204]
[144 203]
[146 200]
[148 198]
[149 197]
[150 196]
[156 191]
[157 190]
[159 188]
[160 187]
[162 185]
[163 184]
[165 182]
[166 181]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
