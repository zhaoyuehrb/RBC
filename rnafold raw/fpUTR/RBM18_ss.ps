%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGCCAGGAGGCGGCGCAGGCUUAACGCGUCACGGGCGGCCUGGCAGCUGGCGGCAUUGAGGCGGACGCGUCUAGAGGUCCGUCUGACCGCGGCGUCGGGACCUGGUUUCCGGGCAUGAGCUGAGAGCACCACGCCGAGGCCACGAGUAUUUCAUAGACAUUG\
) } def
/len { sequence length } bind def

/coor [
[77.56958771 121.55266571]
[89.26371765 112.15969086]
[75.26169586 117.53959656]
[61.25967789 122.91950989]
[51.15272522 135.09161377]
[36.49715805 132.43385315]
[22.49513817 137.81376648]
[8.49311733 143.19367981]
[1.56875539 149.21818542]
[-5.82322788 148.54037476]
[-12.57346153 162.57861328]
[-26.94649315 167.56565857]
[-40.28820801 161.04382324]
[-54.38895035 166.15939331]
[-68.48969269 171.27496338]
[-78.82382965 183.25479126]
[-93.42680359 180.32182312]
[-107.52754974 185.43739319]
[-114.56401062 191.33058167]
[-121.94194031 190.51383972]
[-136.13641357 195.36325073]
[-150.33088684 200.21267700]
[-164.52536011 205.06208801]
[-178.71984863 209.91149902]
[-181.51361084 213.36216736]
[-184.92582703 215.50283813]
[-188.45983887 216.30090332]
[-191.66078186 215.89137268]
[-194.16749573 214.54795837]
[-208.68637085 218.31655884]
[-223.20524597 222.08515930]
[-229.76103210 236.28218079]
[-243.93067932 242.89695740]
[-259.02371216 238.80618286]
[-267.91366577 225.94139099]
[-266.40295410 210.37693787]
[-255.20492554 199.46191406]
[-239.60691833 198.35002136]
[-226.97384644 207.56628418]
[-212.45497131 203.79768372]
[-197.93609619 200.02908325]
[-183.56925964 195.71702576]
[-169.37478638 190.86761475]
[-155.18031311 186.01818848]
[-140.98582458 181.16877747]
[-126.79135132 176.31936646]
[-112.64311981 171.33665466]
[-98.54237366 166.22108459]
[-89.21681976 154.60714722]
[-73.60526276 157.17420959]
[-59.50452042 152.05865479]
[-45.40377426 146.94308472]
[-39.34722519 133.38380432]
[-25.11993980 127.99502563]
[-10.93879604 134.43963623]
[3.11320758 129.19165039]
[17.11522865 123.81174469]
[31.11724854 118.43183899]
[40.22268295 106.64454651]
[55.87976837 108.91748810]
[69.88179016 103.53758240]
[83.88381195 98.15766907]
[90.42835999 84.66067505]
[85.98136139 70.33502960]
[81.53436279 56.00938034]
[77.08735657 41.68373108]
[72.64035797 27.35808372]
[68.19335938 13.03243637]
[63.74635696 -1.29321134]
[59.29935455 -15.61885929]
[44.30193329 -18.93139839]
[32.98089218 -29.31068420]
[28.38153839 -43.96474457]
[31.74106979 -58.95170975]
[42.15579224 -70.24015808]
[56.82419586 -74.79356384]
[71.80056000 -71.38706970]
[83.05630493 -60.93701553]
[87.56370544 -46.25440979]
[84.11029053 -31.28879929]
[73.62500763 -20.06586075]
[78.07200623 -5.74021196]
[82.51900482 8.58543587]
[86.96600342 22.91108322]
[91.41300964 37.23673248]
[95.86000824 51.56237793]
[100.30700684 65.88802338]
[104.75401306 80.21367645]
[107.73198700 85.80815125]
[108.26538849 91.33702087]
[123.02648163 88.67057037]
[137.76185608 85.86539459]
[152.47018433 82.92174530]
[164.48361206 72.62670135]
[178.48179626 77.71591187]
[193.19012451 74.77226257]
[207.89845276 71.82861328]
[219.91189575 61.53356934]
[233.91007996 66.62277985]
[248.61840820 63.67912674]
[263.32675171 60.73547745]
[278.03506470 57.79182434]
[282.60092163 46.75976562]
[291.84353638 39.39273453]
[303.37905884 37.44209290]
[314.30331421 41.28098679]
[321.92288208 49.83964920]
[336.73153687 47.45133591]
[351.54019165 45.06302261]
[366.34881592 42.67470932]
[381.13433838 40.14721298]
[395.89544678 37.48075867]
[410.65655518 34.81430435]
[419.67568970 22.11420441]
[434.68353271 19.62031746]
[446.73556519 28.29697037]
[461.49667358 25.63051796]
[476.25775146 22.96406364]
[488.41970825 11.96320057]
[503.94256592 17.25216866]
[506.85772705 33.39012909]
[494.16635132 43.77573395]
[478.92422485 37.72516251]
[464.16311646 40.39161682]
[449.40200806 43.05806732]
[441.14733887 55.40293884]
[426.21545410 58.31737900]
[413.32299805 49.57540512]
[398.56188965 52.24185562]
[383.80081177 54.90830994]
[377.75152588 59.21029663]
[368.73712158 57.48335266]
[353.92849731 59.87166595]
[339.11984253 62.25997925]
[324.31118774 64.64829254]
[314.54681396 80.09614563]
[296.28735352 83.60387421]
[280.97872925 72.50015259]
[266.27038574 75.44380188]
[251.56205750 78.38745117]
[236.85372925 81.33110809]
[225.89233398 91.41559601]
[210.84210205 86.53694153]
[196.13377380 89.48059082]
[181.42544556 92.42424011]
[170.46405029 102.50872803]
[155.41383362 97.63007355]
[140.70550537 100.57372284]
[134.73822021 104.98873901]
[125.69293976 103.43167114]
[110.93183899 106.09812164]
[125.80299377 108.05993652]
[139.28848267 114.62816620]
[150.00144958 125.12732697]
[156.84016418 138.47767639]
[159.10131836 153.30627441]
[156.55239868 168.08811951]
[149.45550537 181.30303955]
[138.54051208 191.59202576]
[124.92992401 197.89691162]
[110.02344513 199.56933594]
[95.35408020 196.43728638]
[82.43043518 188.82287598]
[72.58158112 177.50917053]
[66.82038116 163.65966797]
[65.73931885 148.69866943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[6 58]
[7 57]
[8 56]
[10 55]
[13 52]
[14 51]
[15 50]
[17 48]
[18 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[29 41]
[30 40]
[31 39]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
[90 151]
[91 150]
[92 148]
[93 147]
[95 145]
[96 144]
[97 143]
[99 141]
[100 140]
[101 139]
[102 138]
[107 135]
[108 134]
[109 133]
[110 132]
[111 130]
[112 129]
[113 128]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
