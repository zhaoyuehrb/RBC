%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUCACACAACAACUCUUCCCCGCUGAGAGGAGACAGCCAGUGCGACUCCACCCUCCAGCUCGACGGCAGCCGCCCCGGCCGACAGCCCCGAGACGACAGCCCGGCGCGUCCCGGUCCCCACCUCCGACCACCGCCAGCGCUCCAGGCCCCGCCGCUCCCCGCUCGCCGCCACCGCGCCCUCCGCUCCGCCCGCAGUGCCAACC\
) } def
/len { sequence length } bind def

/coor [
[117.93121338 254.53268433]
[113.23956299 268.78009033]
[105.63481903 281.70941162]
[95.46252441 292.73324585]
[83.18486786 301.35061646]
[69.35972595 307.17001343]
[54.61527252 309.92703247]
[39.62145615 309.49636841]
[25.05955696 305.89758301]
[11.59122849 299.29425049]
[-0.17156324 289.98635864]
[-9.69434834 278.39685059]
[-16.54443741 265.05233765]
[-20.41057968 250.55914307]
[-21.11710739 235.57579041]
[-18.63191986 220.78309631]
[-13.06793499 206.85319519]
[-4.67796707 194.41902161]
[6.15676641 184.04557800]
[18.94396400 176.20417786]
[33.10289001 171.25105286]
[44.07395935 161.02189636]
[55.04502869 150.79273987]
[66.01609802 140.56358337]
[76.98716736 130.33442688]
[62.45503235 134.05154419]
[47.92289352 137.76866150]
[33.39075470 141.48577881]
[25.84943008 146.64572144]
[18.60985756 145.14726257]
[4.02298164 148.64340210]
[-10.56389427 152.13954163]
[-25.15077019 155.63569641]
[-39.13380814 170.15307617]
[-57.41617203 163.86245728]
[-71.89022827 167.79968262]
[-80.29840851 183.13816833]
[-96.87170410 187.56431580]
[-111.23067474 178.81153870]
[-125.64331055 182.96797180]
[-136.62121582 195.15066528]
[-152.60212708 191.47067261]
[-157.14627075 175.71368408]
[-145.57901001 164.08912659]
[-129.79974365 168.55534363]
[-115.38711548 164.39891052]
[-110.79566193 152.35751343]
[-99.94461823 145.05099487]
[-86.67132568 145.33338928]
[-75.82746124 153.32562256]
[-61.35340500 149.38839722]
[-57.09408951 140.09594727]
[-48.23616791 134.56724548]
[-37.57817459 134.83372498]
[-28.64691734 141.04881287]
[-14.06004047 137.55267334]
[0.52683550 134.05651855]
[15.11371231 130.56037903]
[29.67363930 126.95364380]
[44.20577621 123.23652649]
[58.73791504 119.51940918]
[73.27005005 115.80229187]
[70.46113586 102.44136810]
[73.67235565 89.81912994]
[81.71444702 80.38594055]
[92.51921082 75.72293854]
[103.64546967 76.28710175]
[110.44518280 62.91683960]
[117.24489594 49.54657745]
[124.04461670 36.17631531]
[130.74267578 22.75484085]
[137.33869934 9.28292561]
[143.93470764 -4.18898964]
[143.05404663 -19.98566628]
[155.59974670 -28.01402283]
[147.47915649 -42.84983063]
[149.77754211 -59.43805695]
[161.39314270 -71.26984406]
[177.60784912 -73.82197571]
[183.99865723 -87.39244080]
[190.38946533 -100.96291351]
[196.78027344 -114.53337860]
[195.65997314 -130.31486511]
[208.08239746 -138.53269958]
[203.81442261 -148.54164124]
[205.72193909 -159.03092957]
[212.93721008 -166.57873535]
[222.90188599 -168.85835266]
[229.70159912 -182.22862244]
[236.50131226 -195.59887695]
[231.83724976 -210.46105957]
[238.92358398 -223.92353821]
[253.12113953 -228.27842712]
[259.92086792 -241.64868164]
[266.72058105 -255.01895142]
[267.82208252 -264.08996582]
[273.72628784 -268.53933716]
[280.72811890 -281.80487061]
[265.84259033 -279.95523071]
[255.00708008 -290.32785034]
[256.20550537 -305.27990723]
[268.55480957 -313.79425049]
[282.95568848 -309.59729004]
[288.79711914 -295.78079224]
[289.59646606 -311.58178711]
[302.92272949 -318.23455811]
[310.91009521 -330.93109131]
[318.89746094 -343.62762451]
[326.88482666 -356.32415771]
[328.80664062 -365.25744629]
[335.09100342 -369.15148926]
[343.27011108 -381.72534180]
[343.54550171 -386.94421387]
[345.59225464 -391.11697388]
[348.71444702 -393.74371338]
[352.11865234 -394.67358398]
[360.86160278 -406.86212158]
[369.60455322 -419.05068970]
[378.34750366 -431.23925781]
[372.56768799 -445.54299927]
[375.46105957 -460.69662476]
[386.10430908 -471.86462402]
[401.10125732 -475.48336792]
[415.66641235 -470.39810181]
[425.15206909 -458.23150635]
[426.53143311 -442.86593628]
[419.36431885 -429.20446777]
[405.93771362 -421.60641479]
[390.53604126 -422.49630737]
[381.79309082 -410.30773926]
[373.05014038 -398.11917114]
[364.30718994 -385.93063354]
[355.84396362 -373.54620361]
[347.66485596 -360.97235107]
[339.58135986 -348.33679199]
[331.59399414 -335.64025879]
[323.60662842 -322.94372559]
[315.61926270 -310.24719238]
[315.39123535 -295.35433960]
[301.49365234 -287.79342651]
[293.99365234 -274.80303955]
[286.99182129 -261.53750610]
[280.09082031 -248.21923828]
[273.29110718 -234.84896851]
[266.49139404 -221.47871399]
[271.33465576 -207.44024658]
[264.62924194 -193.78402710]
[249.87156677 -188.79916382]
[243.07185364 -175.42890930]
[236.27214050 -162.05863953]
[238.71154785 -142.87881470]
[221.65286255 -132.14189148]
[223.23028564 -117.33104706]
[210.35075378 -108.14257050]
[203.95994568 -94.57209778]
[197.56913757 -81.00163269]
[191.17831421 -67.43116760]
[198.66525269 -56.37519836]
[199.71916199 -42.95579529]
[193.95805359 -30.67055511]
[182.79025269 -22.77454567]
[169.07167053 -21.41800117]
[170.42413330 -6.58492613]
[157.40663147 2.40703106]
[150.81060791 15.87894630]
[144.21458435 29.35086250]
[144.09658813 36.74294281]
[137.41487122 42.97602844]
[130.61515808 56.34629059]
[123.81544495 69.71655273]
[117.01573181 83.08681488]
[126.82885742 106.13576508]
[110.31880951 129.28694153]
[119.06175995 141.47549438]
[127.80470276 153.66404724]
[142.13542175 160.36787415]
[143.26657104 175.21946716]
[152.00952148 187.40802002]
[160.75247192 199.59657288]
[176.09414673 202.29298401]
[184.78710938 214.77845764]
[182.12194824 229.38778687]
[197.63896179 229.34732056]
[210.19653320 238.46252441]
[214.96601868 253.22842407]
[210.11344910 267.96722412]
[197.50473022 277.01156616]
[181.98818970 276.88369751]
[169.53022766 267.63278198]
[164.92121887 252.81602478]
[169.93339539 238.13073730]
[155.24063110 235.97238159]
[146.20040894 223.73599243]
[148.56391907 208.33952332]
[139.82096863 196.15097046]
[131.07801819 183.96240234]
[117.37265778 178.13038635]
[115.61614990 162.40699768]
[106.87319946 150.21844482]
[98.13025665 138.02989197]
[99.95940399 152.91793823]
[101.78855896 167.80599976]
[103.61771393 182.69404602]
[105.44686890 197.58210754]
[113.10930634 210.47734070]
[117.86457062 224.70362854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 62]
[26 61]
[27 60]
[28 59]
[30 58]
[31 57]
[32 56]
[33 55]
[35 51]
[36 50]
[39 46]
[40 45]
[67 171]
[68 170]
[69 169]
[70 168]
[71 166]
[72 165]
[73 164]
[75 162]
[79 157]
[80 156]
[81 155]
[82 154]
[84 152]
[88 150]
[89 149]
[90 148]
[93 145]
[94 144]
[95 143]
[97 142]
[98 141]
[104 140]
[106 138]
[107 137]
[108 136]
[109 135]
[111 134]
[112 133]
[116 132]
[117 131]
[118 130]
[119 129]
[173 200]
[174 199]
[175 198]
[177 196]
[178 195]
[179 194]
[182 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
