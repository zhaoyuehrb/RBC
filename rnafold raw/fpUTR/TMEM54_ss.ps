%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCCGGGCGGCCCGGGGGGUGACGGGAAGGGAGGCCGGUCCGGCGCCGCCCAGCCCCGGGCUCCGGGCGGGAAGUGGGCGAGCGCGACGGUGCGGGGCGCGCGGGCGACGGGCCAGCGGGAUGGGAGCAGGGUCCCCCGGCGGCCCGCAGCCUCGGGAGCCGCGCUGAAGCCGGGGGCGGGACCAGCGCGGAGCCGAC\
) } def
/len { sequence length } bind def

/coor [
[-121.80343628 280.47738647]
[-121.38845825 265.48281860]
[-133.93257141 273.70748901]
[-146.47668457 281.93215942]
[-159.02079773 290.15682983]
[-171.56491089 298.38150024]
[-184.10903931 306.60617065]
[-191.40731812 320.64346313]
[-206.29325867 321.15145874]
[-218.83737183 329.37612915]
[-231.38148499 337.60079956]
[-243.92559814 345.82546997]
[-256.46972656 354.05014038]
[-269.01382446 362.27481079]
[-281.55795288 370.49948120]
[-294.03805542 378.82095337]
[-306.45336914 387.23876953]
[-318.86871338 395.65655518]
[-331.28405762 404.07437134]
[-343.69940186 412.49218750]
[-355.98297119 421.10110474]
[-368.13186646 429.89907837]
[-374.77078247 444.25997925]
[-389.61709595 445.45831299]
[-392.24411011 460.81201172]
[-404.69012451 469.56137085]
[-419.31137085 466.96231079]
[-421.56005859 482.60580444]
[-434.26162720 492.01034546]
[-449.88049316 489.59640503]
[-459.15020752 476.79608154]
[-456.57125854 461.20364380]
[-443.67367554 452.06976318]
[-428.10934448 454.81341553]
[-426.01748657 440.11105347]
[-413.82211304 431.01556396]
[-398.41510010 433.30941772]
[-392.64514160 419.57781982]
[-376.92984009 417.75021362]
[-364.78094482 408.95220947]
[-363.15490723 404.45547485]
[-358.68313599 400.93524170]
[-352.11718750 400.07684326]
[-339.70184326 391.65902710]
[-327.28652954 383.24124146]
[-314.87118530 374.82342529]
[-302.45584106 366.40560913]
[-298.68133545 360.04586792]
[-289.78262329 357.95535278]
[-277.23849487 349.73068237]
[-264.69439697 341.50601196]
[-252.15026855 333.28134155]
[-239.60615540 325.05667114]
[-227.06204224 316.83200073]
[-214.51792908 308.60733032]
[-208.11688232 295.15832520]
[-192.33369446 294.06204224]
[-179.78958130 285.83737183]
[-167.24546814 277.61270142]
[-154.70135498 269.38803101]
[-142.15724182 261.16336060]
[-129.61312866 252.93870544]
[-117.39652252 244.23498535]
[-105.52572632 235.06524658]
[-93.65493011 225.89550781]
[-81.78413391 216.72576904]
[-69.91333771 207.55601501]
[-58.04253769 198.38627625]
[-46.17174149 189.21653748]
[-40.82948685 175.31295776]
[-25.17827797 172.99987793]
[-13.30748177 163.83013916]
[-28.00012016 160.80915833]
[-36.37252045 148.36315918]
[-33.63282394 133.61547852]
[-21.34907150 125.00679016]
[-6.55173540 127.46418762]
[2.29008985 139.58120728]
[0.11628111 154.42211914]
[12.78617287 146.39256287]
[25.45606422 138.36299133]
[24.70510864 123.48678589]
[31.54667282 110.14328766]
[44.23246384 101.96177673]
[59.40981293 101.22366333]
[73.00753021 108.22719574]
[85.67742157 100.19763947]
[92.33233643 87.90114594]
[106.29302216 87.13246918]
[109.87281036 74.73666382]
[120.59622192 68.31055450]
[132.43098450 70.83290100]
[145.22361755 63.00037384]
[158.01625061 55.16784668]
[170.80888367 47.33531570]
[183.35299683 39.11064911]
[195.63658142 30.50172043]
[207.92016602 21.89279175]
[214.78053284 7.63636255]
[229.64363098 6.66793489]
[241.92720032 -1.94099283]
[254.21078491 -10.54992104]
[261.07116699 -24.80635071]
[275.93426514 -25.77477837]
[282.79464722 -40.03120804]
[297.65771484 -40.99963379]
[309.94131470 -49.60856247]
[322.15789795 -58.31228256]
[334.30679321 -67.11026764]
[346.45565796 -75.90825653]
[349.08267212 -91.26197815]
[361.52868652 -100.01132202]
[376.14993286 -97.41226196]
[388.29882812 -106.21025085]
[400.44769287 -115.00823975]
[412.59658813 -123.80622864]
[424.74548340 -132.60421753]
[436.89434814 -141.40220642]
[442.01358032 -148.97526550]
[449.30001831 -150.24061584]
[461.58358765 -158.84954834]
[468.44396973 -173.10597229]
[483.30706787 -174.07440186]
[495.59063721 -182.68333435]
[498.72851562 -188.51446533]
[503.60919189 -191.44152832]
[508.39022827 -191.36166382]
[520.93432617 -199.58633423]
[533.47845459 -207.81100464]
[546.02258301 -216.03567505]
[548.99487305 -231.55795288]
[562.11926270 -240.36286926]
[577.60925293 -237.22662354]
[586.27490234 -224.00990295]
[582.97503662 -208.55395508]
[569.66748047 -200.02850342]
[554.24725342 -203.49156189]
[541.70312500 -195.26689148]
[529.15899658 -187.04222107]
[516.61492920 -178.81755066]
[504.19958496 -170.39974976]
[491.91598511 -161.79081726]
[485.93420410 -148.15016174]
[470.19253540 -146.56596375]
[457.90893555 -137.95703125]
[445.69235229 -129.25331116]
[433.54345703 -120.45532990]
[421.39456177 -111.65734100]
[409.24569702 -102.85935211]
[397.09680176 -94.06136322]
[384.94790649 -85.26338196]
[382.85604858 -70.56101227]
[370.66067505 -61.46553421]
[355.25366211 -63.75937271]
[343.10476685 -54.96138382]
[330.95590210 -46.16339493]
[327.38000488 -39.68989182]
[318.55023193 -37.32498169]
[306.26666260 -28.71605301]
[300.28488159 -15.07539177]
[284.54318237 -13.49119663]
[278.56140137 0.14946476]
[262.81970215 1.73366034]
[250.53613281 10.34258842]
[238.25254822 18.95151520]
[232.27078247 32.59217834]
[216.52908325 34.17637253]
[204.24551392 42.78530121]
[191.96192932 51.39422989]
[191.34625244 54.13525391]
[189.60421753 56.79668808]
[186.76100159 58.94701004]
[182.99781799 60.17188644]
[178.64141846 60.12794876]
[165.84878540 67.96047974]
[153.05613708 75.79300690]
[140.26350403 83.62554169]
[132.73083496 99.47262573]
[114.32257843 99.80236053]
[107.66766357 112.09885406]
[93.70697784 112.86753082]
[81.03708649 120.89708710]
[81.56552124 136.18328857]
[74.41884613 149.59306335]
[61.60476303 157.57212830]
[46.61758804 158.06262207]
[33.48562622 151.03288269]
[20.81573296 159.06245422]
[8.14584160 167.09201050]
[-4.13773966 175.70094299]
[-16.00853729 184.87068176]
[-22.19987106 199.43014526]
[-37.00199890 201.08734131]
[-48.87279510 210.25708008]
[-60.74359131 219.42681885]
[-72.61438751 228.59655762]
[-84.48519135 237.76629639]
[-96.35598755 246.93605042]
[-108.22678375 256.10577393]
[-93.91931152 260.61093140]
[-88.37298584 274.54788208]
[-95.67277527 287.65179443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 57]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[14 50]
[15 49]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 40]
[22 39]
[24 37]
[27 34]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[69 193]
[71 191]
[72 190]
[79 189]
[80 188]
[81 187]
[86 182]
[87 181]
[89 179]
[92 177]
[93 176]
[94 175]
[95 174]
[96 169]
[97 168]
[98 167]
[100 165]
[101 164]
[102 163]
[104 161]
[106 159]
[107 158]
[108 156]
[109 155]
[110 154]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[120 145]
[121 144]
[123 142]
[124 141]
[127 140]
[128 139]
[129 138]
[130 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
