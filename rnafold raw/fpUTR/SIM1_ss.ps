%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAUUUUCAAAGAACAUAUUUUCCGUUCACCCCCGCUGGUCUUUUACUGCCAUCAAUACACUGUUCUUGGUGCAAAUACUUCAGCCUCUUUAUUCAAAGUAUGUUUUAUGUUUUUGCCAAAUAUGAUCUCUAAUUGAAAGUUUAUUUUUGGUUUUGGAUGAAUCUGCGGAGCUUAAGUUGUGAGAAGAAAGGGGGAACAAGACACA\
) } def
/len { sequence length } bind def

/coor [
[174.46643066 259.52374268]
[164.82914734 271.01821899]
[152.76193237 279.92791748]
[138.93980408 285.75445557]
[124.13588715 288.17193604]
[109.17826843 287.04513550]
[94.90361023 282.43707275]
[82.11038208 274.60552979]
[71.51416779 263.98855591]
[63.70769119 251.18000793]
[59.12760544 236.89634705]
[58.03010178 221.93655396]
[60.47623444 207.13856506]
[51.58630371 219.22033691]
[42.69636917 231.30210876]
[33.80643845 243.38386536]
[39.41257095 257.75659180]
[36.33588028 272.87405396]
[25.55812836 283.91232300]
[10.51845551 287.34915161]
[-3.98403406 282.08782959]
[-13.32164764 269.80725098]
[-14.51478767 254.42610168]
[-7.18272638 240.85244751]
[6.33490133 233.41757202]
[21.72467041 234.49394226]
[30.61460304 222.41217041]
[39.50453568 210.33039856]
[48.39447021 198.24864197]
[48.99261856 189.53076172]
[56.09191895 182.73829651]
[60.33766556 168.35173035]
[64.58341217 153.96514893]
[68.82915497 139.57856750]
[73.07490540 125.19198608]
[65.80496216 112.07147217]
[51.35589981 108.04349518]
[36.90683746 104.01551819]
[22.45777512 99.98754120]
[8.00871372 95.95955658]
[-0.01024310 108.74925232]
[-11.29680252 118.75104523]
[-24.93060493 125.16076660]
[-39.80309677 127.46668243]
[-54.70766449 125.49037170]
[-68.43753052 119.40046692]
[-79.88345337 109.69832611]
[-88.12335968 97.17675781]
[-92.49660492 82.85523224]
[-92.65694427 67.89690399]
[-107.10600281 63.86892700]
[-121.55506897 59.84095001]
[-136.00413513 55.81296921]
[-149.65388489 63.31777573]
[-164.24990845 59.02700043]
[-171.32046509 45.96780396]
[-185.76953125 41.93982315]
[-200.21859741 37.91184616]
[-214.66764832 33.88386917]
[-231.54866028 35.45481873]
[-237.73135376 19.66840935]
[-224.27342224 9.35723209]
[-210.63967896 19.43480682]
[-196.19061279 23.46278381]
[-181.74154663 27.49076271]
[-167.29249573 31.51874161]
[-154.48561096 24.00079536]
[-139.77482605 27.87990379]
[-131.97615051 41.36390686]
[-117.52709198 45.39188766]
[-103.07802582 49.41986465]
[-88.62896729 53.44784164]
[-80.75324249 40.72973251]
[-69.60163879 30.73608589]
[-56.07219696 24.28317451]
[-41.25770569 21.90167427]
[-26.35740471 23.79302788]
[-12.57993412 29.81243324]
[-1.04527247 39.47989655]
[7.30629158 52.01849365]
[11.79081154 66.41680908]
[12.03669167 81.51049805]
[26.48575401 85.53847504]
[40.93481445 89.56645203]
[55.38387680 93.59442902]
[69.83293915 97.62241364]
[76.71608734 84.86852264]
[87.95085144 77.77980804]
[100.01706696 77.21504211]
[109.70016479 82.17540741]
[119.12822723 70.50872040]
[128.55628967 58.84203339]
[137.98434448 47.17534637]
[147.41241455 35.50865555]
[156.84048462 23.84196854]
[166.26853943 12.17527962]
[175.69660950 0.50859052]
[185.12466431 -11.15809822]
[194.55273438 -22.82478714]
[180.70315552 -17.06377602]
[165.73777771 -16.04522324]
[151.23533630 -19.87658119]
[138.72575378 -28.15366745]
[129.52868652 -40.00330734]
[124.61436462 -54.17544174]
[124.50122070 -69.17501831]
[129.20118713 -83.41967773]
[138.21846008 -95.40670776]
[150.60176086 -103.87155914]
[165.04475403 -107.92125702]
[180.02378845 -107.12857819]
[193.95869446 -101.57714844]
[205.37942505 -91.85260773]
[213.08119202 -78.98081970]
[216.25148010 -64.31967163]
[214.55587769 -49.41581345]
[208.17364502 -35.84209061]
[220.25541687 -44.73202515]
[232.33717346 -53.62195587]
[244.41894531 -62.51189041]
[256.50070190 -71.40182495]
[268.58248901 -80.29175568]
[275.11224365 -94.70261383]
[289.94903564 -96.01356506]
[302.03082275 -104.90350342]
[314.11257935 -113.79343414]
[326.19433594 -122.68336487]
[332.72409058 -137.09422302]
[347.56091309 -138.40518188]
[359.64266968 -147.29512024]
[358.56631470 -162.68487549]
[366.00115967 -176.20251465]
[379.57482910 -183.53457642]
[394.95599365 -182.34143066]
[407.23657227 -173.00381470]
[412.49786377 -158.50132751]
[409.06103516 -143.46165466]
[398.02276611 -132.68389893]
[382.90530396 -129.60720825]
[368.53259277 -135.21334839]
[356.45083618 -126.32341003]
[350.78524780 -112.54842377]
[335.08428955 -110.60160065]
[323.00250244 -101.71166992]
[310.92074585 -92.82173157]
[298.83898926 -83.93180084]
[293.17337036 -70.15681458]
[277.47241211 -68.20999146]
[265.39065552 -59.32005692]
[253.30888367 -50.43012238]
[241.22711182 -41.54018784]
[229.14533997 -32.65025711]
[217.06358337 -23.76032448]
[206.21942139 -13.39672375]
[196.79135132 -1.73003495]
[187.36329651 9.93665409]
[177.93522644 21.60334206]
[168.50717163 33.27003098]
[159.07910156 44.93671799]
[149.65104675 56.60340881]
[140.22297668 68.27009583]
[130.79492188 79.93678284]
[121.36685181 91.60347748]
[123.73574066 106.41523743]
[136.33222961 114.55947113]
[148.92871094 122.70370483]
[157.83668518 124.73590851]
[161.65264893 131.06727600]
[174.12469482 139.40083313]
[189.89773560 140.63446045]
[196.18145752 154.13868713]
[208.65350342 162.47224426]
[221.12554932 170.80580139]
[237.51606750 171.33784485]
[245.01091003 185.92411804]
[235.90002441 199.55950928]
[219.55592346 198.21710205]
[212.79199219 183.27784729]
[200.31994629 174.94429016]
[187.84790039 166.61073303]
[172.96694946 165.97317505]
[165.79113770 151.87287903]
[153.31910706 143.53932190]
[140.78448486 135.30018616]
[128.18798828 127.15596008]
[115.59150696 119.01172638]
[108.55899811 121.61822510]
[117.86317444 133.38395691]
[109.54842377 145.86854553]
[95.10548401 141.81867981]
[94.49398804 126.83123016]
[87.46147919 129.43772888]
[83.21573639 143.82431030]
[78.96999359 158.21089172]
[74.72424316 172.59747314]
[70.47850037 186.98405457]
[80.78533936 176.08593750]
[93.36332703 167.91314697]
[107.50888824 162.92286682]
[122.43079376 161.39419556]
[137.29437256 163.41267395]
[151.26820374 168.86537170]
[163.57066345 177.44729614]
[173.51359558 188.67842102]
[180.54084778 201.93049622]
[184.25933838 216.46229553]
[184.46105957 231.46093750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 29]
[14 28]
[15 27]
[16 26]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 86]
[37 85]
[38 84]
[39 83]
[40 82]
[50 72]
[51 71]
[52 70]
[53 69]
[56 66]
[57 65]
[58 64]
[59 63]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[98 155]
[99 154]
[117 153]
[118 152]
[119 151]
[120 150]
[121 149]
[122 148]
[124 146]
[125 145]
[126 144]
[127 143]
[129 141]
[130 140]
[164 186]
[165 185]
[166 184]
[168 183]
[169 182]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
