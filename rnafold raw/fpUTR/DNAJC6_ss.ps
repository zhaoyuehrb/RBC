%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCCCGAGCCGAGCUCAGCCCAGGGCGGCGGCUUCGCCUCGCCCGGCGAAGCUUCUCUCCGGUGGCCGCUCCUUCUUUUCCCUCCUCUUUGCGUCAUGUCGGGCACUUAAUUUUUUUUUUUUUUUAAUUCCUUCUUCAGCCCUUUCCACCUUCCAUCUCCCUUUUCGCUUCCCAGGUUGAUUAUUUUCUCUUUUCUCCGGGCUUGCCC\
) } def
/len { sequence length } bind def

/coor [
[143.04090881 557.56536865]
[142.81863403 542.56701660]
[142.59635925 527.56866455]
[142.15185547 512.57525635]
[141.48522949 497.59008789]
[140.81860352 482.60491943]
[140.15197754 467.61972046]
[131.85668945 455.24890137]
[138.97305298 441.11849976]
[138.30641174 426.13330078]
[137.63978577 411.14813232]
[126.51093292 401.31530762]
[125.62140656 386.12771606]
[136.01042175 374.52142334]
[135.34379578 359.53622437]
[134.67716980 344.55105591]
[128.71246338 335.49597168]
[132.53140259 323.93966675]
[130.09710693 309.13851929]
[127.66281891 294.33734131]
[125.22852325 279.53619385]
[122.79423523 264.73504639]
[120.35993958 249.93388367]
[110.71805573 242.62985229]
[108.56850433 230.31924438]
[115.60080719 219.50737000]
[113.38610840 204.67176819]
[111.17140961 189.83616638]
[101.63977051 178.39077759]
[107.25472260 163.59945679]
[105.04003143 148.76385498]
[102.82533264 133.92825317]
[100.61063385 119.09265137]
[88.10779572 110.80535889]
[73.58126831 114.54431915]
[59.05473328 118.28327942]
[44.52819824 122.02223969]
[30.00166512 125.76119995]
[15.47513008 129.50016785]
[0.94859678 133.23912048]
[-13.57793713 136.97807312]
[-21.39809227 150.71200562]
[-36.66102219 154.81304932]
[-50.31150055 146.84811401]
[-54.25094223 131.54267883]
[-46.14214325 117.97718048]
[-30.79591179 114.19977570]
[-17.31689644 122.45154572]
[-2.79036283 118.71258545]
[11.73617077 114.97362518]
[26.26270485 111.23466492]
[40.78923798 107.49570465]
[55.31577301 103.75674438]
[69.84230804 100.01779175]
[84.36884308 96.27883148]
[69.47561646 98.06539154]
[56.15188217 91.17494965]
[49.00196457 77.98864746]
[50.49666977 63.06330109]
[60.11947250 51.55670929]
[74.54499054 47.44522476]
[88.78817749 52.14966965]
[97.92696381 64.04431152]
[98.80316162 79.01903534]
[99.91355896 64.06019592]
[101.02395630 49.10134888]
[102.13434601 34.14250565]
[103.24474335 19.18366241]
[82.57252502 3.60138774]
[83.71340942 -27.14871979]
[74.26209259 -38.79657745]
[64.81077576 -50.44443512]
[50.96121979 -44.43673706]
[36.00423050 -42.38952637]
[21.04971504 -44.45471954]
[7.20739651 -50.47906876]
[-4.49553347 -60.01552582]
[-13.19063950 -72.35642242]
[-18.23268700 -86.58598328]
[-19.24752235 -101.64827728]
[-16.15983772 -116.42558289]
[-9.19876003 -129.82131958]
[1.11915207 -140.84146118]
[14.02824116 -148.66819763]
[28.57056808 -152.72077942]
[43.66699219 -152.69844055]
[58.19726562 -148.60285950]
[71.08313751 -140.73794556]
[81.36839294 -129.68733215]
[88.28980255 -116.27104187]
[91.33374786 -101.48466492]
[90.27434540 -86.42544556]
[85.19021606 -72.21086884]
[76.45863342 -59.89575195]
[85.90995026 -48.24789429]
[95.36126709 -36.60003662]
[102.84459686 -37.09980011]
[100.13456726 -51.85296249]
[95.96586609 -66.26205444]
[107.79795837 -75.48168182]
[120.75102234 -67.91740417]
[118.53543091 -53.08184052]
[117.81125641 -38.09933090]
[125.29458618 -38.59909821]
[133.11309814 -51.40029907]
[140.93162537 -64.20149994]
[148.75013733 -77.00270844]
[137.46972656 -86.94872284]
[128.08793640 -98.70257568]
[120.88986969 -111.90708923]
[116.09428406 -126.16098022]
[113.84690857 -141.03109741]
[114.21603394 -156.06555176]
[117.19043732 -170.80746460]
[122.67974091 -184.80885315]
[130.51712036 -197.64421082]
[140.46441650 -208.92350769]
[152.21932983 -218.30397034]
[165.42466736 -225.50051880]
[179.67910767 -230.29449463]
[194.54946899 -232.54017639]
[209.58389282 -232.16935730]
[224.32546997 -229.19328308]
[238.32621765 -223.70239258]
[251.16069031 -215.86355591]
[262.43887329 -205.91497803]
[271.81799316 -194.15899658]
[279.01306152 -180.95285034]
[283.80538940 -166.69787598]
[286.04940796 -151.82723999]
[285.67687988 -136.79286194]
[282.69912720 -122.05162811]
[277.20663452 -108.05149078]
[269.36636353 -95.21791077]
[259.41650391 -83.94087219]
[247.65945435 -74.56307983]
[234.45249939 -67.36951447]
[220.19697571 -62.57878113]
[205.32608032 -60.33646393]
[190.29176331 -60.71070099]
[175.55085754 -63.69012451]
[161.55134583 -69.18418884]
[153.73281860 -56.38298416]
[145.91430664 -43.58178329]
[138.09579468 -30.78058052]
[145.20919800 -13.34082699]
[142.42849731 3.82313776]
[132.02774048 15.90729427]
[118.20359039 20.29405785]
[117.09319305 35.25290298]
[115.98279572 50.21174622]
[114.87239838 65.17059326]
[113.76200867 80.12943268]
[121.61293030 67.34808350]
[133.27055359 57.90880203]
[147.40534973 52.88810730]
[162.40531921 52.85858917]
[176.55976868 57.82360840]
[188.25445557 67.21693420]
[196.15562439 79.96728516]
[199.36218262 94.62054443]
[197.50845337 109.50555420]
[190.80583191 122.92475128]
[180.01873779 133.34773254]
[166.37738037 139.58578491]
[151.43750000 140.92749023]
[136.90293884 137.21983337]
[124.43131256 128.88566589]
[115.44623566 116.87795258]
[117.66093445 131.71356201]
[119.87563324 146.54916382]
[122.09033203 161.38476562]
[131.78038025 173.89129639]
[126.00701141 187.62147522]
[128.22171021 202.45707703]
[130.43641663 217.29267883]
[142.22850037 231.43627930]
[135.16108704 247.49958801]
[137.59538269 262.30075073]
[140.02967834 277.10189819]
[142.46397400 291.90307617]
[144.89826965 306.70422363]
[147.33256531 321.50537109]
[155.61022949 308.99615479]
[169.17486572 302.59301758]
[184.09359741 304.15237427]
[196.04090881 313.22219849]
[201.55287170 327.17276001]
[199.03132629 341.95932007]
[189.20739746 353.29467773]
[174.92938232 357.89230347]
[160.33700562 354.41918945]
[149.66233826 343.88442993]
[150.32897949 358.86959839]
[150.99560547 373.85479736]
[162.37416077 384.49273682]
[162.83674622 399.69934082]
[152.62496948 410.48150635]
[153.29159546 425.46667480]
[153.95822144 440.45187378]
[162.30119324 453.89453125]
[155.13716125 466.95309448]
[155.80378723 481.93826294]
[156.47041321 496.92346191]
[157.13703918 511.90863037]
[160.36558533 517.67681885]
[160.21900940 523.35699463]
[157.59471130 527.34637451]
[157.81698608 542.34472656]
[158.03926086 557.34307861]
[160.51522827 576.56597900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 205]
[5 204]
[6 203]
[7 202]
[9 200]
[10 199]
[11 198]
[14 195]
[15 194]
[16 193]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[26 176]
[27 175]
[28 174]
[30 172]
[31 171]
[32 170]
[33 169]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[70 96]
[71 95]
[72 94]
[104 145]
[105 144]
[106 143]
[107 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
