%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUGAUUGGUGUUGGGUUUAUUUGUCGGAGAGGCUCCUGAGCGCUAGGUCGGCACUGCGGUGACUGAACCCAGAAGGCGGAGAACAGUUGUCCUCUGCUGCACAGAGGCGACUCUGGAGCUCUGUGACGGCGCCAAGCGUGACCCACCCCUGGGCCAGGAUAGGGACCGUCAUGCCCAUAUCUCCUGGCUGGUCACCCUCUCCUCCCAACCCUGCUUUAAACCACGUGGUUCG\
) } def
/len { sequence length } bind def

/coor [
[121.72093201 681.72204590]
[114.60283661 672.26977539]
[109.76776123 661.46002197]
[107.46290588 649.83526611]
[107.80833435 637.98004150]
[110.79074860 626.49139404]
[116.26396179 615.94885254]
[123.95602417 606.88507080]
[133.48277283 599.75909424]
[144.36697388 594.93292236]
[141.98101807 580.12390137]
[137.82124329 574.03076172]
[139.66323853 565.10198975]
[137.47462463 550.26251221]
[135.28602600 535.42303467]
[133.09741211 520.58355713]
[130.90879822 505.74411011]
[128.72018433 490.90463257]
[120.93105316 503.72372437]
[107.93601227 511.21566772]
[92.93936920 511.53305054]
[79.63899231 504.59762573]
[71.31449127 492.11953735]
[70.01850128 477.17562866]
[76.07061005 463.45074463]
[87.97846985 454.32919312]
[102.80585480 452.06015015]
[116.89663696 457.20309448]
[126.77575684 468.48880005]
[126.37644958 453.49414062]
[125.97714233 438.49945068]
[125.57783508 423.50476074]
[125.17852783 408.51007080]
[124.77922058 393.51538086]
[124.37991333 378.52069092]
[117.05148315 373.56121826]
[112.75269318 365.66989136]
[112.55407715 356.54843140]
[116.62599182 348.23059082]
[124.17256165 342.62887573]
[124.37223053 327.63018799]
[124.57190704 312.63153076]
[117.00470734 299.80239868]
[124.92502594 286.10644531]
[125.02486420 271.10675049]
[125.02486420 256.10675049]
[125.02486420 241.10676575]
[125.02486420 226.10676575]
[125.02486420 211.10676575]
[125.02486420 196.10676575]
[108.68514252 182.51203918]
[107.77220917 160.99000549]
[123.30863953 145.65892029]
[122.31098938 130.69212341]
[121.31333923 115.72534180]
[100.32725525 145.92961121]
[47.95250702 139.55920410]
[33.21224594 136.77987671]
[18.47198296 134.00054932]
[9.47678185 135.48460388]
[3.55457902 131.08486938]
[-11.14737988 128.10955811]
[-25.84933853 125.13426971]
[-38.87906647 134.07862854]
[-54.40161133 131.10775757]
[-63.20772171 117.98418427]
[-60.07289124 102.49391937]
[-46.85695648 93.82704926]
[-31.40069771 97.12548065]
[-22.87404060 110.43230438]
[-8.17208099 113.40760803]
[6.52987766 116.38290405]
[21.25131416 119.26028442]
[35.99157715 122.03961182]
[50.73183823 124.81894684]
[54.32221985 118.23417664]
[61.50299072 105.06464386]
[65.09337616 98.47988129]
[54.77288437 87.59468842]
[44.45239258 76.70948792]
[34.13190460 65.82429504]
[23.81141472 54.93909836]
[13.49092484 44.05390167]
[3.17043543 33.16870499]
[-11.93933582 28.47771454]
[-15.08131218 13.91827488]
[-25.40180206 3.03307915]
[-41.26890564 -1.11023247]
[-45.35274506 -16.99274826]
[-33.45221710 -28.27589607]
[-17.80956268 -23.35254288]
[-14.51660538 -7.28741026]
[-4.19611597 3.59778571]
[10.17546463 7.51019382]
[14.05563164 22.84821510]
[24.37612152 33.73340988]
[34.69660950 44.61860657]
[45.01710129 55.50380325]
[55.33758926 66.38899994]
[65.65808105 77.27419281]
[75.97856903 88.15939331]
[89.42429352 81.51013947]
[87.03833771 66.70111847]
[75.08408356 52.68434525]
[81.98535919 36.54135513]
[79.40248871 21.76540184]
[76.81961823 6.98944950]
[74.23674774 -7.78650331]
[71.65387726 -22.56245613]
[60.72201920 -34.78647232]
[66.09875488 -50.27914047]
[82.25295258 -53.10293198]
[92.56656647 -40.35297012]
[86.42982483 -25.14532661]
[89.01269531 -10.36937332]
[91.59556580 4.40657902]
[94.17843628 19.18253136]
[96.76130676 33.95848465]
[106.46951294 41.15681839]
[108.75038147 53.43304443]
[101.84736633 64.31516266]
[104.23331451 79.12419128]
[111.27147675 81.71538544]
[122.79769897 72.11610413]
[125.34780121 86.89777374]
[132.38595581 89.48896790]
[143.80500793 79.76243591]
[155.22406006 70.03590393]
[166.64311218 60.30937958]
[178.06214905 50.58285141]
[189.48120117 40.85632324]
[200.90025330 31.12979317]
[202.31114197 15.61698914]
[214.03024292 5.91557455]
[228.81063843 7.35625219]
[240.22969055 -2.37027645]
[239.17259216 -17.73871040]
[247.27293396 -30.63203430]
[261.24682617 -36.21724319]
[275.65750122 -32.54701614]
[281.14602661 -47.38570786]
[295.85205078 -49.74834824]
[307.27108765 -59.47487640]
[312.75961304 -74.31356812]
[327.46563721 -76.67620850]
[338.88467407 -86.40273285]
[350.30371094 -96.12926483]
[361.72277832 -105.85578918]
[366.70468140 -121.47988892]
[382.78204346 -124.71263885]
[393.41583252 -112.22846222]
[387.66693115 -96.87001038]
[371.44931030 -94.43674469]
[360.03024292 -84.71021271]
[348.61120605 -74.98368835]
[337.19216919 -65.25715637]
[332.52041626 -51.11417389]
[316.99761963 -48.05582809]
[305.57858276 -38.32929993]
[300.90682983 -24.18631554]
[285.38403320 -21.12796974]
[286.71530151 -6.31697178]
[278.97848511 6.59060049]
[264.96084595 12.53695583]
[249.95620728 9.04877090]
[238.53717041 18.77529907]
[237.60847473 33.59667206]
[226.16650391 43.62342453]
[210.62677002 42.54883957]
[199.20773315 52.27536774]
[187.78868103 62.00189972]
[176.36962891 71.72842407]
[164.95059204 81.45495605]
[153.53153992 91.18148041]
[142.11248779 100.90801239]
[136.28013611 114.72769165]
[137.27778625 129.69447327]
[138.27543640 144.66127014]
[146.47021484 148.06025696]
[153.09149170 153.89965820]
[157.44519043 161.52993774]
[159.08712769 170.11596680]
[157.86813354 178.72836304]
[153.94718933 186.44413757]
[147.77134705 192.44552612]
[140.02485657 196.10676575]
[140.02485657 211.10676575]
[140.02485657 226.10676575]
[140.02485657 241.10676575]
[140.02485657 256.10675049]
[140.02485657 271.10675049]
[143.14993286 279.67123413]
[139.92369080 286.30609131]
[147.47660828 300.20803833]
[139.57057190 312.83120728]
[139.37091064 327.82986450]
[139.17123413 342.82855225]
[150.73751831 360.88134766]
[139.37458801 378.12139893]
[139.77389526 393.11608887]
[140.17321777 408.11077881]
[140.57252502 423.10543823]
[140.97183228 438.10012817]
[141.37113953 453.09481812]
[141.77044678 468.08950806]
[147.69485474 478.70611572]
[143.55966187 488.71603394]
[145.74827576 503.55551147]
[147.93687439 518.39495850]
[150.12548828 533.23443604]
[152.31410217 548.07391357]
[154.50271606 562.91339111]
[156.79005432 577.73797607]
[159.17599487 592.54699707]
[177.34837341 595.47900391]
[193.40458679 604.43328857]
[205.41905212 618.31805420]
[211.95707703 635.45104980]
[212.24620056 653.76379395]
[206.26741028 671.05096436]
[194.75547791 685.23632812]
[179.10879517 694.62182617]
[182.47441101 709.23931885]
[185.84002686 723.85687256]
[189.20564270 738.47442627]
[200.77259827 750.09930420]
[196.22804260 765.85620117]
[180.24702454 769.53570557]
[169.26945496 757.35278320]
[174.58810425 741.84002686]
[171.22248840 727.22253418]
[167.85687256 712.60498047]
[164.49125671 697.98742676]
[152.69931030 697.68206787]
[141.26341248 694.75280762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 214]
[11 213]
[13 212]
[14 211]
[15 210]
[16 209]
[17 208]
[18 207]
[29 205]
[30 204]
[31 203]
[32 202]
[33 201]
[34 200]
[35 199]
[40 197]
[41 196]
[42 195]
[44 193]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[53 178]
[54 177]
[55 176]
[57 75]
[58 74]
[59 73]
[61 72]
[62 71]
[63 70]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
[102 122]
[103 121]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[126 175]
[127 174]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[135 166]
[136 165]
[140 161]
[142 159]
[143 158]
[145 156]
[146 155]
[147 154]
[148 153]
[222 233]
[223 232]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
