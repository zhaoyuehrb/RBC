%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCAAGUUAAGGGAAUAGUGGAAUGAAGGUUCAUUUUUCAUUCUCACAAACUAAUGAAACCCUGCUUAUCUUAAACCAACCUGCUCACUGGAGCAGGGAGGACAGGACCAGCAUAAAAGGCAGGGCAGAGUCGACUGUUGCUUACACUUUCUUCUGACAUAACAGUGUUCACUAGCAACCUCAAACAGACACC\
) } def
/len { sequence length } bind def

/coor [
[75.07320404 423.42025757]
[62.17190170 415.42520142]
[53.03306198 403.30718994]
[48.89263916 388.70510864]
[50.31059265 373.59371948]
[57.09515381 360.01675415]
[68.32876587 349.81036377]
[82.49217987 344.35488892]
[82.49217987 329.35488892]
[82.49217987 314.35488892]
[72.90946198 299.65954590]
[82.23249817 283.78659058]
[81.99208069 268.78851318]
[81.75166321 253.79045105]
[68.02606964 244.79609680]
[62.30464935 229.23860168]
[67.02610779 213.17581177]
[80.52115631 202.98861694]
[80.04038239 187.99632263]
[79.55960846 173.00402832]
[79.07883453 158.01174927]
[78.59806061 143.01945496]
[65.64794159 135.45014954]
[52.34894943 142.38822937]
[39.04996109 149.32629395]
[25.75097084 156.26437378]
[12.45198059 163.20245361]
[-0.84700859 170.14051819]
[-14.14599800 177.07859802]
[-27.44498825 184.01667786]
[-40.74397659 190.95474243]
[-46.90693665 205.76681519]
[-62.36906815 210.04490662]
[-75.26914978 200.50721741]
[-75.71134186 184.47026062]
[-63.35643387 174.23620605]
[-47.68205261 177.65576172]
[-34.38306046 170.71768188]
[-21.08407211 163.77960205]
[-7.78508282 156.84153748]
[5.51390648 149.90345764]
[18.81289673 142.96537781]
[32.11188507 136.02731323]
[45.41087723 129.08923340]
[58.70986557 122.15116119]
[55.96057510 107.40526581]
[41.05488968 105.72579956]
[26.14920807 104.04633331]
[15.78008652 115.59020233]
[0.59897155 118.80164337]
[-13.55669022 112.44579315]
[-21.24375725 98.96659851]
[-19.50639725 83.54709625]
[-9.01265717 72.11638641]
[6.20240259 69.06981659]
[20.28828239 75.57885742]
[27.82867432 89.14064789]
[42.73435593 90.82011414]
[57.64004135 92.49958038]
[71.08619690 69.53339386]
[94.97303772 59.32302094]
[119.62879944 65.18151093]
[117.94933319 50.27582550]
[116.26986694 35.37014389]
[114.59040070 20.46445847]
[112.91093445 5.55877590]
[111.23146820 -9.34690762]
[109.55199432 -24.25259018]
[107.87252808 -39.15827560]
[101.16880798 -48.99178696]
[104.14485168 -59.15176392]
[100.34003448 -73.66118622]
[96.53521729 -88.17060852]
[92.73040009 -102.68003082]
[80.39068604 -108.09731293]
[73.52767944 -119.46856689]
[74.45726776 -132.52264404]
[82.61608887 -142.50511169]
[79.04431152 -157.07365417]
[65.81212616 -165.29234314]
[62.39737701 -180.11779785]
[70.31419373 -192.68202209]
[66.74242401 -207.25056458]
[63.17064667 -221.81910706]
[59.59886932 -236.38764954]
[56.02709579 -250.95619202]
[52.45532227 -265.52471924]
[48.88354492 -280.09326172]
[37.15353012 -291.55358887]
[41.47505188 -307.37307739]
[57.40249634 -311.27801514]
[68.55107880 -299.25134277]
[63.45208740 -283.66503906]
[67.02386475 -269.09649658]
[70.59563446 -254.52796936]
[74.16741180 -239.95942688]
[77.73918915 -225.39088440]
[81.31096649 -210.82234192]
[84.88273621 -196.25379944]
[97.71321869 -188.77619934]
[101.54303741 -174.05250549]
[93.61285400 -160.64541626]
[97.18463135 -146.07688904]
[111.92251587 -137.98707581]
[116.34231567 -121.41655731]
[107.23982239 -106.48484802]
[111.04463959 -91.97542572]
[114.84945679 -77.46600342]
[118.65427399 -62.95658112]
[125.15445709 -76.47499847]
[137.35585022 -85.20001984]
[152.24983215 -86.98023987]
[166.16386414 -81.37667847]
[175.66702271 -69.77107239]
[178.41601562 -55.02512360]
[173.73300171 -40.77488327]
[162.77272034 -30.53416634]
[148.23774719 -26.82812881]
[133.71212769 -30.57060242]
[122.77821350 -40.83774185]
[124.45767975 -25.93205833]
[126.13714600 -11.02637482]
[127.81661224 3.87930870]
[129.49607849 18.78499222]
[131.17555237 33.69067383]
[132.85501099 48.59635925]
[134.53448486 63.50204086]
[146.33653259 72.76010132]
[161.21337891 70.84194183]
[176.09022522 68.92378998]
[190.96708679 67.00563049]
[205.84393311 65.08747101]
[215.49249268 52.85869217]
[230.60705566 51.12533188]
[242.20587158 60.39912033]
[257.08273315 58.48096085]
[269.78018188 49.04245758]
[283.39236450 55.08870697]
[298.26922607 53.17055130]
[313.14608765 51.25239182]
[324.04537964 39.48020172]
[340.03359985 40.80543518]
[348.84594727 54.21148682]
[343.72232056 69.41438293]
[328.59313965 74.75176239]
[315.06423950 66.12924194]
[300.18737793 68.04740143]
[285.31051636 69.96556091]
[273.67718506 79.26686096]
[259.00088501 73.35781097]
[244.12402344 75.27597046]
[235.25689697 87.18854523]
[220.19697571 89.34575653]
[207.76208496 79.96432495]
[192.88523865 81.88247681]
[178.00839233 83.80063629]
[163.13154602 85.71879578]
[148.25468445 87.63695526]
[145.03417969 102.28714752]
[157.73504639 110.26763153]
[170.43591309 118.24811554]
[183.13676453 126.22859192]
[199.53575134 126.30073547]
[207.43675232 140.67106628]
[198.71186829 154.55662537]
[182.33654785 153.67314148]
[175.15629578 138.92945862]
[162.45542908 130.94897461]
[149.75456238 122.96849823]
[137.05369568 114.98801422]
[120.56140137 136.04199219]
[93.59035492 142.53868103]
[94.07112885 157.53097534]
[94.55190277 172.52325439]
[95.03267670 187.51554871]
[95.51345062 202.50784302]
[107.46845245 209.38265991]
[114.40753174 221.17498779]
[114.60882568 234.74768066]
[108.12673950 246.55078125]
[96.74974060 253.55003357]
[96.99015808 268.54809570]
[97.23057556 283.54617310]
[105.94031525 293.07052612]
[105.82492065 305.57531738]
[97.49217987 314.35488892]
[97.49217987 329.35488892]
[97.49217987 344.35488892]
[111.65558624 349.81036377]
[122.88919830 360.01675415]
[129.67376709 373.59371948]
[131.09172058 388.70510864]
[126.95129395 403.30718994]
[117.81245422 415.42520142]
[104.91114807 423.42025757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[10 186]
[12 183]
[13 182]
[14 181]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[46 59]
[47 58]
[48 57]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[71 109]
[72 108]
[73 107]
[74 106]
[78 103]
[79 102]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[128 158]
[129 157]
[130 156]
[131 155]
[132 154]
[135 151]
[136 150]
[138 148]
[139 147]
[140 146]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
