%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAUCAAGGAUGACACUGGUGAGAACCCUAUGAGGGAGUGAAGCAGCCUGGACUCUUACCACAAGAGGGAGGUGUUAUAAGAGCAAUGCAGAGGUUGGAGUGGGCAGCAGUUGGGGCAGGAGGAAGCCGACUGCUGCCUGGUCUGCAAAGAAGUCCUUUCAAGUCUCUAGGACUGGACUCUUCCUAAGCAAGUCCGAGAAGGAAGCACCCUCACU\
) } def
/len { sequence length } bind def

/coor [
[-185.31333923 384.87026978]
[-187.35403442 392.21438599]
[-190.40304565 399.19674683]
[-194.39927673 405.67974854]
[-199.26295471 411.53579712]
[-204.89724731 416.64974976]
[-211.19023132 420.92129517]
[-218.01701355 424.26675415]
[-225.24229431 426.62084961]
[-232.72300720 427.93798828]
[-240.31120300 428.19305420]
[-247.85687256 427.38189697]
[-255.21104431 425.52154541]
[-262.22860718 422.64959717]
[-268.77127075 418.82369995]
[-274.71020508 414.12023926]
[-279.92864990 408.63287354]
[-284.32418823 402.47070312]
[-298.06536865 408.48565674]
[-311.80654907 414.50061035]
[-325.54776001 420.51559448]
[-339.28894043 426.53054810]
[-353.03012085 432.54550171]
[-366.77130127 438.56048584]
[-380.51248169 444.57543945]
[-386.34262085 459.02008057]
[-400.36383057 464.92434692]
[-414.09866333 459.27719116]
[-427.83984375 465.29214478]
[-430.28286743 468.86950684]
[-433.42047119 471.24685669]
[-436.79107666 472.35321045]
[-439.95721436 472.27441406]
[-442.55477905 471.23187256]
[-456.62106323 476.44143677]
[-470.68734741 481.65103149]
[-477.34371948 495.73400879]
[-491.68313599 500.81689453]
[-505.06808472 494.38424683]
[-519.13439941 499.59384155]
[-531.88763428 510.76483154]
[-546.15252686 501.60238647]
[-541.29705811 485.35861206]
[-524.34393311 485.52755737]
[-510.27767944 480.31796265]
[-504.31176758 466.71856689]
[-490.12078857 461.23495483]
[-475.89694214 467.58474731]
[-461.83065796 462.37515259]
[-447.76437378 457.16558838]
[-433.85479736 451.55096436]
[-420.11361694 445.53601074]
[-414.94479370 431.61410522]
[-401.09497070 425.31832886]
[-386.52746582 430.83425903]
[-372.78625488 424.81927490]
[-359.04507446 418.80432129]
[-345.30389404 412.78936768]
[-331.56271362 406.77441406]
[-317.82153320 400.75942993]
[-304.08032227 394.74447632]
[-290.33914185 388.72952271]
[-291.67779541 365.32391357]
[-282.93527222 343.53054810]
[-265.73712158 327.48751831]
[-243.31765747 320.25579834]
[-219.91184998 323.23501587]
[-199.95523071 335.89288330]
[-187.96191406 326.88397217]
[-175.96859741 317.87506104]
[-172.50999451 311.34744263]
[-163.73582458 308.82403564]
[-151.61334229 299.98971558]
[-139.49085999 291.15536499]
[-127.36838531 282.32104492]
[-115.24591064 273.48669434]
[-103.12342834 264.65234375]
[-109.46649933 256.48403931]
[-113.26594543 246.97843933]
[-114.27964783 236.89759827]
[-112.48638916 227.03271484]
[-108.08296967 218.14199829]
[-101.46451569 210.89245605]
[-93.18960571 205.80984497]
[-83.93344116 203.24079895]
[-74.43291473 203.32960510]
[-65.42791748 206.01133728]
[-57.60376740 211.02133179]
[-45.87629700 201.66899109]
[-34.14882278 192.31663513]
[-32.74155045 177.53302002]
[-20.98145485 167.88134766]
[-5.48458433 169.45767212]
[6.24288797 160.10531616]
[17.97035980 150.75297546]
[19.63471031 138.77430725]
[29.32459068 130.88647461]
[42.19159317 131.73925781]
[54.05322647 122.55766296]
[65.91486359 113.37607574]
[77.77649689 104.19448853]
[89.63813782 95.01289368]
[98.64704132 83.01958466]
[104.16083527 69.06974030]
[109.67462921 55.11989594]
[115.18841553 41.17005157]
[120.70220947 27.22021103]
[126.21599579 13.27036858]
[131.72978210 -0.67947441]
[137.24357605 -14.62931728]
[142.75737000 -28.57915878]
[148.27116394 -42.52900314]
[153.78495789 -56.47884369]
[159.29875183 -70.42868805]
[164.81253052 -84.37853241]
[154.42021179 -95.55718994]
[149.91549683 -110.14041138]
[152.19281006 -125.23268127]
[160.79997253 -137.83741760]
[174.02803040 -145.45195007]
[189.25054932 -146.56440735]
[203.44509888 -140.95388794]
[213.79330444 -129.73439026]
[218.24057007 -115.13354492]
[215.90383911 -100.05036163]
[207.24711609 -87.47961426]
[193.98916626 -79.91723633]
[178.76237488 -78.86473846]
[173.24858093 -64.91489410]
[167.73480225 -50.96505356]
[162.22100830 -37.01521301]
[156.70721436 -23.06536865]
[151.19342041 -9.11552620]
[145.67962646 4.83431625]
[140.16584778 18.78415871]
[134.65205383 32.73400116]
[129.13825989 46.68384552]
[123.62446594 60.63368607]
[118.11067963 74.58352661]
[112.59688568 88.53337097]
[118.07009125 93.66114044]
[129.01651001 103.91667175]
[134.48971558 109.04444122]
[148.05101013 102.63418579]
[161.61228943 96.22392273]
[170.49816895 82.44084930]
[186.86210632 83.51484680]
[193.87030029 98.34108734]
[184.31330872 111.66760254]
[168.02255249 109.78521729]
[154.46125793 116.19547272]
[140.89997864 122.60573578]
[143.91944885 137.29867554]
[158.90962219 137.84146118]
[173.89981079 138.38424683]
[188.88998413 138.92703247]
[203.88015747 139.46981812]
[218.87033081 140.01260376]
[226.41346741 126.69495392]
[239.28787231 118.41798401]
[254.53511047 117.08367920]
[268.65145874 122.99864960]
[278.39312744 134.80368042]
[281.52151489 149.78607178]
[277.31774902 164.50296021]
[266.74780273 175.57252502]
[252.24063110 180.45106506]
[237.12982178 178.01751709]
[224.88774109 168.83110046]
[218.32754517 155.00277710]
[203.33737183 154.45999146]
[188.34719849 153.91720581]
[173.35702515 153.37442017]
[158.36685181 152.83163452]
[143.37666321 152.28886414]
[118.76192474 143.76544189]
[103.19944763 127.10813904]
[98.81972504 106.87453461]
[86.95809174 116.05612183]
[75.09645081 125.23770905]
[63.23481750 134.41929626]
[51.37318039 143.60089111]
[44.79311371 160.80148315]
[27.32270813 162.48045349]
[15.59523487 171.83279419]
[3.86776280 181.18513489]
[1.95617819 196.64424133]
[-10.07037449 205.96177673]
[-24.79647827 204.04411316]
[-36.52394867 213.39645386]
[-48.25142288 222.74880981]
[-43.90361404 241.20109558]
[-50.45141602 259.81274414]
[-66.60994720 272.43194580]
[-59.14131165 285.44039917]
[-51.67267609 298.44885254]
[-36.62416458 304.00958252]
[-31.72614288 319.28665161]
[-40.73595428 332.56079102]
[-56.74204254 333.64923096]
[-67.46590424 321.71697998]
[-64.68111420 305.91748047]
[-72.14974976 292.90902710]
[-79.61838531 279.90060425]
[-94.28909302 276.77484131]
[-106.41156769 285.60916138]
[-118.53404999 294.44351196]
[-130.65652466 303.27786255]
[-142.77900696 312.11218262]
[-154.90147400 320.94653320]
[-166.95968628 329.86837769]
[-178.95300293 338.87728882]
[-190.94631958 347.88619995]
[-187.74523926 354.82211304]
[-185.54931641 362.13519287]
[-184.40103149 369.68066406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[25 55]
[28 52]
[29 51]
[34 50]
[35 49]
[36 48]
[39 45]
[40 44]
[68 213]
[69 212]
[70 211]
[72 210]
[73 209]
[74 208]
[75 207]
[76 206]
[77 205]
[88 191]
[89 190]
[90 189]
[93 186]
[94 185]
[95 184]
[98 182]
[99 181]
[100 180]
[101 179]
[102 178]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[143 152]
[144 151]
[145 150]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 170]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
