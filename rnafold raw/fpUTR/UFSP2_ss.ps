%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGUAGUUGGUCCGCCCGGGCCCCGCCCCUGGGCCGUGCGGUGACACCACUUCAGGGCCGGCCCCCGGAACUUUUGGGCAGGCGUCAGCGCCCGUGUCACCGCCACGUCGCGGAC\
) } def
/len { sequence length } bind def

/coor [
[-0.79614586 371.70642090]
[-1.80598760 386.93609619]
[-9.33120346 400.21514893]
[-21.87765503 408.90707397]
[-36.95423889 411.28601074]
[-51.56748199 406.87969971]
[-62.81592178 396.56292725]
[-68.46616364 382.38415527]
[-67.39635468 367.15859985]
[-59.81890869 353.90924072]
[-47.23832321 345.26681519]
[-32.15249252 342.94723511]
[-27.82211113 328.58590698]
[-23.49173355 314.22457886]
[-19.16135406 299.86325073]
[-14.83097458 285.50192261]
[-10.50059509 271.14059448]
[-15.05309296 265.18032837]
[-29.92906952 267.10525513]
[-24.15809059 253.25979614]
[-28.71058846 247.29953003]
[-43.70527267 247.69883728]
[-58.69995499 248.09814453]
[-73.69464111 248.49745178]
[-88.68932343 248.89675903]
[-98.27621460 261.25091553]
[-113.57214355 264.50189209]
[-127.35482788 257.11462402]
[-133.11651611 242.57719421]
[-128.13670349 227.75372314]
[-114.76672363 219.64338684]
[-99.31945801 222.07565308]
[-89.08863068 233.90208435]
[-74.09394836 233.50276184]
[-59.09926605 233.10345459]
[-44.10457993 232.70414734]
[-29.10989571 232.30484009]
[-15.45037460 226.10665894]
[-5.27569675 215.08505249]
[4.89898109 204.06343079]
[14.92604351 192.90736389]
[24.80371475 181.61880493]
[34.68138504 170.33024597]
[44.55905533 159.04167175]
[54.43672562 147.75311279]
[64.31439972 136.46455383]
[74.19207001 125.17599487]
[84.06974030 113.88742828]
[93.94741058 102.59886932]
[88.72188568 102.06832886]
[83.66952515 99.30029297]
[79.52745056 94.39971924]
[76.98257446 87.68678284]
[76.61320496 79.67716217]
[78.83753204 71.04716492]
[83.87268066 62.58612823]
[88.58383179 48.34516525]
[81.73722839 34.35367584]
[86.71787262 19.97842789]
[100.09880829 13.53745842]
[104.80995941 -0.70350605]
[109.52111053 -14.94447041]
[114.23226166 -29.18543434]
[113.46658325 -46.12208176]
[129.52938843 -51.54636765]
[139.18830872 -37.61290359]
[128.47322083 -24.47428322]
[123.76207733 -10.23331928]
[119.05092621 4.00764465]
[114.33977509 18.24860954]
[121.23962402 31.39880371]
[116.66471863 45.90827942]
[102.82479858 53.05631638]
[98.11364746 67.29727936]
[102.82319641 73.13423920]
[117.64261627 70.81372070]
[112.24230194 84.80816650]
[116.95185089 90.64513397]
[131.86686707 89.05072784]
[146.78189087 87.45632935]
[161.69691467 85.86192322]
[167.42980957 82.16767883]
[173.27409363 82.04278564]
[177.44515991 84.60141754]
[192.42390442 83.80308533]
[205.86686707 74.41060638]
[220.60586548 81.60047913]
[221.47865295 97.97638702]
[207.58740234 106.69219208]
[193.22224426 98.78182220]
[178.24349976 99.58015442]
[163.29132080 100.77694702]
[148.37629700 102.37134552]
[133.46127319 103.96575165]
[118.54624939 105.56015015]
[105.23596954 112.47653961]
[95.35829926 123.76510620]
[85.48062897 135.05366516]
[75.60295868 146.34222412]
[65.72528839 157.63078308]
[55.84761810 168.91934204]
[45.96994781 180.20791626]
[36.09227371 191.49647522]
[26.21460533 202.78503418]
[22.85843849 211.42176819]
[15.92059326 214.23811340]
[5.74591541 225.25973511]
[-4.42876196 236.28134155]
[2.43517113 241.90197754]
[7.05922079 251.08587646]
[7.89401722 262.81610107]
[3.86073565 275.47097778]
[-0.46964359 289.83230591]
[-4.80002260 304.19363403]
[-9.13040161 318.55496216]
[-13.46078110 332.91629028]
[-17.79116058 347.27761841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 117]
[13 116]
[14 115]
[15 114]
[16 113]
[17 112]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[38 108]
[39 107]
[40 106]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[56 74]
[57 73]
[60 70]
[61 69]
[62 68]
[63 67]
[78 95]
[79 94]
[80 93]
[81 92]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
