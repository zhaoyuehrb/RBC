%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGCUGGGGGCAGCGUGGAGCCACCCAGUGCUCGGCCCGCCCCGCAACCCGCCGGAACCGCCGCCCGCAGCGAGGAAGCGCCCGCGCGGGCGCAGGCGGCCGGA\
) } def
/len { sequence length } bind def

/coor [
[-4.04470158 183.07565308]
[-6.90337467 182.32620239]
[-19.96653366 189.69871521]
[-33.02969360 197.07121277]
[-46.09285355 204.44372559]
[-59.15601349 211.81622314]
[-72.21916962 219.18873596]
[-85.28233337 226.56124878]
[-98.34548950 233.93374634]
[-111.40865326 241.30625916]
[-124.36217499 248.86973572]
[-137.20327759 256.62255859]
[-150.04437256 264.37536621]
[-151.22976685 279.84710693]
[-161.30844116 291.64541626]
[-176.40495300 295.23358154]
[-190.71438599 289.23190308]
[-198.73445129 275.94815063]
[-197.38128662 260.49020386]
[-187.17521667 248.80192566]
[-172.04066467 245.37773132]
[-157.79719543 251.53427124]
[-144.95608521 243.78146362]
[-132.11499023 236.02864075]
[-127.95008850 229.77879333]
[-118.78115845 228.24310303]
[-105.71799469 220.87059021]
[-92.65483856 213.49809265]
[-79.59168243 206.12557983]
[-66.52851868 198.75306702]
[-53.46535873 191.38056946]
[-40.40220261 184.00805664]
[-27.33904076 176.63554382]
[-14.27588177 169.26304626]
[-1.66791296 161.13659668]
[10.44140339 152.28422546]
[22.55071831 143.43185425]
[34.66003418 134.57948303]
[46.76935196 125.72711182]
[50.36832047 119.13511658]
[59.36661530 116.79880524]
[71.73058319 108.30573273]
[84.09455872 99.81266785]
[89.88562775 85.97563171]
[87.25681305 71.20778656]
[84.62799835 56.43993759]
[81.78268433 41.71227264]
[69.20400238 31.75454330]
[69.29067230 15.71172523]
[81.97621155 5.89049149]
[97.52935791 9.82485390]
[104.01906586 24.49670601]
[96.46698761 38.65105820]
[100.98424530 44.65117264]
[99.39585114 53.81112289]
[102.02466583 68.57897186]
[104.65348053 83.34681702]
[109.23684692 69.06421661]
[123.53474426 64.52877808]
[135.51281738 73.55792999]
[135.08930969 88.55194855]
[122.62056732 96.89058685]
[137.54144287 95.35186005]
[145.91004944 91.30290222]
[152.92198181 93.99359894]
[167.88157654 92.89356232]
[182.84118652 91.79352570]
[197.80079651 90.69348907]
[212.76040649 89.59345245]
[227.72001648 88.49341583]
[236.20388794 84.69187164]
[243.13380432 87.58725739]
[258.11926270 86.92684937]
[273.10470581 86.26644897]
[281.69653320 82.71560669]
[288.53845215 85.81317902]
[303.53683472 85.59297943]
[315.69979858 75.13153076]
[331.43490601 78.25976562]
[338.67153931 92.57795715]
[331.85836792 107.10242462]
[316.22186279 110.69123840]
[303.75704956 100.59136200]
[288.75863647 100.81156158]
[273.76510620 101.25190735]
[258.77966309 101.91230774]
[243.79420471 102.57270813]
[228.82005310 103.45302582]
[213.86044312 104.55306244]
[198.90083313 105.65309906]
[183.94122314 106.75313568]
[168.98162842 107.85317230]
[154.02201843 108.95320892]
[139.08016968 110.27273560]
[124.15929413 111.81145477]
[105.77703094 119.74593353]
[92.58762360 112.17663574]
[80.22365570 120.66970825]
[67.85968018 129.16278076]
[55.62172318 137.83642578]
[43.51240540 146.68879700]
[31.40308952 155.54116821]
[19.29377365 164.39353943]
[7.18445778 173.24591064]
[5.46531820 177.63214111]
[2.65753484 180.83294678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 24]
[12 23]
[13 22]
[35 104]
[36 103]
[37 102]
[38 101]
[39 100]
[41 99]
[42 98]
[43 97]
[44 57]
[45 56]
[46 55]
[47 53]
[62 95]
[63 94]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[72 87]
[73 86]
[74 85]
[76 84]
[77 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
