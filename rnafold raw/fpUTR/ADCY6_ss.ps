%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGGUAGAGGGCGGCUGCGCUGGACAGCUCGGGAGGGGGCGAGGGCCGGGCGGACGGCGGACGGCGGACGGCGGGCGGGACGGCCAGGACGCGCGGGCUCGGAGGACCGCGGGACGGCCGGCCGGCCGGCCGGAGCCCGCGGGGGCGGCGGGGCGGGGGCCCAGGGCAGGCGCGGAGCCGGGCCGGCAGCAAC\
) } def
/len { sequence length } bind def

/coor [
[101.09640503 156.81913757]
[95.02465057 170.53532410]
[88.95290375 184.25151062]
[82.88114929 197.96769714]
[84.37015533 213.71868896]
[72.14328003 222.22473145]
[66.07153320 235.94091797]
[59.99978256 249.65710449]
[53.92803192 263.37329102]
[60.97510910 277.33297729]
[57.35006332 292.54458618]
[44.76453400 301.82568359]
[29.16102219 300.79397583]
[17.90702629 289.93664551]
[16.31634331 274.38018799]
[25.14004326 261.46984863]
[40.21184540 257.30154419]
[46.28359222 243.58535767]
[52.35534286 229.86917114]
[58.42709351 216.15298462]
[56.50379562 201.38307190]
[69.16496277 191.89595032]
[75.23670959 178.17976379]
[81.30846405 164.46357727]
[87.38021088 150.74739075]
[82.03457642 145.48675537]
[67.57727814 149.48506165]
[71.34331512 134.96549988]
[65.99768066 129.70486450]
[52.38057327 135.99568176]
[38.76346207 142.28648376]
[25.14635277 148.57730103]
[19.92400169 163.49382019]
[5.64762974 170.27325439]
[-9.21284389 164.89349365]
[-15.84096336 150.54624939]
[-10.30438423 135.74348450]
[4.11214018 129.26741028]
[18.85554123 134.96018982]
[32.47265244 128.66938782]
[46.08976364 122.37857056]
[59.70687103 116.08776093]
[61.07126999 102.56703186]
[66.42089844 91.49083710]
[74.39118195 83.86557770]
[83.42613220 80.10401154]
[77.57500458 66.29226685]
[71.72387695 52.48052216]
[65.87274933 38.66877747]
[60.02161789 24.85703278]
[54.17048645 11.04528809]
[41.66300583 1.35645413]
[43.82278824 -13.38073063]
[37.97165680 -27.19247437]
[23.59738350 -33.19396973]
[17.86026001 -47.28439713]
[23.67035294 -60.95108414]
[11.16287136 -70.63992310]
[13.32265186 -85.37710571]
[7.47152233 -99.18885040]
[1.62039328 -113.00059509]
[-4.23073578 -126.81233978]
[-24.54651451 -120.48571777]
[-48.77064514 -137.45462036]
[-56.75112534 -150.15547180]
[-64.83313751 -162.79197693]
[-73.01615906 -175.36329651]
[-81.19918823 -187.93461609]
[-96.40328979 -191.32179260]
[-104.52295685 -204.18746948]
[-101.20009613 -218.66139221]
[-109.48361206 -231.16673279]
[-117.86707306 -243.60528564]
[-126.25053406 -256.04382324]
[-140.37947083 -263.16308594]
[-141.07666016 -278.04135132]
[-156.63546753 -280.81610107]
[-165.60650635 -293.82748413]
[-162.66743469 -309.35607910]
[-149.56193542 -318.18905640]
[-134.06527710 -315.08596802]
[-125.37135315 -301.88781738]
[-128.63810730 -286.42483521]
[-115.10881805 -280.19525146]
[-113.81198883 -264.42730713]
[-105.42852020 -251.98873901]
[-97.04505920 -239.55018616]
[-90.69179535 -235.75590515]
[-88.62877655 -226.84442139]
[-74.04860687 -224.02407837]
[-65.57077789 -211.39154053]
[-68.62786102 -196.11764526]
[-60.44483948 -183.54632568]
[-52.26181793 -170.97500610]
[-45.97018051 -167.07937622]
[-44.05026245 -158.13595581]
[-36.06978226 -145.43508911]
[-28.68605614 -146.75061035]
[-23.58115768 -160.85522461]
[-13.91860199 -149.38163757]
[-6.53487492 -150.69714355]
[-3.43187952 -165.37268066]
[-9.02781296 -180.78753662]
[1.72956455 -193.16537476]
[17.77398491 -189.77294922]
[22.60032463 -174.10008240]
[11.24365902 -162.26969910]
[8.14066315 -147.59414673]
[9.58100891 -132.66346741]
[15.43213749 -118.85172272]
[21.28326797 -105.03997803]
[27.13439560 -91.22823334]
[39.22336578 -82.52730560]
[37.48209763 -66.80221558]
[51.34153366 -61.46821213]
[57.47216415 -47.54449081]
[51.78340149 -33.04360580]
[57.63453293 -19.23185921]
[69.72350311 -10.53093433]
[67.98223114 5.19415903]
[73.83335876 19.00590324]
[79.68449402 32.81764984]
[85.53562164 46.62939072]
[91.38674927 60.44113541]
[97.23787689 74.25288391]
[132.04974365 86.85556793]
[126.99449158 133.96540833]
[141.07151794 139.14588928]
[155.14854431 144.32637024]
[169.22557068 149.50683594]
[183.30259705 154.68731689]
[197.37962341 159.86779785]
[211.45664978 165.04826355]
[227.07986450 162.55316162]
[236.35182190 174.20991516]
[245.49894714 174.23822021]
[250.61183167 179.58789062]
[264.60403442 184.99331665]
[278.63906860 190.28645325]
[292.71609497 195.46691895]
[306.79312134 200.64739990]
[320.87014771 205.82788086]
[334.94717407 211.00834656]
[347.82156372 202.54922485]
[363.03054810 203.28436279]
[374.75170898 212.72248840]
[378.62142944 227.08087158]
[392.69845581 232.26135254]
[403.55715942 223.75994873]
[417.09167480 221.75328064]
[429.74795532 226.66007996]
[438.25595093 237.09774780]
[440.47424316 250.26986694]
[454.46643066 255.67530823]
[468.45861816 261.08074951]
[482.45080566 266.48617554]
[498.56118774 263.42218018]
[509.06347656 276.01715088]
[503.15383911 291.31448364]
[486.91159058 293.57757568]
[477.04537964 280.47836304]
[463.05319214 275.07293701]
[449.06100464 269.66748047]
[435.06881714 264.26205444]
[421.58102417 273.60925293]
[405.01345825 273.07431030]
[391.89642334 262.67007446]
[387.51797485 246.33837891]
[373.44094849 241.15789795]
[361.18685913 249.58256531]
[346.14373779 249.17120361]
[334.08639526 239.87207031]
[329.76672363 225.08537292]
[315.68969727 219.90490723]
[301.61267090 214.72442627]
[287.53564453 209.54394531]
[273.45861816 204.36347961]
[266.08639526 205.00456238]
[259.19857788 198.98550415]
[245.20640564 193.58007812]
[231.17134094 188.28694153]
[216.55500793 191.15260315]
[206.27618408 179.12528992]
[192.19915771 173.94482422]
[178.12213135 168.76434326]
[164.04510498 163.58386230]
[149.96807861 158.40339661]
[135.89105225 153.22291565]
[121.81401825 148.04243469]
[135.41563416 154.36669922]
[142.29995728 167.69358826]
[139.58602905 182.44602966]
[128.40956116 192.45036316]
[113.44774628 193.51994324]
[100.96184540 185.20715332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[6 20]
[7 19]
[8 18]
[9 17]
[29 42]
[30 41]
[31 40]
[32 39]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[53 118]
[54 117]
[57 114]
[59 112]
[60 111]
[61 110]
[62 109]
[64 97]
[65 96]
[66 94]
[67 93]
[68 92]
[71 89]
[72 87]
[73 86]
[74 85]
[76 83]
[101 108]
[102 107]
[127 189]
[128 188]
[129 187]
[130 186]
[131 185]
[132 184]
[133 183]
[135 181]
[137 180]
[138 179]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[147 169]
[148 168]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
