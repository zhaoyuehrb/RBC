%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCACACUCACGUGGUUGGGGCCAUUCAGGGCUGUGGGUCCCAUGUGGACUGGAUGCCCAGCGUGAGUGUAUACCGUGAGGGCCUUUGAGCUCUCGGACAGCGUGGAGUGGUCAAGGGAGGCCUCCAGGAGGAAGAGGUGGCCAACCGCCCCAGGCAGCACAGUGGUCUUGAAGCGGCGGCCCUGCUCCUGGCCGUGACC\
) } def
/len { sequence length } bind def

/coor [
[96.04220581 176.41481018]
[95.34604645 161.43096924]
[94.64988708 146.44714355]
[80.71701050 142.59257507]
[68.62763977 134.66606140]
[59.53752899 123.42539215]
[45.51862717 128.76115417]
[31.49972725 134.09692383]
[17.48082542 139.43269348]
[3.46192336 144.76844788]
[-10.55697823 150.10421753]
[-24.57588005 155.43998718]
[-38.59477997 160.77575684]
[-52.61368179 166.11152649]
[-66.63258362 171.44728088]
[-69.93524170 175.50599670]
[-74.05380249 177.67121887]
[-78.12867737 177.94963074]
[-81.42794037 176.68873596]
[-95.67937469 181.36813354]
[-109.93080139 186.04751587]
[-124.18223572 190.72689819]
[-128.87542725 195.39836121]
[-134.39495850 196.78526306]
[-138.94764709 195.32318115]
[-153.33706665 199.55928040]
[-167.72648621 203.79539490]
[-182.11590576 208.03150940]
[-196.50532532 212.26762390]
[-210.89474487 216.50373840]
[-225.28416443 220.73983765]
[-232.88740540 234.33500671]
[-247.54066467 238.42604065]
[-260.45471191 231.09373474]
[-274.81094360 235.44105530]
[-289.13305664 239.89933777]
[-303.45520020 244.35762024]
[-317.77734375 248.81590271]
[-332.09948730 253.27420044]
[-345.42575073 263.75497437]
[-359.18603516 253.85089111]
[-353.47821045 237.88664246]
[-336.55776978 238.95205688]
[-322.23562622 234.49377441]
[-307.91348267 230.03549194]
[-293.59136963 225.57720947]
[-279.26922607 221.11891174]
[-273.81350708 216.12606812]
[-264.69082642 216.70431519]
[-257.80950928 203.54441833]
[-243.27691650 199.04341125]
[-229.52027893 206.35043335]
[-215.13085938 202.11431885]
[-200.74143982 197.87820435]
[-186.35202026 193.64208984]
[-171.96260071 189.40597534]
[-157.57318115 185.16986084]
[-143.18376160 180.93376160]
[-128.86161804 176.47547913]
[-114.61019135 171.79608154]
[-100.35875702 167.11669922]
[-86.10733032 162.43731689]
[-71.96835327 157.42839050]
[-57.94944763 152.09262085]
[-43.93054581 146.75685120]
[-29.91164589 141.42108154]
[-15.89274406 136.08532715]
[-1.87384248 130.74955750]
[12.14505959 125.41378784]
[26.16396141 120.07802582]
[40.18286133 114.74225616]
[54.20176315 109.40649414]
[54.33187485 89.98088074]
[62.34585571 72.28491974]
[76.86022186 59.37351608]
[95.36930084 53.47562790]
[96.29725647 38.50436020]
[86.11231232 26.71858025]
[87.26666260 11.54880428]
[98.56536865 1.91164422]
[99.49332428 -13.05962467]
[100.42127991 -28.03089333]
[101.34923553 -43.00216293]
[91.56030273 -60.61950684]
[102.92050934 -76.26206970]
[103.38471222 -91.25488281]
[103.84890747 -106.24769592]
[104.31311035 -121.24051666]
[104.77731323 -136.23332214]
[105.24150848 -151.22615051]
[105.70571136 -166.21896362]
[98.39918518 -180.25196838]
[106.52664948 -192.73370361]
[99.22012329 -206.76670837]
[107.34758759 -219.24844360]
[107.81179047 -234.24125671]
[108.27598572 -249.23406982]
[100.96946716 -263.26708984]
[109.09692383 -275.74880981]
[98.09153748 -287.09152222]
[98.41358948 -302.89251709]
[109.87200928 -313.77737427]
[125.66873169 -313.28826904]
[136.43182373 -301.71542358]
[135.77575684 -285.92474365]
[124.08974457 -275.28460693]
[131.42947388 -262.32397461]
[123.26880646 -248.76986694]
[122.80460358 -233.77705383]
[122.34040070 -218.78424072]
[129.68013000 -205.82362366]
[121.51946259 -192.26950073]
[128.85919189 -179.30888367]
[120.69852448 -165.75476074]
[120.23432922 -150.76194763]
[119.77012634 -135.76913452]
[119.30592346 -120.77631378]
[118.84172821 -105.78350067]
[118.37752533 -90.79067993]
[117.91332245 -75.79786682]
[125.55814362 -69.00597382]
[128.25585938 -58.91459656]
[124.88124847 -48.79715347]
[116.32050323 -42.07420731]
[115.39254761 -27.10293770]
[114.46459198 -12.13166809]
[113.53663635 2.83960080]
[123.55876160 13.79827881]
[122.83095551 28.99449348]
[111.26853180 39.43231583]
[110.34057617 54.40358353]
[116.95864868 55.82051086]
[123.37984467 58.20389557]
[129.46226501 61.52584457]
[135.06806946 65.73754120]
[140.06657410 70.76984406]
[144.33720398 76.53434753]
[147.77241516 82.92490387]
[150.28025818 89.81953430]
[164.95407104 86.70842743]
[179.62789917 83.59732056]
[194.30171204 80.48621368]
[208.97554016 77.37510681]
[220.79965210 66.01190186]
[236.47517395 70.82958221]
[239.87648010 86.87212372]
[227.50457764 97.63634491]
[212.08663940 92.04892731]
[197.41282654 95.16003418]
[182.73899841 98.27114105]
[168.06518555 101.38224792]
[153.39135742 104.49335480]
[150.05354309 119.11727142]
[161.92434692 128.28701782]
[173.79513550 137.45675659]
[185.66593933 146.62649536]
[197.53674316 155.79623413]
[206.24723816 158.56838989]
[209.51882935 165.20088196]
[221.24630737 174.55323792]
[232.97377014 183.90557861]
[244.70124817 193.25793457]
[260.19812012 191.68161011]
[271.95822144 201.33328247]
[273.36547852 216.11689758]
[285.09295654 225.46923828]
[300.70648193 228.02424622]
[305.83294678 242.00883484]
[317.56042480 251.36117554]
[329.28790283 260.71353149]
[344.57855225 257.43786621]
[358.37313843 264.80285645]
[364.15832520 279.33096313]
[359.20245361 294.16244507]
[345.84558105 302.29437256]
[330.39440918 299.88705444]
[320.14450073 288.07717896]
[319.93554688 272.44100952]
[308.20806885 263.08865356]
[296.48059082 253.73631287]
[281.70590210 251.85025024]
[275.74060059 237.19671631]
[264.01315308 227.84437561]
[249.28703308 229.76203918]
[237.26048279 220.44448853]
[235.34889221 204.98539734]
[223.62142944 195.63305664]
[211.89395142 186.28070068]
[200.16648865 176.92835999]
[188.36698914 167.66703796]
[176.49620056 158.49729919]
[164.62539673 149.32756042]
[152.75460815 140.15780640]
[140.88380432 130.98806763]
[131.45892334 138.58618164]
[120.81142426 143.55281067]
[109.63372040 145.75097656]
[110.32987976 160.73481750]
[111.02604675 175.71864319]
[120.32662964 189.22535706]
[113.03639984 203.91496277]
[96.65492249 204.67607117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[6 72]
[7 71]
[8 70]
[9 69]
[10 68]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[19 62]
[20 61]
[21 60]
[22 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[34 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[76 131]
[77 130]
[80 127]
[81 126]
[82 125]
[83 124]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[93 112]
[95 110]
[96 109]
[97 108]
[99 106]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[153 194]
[154 193]
[155 192]
[156 191]
[157 190]
[159 189]
[160 188]
[161 187]
[162 186]
[165 183]
[166 182]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
