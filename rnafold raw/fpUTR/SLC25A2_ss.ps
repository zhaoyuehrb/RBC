%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGGCGGCCCGCGGCGGAGCGUAGGGUUGAGCGGCUUCCCCCGCACUGGGGUGAGAGCCCAGAACAGGCGGUAGAGCCACCCCACCACCCCCAACUCCAUUCCCCGCGCUCGCUGCGGCUGGACGUGAAAAGCCGGUCUCACGCUCUGGGGAGUUAGUCGCCUUCCACUGGGACCCUCAGACGAGUGAGCGAAC\
) } def
/len { sequence length } bind def

/coor [
[-85.95174408 87.76829529]
[-100.92885590 86.93991089]
[-115.90596008 86.11151886]
[-130.89848328 85.63799286]
[-145.89802551 85.51959229]
[-160.89755249 85.40119171]
[-175.89707947 85.28279114]
[-190.89662170 85.16439056]
[-204.40380859 91.68788147]
[-213.63665771 103.50965881]
[-222.86949158 115.33144379]
[-232.10234070 127.15322113]
[-241.33518982 138.97500610]
[-250.56803894 150.79678345]
[-259.70730591 162.69107056]
[-268.75238037 174.65713501]
[-277.79745483 186.62319946]
[-275.37329102 202.24046326]
[-284.76953125 214.94818115]
[-300.41152954 217.20709229]
[-313.01919556 207.67703247]
[-315.11260986 192.01200867]
[-305.44979858 179.50579834]
[-289.76351929 177.57812500]
[-280.71841431 165.61206055]
[-271.67333984 153.64599609]
[-270.14633179 146.40725708]
[-262.38983154 141.56393433]
[-253.15698242 129.74215698]
[-243.92413330 117.92037201]
[-234.69128418 106.09859467]
[-225.45843506 94.27680969]
[-216.22558594 82.45503235]
[-218.44163513 75.28989410]
[-233.06813049 71.96337891]
[-222.87373352 60.95963287]
[-225.08978271 53.79450226]
[-239.38461304 49.24942398]
[-253.67945862 44.70434570]
[-267.97427368 40.15926743]
[-282.26913452 35.61418915]
[-293.44464111 43.14285660]
[-306.72189331 42.86138535]
[-317.25485229 35.09675598]
[-321.32821655 22.86631012]
[-335.54953003 18.09613609]
[-349.77084351 13.32596397]
[-363.99212646 8.55579090]
[-373.13354492 8.79290962]
[-378.39926147 3.59643722]
[-392.54348755 -1.39764225]
[-406.68771362 -6.39172173]
[-420.98254395 -10.93679905]
[-435.41372681 -15.02834511]
[-449.84490967 -19.11989021]
[-464.27612305 -23.21143532]
[-480.03512573 -18.67425728]
[-491.65457153 -30.24665260]
[-487.18136597 -46.02393341]
[-471.21716309 -49.77578735]
[-460.18457031 -37.64262390]
[-445.75338745 -33.55107880]
[-431.32217407 -29.45953560]
[-416.89099121 -25.36799049]
[-414.37451172 -26.62408066]
[-411.20651245 -26.95404816]
[-407.73901367 -26.10382462]
[-404.40985107 -23.95203590]
[-401.69363403 -20.53594971]
[-387.54940796 -15.54187012]
[-373.40518188 -10.54779053]
[-359.22195435 -5.66551161]
[-345.00067139 -0.89533865]
[-330.77935791 3.87483430]
[-316.55804443 8.64500713]
[-301.84082031 0.51523435]
[-285.47375488 5.64143181]
[-277.72402954 21.31935692]
[-263.42919922 25.86443520]
[-249.13436890 30.40951157]
[-234.83953857 34.95458984]
[-220.54470825 39.49966812]
[-217.37904358 24.83752060]
[-207.80447388 13.29076958]
[-193.98184204 7.46538639]
[-179.03077698 8.67609215]
[-166.32557678 16.64964485]
[-158.73362732 29.58650398]
[-157.96835327 44.56697083]
[-164.20248413 58.21012497]
[-176.02903748 67.43685913]
[-190.77821350 70.16485596]
[-175.77868652 70.28325653]
[-160.77914429 70.40165710]
[-145.77961731 70.52005768]
[-130.78009033 70.63845825]
[-128.01972961 68.42983246]
[-124.04920959 67.45373535]
[-119.46193695 68.26576996]
[-115.07756805 71.13440704]
[-100.10046387 71.96279907]
[-85.12335205 72.79119110]
[-80.67784119 62.65327835]
[-73.33601379 54.33298492]
[-63.78451920 48.63299179]
[-52.92417526 46.10977173]
[-41.78503036 47.01928711]
[-31.42864990 51.29113770]
[-22.84696579 58.53371811]
[-16.86726379 68.07006073]
[-14.07245064 79.00109100]
[0.82252955 80.77297211]
[15.71751022 82.54484558]
[30.61248970 84.31672668]
[45.50746918 86.08860779]
[60.40245056 87.86048889]
[75.29743195 89.63236237]
[90.19241333 91.40424347]
[104.82753754 88.11592102]
[112.40381622 74.22669983]
[127.29692078 74.01513672]
[140.00228882 66.04181671]
[152.70764160 58.06849670]
[165.41300964 50.09518051]
[178.11836243 42.12186050]
[190.82373047 34.14854050]
[196.43611145 26.92895126]
[203.79318237 26.15147400]
[206.00492859 10.67109108]
[217.68424988 0.27266207]
[233.31654358 -0.13399437]
[245.52072144 9.64313316]
[248.53433228 24.98758316]
[240.93444824 38.65417862]
[226.30949402 44.18996429]
[211.56494141 38.98112106]
[198.79704285 46.85390091]
[186.09169006 54.82722092]
[173.38632202 62.80054092]
[160.68096924 70.77385712]
[147.97560120 78.74717712]
[135.27024841 86.72049713]
[128.60273743 100.03941345]
[112.80085754 100.82128143]
[112.86006165 108.32104492]
[113.03765869 130.82034302]
[125.86730194 138.59210205]
[134.83831787 140.36474609]
[138.83677673 146.58917236]
[151.54212952 154.56248474]
[164.24749756 162.53581238]
[176.95285034 170.50912476]
[189.65821838 178.48245239]
[202.36357117 186.45576477]
[215.06893921 194.42907715]
[214.37501526 179.44514465]
[225.54977417 169.43890381]
[240.36645508 171.77688599]
[247.91712952 184.73788452]
[242.64306641 198.78010559]
[228.42681885 203.56578064]
[240.46389771 212.51612854]
[252.50099182 221.46647644]
[261.26412964 224.07963562]
[264.65594482 230.65434265]
[276.55023193 239.79359436]
[291.77929688 236.24259949]
[305.70452881 243.35751343]
[311.75085449 257.77886963]
[307.06338501 272.69738770]
[293.85540771 281.06893921]
[278.36331177 278.94079590]
[267.90200806 267.31774902]
[267.41098022 251.68788147]
[255.51670837 242.54862976]
[243.55064392 233.50355530]
[231.51356506 224.55320740]
[219.47647095 215.60287476]
[207.09561157 207.13444519]
[194.39025879 199.16113281]
[181.68489075 191.18780518]
[168.97953796 183.21449280]
[156.27416992 175.24116516]
[143.56881714 167.26785278]
[130.86344910 159.29452515]
[118.09555054 151.42175293]
[105.26590729 143.64999390]
[88.42053223 106.29922485]
[73.52555084 104.52734375]
[58.63057327 102.75547028]
[43.73559189 100.98358917]
[28.84061050 99.21170807]
[13.94563103 97.43982697]
[-0.94934964 95.66795349]
[-15.84432983 93.89607239]
[-26.67451668 109.77337646]
[-43.99033737 117.92270660]
[-62.96498108 116.16403198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 26]
[16 25]
[17 24]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[45 75]
[46 74]
[47 73]
[48 72]
[50 71]
[51 70]
[52 69]
[53 64]
[54 63]
[55 62]
[56 61]
[111 195]
[112 194]
[113 193]
[114 192]
[115 191]
[116 190]
[117 189]
[118 188]
[119 144]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[128 136]
[146 187]
[147 186]
[149 185]
[150 184]
[151 183]
[152 182]
[153 181]
[154 180]
[155 179]
[161 178]
[162 177]
[163 176]
[165 175]
[166 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
