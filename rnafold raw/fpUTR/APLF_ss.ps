%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAGCUGCGCUGGGGCCGGGCUCUGAGAGGACCGGCGCAGCCGCGGGGAGCCUUUGAGGCCCUCCCUCGGUGUUUUUUCCCAGGGCGUGGGCUUGCCCCGCGCGUGUCUGUGGAGGGCGGAAACAGCGGAGGGGCCAGUCUCCUGGCGAAGGGGCCUAAUCCUUGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-100.74350739 320.81994629]
[-105.03948212 326.08349609]
[-110.71864319 329.71774292]
[-117.19765472 331.38760376]
[-123.82276154 330.95785522]
[-129.93579102 328.50350952]
[-141.54167175 338.00631714]
[-153.14756775 347.50912476]
[-164.75344849 357.01193237]
[-176.35934448 366.51473999]
[-187.96522522 376.01754761]
[-199.57110596 385.52035522]
[-211.17700195 395.02316284]
[-222.78288269 404.52597046]
[-234.38877869 414.02877808]
[-236.44993591 426.78408813]
[-246.34123230 434.45874023]
[-258.40939331 433.35830688]
[-270.18493652 442.65005493]
[-267.31112671 457.68331909]
[-271.76388550 472.32681274]
[-282.52005005 483.21551514]
[-297.10787964 487.84729004]
[-312.17523193 485.15780640]
[-324.25973511 475.76507568]
[-330.58447266 461.82748413]
[-329.69604492 446.54779053]
[-321.79858398 433.43713379]
[-308.70690918 425.50827026]
[-293.42938232 424.58319092]
[-279.47668457 430.87448120]
[-267.70111084 421.58276367]
[-262.11361694 404.96258545]
[-243.89158630 402.42288208]
[-232.28569031 392.92007446]
[-220.67980957 383.41726685]
[-209.07392883 373.91445923]
[-197.46803284 364.41165161]
[-185.86215210 354.90884399]
[-174.25625610 345.40603638]
[-162.65037537 335.90322876]
[-151.04447937 326.40042114]
[-139.43859863 316.89761353]
[-133.96742249 294.41867065]
[-110.46765900 290.32806396]
[-99.95724487 279.62615967]
[-89.44682312 268.92422485]
[-78.93640137 258.22232056]
[-68.42598724 247.52038574]
[-65.02832031 233.01849365]
[-49.83834839 228.59408569]
[-39.32793045 217.89216614]
[-44.66852951 205.06854248]
[-44.71189880 191.13397217]
[-39.41838074 178.19709778]
[-29.55842590 168.22817993]
[-16.60061455 162.75907898]
[-2.49298811 162.64791870]
[10.62980843 167.94461060]
[21.33172798 157.43418884]
[32.03364944 146.92376709]
[42.73556900 136.41336060]
[53.43748856 125.90293884]
[64.13941193 115.39251709]
[74.84133148 104.88209534]
[95.77770996 76.88907623]
[102.80384064 63.63639450]
[109.82996368 50.38371277]
[116.85609436 37.13103104]
[123.88221741 23.87835121]
[130.78842163 10.56278229]
[130.13104248 -5.24476099]
[142.78894043 -13.09504890]
[149.57464600 -26.47241974]
[156.36036682 -39.84979248]
[163.14608765 -53.22716141]
[169.93179321 -66.60453796]
[176.71751404 -79.98190308]
[183.01585388 -93.59553528]
[188.81858826 -107.42768097]
[194.62133789 -121.25981903]
[200.42408752 -135.09196472]
[206.10173035 -148.97592163]
[211.65379333 -162.91056824]
[217.20587158 -176.84523010]
[222.75794983 -190.77987671]
[227.93063354 -204.85977173]
[232.72015381 -219.07455444]
[237.50968933 -233.28935242]
[242.29920959 -247.50415039]
[247.08872986 -261.71896362]
[251.87825012 -275.93374634]
[256.66778564 -290.14855957]
[250.85649109 -305.10211182]
[259.04858398 -318.89590454]
[274.95977783 -320.94854736]
[286.38436890 -309.68539429]
[284.55838013 -293.74661255]
[270.88256836 -285.35903931]
[266.09304810 -271.14422607]
[261.30352783 -256.92944336]
[256.51400757 -242.71463013]
[251.72448730 -228.49983215]
[246.93495178 -214.28503418]
[242.14543152 -200.07023621]
[243.40145874 -196.74066162]
[243.08586121 -192.63212585]
[240.84808350 -188.49987793]
[236.69259644 -185.22779846]
[231.14051819 -171.29315186]
[225.58845520 -157.35850525]
[220.03637695 -143.42385864]
[220.48318481 -136.02056885]
[214.25622559 -129.28921509]
[208.45347595 -115.45707703]
[202.65074158 -101.62493134]
[196.84799194 -87.79279327]
[197.81259155 -85.12574768]
[197.76016235 -81.90965271]
[196.47380066 -78.53689575]
[193.88508606 -75.47180176]
[190.09487915 -73.19618988]
[183.30917358 -59.81882095]
[176.52345276 -46.44144821]
[169.73773193 -33.06407547]
[162.95202637 -19.68670464]
[156.16630554 -6.30933380]
[157.30905151 8.54137039]
[144.16578674 17.34849739]
[143.94334412 24.76190948]
[137.13490295 30.90447807]
[130.10877991 44.15715790]
[123.08264923 57.40983963]
[116.05651855 70.66252136]
[109.03039551 83.91519928]
[113.81991577 98.12999725]
[127.43354797 104.42833710]
[141.04718018 110.72666931]
[154.66081238 117.02500916]
[168.27444458 123.32334137]
[184.54913330 121.30683136]
[194.21557617 134.55416870]
[187.32975769 149.43763733]
[170.97520447 150.64639282]
[161.97610474 136.93698120]
[148.36247253 130.63864136]
[134.74884033 124.34030151]
[121.13520813 118.04196930]
[107.52157593 111.74362946]
[111.53311920 126.19726562]
[100.33771515 136.18038940]
[86.43623352 130.54576111]
[85.35174561 115.58401489]
[74.64982605 126.09443665]
[63.94790649 136.60485840]
[53.24598694 147.11528015]
[42.54406738 157.62568665]
[31.84214783 168.13610840]
[21.14022827 178.64653015]
[26.49776840 193.99258423]
[24.64165497 210.08212280]
[15.99294853 223.70707703]
[2.32197642 232.17297363]
[-13.61381912 233.83181763]
[-28.62600899 228.40258789]
[-39.13642883 239.10450745]
[-43.28586960 254.37187195]
[-57.72406387 258.03082275]
[-68.23448181 268.73272705]
[-78.74490356 279.43466187]
[-89.25532532 290.13656616]
[-99.76573944 300.83850098]
[-97.93560791 307.54244995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[18 32]
[19 31]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[51 166]
[52 165]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 129]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[79 117]
[80 116]
[81 115]
[82 114]
[83 112]
[84 111]
[85 110]
[86 109]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
