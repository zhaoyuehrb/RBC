%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGUUUACCUGGCACUCAGGUGAGUGGUGCGCUCUGGCUGUUUUCUGUCGGAGCCGCCCGCCUCUUCCUUCAGCGCGUCCCACAAAUCCCGACGGCACGGAGGGGCCCCAGGCCAAGGGCGAUGGGCCCCUGAGCCCUGACACCGCUUCGCCGCUGCUGCAGGUGCCCCUGGCCGGCAGCGCCGCCGUGGUCCCGGAGCGCGGCGAC\
) } def
/len { sequence length } bind def

/coor [
[158.47795105 172.15086365]
[158.57695007 156.74642944]
[146.57493591 147.74909973]
[134.57293701 138.75177002]
[122.57093811 129.75444031]
[110.56893158 120.75711823]
[95.94501495 124.09493256]
[89.03537750 137.40872192]
[82.12574005 150.72250366]
[75.21610260 164.03630066]
[68.30646515 177.35008240]
[61.39682770 190.66386414]
[54.48719406 203.97766113]
[57.94022751 219.64469910]
[47.73260498 232.02143860]
[31.69474030 231.61352539]
[22.12950897 218.73385620]
[26.37453842 203.26261902]
[41.17340469 197.06802368]
[48.08304214 183.75422668]
[54.99267960 170.44044495]
[61.90231705 157.12666321]
[68.81195068 143.81286621]
[75.72158813 130.49908447]
[82.63122559 117.18529510]
[73.19142151 105.52810669]
[65.75087738 110.82817078]
[58.48578262 109.46846771]
[43.96826172 113.24227142]
[29.45073891 117.01607513]
[14.93321800 120.78987885]
[7.41422367 125.97803497]
[0.17027910 124.50981140]
[-14.40207195 128.06600952]
[-28.97442245 131.62222290]
[-43.54677200 135.17842102]
[-58.11912155 138.73463440]
[-72.69147491 142.29083252]
[-87.26382446 145.84704590]
[-101.83617401 149.40324402]
[-107.59581757 163.81179810]
[-120.74250793 172.05461121]
[-136.22108459 170.96217346]
[-148.07971191 160.95454407]
[-151.75849915 145.87986755]
[-145.84289551 131.53465271]
[-132.60755920 123.43492889]
[-117.14174652 124.69521332]
[-105.39237976 134.83090210]
[-90.82003021 131.27468872]
[-76.24768066 127.71849060]
[-61.67532730 124.16228485]
[-47.10297775 120.60607910]
[-32.53062820 117.04987335]
[-17.95827675 113.49366760]
[-3.38592649 109.93746185]
[11.15941620 106.27235413]
[25.67693710 102.49855042]
[40.19445801 98.72475433]
[54.71197891 94.95095062]
[69.20086670 91.06866455]
[74.36629486 76.98610687]
[65.91649628 64.59252930]
[57.46669769 52.19894791]
[50.04624939 46.87078857]
[48.98481750 39.55616379]
[40.72136307 27.03756332]
[32.45790863 14.51896477]
[24.19445229 2.00036573]
[15.93099880 -10.51823330]
[4.04178619 -10.59043884]
[-6.23098469 -16.33436584]
[-12.39144993 -26.22192764]
[-13.00717163 -37.73529053]
[-8.04068756 -48.00762558]
[-15.92594337 -60.76782608]
[-23.09987259 -66.42353821]
[-23.83206558 -73.77841949]
[-31.52555466 -86.65515137]
[-39.21904373 -99.53188324]
[-46.91253281 -112.40861511]
[-62.19104385 -111.49993896]
[-76.13700104 -117.80619812]
[-85.54572296 -129.87825012]
[-88.25516510 -144.94203186]
[-83.64270020 -159.53599548]
[-72.76825714 -170.30656433]
[-58.13068771 -174.77871704]
[-43.09360504 -171.92480469]
[-31.11242294 -162.40063477]
[-24.94032669 -148.39479065]
[-25.99561882 -133.12570190]
[-34.03580093 -120.10210419]
[-26.34231186 -107.22537231]
[-18.64882278 -94.34864044]
[-10.95533371 -81.47190857]
[-3.16574287 -68.65308380]
[4.71951389 -55.89288330]
[22.75619316 -52.76662827]
[32.95546722 -37.18246460]
[28.44959641 -18.78168869]
[36.71305084 -6.26308918]
[44.97650528 6.25550985]
[53.23995972 18.77410889]
[61.50341797 31.29270744]
[69.86027527 43.74914551]
[78.31008148 56.14272690]
[86.75988007 68.53630829]
[95.71186066 72.31472778]
[101.98919678 78.19572449]
[105.19537354 85.10587311]
[114.01214600 72.97061920]
[122.82892609 60.83536530]
[131.64570618 48.70011139]
[140.37147522 36.49924469]
[148.91374207 24.16921425]
[157.36354065 11.77563286]
[158.74459839 -3.98518062]
[172.30697632 -10.14237022]
[180.75677490 -22.53595161]
[189.20657349 -34.92953491]
[197.65638733 -47.32311630]
[196.09860229 -63.29035950]
[207.71092224 -74.35984802]
[223.58535767 -72.04001617]
[231.54441833 -58.11044693]
[225.48257446 -43.25670242]
[210.04995728 -38.87331390]
[201.60015869 -26.47973251]
[193.15036011 -14.08615017]
[184.70056152 -1.69256890]
[183.92388916 13.18177319]
[169.75712585 20.22543335]
[161.30731201 32.61901474]
[160.13658142 39.91694641]
[152.63725281 45.13350296]
[151.35748291 52.41310120]
[143.78096008 57.51688766]
[134.96418762 69.65214539]
[126.14740753 81.78739929]
[117.33062744 93.92265320]
[119.56626129 108.75511932]
[131.56826782 117.75244141]
[143.57026672 126.74977112]
[155.57226562 135.74710083]
[167.57427979 144.74443054]
[182.33283997 140.32958984]
[196.69325256 145.39241028]
[205.21804810 157.79368591]
[204.81071472 172.65881348]
[216.81271362 181.65614319]
[228.81472778 190.65347290]
[240.81672668 199.65080261]
[252.81872559 208.64813232]
[264.82073975 217.64546204]
[276.82272339 226.64279175]
[285.56701660 229.28660583]
[288.93563843 235.86557007]
[300.80169678 245.04144287]
[312.66778564 254.21730042]
[328.31777954 256.53845215]
[333.65286255 270.44479370]
[342.35662842 273.21911621]
[345.62643433 279.84774780]
[357.35391235 289.20010376]
[372.96746826 291.75509644]
[378.09390259 305.73968506]
[389.82138062 315.09204102]
[401.54885864 324.44436646]
[414.43032837 323.77847290]
[424.00573730 331.81015015]
[425.49203491 343.81555176]
[437.07827759 353.34228516]
[448.66455078 362.86901855]
[460.25079346 372.39575195]
[468.86767578 375.42922974]
[471.93771362 382.15267944]
[483.38015747 391.85168457]
[494.82260132 401.55068970]
[510.81472778 407.17993164]
[509.83255005 424.10540771]
[493.29663086 427.84701538]
[485.12362671 412.99313354]
[473.68118286 403.29412842]
[462.23873901 393.59512329]
[450.72406006 383.98199463]
[439.13781738 374.45526123]
[427.55154419 364.92852783]
[415.96530151 355.40179443]
[398.52392578 353.46438599]
[392.19650269 336.17184448]
[380.46902466 326.81948853]
[368.74157715 317.46716309]
[353.96685791 315.58108521]
[348.00158691 300.92755127]
[336.27410889 291.57522583]
[324.47698975 282.31085205]
[309.67572021 280.64602661]
[303.49191284 266.08337402]
[291.62585449 256.90750122]
[279.75976562 247.73164368]
[267.82540894 238.64479065]
[255.82341003 229.64746094]
[243.82139587 220.65013123]
[231.81939697 211.65280151]
[219.81739807 202.65547180]
[207.81539917 193.65814209]
[195.81338501 184.66081238]
[181.65895081 189.22039795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[26 61]
[28 60]
[29 59]
[30 58]
[31 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[62 108]
[63 107]
[64 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[75 98]
[76 97]
[78 96]
[79 95]
[80 94]
[81 93]
[111 141]
[112 140]
[113 139]
[114 138]
[115 136]
[116 134]
[117 133]
[119 131]
[120 130]
[121 129]
[122 128]
[150 208]
[151 207]
[152 206]
[153 205]
[154 204]
[155 203]
[156 202]
[158 201]
[159 200]
[160 199]
[162 197]
[164 196]
[165 195]
[167 193]
[168 192]
[169 191]
[172 189]
[173 188]
[174 187]
[175 186]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
