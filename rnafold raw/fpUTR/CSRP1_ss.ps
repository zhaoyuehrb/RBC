%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUGACCCAGGGCGACCCGGCUCCCCGCAACCGCCUGCAAGUCGGGCAGAACAAUCGGCGAUUCUGCGCGCCACUGACGCUCAUUGUAUGGCAGAGAGAUGAGGGCAUCCGUGCCACCCCCUCCCUCACCCUCCUGCUGGGGAGAAAAUGCCCGCGGGCGGGGUGGGGCAAACAUCUGGGCCUGACCUUGGACAUCUGUGUCCCUGAGCGCAGA\
) } def
/len { sequence length } bind def

/coor [
[101.70163727 133.86567688]
[81.71932983 132.12559509]
[71.34446716 142.95898438]
[60.96960068 153.79235840]
[57.01268005 169.11076355]
[42.62168884 172.95115662]
[32.24682617 183.78454590]
[21.87196159 194.61791992]
[11.49709702 205.45130920]
[14.72916508 222.05654907]
[7.49690723 237.16542053]
[-7.16971827 244.90701294]
[-23.39603615 242.40451050]
[-33.61370850 253.38627625]
[-43.83138275 264.36804199]
[-54.04905319 275.34979248]
[-64.26673126 286.33157349]
[-60.79570770 302.88851929]
[-67.80948639 318.10003662]
[-82.36302948 326.05215454]
[-98.62372589 323.78375244]
[-108.68208313 334.91162109]
[-118.74044800 346.03948975]
[-121.64991760 362.17846680]
[-137.17089844 367.47293091]
[-149.33673096 356.47634888]
[-145.63224792 340.50109863]
[-129.86831665 335.98114014]
[-119.80995178 324.85327148]
[-109.75159454 313.72540283]
[-113.70235443 300.97564697]
[-110.81539917 287.83291626]
[-101.74008942 277.75177002]
[-88.76656342 273.43600464]
[-75.24848938 276.11389160]
[-65.03082275 265.13214111]
[-54.81314850 254.15036011]
[-44.59547424 243.16859436]
[-34.37779999 232.18682861]
[-38.14442825 219.38146973]
[-35.06837082 206.28169250]
[-25.84873009 196.33239746]
[-12.81436443 192.20402527]
[0.66371429 195.07644653]
[11.03857899 184.24305725]
[21.41344261 173.40968323]
[31.78830719 162.57629395]
[35.00314713 148.03277588]
[50.13621521 143.41749573]
[60.51108170 132.58410645]
[70.88594818 121.75073242]
[69.27730560 114.42527771]
[54.97870636 118.95848846]
[43.22675705 128.28005981]
[29.09557724 123.24917603]
[25.87812233 108.59831238]
[36.60099792 98.10926819]
[51.17765427 101.64916992]
[66.06002808 99.77436829]
[64.45139313 92.44891357]
[50.49205017 86.95921326]
[36.53270721 81.46952057]
[22.57336617 75.97982025]
[9.56398296 84.43769836]
[-5.93045902 83.59991455]
[-17.95203209 73.78862762]
[-21.87819672 58.77647018]
[-16.19926262 44.33592606]
[-3.09889388 36.01968002]
[12.38554859 37.02549362]
[24.29998207 46.96661758]
[28.06306076 62.02048111]
[42.02240372 67.51017761]
[55.98174667 72.99987030]
[69.94108582 78.48957062]
[97.27643585 69.26627350]
[117.27774048 82.28478241]
[130.51292419 75.22574615]
[143.74810791 68.16671753]
[149.84339905 61.37056732]
[157.22526550 61.10288239]
[170.56079102 54.23530579]
[183.89633179 47.36773300]
[197.23185730 40.50015640]
[210.56739807 33.63257980]
[223.90292358 26.76500702]
[228.17713928 6.81693172]
[245.01145935 -4.22451925]
[264.48422241 -0.30316794]
[275.89733887 -10.03666782]
[277.29873657 -25.55033112]
[289.01193237 -35.25889969]
[303.79318237 -33.82724762]
[315.20629883 -43.56074905]
[326.61941528 -53.29424667]
[325.23605347 -65.09572601]
[329.67355347 -75.98901367]
[338.72335815 -83.31372833]
[350.06631470 -85.34152985]
[360.86636353 -81.68284607]
[372.55523682 -91.08339691]
[384.24411011 -100.48395538]
[395.93295288 -109.88450623]
[407.62182617 -119.28506470]
[402.03536987 -139.03985596]
[410.13494873 -160.11227417]
[430.95086670 -173.26881409]
[432.46145630 -188.19256592]
[433.97204590 -203.11630249]
[435.48263550 -218.04005432]
[428.26519775 -232.76554871]
[437.63250732 -246.22607422]
[453.94827271 -244.57458496]
[460.42825317 -229.50999451]
[450.40637207 -216.52946472]
[448.89581299 -201.60571289]
[447.38522339 -186.68197632]
[445.87463379 -171.75822449]
[451.94860840 -167.35858154]
[460.42907715 -179.73118591]
[462.27270508 -194.61746216]
[476.02728271 -200.60174561]
[488.17562866 -191.80305481]
[486.77911377 -176.86819458]
[473.20867920 -170.47438049]
[464.09655762 -158.55931091]
[470.17053223 -154.15966797]
[483.87954712 -160.24754333]
[497.58859253 -166.33543396]
[511.29763794 -172.42330933]
[525.00665283 -178.51119995]
[538.71569824 -184.59907532]
[552.42474365 -190.68695068]
[566.13378906 -196.77484131]
[579.84283447 -202.86271667]
[593.50762939 -209.04922485]
[607.12750244 -215.33403015]
[620.74737549 -221.61883545]
[634.36730957 -227.90362549]
[647.98718262 -234.18843079]
[654.46386719 -240.62213135]
[661.84887695 -240.46409607]
[675.55792236 -246.55197144]
[689.26696777 -252.63986206]
[698.73919678 -265.31216431]
[713.51135254 -263.40625000]
[720.59375000 -277.80136108]
[736.29431152 -281.09848022]
[748.56896973 -270.76831055]
[748.00164795 -254.73529053]
[735.02752686 -245.29858398]
[719.59924316 -249.69721985]
[711.10760498 -237.46034241]
[695.35485840 -238.93081665]
[681.64581299 -232.84294128]
[667.93676758 -226.75505066]
[654.27197266 -220.56855774]
[640.65209961 -214.28375244]
[627.03222656 -207.99894714]
[613.41229248 -201.71414185]
[599.79241943 -195.42933655]
[595.03857422 -189.77563477]
[585.93072510 -189.15368652]
[572.22167969 -183.06579590]
[558.51263428 -176.97792053]
[544.80358887 -170.89002991]
[531.09454346 -164.80215454]
[517.38549805 -158.71427917]
[503.67648315 -152.62638855]
[489.96743774 -146.53851318]
[476.25839233 -140.45062256]
[473.45205688 -121.31367493]
[462.55346680 -106.50734711]
[446.83529663 -98.97719574]
[430.37744141 -99.69214630]
[417.02239990 -107.59619904]
[405.33352661 -98.19564056]
[393.64465332 -88.79508972]
[381.95578003 -79.39453125]
[370.26693726 -69.99398041]
[369.38751221 -51.70518494]
[355.17190552 -39.66461945]
[336.35290527 -41.88114166]
[324.93978882 -32.14764023]
[313.52670288 -22.41414261]
[312.60705566 -7.59220362]
[301.17120361 2.44153333]
[285.63082886 1.37643838]
[274.21771240 11.10993767]
[276.20538330 18.33434296]
[276.04812622 25.82554436]
[273.75906372 32.96017456]
[269.52862549 39.14454651]
[277.15310669 52.06227493]
[284.77755737 64.98000336]
[292.40200806 77.89772797]
[300.02645874 90.81546021]
[314.56491089 98.40264893]
[314.99301147 114.79621124]
[300.87036133 123.13184357]
[286.72512817 114.83457184]
[287.10873413 98.43991089]
[279.48428345 85.52218628]
[271.85983276 72.60445404]
[264.23538208 59.68672943]
[256.61090088 46.76900101]
[242.92817688 46.96230698]
[230.77050781 40.10054016]
[217.43496704 46.96811295]
[204.09944153 53.83568954]
[190.76390076 60.70326233]
[177.42837524 67.57083893]
[164.09283447 74.43841553]
[150.80714417 81.40190125]
[137.57196045 88.46092987]
[124.33677673 95.51996613]
[125.75971222 110.45338440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 51]
[3 50]
[4 49]
[6 47]
[7 46]
[8 45]
[9 44]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[21 30]
[22 29]
[23 28]
[60 75]
[61 74]
[62 73]
[63 72]
[77 216]
[78 215]
[79 214]
[81 213]
[82 212]
[83 211]
[84 210]
[85 209]
[86 208]
[89 189]
[90 188]
[93 185]
[94 184]
[95 183]
[100 180]
[101 179]
[102 178]
[103 177]
[104 176]
[107 118]
[108 117]
[109 116]
[110 115]
[127 171]
[128 170]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[134 164]
[135 163]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[142 156]
[143 155]
[144 154]
[146 152]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
