%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGGAAAGAAGAGUCACAUCACGUAGGUGAUGGGCCUAGAGAUAUUUCACAAUGCCUUCUGUAAUUAGAACCCAGAAAAAAGAGUUAUAUCAUUUGGGUUAAAGGUCUUGUGAUAUGUCACAAUCCCAACUAAGGGCAGGACCCAGGCAGAAAAGGAGAGUCACUUCCUUUGAUGAUUGGUCCAGAGAUACAUUACAAUUUCCCCUGAGGACAGCUCUCAUGCAGAAGAGGAACUGAAUAUACUGCAUGGCCC\
AGGUAUCUGCAGAUUU\
) } def
/len { sequence length } bind def

/coor [
[85.92028809 228.64062500]
[98.01136780 218.91511536]
[97.14559937 203.94012451]
[96.27983093 188.96513367]
[95.41407013 173.99014282]
[88.17714691 172.02111816]
[84.23911285 186.49494934]
[80.30084991 200.96871948]
[65.82714081 197.03024292]
[69.76528168 182.55691528]
[73.70331573 168.08308411]
[66.46640015 166.11405945]
[58.13284683 178.58610535]
[55.97970963 187.42474365]
[49.63032532 191.15330505]
[41.15327835 203.52827454]
[32.67623138 215.90322876]
[30.42115402 224.71641541]
[24.02912903 228.37139893]
[15.40972137 240.64762878]
[6.79031324 252.92385864]
[-1.82909465 265.20007324]
[-10.44850254 277.47631836]
[-19.06791115 289.75253296]
[-19.97840118 306.12640381]
[-34.73389435 313.28231812]
[-48.15520859 303.85891724]
[-46.43564224 287.55017090]
[-31.34413910 281.13311768]
[-22.72473145 268.85690308]
[-14.10532379 256.58065796]
[-5.48591566 244.30444336]
[3.13349223 232.02821350]
[11.75290012 219.75198364]
[20.30126953 207.42617798]
[28.77831650 195.05122375]
[37.25536346 182.67625427]
[45.66080093 170.25254822]
[53.99435425 157.78050232]
[41.14056778 142.07583618]
[33.27865982 123.81833649]
[30.80850601 104.51339722]
[33.69543839 85.68700409]
[19.47302818 80.92012787]
[5.25061846 76.15325928]
[-8.97179127 71.38639069]
[-23.19420052 66.61951447]
[-38.73782730 69.57014465]
[-48.34648132 58.18932343]
[-62.56888962 53.42245102]
[-76.79129791 48.65558243]
[-91.01371002 43.88871002]
[-105.23612213 39.12183762]
[-119.45852661 34.35496521]
[-135.00215149 37.30559540]
[-144.61080933 25.92477226]
[-158.83322144 21.15790176]
[-173.05563354 16.39102936]
[-187.27803040 11.62415886]
[-201.50044250 6.85728741]
[-216.36831665 4.87077045]
[-231.34332275 5.73653698]
[-246.31831360 6.60230350]
[-259.71884155 16.05521393]
[-274.49005127 8.93177128]
[-275.43658447 -7.44003773]
[-261.58471680 -16.21829987]
[-247.18408203 -8.37269020]
[-232.20907593 -9.23845768]
[-217.23408508 -10.10422421]
[-214.47784424 -24.84881973]
[-228.12886047 -31.06571579]
[-241.77987671 -37.28261185]
[-255.43089294 -43.49950409]
[-269.08190918 -49.71640015]
[-282.73291016 -55.93329620]
[-296.38394165 -62.15019226]
[-310.03494263 -68.36708832]
[-320.63906860 -57.53526688]
[-334.30975342 -50.98631287]
[-349.39614868 -49.51104355]
[-364.07650757 -53.28759766]
[-376.57815552 -61.85994339]
[-385.39138794 -74.19292450]
[-389.45202637 -88.79727936]
[-388.26968384 -103.90945435]
[-381.98715210 -117.70458221]
[-371.36306763 -128.51684570]
[-357.68035889 -135.04058838]
[-342.59127808 -136.48806763]
[-327.91787720 -132.68446350]
[-315.43206787 -124.08908844]
[-306.64157104 -111.73988342]
[-302.60787964 -97.12807465]
[-303.81805420 -82.01810455]
[-290.16705322 -75.80120850]
[-276.51602173 -69.58431244]
[-262.86502075 -63.36741638]
[-249.21398926 -57.15052032]
[-235.56298828 -50.93362427]
[-221.91197205 -44.71673203]
[-208.26095581 -38.49983597]
[-195.02832031 -22.72490311]
[-196.73358154 -7.36512232]
[-182.51116943 -2.59825087]
[-168.28875732 2.16862035]
[-154.06634521 6.93549156]
[-139.84393311 11.70236301]
[-125.31758881 8.41077709]
[-114.69165802 20.13255692]
[-100.46924591 24.89942932]
[-86.24683380 29.66629982]
[-72.02442932 34.43317032]
[-57.80201721 39.20004272]
[-43.57960892 43.96691513]
[-29.05326271 40.67532730]
[-18.42733002 52.39710617]
[-4.20491982 57.16397858]
[10.01748943 61.93085098]
[24.23989868 66.69772339]
[38.46231079 71.46459198]
[43.69950104 62.16600800]
[50.33029556 53.80392456]
[58.19055557 46.58532715]
[67.08572388 40.68889618]
[76.79560852 36.26058578]
[87.07987213 33.41000748]
[85.86844635 18.45900536]
[84.65702057 3.50800467]
[72.45484924 -6.53602648]
[71.01198578 -22.27431488]
[81.18446350 -34.36961365]
[96.93713379 -35.64599609]
[108.92420197 -25.34620667]
[110.03396606 -9.58092880]
[99.60801697 2.29657817]
[100.81944275 17.24757957]
[102.03086853 32.19858170]
[112.87265015 33.40081406]
[123.38153839 36.32535553]
[133.28575134 40.89657211]
[142.04637146 28.72071266]
[150.80699158 16.54485512]
[159.56761169 4.36899614]
[168.32823181 -7.80686235]
[163.05093384 -20.51795197]
[164.72080994 -34.07039261]
[172.79696655 -44.94659424]
[185.08973694 -50.37670898]
[198.35348511 -49.04367828]
[207.25413513 -61.11754227]
[205.09100342 -76.54344940]
[214.28953552 -88.66127014]
[229.00910950 -90.62843323]
[237.90977478 -102.70229340]
[246.81044006 -114.77616119]
[255.71109009 -126.85002136]
[264.61175537 -138.92388916]
[273.51242065 -150.99775696]
[282.41308594 -163.07160950]
[279.80148315 -178.65863037]
[289.04437256 -191.47831726]
[304.65811157 -193.92500305]
[317.37936401 -184.54708862]
[319.66082764 -168.90834045]
[310.14895630 -156.28694153]
[294.48693848 -154.17094421]
[285.58630371 -142.09709167]
[276.68563843 -130.02322388]
[267.78497314 -117.94935608]
[258.88430786 -105.87549591]
[249.98362732 -93.80162811]
[241.08297729 -81.72776794]
[243.55798340 -67.08502197]
[234.70344543 -54.71361542]
[219.32800293 -52.21687698]
[210.42733765 -40.14301300]
[215.88851929 -24.64462662]
[210.97383118 -8.79003716]
[197.43521118 1.09838486]
[180.50408936 0.95375758]
[171.74346924 13.12961674]
[162.98284912 25.30547523]
[154.22222900 37.48133469]
[145.46160889 49.65719223]
[157.04450989 63.29739380]
[164.65736389 79.49191284]
[179.36914062 76.56555939]
[194.08093262 73.63920593]
[208.79270935 70.71285248]
[223.50448608 67.78649902]
[229.87832642 53.63892365]
[243.36726379 45.96899033]
[258.78454590 47.72594070]
[270.20193481 58.23419571]
[273.22915649 73.45311737]
[266.70220947 87.53071594]
[253.13085938 95.05386353]
[237.73353577 93.12976837]
[226.43084717 82.49827576]
[211.71905518 85.42462921]
[197.00727844 88.35098267]
[182.29550171 91.27734375]
[167.58372498 94.20369720]
[166.11866760 115.14855194]
[158.31883240 134.64204407]
[170.28909302 143.68156433]
[182.25933838 152.72108459]
[194.22959900 161.76060486]
[202.92924500 164.42030334]
[206.28511047 170.97430420]
[218.15016174 180.15147400]
[215.89218140 165.32238770]
[223.61103821 152.46084595]
[237.75918579 147.47790527]
[251.83425903 152.66368103]
[259.36746216 165.63485718]
[256.89654541 180.42994690]
[245.55718994 190.24923706]
[230.56291199 190.58058167]
[241.64804077 200.68600464]
[252.73316956 210.79144287]
[263.81829834 220.89688110]
[274.90344238 231.00231934]
[285.98858643 241.10774231]
[297.07369995 251.21318054]
[308.15884399 261.31863403]
[321.43038940 254.02857971]
[336.35034180 251.44525146]
[351.30032349 253.84887695]
[364.65863037 260.97869873]
[374.97625732 272.06134033]
[381.13406372 285.89465332]
[382.46405029 300.97808838]
[378.82199097 315.67550659]
[370.60290527 328.39263916]
[358.69836426 337.75003052]
[344.39971924 342.73266602]
[329.25790405 342.80007935]
[314.91543579 337.94491577]
[302.92807007 328.69387817]
[294.59613037 316.05041504]
[290.82336426 301.38598633]
[292.01901245 286.29132080]
[298.05340576 272.40374756]
[286.96826172 262.29830933]
[275.88314819 252.19288635]
[264.79800415 242.08744812]
[253.71287537 231.98200989]
[242.62774658 221.87658691]
[231.54260254 211.77114868]
[220.45747375 201.66571045]
[208.97299194 192.01652527]
[197.10794067 182.83935547]
[185.19007874 173.73086548]
[173.21983337 164.69134521]
[161.24957275 155.65182495]
[149.27931213 146.61230469]
[141.69648743 155.40069580]
[132.53668213 162.93182373]
[122.01287842 168.92199707]
[110.38906097 173.12437439]
[111.25482941 188.09936523]
[112.12059784 203.07435608]
[112.98635864 218.04934692]
[126.11768341 226.31663513]
[131.85047913 240.73588562]
[127.98037720 255.76258850]
[115.99551392 265.61868286]
[100.50430298 266.51431274]
[87.46343994 258.10504150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 265]
[3 264]
[4 263]
[5 262]
[12 39]
[13 38]
[15 37]
[16 36]
[17 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[61 70]
[62 69]
[63 68]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[127 138]
[128 137]
[129 136]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[150 177]
[151 176]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[187 204]
[188 203]
[189 202]
[190 201]
[191 200]
[206 258]
[207 257]
[208 256]
[209 255]
[211 254]
[212 253]
[220 252]
[221 251]
[222 250]
[223 249]
[224 248]
[225 247]
[226 246]
[227 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
