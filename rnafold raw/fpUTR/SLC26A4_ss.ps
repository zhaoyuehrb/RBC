%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGCCUUCCCGGUUCGGGAAAGGGGAAGAAUGCAGGAGGGGUAGGAUUUCUUUCCUGAUAGGAUCGGUUGGGAAAGACCGCAGCCUGUGUGUGUCUUUCCCUUCGACCAAGGUGUCUGUUGCUCCGUAAAUAAAACGUCCCACUGCCUUCUGAGAGCGCUAUAAAGGCAGCGGAAGGGUAGUCCGCGGGGCAUUCCGGGCGGGGCGCGAGCAGAGACAGGUC\
) } def
/len { sequence length } bind def

/coor [
[94.65287018 154.02108765]
[82.43332672 152.41075134]
[76.33227539 166.11393738]
[80.21680450 178.40631104]
[74.86089325 189.69064331]
[63.62568665 194.15643311]
[57.33390808 207.77310181]
[51.04212570 221.38975525]
[44.75034332 235.00642395]
[38.55377579 248.66668701]
[32.45272827 262.36987305]
[26.35167885 276.07302856]
[20.25062943 289.77621460]
[19.33187866 306.70526123]
[2.81010199 310.50885010]
[-5.41851473 295.68566895]
[6.54744673 283.67517090]
[12.64849663 269.97198486]
[18.74954605 256.26879883]
[24.85059547 242.56562805]
[24.69983292 235.18414307]
[31.13368225 228.71464539]
[37.42546463 215.09797668]
[43.71724319 201.48132324]
[50.00902557 187.86465454]
[47.48318100 170.49404907]
[62.62909317 160.01289368]
[68.73014069 146.30970764]
[63.86924362 140.59817505]
[52.44617081 150.31996155]
[41.02293396 160.04158020]
[31.30151558 148.61817932]
[42.72437286 138.89689636]
[54.14744568 129.17509460]
[49.28654861 123.46355438]
[34.78419495 127.29524231]
[20.28184509 131.12693787]
[5.77949429 134.95861816]
[-8.72285652 138.79029846]
[-23.22520638 142.62199402]
[-37.72755814 146.45367432]
[-52.22990799 150.28536987]
[-66.73226166 154.11705017]
[-73.22626495 168.34245300]
[-87.36701202 175.01875305]
[-102.47768402 170.99363708]
[-111.42347717 158.16761780]
[-109.98046112 142.59675598]
[-98.82998657 131.63313293]
[-83.23696899 130.45344543]
[-70.56394958 139.61470032]
[-56.06159592 135.78300476]
[-41.55924606 131.95132446]
[-27.05689430 128.11964417]
[-12.55454254 124.28795624]
[1.94780815 120.45626831]
[16.45015907 116.62458038]
[30.95250893 112.79289246]
[45.45486069 108.96120453]
[46.77091980 97.37425995]
[50.43201065 86.73881531]
[56.09939575 77.50428009]
[63.35406113 70.02112579]
[53.39516830 58.80414963]
[45.36603165 54.47036743]
[43.37687302 47.36034393]
[33.57556152 36.00541687]
[23.77425385 24.65049171]
[13.97294521 13.29556561]
[1.19651830 11.57654953]
[-6.73340845 1.92574370]
[-5.99046516 -10.14161491]
[-15.63227940 -21.63228226]
[-25.27409363 -33.12294769]
[-34.91590881 -44.61361313]
[-44.55772018 -56.10428238]
[-54.19953537 -67.59494781]
[-63.84135056 -79.08561707]
[-73.48316193 -90.57627869]
[-83.12497711 -102.06694794]
[-92.84677887 -113.49002075]
[-102.64808655 -124.84494781]
[-112.44939423 -136.19987488]
[-122.25070190 -147.55479431]
[-138.08097839 -150.15904236]
[-145.78884888 -164.22915649]
[-139.46150208 -178.97177124]
[-123.95274353 -183.07759094]
[-111.15955353 -173.39698792]
[-110.89577484 -157.35610962]
[-101.09446716 -146.00119019]
[-91.29315948 -134.64625549]
[-81.49185181 -123.29132843]
[-74.74868774 -120.28485870]
[-71.63431549 -111.70876312]
[-61.99249649 -100.21809387]
[-52.35068512 -88.72743225]
[-42.70886993 -77.23676300]
[-33.06705475 -65.74609375]
[-23.42524147 -54.25542831]
[-13.78342724 -42.76476288]
[-4.14161301 -31.27409554]
[5.50020123 -19.78342819]
[22.29304504 -14.67283726]
[25.32787132 3.49425673]
[35.12918091 14.84918213]
[44.93048859 26.20410919]
[54.73179626 37.55903244]
[64.61213684 48.84525681]
[74.57102966 60.06222916]
[95.83831787 52.83710861]
[118.04221344 56.22630692]
[136.18559265 69.46705627]
[146.18516541 89.57944489]
[161.15557861 88.63758850]
[174.44268799 80.04903412]
[187.63067627 86.97191620]
[202.60107422 86.03005981]
[217.57147217 85.08820343]
[232.54187012 84.14634705]
[247.51226807 83.20448303]
[262.45965576 81.94931793]
[277.37750244 80.38139343]
[292.29531860 78.81346130]
[307.21316528 77.24553680]
[322.13098145 75.67761230]
[337.04879761 74.10968018]
[351.96664429 72.54175568]
[366.88446045 70.97383118]
[369.58123779 57.63455200]
[375.91558838 45.60840225]
[385.36694336 35.86329651]
[397.16442871 29.18054962]
[410.34951782 26.09223175]
[423.85403442 26.83882904]
[436.58666992 31.35053444]
[447.52111816 39.25366211]
[455.77890015 49.90156937]
[460.69979858 62.42757797]
[475.65557861 61.27679062]
[490.61135864 60.12600708]
[505.56716919 58.97521973]
[520.52294922 57.82443619]
[520.38232422 48.29914856]
[525.91491699 38.28173447]
[537.17779541 30.90219116]
[551.56750488 26.66706848]
[565.95721436 22.43194771]
[580.34692383 18.19682503]
[594.73663330 13.96170330]
[609.12634277 9.72658157]
[614.41754150 -4.74094677]
[627.06524658 -13.21964169]
[642.10253906 -12.63206196]
[653.77069092 -3.41296506]
[668.16040039 -7.64808702]
[679.07159424 -19.89056396]
[695.07232666 -16.29795265]
[699.70251465 -0.56602079]
[688.19891357 11.12156677]
[672.39550781 6.74162292]
[658.00579834 10.97674465]
[653.19201660 25.04675484]
[640.87048340 33.68645477]
[625.64624023 33.41092682]
[613.36145020 24.11629105]
[598.97174072 28.35141373]
[584.58203125 32.58653641]
[570.19232178 36.82165527]
[555.80261230 41.05677795]
[541.41290283 45.29190063]
[541.20349121 60.29043961]
[555.46929932 64.92568970]
[569.73516846 69.56095123]
[584.00103760 74.19620514]
[598.26684570 78.83145905]
[611.43151855 70.39191437]
[626.93438721 72.44019318]
[637.45544434 84.00915527]
[638.02703857 99.63628387]
[628.37921143 111.94293976]
[613.06744385 115.11828613]
[599.32141113 107.66302490]
[593.63159180 93.09730530]
[579.36578369 88.46205139]
[565.09991455 83.82679749]
[550.83404541 79.19154358]
[536.56823730 74.55628967]
[521.67370605 72.78022766]
[506.71795654 73.93101501]
[491.76214600 75.08179474]
[476.80636597 76.23258209]
[461.85058594 77.38336945]
[457.73107910 93.32736206]
[448.38427734 106.91654205]
[434.92681885 116.49638367]
[418.97708130 120.89321136]
[402.46060181 119.55796051]
[387.37759399 112.63468170]
[375.56069946 100.94520569]
[368.45239258 85.89165497]
[353.53457642 87.45958710]
[338.61672974 89.02751160]
[323.69891357 90.59543610]
[308.78106689 92.16336823]
[293.86325073 93.73129272]
[278.94543457 95.29921722]
[264.02758789 96.86714935]
[261.54016113 99.35270691]
[257.72915649 100.76192474]
[253.11126709 100.48751831]
[248.45413208 98.17488861]
[233.48373413 99.11674500]
[218.51333618 100.05860138]
[203.54292297 101.00045776]
[188.57252502 101.94231415]
[176.35620117 110.46350098]
[162.09742737 103.60798645]
[147.12702942 104.54985046]
[145.86851501 115.25077820]
[142.16351318 125.60388947]
[136.10844421 135.04682922]
[127.92948914 143.04402161]
[117.97509766 149.11669922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[6 25]
[7 24]
[8 23]
[9 22]
[10 20]
[11 19]
[12 18]
[13 17]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[63 110]
[64 109]
[66 108]
[67 107]
[68 106]
[69 105]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 93]
[82 92]
[83 91]
[84 90]
[114 219]
[115 218]
[117 216]
[118 215]
[119 214]
[120 213]
[121 212]
[122 208]
[123 207]
[124 206]
[125 205]
[126 204]
[127 203]
[128 202]
[129 201]
[139 193]
[140 192]
[141 191]
[142 190]
[143 189]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[155 162]
[156 161]
[172 188]
[173 187]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
