%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGGCCAACUCUGCAGCUCGGUCCAGCCCUGCCCUUGGGGAGCCGGGGAGGGGCGGGAGAGGCUUUUCUGGAGCUCCUUCAAAGAAGAACUUGUACUUUUCUGAGAACGACGCUCCCAGACCUUGGGGUGUGCCCUUGUCUGGCAAAGGGCGGAGGCCCUGGCUGUGCCUCCGCGUGCUUCCGCCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[-150.94026184 649.10559082]
[-149.55331421 664.86584473]
[-161.83503723 673.29254150]
[-167.99549866 686.96911621]
[-174.15597534 700.64569092]
[-180.20494080 714.37194824]
[-186.14198303 728.14697266]
[-176.90235901 740.41583252]
[-175.05096436 755.66271973]
[-181.08581543 769.78631592]
[-193.38357544 778.98742676]
[-208.63619995 780.79101562]
[-222.74081421 774.71191406]
[-231.90335083 762.38537598]
[-233.65911865 747.12719727]
[-227.53584290 733.04168701]
[-215.18064880 723.91784668]
[-199.91700745 722.20989990]
[-193.97996521 708.43487549]
[-194.22001648 701.03668213]
[-187.83255005 694.48522949]
[-181.67207336 680.80865479]
[-175.51159668 667.13208008]
[-177.33918762 652.34997559]
[-164.61682129 642.94506836]
[-169.08474731 635.24188232]
[-169.50459290 626.20874023]
[-165.65509033 617.87420654]
[-158.28796387 612.16833496]
[-148.98452759 610.47644043]
[-142.16378784 597.11688232]
[-135.34304810 583.75732422]
[-128.52232361 570.39776611]
[-121.70159149 557.03820801]
[-128.75572205 547.13726807]
[-130.93792725 535.10449219]
[-127.77269745 523.21734619]
[-119.80260468 513.75250244]
[-108.49645996 508.54971313]
[-95.97885895 508.65432739]
[-88.72689056 495.52386475]
[-81.47492981 482.39340210]
[-74.22296143 469.26293945]
[-66.97099304 456.13247681]
[-59.71902466 443.00201416]
[-52.57416534 429.81298828]
[-45.53688049 416.56622314]
[-46.39879990 401.69656372]
[-33.09147263 393.13937378]
[-26.05419159 379.89260864]
[-19.01691055 366.64584351]
[-11.97962761 353.39907837]
[-4.94234562 340.15234375]
[-5.80426264 325.28268433]
[7.50306177 316.72549438]
[14.54034424 303.47872925]
[21.57762718 290.23196411]
[28.61490822 276.98519897]
[27.04541397 259.51303101]
[42.72272110 249.86700439]
[49.54345703 236.50746155]
[49.78527832 229.10931396]
[56.58548355 222.98730469]
[63.62276459 209.74055481]
[70.66004944 196.49378967]
[77.69732666 183.24702454]
[84.73461151 170.00027466]
[91.77189636 156.75350952]
[98.80917358 143.50674438]
[78.03007507 80.30523682]
[77.54183197 65.31318665]
[77.05358887 50.32113647]
[76.56534576 35.32908630]
[75.95510101 20.34150314]
[75.22289276 5.35938454]
[74.49069214 -9.62273407]
[73.63657379 -24.59839630]
[72.66059875 -39.56661224]
[64.04179382 -52.83411789]
[70.93460083 -66.03784943]
[69.95863342 -81.00606537]
[68.98265839 -95.97428131]
[57.38681793 -106.37496185]
[56.61027145 -121.56876373]
[66.59719849 -132.55952454]
[65.62122345 -147.52774048]
[64.64525604 -162.49595642]
[63.66928101 -177.46417236]
[62.69330978 -192.43238831]
[61.71733856 -207.40060425]
[48.52552414 -215.57101440]
[42.68674088 -229.94767761]
[46.44612885 -245.00245667]
[58.35812378 -254.94650269]
[73.84231567 -255.95611572]
[86.94472504 -247.64308167]
[92.62720490 -233.20393372]
[88.70471954 -218.19081116]
[76.68555450 -208.37658691]
[77.66152954 -193.40837097]
[78.63749695 -178.44015503]
[79.61347198 -163.47193909]
[80.58943939 -148.50372314]
[81.56541443 -133.53550720]
[92.89496613 -123.93463135]
[94.09796906 -108.76863098]
[83.95087433 -96.95024872]
[84.92684937 -81.98203278]
[85.90281677 -67.01381683]
[94.45182037 -54.81694031]
[87.62881470 -40.54258347]
[88.60478973 -25.57436752]
[92.18266296 -19.09441376]
[89.47280884 -10.35493851]
[90.20500946 4.62718010]
[90.93721771 19.60929871]
[94.40914154 26.14663124]
[91.55739594 34.84083939]
[92.04563904 49.83289337]
[92.53388214 64.82494354]
[93.02212524 79.81699371]
[106.38167572 86.63772583]
[118.81117249 78.24084473]
[131.24066162 69.84395599]
[137.92851257 54.87048340]
[154.26557922 53.44495392]
[163.44569397 67.03382874]
[156.02514648 81.65803528]
[139.63755798 82.27344513]
[127.20806122 90.67033386]
[114.77856445 99.06722260]
[117.11940002 106.19255829]
[121.80107880 120.44324493]
[124.14191437 127.56858826]
[139.12950134 126.95834351]
[154.11708069 126.34809875]
[169.10466003 125.73785400]
[184.09223938 125.12760925]
[199.07981873 124.51736450]
[207.56985474 111.52894592]
[222.08477783 106.04290009]
[237.04330444 110.16871643]
[246.69355774 122.31993866]
[247.32484436 137.82415771]
[238.69439697 150.71971130]
[224.12081909 156.04797363]
[209.20794678 151.76013184]
[199.69006348 139.50494385]
[184.70248413 140.11518860]
[169.71490479 140.72543335]
[154.72732544 141.33567810]
[139.73974609 141.94592285]
[124.75215912 142.55616760]
[112.05593872 150.54403687]
[105.01865387 163.79078674]
[97.98136902 177.03755188]
[90.94409180 190.28431702]
[83.90680695 203.53106689]
[76.86952209 216.77783203]
[69.83224487 230.02459717]
[62.90300751 243.32818604]
[56.08227158 256.68774414]
[59.30883408 269.18606567]
[53.34087372 280.17742920]
[41.86166763 284.02249146]
[34.82438660 297.26925659]
[27.78710365 310.51599121]
[20.74982262 323.76275635]
[21.10838509 339.57989502]
[8.30441475 347.18960571]
[1.26713252 360.43637085]
[-5.77014971 373.68313599]
[-12.80743217 386.92990112]
[-19.84471321 400.17666626]
[-19.48615074 415.99380493]
[-32.29012299 423.60348511]
[-39.32740402 436.85025024]
[-40.59359360 445.91220093]
[-46.58856583 450.25399780]
[-53.84053421 463.38446045]
[-61.09249878 476.51492310]
[-68.34446716 489.64538574]
[-75.59643555 502.77581787]
[-82.84839630 515.90631104]
[-74.67339325 532.07641602]
[-77.80237579 549.76385498]
[-90.79946899 561.93322754]
[-108.34204102 563.85894775]
[-115.16277313 577.21850586]
[-121.98350525 590.57806396]
[-128.80422974 603.93762207]
[-135.62496948 617.29718018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[3 23]
[4 22]
[5 21]
[6 19]
[7 18]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 177]
[47 176]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[55 168]
[56 167]
[57 166]
[58 165]
[60 162]
[61 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 121]
[71 120]
[72 119]
[73 118]
[74 116]
[75 115]
[76 114]
[77 112]
[78 111]
[80 109]
[81 108]
[82 107]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[122 131]
[123 130]
[124 129]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
