%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCACUGGGAAUAUGAUUAUGCUUAAUCUAUGCUCAGUUGAAAGGGGCUGGGGCUGCUUUCUCCCCUCCCUUCUUGACUCUCUGUUCACAGAACUCAGGCUGCCUCCAGCCAGCCUUUGCCCGCUAGACUCACUGGCCCUGAGCACUUGAAGGUGCAGCAAGUCACUGAGA\
) } def
/len { sequence length } bind def

/coor [
[99.19339752 141.48956299]
[90.39533997 129.34072876]
[95.20388031 115.13227081]
[90.70977020 130.30177307]
[76.19242096 133.63279724]
[65.44234467 144.09396362]
[54.69227600 154.55513000]
[43.94220352 165.01629639]
[33.19213104 175.47746277]
[22.44206047 185.93862915]
[17.94794846 201.10812378]
[3.43059874 204.43916321]
[-7.31947279 214.90031433]
[-18.06954384 225.36148071]
[-22.05656624 233.62049866]
[-29.11108589 235.91279602]
[-40.04934311 246.17703247]
[-50.98760223 256.44125366]
[-61.92586136 266.70550537]
[-72.86412048 276.96972656]
[-77.08917236 292.81527710]
[-92.99253082 296.81716919]
[-104.21417999 284.85864258]
[-99.21025085 269.24157715]
[-83.12834930 266.03149414]
[-72.19009399 255.76724243]
[-61.25183487 245.50300598]
[-50.31357956 235.23876953]
[-39.37532043 224.97454834]
[-28.53070831 214.61141968]
[-17.78063774 204.15025330]
[-7.03056574 193.68908691]
[-3.30537176 179.26783752]
[11.98089600 175.18855286]
[22.73096657 164.72738647]
[33.48103714 154.26622009]
[44.23110962 143.80505371]
[54.98118210 133.34390259]
[65.73125458 122.88272858]
[69.45644379 108.46149445]
[84.74271393 104.38220215]
[89.03993225 90.01091003]
[85.79702759 75.36565399]
[82.55413055 60.72039413]
[79.31122589 46.07513809]
[76.06832886 31.42987823]
[72.56002808 16.84592056]
[68.78748322 2.32807374]
[65.01493073 -12.18977356]
[61.24238968 -26.70762062]
[57.46984100 -41.22546768]
[53.69729614 -55.74331665]
[49.79308701 -70.22631073]
[45.75754166 -84.67326355]
[41.72199631 -99.12020874]
[30.55722046 -110.32995605]
[34.58514786 -124.66958618]
[30.54960060 -139.11654663]
[26.51405525 -153.56349182]
[22.55937958 -139.09419250]
[13.96321297 -126.80168152]
[1.72965503 -118.12181091]
[-12.71231365 -114.06847382]
[-27.67575264 -115.11512756]
[-41.41281128 -121.13951874]
[-52.31888580 -131.43794250]
[-59.12005997 -144.80746460]
[-61.02190018 -159.68640137]
[-57.80225372 -174.33679199]
[-49.83720398 -187.04734802]
[-38.05713654 -196.33334351]
[-23.83805466 -201.11013794]
[-8.84086609 -200.81974792]
[5.18263531 -195.49607849]
[16.59438896 -185.76098633]
[24.06186104 -172.75038147]
[24.33423996 -187.74790955]
[24.60661697 -202.74543762]
[14.18927670 -211.31690979]
[10.67315102 -224.13914490]
[15.12878799 -236.45896912]
[25.71388435 -243.84272766]
[26.25854874 -258.83282471]
[26.80321503 -273.82293701]
[27.34787941 -288.81304932]
[19.19547844 -303.04226685]
[27.67488861 -317.07904053]
[44.06322098 -316.48358154]
[51.50156403 -301.86840820]
[42.33798599 -288.26837158]
[41.79332352 -273.27825928]
[41.24865723 -258.28817749]
[40.70399094 -243.29804993]
[52.66812897 -231.50158691]
[52.41098785 -214.36451721]
[39.60414505 -202.47306824]
[39.33176422 -187.47554016]
[39.05938721 -172.47801208]
[40.96100616 -157.59902954]
[44.99655151 -143.15208435]
[49.03209686 -128.70513916]
[59.90822220 -118.52873230]
[56.16894531 -103.15576172]
[60.20449066 -88.70880890]
[64.24003601 -74.26185608]
[69.08538818 -68.64549255]
[68.21514130 -59.51586151]
[71.98768616 -44.99801636]
[75.76023865 -30.48016739]
[79.53278351 -15.96231937]
[83.30532837 -1.44447231]
[87.07787323 13.07337570]
[90.69925690 16.23665047]
[92.35021210 21.72164726]
[90.71358490 28.18697739]
[93.95648956 42.83223724]
[97.19938660 57.47749710]
[100.44229126 72.12275696]
[103.68518829 86.76801300]
[107.86058807 72.36086273]
[113.73736572 58.56000900]
[125.42842865 49.16218948]
[140.16987610 46.38914490]
[154.47665405 50.89646149]
[164.96649170 61.61855698]
[169.15946960 76.02060699]
[166.06431580 90.69779968]
[156.41275024 102.18028259]
[142.48735046 107.75335693]
[127.96718597 103.98972321]
[138.90544128 114.25395966]
[149.84370422 124.51819611]
[160.78196716 134.78242493]
[176.13978577 138.58346558]
[180.12623596 152.93469238]
[191.06448364 163.19892883]
[202.00274658 173.46315002]
[212.94100952 183.72738647]
[227.17256165 178.32147217]
[242.27842712 179.62536621]
[255.26701355 187.32708740]
[263.58947754 199.85296631]
[265.63964844 214.68894958]
[261.06402588 228.88504028]
[272.00228882 239.14927673]
[282.94055176 249.41349792]
[293.87878418 259.67773438]
[304.81704712 269.94198608]
[320.89895630 273.15206909]
[325.90289307 288.76913452]
[314.68124390 300.72766113]
[298.77786255 296.72576904]
[294.55282593 280.88021851]
[283.61456299 270.61599731]
[272.67630005 260.35177612]
[261.73803711 250.08752441]
[250.79978943 239.82328796]
[236.92298889 245.29136658]
[221.98674011 244.18762207]
[208.95755005 236.67756653]
[200.44639587 224.20437622]
[198.18568420 209.21183777]
[202.67677307 194.66564941]
[191.73851013 184.40141296]
[180.80024719 174.13717651]
[169.86199951 163.87294006]
[155.28654480 160.80607605]
[150.51773071 145.72068787]
[139.57946777 135.45645142]
[128.64120483 125.19221497]
[117.70294952 114.92797852]
[122.76870728 129.04669189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[12 32]
[13 31]
[14 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 105]
[54 104]
[55 103]
[57 101]
[58 100]
[59 99]
[76 98]
[77 97]
[78 96]
[82 93]
[83 92]
[84 91]
[85 90]
[130 171]
[131 170]
[132 169]
[133 168]
[135 166]
[136 165]
[137 164]
[138 163]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
