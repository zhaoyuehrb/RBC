%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAUCAGCCGCGCUCCUCCCCUCGCCUCCCAACACCCUCAGCUCCGGGCCGGACCCUCCCUCCUCCCACCACGUGUCCUCCCCGCUCCCUCCCGAGGGGCCGCGCGCACGGGAGGACGGAGAGGCGGAAAGGAUGGCGCUGUGACAGCCGGGCCGGAGCCCUCGCGUCCCCACCCCGCGCCCUGGCCGCUGGGCCCGGCGAG\
) } def
/len { sequence length } bind def

/coor [
[344.26867676 350.76162720]
[342.63903809 339.45672607]
[345.36047363 328.31106567]
[333.82046509 318.72836304]
[326.66220093 316.87271118]
[322.17800903 308.90814209]
[310.78692627 299.14886475]
[299.39584351 289.38961792]
[288.00479126 279.63034058]
[280.87594604 277.66467285]
[276.51492310 269.63198853]
[265.27548218 259.69845581]
[250.47125244 260.86886597]
[238.93135071 250.95495605]
[237.80410767 235.41896057]
[226.56466675 225.48542786]
[215.32524109 215.55189514]
[204.08580017 205.61836243]
[193.11482239 208.77311707]
[181.86747742 206.21110535]
[173.16609192 198.45654297]
[169.25126648 187.35110474]
[171.20552063 175.61756897]
[160.27732849 165.34262085]
[149.34912109 155.06768799]
[138.42091370 144.79273987]
[127.49271393 134.51780701]
[116.56451416 124.24286652]
[105.63631439 113.96792603]
[91.03473663 110.53366852]
[76.67227936 114.86029816]
[73.19158173 126.23480988]
[64.73703766 134.43099976]
[53.49137878 137.49407959]
[42.28118515 134.77410889]
[33.86655807 127.05991364]
[19.37767029 130.94219971]
[4.88878202 134.82447815]
[-0.54611003 149.35864258]
[-13.50454044 157.89436340]
[-29.00372887 157.14952087]
[-41.08391953 147.41049194]
[-45.10003281 132.42214966]
[-39.50779343 117.94780731]
[-26.45752907 109.55315399]
[-10.96733379 110.46609497]
[1.00649631 120.33559418]
[15.49538422 116.45330811]
[29.98427200 112.57102203]
[38.16131210 96.19712830]
[56.01454544 90.90382385]
[72.34564972 100.49783325]
[86.70810699 96.17120361]
[89.94736481 89.40679932]
[76.41865540 82.92806244]
[82.89761353 69.39945984]
[96.42587280 75.87797546]
[99.66512299 69.11357117]
[94.03175354 55.21158600]
[88.39837646 41.30960464]
[76.04468536 31.42543030]
[78.43577576 16.72400284]
[72.80239868 2.82202172]
[67.16902924 -11.07995987]
[61.53565216 -24.98194122]
[55.90227890 -38.88392258]
[50.26890182 -52.78590393]
[44.63552856 -66.68788910]
[31.04480362 -69.00523376]
[20.45874405 -77.66777802]
[15.57577419 -90.32917023]
[17.57202339 -103.64242554]
[25.82005310 -114.14453888]
[20.40142822 -128.13162231]
[14.98280239 -142.11871338]
[9.56417751 -156.10578918]
[4.14555264 -170.09288025]
[-8.72318840 -174.08036804]
[-16.82602310 -184.59904480]
[-17.38112068 -197.67036438]
[-10.40967464 -208.51066589]
[-15.61226463 -222.57952881]
[-20.81485558 -236.64839172]
[-26.01744461 -250.71726990]
[-38.06089401 -260.97717285]
[-35.21820831 -275.59802246]
[-50.19182587 -279.66867065]
[-59.88679886 -291.78424072]
[-60.57521057 -307.28604126]
[-51.99234772 -320.21331787]
[-37.43850327 -325.59524536]
[-22.50992393 -321.36236572]
[-12.94695187 -309.14233398]
[-12.42674732 -293.63400269]
[-21.14933968 -280.80059814]
[-9.47801590 -271.54696655]
[-11.94857693 -255.91986084]
[-6.74598694 -241.85098267]
[-1.54339647 -227.78211975]
[3.65919399 -213.71325684]
[19.22229004 -207.34580994]
[25.49075127 -191.37921143]
[18.13263702 -175.51150513]
[23.55126190 -161.52441406]
[28.96988678 -147.53733826]
[34.38851166 -133.55024719]
[39.80713654 -119.56316376]
[55.80072403 -115.87551117]
[66.55402374 -103.25637817]
[67.68000031 -86.54872894]
[58.53750992 -72.32125854]
[64.17088318 -58.41927719]
[69.80426025 -44.51729584]
[75.43762970 -30.61531639]
[81.07100677 -16.71333504]
[86.70438385 -2.81135273]
[92.33775330 11.09062862]
[104.28851318 19.98044205]
[102.30036163 35.67623138]
[107.93373108 49.57821274]
[113.56710815 63.48019409]
[115.91125488 103.03972626]
[126.83945465 113.31465912]
[137.76765442 123.58959961]
[148.69586182 133.86454773]
[159.62405396 144.13948059]
[170.55226135 154.41442871]
[181.48046875 164.68936157]
[200.37588501 163.38055420]
[213.99801636 176.07679749]
[214.01933289 194.37893677]
[225.25877380 204.31246948]
[236.49819946 214.24600220]
[247.73764038 224.17951965]
[263.29440308 223.38903809]
[274.55126953 233.62315369]
[275.20901489 248.45903015]
[286.44845581 258.39254761]
[297.76406860 268.23925781]
[309.15512085 277.99853516]
[320.54620361 287.75781250]
[331.93728638 297.51708984]
[343.40316772 307.18835449]
[354.94317627 316.77105713]
[373.26608276 311.25927734]
[391.07067871 317.84613037]
[401.23266602 333.70324707]
[399.80230713 352.33224487]
[411.77255249 361.37176514]
[423.74279785 370.41128540]
[435.71307373 379.45080566]
[447.68331909 388.49032593]
[459.65359497 397.52984619]
[471.62384033 406.56936646]
[483.59411621 415.60888672]
[499.26965332 417.75085449]
[504.76345825 431.59524536]
[524.85736084 433.16113281]
[531.62579346 451.27053833]
[543.86871338 459.93716431]
[556.11169434 468.60375977]
[570.74432373 463.78799438]
[585.23748779 468.45724487]
[594.09741211 480.62136841]
[594.09570312 495.49206543]
[606.33862305 504.15869141]
[618.58160400 512.82531738]
[630.82452393 521.49188232]
[645.09191895 515.62280273]
[660.26330566 518.42144775]
[671.49761963 528.99468994]
[675.20996094 543.96875000]
[670.21582031 558.56536865]
[658.10876465 568.12689209]
[642.75213623 569.60223389]
[629.04614258 562.52062988]
[621.36431885 549.14178467]
[622.15795898 533.73486328]
[609.91497803 525.06823730]
[597.67199707 516.40161133]
[585.42907715 507.73501587]
[571.40429688 512.67901611]
[556.98699951 508.36553955]
[547.76629639 496.24810791]
[547.44506836 480.84671021]
[535.20214844 472.18011475]
[522.95916748 463.51348877]
[513.07611084 466.13601685]
[503.17407227 462.81311035]
[496.60266113 454.41397095]
[495.72393799 443.56549072]
[480.90460205 442.07009888]
[474.55459595 427.57913208]
[462.58432007 418.53961182]
[450.61407471 409.50009155]
[438.64379883 400.46057129]
[426.67355347 391.42105103]
[414.70327759 382.38153076]
[402.73303223 373.34201050]
[390.76278687 364.30249023]
[380.88858032 369.51406860]
[369.73156738 370.66711426]
[358.90158081 367.55676270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[6 142]
[7 141]
[8 140]
[9 139]
[11 138]
[12 137]
[15 134]
[16 133]
[17 132]
[18 131]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[30 53]
[31 52]
[36 49]
[37 48]
[38 47]
[58 121]
[59 120]
[60 119]
[62 117]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[81 100]
[82 99]
[83 98]
[84 97]
[86 95]
[148 200]
[149 199]
[150 198]
[151 197]
[152 196]
[153 195]
[154 194]
[155 193]
[157 191]
[159 187]
[160 186]
[161 185]
[165 181]
[166 180]
[167 179]
[168 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
