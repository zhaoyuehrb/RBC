%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGAUCUUGCAUCUGAAACUGAGCAGAGCAGGGCGCCGGGCAGGGCCGGCGGGCCACGUGAUAAGCCCGGAAACAGCUCCGCCCCCUCGCUUCCUGAGCCGCCACAUCCCGGCAGCCCUCCUACCUGCGCACGUGGUGCCGCCGCUGCUGCCUCCCGCUCGCCCUGAACCCAGUGCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[72.58029175 193.79133606]
[72.32964325 178.79342651]
[71.95369720 163.79814148]
[71.45246887 148.80651855]
[70.95124054 133.81489563]
[70.45001984 118.82326508]
[63.40710068 116.24503326]
[58.25040054 130.33079529]
[44.16473389 125.17385864]
[49.32126236 111.08856964]
[42.27833939 108.51033783]
[32.21656799 119.63511658]
[22.15479851 130.75990295]
[18.70969200 139.24174500]
[11.83074570 141.98471069]
[1.58448648 152.93980408]
[-8.66177273 163.89491272]
[-18.90803146 174.85000610]
[-15.83774471 190.06030273]
[-22.32481384 204.15631104]
[-35.87482834 211.71783447]
[-51.27753067 209.83732605]
[-62.61027145 199.23785400]
[-65.51537323 183.99514771]
[-58.87577438 169.97035217]
[-45.24452591 162.55625916]
[-29.86313057 164.60374451]
[-19.61687088 153.64865112]
[-9.37061119 142.69355774]
[0.87564778 131.73844910]
[11.03001690 120.69812775]
[21.09178925 109.57334900]
[31.15355873 98.44856262]
[94.76283264 89.19206238]
[97.01026917 74.36138153]
[99.25770569 59.53070450]
[101.50514221 44.70002747]
[103.75257874 29.86934853]
[94.64907074 17.22957420]
[97.13955688 2.22117233]
[109.24575043 -6.37973690]
[111.49318695 -21.21041489]
[113.74062347 -36.04109573]
[115.98806000 -50.87177277]
[118.23549652 -65.70245361]
[120.48293304 -80.53313446]
[114.90063477 -95.33679962]
[124.45751190 -106.76113129]
[118.87522125 -121.56479645]
[128.43209839 -132.98913574]
[130.67953491 -147.81980896]
[132.92697144 -162.65048218]
[135.17440796 -177.48117065]
[137.42184448 -192.31184387]
[139.66928101 -207.14251709]
[141.79272461 -221.99147034]
[143.79202271 -236.85762024]
[145.79133606 -251.72378540]
[147.79063416 -266.58993530]
[149.78993225 -281.45611572]
[151.78924561 -296.32226562]
[153.78854370 -311.18844604]
[155.78785706 -326.05459595]
[144.73437500 -336.78433228]
[142.14860535 -351.78988647]
[148.81561279 -365.28118896]
[161.99073792 -372.17715454]
[163.99003601 -387.04330444]
[152.93656921 -397.77304077]
[150.35078430 -412.77862549]
[157.01780701 -426.26989746]
[170.19291687 -433.16586304]
[172.19221497 -448.03204346]
[174.19152832 -462.89819336]
[165.26249695 -470.78323364]
[161.29786682 -481.88900757]
[163.17634583 -493.40908813]
[170.31539917 -502.49139404]
[180.84478760 -506.94427490]
[183.33973694 -521.73535156]
[185.83467102 -536.52636719]
[188.20594788 -551.33776855]
[190.45338440 -566.16845703]
[192.70082092 -580.99914551]
[177.39956665 -588.96221924]
[165.75305176 -601.65277100]
[159.14851379 -617.53436279]
[158.36413574 -634.69189453]
[163.47735596 -651.06286621]
[173.85766602 -664.68481445]
[188.24429321 -673.93096924]
[204.89921570 -677.70434570]
[206.40065002 -692.62902832]
[207.90208435 -707.55371094]
[209.40351868 -722.47839355]
[204.97297668 -738.84313965]
[219.47172546 -747.63079834]
[231.92959595 -736.13128662]
[224.32818604 -720.97692871]
[222.82675171 -706.05224609]
[221.32531738 -691.12762451]
[219.82388306 -676.20294189]
[231.79391479 -671.41503906]
[242.12219238 -663.67675781]
[250.09686279 -653.51263428]
[255.16596985 -641.61486816]
[256.97576904 -628.79583740]
[255.39527893 -615.93292236]
[250.52584839 -603.90826416]
[242.69462585 -593.54840088]
[232.43255615 -585.56744385]
[220.43849182 -580.51770020]
[207.53149414 -578.75170898]
[205.28405762 -563.92102051]
[203.03662109 -549.09033203]
[205.14717102 -541.99182129]
[200.62573242 -534.03143311]
[198.13078308 -519.24041748]
[195.63584900 -504.44934082]
[207.12704468 -490.21762085]
[204.54214478 -471.78735352]
[189.05769348 -460.89889526]
[187.05838013 -446.03271484]
[185.05908203 -431.16656494]
[195.94418335 -421.03482056]
[198.80998230 -406.26147461]
[192.35166931 -392.47222900]
[178.85620117 -385.04400635]
[176.85688782 -370.17785645]
[187.74200439 -360.04611206]
[190.60778809 -345.27276611]
[184.14949036 -331.48352051]
[170.65400696 -324.05529785]
[168.65470886 -309.18914795]
[166.65541077 -294.32296753]
[164.65609741 -279.45681763]
[162.65679932 -264.59063721]
[160.65748596 -249.72448730]
[158.65818787 -234.85832214]
[156.65888977 -219.99215698]
[158.88774109 -212.92987061]
[154.49995422 -204.89509583]
[152.25251770 -190.06440735]
[150.00508118 -175.23373413]
[147.75764465 -160.40304565]
[145.51020813 -145.57237244]
[143.26277161 -130.74169922]
[149.00581360 -116.99881744]
[139.28819275 -104.51369476]
[145.03123474 -90.77081299]
[135.31361389 -78.28569794]
[133.06617737 -63.45501709]
[130.81874084 -48.62433624]
[128.57130432 -33.79365921]
[126.32386780 -18.96298027]
[124.07643127 -4.13230085]
[133.09085083 7.66921902]
[131.02288818 22.74165154]
[118.58325195 32.11678314]
[116.33581543 46.94746399]
[114.08837891 61.77814102]
[111.84095001 76.60881805]
[109.59351349 91.43949890]
[112.58129883 106.13892365]
[120.44013977 118.91541290]
[134.26072693 126.61618042]
[134.33847046 141.51058960]
[142.19731140 154.28706360]
[150.05615234 167.06355286]
[164.73059082 174.38426208]
[165.45767212 190.76728821]
[151.48944092 199.35917664]
[137.19520569 191.32133484]
[137.27966309 174.92239380]
[129.42082214 162.14590454]
[121.56198120 149.36943054]
[108.30350494 142.58251953]
[107.66365051 126.77425385]
[99.80480957 113.99776459]
[85.44164276 118.32204437]
[85.94287109 133.31365967]
[86.44409180 148.30528259]
[86.94532013 163.29690552]
[90.36540222 171.78887939]
[87.32754517 178.54277039]
[87.57819366 193.54067993]
[90.09052277 212.75885010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 183]
[4 182]
[5 181]
[6 180]
[11 33]
[12 32]
[13 31]
[15 30]
[16 29]
[17 28]
[18 27]
[34 163]
[35 162]
[36 161]
[37 160]
[38 159]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[48 149]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[67 129]
[68 128]
[72 124]
[73 123]
[74 122]
[79 119]
[80 118]
[81 117]
[82 115]
[83 114]
[84 113]
[92 102]
[93 101]
[94 100]
[95 99]
[164 179]
[165 178]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
