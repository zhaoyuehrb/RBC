%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGCUCUGUGGAGACGCGAGCACUUCCGGUGUGUGAGCCUGCGGUUGCUACAUAACCGCGUAGUUUGAGCCAUUUCUGCGUCUGGCGGGUCCUUCUGAACUUGUCACCUUCGCUUGGGGUCGCAACGACCCGAUGAUCGAUGAUCCAAGCAAGGGAAAAGAAGCCUUGGCGGAGAGCGGAGGCACAAUUCCACCUUCCUUUGUGCUCCAUUACUCAAGACACUGAAGACUCCAAAAAGUAGUAGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[69.92766571 409.22830200]
[70.30186462 394.23345947]
[70.67582703 379.23812866]
[71.04978943 364.24279785]
[63.55211639 364.05581665]
[58.42181396 378.15118408]
[53.29151535 392.24658203]
[48.16121292 406.34197998]
[48.16955948 415.44934082]
[42.87809753 420.58044434]
[37.57247543 434.61077881]
[32.26685333 448.64111328]
[35.44553757 464.72924805]
[22.92568588 475.32098389]
[7.58664608 469.52047729]
[5.20791054 453.29476929]
[18.23651695 443.33547974]
[23.54213905 429.30514526]
[28.84775925 415.27481079]
[34.06582260 401.21166992]
[39.19612503 387.11627197]
[44.32642746 373.02090454]
[49.45672989 358.92550659]
[52.54779816 330.80786133]
[72.15022278 320.11679077]
[72.52417755 305.12145996]
[72.89813995 290.12612915]
[73.27210236 275.13076782]
[70.30490112 268.38366699]
[73.74535370 259.95114136]
[74.30622101 244.96163940]
[74.86708832 229.97213745]
[75.42795563 214.98262024]
[75.98882294 199.99311829]
[66.96952820 184.92614746]
[76.93042755 169.42417908]
[77.30438995 154.42883301]
[77.67834473 139.43350220]
[78.05230713 124.43815613]
[79.25675964 118.89807892]
[81.31363678 113.87606812]
[84.12835693 109.48336792]
[69.68899536 113.54597473]
[55.24963379 117.60858154]
[40.81026840 121.67118835]
[26.37090683 125.73379517]
[11.93154240 129.79640198]
[-2.50782156 133.85900879]
[-16.94718552 137.92161560]
[-26.01740074 151.15455627]
[-42.02828217 152.17002869]
[-52.69765472 140.18904114]
[-49.84088516 124.40238190]
[-35.64944458 116.92023468]
[-21.00979233 123.48225403]
[-6.57042837 119.41964722]
[7.86893511 115.35704041]
[22.30829811 111.29443359]
[36.74766159 107.23182678]
[51.18702698 103.16921997]
[65.62638855 99.10661316]
[80.06575012 95.04400635]
[65.44630432 91.68667603]
[50.66663361 94.24819946]
[36.07580185 90.76860046]
[24.04275894 81.81282806]
[16.52118301 68.83493042]
[14.73226738 53.94198227]
[18.96646118 39.55200195]
[28.53630447 28.00132561]
[41.88804245 21.16531372]
[56.85390091 20.15385437]
[71.00403595 25.13117027]
[82.04104614 35.28914642]
[88.17296600 48.97854233]
[88.40403748 63.97777176]
[94.42075348 77.71818542]
[95.72809601 62.77526855]
[97.03543091 47.83234787]
[98.34276581 32.88942719]
[99.65010071 17.94650650]
[91.48751068 1.42673504]
[102.13705444 -12.53565025]
[103.25800323 -27.49370766]
[104.37895966 -42.45176315]
[105.49990845 -57.40982056]
[98.81552887 -71.74961090]
[107.48230743 -83.86309052]
[108.60325623 -98.82114410]
[109.72421265 -113.77920532]
[110.84516144 -128.73725891]
[103.04646301 -138.98893738]
[104.27199554 -151.40901184]
[113.32446289 -159.40765381]
[114.63180542 -174.35057068]
[115.93914032 -189.29348755]
[117.24647522 -204.23641968]
[118.55381012 -219.17933655]
[110.99807739 -223.78112793]
[105.36183167 -230.54376221]
[102.22797394 -238.72413635]
[101.90643311 -247.43496704]
[104.40370941 -255.74110413]
[109.42518616 -262.75985718]
[116.40960693 -267.75488281]
[124.59168243 -270.21322632]
[126.82731628 -285.04568481]
[125.01454926 -293.97082520]
[129.18438721 -300.04864502]
[131.60475159 -314.85211182]
[134.02511597 -329.65554810]
[136.44548035 -344.45898438]
[134.74412537 -353.40600586]
[138.98939514 -359.43139648]
[141.59411621 -374.20352173]
[144.19883728 -388.97561646]
[146.80357361 -403.74774170]
[149.40829468 -418.51986694]
[110.19538879 -442.07363892]
[110.19538879 -457.07363892]
[110.19538879 -472.07363892]
[110.19538879 -487.07363892]
[110.19538879 -502.07363892]
[110.19538879 -517.07366943]
[104.14904785 -532.91278076]
[117.69538879 -543.10754395]
[131.24172974 -532.91278076]
[125.19538879 -517.07366943]
[125.19538879 -502.07363892]
[125.19538879 -487.07363892]
[125.19538879 -472.07363892]
[125.19538879 -457.07363892]
[125.19538879 -442.07363892]
[132.54667664 -440.58755493]
[142.47193909 -451.83428955]
[147.24926758 -437.61535645]
[154.60055542 -436.12927246]
[160.42707825 -449.95141602]
[166.25360107 -463.77355957]
[172.08012390 -477.59570312]
[172.66104126 -494.53967285]
[189.10366821 -498.67202759]
[197.62629700 -484.01593018]
[185.90226746 -471.76916504]
[180.07574463 -457.94702148]
[174.24922180 -444.12487793]
[168.42269897 -430.30273438]
[164.18040466 -415.91513062]
[161.57568359 -401.14303589]
[158.97096252 -386.37091064]
[156.36624146 -371.59878540]
[153.76152039 -356.82669067]
[151.24891663 -342.03860474]
[148.82855225 -327.23516846]
[146.40818787 -312.43173218]
[143.98782349 -297.62829590]
[141.65977478 -282.81005859]
[139.42414856 -267.97760010]
[153.54478455 -252.08166504]
[151.19355774 -230.66192627]
[133.49673462 -217.87199402]
[132.18939209 -202.92907715]
[130.88206482 -187.98616028]
[129.57472229 -173.04324341]
[128.26737976 -158.10031128]
[136.52444458 -142.60250854]
[125.80321503 -127.61631012]
[124.68226624 -112.65824890]
[123.56131744 -97.70019531]
[122.44036102 -82.74214172]
[129.20492554 -69.47224426]
[120.45796204 -56.28887177]
[119.33701324 -41.33081436]
[118.21606445 -26.37275505]
[117.09510803 -11.41469860]
[124.73831177 -2.06019068]
[123.94371033 10.39488602]
[114.59302521 19.25384331]
[113.28568268 34.19676208]
[111.97834778 49.13968277]
[110.67101288 64.08260345]
[109.36367798 79.02552795]
[118.56909943 90.86867523]
[133.37254333 93.28903961]
[148.17597961 95.70940399]
[162.97941589 98.12977600]
[177.78285217 100.55014038]
[192.58630371 102.97050476]
[207.38973999 105.39087677]
[216.10205078 92.85858154]
[229.39335632 85.35498047]
[244.62464905 84.36991882]
[258.77175903 90.09898376]
[269.02575684 101.40466309]
[273.35070801 116.04220581]
[270.88787842 131.10531616]
[262.12628174 143.60319519]
[248.80552673 151.05439758]
[233.57046509 151.97947693]
[219.44602966 146.19474792]
[209.23664856 134.84877014]
[204.96937561 120.19431305]
[190.16592407 117.77394867]
[175.36248779 115.35357666]
[160.55905151 112.93321228]
[145.75561523 110.51284790]
[130.95217896 108.09248352]
[116.14873505 105.67211151]
[110.37345886 110.45711517]
[124.43656158 115.67527771]
[126.94893646 130.46337891]
[115.39818573 140.03312683]
[101.33520508 134.81466675]
[98.82291412 120.02711487]
[93.04764557 124.81211853]
[92.67368317 139.80744934]
[92.29972839 154.80279541]
[91.92576599 169.79812622]
[100.22576904 179.64833069]
[99.62084961 192.11405945]
[90.97833252 200.55398560]
[90.41746521 215.54348755]
[89.85659790 230.53300476]
[89.29573059 245.52250671]
[88.73486328 260.51202393]
[88.26744080 275.50473022]
[87.89347839 290.50009155]
[87.51951599 305.49542236]
[87.14556122 320.49075317]
[100.69720459 325.80642700]
[109.65906525 340.52423096]
[107.87638855 360.38241577]
[112.29771423 374.71600342]
[116.71903992 389.04959106]
[131.77738953 391.78906250]
[143.83065796 401.22183228]
[150.10910034 415.18032837]
[149.16995239 430.45700073]
[141.22904968 443.54138184]
[128.11114502 451.42675781]
[112.83063507 452.30111694]
[98.89887238 445.96359253]
[89.51726532 433.87045288]
[86.84164429 418.80059814]
[91.48685455 404.21704102]
[102.38545227 393.47091675]
[97.96411896 379.13732910]
[93.54279327 364.80374146]
[86.04512787 364.61676025]
[85.67116547 379.61209106]
[85.29720306 394.60742188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 23]
[6 22]
[7 21]
[8 20]
[10 19]
[11 18]
[12 17]
[25 229]
[26 228]
[27 227]
[28 226]
[30 225]
[31 224]
[32 223]
[33 222]
[34 221]
[36 218]
[37 217]
[38 216]
[39 215]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[77 182]
[78 181]
[79 180]
[80 179]
[81 178]
[83 175]
[84 174]
[85 173]
[86 172]
[88 170]
[89 169]
[90 168]
[91 167]
[94 165]
[95 164]
[96 163]
[97 162]
[98 161]
[106 158]
[107 157]
[109 156]
[110 155]
[111 154]
[112 153]
[114 152]
[115 151]
[116 150]
[117 149]
[118 148]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[137 147]
[138 146]
[139 145]
[140 144]
[183 208]
[184 207]
[185 206]
[186 205]
[187 204]
[188 203]
[189 202]
[232 248]
[233 247]
[234 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
