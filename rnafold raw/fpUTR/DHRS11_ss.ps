%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGCCGGGCCGCGGCGGCCUCCGACUGGAUACGGCGGAUCGCCGGGGGCCUGAGGGUGGAGUCCCGGCCGGAGGCAGGCCGGGACUCUGGUGGGUCUAGGCGCGGAUCGGACCCAAGCAGGUCGGCGGCGGCGGCAGGAGAGCGGCCGGGCGUCAGCUCCUCGACCCCCGUGUCGGGCUAGUCCAGCGAGGCGGACGGGCGGCGUGGGCCC\
) } def
/len { sequence length } bind def

/coor [
[85.04663086 531.99017334]
[85.04663086 516.99017334]
[85.04663086 501.99017334]
[85.04663086 486.99017334]
[82.36511993 483.04147339]
[82.13364410 477.36694336]
[85.27220917 471.55346680]
[85.71051025 456.55987549]
[86.14881134 441.56628418]
[78.78670502 428.61834717]
[86.92393494 415.05017090]
[87.36223602 400.05657959]
[87.80053711 385.06295776]
[88.23883820 370.06936646]
[88.67713928 355.07577515]
[75.33750153 342.53585815]
[75.40434265 323.90811157]
[89.30221558 311.02975464]
[81.56491852 298.30249023]
[89.30221558 284.50231934]
[89.30221558 269.50231934]
[89.30221558 254.50230408]
[89.30221558 239.50230408]
[89.30221558 224.50230408]
[86.15975189 217.81553650]
[89.41340637 209.28353882]
[86.36898041 202.55155945]
[89.74695587 194.06800842]
[90.18525696 179.07441711]
[90.62355804 164.08082581]
[91.06185913 149.08723450]
[91.50015259 134.09362793]
[91.93845367 119.10003662]
[88.06063080 116.94849396]
[84.72912598 114.02142334]
[70.75840759 119.48210144]
[56.78768539 124.94277954]
[42.81696701 130.40345764]
[28.84624863 135.86413574]
[16.29511833 147.26174927]
[1.86843467 138.35629272]
[6.43215752 122.02812958]
[23.38557053 121.89341736]
[37.35628891 116.43273926]
[51.32700729 110.97206116]
[65.29772949 105.51138306]
[79.26844788 100.05070496]
[81.62442017 90.40115356]
[88.19866943 82.95510864]
[97.48201752 79.42186737]
[101.16989136 64.88227844]
[104.85776520 50.34268951]
[108.54563904 35.80310440]
[112.23351288 21.26351547]
[115.92138672 6.72392941]
[119.60926056 -7.81565762]
[115.50233459 -23.09452438]
[126.13124847 -33.52886200]
[117.10874939 -41.98858261]
[113.89933777 -54.96661377]
[118.57292175 -68.55650330]
[106.63381195 -77.63712311]
[94.69470215 -86.71774292]
[82.75559998 -95.79837036]
[70.81649017 -104.87899017]
[58.87738037 -113.95960999]
[46.93827057 -123.04022980]
[34.99916077 -132.12084961]
[23.06005287 -141.20147705]
[11.12094498 -150.28208923]
[-0.81816405 -159.36271667]
[-12.75727272 -168.44334412]
[-27.96868515 -164.81747437]
[-41.92874908 -171.86378479]
[-48.04595184 -186.25523376]
[-43.43193436 -201.19662476]
[-30.26529312 -209.63307190]
[-14.76291847 -207.58114624]
[-4.24455452 -196.00971985]
[-3.67665124 -180.38244629]
[8.26245689 -171.30181885]
[20.20156670 -162.22120667]
[32.14067459 -153.14057922]
[44.07978439 -144.05996704]
[56.01889038 -134.97933960]
[67.95800018 -125.89871979]
[79.89710999 -116.81809998]
[91.83621979 -107.73747253]
[103.77532959 -98.65685272]
[115.71443176 -89.57623291]
[127.65354156 -80.49561310]
[142.57514954 -82.02720642]
[152.42062378 -93.34384918]
[155.69094849 -101.86947632]
[162.49359131 -104.75257111]
[172.50337219 -115.92415619]
[182.51315308 -127.09573364]
[192.52293396 -138.26731873]
[202.53271484 -149.43890381]
[205.97930908 -164.88012695]
[220.23498535 -169.19580078]
[230.24476624 -180.36738586]
[240.25454712 -191.53897095]
[243.70112610 -206.98019409]
[257.95681763 -211.29586792]
[267.96658325 -222.46745300]
[264.28125000 -228.80458069]
[262.53558350 -236.23350525]
[263.04858398 -244.14884949]
[265.94772339 -251.85433960]
[271.14389038 -258.62390137]
[278.32611084 -263.76928711]
[286.97717285 -266.70770264]
[292.13034058 -280.79473877]
[297.28353882 -294.88177490]
[302.43670654 -308.96881104]
[295.55432129 -323.19583130]
[300.82656860 -338.09478760]
[315.12557983 -344.82638550]
[329.96795654 -339.39691162]
[336.54800415 -325.02752686]
[330.96188354 -310.24340820]
[316.52374268 -303.81564331]
[311.37057495 -289.72860718]
[306.21740723 -275.64157104]
[301.06420898 -261.55450439]
[312.73287964 -252.12890625]
[325.42123413 -260.12927246]
[338.10958862 -268.12960815]
[350.79794312 -276.12997437]
[358.99816895 -292.61904907]
[376.54843140 -292.61462402]
[389.11853027 -300.79949951]
[401.68862915 -308.98440552]
[414.25872803 -317.16931152]
[421.60144043 -331.18341064]
[436.48892212 -331.64425659]
[449.05902100 -339.82916260]
[452.08044434 -355.34194946]
[465.23263550 -364.10525513]
[480.71261597 -360.91998291]
[489.33636475 -347.67587280]
[485.98760986 -332.23043823]
[472.65307617 -323.74719238]
[457.24392700 -327.25906372]
[444.67382812 -319.07415771]
[438.23019409 -305.64547729]
[422.44363403 -304.59921265]
[409.87353516 -296.41430664]
[397.30343628 -288.22940063]
[384.73333740 -280.04449463]
[381.92773438 -268.27975464]
[371.52496338 -261.35748291]
[358.79830933 -263.44161987]
[346.10995483 -255.44126892]
[333.42160034 -247.44091797]
[320.73324585 -239.44055176]
[306.17608643 -212.35488892]
[279.13818359 -212.45767212]
[269.12838745 -201.28608704]
[266.39776611 -186.64392090]
[251.42613220 -181.52919006]
[241.41635132 -170.35760498]
[231.40655518 -159.18601990]
[228.67593384 -144.54385376]
[213.70429993 -139.42912292]
[203.69451904 -128.25753784]
[193.68473816 -117.08595276]
[183.67495728 -105.91436768]
[173.66517639 -94.74279022]
[163.73727417 -83.49837494]
[153.89179993 -72.18172455]
[161.25183105 -44.70688248]
[140.67083740 -29.84099007]
[145.04153442 -15.60209179]
[134.14884949 -4.12778425]
[130.46096802 10.41180325]
[126.77309418 24.95138931]
[123.08522034 39.49097824]
[119.39735413 54.03056335]
[115.70948029 68.57015228]
[112.02160645 83.10974121]
[120.53219604 102.86861420]
[106.93205261 119.53833771]
[106.49375153 134.53193665]
[106.05545044 149.52552795]
[105.61714935 164.51911926]
[105.17885590 179.51271057]
[104.74055481 194.50631714]
[104.41181183 209.50271606]
[104.30221558 224.50230408]
[104.30221558 239.50230408]
[104.30221558 254.50230408]
[104.30221558 269.50231934]
[104.30221558 284.50231934]
[112.03952026 298.30249023]
[104.30221558 311.02975464]
[114.18134308 317.63684082]
[119.59031677 328.08477783]
[119.28872681 339.72610474]
[113.46705627 349.67306519]
[103.67073059 355.51406860]
[103.23242950 370.50769043]
[102.79413605 385.50128174]
[102.35583496 400.49487305]
[101.91753387 415.48846436]
[109.24829102 429.50881958]
[101.14240265 442.00457764]
[100.70410156 456.99816895]
[100.26580048 471.99176025]
[100.04663086 486.99017334]
[100.04663086 501.99017334]
[100.04663086 516.99017334]
[100.04663086 531.99017334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 211]
[7 210]
[8 209]
[9 208]
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[18 197]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[26 190]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[50 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[56 176]
[58 174]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[92 172]
[93 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 166]
[101 164]
[102 163]
[103 162]
[105 160]
[106 159]
[113 126]
[114 125]
[115 124]
[116 123]
[127 157]
[128 156]
[129 155]
[130 154]
[132 151]
[133 150]
[134 149]
[135 148]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
