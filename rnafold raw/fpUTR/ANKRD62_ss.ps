%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGCUAGGUGCUCCUCCGAGCAGCUGGAGACUGGAGUGUCCCUGACGGAGGUUGCGGCUGGACCUGGUUACGUGCUGGUGCUGCGCUCCAGAGAGGCAGAAAACGAGUGGGAGCUGAGGUGUCUUAAAGCCGUUCCUCAGCCUGGGAGAAGAUCUCUGGCUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[-69.15706635 478.24505615]
[-75.84313965 491.67248535]
[-82.52922058 505.09994507]
[-81.75433350 520.90216064]
[-94.35351562 528.84631348]
[-101.03959656 542.27380371]
[-101.01390839 548.94866943]
[-103.94572449 553.87475586]
[-108.22888184 556.06701660]
[-115.40655518 569.23822021]
[-122.58422852 582.40942383]
[-121.63949585 598.78137207]
[-135.49232483 607.55810547]
[-149.89210510 599.71093750]
[-150.02558899 583.31231689]
[-135.75544739 575.23175049]
[-128.57777405 562.06054688]
[-121.40010071 548.88934326]
[-114.46704102 535.58770752]
[-107.78096771 522.16027832]
[-109.03408051 507.31848145]
[-95.95666504 498.41387939]
[-89.27059174 484.98641968]
[-82.58451843 471.55895996]
[-87.54665375 457.56210327]
[-80.95730591 443.84948730]
[-66.24243927 438.73965454]
[-59.55636215 425.31219482]
[-52.87028885 411.88476562]
[-46.18421173 398.45730591]
[-39.49813843 385.02984619]
[-32.81206131 371.60241699]
[-32.64476013 364.18405151]
[-25.87635994 357.99032593]
[-18.94330215 344.68872070]
[-12.01024342 331.38711548]
[-5.07718563 318.08551025]
[1.85587263 304.78390503]
[8.78893089 291.48229980]
[15.22574043 277.93359375]
[13.15214539 263.18402100]
[25.71604919 253.56848145]
[31.64781761 239.79118347]
[37.57958603 226.01387024]
[43.51135254 212.23657227]
[33.64932632 201.04702759]
[29.60692978 186.62591553]
[32.23752975 171.81912231]
[41.07209396 159.57287598]
[54.40178299 152.34747314]
[69.60825348 151.62312317]
[75.54001617 137.84582520]
[81.47178650 124.06851196]
[87.40355682 110.29120636]
[83.75351715 99.20555878]
[88.46771240 88.52891541]
[99.11912537 83.75797272]
[105.30446625 70.09263611]
[111.48981476 56.42729187]
[117.67515564 42.76195145]
[123.86050415 29.09661293]
[130.04585266 15.43127346]
[135.59347534 1.49485469]
[132.78660583 -14.07537270]
[144.25572205 -23.57845688]
[149.15379333 -37.75621414]
[154.05187988 -51.93397141]
[158.94996643 -66.11173248]
[163.71682739 -80.33413696]
[168.35208130 -94.59998322]
[172.98733521 -108.86583710]
[177.62258911 -123.13168335]
[177.30093384 -132.30064392]
[182.47755432 -137.61691284]
[179.67068481 -153.18714905]
[191.13980103 -162.69023132]
[196.03787231 -176.86798096]
[200.93595886 -191.04574585]
[205.83403015 -205.22349548]
[203.02716064 -220.79373169]
[214.49627686 -230.29681396]
[219.39434814 -244.47456360]
[214.64660645 -264.03945923]
[229.71092224 -276.12551880]
[234.08177185 -290.47457886]
[238.45262146 -304.82363892]
[242.82347107 -319.17272949]
[242.33242798 -328.33416748]
[247.40992737 -333.74517822]
[252.04518127 -348.01104736]
[256.68045044 -362.27688599]
[252.74345398 -378.19644165]
[264.74768066 -389.36920166]
[280.34420776 -384.30157471]
[283.48864746 -368.20672607]
[270.94628906 -357.64163208]
[266.31103516 -343.37579346]
[261.67578125 -329.10992432]
[257.17251587 -314.80187988]
[252.80168152 -300.45278931]
[248.43083191 -286.10372925]
[244.05999756 -271.75466919]
[249.67871094 -263.16256714]
[249.61819458 -252.67649841]
[243.65586853 -243.78405762]
[233.57211304 -239.57649231]
[228.67402649 -225.39872742]
[231.83125305 -210.84259033]
[220.01179504 -200.32542419]
[215.11370850 -186.14765930]
[210.21563721 -171.96990967]
[205.31755066 -157.79214478]
[208.47477722 -143.23600769]
[196.65531921 -132.71884155]
[191.88844299 -118.49642944]
[187.25318909 -104.23057556]
[182.61793518 -89.96472931]
[177.98268127 -75.69888306]
[178.90994263 -68.33679199]
[173.12771606 -61.21364975]
[168.22962952 -47.03589249]
[163.33155823 -32.85813522]
[158.43347168 -18.68037605]
[161.59069824 -4.12423611]
[149.77124023 6.39293528]
[164.25634766 2.49655795]
[176.44557190 11.23857117]
[177.40014648 26.20816612]
[166.42005920 36.42764282]
[151.55737305 34.40271759]
[143.71118164 21.61661911]
[137.52584839 35.28195953]
[131.34049988 48.94729614]
[125.15515137 62.61263657]
[118.96981049 76.27797699]
[112.78446198 89.94331360]
[114.87994385 106.57013702]
[101.18086243 116.22297668]
[95.24909210 130.00027466]
[89.31732178 143.77758789]
[83.38555908 157.55488586]
[93.30980682 169.09918213]
[97.22167969 183.74787903]
[94.39703369 198.58166504]
[85.44873047 210.66839600]
[72.19466400 217.64257812]
[57.28865814 218.16833496]
[51.35689163 231.94563293]
[45.42512131 245.72294617]
[39.49335480 259.50024414]
[41.14266968 275.23526001]
[29.00304413 283.86535645]
[29.68407440 288.24423218]
[28.98351669 292.20376587]
[27.20894623 295.35574341]
[24.76358986 297.45437622]
[22.09053612 298.41537476]
[15.15747833 311.71697998]
[8.22441959 325.01858521]
[1.29136145 338.32019043]
[-5.64169693 351.62179565]
[-12.57475471 364.92340088]
[-19.38461304 378.28848267]
[-26.07068825 391.71594238]
[-32.75676346 405.14337158]
[-39.44283676 418.57083130]
[-46.12891388 431.99829102]
[-52.81499100 445.42572021]
[-48.02504730 460.24780273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[5 20]
[6 19]
[9 18]
[10 17]
[11 16]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 152]
[42 150]
[43 149]
[44 148]
[45 147]
[51 141]
[52 140]
[53 139]
[54 138]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[63 125]
[65 123]
[66 122]
[67 121]
[68 120]
[69 118]
[70 117]
[71 116]
[72 115]
[74 114]
[76 112]
[77 111]
[78 110]
[79 109]
[81 107]
[82 106]
[84 102]
[85 101]
[86 100]
[87 99]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
