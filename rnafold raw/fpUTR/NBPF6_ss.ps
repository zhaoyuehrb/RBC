%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUAAUUCUGUUAUUGCAACUGCAGACCGUUACCUGGUACACUGGCUGCUACCUCCCUCACUCUUGUCAGAGUCGGAGCUACAGGCAGUGCCUUCAGCUCUGAGCUCAGGCAUCCCGGUCCCUGUUUUUGCGGUUAAGGACUCUAAAGUGUUGUGUCGUGUUCAUCAACUUUUUCUCAACCUCCCUGGCUCUACCUCUUCUGCCACAAACGUCAGC\
) } def
/len { sequence length } bind def

/coor [
[-33.19063187 217.82247925]
[-43.26498795 206.70909119]
[-50.96180344 193.83435059]
[-55.98158646 179.69923401]
[-58.12900543 164.85374451]
[-57.32050705 149.87554932]
[-53.58755112 135.34747314]
[-47.07538605 121.83481598]
[-38.03741455 109.86338806]
[-26.82531548 99.89900970]
[-13.87536907 92.32940674]
[0.30852526 87.44912720]
[15.17445087 85.44806671]
[30.14395332 86.40409088]
[44.63454819 90.27999115]
[58.08211899 96.92479706]
[73.01401520 98.35250092]
[87.94591522 99.78021240]
[75.52642059 91.36854553]
[63.10692215 82.95687866]
[50.68742752 74.54521942]
[35.36014938 77.32233429]
[22.88484192 68.61479187]
[20.33174133 53.98546219]
[7.91224337 45.57379913]
[-4.50725365 37.16213608]
[-17.04613686 28.92949295]
[-29.70182228 20.87756157]
[-42.35750961 12.82563019]
[-55.01319504 4.77369928]
[-67.66888428 -3.27823162]
[-84.33461761 3.87640047]
[-101.80457306 -0.37253186]
[-113.12305450 -14.13886738]
[-113.90054321 -31.78630066]
[-126.78200531 -39.47187042]
[-139.66346741 -47.15744400]
[-152.54492188 -54.84301376]
[-157.82522583 -46.30551529]
[-167.91409302 -40.15740204]
[-181.50656128 -38.76581573]
[-196.24107361 -43.76452637]
[-210.32415771 -48.92851639]
[-224.40724182 -54.09250259]
[-238.49032593 -59.25648880]
[-252.57341003 -64.42047882]
[-268.19369507 -61.90707016]
[-277.47927856 -73.55297089]
[-291.56237793 -78.71695709]
[-305.64544678 -83.88094330]
[-314.77380371 -83.89656067]
[-319.89263916 -89.22133636]
[-333.90017700 -94.58680725]
[-349.55493164 -92.29772949]
[-358.67248535 -104.07563019]
[-372.68005371 -109.44110107]
[-386.68762207 -114.80657959]
[-400.69515991 -120.17205048]
[-410.34896851 -115.17706299]
[-420.94030762 -116.29329681]
[-429.00128174 -122.91268921]
[-432.02603149 -132.66540527]
[-445.87390137 -138.43049622]
[-459.72177124 -144.19560242]
[-473.56967163 -149.96069336]
[-487.41754150 -155.72578430]
[-503.60168457 -153.07897949]
[-513.77508545 -165.94108582]
[-507.47225952 -181.08064270]
[-491.17697144 -182.92338562]
[-481.65243530 -169.57365417]
[-467.80456543 -163.80856323]
[-453.95669556 -158.04347229]
[-440.10882568 -152.27838135]
[-426.26092529 -146.51329041]
[-407.31454468 -150.39323425]
[-395.32971191 -134.17961121]
[-381.32214355 -128.81413269]
[-367.31457520 -123.44866180]
[-353.30703735 -118.08319092]
[-338.65420532 -120.75604248]
[-328.53469849 -108.59436798]
[-314.52716064 -103.22889709]
[-300.48147583 -97.96402740]
[-286.39837646 -92.80004120]
[-272.31530762 -87.63605499]
[-257.70233154 -90.51882172]
[-247.40942383 -78.50356293]
[-233.32633972 -73.33956909]
[-219.24325562 -68.17558289]
[-205.16017151 -63.01159668]
[-191.07708740 -57.84761047]
[-185.35487366 -62.69593430]
[-198.11344910 -70.58382416]
[-194.55421448 -85.15543365]
[-179.59591675 -86.27324677]
[-173.91044617 -72.39258575]
[-168.18823242 -77.24090576]
[-170.96934509 -91.98083496]
[-173.75047302 -106.72075653]
[-176.53160095 -121.46067810]
[-185.40980530 -135.90414429]
[-173.98852539 -148.43374634]
[-158.78686523 -140.92735291]
[-161.79167175 -124.24180603]
[-159.01054382 -109.50187683]
[-156.22943115 -94.76195526]
[-153.44830322 -80.02203369]
[-144.85935974 -67.72447205]
[-131.97789001 -60.03890228]
[-119.09643555 -52.35333252]
[-106.21497345 -44.66775894]
[-95.89285278 -51.04483032]
[-83.76740265 -52.43867493]
[-72.13073730 -48.52408218]
[-63.20885086 -39.98518372]
[-58.73580933 -28.39673042]
[-59.61695099 -15.93391800]
[-46.96126556 -7.88198757]
[-34.30558014 0.16994372]
[-21.64989090 8.22187519]
[-8.99420547 16.27380562]
[-4.22583008 16.13183212]
[0.68348682 18.97978020]
[3.90440965 24.74263954]
[16.32390785 33.15430450]
[28.74340439 41.56596756]
[43.27569199 38.50848770]
[55.99065781 46.86219025]
[59.09909058 62.12572098]
[71.51858521 70.53738403]
[83.93808746 78.94905090]
[96.35758209 87.36071014]
[111.01165771 90.56352234]
[125.80801392 88.10018921]
[140.60435486 85.63685608]
[155.40071106 83.17352295]
[167.74288940 73.27497864]
[181.56800842 78.81713104]
[196.36434937 76.35379791]
[211.16070557 73.89046478]
[225.95704651 71.42713165]
[229.20013428 68.56006622]
[232.82199097 67.02485657]
[236.35856628 66.77734375]
[239.40757751 67.62755585]
[241.67059326 69.27234650]
[256.58386230 67.66162872]
[271.49713135 66.05090332]
[286.41040039 64.44018555]
[301.32366943 62.82946396]
[308.50357056 51.43790054]
[320.75384521 46.33419800]
[333.51809692 49.17399597]
[342.18704224 58.70237350]
[357.12188721 57.30574417]
[372.05673218 55.90911484]
[380.79992676 42.94414520]
[395.84552002 38.68214035]
[410.08938599 45.13548660]
[416.80606079 59.25711441]
[412.82412720 74.37921906]
[400.02371216 83.36161041]
[384.44879150 81.96307373]
[373.45336914 70.84395599]
[358.51852417 72.24058533]
[343.58367920 73.63721466]
[333.41061401 87.03263092]
[316.36093140 88.96086884]
[302.93438721 77.74273682]
[288.02111816 79.35345459]
[273.10784912 80.96417236]
[258.19458008 82.57489777]
[243.28131104 84.18561554]
[228.42037964 86.22348022]
[213.62403870 88.68681335]
[198.82768250 91.15014648]
[184.03134155 93.61347961]
[172.74749756 103.33583832]
[157.86404419 97.96987915]
[143.06768799 100.43321228]
[128.27134705 102.89654541]
[113.47499084 105.35987854]
[110.59244537 112.28381348]
[124.44023132 118.04913330]
[118.67467499 131.89682007]
[104.82735443 126.13169098]
[101.94480896 133.05563354]
[110.62174225 145.29125977]
[119.29868317 157.52690125]
[127.97561646 169.76254272]
[143.01502991 167.15895081]
[157.69238281 171.34681702]
[169.09346008 181.49461365]
[174.95458984 195.58752441]
[174.11201477 210.82737732]
[166.73304749 224.18826294]
[154.28279114 233.01741028]
[139.23323059 235.56175232]
[124.57249451 231.31613159]
[113.21146393 221.12350464]
[107.40588379 207.00761414]
[108.30845642 191.77120972]
[115.73998260 178.43946838]
[107.06304169 166.20384216]
[98.38610840 153.96820068]
[89.70917511 141.73255920]
[91.45782471 156.63029480]
[93.20647430 171.52801514]
[89.76048279 186.12683105]
[83.51582336 199.76515198]
[74.71547699 211.91233826]
[63.70188141 222.09568787]
[50.90359116 229.91897583]
[36.81860352 235.07777405]
[21.99499130 237.37133789]
[7.00955677 236.71044922]
[-7.55459166 233.12080383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 133]
[19 132]
[20 131]
[21 130]
[24 127]
[25 126]
[26 125]
[27 122]
[28 121]
[29 120]
[30 119]
[31 118]
[35 112]
[36 111]
[37 110]
[38 109]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[48 86]
[49 85]
[50 84]
[52 83]
[53 82]
[55 80]
[56 79]
[57 78]
[58 77]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[98 108]
[99 107]
[100 106]
[101 105]
[134 183]
[135 182]
[136 181]
[137 180]
[139 178]
[140 177]
[141 176]
[142 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[155 167]
[156 166]
[157 165]
[188 207]
[189 206]
[190 205]
[191 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
