%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGACGGCGCGCCCCCGGCGGCUGCUGCGGCGGCGGGAGCGAGGCGACCGCUGAGGCCGCGGAGAGUGACGGCGGCCCGGCCGACGGGAGCCGGGGCGGGGCGGCGGCCCAGCGAAGGAGCGCGCGGGCGGUCUGGCCCCGCCCCCUCCCCGCCCGCCUUCCCGGUGACCUUCAGGGGCCCGGGUGGCGGGCGCAGGCCCCUGCGGCGGCGGCGGG\
) } def
/len { sequence length } bind def

/coor [
[54.75995255 374.58843994]
[42.12235641 382.38760376]
[38.91954041 397.04165649]
[35.71672821 411.69573975]
[32.51391602 426.34982300]
[38.00479507 441.80239868]
[27.16341591 454.10671997]
[11.14245796 450.60516357]
[6.42290878 434.89984131]
[17.85983658 423.14700317]
[21.06265068 408.49291992]
[24.26546478 393.83886719]
[27.46827888 379.18478394]
[19.23676300 366.82443237]
[22.27611923 351.91751099]
[35.29658127 343.36734009]
[38.49939728 328.71325684]
[41.70220947 314.05917358]
[44.90502548 299.40512085]
[43.26334381 292.20367432]
[48.26031113 284.56451416]
[43.62154007 270.41067505]
[54.29564667 258.73272705]
[57.70833969 244.12611389]
[61.12102890 229.51948547]
[64.53372192 214.91285706]
[67.94641876 200.30622864]
[71.35910797 185.69960022]
[74.77179718 171.09297180]
[78.18449402 156.48635864]
[81.59718323 141.87973022]
[85.00988007 127.27310181]
[73.99320984 117.09306335]
[59.70100403 121.64638519]
[45.40879440 126.19970703]
[31.11658287 130.75302124]
[16.82437325 135.30635071]
[2.53216243 139.85966492]
[-4.76854181 153.61965942]
[-19.32773972 158.03378296]
[-32.40079880 150.98887634]
[-46.69300842 155.54219055]
[-59.94936371 166.11128235]
[-73.77512360 156.29879761]
[-68.17346954 140.29699707]
[-51.24633026 141.24998474]
[-36.95412064 136.69667053]
[-30.36551857 123.38780212]
[-15.93604851 118.56649017]
[-2.02115822 125.56745911]
[12.27105236 121.01413727]
[26.56326294 116.46081543]
[40.85547256 111.90749359]
[55.14768219 107.35417175]
[69.43989563 102.80085754]
[73.26448822 100.62142944]
[77.22572327 98.97636414]
[63.29656982 93.41051483]
[49.36742020 87.84465790]
[35.43826675 82.27880096]
[21.50911713 76.71294403]
[7.57996607 71.14708710]
[-8.10599232 73.21137238]
[-17.05368614 61.30389404]
[-30.74619293 68.85699463]
[-46.08024597 65.79091644]
[-55.81557465 53.55337524]
[-55.35545349 37.92256165]
[-44.91714096 26.27886963]
[-29.42928314 24.12009239]
[-16.20477867 32.46553802]
[-11.48783016 47.37474442]
[3.20182228 44.91235352]
[13.14582157 57.21793747]
[27.07497215 62.78379440]
[41.00412369 68.34964752]
[54.93327713 73.91550446]
[68.86242676 79.48136139]
[82.79158020 85.04721832]
[96.74089813 77.43688965]
[112.27362823 80.78871155]
[124.05838013 71.50864410]
[135.84312439 62.22857285]
[147.62786865 52.94850159]
[145.33114624 37.66586685]
[152.34985352 23.09824753]
[166.97102356 14.64991760]
[184.52609253 15.94550419]
[188.97679138 1.62100327]
[193.42747498 -12.70349789]
[197.87817383 -27.02799988]
[202.32887268 -41.35250092]
[201.24732971 -47.86519241]
[203.30450439 -53.15482712]
[207.11814880 -56.02077103]
[211.97793579 -70.21170044]
[216.83770752 -84.40263367]
[221.69749451 -98.59356689]
[226.55726624 -112.78450012]
[231.41705322 -126.97543335]
[236.27682495 -141.16636658]
[241.13661194 -155.35729980]
[245.99638367 -169.54823303]
[250.85617065 -183.73915100]
[255.51187134 -197.99833679]
[259.96258545 -212.32284546]
[264.41326904 -226.64733887]
[261.11907959 -242.12181091]
[272.28430176 -251.98017883]
[276.73498535 -266.30468750]
[281.18566895 -280.62918091]
[285.63638306 -294.95367432]
[281.16171265 -312.81872559]
[294.51159668 -324.21328735]
[298.75634766 -338.60015869]
[303.00109863 -352.98703003]
[295.22583008 -366.74642944]
[299.53765869 -381.95114136]
[313.37847900 -389.58050537]
[328.53677368 -385.10815430]
[336.01937866 -371.18743896]
[331.38702393 -356.07730103]
[317.38796997 -348.74227905]
[313.14321899 -334.35540771]
[308.89846802 -319.96853638]
[314.40377808 -309.20153809]
[310.98959351 -297.18356323]
[299.96087646 -290.50299072]
[295.51019287 -276.17846680]
[291.05947876 -261.85397339]
[286.60879517 -247.52947998]
[290.22131348 -233.07960510]
[278.73776245 -222.19665527]
[274.28707886 -207.87214661]
[269.83636475 -193.54765320]
[271.22402954 -188.98344421]
[269.76342773 -183.49903870]
[265.04708862 -178.87937927]
[260.18731689 -164.68844604]
[255.32752991 -150.49751282]
[250.46775818 -136.30657959]
[245.60797119 -122.11565399]
[240.74819946 -107.92472076]
[235.88842773 -93.73378754]
[231.02864075 -79.54285431]
[226.16886902 -65.35192108]
[221.30908203 -51.16099167]
[216.65336609 -36.90180969]
[212.20268250 -22.57730675]
[207.75198364 -8.25280571]
[203.30128479 6.07169533]
[198.85060120 20.39619637]
[205.97486877 33.59637833]
[220.39181519 37.73783493]
[234.80876160 41.87928772]
[249.22570801 46.02074432]
[263.64263916 50.16219711]
[278.05960083 54.30365372]
[292.47653198 58.44510651]
[306.89349365 62.58656311]
[318.53097534 57.03396225]
[330.45098877 60.77595520]
[336.42984009 71.28736115]
[350.78588867 75.63520050]
[365.14193726 79.98303223]
[379.49801636 84.33086395]
[393.85406494 88.67870331]
[402.96826172 88.17079163]
[408.38403320 93.19323730]
[417.50460815 92.81612396]
[422.84777832 97.91574097]
[437.07321167 102.67360687]
[451.29861450 107.43148041]
[467.25146484 103.63166809]
[478.32049561 115.73161316]
[473.11883545 131.28393555]
[456.99749756 134.28973389]
[446.54077148 121.65690613]
[432.31533813 116.89903259]
[418.08990479 112.14116669]
[403.83071899 107.48545074]
[389.50622559 103.03475952]
[375.15017700 98.68692017]
[360.79412842 94.33908844]
[346.43804932 89.99124908]
[332.08200073 85.64341736]
[315.23001099 90.54909515]
[302.75204468 77.00350952]
[288.33508301 72.86205292]
[273.91815186 68.72059631]
[259.50119019 64.57914734]
[245.08424377 60.43769073]
[230.66729736 56.29623413]
[216.25035095 52.15478134]
[201.83340454 48.01332855]
[191.28010559 64.84249878]
[173.49993896 70.89147949]
[156.90794373 64.73324585]
[145.12319946 74.01332092]
[133.33845520 83.29338837]
[121.55370331 92.57346344]
[121.67583466 115.66307068]
[99.61650085 130.68579102]
[96.20381165 145.29241943]
[92.79111481 159.89904785]
[89.37842560 174.50567627]
[85.96573639 189.11230469]
[82.55303955 203.71891785]
[79.14035034 218.32554626]
[75.72765350 232.93217468]
[72.31496429 247.53880310]
[68.90227509 262.14541626]
[73.29694366 277.34402466]
[62.86693954 287.97720337]
[59.55910110 302.60791016]
[56.35628891 317.26199341]
[53.15347290 331.91607666]
[49.95066071 346.57015991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[16 218]
[17 217]
[18 216]
[19 215]
[21 214]
[23 212]
[24 211]
[25 210]
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[38 50]
[41 47]
[42 46]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[64 72]
[81 201]
[82 200]
[83 199]
[84 198]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[104 138]
[105 135]
[106 134]
[107 133]
[109 131]
[110 130]
[111 129]
[112 128]
[114 125]
[115 124]
[116 123]
[153 195]
[154 194]
[155 193]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[169 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
