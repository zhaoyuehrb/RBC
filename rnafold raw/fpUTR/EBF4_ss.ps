%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGCGGGGCGGCGCGGGAACCGGGCCCCGGGGGGAGUCGGCCGGGCUGCUGCUGCUGCUGCUCCAGGUGCUGCCGCCCGGGGCUACGGCAGGGCCGGGACGCCGGGGCACGCGGGGCGCUGGCGCUGGCGGCGGCGGCGUCUGCUGGCCCGGCGCGGCCCCAGCCUUUCCCCGGGACGCGCGGCUGCUGCUGCUCCUGCCGCCGCUGCCGCCACUGUCGCCGCCGCCGCCGAGCUCCGCGCCCGCAGC\
CUCCGCCUCCCGG\
) } def
/len { sequence length } bind def

/coor [
[101.63093567 127.25525665]
[92.36689758 139.05261230]
[83.10285950 150.84996033]
[73.83882141 162.64732361]
[64.57478333 174.44468689]
[55.31074905 186.24203491]
[52.48659515 194.89120483]
[45.86898804 198.12223816]
[36.46780396 209.81060791]
[27.06662560 221.49896240]
[17.66544342 233.18733215]
[18.28127670 246.04782104]
[10.23950577 255.58471680]
[-1.74564934 257.05136108]
[-11.28269196 268.62911987]
[-20.81973457 280.20690918]
[-29.73542404 292.26968384]
[-38.00514221 304.78414917]
[-46.27486420 317.29858398]
[-47.42789078 333.07772827]
[-60.89982986 339.43038940]
[-69.16954803 351.94482422]
[-77.43927002 364.45928955]
[-81.12717438 381.00729370]
[-98.04936218 382.04443359]
[-103.73052216 366.07067871]
[-89.95373535 356.18957520]
[-81.68401337 343.67510986]
[-73.41429138 331.16064453]
[-72.85276794 316.27664185]
[-58.78932571 309.02886963]
[-50.51960373 296.51440430]
[-42.24988556 283.99996948]
[-53.42826080 273.99777222]
[-64.95014954 283.60223389]
[-70.09801483 299.17245483]
[-86.20885468 302.23397827]
[-96.70921326 289.63735962]
[-90.79722595 274.34094238]
[-74.55463409 272.08035278]
[-63.03274918 262.47586060]
[-43.88391113 261.36349487]
[-32.39750671 270.66986084]
[-22.86046410 259.09210205]
[-13.32342243 247.51431274]
[-11.35200310 230.06144714]
[5.97708225 223.78614807]
[15.37826347 212.09777832]
[24.77944374 200.40942383]
[34.18062592 188.72105408]
[43.51339340 176.97799683]
[52.77742767 165.18064880]
[62.04146576 153.38328552]
[71.30550385 141.58593750]
[80.56954193 129.78857422]
[89.83358002 117.99121857]
[85.09847260 103.75820160]
[69.76217651 107.64518738]
[59.48162460 96.86745453]
[44.99652100 92.97106934]
[30.51141930 89.07469177]
[16.02631569 85.17830658]
[1.54121411 81.28192139]
[-12.94388771 77.38553619]
[-26.52480888 85.01418304]
[-41.15925598 80.85635376]
[-48.34831619 67.86200714]
[-62.83341980 63.96562195]
[-77.31851959 60.06923676]
[-91.80361938 56.17285156]
[-106.28872681 52.27646637]
[-121.62501526 56.16345215]
[-131.90557861 45.38572311]
[-146.39067078 41.48933792]
[-160.87577820 37.59295273]
[-175.36088562 33.69656754]
[-191.05720520 38.44604492]
[-202.83180237 27.03153801]
[-198.57197571 11.19531536]
[-182.65986633 7.22832584]
[-171.46449280 19.21146584]
[-156.97940063 23.10785103]
[-142.49429321 27.00423622]
[-128.00918579 30.90062141]
[-113.70896912 26.73493958]
[-102.39234161 37.79136276]
[-87.90724182 41.68774796]
[-73.42213440 45.58413315]
[-58.93703461 49.48051834]
[-44.45193100 53.37690353]
[-31.71396828 45.74277878]
[-16.96850777 49.48792267]
[-9.04750347 62.90043259]
[5.43759871 66.79681396]
[19.92270088 70.69319916]
[34.40780258 74.58958435]
[48.89290619 78.48596954]
[63.37800598 82.38235474]
[77.67823029 78.21667480]
[88.99485779 89.27309418]
[103.95804596 88.22286987]
[117.75685883 82.34130096]
[131.55566406 76.45973969]
[145.35447693 70.57817078]
[159.15328979 64.69660950]
[172.95210266 58.81504059]
[182.61334229 46.28623199]
[197.35525513 48.41351318]
[211.15405273 42.53194809]
[220.81529236 30.00313950]
[235.55720520 32.13042450]
[249.35601807 26.24885750]
[263.15481567 20.36729240]
[276.95364380 14.48572731]
[290.75244141 8.60416222]
[296.26748657 -3.03009152]
[307.85366821 -7.65425587]
[319.11657715 -3.30206108]
[332.98315430 -9.02207565]
[346.84970093 -14.74209023]
[360.71627808 -20.46210480]
[374.58282471 -26.18211937]
[381.29370117 -32.32603836]
[388.64486694 -31.88692093]
[402.57730103 -37.44460297]
[416.50970459 -43.00228882]
[423.29190063 -49.06741333]
[430.63742065 -48.54247665]
[444.63378906 -53.93706894]
[454.72796631 -66.11976624]
[469.38632202 -63.47739029]
[483.38269043 -68.87198639]
[497.37905884 -74.26657867]
[511.34368896 -79.74281311]
[525.27612305 -85.30049896]
[539.20849609 -90.85817719]
[553.14093018 -96.41586304]
[567.07336426 -101.97354889]
[581.00573730 -107.53122711]
[594.93817139 -113.08891296]
[608.87060547 -118.64659882]
[622.80297852 -124.20428467]
[636.73541260 -129.76196289]
[650.66784668 -135.31964111]
[664.60021973 -140.87733459]
[678.53265381 -146.43501282]
[688.48388672 -158.73477173]
[703.17205811 -156.26376343]
[713.12329102 -168.56350708]
[727.81152344 -166.09249878]
[734.59368896 -172.15762329]
[741.93920898 -171.63269043]
[755.93560791 -177.02728271]
[769.93194580 -182.42187500]
[783.92834473 -187.81646729]
[781.39843750 -194.08256531]
[781.32080078 -201.79264832]
[784.26269531 -209.98637390]
[790.42602539 -217.51637268]
[802.27728271 -226.71136475]
[814.12847900 -235.90635681]
[825.97973633 -245.10134888]
[837.83099365 -254.29634094]
[843.99133301 -268.86895752]
[858.78991699 -270.55764771]
[870.64117432 -279.75262451]
[882.49243164 -288.94763184]
[879.24456787 -303.86117554]
[882.79754639 -318.70501709]
[892.44573975 -330.53186035]
[906.27362061 -336.99349976]
[921.53558350 -336.80697632]
[935.20141602 -330.00927734]
[944.55767822 -317.95016479]
[947.74676514 -303.02392578]
[944.13537598 -288.19418335]
[934.44067383 -276.40542603]
[920.58746338 -269.99829102]
[905.32635498 -270.24493408]
[891.68737793 -277.09637451]
[879.83612061 -267.90136719]
[867.98486328 -258.70639038]
[862.67224121 -244.79147339]
[847.02600098 -242.44508362]
[835.17474365 -233.25009155]
[823.32348633 -224.05509949]
[811.47222900 -214.86012268]
[799.62097168 -205.66513062]
[804.35607910 -191.43211365]
[819.35382080 -191.16934204]
[834.35150146 -190.90658569]
[848.28509521 -198.40095520]
[860.87487793 -190.44189453]
[875.87255859 -190.17913818]
[889.80615234 -197.67350769]
[902.39593506 -189.71444702]
[917.39361572 -189.45169067]
[931.32720947 -196.94606018]
[943.91699219 -188.98699951]
[958.91473389 -188.72424316]
[972.98815918 -197.14271545]
[987.18188477 -188.92869568]
[986.89459229 -172.53205872]
[972.42187500 -164.82026672]
[958.65197754 -173.72654724]
[943.65423584 -173.98930359]
[930.79339600 -166.47613525]
[917.13085938 -174.45399475]
[902.13317871 -174.71675110]
[889.27233887 -167.20358276]
[875.60980225 -175.18144226]
[860.61212158 -175.44419861]
[847.75128174 -167.93103027]
[834.08874512 -175.90888977]
[819.09106445 -176.17164612]
[804.09332275 -176.43440247]
[789.32293701 -173.82009888]
[775.32653809 -168.42550659]
[761.33020020 -163.03091431]
[747.33380127 -157.63632202]
[733.36920166 -152.16007996]
[724.41448975 -140.25785828]
[708.72973633 -142.33134460]
[699.77508545 -130.42912292]
[684.09033203 -132.50259399]
[670.15789795 -126.94491577]
[656.22552490 -121.38723755]
[642.29309082 -115.82955170]
[628.36065674 -110.27186584]
[614.42828369 -104.71417999]
[600.49584961 -99.15650177]
[586.56341553 -93.59881592]
[572.63104248 -88.04113007]
[558.69860840 -82.48345184]
[544.76617432 -76.92576599]
[530.83380127 -71.36808014]
[516.90136719 -65.81040192]
[511.87075806 -60.43215561]
[502.77365112 -60.27021027]
[488.77728271 -54.87561417]
[474.78091431 -49.48102188]
[465.68783569 -37.68418121]
[450.02838135 -39.94070053]
[436.03201294 -34.54610443]
[422.06738281 -29.06987381]
[408.13497925 -23.51218987]
[394.20254517 -17.95450592]
[380.30282593 -12.31556129]
[366.43627930 -6.59554672]
[352.56973267 -0.87553209]
[338.70315552 4.84448242]
[324.83660889 10.56449699]
[314.87603760 25.03086472]
[296.63400269 22.40297318]
[282.83520508 28.28453827]
[269.03640747 34.16610336]
[255.23757935 40.04766846]
[241.43876648 45.92923355]
[232.76451111 58.03735733]
[217.03562927 56.33076096]
[203.23681641 62.21232605]
[194.56256104 74.32044983]
[178.83366394 72.61385345]
[165.03485107 78.49541473]
[151.23603821 84.37698364]
[137.43724060 90.25854492]
[123.63842010 96.14011383]
[109.83960724 102.02167511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[6 51]
[8 50]
[9 49]
[10 48]
[11 47]
[14 45]
[15 44]
[16 43]
[17 33]
[18 32]
[19 31]
[21 29]
[22 28]
[23 27]
[34 41]
[35 40]
[57 100]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[73 84]
[74 83]
[75 82]
[76 81]
[101 268]
[102 267]
[103 266]
[104 265]
[105 264]
[106 263]
[108 261]
[109 260]
[111 258]
[112 257]
[113 256]
[114 255]
[115 254]
[118 252]
[119 251]
[120 250]
[121 249]
[122 248]
[124 247]
[125 246]
[126 245]
[128 244]
[129 243]
[131 241]
[132 240]
[133 239]
[134 237]
[135 236]
[136 235]
[137 234]
[138 233]
[139 232]
[140 231]
[141 230]
[142 229]
[143 228]
[144 227]
[145 226]
[146 225]
[148 223]
[150 221]
[152 220]
[153 219]
[154 218]
[155 217]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[165 182]
[166 181]
[167 180]
[189 216]
[190 215]
[191 214]
[193 212]
[194 211]
[196 209]
[197 208]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
