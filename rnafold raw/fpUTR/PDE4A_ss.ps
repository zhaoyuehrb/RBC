%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGGGCGCACCCGCGGGGCCCUGGGCUCGCUGGCUUGCGCGCAGCUGAGCGGGGUGUAGGUUGGAAGGGCCAGGGCCCCCUGGGGCGCAAGUGGGGGCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[185.41343689 480.34426880]
[183.25926208 465.49975586]
[181.10510254 450.65527344]
[178.95092773 435.81076050]
[176.79675293 420.96624756]
[158.60752869 410.23321533]
[153.82408142 389.38162231]
[165.81898499 371.33822632]
[161.55529785 356.95693970]
[157.29161072 342.57568359]
[153.02793884 328.19439697]
[148.03358459 322.59118652]
[148.85502625 313.33697510]
[145.00755310 298.83880615]
[141.16007996 284.34063721]
[137.31260681 269.84246826]
[126.56964111 259.52557373]
[130.50836182 244.20249939]
[126.66088867 229.70433044]
[122.81341553 215.20616150]
[118.96594238 200.70799255]
[115.11846161 186.20980835]
[111.27098846 171.71163940]
[107.42351532 157.21347046]
[103.57604218 142.71530151]
[99.72856903 128.21713257]
[95.88108826 113.71896362]
[86.15526581 103.67406464]
[89.62073517 90.12850952]
[85.77326202 75.63034058]
[72.38756561 67.66410828]
[68.69220734 52.90609741]
[76.36927795 40.19396973]
[72.52180481 25.69580078]
[68.67433167 11.19762993]
[64.82685852 -3.30053973]
[60.97938156 -17.79870987]
[57.13190842 -32.29687881]
[53.28443146 -46.79505157]
[49.43695831 -61.29322052]
[45.58948517 -75.79138947]
[41.74200821 -90.28955841]
[37.89453506 -104.78772736]
[26.87636757 -116.14160919]
[31.09029007 -130.42768860]
[20.07212257 -141.78157043]
[24.28604507 -156.06765747]
[20.43857002 -170.56582642]
[10.53180218 -184.32417297]
[21.01000786 -197.65248108]
[36.71808624 -191.27340698]
[34.93674088 -174.41329956]
[38.78421402 -159.91513062]
[49.52718353 -149.59825134]
[45.58845901 -134.27516174]
[56.33142853 -123.95829010]
[52.39270401 -108.63520813]
[56.24018097 -94.13703918]
[60.08765411 -79.63886261]
[63.93512726 -65.14069366]
[67.78260040 -50.64252472]
[71.63008118 -36.14435577]
[75.47755432 -21.64618492]
[79.32502747 -7.14801455]
[83.17250061 7.35015583]
[87.01997375 21.84832573]
[90.86745453 36.34649658]
[103.83746338 43.57937241]
[107.94587708 58.22776794]
[100.27143097 71.78286743]
[104.11891174 86.28103638]
[113.84473419 96.32593536]
[110.37926483 109.87149048]
[114.22673798 124.36965942]
[118.07421112 138.86782837]
[121.92168427 153.36599731]
[125.76915741 167.86416626]
[129.61663818 182.36233521]
[133.46411133 196.86050415]
[137.31158447 211.35868835]
[141.15905762 225.85685730]
[145.00653076 240.35502625]
[156.02470398 251.70889282]
[151.81077576 265.99499512]
[155.65824890 280.49316406]
[159.50572205 294.99133301]
[163.35321045 309.48950195]
[167.40921021 323.93072510]
[171.67288208 338.31198120]
[175.93656921 352.69326782]
[180.20025635 367.07452393]
[189.39649963 368.66217041]
[197.49577332 373.20904541]
[203.58192444 380.16717529]
[206.97785950 388.71780396]
[207.32072449 397.86770630]
[204.60049438 406.56454468]
[199.15773010 413.81790161]
[191.64126587 418.81207275]
[193.79544067 433.65658569]
[195.94960022 448.50109863]
[198.10377502 463.34561157]
[200.25794983 478.19012451]
[213.07067871 487.44265747]
[215.50558472 503.05825806]
[206.11808777 515.77246094]
[190.47763062 518.04211426]
[177.86340332 508.52072144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[8 91]
[9 90]
[10 89]
[11 88]
[13 87]
[14 86]
[15 85]
[16 84]
[18 82]
[19 81]
[20 80]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[29 71]
[30 70]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[45 55]
[47 53]
[48 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
