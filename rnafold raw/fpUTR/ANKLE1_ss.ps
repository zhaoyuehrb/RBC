%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGCACACCCGGUGGCAUCCUCCCACCCGGGCUCUUAUCGGCGGUCCCAGACCCUGCUUGAGCGCCUCCGGGUGUCAAGGGCCCCUGAGGACACUAAAGCUCUCGAACCCCG\
) } def
/len { sequence length } bind def

/coor [
[253.48089600 270.00372314]
[243.93318176 266.66088867]
[235.85273743 260.52532959]
[230.03413391 252.17732239]
[227.05657959 242.41577148]
[227.22631836 232.18174744]
[230.54528809 222.46780396]
[219.30717468 212.53276062]
[208.06907654 202.59771729]
[196.83096313 192.66268921]
[185.59284973 182.72764587]
[174.35475159 172.79261780]
[163.11663818 162.85757446]
[151.87854004 152.92253113]
[137.21849060 150.28964233]
[132.00398254 135.35246277]
[120.76588440 125.41741943]
[109.52777863 115.48238373]
[113.65920258 129.90220642]
[107.05463409 143.36993408]
[93.12402344 148.93214417]
[79.05978394 143.71707153]
[72.12330627 130.41723633]
[75.89591217 115.89940643]
[88.43180084 107.65872192]
[73.43319702 107.86360168]
[59.62902832 116.71667480]
[45.18615341 108.94909668]
[44.96216202 92.55147552]
[59.18748093 84.39228821]
[73.22831726 92.86499786]
[88.22692108 92.66011810]
[96.02067566 79.84382629]
[89.30225372 66.43253326]
[82.58383179 53.02124023]
[75.86540985 39.60994720]
[62.06168747 38.35835648]
[50.78860092 30.48272705]
[44.95758438 18.14864159]
[46.00901794 4.65527487]
[53.55804062 -6.44690132]
[47.20845413 -20.03670311]
[40.85886765 -33.62650681]
[34.30260468 -40.18523788]
[34.52712250 -47.67533875]
[28.55110550 -61.43350983]
[22.57508850 -75.19168091]
[16.59907341 -88.94985199]
[4.74297380 -101.06880951]
[13.10622883 -115.81642914]
[29.59268570 -111.86256409]
[30.35724258 -94.92586517]
[36.33325958 -81.16769409]
[42.30927658 -67.40952301]
[48.28528976 -53.65135574]
[54.44866943 -39.97609329]
[60.79825592 -26.38629150]
[67.14784241 -12.79648972]
[83.29896545 -10.23290825]
[94.89048767 1.53578246]
[97.25571442 18.05123901]
[89.27671051 32.89152527]
[95.99513245 46.30281830]
[102.71355438 59.71411133]
[109.43197632 73.12540436]
[119.46281433 104.24427795]
[130.70092773 114.17931366]
[141.93902588 124.11435699]
[157.40290833 127.45786285]
[161.81358337 141.68443298]
[173.05168152 151.61946106]
[184.28979492 161.55450439]
[195.52789307 171.48954773]
[206.76600647 181.42457581]
[218.00410461 191.35961914]
[229.24221802 201.29466248]
[240.48031616 211.22969055]
[260.17318726 205.34924316]
[279.38748169 212.25416565]
[290.68258667 229.10064697]
[289.78552246 249.22851562]
[302.27178955 257.54077148]
[314.75802612 265.85299683]
[327.36456299 260.09237671]
[341.05963135 261.33871460]
[352.24099731 269.15582275]
[358.02145386 281.39358521]
[356.97393799 294.77822876]
[369.22848511 303.42843628]
[381.48303223 312.07864380]
[393.73760986 320.72885132]
[405.99215698 329.37905884]
[421.72842407 331.01620483]
[427.66427612 344.67691040]
[443.19421387 341.74493408]
[456.20147705 350.72195435]
[458.96908569 366.28201294]
[449.85507202 379.19363403]
[434.26660156 381.79660034]
[421.45205688 372.54656982]
[419.01406860 356.93145752]
[404.15432739 355.91302490]
[397.34194946 341.63360596]
[385.08740234 332.98339844]
[372.83285522 324.33319092]
[360.57830811 315.68298340]
[348.32373047 307.03277588]
[333.02816772 312.81863403]
[317.12545776 308.34994507]
[306.87921143 295.18298340]
[306.44580078 278.33926392]
[293.95953369 270.02700806]
[281.47326660 261.71475220]
[273.20474243 267.38577271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 77]
[8 76]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[16 68]
[17 67]
[18 66]
[25 32]
[26 31]
[33 65]
[34 64]
[35 63]
[36 62]
[41 58]
[42 57]
[43 56]
[45 55]
[46 54]
[47 53]
[48 52]
[81 113]
[82 112]
[83 111]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[94 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
