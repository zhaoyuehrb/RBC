%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAUGCUCAGCUCAGCUCGGCCCUCGCCUUUGAUUUAUUUUUUUUCUGGGCGGCCGCUGCGACCCGGGACUGACUUCGGGAUGGGAAGUGGAGCCCCCGGAGCUGCUACCGUGGCGGCGGCGCUGUGAGGAGCAGCCAGGGGGAGGCAGCUGCGGCUCGCCGGUGAGUAUCCGGGAAGCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[120.64115906 380.34570312]
[119.63927460 365.37918091]
[118.63738251 350.41268921]
[117.63549042 335.44619751]
[109.06538391 323.26412964]
[115.86365509 308.97796631]
[107.29354858 296.79592896]
[114.09181976 282.50976562]
[113.08992767 267.54327393]
[98.61256409 256.36312866]
[96.85453796 237.83569336]
[109.39302063 223.65423584]
[107.89158630 208.72956848]
[106.39015198 193.80490112]
[104.88871002 178.88023376]
[103.38727570 163.95556641]
[94.41489410 152.06668091]
[100.73199463 137.56135559]
[76.81047058 129.23651123]
[63.75102234 107.73323059]
[49.28398514 111.69616699]
[34.81694794 115.65909576]
[20.34991074 119.62202454]
[5.88287306 123.58496094]
[2.18726444 127.32743073]
[-2.14355135 129.08836365]
[-6.24322605 128.95935059]
[-9.40887737 127.36446381]
[-24.05632591 130.59745789]
[-38.70377350 133.83045959]
[-53.35121918 137.06346130]
[-60.94641876 147.50431824]
[-73.22744751 149.88729858]
[-83.49550629 143.46893311]
[-98.19493103 146.45671082]
[-102.40450287 161.17195129]
[-112.97879028 172.23735046]
[-127.48789978 177.11016846]
[-142.59774780 174.67065430]
[-154.83619690 165.47941589]
[-161.39093018 151.64851379]
[-160.75575256 136.35618591]
[-153.07658386 123.11650848]
[-140.11807251 114.97185516]
[-124.85796356 113.79381561]
[-110.80293274 119.85308075]
[-101.18272400 131.75729370]
[-86.48329926 128.76950073]
[-73.99590302 116.45142365]
[-56.58421707 122.41600800]
[-41.93677139 119.18300629]
[-27.28932190 115.95001221]
[-12.64187527 112.71701813]
[1.91994226 109.11791992]
[16.38698006 105.15499115]
[30.85401726 101.19205475]
[45.32105637 97.22912598]
[59.78809357 93.26619720]
[64.94455719 79.18035889]
[56.45535278 66.81373596]
[47.96614456 54.44710922]
[39.47693634 42.08048630]
[24.19425583 39.06761551]
[15.76116085 26.40517044]
[18.72765350 11.85403538]
[10.23844814 -0.51258785]
[1.74924123 -12.87921143]
[-6.73996496 -25.24583435]
[-20.18917847 -26.17013741]
[-30.49594116 -34.55430984]
[-34.03339767 -47.15882874]
[-29.72411919 -59.31437683]
[-38.00549698 -71.82112885]
[-46.28687286 -84.32788086]
[-61.19774246 -91.15415192]
[-62.47185898 -107.50373077]
[-48.79852676 -116.55756378]
[-34.24369049 -109.00184631]
[-33.78012466 -92.60925293]
[-25.49874687 -80.10250854]
[-17.21737099 -67.59575653]
[-0.61639845 -64.96041870]
[9.14212990 -50.86186600]
[5.62665844 -33.73504257]
[14.11586475 -21.36841774]
[22.60507202 -9.00179386]
[31.09427834 3.36482906]
[45.73929596 5.82634592]
[54.52472305 18.24692917]
[51.84356308 33.59128189]
[60.33276749 45.95790482]
[68.82197571 58.32452774]
[77.31118011 70.69114685]
[92.17386627 65.71153259]
[106.93555450 67.45496368]
[118.84967041 74.91050720]
[130.46467590 65.41885376]
[142.07969666 55.92719269]
[153.69470215 46.43553543]
[165.30970764 36.94387436]
[171.09965515 22.22018814]
[185.85079956 20.15791321]
[190.52784729 12.28799343]
[197.74012756 10.60665035]
[209.51211548 1.31040168]
[221.28410339 -7.98584652]
[233.05609131 -17.28209496]
[244.82809448 -26.57834244]
[256.60006714 -35.87459183]
[261.40798950 -43.66526031]
[268.64733887 -45.22585297]
[280.57302856 -54.32409668]
[285.51043701 -62.03333664]
[292.77484131 -63.47274399]
[299.29534912 -77.88779449]
[314.13131714 -79.20829010]
[326.20736694 -88.10597992]
[338.28341675 -97.00367737]
[350.35946655 -105.90137482]
[362.43551636 -114.79907227]
[371.60055542 -129.06225586]
[387.84347534 -124.20381927]
[387.67138672 -107.25074768]
[371.33319092 -102.72302246]
[359.25714111 -93.82532501]
[347.18109131 -84.92762756]
[335.10504150 -76.02993011]
[323.02899170 -67.13223267]
[317.37225342 -53.35360718]
[301.67254639 -51.39669418]
[289.67126465 -42.39841080]
[277.74557495 -33.30016708]
[265.89633179 -24.10260010]
[254.12432861 -14.80635262]
[242.35234070 -5.51010418]
[230.58035278 3.78614402]
[218.80836487 13.08239269]
[207.03637695 22.37864113]
[195.34246826 31.77292252]
[190.38330078 45.81770325]
[174.80136108 48.55888367]
[163.18635559 58.05054092]
[151.57135010 67.54219818]
[139.95634460 77.03385925]
[128.34132385 86.52552032]
[134.46110535 99.02302551]
[134.78843689 114.18292236]
[148.17622375 120.94807434]
[161.56399536 127.71322632]
[175.00784302 134.36628723]
[188.50680542 140.90678406]
[202.00575256 147.44728088]
[218.31387329 145.72180176]
[227.74214172 159.13969421]
[220.59156799 173.89778137]
[204.21804810 174.81420898]
[195.46525574 160.94624329]
[181.96629333 154.40574646]
[168.46734619 147.86524963]
[161.06219482 147.77790833]
[154.79884338 141.10101318]
[141.41107178 134.33586121]
[128.02328491 127.57070923]
[115.65666199 136.05990601]
[124.73644257 149.01631165]
[118.31194305 162.45413208]
[119.81337738 177.37879944]
[121.31481934 192.30346680]
[122.81625366 207.22813416]
[124.31768799 222.15280151]
[134.83137512 227.75309753]
[141.26255798 237.63726807]
[142.10583496 249.27900696]
[137.26672363 259.76885986]
[128.05642700 266.54138184]
[129.05831909 281.50787354]
[137.70008850 294.76043701]
[130.83015442 307.97610474]
[139.47192383 321.22863770]
[132.60198975 334.44430542]
[133.60388184 349.41079712]
[134.60577393 364.37728882]
[135.60766602 379.34381104]
[146.68904114 390.94479370]
[144.38546753 406.82159424]
[130.46405029 414.79489136]
[115.60411072 408.74829102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[6 178]
[8 176]
[9 175]
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[18 164]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[28 53]
[29 52]
[30 51]
[31 50]
[34 48]
[35 47]
[59 93]
[60 92]
[61 91]
[62 90]
[65 87]
[66 86]
[67 85]
[68 84]
[72 81]
[73 80]
[74 79]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[102 139]
[104 138]
[105 137]
[106 136]
[107 135]
[108 134]
[109 133]
[111 132]
[112 131]
[114 130]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
[147 163]
[148 162]
[149 161]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
