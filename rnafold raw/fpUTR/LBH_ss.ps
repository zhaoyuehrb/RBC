%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGAGUGCUCAGUGGAGAGCGGGGAGUUGUGUCCACCUUGCCGACGUCGCUAGCCGUGGGGCUGUCCUGGGAAGGCGGACGGCGAGCGCCCGGUGUCCGCACUCGGCCGCCUGCCGUGCCCGUCUGCGCCCGUGUCAUCCUCACUCGGGACGCAGGGACCGUUUUUAAAUCACAGGGGCGUGUGUCAGCCUGCCCUAGGACUUC\
) } def
/len { sequence length } bind def

/coor [
[62.65988541 101.09368134]
[47.88343811 98.51363373]
[33.08802032 96.04471588]
[18.27446175 93.68706512]
[3.46090388 91.32941437]
[-11.35265350 88.97176361]
[-26.16621017 86.61411285]
[-40.97976685 84.25646210]
[-55.79332352 81.89881134]
[-70.60688019 79.54116058]
[-85.42044067 77.18350983]
[-100.23400116 74.82585907]
[-93.68182373 88.31915283]
[-100.00649261 101.92057037]
[-114.54672241 105.60589600]
[-126.58640289 96.65905762]
[-127.25231934 81.67384338]
[-116.05416870 71.69447327]
[-130.64888000 68.23117828]
[-145.24359131 64.76787567]
[-160.45732117 69.10984039]
[-171.05427551 58.64303970]
[-186.26802063 62.98500824]
[-196.86497498 52.51820374]
[-211.45967102 49.05490494]
[-226.05438232 45.59160233]
[-240.64909363 42.12830353]
[-252.42181396 52.06356049]
[-267.60980225 53.14892960]
[-280.37365723 45.17722702]
[-285.92947388 31.38334656]
[-300.52416992 27.92004585]
[-315.11889648 24.45674324]
[-329.71359253 20.99344254]
[-344.33392334 17.63993073]
[-358.97903442 14.39639282]
[-373.62414551 11.15285587]
[-388.26925659 7.90931940]
[-403.41601562 12.47947311]
[-414.16909790 2.17313671]
[-428.81420898 -1.07040012]
[-443.45935059 -4.31393671]
[-458.10446167 -7.55747366]
[-473.25122070 -2.98731995]
[-484.00430298 -13.29365635]
[-498.64941406 -16.53719330]
[-513.34161377 -19.56023407]
[-528.07763672 -22.36209297]
[-542.81359863 -25.16395378]
[-557.54962158 -27.96581268]
[-572.55218506 -22.94243431]
[-583.61016846 -32.92089081]
[-598.61273193 -27.89751434]
[-609.67071533 -37.87597275]
[-624.40673828 -40.67782974]
[-639.14270020 -43.47969055]
[-654.43975830 -37.56930923]
[-667.03527832 -48.07099152]
[-663.97204590 -64.18151093]
[-648.40130615 -69.32774353]
[-636.34088135 -58.21568680]
[-621.60485840 -55.41382599]
[-606.86889648 -52.61196899]
[-592.92034912 -57.83575439]
[-580.80828857 -47.65688705]
[-566.85980225 -52.88067627]
[-554.74774170 -42.70180893]
[-540.01177979 -39.89994812]
[-525.27575684 -37.09809113]
[-510.53976440 -34.29623032]
[-506.15631104 -36.19567108]
[-500.53298950 -35.36052704]
[-495.40588379 -31.18231010]
[-480.76077271 -27.93877411]
[-466.66152954 -32.74092865]
[-454.86093140 -22.20259094]
[-440.21578979 -18.95905495]
[-425.57067871 -15.71551800]
[-410.92556763 -12.47198105]
[-396.82632446 -17.27413368]
[-385.02572632 -6.73579836]
[-370.38061523 -3.49226141]
[-355.73550415 -0.24872452]
[-341.09039307 2.99481225]
[-333.87893677 1.37175214]
[-326.25030518 6.39873362]
[-311.65557861 9.86203480]
[-297.06088257 13.32533550]
[-282.46615601 16.78863716]
[-271.30517578 6.96162510]
[-256.32049561 5.57459784]
[-243.23945618 13.36816502]
[-237.18579102 27.53359413]
[-222.59107971 30.99689484]
[-207.99638367 34.46019363]
[-193.40167236 37.92349625]
[-179.23184204 33.33380890]
[-167.59097290 44.04833221]
[-153.42114258 39.45864487]
[-141.78028870 50.17316437]
[-127.18557739 53.63646698]
[-112.59086609 57.09976578]
[-97.87634277 60.01229858]
[-83.06278992 62.36994934]
[-68.24922943 64.72760010]
[-53.43567276 67.08525085]
[-38.62211609 69.44290161]
[-23.80855942 71.80055237]
[-8.99500179 74.15820312]
[5.81855536 76.51585388]
[20.63211250 78.87350464]
[35.44567108 81.23116302]
[42.54654312 79.17769623]
[50.46348572 83.73719025]
[65.23992920 86.31723785]
[78.05439758 67.22506714]
[100.65404510 58.47386932]
[125.39794922 64.53806305]
[143.03619385 84.60638428]
[156.58547974 78.17076874]
[161.96765137 63.55331802]
[175.80023193 57.21970749]
[189.70256042 62.44087601]
[203.25184631 56.00526428]
[216.80111694 49.56965256]
[219.76486206 45.26899338]
[223.68978882 42.78466034]
[227.72264099 42.17855453]
[231.10939026 43.16481400]
[244.93499756 37.34653854]
[258.76062012 31.52826118]
[272.58624268 25.70998573]
[286.36773682 19.78796387]
[300.10433960 13.76253223]
[313.84094238 7.73710108]
[327.57751465 1.71166980]
[337.10733032 -10.91740990]
[351.87066650 -8.94428349]
[365.60723877 -14.96971416]
[369.82638550 -30.02736473]
[382.76641846 -38.80744934]
[398.31744385 -37.16427994]
[409.13671875 -25.87371254]
[410.11575317 -10.26680660]
[400.79226685 2.28733397]
[385.56851196 5.86102724]
[371.63269043 -1.23311472]
[357.89608765 4.79231691]
[349.34881592 16.99041748]
[333.60296631 15.44826984]
[319.86636353 21.47370148]
[306.12976074 27.49913216]
[292.39315796 33.52456284]
[287.52972412 39.09106827]
[278.40451050 39.53560257]
[264.57888794 45.35387802]
[250.75328064 51.17215347]
[236.92765808 56.99042892]
[223.23672485 63.11893082]
[209.68745422 69.55454254]
[196.13818359 75.99015045]
[191.40089417 90.06473541]
[177.75167847 96.78437042]
[163.02108765 91.72004700]
[149.47181702 98.15566254]
[147.46722412 105.38280487]
[162.44322205 106.23089600]
[177.41923523 107.07897949]
[191.39593506 101.63361359]
[205.88888550 105.50067902]
[215.29493713 117.18511963]
[215.97758484 132.16958618]
[207.67289734 144.66087341]
[193.59158325 149.82968140]
[179.17767334 145.67770386]
[170.00436401 133.81182861]
[156.73120117 126.82446289]
[143.45803833 119.83708954]
[141.45346069 127.06423950]
[149.75181580 139.55972290]
[158.05018616 152.05520630]
[166.34855652 164.55068970]
[174.64692688 177.04617310]
[182.94529724 189.54164124]
[197.02531433 196.75717163]
[197.62094116 211.63986206]
[205.91929626 224.13534546]
[220.83943176 230.94134521]
[222.13577271 247.28916931]
[208.47476196 256.36157227]
[193.90966797 248.82566833]
[193.42382812 232.43371582]
[185.12545776 219.93823242]
[171.63899231 213.61647034]
[170.44981384 197.84001160]
[162.15144348 185.34452820]
[153.85307312 172.84906006]
[145.55470276 160.35357666]
[137.25634766 147.85809326]
[128.95797729 135.36260986]
[120.05656433 140.13946533]
[110.49401093 142.76771545]
[100.77117920 143.19445801]
[91.37913513 141.47993469]
[82.77438354 137.79054260]
[75.35665894 132.38658142]
[69.45043945 125.60549164]
[65.29098511 117.84174347]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 112]
[4 111]
[5 110]
[6 109]
[7 108]
[8 107]
[9 106]
[10 105]
[11 104]
[12 103]
[18 102]
[19 101]
[20 100]
[22 98]
[24 96]
[25 95]
[26 94]
[27 93]
[31 89]
[32 88]
[33 87]
[34 86]
[35 84]
[36 83]
[37 82]
[38 81]
[40 79]
[41 78]
[42 77]
[43 76]
[45 74]
[46 73]
[47 70]
[48 69]
[49 68]
[50 67]
[52 65]
[54 63]
[55 62]
[56 61]
[119 165]
[120 164]
[123 161]
[124 160]
[125 159]
[129 158]
[130 157]
[131 156]
[132 155]
[133 153]
[134 152]
[135 151]
[136 150]
[138 148]
[139 147]
[179 200]
[180 199]
[181 198]
[182 197]
[183 196]
[184 195]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
