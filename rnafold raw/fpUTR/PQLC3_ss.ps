%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGAGGGGCGGAGCGAGGCGGGUCCGGGGCCUGGCGGCGCGCGGAGGGGCGGGCCCUGGCCGGGUGGUCCCGGGCGGAUCCCGGGAAGGCGGAAGGCUUCGGCAGAGCUGCGCCGCCGAGGCUGAGCGGUCCCUUCUCGCUGCGGCCGCCCAGGUGCCCGCGCCCGUGGCGCU\
) } def
/len { sequence length } bind def

/coor [
[314.84970093 742.20257568]
[316.37362671 737.14251709]
[312.92404175 722.54455566]
[309.47445679 707.94659424]
[299.01760864 697.33978271]
[303.37387085 682.13012695]
[289.11053467 669.10253906]
[295.11172485 649.88031006]
[291.14328003 635.41473389]
[287.17486572 620.94921875]
[283.20645142 606.48370361]
[279.23800659 592.01818848]
[275.26959229 577.55261230]
[270.78738403 563.23797607]
[265.79711914 549.09240723]
[260.80685425 534.94683838]
[255.81657410 520.80126953]
[250.82629395 506.65567017]
[245.83602905 492.51010132]
[240.84574890 478.36453247]
[229.31501770 468.93630981]
[232.02047729 453.34814453]
[227.03019714 439.20257568]
[222.03991699 425.05700684]
[210.50918579 415.62878418]
[213.21464539 400.04061890]
[208.22436523 385.89505005]
[203.23410034 371.74948120]
[187.65989685 360.32119751]
[191.57192993 340.56759644]
[186.07994080 326.60913086]
[180.58796692 312.65069580]
[175.09597778 298.69226074]
[169.60400391 284.73382568]
[163.98765564 270.82495117]
[158.24740601 256.96673584]
[152.50715637 243.10855103]
[146.76690674 229.25036621]
[141.02665710 215.39216614]
[135.28640747 201.53398132]
[129.54615784 187.67578125]
[123.80590057 173.81759644]
[117.94219208 160.01118469]
[111.95549774 146.25764465]
[96.91227722 147.67778015]
[82.17788696 144.32919312]
[69.22605896 136.54681396]
[59.35223007 125.10903168]
[53.54397583 111.15985107]
[52.38223648 96.09447479]
[55.98321152 81.41972351]
[63.98672867 68.60337067]
[54.36772156 57.09360123]
[44.74871445 45.58383179]
[35.12971115 34.07406616]
[19.63081932 32.51773834]
[10.03974152 20.70817184]
[11.61897659 5.94194078]
[1.99997079 -5.56782627]
[-7.61903477 -17.07759285]
[-22.40559769 -22.70503616]
[-24.63021088 -37.43257141]
[-34.24921417 -48.94234085]
[-43.86822128 -60.45210648]
[-53.48722458 -71.96187592]
[-63.10623169 -83.47164154]
[-78.68292236 -88.59987640]
[-81.76474762 -104.70684052]
[-69.18138885 -115.22307587]
[-53.87752914 -109.33037567]
[-51.59646606 -93.09064484]
[-41.97745895 -81.58087921]
[-32.35845566 -70.07111359]
[-22.73944855 -58.56134415]
[-13.12044334 -47.05157852]
[0.97810501 -42.24739075]
[3.89073229 -26.69659805]
[13.50973797 -15.18683147]
[23.12874222 -3.67706490]
[37.94075394 -2.60941529]
[47.85975647 8.92609882]
[46.63947678 24.45506096]
[56.25848389 35.96482849]
[65.87748718 47.47459412]
[75.49649048 58.98436356]
[89.01245117 53.50292206]
[103.55234528 52.35458755]
[107.00193787 37.75663376]
[110.45152283 23.15867424]
[113.90111542 8.56071854]
[109.54485321 -6.64893627]
[120.00169373 -17.25571442]
[114.77230072 -32.79873276]
[125.81972504 -44.91840744]
[141.77932739 -41.14705276]
[146.23323059 -25.36431694]
[134.59965515 -13.80612564]
[139.20265198 0.35938489]
[128.49906921 12.01030636]
[125.04948425 26.60826302]
[121.59989166 41.20621872]
[118.15030670 55.80417633]
[130.83912659 63.50818634]
[140.55093384 74.73488617]
[146.34820557 88.40052032]
[147.67131042 103.18590546]
[144.39253235 117.66373444]
[136.82836914 130.43641663]
[125.70903015 140.27096558]
[131.69572449 154.02449036]
[138.01048279 160.67037964]
[137.66409302 168.07733154]
[143.40434265 181.93553162]
[149.14459229 195.79373169]
[154.88484192 209.65191650]
[160.62509155 223.51011658]
[166.36535645 237.36830139]
[172.10560608 251.22650146]
[177.84585571 265.08468628]
[184.04098511 271.84222412]
[183.56243896 279.24182129]
[189.05442810 293.20028687]
[194.54640198 307.15872192]
[200.03839111 321.11715698]
[205.53036499 335.07559204]
[215.77479553 338.85025024]
[222.10565186 347.47357178]
[222.61640930 357.93887329]
[217.37966919 366.75921631]
[222.36993408 380.90478516]
[227.36021423 395.05035400]
[239.24789429 405.49035645]
[236.18550110 420.06674194]
[241.17576599 434.21231079]
[246.16604614 448.35787964]
[258.05371094 458.79788208]
[254.99131775 473.37426758]
[259.98159790 487.51983643]
[264.97186279 501.66540527]
[269.96212769 515.81097412]
[274.95242310 529.95654297]
[279.94268799 544.10211182]
[284.93295288 558.24768066]
[288.39111328 560.99353027]
[290.55810547 564.36480713]
[291.39648438 567.87219238]
[291.03384399 571.06530762]
[289.73513794 573.58422852]
[293.70355225 588.04974365]
[297.67196655 602.51525879]
[301.64041138 616.98083496]
[305.60882568 631.44635010]
[309.57723999 645.91186523]
[319.35949707 650.75994873]
[324.73229980 660.01062012]
[324.12142944 670.47052002]
[317.97183228 678.68054199]
[328.67541504 690.33148193]
[324.07241821 704.49700928]
[327.52200317 719.09497070]
[330.97158813 733.69293213]
[334.81076050 748.19329834]
[339.03674316 762.58569336]
[343.26272583 776.97808838]
[347.48870850 791.37048340]
[351.71472168 805.76287842]
[361.97851562 819.25695801]
[351.85311890 832.85516357]
[335.98330688 826.88983154]
[337.32232666 809.98883057]
[333.09631348 795.59643555]
[328.87033081 781.20404053]
[324.64434814 766.81164551]
[320.41836548 752.41925049]
[317.48257446 750.41186523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[6 157]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[22 135]
[23 134]
[24 133]
[26 131]
[27 130]
[28 129]
[30 125]
[31 124]
[32 123]
[33 122]
[34 121]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[42 112]
[43 110]
[44 109]
[52 85]
[53 84]
[54 83]
[55 82]
[58 79]
[59 78]
[60 77]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[87 102]
[88 101]
[89 100]
[90 99]
[92 97]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
