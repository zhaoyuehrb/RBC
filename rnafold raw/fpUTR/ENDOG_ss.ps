%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCCGGUUGGGCUCUGCUGCUCCCUUCUGGGUUCCGAGGCCCAAGCCCUUGGCAGUGUUUGUGAGUGGAAGGGAGGUCACGCUAUCGUCCGCGGCCCCAGCAGCCCUGUGCCCUCGUUGGAUCCCGCGACGCGGCUCCUUUAAGAGCCUCGCGGGUCGCCCGCCGCUAGGUCGCUCCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[93.72607422 241.91085815]
[79.23024750 236.04528809]
[71.94182587 222.21008301]
[75.30216980 206.93782043]
[87.72463226 197.43957520]
[88.23124695 182.44813538]
[88.73785400 167.45669556]
[89.24446869 152.46525574]
[66.41570282 134.24035645]
[58.66882706 109.30959320]
[65.48255920 87.32273865]
[52.75289536 79.38828278]
[40.02323151 71.45381927]
[27.29356956 63.51935959]
[11.48937798 62.78578186]
[4.78120565 49.48729706]
[-15.36137104 49.73826599]
[-23.75212860 32.33157349]
[-36.74250793 24.83157539]
[-49.73289108 17.33157539]
[-62.72327042 9.83157444]
[-75.71365356 2.33157444]
[-89.98731232 -2.27957845]
[-104.91034698 -3.79710317]
[-119.83338928 -5.31462812]
[-134.75642395 -6.83215284]
[-149.67947388 -8.34967804]
[-164.60250854 -9.86720276]
[-179.52554321 -11.38472748]
[-194.44859314 -12.90225220]
[-209.37162781 -11.38472748]
[-223.68371582 -6.89428043]
[-237.99580383 -2.40383363]
[-252.30789185 2.08661318]
[-266.61999512 6.57706022]
[-277.31164551 19.01171112]
[-293.37380981 15.70432472]
[-298.28311157 0.05725412]
[-286.98925781 -11.83313465]
[-271.11044312 -7.73502874]
[-256.79833984 -12.22547531]
[-242.48625183 -16.71592331]
[-228.17416382 -21.20636940]
[-213.86207581 -25.69681549]
[-214.43157959 -33.17516327]
[-215.57057190 -48.13185501]
[-216.14007568 -55.61020279]
[-230.96708679 -57.88161850]
[-245.79411316 -60.15303802]
[-262.36618042 -56.57490540]
[-270.39208984 -71.50880432]
[-258.26361084 -83.35516357]
[-243.52270508 -74.98006439]
[-228.69567871 -72.70864868]
[-213.86865234 -70.43722534]
[-225.79161072 -79.53903961]
[-221.09347534 -93.78430176]
[-211.57446289 -105.37689972]
[-198.51550293 -112.75685120]
[-183.67391968 -114.93105316]
[-169.04687500 -111.60693359]
[-156.60270691 -103.23181152]
[-148.01597595 -90.93270111]
[-144.44218445 -76.36465454]
[-146.36224365 -61.48804855]
[-153.51777649 -48.30478287]
[-164.94587708 -38.58889389]
[-179.10733032 -33.64802551]
[-192.93106079 -27.82529259]
[-178.00802612 -26.30776787]
[-163.08497620 -24.79024315]
[-148.16194153 -23.27271843]
[-133.23890686 -21.75519180]
[-118.31586456 -20.23766708]
[-103.39282227 -18.72014236]
[-88.46978760 -17.20261765]
[-78.32037354 -28.24750328]
[-81.09126282 -42.98935318]
[-83.86215973 -57.73120499]
[-86.63304901 -72.47305298]
[-96.78643799 -84.60644531]
[-91.53335571 -98.54396057]
[-94.30425262 -113.28581238]
[-108.38375092 -119.80863953]
[-115.91086578 -133.37780762]
[-113.99126434 -148.77568054]
[-103.36306763 -160.08148193]
[-88.11303711 -162.94789124]
[-74.10512543 -156.27272034]
[-66.72565460 -142.62269592]
[-68.81217957 -127.24654388]
[-79.56240082 -116.05670929]
[-76.79150391 -101.31485748]
[-66.83630371 -90.23590088]
[-71.89119720 -75.24394989]
[-69.12030792 -60.50209427]
[-66.34941864 -45.76024628]
[-63.57852554 -31.01839447]
[-62.81291962 -24.89604759]
[-63.49560547 -19.26762962]
[-65.39381409 -14.44308376]
[-68.21365356 -10.65880680]
[-55.22327042 -3.15880656]
[-42.23289108 4.34119368]
[-29.24250984 11.84119320]
[-16.25212860 19.34119415]
[-6.63359165 15.81371498]
[3.54966402 18.22484398]
[10.86656380 26.01104355]
[12.71566582 36.75763321]
[27.60934448 36.92368698]
[35.22802734 50.78969574]
[47.95769119 58.72415543]
[60.68735504 66.65861511]
[73.41702271 74.59307861]
[83.05188751 64.68683624]
[96.39137268 58.58953094]
[111.88032532 57.67038345]
[127.47044373 62.65161896]
[140.89096069 73.43794250]
[149.97486877 89.05867004]
[152.99426270 107.73902893]
[167.98570251 108.24564362]
[176.69013977 105.40309143]
[183.22546387 108.88953400]
[198.20620728 109.64926910]
[213.18695068 110.40901184]
[228.16770935 111.16874695]
[243.14845276 111.92848206]
[258.12921143 112.68821716]
[273.10995483 113.44795990]
[277.79391479 111.04682922]
[282.46148682 110.72928619]
[286.31689453 112.13657379]
[288.82443237 114.64466095]
[303.74746704 116.16218567]
[318.67050171 117.67971039]
[333.59353638 119.19723511]
[348.51657104 120.71475983]
[360.60522461 110.53437805]
[376.34445190 111.96694946]
[386.39645386 124.16255188]
[384.79757690 139.88575745]
[372.49636841 149.80825806]
[356.79095459 148.04321289]
[346.99905396 135.63780212]
[332.07601929 134.12026978]
[317.15298462 132.60275269]
[302.22994995 131.08522034]
[287.30691528 129.56770325]
[272.35021973 128.42871094]
[257.36944580 127.66896820]
[242.38871765 126.90923309]
[227.40795898 126.14949036]
[212.42721558 125.38975525]
[197.44647217 124.63002014]
[182.46572876 123.87027740]
[167.47909546 123.23708344]
[152.48765564 122.73046875]
[145.31913757 135.90667725]
[153.88816833 148.21812439]
[166.43627930 151.26387024]
[173.31770325 161.71278381]
[171.29278564 173.65254211]
[179.65264893 186.10696411]
[188.01251221 198.56138611]
[202.96601868 205.29374695]
[204.34292603 221.63499451]
[190.72680664 230.77464294]
[176.12474060 223.31060791]
[175.55809021 206.92124939]
[167.19822693 194.46682739]
[158.83836365 182.01240540]
[142.69377136 175.15728760]
[141.57670593 156.78715515]
[133.00769043 144.47570801]
[125.81474304 146.59974670]
[122.30077362 161.18234253]
[111.42885590 150.84782410]
[104.23590851 152.97186279]
[103.72930145 167.96330261]
[103.22268677 182.95475769]
[102.71607208 197.94619751]
[114.46897125 208.26139832]
[116.79062653 223.72567749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[11 115]
[12 114]
[13 113]
[14 112]
[16 110]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[47 55]
[48 54]
[49 53]
[77 98]
[78 97]
[79 96]
[80 95]
[82 93]
[83 92]
[122 159]
[123 158]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[160 176]
[161 175]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
