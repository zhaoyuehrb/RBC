%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCUCGCGCCCCAGGCCGGUGUACCCCCGCACUCCGCGCCCCGGCCUAGAAGCUCUCUCUCCCCGCUCCCCGGCCCGGCCCCCGCCCCGCCCCGCCCCAGCCCGCUGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[82.78122711 123.97162628]
[74.20198059 115.74189758]
[69.40915680 104.55683136]
[69.36511230 92.10783386]
[54.39889908 93.11400604]
[39.43268204 94.12017059]
[26.18259048 102.76572418]
[12.96498394 95.89956665]
[4.48440695 99.63909912]
[-2.41556764 96.72633362]
[-17.40340233 97.33032227]
[-32.39123917 97.93431091]
[-40.38203049 108.87375641]
[-53.04340363 113.11144257]
[-65.63529205 109.29920959]
[-73.58032227 99.05897522]
[-88.57897186 99.26035309]
[-103.57762146 99.46173096]
[-118.57221222 99.86445618]
[-133.56004333 100.46844482]
[-148.54788208 101.07243347]
[-162.02531433 109.35913086]
[-175.05381775 102.14058685]
[-190.04164124 102.74457550]
[-198.53710938 115.72943878]
[-213.05432129 121.20942688]
[-228.01110840 117.07736969]
[-237.65629578 104.92212677]
[-238.28111267 89.41763306]
[-229.64529419 76.52568817]
[-215.06948853 71.20350647]
[-200.15840149 75.49757385]
[-190.64562988 87.75673676]
[-175.65780640 87.15274811]
[-163.25239563 78.90924835]
[-149.15187073 86.08459473]
[-134.16403198 85.48060608]
[-119.17620087 84.87661743]
[-112.53298187 81.41807556]
[-103.77899933 84.46308136]
[-88.78034973 84.26170349]
[-73.78170013 84.06032562]
[-62.64448166 71.53781891]
[-45.56297684 70.86845398]
[-32.99522781 82.94647980]
[-18.00739098 82.34249115]
[-3.01955676 81.73849487]
[11.95881844 80.93334961]
[24.13842583 72.35975647]
[38.42651749 79.15395355]
[53.39273453 78.14778900]
[68.35894775 77.14162445]
[79.31551361 66.89692688]
[81.32331085 52.03190994]
[83.33110809 37.16689301]
[70.81595612 28.35612488]
[63.83922577 14.73320961]
[64.00411987 -0.57141036]
[71.27274323 -14.04084492]
[83.97482300 -22.57991600]
[99.19151306 -24.22640800]
[113.42613220 -18.60197067]
[123.40766144 -6.99905491]
[126.84242249 7.91607141]
[122.94113922 22.71602249]
[112.60028839 33.99987793]
[98.19612122 39.17469025]
[96.18832397 54.03970718]
[94.18052673 68.90472412]
[107.81254578 70.62279510]
[118.89438629 77.78757477]
[125.48613739 88.58774567]
[126.68009949 100.63841248]
[140.97062683 105.19699097]
[155.26116943 109.75556946]
[169.55169678 114.31414795]
[183.84223938 118.87272644]
[198.13276672 123.43130493]
[212.42330933 127.98987579]
[226.71383667 132.54846191]
[241.00436401 137.10704041]
[250.43582153 129.61669922]
[262.20248413 127.69052887]
[273.30288696 131.70066833]
[280.96337891 140.52011108]
[283.33102417 151.83622742]
[297.35626221 157.15528870]
[311.31036377 147.70730591]
[327.98306274 148.38296509]
[340.86892700 158.72216797]
[345.05673218 174.53260803]
[359.21972656 179.47322083]
[376.16653442 178.98126221]
[381.33059692 195.12959290]
[367.24288940 204.56214905]
[354.27911377 193.63621521]
[340.11611938 188.69560242]
[329.83807373 197.32885742]
[316.52371216 199.74281311]
[303.66409302 195.19493103]
[294.68563843 184.78257751]
[292.03720093 171.18054199]
[278.01193237 165.86146545]
[261.92709351 174.39913940]
[244.36759949 168.49319458]
[236.44580078 151.39756775]
[222.15525818 146.83898926]
[207.86473083 142.28041077]
[193.57418823 137.72183228]
[179.28366089 133.16325378]
[164.99311829 128.60467529]
[150.70259094 124.04610443]
[136.41204834 119.48752594]
[122.12152100 114.92894745]
[114.94705200 122.95745087]
[104.95132446 127.66163635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 52]
[5 51]
[6 50]
[8 48]
[10 47]
[11 46]
[12 45]
[16 42]
[17 41]
[18 40]
[19 38]
[20 37]
[21 36]
[23 34]
[24 33]
[53 69]
[54 68]
[55 67]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[86 103]
[87 102]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
