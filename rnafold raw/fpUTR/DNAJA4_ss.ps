%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCACCCUUCGGCGCAGGGCUCCGGCCAACACAGCCCUCCAGGCCGCCUACUCUCCAGCCAGCCGGCUCCACGGACCCACGGAAGGGCAAGGGGGCGGCCUCGGGGCGGCGGGACAGUUGUCGGAGGGCGCCCUCCAGGCCCAAGCCGCCUUCUCCGGCCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[111.75983429 267.93939209]
[114.09310150 282.96020508]
[110.49568939 297.72930908]
[101.51617432 309.99459839]
[88.52388000 317.88565063]
[73.50003052 320.19912720]
[58.73564911 316.58230591]
[46.48220062 307.58666992]
[38.60824966 294.58401489]
[36.31451035 279.55712891]
[39.95076752 264.79751587]
[48.96251678 252.55590820]
[61.97552872 244.69906616]
[77.00541687 242.42509460]
[80.57444000 227.85588074]
[84.14347076 213.28666687]
[87.71250153 198.71745300]
[81.70380402 188.19047546]
[84.58657837 176.00434875]
[95.34249878 168.83950806]
[99.18013763 154.33872986]
[103.01777649 139.83795166]
[106.85542297 125.33717346]
[95.42002106 129.01972961]
[82.25730896 127.24101257]
[70.04677582 119.31417847]
[55.30217743 122.07041931]
[40.55758286 124.82666016]
[25.81298447 127.58290100]
[11.06838799 130.33914185]
[7.96508551 145.21994019]
[-0.60075456 157.77760315]
[-13.32290363 166.09716797]
[-28.26132774 168.90998840]
[-43.13802338 165.78712463]
[-55.68440628 157.20477295]
[-63.98723984 144.47167969]
[-66.78040314 129.52957153]
[-63.63796234 114.65699768]
[-55.03911209 102.12191772]
[-42.29512024 93.83583832]
[-27.34934616 91.06233215]
[-12.48091793 94.22433472]
[0.04284007 102.83966827]
[8.31214523 115.59455109]
[23.05674171 112.83831024]
[37.80133820 110.08206177]
[52.54593658 107.32582092]
[67.29053497 104.56958008]
[69.73957062 97.48069763]
[55.47855759 92.83059692]
[41.21754456 88.18048859]
[26.41934776 90.63271332]
[16.74236298 79.17165375]
[21.64020157 64.99381256]
[36.32808304 61.94977188]
[46.45727539 73.01380920]
[60.54746246 78.15837860]
[74.63764954 83.30294037]
[77.08669281 76.21406555]
[67.18782806 64.94408417]
[57.28895569 53.67410660]
[47.39008713 42.40412903]
[31.69211388 37.66012192]
[28.21551132 21.63372803]
[40.53671646 10.81152916]
[55.98072433 16.32647324]
[58.66006851 32.50526047]
[68.55893707 43.77523804]
[78.45780182 55.04521942]
[88.35667419 66.31519318]
[106.00746918 67.25419617]
[119.83240509 76.24659729]
[126.75428009 89.90278625]
[125.94014740 104.00969696]
[139.92723083 98.59107208]
[153.91432190 93.17244720]
[167.90139771 87.75382233]
[170.26023865 71.40716553]
[180.47331238 58.54707336]
[195.68638611 52.61571121]
[211.72364807 55.13978577]
[224.23397827 65.33887482]
[238.11854553 59.66270447]
[252.00311279 53.98654175]
[258.45846558 37.74795151]
[274.34082031 31.31057167]
[289.66519165 38.19590378]
[303.44250488 32.26413727]
[317.21981812 26.33236694]
[330.99710083 20.40060043]
[336.91448975 5.99148655]
[350.97113037 0.17209332]
[364.67153931 5.90219593]
[378.44885254 -0.02957213]
[392.17074585 -6.08838701]
[405.83609009 -12.27373219]
[419.50143433 -18.45907593]
[433.16677856 -24.64442062]
[446.83212280 -30.82976532]
[456.21386719 -43.56921005]
[470.99920654 -41.76852417]
[484.66455078 -47.95386887]
[498.32989502 -54.13921356]
[511.99523926 -60.32455826]
[517.28051758 -72.11822510]
[528.82122803 -76.97867584]
[540.19769287 -72.79567719]
[553.97503662 -78.72744751]
[567.75231934 -84.65921783]
[581.52966309 -90.59098816]
[595.30694580 -96.52275085]
[609.08422852 -102.45452118]
[614.69573975 -117.22904968]
[629.14489746 -123.63199615]
[643.85925293 -117.86460876]
[650.10906982 -103.34857941]
[644.18646240 -88.69599915]
[629.60516357 -82.59999847]
[615.01599121 -88.67721558]
[601.23870850 -82.74544525]
[587.46142578 -76.81368256]
[573.68408203 -70.88191223]
[559.90679932 -64.95014191]
[546.12951660 -59.01837540]
[536.43835449 -44.40802002]
[518.18060303 -46.65922165]
[504.51522827 -40.47387695]
[490.84991455 -34.28853226]
[477.18457031 -28.10318565]
[468.78024292 -15.80615902]
[453.01745605 -17.16442680]
[439.35211182 -10.97908211]
[425.68676758 -4.79373693]
[412.02145386 1.39160776]
[398.35610962 7.57695246]
[393.54013062 13.22201538]
[384.38061523 13.74773312]
[370.60330200 19.67950058]
[365.35043335 33.56988144]
[351.46276855 39.78180313]
[336.92889404 34.17790604]
[323.15158081 40.10967255]
[309.37426758 46.04143906]
[295.59695435 51.97320938]
[292.54269409 64.51465607]
[282.66726685 73.12631989]
[269.43927002 74.48551941]
[257.67929077 67.87110138]
[243.79470825 73.54727173]
[229.91014099 79.22343445]
[228.95574951 92.86814880]
[222.17568970 104.82374573]
[210.84696960 112.72254944]
[197.15373230 114.97203827]
[183.76620483 111.07563019]
[173.32002258 101.74090576]
[159.33294678 107.15953064]
[145.34585571 112.57815552]
[131.35877991 117.99678040]
[121.35620117 129.17481995]
[117.51855469 143.67558289]
[113.68091583 158.17636108]
[109.84326935 172.67713928]
[115.08605194 190.31025696]
[102.28171539 202.28648376]
[98.71268463 216.85569763]
[95.14366150 231.42491150]
[91.57463074 245.99412537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 169]
[15 168]
[16 167]
[17 166]
[20 164]
[21 163]
[22 162]
[23 161]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[60 71]
[61 70]
[62 69]
[63 68]
[75 160]
[76 159]
[77 158]
[78 157]
[83 151]
[84 150]
[85 149]
[88 145]
[89 144]
[90 143]
[91 142]
[94 139]
[95 138]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[102 130]
[103 129]
[104 128]
[105 127]
[108 125]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
