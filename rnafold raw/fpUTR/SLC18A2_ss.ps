%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCGGACGGGGUAAACUGAGCGGCGGCGGCGGGGCGCUGGGGCGGAGACUGCGACCCGGAGCCGCCCGGACUGACGGAGCCCACUGCGGUGCGGGCGUUGGCGCGGGCACGGAGGACCCGGGCAGGCAUCGCAAGCGACCCCGAGCGGAGCCCCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-25.05103874 355.42089844]
[-27.17512894 358.36340332]
[-29.85044670 360.17651367]
[-32.62289810 360.82638550]
[-41.01608276 373.25839233]
[-49.40927124 385.69036865]
[-57.80245590 398.12237549]
[-55.00254822 413.44549561]
[-63.69153214 425.93374634]
[-78.31704712 428.50857544]
[-86.71023560 440.94058228]
[-95.10342407 453.37258911]
[-91.84875488 468.83810425]
[-100.55300140 482.02944946]
[-116.05207825 485.12042236]
[-129.15066528 476.27722168]
[-132.07759094 460.74630737]
[-123.09638214 447.74194336]
[-107.53541565 444.97940063]
[-99.14222717 432.54739380]
[-90.74903870 420.11541748]
[-93.82812500 405.58767700]
[-85.49333954 392.86032104]
[-70.23445129 389.72918701]
[-61.84126282 377.29718018]
[-53.44807434 364.86520386]
[-45.05488968 352.43319702]
[-37.14404297 339.68884277]
[-29.72714233 326.65084839]
[-22.31024170 313.61285400]
[-26.49238014 299.36343384]
[-19.15632057 286.03540039]
[-4.18188620 281.74539185]
[3.23501325 268.70739746]
[10.65191269 255.66938782]
[18.06881332 242.63137817]
[25.48571205 229.59336853]
[32.90261078 216.55537415]
[39.94186401 203.30966187]
[46.59766388 189.86717224]
[53.25345993 176.42468262]
[51.96690369 161.58575439]
[65.02421570 152.65170288]
[71.68000793 139.20922852]
[78.33580780 125.76673889]
[78.48633575 118.34243011]
[85.25000763 112.13235474]
[80.97840118 98.28678894]
[87.65523529 85.42731476]
[101.43746185 80.95558167]
[96.89871979 66.05465698]
[104.09818268 52.65232468]
[118.33190918 48.41715622]
[125.24397278 35.10462952]
[132.15603638 21.79210472]
[139.06809998 8.47957897]
[145.98016357 -4.83294725]
[152.11619568 -18.52050209]
[157.45593262 -32.53789139]
[162.79566956 -46.55528259]
[168.13540649 -60.57267380]
[173.47514343 -74.59006500]
[167.25744629 -88.87215424]
[172.87239075 -103.01171875]
[186.52648926 -108.85131073]
[191.86622620 -122.86870575]
[196.52880859 -137.12564087]
[200.50352478 -151.58944702]
[204.47824097 -166.05325317]
[208.45297241 -180.51705933]
[212.42768860 -194.98085022]
[204.87265015 -208.60285950]
[209.10963440 -223.21459961]
[222.14270020 -230.33322144]
[226.11741638 -244.79702759]
[230.09213257 -259.26083374]
[234.06686401 -273.72463989]
[238.04158020 -288.18844604]
[242.01631165 -302.65222168]
[236.07273865 -311.83172607]
[236.18667603 -322.54663086]
[242.07719421 -331.23306274]
[251.58235168 -335.13580322]
[256.10815430 -349.43673706]
[260.49679565 -363.78036499]
[264.74783325 -378.16537476]
[268.99890137 -392.55038452]
[264.63644409 -408.35867310]
[276.33676147 -419.84930420]
[292.06353760 -415.20172119]
[295.63845825 -399.19696045]
[283.38391113 -388.29934692]
[279.13284302 -373.91433716]
[274.88180542 -359.52932739]
[276.00717163 -352.18927002]
[270.40911865 -344.91091919]
[265.88330078 -330.60998535]
[271.45816040 -312.12322998]
[256.48010254 -298.67752075]
[252.50538635 -284.21371460]
[248.53067017 -269.74990845]
[244.55593872 -255.28610229]
[240.58122253 -240.82229614]
[236.60649109 -226.35850525]
[244.17156982 -213.57940674]
[240.34667969 -198.85443115]
[226.89149475 -191.00613403]
[222.91677856 -176.54232788]
[218.94204712 -162.07852173]
[214.96733093 -147.61473083]
[210.99259949 -133.15092468]
[225.21037292 -137.93161011]
[237.91818237 -129.96218872]
[239.80569458 -115.08141327]
[229.49003601 -104.19164276]
[214.52893066 -105.27120972]
[205.88362122 -117.52896881]
[200.54388428 -103.51158142]
[206.85217285 -90.06758118]
[201.63659668 -75.77588654]
[187.49252319 -69.25032806]
[182.15278625 -55.23293686]
[176.81306458 -41.21554947]
[171.47332764 -27.19815826]
[166.13359070 -13.18076706]
[180.33139038 -18.02045250]
[193.87019348 -11.56283283]
[199.04411316 2.51660514]
[192.90829468 16.20425987]
[178.95509338 21.70952034]
[165.12623596 15.89895344]
[159.29269409 2.07911849]
[152.38063049 15.39164448]
[145.46856689 28.70417023]
[138.55650330 42.01669693]
[131.64443970 55.32922363]
[136.36929321 69.40797424]
[129.54911804 83.00723267]
[114.74999237 87.86764526]
[119.02159882 101.71321106]
[112.34476471 114.57268524]
[98.56253815 119.04441833]
[91.77828979 132.42254639]
[85.12249756 145.86502075]
[78.46669769 159.30751038]
[79.27719116 175.10794067]
[66.69594574 183.08049011]
[60.04014587 196.52296448]
[53.38434982 209.96545410]
[53.73009109 215.26750183]
[52.13885498 219.71025085]
[49.27366638 222.69331360]
[45.94061661 223.97227478]
[38.52371979 237.01026917]
[31.10681915 250.04827881]
[23.68991852 263.08627319]
[16.27301979 276.12429810]
[8.85612011 289.16229248]
[12.82078552 304.22613525]
[5.11326313 317.34286499]
[-9.27223587 321.02975464]
[-16.68913460 334.06774902]
[-24.10603523 347.10574341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[10 21]
[11 20]
[12 19]
[28 163]
[29 162]
[30 161]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[39 149]
[40 148]
[41 147]
[43 145]
[44 144]
[45 143]
[47 142]
[50 139]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[65 118]
[66 117]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[83 97]
[84 96]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
