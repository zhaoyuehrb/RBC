%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGACACCAGCAGGGUGACAUCCGCUAUUGCUACUUCUCUGCUCCCCCACAGUUCCUCUGGACUUCUCUGGACCACAGUCCUCUGCCAGACCCCUGCCAGACCCCAGUCCACC\
) } def
/len { sequence length } bind def

/coor [
[-41.12477112 163.29086304]
[-55.39221573 170.94657898]
[-70.97895813 175.30723572]
[-87.13495636 176.16590881]
[-103.08343506 173.48411560]
[-118.05817413 167.39355469]
[-131.34037781 158.18957520]
[-142.29315186 146.31695557]
[-150.39204407 132.34832764]
[-155.25013733 116.95656586]
[-170.18162537 118.38858795]
[-185.11311340 119.82061005]
[-200.04460144 121.25263214]
[-214.97608948 122.68464661]
[-229.90757751 124.11666870]
[-244.83906555 125.54869080]
[-248.04354858 137.78443909]
[-254.87977600 148.39689636]
[-264.65734863 156.34266663]
[-276.39758301 160.84617615]
[-288.93148804 161.47544861]
[-301.01614380 158.18342590]
[-311.45794678 151.31117249]
[-319.23046875 141.55258179]
[-323.57543945 129.88432312]
[-338.57403564 130.08920288]
[-352.37823486 138.94227600]
[-366.82110596 131.17469788]
[-367.04507446 114.77707672]
[-352.81976318 106.61788940]
[-338.77893066 115.09059906]
[-323.78033447 114.88571930]
[-317.04531860 98.69462585]
[-303.93594360 86.96915436]
[-286.99676514 82.04562378]
[-269.54180908 84.93420410]
[-255.00645447 95.11204529]
[-246.27107239 110.61720276]
[-231.33958435 109.18518066]
[-216.40811157 107.75316620]
[-201.47662354 106.32114410]
[-186.54513550 104.88912201]
[-171.61364746 103.45709991]
[-156.68215942 102.02507782]
[-155.30917358 88.21983337]
[-151.36904907 74.91306305]
[-145.00015259 62.57789993]
[-136.42718506 51.65324783]
[-125.95332336 42.52817917]
[-113.94949341 35.52808762]
[-100.84120178 30.90305710]
[-87.09349060 28.81896019]
[-73.19441986 29.35148239]
[-59.63772964 32.48339844]
[-46.90532684 38.10509872]
[-35.45013046 46.01845551]
[-25.67998505 55.94377136]
[-17.94311142 67.52969360]
[-12.51572323 80.36563110]
[-9.59214687 93.99632263]
[5.40645409 93.79144287]
[20.40505409 93.58656311]
[35.40365601 93.38168335]
[50.40225601 93.17680359]
[65.40085602 92.97192383]
[69.75497437 79.97103119]
[78.92787933 69.28852844]
[91.77817535 62.67950058]
[106.53980255 61.36426926]
[121.06378174 65.81289673]
[133.13107300 75.63595581]
[146.05261230 68.01797485]
[158.97416687 60.39999771]
[171.89570618 52.78202057]
[179.49018860 38.24737549]
[195.88395691 37.82749557]
[204.21252441 51.95432281]
[195.90815735 66.09538269]
[179.51368713 65.70356750]
[166.59214783 73.32154846]
[153.67059326 80.93952179]
[140.74905396 88.55750275]
[142.18106079 103.48899078]
[156.31498718 108.51218414]
[170.44889832 113.53537750]
[184.58280945 118.55857086]
[200.17723083 115.88941193]
[209.57858276 127.44207001]
[223.71249390 132.46527100]
[237.84640503 137.48846436]
[253.86756897 133.98779297]
[264.70825195 146.29272461]
[259.21652222 161.74499512]
[243.04177856 164.44863892]
[232.82321167 151.62237549]
[218.68930054 146.59918213]
[204.55538940 141.57598877]
[189.97190857 144.60444641]
[179.55961609 132.69248962]
[165.42570496 127.66929626]
[151.29179382 122.64609528]
[137.15786743 117.62290192]
[123.66352081 132.20152283]
[105.39604950 138.42027283]
[86.93066406 135.29122925]
[72.62825775 124.10020447]
[65.60573578 107.97052002]
[50.60713577 108.17540741]
[35.60853577 108.38028717]
[20.60993576 108.58516693]
[5.61133432 108.79004669]
[-9.38726616 108.99492645]
[-12.60177612 124.89052582]
[-19.20054626 139.69764709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 44]
[11 43]
[12 42]
[13 41]
[14 40]
[15 39]
[16 38]
[25 32]
[26 31]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[71 82]
[72 81]
[73 80]
[74 79]
[83 102]
[84 101]
[85 100]
[86 99]
[88 97]
[89 96]
[90 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
