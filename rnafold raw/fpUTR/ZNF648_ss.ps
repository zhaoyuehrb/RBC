%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCAGCCGCUGGACUGGACACAAAGCGUGAGAGACAGAGACACCAUCUCUGCUGAUUUGUACCUAACUGGUUCCUGUUGCUGAGAGCCCACGUGUCACAGAAGCCAGGGCAGAGGCCCCACACUGCUGUCUGCAUUUCCCAGGUAUCCUGAGCCAAGCAGGAUACUCCUCCUCAGAGGAGUAGGCAAUAGAAGCGCCUGAACAUC\
) } def
/len { sequence length } bind def

/coor [
[-208.66511536 163.22981262]
[-220.24728394 153.69810486]
[-227.74443054 140.70606995]
[-230.20153809 125.90869141]
[-227.30564880 111.19088745]
[-219.42561340 98.42745972]
[-207.56521606 89.24425507]
[-193.23765564 84.81134033]
[-207.77865601 81.12905884]
[-222.31965637 77.44676971]
[-231.40853882 78.37375641]
[-237.05073547 73.59832001]
[-251.53474426 69.69788361]
[-266.01876831 65.79745483]
[-280.50277710 61.89702225]
[-299.72518921 67.96503448]
[-312.77566528 53.69839859]
[-327.37039185 50.23509979]
[-341.96508789 46.77179718]
[-356.58541870 43.41828537]
[-371.23052979 40.17474747]
[-385.87564087 36.93120956]
[-400.52078247 33.68767548]
[-415.16589355 30.44413757]
[-427.67721558 41.82559967]
[-444.34164429 43.49110031]
[-458.57269287 34.98142242]
[-464.86413574 19.81989670]
[-479.55636597 16.79685593]
[-496.89154053 23.00547218]
[-509.54513550 10.84695339]
[-524.54766846 15.87033176]
[-535.60571289 5.89187479]
[-550.34167480 3.09001470]
[-565.34423828 8.11339283]
[-576.40228271 -1.86506426]
[-591.13824463 -4.66692448]
[-605.87426758 -7.46878433]
[-620.61022949 -10.27064419]
[-635.34625244 -13.07250404]
[-644.36297607 -11.60105038]
[-650.28192139 -16.02881622]
[-664.97418213 -19.05185699]
[-674.01202393 -17.71609879]
[-679.86370850 -22.23233223]
[-694.50885010 -25.47586823]
[-709.15399170 -28.71940613]
[-723.79907227 -31.96294212]
[-735.36077881 -18.72988510]
[-751.94732666 -13.20254421]
[-768.96173096 -16.81776619]
[-781.73632812 -28.49157333]
[-786.81347656 -44.94201660]
[-801.54943848 -47.74387741]
[-816.28546143 -50.54573822]
[-829.20886230 -41.44845963]
[-844.76538086 -44.23623657]
[-853.72546387 -57.25513077]
[-850.77337646 -72.78125763]
[-837.66052246 -81.60324860]
[-822.16644287 -78.48716736]
[-813.48358154 -65.28173065]
[-798.74761963 -62.47987366]
[-784.01159668 -59.67801285]
[-776.83856201 -70.08036041]
[-766.22473145 -77.02227020]
[-753.72778320 -79.44266510]
[-741.19799805 -76.94721222]
[-730.50408936 -69.87203979]
[-723.25445557 -59.23897552]
[-720.55554199 -46.60805893]
[-705.91046143 -43.36452484]
[-691.26531982 -40.12098694]
[-676.62017822 -36.87744904]
[-661.95111084 -33.74407196]
[-647.25891113 -30.72103310]
[-632.54437256 -27.80850029]
[-617.80841064 -25.00664139]
[-603.07238770 -22.20478058]
[-588.33636475 -19.40291977]
[-573.60040283 -16.60106087]
[-559.65185547 -21.82484627]
[-547.53985596 -11.64598179]
[-532.80383301 -8.84412098]
[-518.85534668 -14.06790733]
[-506.74328613 -3.88904214]
[-496.56854248 -10.43310165]
[-484.26800537 -8.21833515]
[-476.53332520 2.10463977]
[-461.84109497 5.12767982]
[-452.85473633 -4.74704313]
[-440.05975342 -8.92505360]
[-426.76541138 -6.21324396]
[-416.46597290 2.78477740]
[-411.92236328 15.79901981]
[-397.27722168 19.04255676]
[-382.63211060 22.28609276]
[-367.98699951 25.52963066]
[-353.34188843 28.77316666]
[-346.13043213 27.15010643]
[-338.50180054 32.17708969]
[-323.90707397 35.64038849]
[-309.31237793 39.10369110]
[-301.12982178 32.98015976]
[-290.70855713 32.35918045]
[-281.47616577 37.68690109]
[-276.60232544 47.41300964]
[-262.11831665 51.31344223]
[-247.63430786 55.21387482]
[-233.15029907 59.11430359]
[-218.63737488 62.90576935]
[-204.09637451 66.58805084]
[-189.55537415 70.27033234]
[-183.77209473 67.41714478]
[-176.54995728 68.19609833]
[-170.20257568 73.20146942]
[-155.22332764 73.99025726]
[-140.24407959 74.77905273]
[-125.26483917 75.56784058]
[-112.14830017 68.51052856]
[-98.77409363 76.96282196]
[-92.14813995 67.67280579]
[-81.75251007 62.68394852]
[-70.12039948 63.34025192]
[-60.14878464 69.59415436]
[-54.37693787 79.98965454]
[-39.42816925 81.22834778]
[-24.47940254 82.46703339]
[-11.15665913 75.80717468]
[1.95743775 84.65765381]
[16.90620422 85.89634705]
[31.85497284 87.13503265]
[46.80374146 88.37372589]
[61.75250626 89.61241913]
[76.70127106 90.85110474]
[91.65003967 92.08979797]
[76.78188324 90.10541534]
[64.75629425 81.13962555]
[58.61016464 67.45660400]
[59.89559174 52.51178360]
[68.28796387 40.07924271]
[81.66791534 33.29862213]
[96.65655518 33.88226700]
[109.46874237 41.68278122]
[116.86894226 54.73027039]
[116.98808289 69.73092651]
[131.98765564 69.84365845]
[146.98722839 69.95639801]
[161.98681641 70.06912994]
[176.98638916 70.18186951]
[191.98596191 70.29460144]
[206.98553467 70.40734100]
[221.98512268 70.52007294]
[231.98811340 58.50033188]
[247.38607788 55.77336121]
[260.90859985 63.62675476]
[266.17071533 78.35237885]
[260.68783569 92.99724579]
[247.04881287 100.64649963]
[231.69357300 97.68838501]
[221.87237549 85.51965332]
[206.87280273 85.40691376]
[191.87322998 85.29418182]
[176.87365723 85.18144226]
[161.87406921 85.06871033]
[146.87449646 84.95597076]
[131.87492371 84.84323883]
[116.87535095 84.73049927]
[112.64936066 99.12289429]
[125.32875824 107.13743591]
[138.00814819 115.15198517]
[150.68754578 123.16652679]
[163.36694336 131.18107605]
[179.76568604 131.29722595]
[187.62806702 145.68872070]
[178.86595154 159.55081177]
[162.49305725 158.62336731]
[155.35240173 143.86047363]
[142.67300415 135.84591675]
[129.99360657 127.83138275]
[117.31420898 119.81683350]
[104.63481140 111.80229187]
[90.41135406 107.03856659]
[75.46258545 105.79987335]
[60.51381683 104.56118774]
[45.56504822 103.32249451]
[30.61628151 102.08380127]
[15.66751480 100.84511566]
[0.71874756 99.60642242]
[-13.67323112 106.17768860]
[-25.71809196 97.41580200]
[-40.66685867 96.17711639]
[-55.61562729 94.93842316]
[-69.59302521 107.72516632]
[-88.15985107 106.26147461]
[-99.56288910 91.94206238]
[-113.75083923 98.94296265]
[-126.05362701 90.54708862]
[-141.03286743 89.75830078]
[-156.01211548 88.96950531]
[-170.99136353 88.18070984]
[-158.61738586 96.65920258]
[-150.00900269 108.94316101]
[-146.26274109 123.46781158]
[-147.85585022 138.38298035]
[-154.58535767 151.78869629]
[-165.59407043 161.97734070]
[-179.47964478 167.65103149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 113]
[9 112]
[10 111]
[12 110]
[13 109]
[14 108]
[15 107]
[17 103]
[18 102]
[19 101]
[20 99]
[21 98]
[22 97]
[23 96]
[24 95]
[28 90]
[29 89]
[31 86]
[33 84]
[34 83]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[42 76]
[43 75]
[45 74]
[46 73]
[47 72]
[48 71]
[53 64]
[54 63]
[55 62]
[116 201]
[117 200]
[118 199]
[119 198]
[121 196]
[126 193]
[127 192]
[128 191]
[130 189]
[131 188]
[132 187]
[133 186]
[134 185]
[135 184]
[136 183]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
