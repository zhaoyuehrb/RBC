%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCGUGCGUGCGCGUGCGUGCUGGUGCGGGCGCCGUACGUGCGCGCGCGCGGCGGCCCAGAAAGCGGCGCUGGGACCCUGAGGCGGCCGUGGUUAGGCGGCUCCCCGGCGGCUCCUCCGCGGCGGUGACGGCGACCGCACUCCCCGCUUCCCGCUCCCCGCGCUCCUCCGCCCGGGUCCGCCAGCCGAGGCCGCUCCCGAGCGUCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-307.81668091 392.59930420]
[-318.95404053 402.64715576]
[-323.22827148 410.71725464]
[-330.32940674 412.75930786]
[-341.61306763 422.64257812]
[-352.89669800 432.52587891]
[-364.18035889 442.40917969]
[-375.46398926 452.29244995]
[-386.74765015 462.17575073]
[-398.03128052 472.05902100]
[-409.31491089 481.94232178]
[-420.59857178 491.82559204]
[-431.88220215 501.70889282]
[-443.16586304 511.59216309]
[-454.44949341 521.47546387]
[-465.73315430 531.35876465]
[-477.01678467 541.24206543]
[-488.30044556 551.12530518]
[-499.58407593 561.00860596]
[-510.86773682 570.89190674]
[-522.15136719 580.77520752]
[-533.36218262 590.74102783]
[-544.49951172 600.78887939]
[-555.63684082 610.83673096]
[-566.77416992 620.88464355]
[-567.33551025 636.67895508]
[-578.95739746 647.38903809]
[-594.74493408 646.66082764]
[-605.33154297 634.92626953]
[-604.43640137 619.14733887]
[-592.59063721 608.68536377]
[-576.82208252 609.74725342]
[-565.68469238 599.69940186]
[-554.54736328 589.65155029]
[-543.41003418 579.60369873]
[-540.54998779 572.79071045]
[-532.03466797 569.49151611]
[-520.75103760 559.60827637]
[-509.46737671 549.72497559]
[-498.18371582 539.84167480]
[-486.90008545 529.95837402]
[-475.61642456 520.07513428]
[-464.33279419 510.19180298]
[-453.04913330 500.30853271]
[-441.76550293 490.42523193]
[-430.48184204 480.54196167]
[-419.19821167 470.65866089]
[-407.91458130 460.77539062]
[-396.63092041 450.89208984]
[-385.34729004 441.00881958]
[-374.06362915 431.12551880]
[-362.77999878 421.24224854]
[-351.49633789 411.35894775]
[-340.21270752 401.47564697]
[-329.00189209 391.50982666]
[-317.86456299 381.46194458]
[-322.39593506 371.99212646]
[-324.54275513 361.70278931]
[-324.17532349 351.18551636]
[-321.30871582 341.04647827]
[-316.10226440 331.87152100]
[-308.85067749 324.19232178]
[-299.96725464 318.45544434]
[-289.96060181 314.99655151]
[-279.40527344 314.02075195]
[-268.90881348 315.59027100]
[-259.07696533 319.62072754]
[-250.47846985 325.88549805]
[-238.50041199 316.85632324]
[-226.52235413 307.82714844]
[-214.54429626 298.79797363]
[-202.56622314 289.76879883]
[-190.58816528 280.73962402]
[-178.61010742 271.71041870]
[-166.69865417 262.59356689]
[-154.85443115 253.38954163]
[-143.01020813 244.18548584]
[-131.16598511 234.98144531]
[-146.06202698 233.21850586]
[-156.42973328 222.37828064]
[-157.52746582 207.41848755]
[-148.85319519 195.18096924]
[-134.37405396 191.26248169]
[-120.71202850 197.45515442]
[-114.11540222 210.92677307]
[-117.60112762 225.51617432]
[-104.87522125 217.57568359]
[-92.14931488 209.63520813]
[-79.42340851 201.69471741]
[-66.69750977 193.75422668]
[-53.97160339 185.81373596]
[-47.26972580 172.51208496]
[-31.46588707 171.77101135]
[-18.73998070 163.83052063]
[-6.01407623 155.89004517]
[6.71182871 147.94955444]
[19.43773460 140.00906372]
[23.44752884 133.80278015]
[32.40924835 132.04701233]
[45.25034714 124.29418945]
[58.09144592 116.54137421]
[70.93254852 108.78855133]
[83.77364349 101.03573608]
[87.24271393 89.91937256]
[97.25566864 83.97389221]
[108.67633057 86.24905396]
[121.62985992 78.68556976]
[134.58338928 71.12209320]
[142.59938049 57.48192215]
[157.49163818 57.74611282]
[170.44517517 50.18263626]
[183.39869690 42.61915970]
[196.35221863 35.05567932]
[209.30574036 27.49220276]
[207.64346313 13.45833397]
[211.44366455 -0.10812619]
[220.10090637 -11.16814804]
[232.28231812 -18.07250404]
[246.13278198 -19.80766106]
[259.55737305 -16.14444160]
[270.53826904 -7.66768122]
[283.60140991 -15.04018879]
[296.66458130 -22.41269684]
[309.72772217 -29.78520393]
[322.79089355 -37.15771103]
[328.72463989 -44.09930801]
[336.10037231 -44.54095459]
[349.27035522 -51.72090149]
[357.68331909 -65.11987305]
[372.56140137 -64.41861725]
[378.59643555 -71.27235413]
[385.97784424 -71.60568237]
[399.25180054 -78.59152222]
[412.52575684 -85.57736206]
[418.66073608 -92.34177399]
[426.04626465 -92.56670380]
[439.42132568 -99.35693359]
[444.15881348 -111.35196686]
[455.43688965 -116.73270416]
[466.97589111 -113.10736084]
[480.44921875 -119.70051575]
[484.03662109 -134.92105103]
[496.59915161 -144.23323059]
[512.20513916 -143.24014282]
[523.48596191 -132.41067505]
[525.11517334 -116.85819244]
[516.32342529 -103.92608643]
[501.26196289 -99.72050476]
[487.04235840 -106.22719574]
[473.56906128 -99.63404083]
[464.57223511 -84.56558228]
[446.21157837 -85.98185730]
[432.83648682 -79.19162750]
[419.51159668 -72.30340576]
[406.23764038 -65.31756592]
[392.96368408 -58.33172226]
[379.74136353 -51.24863434]
[372.27038574 -38.36322021]
[356.45031738 -38.55092239]
[343.28033447 -31.37097549]
[330.16339111 -24.09455109]
[317.10025024 -16.72204399]
[304.03707886 -9.34953690]
[290.97393799 -1.97702909]
[277.91076660 5.39547825]
[279.25390625 21.31967545]
[273.49664307 36.28969955]
[261.74444580 47.28984451]
[246.31575012 52.08047104]
[230.28485107 49.65386581]
[216.86921692 40.44572830]
[203.91569519 48.00920486]
[190.96217346 55.57268143]
[178.00865173 63.13616180]
[165.05511475 70.69963837]
[157.96565247 83.79882050]
[142.14686584 84.07562256]
[129.19334412 91.63909912]
[116.23981476 99.20257568]
[108.30133820 113.98052979]
[91.52645874 113.87683105]
[78.68536377 121.62965393]
[65.84426117 129.38247681]
[53.00316620 137.13528442]
[40.16206741 144.88810730]
[27.37822151 152.73497009]
[14.65231609 160.67546082]
[1.92641139 168.61595154]
[-10.79949379 176.55642700]
[-23.52539825 184.49691772]
[-31.13751411 198.36653137]
[-46.03111267 198.53964233]
[-58.75701904 206.48013306]
[-71.48292542 214.42062378]
[-84.20883179 222.36109924]
[-96.93473053 230.30158997]
[-109.66063690 238.24208069]
[-121.96193695 246.82566833]
[-133.80616760 256.02972412]
[-145.65037537 265.23376465]
[-157.49459839 274.43780518]
[-162.34913635 282.17269897]
[-169.58093262 283.68850708]
[-181.55899048 292.71768188]
[-193.53704834 301.74685669]
[-205.51510620 310.77603149]
[-217.49316406 319.80520630]
[-229.47123718 328.83438110]
[-241.44929504 337.86355591]
[-236.63854980 357.11727905]
[-240.70794678 376.49243164]
[-252.79983521 392.10836792]
[-270.45401001 400.85589600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[4 54]
[5 53]
[6 52]
[7 51]
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 35]
[23 34]
[24 33]
[25 32]
[68 209]
[69 208]
[70 207]
[71 206]
[72 205]
[73 204]
[74 203]
[75 201]
[76 200]
[77 199]
[78 198]
[86 197]
[87 196]
[88 195]
[89 194]
[90 193]
[91 192]
[93 190]
[94 189]
[95 188]
[96 187]
[97 186]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[106 179]
[107 178]
[108 177]
[110 175]
[111 174]
[112 173]
[113 172]
[114 171]
[121 165]
[122 164]
[123 163]
[124 162]
[125 161]
[127 160]
[128 159]
[130 157]
[132 156]
[133 155]
[134 154]
[136 153]
[137 152]
[140 150]
[141 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
