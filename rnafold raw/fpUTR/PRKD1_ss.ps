%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCCCGCCUCGGCCAUUUUCCCUCCUCCCCAUCUCCUCCCCUUAGUCCCCUCCCCUCCCGAUCCUCAUCCCCUUGCCCUCCCCCAGCCCAGGGACUUUUCCGGAAAGUUUUUAUUUUCCGUCUGGGCUCUCGGAGAAAGAAGCUCCUGGCUCAGCGGCUGCAAAACUUUCCUGCUGCCGCGCCGCCAGCCCCCGCCCUCCGCUGCCCGGCCCUGCGCCCCGCCGAGCG\
) } def
/len { sequence length } bind def

/coor [
[108.21817017 258.94592285]
[99.38543701 271.85003662]
[84.31072235 276.00781250]
[70.11184692 269.45602417]
[63.49308395 255.28823853]
[67.57962036 240.19404602]
[80.44190979 231.30049133]
[81.66454315 216.35040283]
[82.88718414 201.40031433]
[80.30335236 194.48735046]
[84.22946930 186.25567627]
[85.65530396 171.32359314]
[87.08114624 156.39152527]
[88.50698853 141.45944214]
[89.93283081 126.52735901]
[81.52271271 138.94790649]
[73.11260223 151.36845398]
[64.70249176 163.78900146]
[56.29237747 176.20954895]
[54.21644974 191.06520081]
[48.89914322 205.09112549]
[40.60501862 217.58941650]
[29.74676323 227.93824768]
[16.86463165 235.62269592]
[2.59958220 240.26040649]
[-12.33861637 241.62063599]
[-27.20670509 239.63571167]
[-41.26491165 234.40437317]
[-53.81376266 226.18693542]
[-64.22888184 215.39224243]
[-71.99205017 202.55740356]
[-76.71701813 188.32101440]
[-78.16868591 173.39143372]
[-76.27482605 158.51145935]
[-71.12966919 144.42149353]
[-62.98921585 131.82255554]
[-52.25849533 121.34154510]
[-39.47142792 113.49993134]
[-25.26423836 108.68788910]
[-10.34381676 107.14483643]
[4.54746246 108.94755554]
[18.66631317 114.00518799]
[33.57165909 112.32272339]
[48.47700119 110.64025879]
[63.38234711 108.95779419]
[78.28768921 107.27532959]
[64.40040588 101.60582733]
[50.51311874 95.93632507]
[36.62582779 90.26682281]
[22.73854065 84.59732819]
[8.85125351 78.92782593]
[-0.29468742 90.91894531]
[-12.22365952 100.12682343]
[-26.11883545 105.92855072]
[-41.03071594 107.93417358]
[-55.94200516 106.01293182]
[-69.83702087 100.30175781]
[-81.77086639 91.19550323]
[-90.93369293 79.31969452]
[-96.70567322 65.48752594]
[-98.69887543 50.64421463]
[-96.78338623 35.80236816]
[-110.67067719 30.13286781]
[-121.80627441 38.24271393]
[-135.38677979 39.78269577]
[-147.85652161 34.45714951]
[-156.00363159 23.75397682]
[-157.78723145 10.53077602]
[-171.59613037 4.67293882]
[-186.15249634 10.82826805]
[-200.76625061 4.81050682]
[-206.76734924 -9.81011295]
[-200.59541321 -24.35943604]
[-185.91217041 -30.20560837]
[-171.42890930 -23.88019943]
[-165.73829651 -9.13596153]
[-151.92939758 -3.27812481]
[-138.13133240 -12.18329334]
[-121.57867432 -11.09332085]
[-108.81406403 -0.24032190]
[-105.00117493 16.24557877]
[-91.11388397 21.91507912]
[-82.09490204 9.97324371]
[-70.28298950 0.76588398]
[-56.47962189 -5.07462692]
[-41.62339783 -7.14463043]
[-26.72617912 -5.29707289]
[-12.80420399 0.34806472]
[-0.80874091 9.41153812]
[8.43889904 21.28031349]
[14.30359840 35.14902496]
[16.38004684 50.07463455]
[14.52075386 65.04053497]
[28.40804100 70.71003723]
[42.29533005 76.37953949]
[56.18261719 82.04904175]
[70.06990814 87.71853638]
[83.95719147 93.38803864]
[90.00678253 88.95493317]
[81.14075470 76.85561371]
[93.24021149 67.98976898]
[102.10596466 80.08871460]
[108.15555573 75.65560913]
[106.93291473 60.70551682]
[105.71028137 45.75542831]
[104.48764038 30.80533981]
[103.26499939 15.85525131]
[102.04235840 0.90516245]
[100.81971741 -14.04492664]
[99.59708405 -28.99501419]
[89.82728577 -42.16631699]
[96.59644318 -57.10319901]
[112.94102478 -58.43988419]
[122.04712677 -44.80130005]
[114.54717255 -30.21765518]
[115.76980591 -15.26756573]
[116.99244690 -0.31747681]
[118.21508789 14.63261223]
[119.43772888 29.58270073]
[120.66036987 44.53279114]
[121.88300323 59.48287964]
[123.10564423 74.43296814]
[130.57722473 75.24256897]
[138.26324463 77.82222748]
[145.78559875 82.24273682]
[152.75187683 88.49913788]
[167.56880188 86.16269684]
[182.38571167 83.82625580]
[197.20263672 81.48981476]
[203.81495667 69.76528931]
[215.79574585 64.06884003]
[228.67968750 66.27570343]
[237.80584717 75.36042023]
[252.65316772 73.22570038]
[267.50048828 71.09098053]
[282.34780884 68.95625305]
[297.19512939 66.82153320]
[303.18832397 57.76589584]
[312.97119141 53.58239746]
[323.22705078 55.42729950]
[330.62042236 62.45578003]
[334.83523560 47.87802124]
[344.28469849 36.05641174]
[357.50457764 28.77292824]
[372.46527100 27.11018753]
[386.88363647 31.29061317]
[398.57116699 40.64726639]
[405.76632690 53.73003006]
[420.66622925 51.99989319]
[435.56610107 50.26975632]
[450.46600342 48.53961945]
[465.36587524 46.80948257]
[473.03692627 33.45055008]
[486.94073486 27.24266815]
[501.65982056 30.37514877]
[511.59307861 41.44170380]
[526.49298096 39.71156693]
[541.39282227 37.98143005]
[556.29272461 36.25129318]
[571.19262695 34.52115631]
[584.00823975 25.24375153]
[597.54302979 31.46141624]
[612.44293213 29.73127937]
[627.34277344 28.00114250]
[634.03833008 14.10247040]
[647.19714355 6.04953384]
[662.62023926 6.41199684]
[675.38623047 15.07419777]
[681.42144775 29.27206039]
[678.80017090 44.47510147]
[668.35876465 55.83208084]
[653.42907715 59.71902847]
[638.77514648 54.89563751]
[629.07293701 42.90103149]
[614.17303467 44.63116837]
[599.27313232 46.36130142]
[587.52325439 55.51495743]
[572.92272949 49.42104340]
[558.02288818 51.15118027]
[543.12298584 52.88131714]
[528.22308350 54.61145401]
[513.32318115 56.34159088]
[506.19012451 69.38983917]
[492.58044434 75.81178284]
[477.62411499 72.95507050]
[467.09603882 61.70936966]
[452.19613647 63.43950653]
[437.29626465 65.16964722]
[422.39636230 66.89978027]
[407.49649048 68.62992096]
[403.49060059 83.01332092]
[394.25808716 94.79915619]
[381.18130493 102.17224884]
[366.23764038 103.98192596]
[351.70056152 99.92150116]
[339.79364014 90.57974243]
[332.35055542 77.35566711]
[317.70126343 89.98888397]
[299.32983398 81.66885376]
[284.48251343 83.80357361]
[269.63519287 85.93830109]
[254.78788757 88.07302094]
[239.94056702 90.20774078]
[230.43945312 104.09229279]
[213.50144958 106.85691833]
[199.53907776 96.30673218]
[184.72215271 98.64317322]
[169.90524292 100.97961426]
[155.08831787 103.31605530]
[148.03424072 116.55387878]
[154.35810852 130.15567017]
[160.68197632 143.75746155]
[175.19732666 150.59004211]
[178.76524353 166.23132324]
[168.64871216 178.68264771]
[152.60829163 178.39242554]
[142.94879150 165.58329773]
[147.08018494 150.08132935]
[140.75631714 136.47953796]
[134.43244934 122.87774658]
[127.04056549 124.14660645]
[112.25679779 126.68433380]
[104.86490631 127.95320129]
[103.43906403 142.88528442]
[102.01322937 157.81735229]
[100.58738708 172.74943542]
[99.16154480 187.68151855]
[97.83727264 202.62294006]
[96.61463165 217.57302856]
[95.39199829 232.52311707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 230]
[8 229]
[9 228]
[11 227]
[12 226]
[13 225]
[14 224]
[15 223]
[46 98]
[47 97]
[48 96]
[49 95]
[50 94]
[51 93]
[62 82]
[63 81]
[68 77]
[69 76]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[126 209]
[127 208]
[128 207]
[129 206]
[133 203]
[134 202]
[135 201]
[136 200]
[137 199]
[141 197]
[148 190]
[149 189]
[150 188]
[151 187]
[152 186]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[162 176]
[163 175]
[164 174]
[210 220]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
