%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGAGGCAGCCCGGGGAAGCGAGCCGGAGCGGCGCCCGCACUGAGGCGGCUGCAGUGCUGACACCACUCAGGGCAAGGGUGUCCGACGGCUGGAGCGUUCUGUUUUGAACCCAAAGUGGAUGAUGCUGUCAGAGCUGAACCACUGAAAGGAGGCUGUGAAAAUUUCCCAUCUUCUCAUUGGCCAUCAGUUGAGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[143.50003052 259.07174683]
[141.97874451 244.14907837]
[134.51742554 244.90972900]
[130.35282898 259.32000732]
[126.18822479 273.73028564]
[126.81170654 282.85171509]
[121.84428406 288.33227539]
[126.05437469 304.18179321]
[114.24399567 315.55929565]
[98.56266785 310.76055908]
[95.14198303 294.72213745]
[107.50085449 283.94296265]
[111.77794647 269.56567383]
[115.94254303 255.15539551]
[120.10714722 240.74511719]
[120.45878601 225.74925232]
[116.97420502 211.15960693]
[113.48962402 196.56996155]
[110.00504303 181.98031616]
[106.52046204 167.39067078]
[103.03588104 152.80102539]
[82.35305023 101.93005371]
[67.03591156 105.89184570]
[56.70287323 95.16442108]
[42.19892883 91.33877563]
[27.69498062 87.51313782]
[13.19103432 83.68749237]
[-1.31291270 79.86185455]
[-14.85643959 87.55670166]
[-29.51100540 83.47033691]
[-36.76340103 70.51123810]
[-45.86770630 71.34838104]
[-51.46322632 66.51080322]
[-65.90560913 62.45894241]
[-80.34799194 58.40708542]
[-94.79037476 54.35522461]
[-109.23275757 50.30336761]
[-123.67514038 46.25150681]
[-138.11752319 42.19964981]
[-152.62147522 38.37400818]
[-167.18344116 34.77551651]
[-182.43678284 38.97621918]
[-192.93621826 28.41160202]
[-207.49818420 24.81311226]
[-222.06015015 21.21462440]
[-236.62211609 17.61613464]
[-251.18408203 14.01764488]
[-265.85140991 10.87604046]
[-280.63024902 8.30980778]
[-295.42871094 5.85914707]
[-310.22717285 3.40848684]
[-325.02563477 0.95782638]
[-337.72909546 10.35983658]
[-353.34744263 7.94276571]
[-362.61462402 -4.85938215]
[-360.03256226 -20.45131874]
[-347.13314819 -29.58262634]
[-331.56939697 -26.83585930]
[-322.57495117 -13.84062862]
[-307.77651978 -11.38996792]
[-292.97805786 -8.93930721]
[-278.17959595 -6.48864698]
[-271.06127930 -8.49894238]
[-263.16976929 -3.88230491]
[-260.78692627 -5.37339449]
[-257.66754150 -6.00654078]
[-254.13685608 -5.49558544]
[-250.61788940 -3.67780352]
[-247.58560181 -0.54432213]
[-233.02363586 3.05416727]
[-218.46166992 6.65265703]
[-203.89970398 10.25114632]
[-189.33773804 13.84963608]
[-175.12594604 9.39154530]
[-163.58494568 20.21355057]
[-149.02297974 23.81204033]
[-144.53778076 22.15001106]
[-138.96060181 23.29362679]
[-134.06567383 27.75726509]
[-119.62328339 31.80912399]
[-105.18090057 35.86098480]
[-90.73851776 39.91284180]
[-76.29613495 43.96470261]
[-61.85374832 48.01655960]
[-47.41136551 52.06842041]
[-32.93775940 56.00728989]
[-20.23720551 48.31108475]
[-5.47364426 51.98421860]
[2.51272869 65.35791016]
[17.01667595 69.18354797]
[31.52062225 73.00919342]
[46.02457047 76.83483124]
[60.52851486 80.66047668]
[74.80823517 76.42504883]
[86.17868805 87.42610931]
[99.55971527 80.64759827]
[105.05541992 66.69062042]
[110.55111694 52.73364258]
[116.04682159 38.77666473]
[121.54251862 24.81968498]
[126.81941223 10.77851582]
[131.87620544 -3.34341025]
[136.93301392 -17.46533585]
[141.98980713 -31.58726311]
[147.04660034 -45.70919037]
[152.10339355 -59.83111572]
[157.16018677 -73.95304108]
[162.21699524 -88.07496643]
[167.27378845 -102.19689178]
[163.81123352 -118.22632599]
[176.14190674 -129.03773499]
[191.58108521 -123.50924683]
[194.24624634 -107.32812500]
[181.39570618 -97.14009857]
[176.33891296 -83.01817322]
[171.28211975 -68.89624786]
[166.22532654 -54.77431870]
[161.16853333 -40.65239334]
[156.11172485 -26.53046608]
[151.05493164 -12.40853977]
[145.99813843 1.71338642]
[140.94134521 15.83531284]
[142.13990784 20.46594429]
[140.43656921 25.89838600]
[135.49949646 30.31538391]
[130.00379944 44.27236557]
[124.50809479 58.22934341]
[119.01239777 72.18632507]
[113.51669312 86.14330292]
[118.18631744 92.01225281]
[132.19519043 109.61911774]
[147.03013611 107.40003967]
[161.86509705 105.18096924]
[174.36877441 95.48722839]
[188.10064697 101.25654602]
[202.93559265 99.03746796]
[217.77053833 96.81839752]
[232.60548401 94.59932709]
[238.56430054 85.48761749]
[248.35440063 81.25096893]
[258.64294434 83.06829071]
[266.06997681 90.10066223]
[280.96704102 88.34632874]
[289.39685059 75.17544556]
[304.33590698 70.55390930]
[318.73043823 76.66386414]
[325.78378296 90.62037659]
[322.16558838 105.83361816]
[309.58422852 115.12034607]
[293.98025513 114.09566498]
[282.72137451 103.24338531]
[267.82431030 104.99771881]
[253.22068787 117.66423035]
[234.82456970 109.43427277]
[219.98960876 111.65334320]
[205.15466309 113.87242126]
[190.31971741 116.09149170]
[178.87713623 125.62651062]
[164.08416748 120.01591492]
[149.24922180 122.23499298]
[134.41426086 124.45406342]
[130.21708679 130.66966248]
[136.78564453 144.15498352]
[121.82270813 143.10084534]
[117.62552643 149.31645203]
[121.11010742 163.90609741]
[124.59468842 178.49572754]
[128.07926941 193.08537292]
[131.56384277 207.67501831]
[135.04843140 222.26466370]
[141.83985901 218.63050842]
[150.51873779 217.57562256]
[160.14941406 219.76560974]
[169.59764099 225.54421997]
[177.63618469 234.88034058]
[184.62300110 248.15379333]
[191.60980225 261.42724609]
[198.59661865 274.70068359]
[205.58343506 287.97415161]
[212.67375183 301.19259644]
[219.86717224 314.35522461]
[227.06057739 327.51785278]
[241.98881531 333.39382935]
[246.56448364 348.77053833]
[237.27749634 361.85226440]
[221.25205994 362.60382080]
[210.78150940 350.44869995]
[213.89794922 334.71124268]
[206.70454407 321.54861450]
[199.51112366 308.38598633]
[193.53996277 304.02053833]
[192.30998230 294.96093750]
[185.32316589 281.68750000]
[178.33636475 268.41406250]
[171.34954834 255.14059448]
[164.36273193 241.86715698]
[156.90141296 242.62779236]
[158.42269897 257.55044556]
[164.48071289 271.27270508]
[153.30197144 281.27450562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[7 12]
[16 170]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 95]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[31 86]
[33 85]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 76]
[41 75]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 64]
[49 62]
[50 61]
[51 60]
[52 59]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[131 161]
[132 160]
[133 159]
[135 157]
[136 156]
[137 155]
[138 154]
[142 152]
[143 151]
[175 196]
[176 195]
[177 194]
[178 193]
[179 192]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
