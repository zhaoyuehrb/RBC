%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUAGCCUGCCUGUCUGCAUGGUCCGCCUAGAGGUUUGAGCAGCUGGGCAUGGAAGAAGCGAGCCACACCCCCAUCGCAUGCCCUAUGAACGGGAUAAGGGAACUUUUUCACUUCACCACUAUGCCUGACUAAUUUUUUAAUUAAAAAAAAUUUUUUUGUAGAAACAGAGUUUCACC\
) } def
/len { sequence length } bind def

/coor [
[179.15490723 304.59765625]
[164.16180420 305.05273438]
[149.79562378 300.73849487]
[137.53376770 292.09863281]
[128.63726807 280.02169800]
[124.02104950 265.74969482]
[124.15982819 250.75032043]
[129.03935242 236.56616211]
[138.15780640 224.65592957]
[150.57742310 216.24444580]
[165.02098083 212.19677734]
[180.00309753 212.92918396]
[193.98298645 218.36633301]
[205.52252197 227.94859314]
[197.09344482 215.54090881]
[188.66438293 203.13322449]
[172.48339844 196.37240601]
[171.25526428 178.01271057]
[162.60974121 165.75486755]
[153.96420288 153.49702454]
[145.31867981 141.23916626]
[136.67315674 128.98132324]
[128.02761841 116.72347260]
[119.38209534 104.46562958]
[110.63896942 115.43994904]
[97.58325195 117.44441986]
[87.31865692 110.51178741]
[72.67818451 113.77622223]
[58.03771210 117.04066467]
[43.39723969 120.30510712]
[28.75676918 123.56954956]
[14.11629677 126.83398438]
[5.62099123 139.89030457]
[-9.27303314 142.99235535]
[-21.66788673 134.81291199]
[-36.30835724 138.07736206]
[-48.01295471 149.56362915]
[-63.73801804 144.91020203]
[-67.30695343 128.90412903]
[-55.04834747 118.01107025]
[-39.57279968 123.43688965]
[-24.93232727 120.17244720]
[-17.18641663 107.50215149]
[-2.38539886 103.98298645]
[10.85185623 112.19351196]
[25.49232864 108.92907715]
[40.13280106 105.66463470]
[54.77327347 102.40019226]
[69.41374207 99.13574982]
[84.05421448 95.87131500]
[88.98270416 86.26071930]
[99.35630035 81.26059723]
[111.34881592 83.66562653]
[109.51062012 68.77868652]
[99.82833862 60.22842789]
[98.61778259 47.77114487]
[105.98556519 38.15431213]
[104.40890503 23.23740196]
[102.83225250 8.32049370]
[101.25559998 -6.59641457]
[92.11061859 -19.50687218]
[98.46729279 -32.97691345]
[96.89064026 -47.89382172]
[95.31398773 -62.81072998]
[79.96193695 -68.15895844]
[68.51506042 -79.62068939]
[63.22485352 -94.86981964]
[65.10056305 -110.84264374]
[73.71707916 -124.35333252]
[87.30992126 -132.72937012]
[85.47171783 -147.61631775]
[83.63351440 -162.50325012]
[71.45674896 -172.21737671]
[69.80461884 -187.34103394]
[79.14058685 -198.88986206]
[77.30239105 -213.77679443]
[75.46418762 -228.66374207]
[66.09403992 -241.41171265]
[72.21333313 -254.99124146]
[57.63455963 -259.39343262]
[46.11095810 -269.34963989]
[39.63906479 -283.13494873]
[39.34017181 -298.36093140]
[45.26606369 -312.38961792]
[56.39004898 -322.79040527]
[70.78482819 -327.76135254]
[85.95641327 -326.44119263]
[99.27623749 -319.05865479]
[108.43656921 -306.89279175]
[111.85031891 -292.05142212]
[108.92602539 -277.10589600]
[100.17035675 -264.64562988]
[87.10027313 -256.82943726]
[96.33894348 -245.14628601]
[90.35112762 -230.50193787]
[92.18933105 -215.61500549]
[94.02753448 -200.72805786]
[105.89229584 -191.79705811]
[107.96856689 -176.72576904]
[98.52045441 -164.34146118]
[100.35865784 -149.45451355]
[102.19686127 -134.56758118]
[115.55615997 -130.77061462]
[126.49043274 -122.13720703]
[133.32508850 -109.94741058]
[134.99739075 -96.02905273]
[131.22151184 -82.48367310]
[122.53676605 -71.36921692]
[110.23089600 -64.38738251]
[111.80754852 -49.47047424]
[113.38420105 -34.55356598]
[122.41641235 -22.71006584]
[116.17250824 -8.17306900]
[117.74916077 6.74383974]
[119.32582092 21.66074753]
[120.90247345 36.57765579]
[131.97833252 50.17390060]
[124.39756012 66.94048309]
[126.23576355 81.82743073]
[131.63993835 95.82009888]
[140.28547668 108.07794189]
[148.93099976 120.33579254]
[157.57652283 132.59364319]
[166.22206116 144.85148621]
[174.86758423 157.10932922]
[183.51310730 169.36718750]
[196.08432007 172.33674622]
[203.02996826 182.74864197]
[201.07206726 194.70414734]
[209.50114441 207.11183167]
[217.93020630 219.51951599]
[231.70228577 207.16093445]
[255.59277344 207.10466003]
[269.80902100 211.88989258]
[284.02526855 216.67510986]
[298.24151611 221.46032715]
[312.45776367 226.24555969]
[326.67401123 231.03077698]
[340.89025879 235.81599426]
[355.10650635 240.60121155]
[369.14978027 233.35128784]
[384.18075562 238.23443604]
[391.28182983 252.35359192]
[386.24002075 267.33212280]
[372.04656982 274.28347778]
[357.12219238 269.08361816]
[350.32128906 254.81745911]
[336.10504150 250.03224182]
[321.88879395 245.24702454]
[307.67254639 240.46179199]
[293.45629883 235.67657471]
[279.24005127 230.89135742]
[265.02380371 226.10614014]
[250.80755615 221.32090759]
[245.57452393 226.69355774]
[256.31982422 237.15963745]
[267.06509399 247.62570190]
[277.81024170 258.09194946]
[267.34384155 268.83691406]
[256.59902954 258.37100220]
[245.85374451 247.90492249]
[235.10844421 237.43885803]
[229.87541199 242.81150818]
[235.03318787 256.89685059]
[240.19096375 270.98220825]
[245.34875488 285.06756592]
[250.50653076 299.15292358]
[261.63049316 311.94720459]
[252.41564941 326.17825317]
[236.18983459 321.26309204]
[236.42117310 304.31069946]
[231.26339722 290.22534180]
[226.10560608 276.13998413]
[220.94783020 262.05462646]
[215.79005432 247.96928406]
[216.83822632 262.93261719]
[213.09603882 277.45831299]
[204.94831848 290.05255127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 131]
[15 130]
[16 129]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[35 42]
[36 41]
[53 119]
[54 118]
[57 116]
[58 115]
[59 114]
[60 113]
[62 111]
[63 110]
[64 109]
[70 102]
[71 101]
[72 100]
[75 97]
[76 96]
[77 95]
[79 93]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
