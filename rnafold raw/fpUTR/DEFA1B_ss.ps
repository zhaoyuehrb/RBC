%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCUCCUUGCUAUAGAAGACCUGGGACAGAGGACUGCUGUCUGCCCUCUCUGGUCACCCUGCCUAGCUAGAGGAUCUGAGACUACUCACCCCAUAACCUCAAAAACCUCUUC\
) } def
/len { sequence length } bind def

/coor [
[152.92581177 120.89050293]
[138.36920166 117.27043915]
[123.81258392 113.65036774]
[106.17534637 130.51252747]
[78.90556335 127.69635010]
[71.87943268 140.94903564]
[75.19494629 156.64575195]
[64.87918091 168.93251038]
[48.84550476 168.38395691]
[39.39358902 155.42089844]
[43.77413177 139.98748779]
[58.62675476 133.92289734]
[65.65287781 120.67021942]
[57.44939804 133.22821045]
[43.27532959 138.13694763]
[29.06228638 133.34220886]
[20.75820160 120.85053253]
[21.83819771 105.88945770]
[31.85031319 94.71997070]
[46.60464096 92.01630402]
[59.92760849 98.91082764]
[47.28887939 90.83230591]
[34.65014648 82.75379181]
[22.01141739 74.67527008]
[6.21657658 73.76224518]
[-0.34013247 60.38843536]
[-12.97886372 52.30991745]
[-25.61759377 44.23139954]
[-38.25632477 36.15287781]
[-53.50435257 39.33649063]
[-66.20674133 30.96367836]
[-69.14785767 16.40739441]
[-84.94270325 15.49437428]
[-91.49941254 2.12056279]
[-104.13813782 -5.95795679]
[-116.77687073 -14.03647614]
[-129.41560364 -22.11499596]
[-145.81353760 -22.31402969]
[-153.60310364 -36.74506760]
[-144.77104187 -50.56269455]
[-128.40304565 -49.55252075]
[-121.33708191 -34.75372696]
[-108.69835663 -26.67520714]
[-96.05962372 -18.59668732]
[-83.42089081 -10.51816845]
[-68.53005981 -10.18297768]
[-61.06934357 3.76866317]
[-46.62347412 0.32592428]
[-33.69092178 8.33864784]
[-30.17780685 23.51414680]
[-17.53907585 31.59266663]
[-4.90034437 39.67118835]
[7.73838711 47.74970627]
[22.62922096 48.08489609]
[30.08993530 62.03653717]
[42.72866821 70.11505890]
[55.36739731 78.19357300]
[68.00612640 86.27209473]
[77.98154449 74.63735199]
[91.54383850 68.76542664]
[105.76161194 69.40665436]
[117.77863312 75.95570374]
[125.38761902 86.66767883]
[127.43264771 99.09375000]
[141.98927307 102.71382141]
[156.54588318 106.33388519]
[165.08790588 97.00022888]
[176.74105835 92.26170349]
[189.22760010 92.97718048]
[200.13569641 98.94598389]
[207.38513184 108.95878601]
[209.62408447 121.04207611]
[223.96336365 125.44491577]
[238.30265808 129.84774780]
[252.64193726 134.25059509]
[266.98123169 138.65342712]
[280.29519653 128.32490540]
[296.97552490 127.92174530]
[310.50216675 137.40516663]
[315.70428467 152.91024780]
[330.15753174 156.92317200]
[344.61077881 160.93609619]
[359.06402588 164.94902039]
[367.61532593 152.45286560]
[379.76226807 143.41238403]
[394.18728638 138.80822754]
[409.32559204 139.13981628]
[423.53515625 144.37118530]
[435.27459717 153.93487549]
[443.27053833 166.79348755]
[446.65560913 181.55220032]
[445.06262207 196.61013794]
[438.66439819 210.33389282]
[428.15496826 221.23481750]
[414.67428589 228.13047791]
[399.68466187 230.27288818]
[384.81204224 227.42962646]
[371.66970825 219.90913391]
[361.68325806 208.52716064]
[355.93591309 194.51835632]
[355.05111694 179.40228271]
[340.59786987 175.38934326]
[326.14459229 171.37641907]
[311.69134521 167.36349487]
[301.99285889 176.64506531]
[288.86120605 179.91572571]
[275.73309326 176.20835876]
[266.09976196 166.39677429]
[262.57836914 152.99270630]
[248.23908997 148.58987427]
[233.89981079 144.18702698]
[219.56053162 139.78419495]
[205.22125244 135.38136292]
[191.73631287 146.61909485]
[174.05557251 147.62193298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[5 13]
[6 12]
[21 58]
[22 57]
[23 56]
[24 55]
[26 53]
[27 52]
[28 51]
[29 50]
[32 47]
[34 45]
[35 44]
[36 43]
[37 42]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[80 104]
[81 103]
[82 102]
[83 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
