%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCGCCUGCCGUUUCUCGGGGCGGGACGGGGGGGCGGGGACUGGGCGGAGAGGCGCGUGCUGCUGCGUGCGUGCGCGCGCGCCGCGGGCGGGCCAGUGAAACCGGCGGCCCUGGCACGUGACCUAGGACCGGCUCACCGGGUCGCUUGGUGGCUCCGUCUGUCUGUCCGUCCGCCCGCGGGUGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[16.36114502 531.08245850]
[12.88313198 524.54595947]
[15.73102188 515.84747314]
[15.23507118 500.85568237]
[14.73912048 485.86386108]
[14.24316978 470.87207031]
[13.74722004 455.88027954]
[13.25126934 440.88848877]
[12.75531864 425.89666748]
[-1.68989444 421.85491943]
[-9.89411640 434.41241455]
[-18.09833908 446.96990967]
[-26.30256081 459.52740479]
[-34.50678253 472.08489990]
[-42.71100616 484.64239502]
[-43.07364273 501.03753662]
[-57.58168411 508.68270874]
[-71.31050110 499.71322632]
[-70.13706207 483.35614014]
[-55.26850510 476.43817139]
[-47.06428146 463.88067627]
[-38.86005783 451.32318115]
[-30.65583611 438.76568604]
[-22.45161438 426.20819092]
[-14.24739170 413.65069580]
[-4.20496893 406.01879883]
[6.35596132 403.93658447]
[15.00125313 406.57888794]
[18.92345238 392.10076904]
[22.84565163 377.62261963]
[26.76785088 363.14450073]
[22.62766647 348.83685303]
[33.70424652 337.53997803]
[37.62644577 323.06182861]
[41.54864502 308.58370972]
[45.47084427 294.10556030]
[49.39304352 279.62744141]
[53.31523895 265.14929199]
[56.99752426 250.60829163]
[60.43888092 236.00839233]
[63.88024139 221.40849304]
[67.32160187 206.80859375]
[65.79332733 199.56382751]
[70.94243622 191.99671936]
[74.62471771 177.45571899]
[78.30699921 162.91471863]
[81.98928070 148.37370300]
[85.67156219 133.83270264]
[89.35385132 119.29170227]
[93.03613281 104.75069427]
[89.60369873 104.68359375]
[86.06415558 103.52687836]
[82.69771576 101.25617981]
[79.78710175 97.91221619]
[67.94998932 88.69902802]
[56.11288452 79.48583221]
[44.27577591 70.27264404]
[32.43866730 61.05945206]
[20.60156059 51.84626007]
[8.76445198 42.63307190]
[-3.07265544 33.41987991]
[-14.98552608 24.30486488]
[-26.97334671 15.28864765]
[-38.96116638 6.27243042]
[-54.98352432 7.08704710]
[-65.50182343 -5.02678823]
[-62.44731903 -20.77637863]
[-48.16316986 -28.07998466]
[-33.60695267 -21.33490562]
[-29.94494820 -5.71538973]
[-17.95712852 3.30082774]
[-5.96930885 12.31704521]
[1.27915895 13.82768536]
[6.14053535 21.58277321]
[17.97764206 30.79596329]
[29.81475067 40.00915527]
[41.65185928 49.22234344]
[53.48896408 58.43553543]
[65.32607269 67.64872742]
[77.16317749 76.86191559]
[89.00028992 86.07510376]
[103.95878601 84.96004486]
[114.29908752 74.09366608]
[124.63938904 63.22728729]
[134.97969055 52.36091232]
[145.31999207 41.49453354]
[155.57009888 30.54303932]
[165.72932434 19.50718117]
[175.88854980 8.47132301]
[186.04777527 -2.56453609]
[196.20700073 -13.60039425]
[206.36622620 -24.63625336]
[210.02030945 -40.02970123]
[224.33276367 -44.15312958]
[234.49198914 -55.18898773]
[238.14607239 -70.58243561]
[252.45854187 -74.70586395]
[262.61776733 -85.74172211]
[272.77697754 -96.77758026]
[282.93621826 -107.81343842]
[283.73855591 -112.12228394]
[285.68313599 -115.59468079]
[288.36337280 -117.97286987]
[291.33056641 -119.15892029]
[294.15032959 -119.21451569]
[298.81378174 -134.33280945]
[313.36746216 -137.50129700]
[324.23385620 -147.84159851]
[335.10021973 -158.18190002]
[339.76367188 -173.30020142]
[354.31738281 -176.46868896]
[365.18374634 -186.80899048]
[376.05014038 -197.14929199]
[386.91650391 -207.48959351]
[397.78289795 -217.82989502]
[395.60290527 -233.19306946]
[402.89923096 -246.88771057]
[416.86630249 -253.64794922]
[432.13345337 -250.87432861]
[442.83020020 -239.63337708]
[444.84341431 -224.24745178]
[437.39895630 -210.63276672]
[423.35937500 -204.02444458]
[408.12319946 -206.96351624]
[397.25680542 -196.62321472]
[386.39044189 -186.28291321]
[375.52404785 -175.94261169]
[364.65768433 -165.60231018]
[360.77145386 -151.22363281]
[345.44052124 -147.31552124]
[334.57415771 -136.97521973]
[323.70776367 -126.63492584]
[319.82156372 -112.25624084]
[304.49063110 -108.34814453]
[293.97207642 -97.65421295]
[283.81283569 -86.61835480]
[273.65362549 -75.58249664]
[263.49441528 -64.54663849]
[260.56698608 -49.94255066]
[245.52784729 -45.02976227]
[235.36862183 -33.99390411]
[232.44119263 -19.38981628]
[217.40208435 -14.47702980]
[207.24285889 -3.44117117]
[197.08363342 7.59468746]
[186.92440796 18.63054657]
[176.76518250 29.66640472]
[166.60595703 40.70226288]
[164.38482666 47.76546860]
[156.18637085 51.83483505]
[145.84606934 62.70121002]
[135.50576782 73.56758881]
[125.16546631 84.43396759]
[114.82516479 95.30034637]
[107.57713318 108.43298340]
[103.89485168 122.97398376]
[100.21257019 137.51498413]
[96.53028870 152.05598450]
[92.84800720 166.59700012]
[89.16572571 181.13800049]
[85.48344421 195.67900085]
[81.92150116 210.24995422]
[78.48014069 224.84985352]
[75.03878021 239.44975281]
[71.59741974 254.04965210]
[73.13938904 260.50866699]
[71.43202209 265.95288086]
[67.79337311 269.07150269]
[63.87117386 283.54962158]
[59.94897461 298.02777100]
[56.02677536 312.50588989]
[52.10457611 326.98403931]
[48.18238068 341.46215820]
[52.04202271 356.80535889]
[41.24598312 367.06668091]
[37.32378387 381.54483032]
[33.40158463 396.02294922]
[29.47938728 410.50109863]
[27.74711800 425.40072632]
[28.24306870 440.39251709]
[28.73901939 455.38433838]
[29.23496819 470.37612915]
[29.73091888 485.36791992]
[30.22686958 500.35971069]
[30.72282028 515.35150146]
[31.34269524 530.33868408]
[40.68613434 543.81579590]
[33.44260788 558.52850342]
[17.06363106 559.34161377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[28 178]
[29 177]
[30 176]
[31 175]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 165]
[40 164]
[41 163]
[42 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 72]
[63 71]
[64 70]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
[92 143]
[94 141]
[95 140]
[97 138]
[98 137]
[99 136]
[100 135]
[105 134]
[107 132]
[108 131]
[109 130]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
