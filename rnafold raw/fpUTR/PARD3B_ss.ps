%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCCCUCCCCGAUUCCCGCCACCUGCCGCCUGGCCAGGUGGAAGGGGCGCUGCCGCGAGCCUCCGGGCCUCAGGGUGUUCCGGGGAGCGGCGCCCCGGGUCUCUGGGCCCACCCGCCCCGGGCGUCCUCCGAGAGUGGGGGCUGCGCCCGCGGGGUCAGACACCUGUUCGGCCCGGCCCGGCGUGGUCGCCGGGGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[252.08804321 -3.51220584]
[239.87339783 5.19423914]
[227.65873718 13.90068436]
[215.44407654 22.60713005]
[203.22943115 31.31357384]
[191.14765930 40.20350647]
[179.20153809 49.27489853]
[167.25541687 58.34629440]
[155.30929565 67.41768646]
[143.36317444 76.48907471]
[131.41705322 85.56047058]
[119.47092438 94.63186646]
[122.19732666 104.38429260]
[119.80817413 115.34232330]
[111.89874268 124.77450562]
[99.51327515 129.90856934]
[90.99230194 142.25332642]
[92.45818329 158.22927856]
[80.78236389 169.23176575]
[64.92153168 166.82063293]
[57.04276276 152.84548950]
[63.18996811 138.02688599]
[78.64754486 133.73236084]
[87.16851807 121.38760376]
[77.22167206 110.15994263]
[63.93983459 117.13078308]
[50.65799332 124.10163116]
[37.37615204 131.07247925]
[24.09431267 138.04333496]
[10.81247234 145.01417542]
[-2.46936774 151.98503113]
[-15.69818687 159.05596924]
[-28.87322998 166.22662354]
[-36.96138382 180.49244690]
[-53.35991669 180.35023499]
[-61.19942093 165.94625854]
[-52.41528702 152.09812927]
[-36.04388046 153.05158997]
[-22.86883736 145.88093567]
[-18.49553871 139.92088318]
[-9.44021511 138.70318604]
[3.84162498 131.73233032]
[17.12346458 124.76148987]
[30.40530586 117.79064178]
[43.68714523 110.81979370]
[56.96898651 103.84894562]
[70.25082397 96.87809753]
[88.81685638 77.57929993]
[110.39953613 82.68573761]
[122.34565735 73.61434937]
[134.29177856 64.54295349]
[146.23789978 55.47156143]
[158.18402100 46.40016937]
[170.13014221 37.32877731]
[182.07626343 28.25738525]
[184.98648071 22.31665230]
[189.74617004 19.20604897]
[194.52297974 19.09891891]
[206.73764038 10.39247417]
[218.95228577 1.68602860]
[231.16694641 -7.02041626]
[243.38160706 -15.72686195]
[245.64660645 -35.68837738]
[261.61309814 -47.37141037]
[280.72525024 -43.60810471]
[292.53302002 -52.85889053]
[304.34075928 -62.10967255]
[312.73937988 -80.07204437]
[330.64144897 -78.46383667]
[339.71282959 -90.40995789]
[348.78421021 -102.35608673]
[357.85562134 -114.30220795]
[366.92700195 -126.24832916]
[375.99841309 -138.19444275]
[385.06979370 -150.14057922]
[379.96429443 -166.26484680]
[385.42062378 -182.09811401]
[399.10156250 -191.46603394]
[415.50433350 -190.84065247]
[424.39425659 -202.92242432]
[433.28421021 -215.00419617]
[442.17413330 -227.08595276]
[451.06405640 -239.16772461]
[459.95401001 -251.24949646]
[468.84393311 -263.33126831]
[477.27142334 -275.74002075]
[485.22448730 -288.45806885]
[493.17755127 -301.17611694]
[493.93423462 -316.97921753]
[507.24249268 -323.66793823]
[515.19555664 -336.38601685]
[517.09301758 -345.32363892]
[523.36602783 -349.23480225]
[531.51025391 -361.83129883]
[539.65447998 -374.42779541]
[536.55029297 -389.69216919]
[544.98919678 -402.35079956]
[559.56060791 -405.21606445]
[567.70483398 -417.81253052]
[575.84906006 -430.40902710]
[583.99328613 -443.00552368]
[592.13751221 -455.60198975]
[593.13281250 -471.39187622]
[606.54058838 -477.87884521]
[607.53582764 -493.66870117]
[620.94360352 -500.15567017]
[629.08782959 -512.75213623]
[637.23205566 -525.34863281]
[645.37634277 -537.94512939]
[645.47869873 -558.10174561]
[663.05242920 -566.16394043]
[670.81250000 -579.00067139]
[678.57257080 -591.83740234]
[686.33264160 -604.67407227]
[683.12292480 -615.06982422]
[686.10430908 -625.30474854]
[694.06018066 -632.06591797]
[704.20605469 -633.30395508]
[712.35028076 -645.90045166]
[720.49450684 -658.49688721]
[728.63873291 -671.09338379]
[732.16107178 -687.67742920]
[749.07208252 -688.88366699]
[754.91259766 -672.96746826]
[741.23522949 -662.94915771]
[733.09100342 -650.35266113]
[724.94677734 -637.75622559]
[716.80255127 -625.15972900]
[717.24713135 -605.83001709]
[699.16937256 -596.91400146]
[691.40930176 -584.07733154]
[683.64923096 -571.24060059]
[675.88916016 -558.40386963]
[679.21759033 -548.73986816]
[676.62152100 -538.62707520]
[668.72454834 -531.46600342]
[657.97277832 -529.80090332]
[649.82855225 -517.20440674]
[641.68432617 -504.60791016]
[633.54010010 -492.01144409]
[633.12738037 -477.12255859]
[619.13702393 -469.73458862]
[618.72430420 -454.84570312]
[604.73400879 -447.45776367]
[596.58978271 -434.86126709]
[588.44555664 -422.26480103]
[580.30126953 -409.66830444]
[572.15704346 -397.07183838]
[575.52453613 -382.60821533]
[567.44451904 -369.71759033]
[552.25097656 -366.28353882]
[544.10675049 -353.68707275]
[535.96246338 -341.09057617]
[527.91363525 -328.43295288]
[519.96057129 -315.71490479]
[519.77270508 -300.82147217]
[505.89559937 -293.22305298]
[497.94253540 -280.50500488]
[489.98947144 -267.78695679]
[504.97018433 -268.54776001]
[515.02099609 -257.41311646]
[512.73541260 -242.58825684]
[499.79760742 -234.99787903]
[485.74169922 -240.23541260]
[480.92568970 -254.44132996]
[472.03576660 -242.35955811]
[463.14584351 -230.27780151]
[454.25588989 -218.19602966]
[445.36596680 -206.11425781]
[436.47604370 -194.03248596]
[427.58609009 -181.95072937]
[432.79818726 -169.65800476]
[431.24249268 -156.28793335]
[423.21914673 -145.34574890]
[410.73800659 -139.75329590]
[397.01593018 -141.06918335]
[387.94451904 -129.12306213]
[378.87313843 -117.17693329]
[369.80172729 -105.23081207]
[360.73034668 -93.28469086]
[351.65896606 -81.33856964]
[342.58755493 -69.39244843]
[341.45584106 -54.43519974]
[348.62649536 -41.26015472]
[355.79714966 -28.08511353]
[362.96780396 -14.91007042]
[370.13845825 -1.73502719]
[377.30911255 11.44001579]
[384.47976685 24.61505890]
[398.74557495 32.70321274]
[398.60336304 49.10174561]
[384.19940186 56.94124985]
[370.35125732 48.15711594]
[371.30471802 31.78570938]
[364.13406372 18.61066628]
[356.96340942 5.43562412]
[349.79275513 -7.73941898]
[342.62210083 -20.91446304]
[335.45144653 -34.08950424]
[328.28082275 -47.26454926]
[313.59155273 -50.30192184]
[301.78378296 -41.05113602]
[289.97604370 -31.80035400]
[291.52969360 -21.64950371]
[288.70642090 -11.69219208]
[281.95138550 -3.74442482]
[272.43307495 0.71548152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[4 59]
[5 58]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[16 24]
[17 23]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 39]
[33 38]
[65 203]
[66 202]
[67 201]
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[86 159]
[87 158]
[88 157]
[90 155]
[91 154]
[93 153]
[94 152]
[95 151]
[98 148]
[99 147]
[100 146]
[101 145]
[102 144]
[104 142]
[106 140]
[107 139]
[108 138]
[109 137]
[111 133]
[112 132]
[113 131]
[114 130]
[118 128]
[119 127]
[120 126]
[121 125]
[183 200]
[184 199]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
