%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCGGCCGUGCCGGGGUCGGUGGCCGCGGCGGCUGUGGGGCUACGCGCGGGCCGGGCCCACUGAGGCGGCGGCGCAGGGAGCGGGGCUGCGGGUUCGCGGCGGCGGCGGCAGGAGAGCGGCGGGAGCGCGCGGCGCCCCUAACUUCUAGUCGGGGGAGCGCGCCGGCAUCCGCCCGCCGGGCCGGCCGGCCGCU\
) } def
/len { sequence length } bind def

/coor [
[87.99392700 427.22381592]
[71.61335754 426.44351196]
[64.34035492 411.74536133]
[73.65676880 398.24957275]
[74.37049866 383.26657104]
[75.08422089 368.28353882]
[75.79795074 353.30053711]
[76.51168060 338.31753540]
[77.22541046 323.33450317]
[77.93914032 308.35150146]
[78.65287018 293.36849976]
[75.82789612 286.53033447]
[79.49864960 278.15399170]
[80.45000458 263.18420410]
[81.40136719 248.21438599]
[82.35272217 233.24459839]
[83.30408478 218.27479553]
[75.54542542 208.98545837]
[76.22224426 196.49960327]
[85.51640320 187.54629517]
[86.70515442 172.59347534]
[87.89390564 157.64065552]
[89.08265686 142.68783569]
[90.27140045 127.73501587]
[91.46015167 112.78218842]
[85.22892761 99.13771057]
[73.14987183 90.24409485]
[61.07081985 81.35047150]
[48.99176407 72.45685577]
[36.91271210 63.56323624]
[21.21233559 61.61162186]
[15.55095005 47.83490372]
[3.47189569 38.94128418]
[-12.22847939 36.98966980]
[-17.88986588 23.21295357]
[-29.96891975 14.31933403]
[-42.04797363 5.42571545]
[-54.12702942 -3.46790338]
[-66.20608521 -12.36152267]
[-78.28513336 -21.25514221]
[-90.36418915 -30.14875984]
[-94.71822357 -30.47597313]
[-98.37033081 -32.02166367]
[-101.02260590 -34.41365051]
[-102.52939606 -37.22110367]
[-102.90318298 -40.00953293]
[-114.39384460 -49.65134811]
[-129.93882751 -52.59481049]
[-134.71504211 -66.70285797]
[-146.20571899 -76.34467316]
[-157.69638062 -85.98648834]
[-169.18704224 -95.62830353]
[-180.67771912 -105.27011871]
[-196.22270203 -108.21357727]
[-200.99891663 -122.32162476]
[-212.48957825 -131.96343994]
[-228.03457642 -134.90690613]
[-232.81079102 -149.01495361]
[-248.34213257 -147.82546997]
[-259.85794067 -157.76733398]
[-260.89624023 -172.58143616]
[-272.38690186 -182.22325134]
[-280.98223877 -185.34695435]
[-283.98181152 -192.11033630]
[-295.31805420 -201.93325806]
[-306.65429688 -211.75616455]
[-319.55868530 -211.61750793]
[-328.79959106 -220.04133606]
[-329.78625488 -232.10429382]
[-340.96524048 -242.10583496]
[-357.11883545 -244.93304443]
[-362.49227905 -260.42684937]
[-351.55786133 -272.64855957]
[-335.56393433 -269.02551270]
[-330.96368408 -253.28479004]
[-319.78472900 -243.28326416]
[-302.44274902 -240.62559509]
[-296.83139038 -223.09240723]
[-285.49514771 -213.26950073]
[-274.15890503 -203.44659424]
[-262.74508667 -193.71391296]
[-251.25440979 -184.07209778]
[-236.48507690 -185.62205505]
[-224.69454956 -176.00756836]
[-223.16897583 -160.50561523]
[-208.44587708 -158.25180054]
[-202.84776306 -143.45410156]
[-191.35710144 -133.81230164]
[-176.63400269 -131.55847168]
[-171.03590393 -116.76078033]
[-159.54522705 -107.11896515]
[-148.05456543 -97.47715759]
[-136.56390381 -87.83534241]
[-125.07323456 -78.19352722]
[-110.35013580 -75.93970490]
[-104.75203705 -61.14201355]
[-93.26136780 -51.50019836]
[-81.47057343 -42.22781372]
[-69.39151764 -33.33419418]
[-57.31246185 -24.44057655]
[-45.23340988 -15.54695702]
[-33.15435410 -6.65333843]
[-21.07530022 2.24028063]
[-8.99624729 11.13389969]
[5.84015322 12.44938183]
[12.36551476 26.86223221]
[24.44456863 35.75585175]
[39.28096771 37.07133484]
[45.80633163 51.48418427]
[57.88538361 60.37779999]
[69.96443939 69.27142334]
[82.04349518 78.16503906]
[94.12254333 87.05865479]
[84.33408356 75.69265747]
[82.53023529 60.80151367]
[89.32174683 47.42708588]
[102.40914917 40.09769821]
[117.36128998 41.29494095]
[129.11567688 50.61344910]
[133.69247437 64.89815521]
[129.54208374 79.31253052]
[118.06785583 88.97695923]
[133.06030273 89.45288086]
[148.05274963 89.92879486]
[163.04519653 90.40471649]
[178.03765869 90.88063049]
[193.03010559 91.35655212]
[207.06881714 84.06099701]
[219.54418945 92.19821167]
[234.53663635 92.67413330]
[246.00981140 82.13829803]
[261.20751953 82.83451843]
[271.18112183 93.83737183]
[286.17355347 94.31329346]
[301.16601562 94.78920746]
[316.16177368 95.14617920]
[331.15988159 95.38416290]
[345.08108521 87.86679077]
[357.68399048 95.80504608]
[372.68209839 96.04303741]
[387.68020630 96.28102875]
[402.67831421 96.51902008]
[417.67642212 96.75700378]
[431.59762573 89.23963165]
[444.20053101 97.17788696]
[459.19863892 97.41587830]
[474.19674683 97.65386963]
[490.12982178 91.85959625]
[500.10836792 105.56597900]
[489.69998169 118.94886017]
[473.95877075 112.65197754]
[458.96066284 112.41399384]
[443.96255493 112.17600250]
[431.11410522 119.71039581]
[417.43844604 111.75511932]
[402.44033813 111.51712799]
[387.44223022 111.27913666]
[372.44409180 111.04115295]
[357.44598389 110.80316162]
[344.59756470 118.33755493]
[330.92187500 110.38227844]
[315.92376709 110.14428711]
[309.17868042 113.18479156]
[300.69009399 109.78166199]
[285.69766235 109.30574036]
[270.70520020 108.82981873]
[260.05383301 119.17795563]
[244.84257507 118.90888214]
[234.06071472 107.66658020]
[219.06826782 107.19066620]
[206.10191345 114.52025604]
[192.55418396 106.34899902]
[177.56173706 105.87308502]
[162.56929016 105.39716339]
[147.57684326 104.92124176]
[132.58438110 104.44532776]
[117.59194183 103.96940613]
[106.41297150 113.97093964]
[105.22422791 128.92376709]
[104.03547668 143.87658691]
[102.84672546 158.82940674]
[101.65797424 173.78222656]
[100.46923065 188.73504639]
[108.76912689 205.16708374]
[98.27388000 219.22615051]
[97.32252502 234.19595337]
[96.37116241 249.16575623]
[95.41980743 264.13555908]
[94.46844482 279.10534668]
[93.63587952 294.08221436]
[92.92214966 309.06524658]
[92.20841980 324.04824829]
[91.49468994 339.03125000]
[90.78096008 354.01428223]
[90.06723785 368.99728394]
[89.35350800 383.98028564]
[88.63977814 398.96328735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 113]
[27 112]
[28 111]
[29 110]
[30 109]
[32 107]
[33 106]
[35 104]
[36 103]
[37 102]
[38 101]
[39 100]
[40 99]
[41 98]
[46 97]
[47 96]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[55 88]
[56 87]
[58 85]
[61 82]
[62 81]
[64 80]
[65 79]
[66 78]
[69 76]
[70 75]
[122 177]
[123 176]
[124 175]
[125 174]
[126 173]
[127 172]
[129 170]
[130 169]
[133 166]
[134 165]
[135 164]
[136 162]
[137 161]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
