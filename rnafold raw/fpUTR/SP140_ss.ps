%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUUCUUUUCCUCUUUGACUGAGCACCGAGGGGCAGUUGGCAGCUUCACCUCAGAGCUGCAGGAAGGAACGGGGCAGUGAAAAUCGAAUCGGGUGUGAUCCUAGGCCAAGCUC\
) } def
/len { sequence length } bind def

/coor [
[309.72286987 235.47419739]
[297.54003906 226.72326660]
[285.35720825 217.97235107]
[270.50634766 216.83148193]
[263.81192017 202.49638367]
[251.62907410 193.74546814]
[239.44624329 184.99455261]
[227.26341248 176.24363708]
[212.41256714 175.10275269]
[205.71812439 160.76766968]
[193.53529358 152.01673889]
[181.35244751 143.26582336]
[169.16961670 134.51490784]
[156.98678589 125.76398468]
[144.68656921 117.17884064]
[132.27124023 108.76103210]
[119.85590363 100.34322357]
[104.01754761 117.26795197]
[86.12374878 107.12685394]
[71.12924957 106.72066498]
[56.13474655 106.31446838]
[41.14024734 105.90827942]
[26.14575005 105.50209045]
[22.15094376 107.88485718]
[18.02325439 108.69970703]
[14.29902172 108.11125183]
[11.39776993 106.44933319]
[9.57642269 104.15289307]
[-5.28626156 102.12789154]
[-20.25220108 108.83257294]
[-33.38124466 99.00606537]
[-31.16736031 82.75704193]
[-15.88800049 76.80110168]
[-3.26126146 87.26521301]
[11.60142231 89.29020691]
[26.55194092 90.50759125]
[41.54644012 90.91378021]
[56.54093933 91.31996918]
[71.53543854 91.72616577]
[86.52993774 92.13235474]
[93.18897247 83.63134766]
[104.98130035 80.77601624]
[100.19178009 66.56121826]
[95.40225220 52.34642410]
[90.61273193 38.13162613]
[85.82321167 23.91682816]
[81.03368378 9.70203114]
[76.24416351 -4.51276636]
[61.61766052 -10.04443741]
[54.01392746 -23.70889091]
[57.02321625 -39.05418777]
[69.22463226 -48.83475113]
[84.85704803 -48.43249512]
[96.53929901 -38.03735733]
[98.75539398 -22.55759811]
[90.45896149 -9.30228901]
[95.24848175 4.91250801]
[100.03800964 19.12730598]
[104.82752991 33.34210205]
[109.61705017 47.55690002]
[114.40657806 61.77169800]
[119.19609833 75.98649597]
[128.27371216 87.92789459]
[140.68904114 96.34569550]
[153.10438538 104.76350403]
[162.09254456 107.03627777]
[165.73770142 113.58115387]
[177.92053223 122.33207703]
[190.10337830 131.08299255]
[202.28620911 139.83390808]
[214.46903992 148.58482361]
[230.19128418 150.35162354]
[236.01432800 164.06079102]
[248.19717407 172.81172180]
[260.38000488 181.56263733]
[272.56283569 190.31355286]
[288.28506470 192.08035278]
[294.10812378 205.78952026]
[306.29095459 214.54043579]
[318.47378540 223.29135132]
[327.59356689 215.60353088]
[338.14465332 210.05744934]
[349.63308716 206.90895081]
[361.52169800 206.30171204]
[373.25555420 208.26066589]
[384.28753662 212.69107056]
[394.10400391 219.38298035]
[402.24877930 228.02130127]
[408.34417725 238.20051575]
[412.10861206 249.44383240]
[413.36962891 261.22540283]
[412.07171631 272.99505615]
[408.27886963 284.20379639]
[402.17126465 294.32965088]
[412.77786255 304.93624878]
[423.38446045 315.54284668]
[438.61376953 319.82995605]
[442.14221191 334.30059814]
[452.74880981 344.90719604]
[468.72058105 348.62664795]
[473.22576904 364.39480591]
[461.62982178 375.99075317]
[445.86166382 371.48556519]
[442.14221191 355.51379395]
[431.53561401 344.90719604]
[417.06497192 341.37875366]
[412.77786255 326.14944458]
[402.17126465 315.54284668]
[391.56466675 304.93624878]
[375.23870850 313.48217773]
[356.98086548 316.13073730]
[338.85729980 312.56774902]
[322.92376709 303.18283081]
[310.99246216 289.02679443]
[304.42581177 271.69396973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[5 76]
[6 75]
[7 74]
[8 73]
[10 71]
[11 70]
[12 69]
[13 68]
[14 67]
[15 65]
[16 64]
[17 63]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[28 35]
[29 34]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[94 109]
[95 108]
[96 107]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
