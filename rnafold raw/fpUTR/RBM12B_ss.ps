%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGUGGGCGCCAUCUUCUUCUGGGCUCACUGAGGGUCUACCUGUUUUGGGGAGGCUGCUGCGACGAAGAGUUCCCUCAGCCUCCGGCCUUGUGUGUCCGACUCGGCAGCAGUGUUAAGUUGCUUUUACAGAGUUAACAGGUCUCCAAGAAAUUUUAAAAAAGGUCAUUAUUGCUGUGGUUUGAGCUCAGC\
) } def
/len { sequence length } bind def

/coor [
[118.35906982 147.94587708]
[103.70995331 144.72042847]
[95.00541687 132.50440979]
[96.74057007 117.60317993]
[88.08174133 129.85163879]
[79.42290497 142.10009766]
[70.76407623 154.34854126]
[62.10524750 166.59700012]
[53.44641495 178.84545898]
[44.78758621 191.09391785]
[36.12875366 203.34236145]
[33.72503662 212.16998291]
[27.22921371 215.71751404]
[18.37317848 227.82415771]
[9.51714325 239.93078613]
[14.39239120 254.66210938]
[9.64563751 269.43533325]
[-2.89789414 278.56982422]
[-18.41496086 278.55325317]
[-30.93893242 269.39193726]
[-35.65408707 254.60859680]
[-30.74735260 239.88774109]
[-18.10546684 230.88983154]
[-2.58949256 231.07475281]
[6.26654291 218.96812439]
[15.12257862 206.86148071]
[23.88029861 194.68353271]
[32.53913116 182.43508911]
[41.19795990 170.18663025]
[49.85679245 157.93817139]
[58.51562119 145.68971252]
[67.17445374 133.44126892]
[75.83328247 121.19281006]
[84.49211121 108.94435120]
[81.12047577 94.32819366]
[67.97119904 87.11040497]
[54.82192230 79.89261627]
[41.67264557 72.67482758]
[28.52336502 65.45703888]
[15.37408733 58.23925018]
[12.75931454 66.00850677]
[6.21744823 72.91261292]
[-3.81920624 77.31176758]
[-18.81134033 77.79749298]
[-29.43469238 89.49877167]
[-45.22439957 90.17752075]
[-56.81270599 79.43105316]
[-57.32448196 63.63505173]
[-46.45609283 52.16100693]
[-30.65556335 51.81626892]
[-19.29706764 62.80535889]
[-4.30493450 62.31963348]
[0.58369112 48.13861084]
[-10.92430592 38.51748657]
[-22.43230247 28.89636421]
[-33.94029999 19.27524185]
[-45.44829559 9.65411854]
[-56.95629120 0.03299514]
[-68.46428680 -9.58812809]
[-79.97228241 -19.20925140]
[-95.50147247 -17.99183083]
[-107.03516388 -27.91295433]
[-108.10008240 -42.72516251]
[-123.65034485 -45.64065170]
[-128.45193481 -59.74008179]
[-139.95993042 -69.36120605]
[-151.46792603 -78.98233032]
[-167.51097107 -78.99324799]
[-177.39199829 -91.63226318]
[-173.53112793 -107.20381927]
[-158.89009094 -113.76274109]
[-144.70022583 -106.27758026]
[-141.84680176 -90.49032593]
[-130.33880615 -80.86920166]
[-118.83081055 -71.24807739]
[-104.10368347 -69.02075958]
[-98.47895813 -54.23315811]
[-83.71244049 -55.80967712]
[-71.90464020 -46.21642303]
[-70.35116577 -30.71724892]
[-58.84316635 -21.09612465]
[-47.33516693 -11.47500134]
[-35.82717133 -1.85387814]
[-24.31917572 7.76724529]
[-12.81117916 17.38836861]
[-1.30318224 27.00949097]
[10.20481396 36.63061523]
[22.59187698 45.08996964]
[35.74115372 52.30775833]
[48.89043427 59.52554703]
[62.03971100 66.74333954]
[75.18898773 73.96112823]
[88.33826447 81.17891693]
[104.90782928 80.89936066]
[115.07337952 91.50766754]
[130.02423096 90.29446411]
[143.15339661 81.46634674]
[156.46476746 88.14891052]
[171.41563416 86.93570709]
[184.54478455 78.10758972]
[197.85615540 84.79015350]
[212.80702209 83.57695007]
[227.75787354 82.36373901]
[236.69792175 73.05359650]
[249.18505859 72.35817719]
[258.48666382 80.10562134]
[271.75704956 71.49126434]
[284.95846558 78.38850403]
[299.92700195 77.41755676]
[314.89553833 76.44660950]
[329.86410522 75.47566223]
[344.83264160 74.50471497]
[359.80117798 73.53376770]
[374.76971436 72.56282043]
[389.73825073 71.59187317]
[404.70681763 70.62092590]
[408.21774292 58.67399979]
[415.21536255 48.40364838]
[425.01046753 40.79474640]
[436.64645386 36.57136154]
[448.99276733 36.12784195]
[460.85476685 39.49206924]
[471.08920288 46.32419205]
[478.71459961 55.95091248]
[483.00518799 67.43180084]
[498.00320435 67.18891144]
[513.00122070 66.94601440]
[527.99926758 66.70311737]
[542.99731445 66.46022034]
[553.95257568 55.38681793]
[569.16613770 55.35413742]
[579.65545654 65.86653137]
[594.65350342 65.62364197]
[609.65148926 65.38074493]
[624.64953613 65.13784790]
[639.64758301 64.89495087]
[654.64562988 64.65205383]
[662.16735840 51.33399963]
[675.25897217 43.61994934]
[690.35369873 43.49533844]
[703.39685059 50.89349747]
[710.93481445 63.74044037]
[725.93286133 63.49754333]
[741.67199707 57.19551468]
[752.08477783 70.57498932]
[742.11071777 84.28463745]
[726.17578125 78.49557495]
[711.17773438 78.73847198]
[704.05969238 91.82277679]
[691.26293945 99.63941193]
[676.17211914 100.00366211]
[662.83758545 92.71759033]
[654.88848877 79.65008545]
[639.89050293 79.89298248]
[624.89245605 80.13587952]
[609.89440918 80.37877655]
[594.89636230 80.62167358]
[579.89831543 80.86457062]
[569.75494385 91.71111298]
[554.54827881 92.17109680]
[543.24023438 81.45825195]
[528.24218750 81.70114899]
[513.24414062 81.94404602]
[498.24612427 82.18694305]
[483.24807739 82.42984009]
[476.44421387 98.74683380]
[463.15487671 110.48582458]
[446.02099609 115.25229645]
[428.47454834 112.04352570]
[414.05120850 101.45909119]
[405.67776489 85.58946991]
[390.70919800 86.56041718]
[375.74066162 87.53136444]
[360.77212524 88.50231171]
[345.80358887 89.47325897]
[330.83505249 90.44420624]
[315.86648560 91.41515350]
[300.89794922 92.38610077]
[285.92941284 93.35704803]
[273.72967529 101.90195465]
[259.45761108 95.07416534]
[245.41450500 105.58823395]
[228.97108459 97.31459808]
[214.02023315 98.52780914]
[199.06936646 99.74101257]
[187.00958252 108.48235321]
[172.62882996 101.88656616]
[157.67797852 103.09976959]
[145.61819458 111.84111023]
[131.23744202 105.24532318]
[116.28658295 106.45852661]
[129.99253845 112.55333710]
[136.07331848 126.26553345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[13 26]
[14 25]
[15 24]
[35 93]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[43 52]
[44 51]
[53 87]
[54 86]
[55 85]
[56 84]
[57 83]
[58 82]
[59 81]
[60 80]
[63 77]
[65 75]
[66 74]
[67 73]
[95 191]
[96 190]
[98 188]
[99 187]
[101 185]
[102 184]
[103 183]
[106 181]
[108 179]
[109 178]
[110 177]
[111 176]
[112 175]
[113 174]
[114 173]
[115 172]
[116 171]
[125 165]
[126 164]
[127 163]
[128 162]
[129 161]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
