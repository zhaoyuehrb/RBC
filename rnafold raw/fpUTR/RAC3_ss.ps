%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUCCGGCCGAUCGCUCGGCGCUCGGGUCCGCGGCCGCUGCGGCGCCGGGCAUUUCUCCGCAGCUCGGCUCGCGGCCGCGCCCGCCGCCGCCCGGCCCGCGCCC\
) } def
/len { sequence length } bind def

/coor [
[-11.35407734 251.55818176]
[-12.65704250 262.47903442]
[-17.01095200 272.55566406]
[-24.04326630 280.95645142]
[-33.16096878 286.99194336]
[-43.60057068 290.17135620]
[-54.49202728 290.24240112]
[-64.93125916 287.21136475]
[-74.05518341 281.34146118]
[-85.89940643 290.54550171]
[-97.74362946 299.74954224]
[-109.58785248 308.95358276]
[-121.43207550 318.15765381]
[-127.11044312 333.54229736]
[-143.31672668 336.04998779]
[-153.37928772 323.10098267]
[-146.94662476 308.01611328]
[-130.63612366 306.31341553]
[-118.79189301 297.10937500]
[-106.94766998 287.90533447]
[-95.10344696 278.70129395]
[-83.25922394 269.49725342]
[-87.24953461 250.55056763]
[-81.28420258 232.05015564]
[-66.86536407 218.90065002]
[-47.74663925 214.62741089]
[-28.95614243 220.43162537]
[-18.58565521 209.59405518]
[-8.21516895 198.75648499]
[2.15531707 187.91889954]
[5.36427927 173.37408447]
[20.49548340 168.75270081]
[30.86597061 157.91511536]
[33.25396347 150.79441833]
[41.70354462 146.91726685]
[52.38771439 136.38880920]
[63.07188416 125.86034393]
[73.75605011 115.33187866]
[84.44022369 104.80342102]
[85.25613403 93.08640289]
[93.74223328 84.96604156]
[105.48381042 84.66678619]
[116.47245026 74.45651245]
[127.46109009 64.24623871]
[138.44973755 54.03596115]
[149.43838501 43.82568741]
[160.42701721 33.61541367]
[165.27003479 18.55368042]
[179.86039734 15.55857849]
[190.84904480 5.34830284]
[201.83767700 -4.86197233]
[212.82632446 -15.07224751]
[223.81497192 -25.28252220]
[219.71266174 -37.71115112]
[220.66835022 -50.71713257]
[226.50103760 -62.32842255]
[236.29298401 -70.79826355]
[248.53392029 -74.86791992]
[261.35397339 -73.95367432]
[272.80923462 -68.23024750]
[284.37814331 -77.77803040]
[295.94705200 -87.32581329]
[307.51599121 -96.87358856]
[318.94351196 -106.59017181]
[330.22714233 -116.47345734]
[341.51080322 -126.35674286]
[349.44180298 -141.34123230]
[366.03625488 -137.86828613]
[367.29278564 -120.96096039]
[351.39407349 -115.07309723]
[340.11044312 -105.18981171]
[328.82678223 -95.30652618]
[325.82165527 -88.42349243]
[317.06375122 -85.30467224]
[305.49484253 -75.75688934]
[293.92593384 -66.20910645]
[282.35699463 -56.66133118]
[285.85406494 -39.93738556]
[280.46154785 -23.63238335]
[267.55111694 -12.17460251]
[250.54858398 -8.72237492]
[234.02523804 -14.29387951]
[223.03660583 -4.08360481]
[212.04795837 6.12667084]
[201.05931091 16.33694649]
[190.07067871 26.54722214]
[186.01364136 40.87864685]
[170.63729858 44.60405350]
[159.64865112 54.81433105]
[148.66001892 65.02460480]
[137.67137146 75.23487854]
[126.68272400 85.44515991]
[115.69408417 95.65543365]
[111.25843048 111.76551056]
[94.96868134 115.48758698]
[84.28451538 126.01605225]
[73.60034180 136.54450989]
[62.91617584 147.07296753]
[52.23200607 157.60144043]
[41.70354462 168.28561401]
[31.33305740 179.12318420]
[27.38232803 194.44317627]
[12.99289131 198.28939819]
[2.62240481 209.12696838]
[-7.74808168 219.96453857]
[-18.11856842 230.80210876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[27 106]
[28 105]
[29 104]
[30 103]
[32 101]
[33 100]
[35 99]
[36 98]
[37 97]
[38 96]
[39 95]
[42 93]
[43 92]
[44 91]
[45 90]
[46 89]
[47 88]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[60 77]
[61 76]
[62 75]
[63 74]
[64 72]
[65 71]
[66 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
