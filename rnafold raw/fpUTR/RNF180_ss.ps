%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCGGCAUCGCCGCCGCCGGAGCCGCAGCGAGUCCUCAGAGCCUGGCUGCUGGCGGCCGGGAGCGCCGGGACGGGGCGCGAAGCCGGAGGCUCCGGGACGUGGAUACAG\
) } def
/len { sequence length } bind def

/coor [
[212.57011414 341.81964111]
[210.65165710 334.30908203]
[211.55123901 326.54028320]
[215.19902039 319.54455566]
[207.57789612 306.62487793]
[199.95675659 293.70520020]
[192.33563232 280.78549194]
[184.71449280 267.86581421]
[171.58384705 260.83477783]
[171.23655701 245.01737976]
[163.61543274 232.09770203]
[155.99429321 219.17800903]
[148.37316895 206.25831604]
[142.17543030 202.03561401]
[140.72531128 192.86767578]
[133.46952820 179.73931885]
[126.21375275 166.61096191]
[120.13687897 162.21609497]
[118.94446564 153.01109314]
[112.05973816 139.68440247]
[105.17501068 126.35771942]
[86.55031586 123.25115967]
[74.57170105 108.65517426]
[75.15832520 89.78228760]
[63.43085480 80.42993927]
[51.70338440 71.07759094]
[39.84590149 61.89064026]
[27.86074638 52.87088394]
[15.87558842 43.85112762]
[3.89043140 34.83137131]
[-8.09472561 25.81161308]
[-23.77377892 23.69551849]
[-29.29043198 9.86020756]
[-41.27558899 0.84045148]
[-56.95464325 -1.27564394]
[-62.47129440 -15.11095428]
[-78.08339691 -12.65377331]
[-90.81095886 -22.02312279]
[-93.10294342 -37.66033173]
[-83.59955597 -50.28812408]
[-67.93898773 -52.41465378]
[-55.41237640 -42.77828979]
[-53.45153809 -27.09611130]
[-38.62974548 -25.62516975]
[-32.25583267 -11.14470577]
[-20.27067566 -2.12494946]
[-5.44888115 -0.65400738]
[0.92503047 13.82645607]
[12.91018772 22.84621239]
[24.89534569 31.86596870]
[36.88050079 40.88572693]
[48.86565781 49.90548325]
[56.20758820 51.43497467]
[61.05573273 59.35012054]
[72.78320312 68.70246887]
[84.51067352 78.05481720]
[91.14933777 74.63908386]
[98.47174072 73.18256378]
[105.91220856 73.79778290]
[113.16799164 60.66943359]
[120.42377472 47.54108429]
[127.67955780 34.41273117]
[124.63782501 18.66067123]
[135.16593933 6.55536509]
[151.18762207 7.38296604]
[160.41242981 20.50860977]
[155.76387024 35.86342621]
[140.80790710 41.66851425]
[133.55212402 54.79686737]
[126.29634857 67.92521667]
[119.04056549 81.05356598]
[126.01507568 93.31225586]
[125.81727600 107.41474152]
[118.50169373 119.47299194]
[125.38642120 132.79968262]
[132.27114868 146.12635803]
[139.34210205 159.35517883]
[146.59788513 172.48353577]
[153.85366821 185.61187744]
[161.29286194 198.63719177]
[168.91398621 211.55686951]
[176.53512573 224.47656250]
[184.15625000 237.39625549]
[197.83201599 245.35137939]
[197.63418579 260.24468994]
[205.25532532 273.16436768]
[212.87644958 286.08404541]
[220.49757385 299.00375366]
[228.11871338 311.92343140]
[249.34269714 321.17553711]
[249.81712341 343.60736084]
[265.27621460 345.51895142]
[274.59375000 357.54550171]
[272.67608643 372.27160645]
[282.02844238 383.99908447]
[291.38079834 395.72656250]
[300.73312378 407.45404053]
[316.45016479 410.67187500]
[323.60507202 425.03109741]
[316.70922852 439.51647949]
[301.05255127 443.01614380]
[288.64547729 432.84536743]
[289.00564575 416.80636597]
[279.65332031 405.07888794]
[270.30096436 393.35144043]
[260.94860840 381.62396240]
[246.16500854 380.21667480]
[236.51333618 368.45657349]
[238.08964539 352.95971680]
[230.68774414 354.00878906]
[223.33236694 352.32852173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[10 83]
[11 82]
[12 81]
[13 80]
[15 79]
[16 78]
[17 77]
[19 76]
[20 75]
[21 74]
[24 56]
[25 55]
[26 54]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[33 46]
[34 45]
[36 43]
[59 71]
[60 70]
[61 69]
[62 68]
[91 109]
[94 106]
[95 105]
[96 104]
[97 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
