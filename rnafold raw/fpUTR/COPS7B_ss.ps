%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUGGGAGGCUUCCGGGGGAGCUGCACGGGCGACGGGUCGGCGGAGACAGAAAAGCGCCGGACGCCGGGGUGAUCAUGGACGCUUGACAACCUGCGGGCAGGCGCCGGGAGGCCGAGCCAGCGACUAAGAGGACCGAGAGGUGGCGUGGACAGAUUUCAAGGCCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[64.69406128 75.02710724]
[54.13571930 64.37246704]
[43.48107529 53.81412506]
[32.73100281 43.35296249]
[17.44473648 39.27367020]
[13.71954155 24.85243034]
[2.96947050 14.39126587]
[-7.78060102 3.93010139]
[-25.24768829 4.49809313]
[-37.49294662 -7.49354219]
[-37.29811096 -24.29411316]
[-48.23637009 -34.55834579]
[-59.17462540 -44.82258224]
[-70.11288452 -55.08681488]
[-81.05113983 -65.35105133]
[-91.98940277 -75.61528778]
[-102.92765808 -85.87952423]
[-118.28547668 -89.68056488]
[-122.27192688 -104.03178406]
[-133.21018982 -114.29601288]
[-148.56800842 -118.09705353]
[-152.55445862 -132.44827271]
[-165.47048950 -132.82472229]
[-174.37222290 -141.62898254]
[-174.85760498 -153.73818970]
[-185.60768127 -164.19935608]
[-196.35775757 -174.66052246]
[-207.10781860 -185.12168884]
[-218.77888489 -182.64436340]
[-230.07624817 -186.08953857]
[-238.21170044 -194.48544312]
[-241.23643494 -205.65388489]
[-238.50701904 -216.77453613]
[-248.87013245 -227.61914062]
[-259.23327637 -238.46376038]
[-274.11746216 -234.94122314]
[-288.67028809 -239.31291199]
[-299.01226807 -250.30882263]
[-302.43881226 -264.90728760]
[-298.12719727 -279.16473389]
[-308.49032593 -290.00936890]
[-318.85345459 -300.85397339]
[-329.21658325 -311.69857788]
[-339.67773438 -322.44863892]
[-350.23608398 -333.10330200]
[-360.79440308 -343.75793457]
[-372.50854492 -341.49295044]
[-383.74145508 -345.14270020]
[-391.72314453 -353.68493652]
[-394.54455566 -364.90649414]
[-391.61364746 -375.97573853]
[-401.77813721 -387.00674438]
[-416.36450195 -382.64791870]
[-431.33590698 -385.04464722]
[-443.73132324 -393.66870117]
[-451.12274170 -406.76556396]
[-452.09085083 -421.71121216]
[-446.49700928 -435.53778076]
[-456.66149902 -446.56878662]
[-471.70294189 -451.47439575]
[-474.63735962 -466.07705688]
[-484.80184937 -477.10806274]
[-494.96636963 -488.13906860]
[-505.13085938 -499.17007446]
[-520.31042480 -506.72097778]
[-517.25677490 -523.39764404]
[-500.38650513 -525.07989502]
[-494.09985352 -509.33456421]
[-483.93536377 -498.30355835]
[-473.77087402 -487.27258301]
[-463.60635376 -476.24157715]
[-449.29193115 -472.12496948]
[-445.63049316 -456.73327637]
[-435.46600342 -445.70227051]
[-421.22894287 -450.14883423]
[-406.41220093 -447.96401978]
[-393.96240234 -439.52816772]
[-386.37890625 -426.47018433]
[-385.21221924 -411.35311890]
[-390.74716187 -397.17123413]
[-380.58264160 -386.14022827]
[-362.30627441 -386.51849365]
[-349.30880737 -373.21517944]
[-350.13977051 -354.31628418]
[-339.58142090 -343.66165161]
[-329.02310181 -333.00698853]
[-322.05645752 -330.46005249]
[-318.37194824 -322.06170654]
[-308.00881958 -311.21710205]
[-297.64569092 -300.37249756]
[-287.28259277 -289.52786255]
[-272.84411621 -293.18798828]
[-258.41622925 -289.10244751]
[-247.90098572 -278.27212524]
[-244.19425964 -263.53585815]
[-248.38865662 -248.82688904]
[-238.02552795 -237.98226929]
[-227.66239929 -227.13766479]
[-209.39590454 -227.84774780]
[-196.15901184 -214.78262329]
[-196.64666748 -195.87176514]
[-185.89659119 -185.41059875]
[-175.14651489 -174.94943237]
[-164.39645386 -164.48826599]
[-147.18925476 -161.11991882]
[-142.29022217 -143.38653564]
[-127.71477509 -140.31965637]
[-122.94595337 -125.23427582]
[-112.00769043 -114.97003937]
[-97.43225098 -111.90316772]
[-92.66342163 -96.81777954]
[-81.72516632 -86.55354309]
[-70.78691101 -76.28930664]
[-59.84864807 -66.02507782]
[-48.91039276 -55.76084137]
[-37.97213364 -45.49660492]
[-27.03387642 -35.23237228]
[-14.31783104 -37.43835068]
[-2.48116279 -31.82374382]
[4.04673338 -20.24102402]
[2.68056369 -6.81997013]
[13.43063545 3.64119434]
[24.18070602 14.10235882]
[38.69805527 17.43339539]
[43.19216919 32.60289001]
[53.94223785 43.06405258]
[60.95397186 45.48408508]
[64.79036713 53.81412506]
[75.34870148 64.46877289]
[88.47397614 57.54637909]
[103.41156769 55.39466858]
[118.45285034 58.43087387]
[131.81979370 66.46886444]
[141.87500000 78.72165680]
[147.32162476 93.87600708]
[147.36885071 110.23229218]
[161.24003601 115.94107056]
[175.11122131 121.64984894]
[191.28448486 118.93732452]
[201.51008606 131.75798035]
[195.26881409 146.92301941]
[178.98114014 148.83195496]
[169.40245056 135.52104187]
[155.53126526 129.81225586]
[141.66006470 124.10347748]
[132.21673584 135.75781250]
[140.67724609 148.14408875]
[149.13777161 160.53034973]
[165.90711975 168.09753418]
[166.58993530 185.61801147]
[175.27395630 197.84860229]
[183.95799255 210.07920837]
[192.64202881 222.30979919]
[208.15524292 226.39881897]
[214.49855042 241.13456726]
[206.80592346 255.21301270]
[190.97846985 257.83441162]
[179.15768433 246.98782349]
[180.41143799 230.99383545]
[171.72740173 218.76324463]
[163.04336548 206.53263855]
[154.35932922 194.30204773]
[142.46871948 191.96070862]
[135.13771057 181.81121826]
[136.75149536 168.99085999]
[128.29098511 156.60459900]
[119.83046722 144.21832275]
[102.33748627 147.65895081]
[85.06561279 144.53366089]
[70.35725403 135.47032166]
[60.13248444 121.88792419]
[55.63907623 105.77779388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 126]
[4 125]
[6 123]
[7 122]
[8 121]
[11 117]
[12 116]
[13 115]
[14 114]
[15 113]
[16 112]
[17 111]
[19 109]
[20 108]
[22 106]
[25 104]
[26 103]
[27 102]
[28 101]
[33 98]
[34 97]
[35 96]
[40 91]
[41 90]
[42 89]
[43 88]
[44 86]
[45 85]
[46 84]
[51 81]
[52 80]
[58 74]
[59 73]
[61 71]
[62 70]
[63 69]
[64 68]
[136 145]
[137 144]
[138 143]
[146 167]
[147 166]
[148 165]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
