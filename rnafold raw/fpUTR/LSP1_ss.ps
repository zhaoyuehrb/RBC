%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCAGGCCAGGUCGCCGCCUGAGCAGAGGCUGCAGCCUGGGCAGUCCCGGGCUUCUGAGGAGGAACUCUAGCAGACAGGGCCUGGAUACCUCUUGAGAUGCAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[176.20002747 280.13079834]
[172.01431274 263.98849487]
[178.28437805 248.35783386]
[170.10874939 235.78170776]
[161.93312073 223.20556641]
[153.75749207 210.62944031]
[145.58186340 198.05329895]
[137.40625000 185.47717285]
[129.23062134 172.90104675]
[114.65210724 170.07212830]
[106.18170929 157.43460083]
[109.24777985 142.16250610]
[101.07215118 129.58638000]
[92.89652252 117.01023865]
[79.18748474 110.92236328]
[64.37555695 113.29022217]
[51.96980667 123.10897827]
[38.18071747 117.47778320]
[23.36879158 119.84564972]
[8.55686283 122.21351624]
[-6.25506544 124.58138275]
[-15.32201385 137.52610779]
[-30.90089798 140.18579102]
[-43.74904251 130.98249817]
[-46.24386978 115.37635803]
[-36.90524292 102.62623596]
[-21.27360725 100.29654694]
[-8.62293053 109.76945496]
[6.18899775 107.40158844]
[21.00092697 105.03372192]
[35.81285477 102.66585541]
[47.15915680 93.01647186]
[62.00769424 98.47829437]
[76.81962585 96.11043549]
[82.90750122 82.40139771]
[74.73188019 69.82526398]
[66.55625153 57.24913025]
[58.38062286 44.67299652]
[50.20499420 32.09686279]
[42.02936554 19.52073097]
[33.85373688 6.94459915]
[25.67811012 -5.63153362]
[10.82533073 -12.58329296]
[9.68911552 -28.94303131]
[23.43830490 -37.88125229]
[37.92891312 -30.20308113]
[38.25424194 -13.80716133]
[46.42987061 -1.23102844]
[54.60549927 11.34510422]
[62.78112793 23.92123604]
[70.95675659 36.49736786]
[79.13238525 49.07350159]
[87.30800629 61.64963531]
[95.48363495 74.22576904]
[102.98052216 74.00963593]
[110.10302734 60.80849838]
[117.97428894 73.57736206]
[125.47117615 73.36122894]
[132.90869141 60.33496857]
[140.34620667 47.30871201]
[135.94120789 32.13071442]
[143.63197327 18.32391357]
[158.85569763 14.07964134]
[172.58041382 21.91594887]
[176.66349792 37.18369293]
[168.68252563 50.82479095]
[153.37246704 54.74622345]
[145.93495178 67.77248383]
[138.49743652 80.79874420]
[136.70744324 91.93841553]
[132.12951660 100.97351837]
[125.68994904 107.29739380]
[118.42267609 110.62757874]
[111.36785889 111.01683044]
[105.47265625 108.83461761]
[113.64828491 121.41074371]
[121.82391357 133.98687744]
[137.02601624 137.38299561]
[145.13812256 150.25344849]
[141.80674744 164.72541809]
[149.98237610 177.30154419]
[158.15800476 189.87768555]
[166.33363342 202.45381165]
[174.50926208 215.02993774]
[182.68489075 227.60607910]
[190.86051941 240.18220520]
[204.72691345 239.88423157]
[216.81503296 246.45980835]
[223.98457336 258.07778931]
[224.43429565 271.61364746]
[218.15338135 283.48962402]
[225.96318054 296.29614258]
[233.77299500 309.10266113]
[241.58280945 321.90914917]
[249.39262390 334.71566772]
[264.86947632 335.83230591]
[276.71246338 345.85842896]
[280.36767578 360.93884277]
[274.42968750 375.27481079]
[261.18170166 383.35385132]
[245.71788025 382.06939697]
[233.98435974 371.91537476]
[230.49293518 356.79617310]
[236.58612061 342.52548218]
[228.77630615 329.71896362]
[220.96649170 316.91247559]
[213.15667725 304.10595703]
[205.34686279 291.29943848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[8 81]
[9 80]
[12 77]
[13 76]
[14 75]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[21 28]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[58 69]
[59 68]
[60 67]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
