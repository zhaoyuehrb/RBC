%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGGGUGGGGCGGGGCCCAACUGUCCCCAGCUCCUUCAGCCCUUUCUGUCCCUCCCAGUGAGGCCAGCUGCGGUGAAGAGGGUGCUCUCUUGCCUGGAGUUCCCUCUGCUACGGCUGCCCCCUCCCAGCCCUGGCCCACUAAGCCAGACCCAGCUGUCGCCAUUCCCACUUCUGGUCCUGCCACCUCCUGAGCUGCCUUCCCGCCUGGUCUGGGUAGAGUC\
) } def
/len { sequence length } bind def

/coor [
[176.55241394 345.60174561]
[177.77688599 337.51995850]
[181.32646179 330.11947632]
[186.90838623 324.05618286]
[181.16813660 310.19799805]
[175.42788696 296.33981323]
[169.68763733 282.48159790]
[157.66877747 273.68408203]
[159.53602600 257.97344971]
[153.79577637 244.11524963]
[147.95848083 230.29765320]
[142.02444458 216.52133179]
[136.09039307 202.74499512]
[130.15635681 188.96867371]
[124.22231293 175.19235229]
[118.28827667 161.41601562]
[112.35423279 147.63969421]
[106.42018890 133.86337280]
[100.48615265 120.08704376]
[93.35648346 117.75941467]
[91.95937347 132.69421387]
[90.56226349 147.62899780]
[93.65004730 162.30775452]
[86.58325195 175.53878784]
[72.66635895 181.13522339]
[58.40697479 176.48011780]
[50.47286987 163.75024414]
[52.57406998 148.89813232]
[63.72848892 138.86856079]
[71.41281891 125.98635864]
[79.09715271 113.10415649]
[71.96748352 110.77652740]
[59.04779434 118.39765930]
[46.12810516 126.01879120]
[40.74475861 141.13166809]
[25.52635765 146.20904541]
[12.14715481 137.35600281]
[10.87053108 121.36382294]
[22.67580223 110.50034332]
[38.50697327 113.09909821]
[51.42666245 105.47796631]
[64.34635162 97.85684204]
[59.99208450 83.50273132]
[45.01568222 84.34378815]
[30.03927803 85.18484497]
[15.06287670 86.02590179]
[1.71824849 94.52481079]
[-11.42283535 87.51330566]
[-26.39923668 88.35436249]
[-41.37564087 89.19541931]
[-50.59426880 101.82676697]
[-65.78773499 105.52711487]
[-79.78215027 98.54927063]
[-85.96977997 84.18795776]
[-81.42901611 69.22415161]
[-68.30386353 60.72330475]
[-52.79162216 62.69925690]
[-42.21669769 74.21901703]
[-27.24029350 73.37796021]
[-12.26389217 72.53690338]
[0.00952395 64.09815216]
[14.22181988 71.04949951]
[29.19822311 70.20844269]
[44.17462540 69.36738586]
[59.15102768 68.52632904]
[79.40822601 77.38241577]
[94.87442017 91.87496948]
[95.08478546 76.87644196]
[95.29515076 61.87791824]
[95.50552368 46.87939072]
[95.71588898 31.88086700]
[95.92625427 16.88234329]
[92.91975403 8.26710033]
[96.24622345 1.67533576]
[96.66691589 -13.31876373]
[97.08760834 -28.31286240]
[78.35263062 -22.73476028]
[55.66512680 -31.33362389]
[38.02871323 -55.32144165]
[30.77292824 -68.44979095]
[23.51714516 -81.57814789]
[16.26136208 -94.70649719]
[9.00557899 -107.83484650]
[1.74979556 -120.96319580]
[-11.69747448 -129.29875183]
[-11.08203030 -144.18063354]
[-18.33781433 -157.30899048]
[-25.59359741 -170.43734741]
[-32.84938049 -183.56568909]
[-39.73278046 -189.55570984]
[-40.11339188 -196.92942810]
[-55.30800629 -201.27676392]
[-62.90504074 -215.13534546]
[-58.39731216 -230.28315735]
[-44.45917511 -237.73324585]
[-29.35987663 -233.06561279]
[-22.05756569 -219.04948425]
[-26.88457298 -204.00038147]
[-19.72102928 -190.82147217]
[-12.46524525 -177.69313049]
[-5.20946217 -164.56477356]
[2.04632115 -151.43641663]
[14.97460938 -144.03990173]
[14.87814713 -128.21897888]
[22.13393021 -115.09062958]
[29.38971329 -101.96228027]
[36.64549637 -88.83393097]
[43.90127945 -75.70557404]
[51.15706253 -62.57722473]
[58.62591934 -63.25999832]
[52.71138000 -77.04470825]
[63.99384308 -86.92933655]
[76.88106537 -79.25343323]
[73.56363678 -64.62553406]
[81.03249359 -65.30831146]
[85.78762817 -79.53464508]
[90.54276276 -93.76098633]
[95.29789734 -107.98731995]
[100.05303955 -122.21366119]
[90.92901611 -134.76483154]
[90.95859528 -150.28187561]
[100.13039398 -162.79817200]
[114.91766357 -167.50096130]
[129.63441467 -162.58190918]
[138.62173462 -149.93249512]
[138.42382812 -134.41668701]
[129.11679077 -122.00061035]
[114.27937317 -117.45851898]
[109.52423859 -103.23218536]
[104.76910400 -89.00584412]
[100.01396179 -74.77951050]
[95.25882721 -60.55317307]
[107.90341949 -52.48382187]
[118.80332184 -62.78877640]
[129.70323181 -73.09372711]
[140.60313416 -83.39868164]
[151.50303650 -93.70363617]
[150.39701843 -109.30206299]
[159.61804199 -121.93166351]
[174.81221008 -125.62913513]
[188.80529785 -118.64863586]
[194.99021912 -104.28615570]
[190.44662476 -89.32321167]
[177.31985474 -80.82485199]
[161.80798340 -82.80373383]
[150.90808105 -72.49877930]
[140.00817871 -62.19382477]
[129.10827637 -51.88887024]
[118.20837402 -41.58391953]
[112.08171082 -27.89216995]
[111.66101074 -12.89806938]
[111.24031830 2.09602952]
[110.92478180 17.09271049]
[110.71441650 32.09123611]
[110.50404358 47.08975983]
[110.29367828 62.08828354]
[110.08331299 77.08680725]
[109.87294006 92.08533478]
[112.96443176 77.40736389]
[120.54309082 64.46272278]
[131.82952881 54.58262634]
[145.66305542 48.78316498]
[160.62100220 47.66075516]
[175.16508484 51.33082199]
[187.79960632 59.41593933]
[197.22518921 71.08462524]
[202.47253418 85.13686371]
[203.00196838 100.12751770]
[198.75907898 114.51493835]
[190.18017578 126.81951141]
[178.14753723 135.77581787]
[163.89860535 140.46281433]
[148.89874268 140.39845276]
[134.69055176 135.58938599]
[122.73519897 126.53014374]
[114.26247406 114.15299988]
[120.19651794 127.92932892]
[126.13055420 141.70565796]
[132.06460571 155.48197937]
[137.99864197 169.25830078]
[143.93267822 183.03463745]
[149.86672974 196.81095886]
[155.80076599 210.58728027]
[161.73480225 224.36361694]
[167.99794006 230.99946594]
[167.65396118 238.37500000]
[173.39421082 252.23318481]
[185.82363892 262.02194214]
[183.54582214 276.74136353]
[189.28607178 290.59954834]
[195.02633667 304.45773315]
[200.76658630 318.31594849]
[222.18353271 325.18313599]
[231.36347961 345.41143799]
[222.65013123 365.54348755]
[229.53486633 378.87014771]
[236.41960144 392.19683838]
[243.30432129 405.52352905]
[250.18905640 418.85021973]
[257.07379150 432.17691040]
[273.83911133 437.18698120]
[281.63607788 452.47332764]
[276.07217407 468.34860229]
[283.14312744 481.57742310]
[297.34747314 489.77307129]
[297.08139038 506.17007446]
[282.61865234 513.90057373]
[268.83721924 505.01211548]
[269.91430664 488.64837646]
[262.84335327 475.41955566]
[250.11611938 473.44326782]
[240.70849609 464.36395264]
[238.20814514 451.33282471]
[243.74710083 439.06161499]
[236.86236572 425.73495483]
[229.97763062 412.40826416]
[223.09291077 399.08157349]
[216.20817566 385.75488281]
[209.32345581 372.42819214]
[201.36604309 372.90631104]
[193.58407593 371.02789307]
[186.66294861 366.93807983]
[181.21820068 360.97769165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[9 187]
[10 186]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[32 42]
[33 41]
[34 40]
[43 65]
[44 64]
[45 63]
[46 62]
[48 60]
[49 59]
[50 58]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[74 152]
[75 151]
[76 150]
[79 109]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[86 102]
[87 101]
[88 100]
[89 99]
[91 98]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
[195 219]
[196 218]
[197 217]
[198 216]
[199 215]
[200 214]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
