%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAGGGCCGGAGUGGGGCUGAGGCUUCGGUGCAGAGCUGGAGAGCCGCGGCUGGGACCGGAGUGGGGAGCGCGGCGUGGAGGUGCCACCCGGCGCGGGUGGCGGAGAGAUCAGAAGCCUCUUCCCCAAGCCGAGCCAACCUCAGCGGGGACCCGGGCUCAGGGACGCGGCGGCGGCGGCGGCGACUGCAGUGGCUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-35.89492416 537.43170166]
[-42.19326019 551.04534912]
[-48.49159622 564.65899658]
[-41.09777451 578.17333984]
[-43.05647659 593.27355957]
[-53.40871811 604.19580078]
[-68.03230286 606.89550781]
[-74.33064270 620.50915527]
[-80.62898254 634.12280273]
[-86.92731476 647.73645020]
[-80.11266327 661.81103516]
[-83.98942566 676.96044922]
[-96.72711182 686.03155518]
[-112.31137848 684.74133301]
[-123.38380432 673.69885254]
[-124.71633148 658.11816406]
[-115.67978668 645.35595703]
[-100.54094696 641.43811035]
[-94.24260712 627.82446289]
[-87.94427490 614.21081543]
[-81.64593506 600.59716797]
[-89.05540466 587.70385742]
[-87.43279266 572.74285889]
[-77.19200897 561.47436523]
[-62.10522842 558.36065674]
[-55.80689240 544.74700928]
[-49.50855255 531.13336182]
[-44.06447220 517.15618896]
[-39.49549866 502.86895752]
[-34.92652893 488.58175659]
[-38.41945648 474.10250854]
[-26.84631729 463.31488037]
[-22.27734375 449.02764893]
[-17.70837212 434.74044800]
[-13.13939953 420.45321655]
[-8.57042694 406.16601562]
[-13.21955013 389.24688721]
[0.50248158 376.97177124]
[4.84980917 362.61557007]
[9.19713688 348.25936890]
[13.54446507 333.90313721]
[6.10499525 325.24340820]
[3.74811482 313.95028687]
[7.17326069 302.80853271]
[15.63934040 294.62286377]
[27.12154770 291.51202393]
[31.91106987 277.29724121]
[36.70059204 263.08242798]
[41.49011612 248.86763000]
[46.27964020 234.65283203]
[43.01119995 220.12126160]
[54.74989319 209.51402283]
[59.53941727 195.29922485]
[64.32894135 181.08442688]
[69.11846161 166.86962891]
[73.79785156 152.61819458]
[66.76726532 139.53742981]
[71.19732666 124.98307037]
[84.96531677 117.69744110]
[89.53428650 103.41023254]
[90.80950165 88.46453094]
[88.72701263 73.60979462]
[76.39232635 64.09700775]
[74.49199677 49.00252151]
[83.63700104 37.30190659]
[81.55451202 22.44716835]
[79.47203064 7.59242964]
[77.38954163 -7.26230860]
[75.30705261 -22.11704636]
[73.22456360 -36.97178650]
[71.14207458 -51.82652283]
[66.84907532 -59.89670563]
[69.14414215 -66.92706299]
[59.76187897 -79.66611481]
[65.86825562 -93.25145721]
[64.01589966 -108.13664246]
[62.16353989 -123.02182770]
[47.24872971 -130.99310303]
[40.09293747 -146.13227844]
[43.33604050 -162.39099121]
[55.50628662 -173.40309143]
[53.42379761 -188.25782776]
[35.84810638 -199.79086304]
[32.53300476 -220.25227356]
[45.20409012 -236.28404236]
[42.20661926 -250.98149109]
[39.20915222 -265.67895508]
[36.21168137 -280.37640381]
[33.21421051 -295.07385254]
[30.21674347 -309.77130127]
[27.21927261 -324.46878052]
[24.22180367 -339.16622925]
[21.22433472 -353.86367798]
[12.13479328 -368.17507935]
[23.37067604 -380.87121582]
[38.68102264 -373.58905029]
[35.92179108 -356.86114502]
[38.91925812 -342.16369629]
[41.91672897 -327.46624756]
[44.91419601 -312.76876831]
[47.91166687 -298.07131958]
[50.90913773 -283.37387085]
[53.90660477 -268.67642212]
[56.90407562 -253.97895813]
[59.90154266 -239.28150940]
[68.92743683 -236.76950073]
[76.46261597 -231.10498047]
[81.44449615 -223.03392029]
[83.15140533 -213.64511108]
[81.30683899 -204.22332764]
[76.12326050 -196.07359314]
[68.27853394 -190.34031677]
[70.36102295 -175.48558044]
[82.68097687 -170.33236694]
[90.91054535 -159.67805481]
[92.81448364 -146.24147034]
[87.78932953 -133.51885986]
[77.04872894 -124.87418365]
[78.90108490 -109.98899841]
[80.75344086 -95.10381317]
[90.00321960 -83.42944336]
[84.02933502 -68.77941895]
[85.99681091 -53.90901184]
[88.07929993 -39.05427170]
[90.16178894 -24.19953537]
[92.24427795 -9.34479618]
[94.32676697 5.50994158]
[96.40925598 20.36467934]
[98.49174500 35.21941757]
[110.50160980 43.95433044]
[112.82515717 58.98947906]
[103.58174896 71.52730560]
[105.66423798 86.38204956]
[117.67551422 95.36698914]
[132.51370239 93.16961670]
[147.35188293 90.97225189]
[162.19006348 88.77487946]
[177.02822876 86.57751465]
[188.11961365 69.83168030]
[207.64768982 66.67990875]
[222.96420288 78.70942688]
[237.68441772 75.82577515]
[252.40463257 72.94211578]
[267.12484741 70.05846405]
[281.50616455 61.07993698]
[294.11492920 72.41372681]
[286.71453857 87.66725922]
[270.00848389 84.77867126]
[255.28828430 87.66233063]
[240.56806946 90.54598236]
[225.84785461 93.42963409]
[222.62225342 103.18629456]
[215.58033752 110.78071594]
[205.94548035 114.79486847]
[195.43299866 114.44139862]
[185.94488525 109.71712494]
[179.22560120 101.41568756]
[164.38742065 103.61306000]
[149.54924011 105.81043243]
[134.71105957 108.00779724]
[119.87288666 110.20516968]
[110.87225342 111.17827606]
[103.82150269 107.97920227]
[99.25252533 122.26641846]
[106.23825073 136.18896484]
[101.40113831 150.61314392]
[88.08506012 157.18716431]
[88.45140076 166.32081604]
[83.33325958 171.65914917]
[78.54373932 185.87394714]
[73.75421143 200.08874512]
[68.96469116 214.30354309]
[71.89054871 229.85185242]
[60.49443817 239.44236755]
[55.70491409 253.65716553]
[50.91539001 267.87194824]
[46.12586594 282.08676147]
[41.33634567 296.30154419]
[50.39657211 312.93399048]
[44.52934265 330.60626221]
[27.90067482 338.25045776]
[23.55334663 352.60668945]
[19.20601845 366.96289062]
[14.85869122 381.31909180]
[20.24606323 393.04287720]
[16.32499886 404.91351318]
[5.71678734 410.73498535]
[1.14781499 425.02218628]
[-3.42115736 439.30941772]
[-7.99012995 453.59661865]
[-12.55910206 467.88385010]
[-9.39297867 483.38500977]
[-20.63931274 493.15072632]
[-25.20828629 507.43795776]
[-29.77725792 521.72515869]
[-16.90480614 514.02453613]
[-1.95425940 515.24151611]
[9.50324821 524.92272949]
[13.19822025 539.46051025]
[7.75377178 553.43756104]
[-4.80129147 561.64550781]
[-19.78848267 561.02575684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[7 21]
[8 20]
[9 19]
[10 18]
[28 195]
[29 194]
[30 193]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[38 184]
[39 183]
[40 182]
[41 181]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[52 172]
[53 171]
[54 170]
[55 169]
[56 167]
[59 164]
[60 163]
[61 133]
[62 132]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[73 122]
[75 120]
[76 119]
[77 118]
[81 113]
[82 112]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[134 161]
[135 160]
[136 159]
[137 158]
[138 157]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
