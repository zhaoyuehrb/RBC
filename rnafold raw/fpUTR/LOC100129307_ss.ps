%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCACCCUCACUGGGCUCCUAAGCACUCCUCCACACCCUGGCUCUGUCACCAGCCCCAUGGUGAUGUCAUAAACUCCCAGAUGCCCAGUGUGCACCCGGCCACAGAGAAGUGGGUGACUUAGGAGUAUCCUCUCCACUUCUGACCCUUAGUUUCGUCUGUGCACAACUCGCUCAAA\
) } def
/len { sequence length } bind def

/coor [
[59.87816238 117.21238708]
[57.37855911 109.45732117]
[56.36351013 101.37284851]
[41.51277924 99.26195526]
[26.66205215 97.15105438]
[11.81132507 95.04016113]
[7.78264523 96.83574677]
[3.79586530 97.20016479]
[0.30095413 96.32572937]
[-2.36254859 94.53252411]
[-3.99795127 92.22058105]
[-18.66278648 89.06738281]
[-33.32762146 85.91419220]
[-47.99245453 82.76099396]
[-62.65728760 79.60780334]
[-77.32212067 76.45460510]
[-91.98695374 73.30141449]
[-106.67904663 70.27775574]
[-121.39724731 67.38386536]
[-127.32902527 81.21834564]
[-136.00433350 93.51232147]
[-147.04197693 103.72982025]
[-159.95783997 111.42600250]
[-174.18612671 116.26657104]
[-189.10411072 118.04222870]
[-204.05943298 116.67778015]
[-218.39862061 112.23528290]
[-231.49560547 104.91125488]
[-242.77911377 95.02794647]
[-251.75750732 83.01920319]
[-258.04031372 69.41138458]
[-261.35507202 54.80032349]
[-261.55932617 39.82521057]
[-276.27752686 36.93132019]
[-291.02069092 34.16742325]
[-305.78765869 31.53373718]
[-320.55462646 28.90005112]
[-335.32162476 26.26636505]
[-350.26593018 31.46044540]
[-361.43695068 21.60869980]
[-376.20394897 18.97501373]
[-390.97091675 16.34132767]
[-403.84396362 25.11189270]
[-418.78225708 22.23059845]
[-427.06433105 9.90408134]
[-441.83129883 7.27039480]
[-456.59826660 4.63670826]
[-471.82693481 10.72109413]
[-484.54135132 0.36368296]
[-481.66198730 -15.78070927]
[-466.15093994 -21.10411453]
[-453.96459961 -10.13027191]
[-439.19760132 -7.49658537]
[-424.43063354 -4.86289883]
[-412.39788818 -13.56627846]
[-397.38455200 -11.10570717]
[-388.33724976 1.57434678]
[-373.57025146 4.20803308]
[-358.80328369 6.84171963]
[-344.91522217 1.45925868]
[-332.68792725 11.49938393]
[-317.92095947 14.13307095]
[-303.15396118 16.76675797]
[-288.38699341 19.40044403]
[-281.22836304 17.47362709]
[-273.38363647 22.21311951]
[-258.66543579 25.10701180]
[-252.80676270 11.32398415]
[-244.20693970 -0.94443333]
[-233.23988342 -11.16058540]
[-220.38330078 -18.87613678]
[-206.19790649 -23.75175285]
[-191.30296326 -25.57201195]
[-176.34925842 -24.25494003]
[-161.99063110 -19.85568047]
[-148.85542297 -12.56420708]
[-137.51896667 -2.69710493]
[-128.47836304 9.31616116]
[-122.13075256 22.95194626]
[-118.75578308 37.61524582]
[-118.50335693 52.66566467]
[-103.78515625 55.55955505]
[-96.59364319 53.75937653]
[-88.83376312 58.63658142]
[-74.16893005 61.78977585]
[-59.50409317 64.94297028]
[-44.83926010 68.09616089]
[-30.17442513 71.24935913]
[-15.50959110 74.40254974]
[-0.84475714 77.55574799]
[13.92222309 80.18943024]
[28.77295113 82.30033112]
[43.62367630 84.41122437]
[58.47440720 86.52212524]
[70.67413330 67.65773773]
[90.63907623 57.35728455]
[113.08270264 58.34821701]
[132.06214905 70.36815643]
[142.55184937 90.23432159]
[153.09278870 78.76583099]
[168.29492188 78.17414093]
[179.16340637 88.29399109]
[194.14237976 87.50014496]
[209.12136841 86.70629120]
[224.10034180 85.91243744]
[239.07931519 85.11858368]
[254.05830383 84.32473755]
[269.02969360 83.39872742]
[283.99230957 82.34064484]
[298.95495605 81.28256226]
[313.91760254 80.22447968]
[330.86508179 67.14170837]
[349.06314087 76.84397125]
[363.94879150 74.99549103]
[378.83447266 73.14701843]
[393.72012329 71.29854584]
[406.46163940 61.91959763]
[420.04537964 68.02951813]
[426.31784058 52.74633408]
[439.36166382 42.76191711]
[455.56631470 40.72091675]
[470.50598145 47.08552551]
[480.14819336 60.03512573]
[494.99893188 57.92422867]
[509.84967041 55.81333160]
[524.70037842 53.70243454]
[533.99023438 40.91673279]
[549.61285400 38.52734375]
[562.29962158 47.95185471]
[564.52368164 63.59886551]
[554.96557617 76.18528748]
[539.29595947 78.24381256]
[526.81127930 68.55316162]
[511.96054077 70.66406250]
[497.10983276 72.77495575]
[482.25909424 74.88585663]
[478.00143433 87.87928772]
[468.51062012 97.81388855]
[455.60131836 102.70740509]
[441.77786255 101.54946136]
[429.74826050 94.50959015]
[421.89385986 82.91519165]
[410.21707153 92.16191864]
[395.56860352 86.18421173]
[380.68295288 88.03268433]
[365.79727173 89.88116455]
[350.91162109 91.72963715]
[346.64047241 99.57335663]
[339.11492920 104.63447571]
[329.96560669 105.66304016]
[321.24688721 102.30005646]
[314.97567749 95.18711090]
[300.01303101 96.24520111]
[285.05041504 97.30328369]
[270.08776855 98.36136627]
[263.61782837 101.98055267]
[254.85215759 99.30371094]
[239.87316895 100.09756470]
[224.89419556 100.89141846]
[209.91522217 101.68527222]
[194.93623352 102.47911835]
[179.95726013 103.27297211]
[170.21929932 114.48492432]
[155.03979492 115.50338745]
[143.34570312 105.21330261]
[141.62208557 113.17685699]
[138.44874573 120.68144226]
[133.93618774 127.46567535]
[128.24159241 133.29325867]
[121.56331635 137.96118164]
[114.13396454 141.30688477]
[106.21231079 143.21383667]
[98.07427979 143.61558533]
[90.00331879 142.49816895]
[82.28055573 139.90049744]
[75.17498016 135.91304016]
[68.93408203 130.67469788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 94]
[4 93]
[5 92]
[6 91]
[11 90]
[12 89]
[13 88]
[14 87]
[15 86]
[16 85]
[17 84]
[18 82]
[19 81]
[33 67]
[34 66]
[35 64]
[36 63]
[37 62]
[38 61]
[40 59]
[41 58]
[42 57]
[45 54]
[46 53]
[47 52]
[99 165]
[102 162]
[103 161]
[104 160]
[105 159]
[106 158]
[107 157]
[108 155]
[109 154]
[110 153]
[111 152]
[113 147]
[114 146]
[115 145]
[116 144]
[118 142]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
