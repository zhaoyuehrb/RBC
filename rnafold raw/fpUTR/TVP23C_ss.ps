%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCCCCGCCCCCGCUCGCCCCGCCCCUGGAUUUGCUCCCUCAAAGCGGAGGUGAGGCCGGACUGAGGCUCUUACAGUGGUCCCUGCUGGCCCUUGGUGACGGGUCGCGUCAGUUCCGACCCGGACCCGUACGCUGCUGCGCUGACGUGGCUCCUGGAAGCAGGGCUGGCGUAGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-422.54791260 287.40753174]
[-437.96258545 291.51098633]
[-453.73428345 289.39489746]
[-467.45556641 281.41204834]
[-477.04351807 268.80847168]
[-491.48727417 272.85540771]
[-505.93103027 276.90237427]
[-517.13195801 288.07598877]
[-531.47473145 284.05938721]
[-545.91851807 288.10632324]
[-553.69946289 301.60055542]
[-568.40515137 305.49899292]
[-581.22192383 297.99786377]
[-595.66564941 302.04483032]
[-606.86657715 313.21844482]
[-621.20941162 309.20184326]
[-635.65313721 313.24880981]
[-650.06182861 317.41891479]
[-664.43438721 321.71188354]
[-678.80694580 326.00482178]
[-693.17950439 330.29779053]
[-707.55206299 334.59075928]
[-721.88745117 339.00625610]
[-736.18463135 343.54397583]
[-750.48181152 348.08169556]
[-764.77899170 352.61941528]
[-768.15435791 368.79421997]
[-779.15795898 380.99456787]
[-794.72094727 385.95904541]
[-810.57360840 382.42492676]
[-822.41650391 371.44750977]
[-836.63409424 376.22866821]
[-841.14904785 391.07437134]
[-853.54809570 400.40411377]
[-869.06347656 400.63040161]
[-881.72930908 391.66622925]
[-886.67529297 376.95849609]
[-881.99957275 362.16265869]
[-869.50006104 352.96798706]
[-853.98309326 352.91000366]
[-841.41528320 362.01104736]
[-827.19763184 357.22988892]
[-825.37951660 343.68148804]
[-817.86096191 332.18579102]
[-806.06384277 325.02120972]
[-792.26458740 323.63699341]
[-779.15490723 328.36053467]
[-769.31671143 338.32223511]
[-755.01953125 333.78451538]
[-740.72235107 329.24679565]
[-726.42517090 324.70907593]
[-720.98785400 319.67678833]
[-711.84503174 320.21820068]
[-697.47247314 315.92523193]
[-683.09991455 311.63226318]
[-668.72735596 307.33929443]
[-654.35479736 303.04635620]
[-648.83239746 298.10760498]
[-639.70007324 298.80505371]
[-625.25634766 294.75808716]
[-615.08850098 283.87393188]
[-599.71258545 287.60107422]
[-585.26885986 283.55410767]
[-578.21545410 270.48565674]
[-563.62506104 266.17568970]
[-549.96545410 273.66256714]
[-535.52172852 269.61563110]
[-525.35388184 258.73147583]
[-509.97796631 262.45861816]
[-495.53421021 258.41165161]
[-481.09045410 254.36470032]
[-479.94610596 240.36572266]
[-474.07604980 227.57261658]
[-464.16796875 217.53300476]
[-451.39938354 211.46911621]
[-437.29769897 210.12892151]
[-423.55755615 213.69401550]
[-411.83718872 221.75523376]
[-403.55819702 233.35954285]
[-389.04742432 229.55978394]
[-374.53668213 225.76002502]
[-360.02593994 221.96025085]
[-345.51519775 218.16049194]
[-331.00445557 214.36073303]
[-316.49371338 210.56097412]
[-304.71240234 197.56820679]
[-286.99667358 202.55102539]
[-272.55291748 198.50407410]
[-258.10916138 194.45712280]
[-243.66540527 190.41017151]
[-229.22164917 186.36322021]
[-214.77787781 182.31626892]
[-200.33412170 178.26931763]
[-185.89036560 174.22236633]
[-171.44660950 170.17541504]
[-157.00285339 166.12846375]
[-151.39691162 161.28474426]
[-142.27787781 162.13796997]
[-131.92572021 151.42900085]
[-116.61567688 155.41810608]
[-109.34017181 142.47195435]
[-94.67834473 138.41174316]
[-81.14855957 146.13073730]
[-66.67078400 142.20724487]
[-52.22702026 138.16029358]
[-37.81833649 133.99018860]
[-23.44577599 129.69721985]
[-9.07321644 125.40425873]
[5.29934406 121.11129761]
[19.67190361 116.81833649]
[34.04446411 112.52537537]
[48.41702652 108.23241425]
[62.78958511 103.93945312]
[77.16214752 99.64649963]
[91.53470612 95.35353851]
[83.79057312 75.37220001]
[95.30329132 50.91392899]
[108.11958313 43.12017059]
[120.93587494 35.32641220]
[133.75216675 27.53265190]
[144.14384460 14.13678265]
[159.89289856 20.41400719]
[158.22076416 37.28529358]
[141.54592896 40.34894180]
[128.72962952 48.14270020]
[115.91334534 55.93646240]
[103.09705353 63.73022079]
[105.05879974 70.96910858]
[119.53658295 67.04560852]
[134.01441956 63.12233353]
[137.93746948 77.60023499]
[123.46008301 81.52339172]
[108.98229980 85.44689178]
[110.94405365 92.68578339]
[125.94186401 92.94187927]
[140.93968201 93.19797516]
[155.00936890 84.77325439]
[169.20674133 92.98097229]
[168.92675781 109.37773132]
[154.45744324 117.09594727]
[140.68357849 108.19578552]
[125.68576813 107.93968964]
[110.68795776 107.68359375]
[95.82766724 109.72609711]
[81.45510864 114.01905823]
[67.08254242 118.31201935]
[52.70998383 122.60498047]
[38.33742523 126.89794159]
[23.96486473 131.19090271]
[9.59230423 135.48385620]
[-4.78025579 139.77682495]
[-19.15281677 144.06977844]
[-33.52537537 148.36274719]
[-40.87353134 153.82986450]
[-48.18006897 152.60404968]
[-62.62382889 156.65100098]
[-70.06425476 161.99186707]
[-77.34880066 160.64149475]
[-85.35901642 174.00091553]
[-100.12910461 177.64770508]
[-112.81591034 169.92884827]
[-124.20597076 180.90960693]
[-138.47811890 176.64872742]
[-152.95590210 180.57221985]
[-167.39965820 184.61917114]
[-181.84341431 188.66612244]
[-196.28717041 192.71307373]
[-210.73092651 196.76002502]
[-225.17469788 200.80697632]
[-239.61845398 204.85392761]
[-254.06221008 208.90087891]
[-268.50598145 212.94783020]
[-282.94973755 216.99478149]
[-289.95111084 227.84588623]
[-302.08267212 230.91033936]
[-312.69393921 225.07171631]
[-327.20468140 228.87147522]
[-341.71542358 232.67124939]
[-356.22616577 236.47100830]
[-370.73693848 240.27076721]
[-385.24768066 244.07052612]
[-399.75842285 247.87030029]
[-401.84115601 263.80175781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 71]
[6 70]
[7 69]
[9 67]
[10 66]
[13 63]
[14 62]
[16 60]
[17 59]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 51]
[24 50]
[25 49]
[26 48]
[31 42]
[32 41]
[79 182]
[80 181]
[81 180]
[82 179]
[83 178]
[84 177]
[85 176]
[87 173]
[88 172]
[89 171]
[90 170]
[91 169]
[92 168]
[93 167]
[94 166]
[95 165]
[96 164]
[98 163]
[100 161]
[103 158]
[104 156]
[105 155]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[113 146]
[114 145]
[115 144]
[117 127]
[118 126]
[119 125]
[120 124]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
