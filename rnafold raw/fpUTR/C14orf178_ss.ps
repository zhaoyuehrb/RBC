%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCAAGAUGCUCACGCGAAAAACCCACUCUUCAGUGUCUGAGACCACUCCGCAGCUUUCGGCCUCGGUGAGCGGGUGAACUAAACCCGGGAAACCGCUGAAAGACCCCAGCUUCGACUAGGCCUAGUCGUAGCGGCGGCCAGCGGGAGGGCGUAGCCGUAGUCUUGGCCCACGUCAUUCUGUGCCCCGGGUCAGGUCACCGCCCGGAGGGU\
) } def
/len { sequence length } bind def

/coor [
[-127.32361603 276.08306885]
[-132.09669495 290.30340576]
[-134.20707703 305.15420532]
[-146.20748901 314.15365601]
[-161.05497742 312.02005005]
[-170.03564453 300.00558472]
[-167.87881470 285.16143799]
[-155.84965515 276.19940186]
[-145.64892578 265.20190430]
[-135.44819641 254.20440674]
[-141.89701843 250.37522888]
[-156.12149048 255.13595581]
[-170.34594727 259.89669800]
[-184.57041931 264.65740967]
[-198.79489136 269.41815186]
[-213.01934814 274.17886353]
[-220.16210938 279.86886597]
[-227.48770142 278.90341187]
[-241.78053284 283.45483398]
[-256.07333374 288.00622559]
[-257.29013062 297.81909180]
[-261.61474609 306.66140747]
[-268.55001831 313.58306885]
[-277.32015991 317.85101318]
[-286.95736694 319.02676392]
[-296.40866089 317.01123047]
[-304.65097046 312.05242920]
[-316.88891602 320.72610474]
[-329.12689209 329.39974976]
[-341.36483765 338.07339478]
[-347.71505737 353.19314575]
[-364.01602173 354.98489380]
[-373.49871826 341.60540771]
[-366.40817261 326.81838989]
[-350.03851318 325.83544922]
[-337.80053711 317.16177368]
[-325.56256104 308.48812866]
[-313.32461548 299.81448364]
[-313.50354004 299.31924438]
[-313.67346191 298.82086182]
[-328.64761353 299.70120239]
[-343.62173462 300.58151245]
[-358.59588623 301.46182251]
[-373.57003784 302.34213257]
[-388.54418945 303.22244263]
[-401.86648560 311.75631714]
[-415.02590942 304.77926636]
[-423.28042603 317.91860962]
[-437.69409180 323.66543579]
[-452.72457886 319.80993652]
[-462.59228516 307.83462524]
[-463.50296021 292.34429932]
[-455.10638428 279.29528809]
[-440.63122559 273.70516968]
[-425.64346313 277.72351074]
[-415.90621948 289.80514526]
[-403.65496826 281.33422852]
[-389.42449951 288.24829102]
[-374.45034790 287.36798096]
[-359.47619629 286.48767090]
[-344.50207520 285.60736084]
[-329.52792358 284.72705078]
[-314.55377197 283.84674072]
[-302.06970215 265.02355957]
[-279.65792847 260.66461182]
[-260.62475586 273.71340942]
[-246.33193970 269.16201782]
[-232.03910828 264.61059570]
[-217.78009033 259.95440674]
[-203.55561829 255.19367981]
[-189.33114624 250.43295288]
[-175.10668945 245.67222595]
[-160.88221741 240.91148376]
[-146.65774536 236.15075684]
[-121.71752167 226.52371216]
[-104.59889984 237.03324890]
[-92.48958588 228.18087769]
[-80.38027191 219.32850647]
[-68.27095032 210.47613525]
[-56.16163635 201.62376404]
[-52.61778259 195.14013672]
[-43.80895233 192.73187256]
[-31.57099152 184.05821228]
[-29.32931137 169.37794495]
[-17.04183769 160.40728760]
[-1.65901375 162.85810852]
[10.57894897 154.18444824]
[22.81691170 145.51080322]
[35.05487442 136.83714294]
[47.29283524 128.16348267]
[59.53079605 119.48983765]
[71.76876068 110.81617737]
[69.21525574 92.50933075]
[77.96480560 75.25554657]
[95.75739288 65.67691803]
[116.69064331 68.06349945]
[122.88542938 54.40243149]
[129.08021545 40.74136734]
[135.27499390 27.08030510]
[141.46978760 13.41924191]
[147.66456604 -0.24182127]
[147.15344238 -5.43204641]
[148.54389954 -9.85758114]
[151.22676086 -12.92246532]
[154.44462585 -14.35861683]
[155.53846741 -23.42496872]
[161.43397522 -27.87910843]
[168.41981506 -41.15306854]
[175.30802917 -54.47794724]
[182.09826660 -67.85302734]
[183.19209290 -76.91938019]
[189.08760071 -81.37351990]
[196.07344055 -94.64747620]
[203.05929565 -107.92144012]
[202.63937378 -123.73707581]
[215.41372681 -131.39639282]
[222.39956665 -144.67034912]
[229.38540649 -157.94430542]
[236.37124634 -171.21826172]
[243.35708618 -184.49223328]
[250.34292603 -197.76618958]
[249.16078186 -214.12268066]
[262.88482666 -223.09945679]
[277.39694214 -215.46200562]
[277.76831055 -199.06706238]
[263.61688232 -190.78034973]
[256.63104248 -177.50639343]
[249.64520264 -164.23242188]
[242.65936279 -150.95846558]
[235.67352295 -137.68450928]
[228.68768311 -124.41054535]
[229.60728455 -109.54435730]
[216.33325195 -100.93560028]
[209.34741211 -87.66163635]
[202.36157227 -74.38768005]
[195.47334290 -61.06279755]
[188.68312073 -47.68771744]
[188.45817566 -40.30220413]
[181.69377136 -34.16722870]
[174.70793152 -20.89326668]
[167.81970215 -7.56838751]
[161.32562256 5.95296240]
[155.13084412 19.61402512]
[148.93606567 33.27508926]
[142.74127197 46.93615341]
[136.54649353 60.59721756]
[130.35171509 74.25827789]
[137.72421265 87.32144165]
[152.62089539 89.07903290]
[167.51756287 90.83662415]
[182.42672729 92.48483276]
[197.34761047 94.02355194]
[212.26847839 95.56227875]
[227.18934631 97.10100555]
[242.11021423 98.63972473]
[258.73995972 90.72950745]
[272.54455566 101.56620026]
[287.48641968 102.88572693]
[302.42825317 104.20524597]
[317.37011719 105.52477264]
[329.32269287 95.18499756]
[345.07955933 96.40874481]
[355.29235840 108.46999359]
[353.90209961 124.21302032]
[341.73355103 134.29776001]
[326.00610352 132.74111938]
[316.05059814 120.46662140]
[301.10873413 119.14709473]
[286.16690063 117.82757568]
[271.22503662 116.50804901]
[261.75534058 124.03245544]
[249.29757690 123.05689240]
[240.57148743 113.56059265]
[225.65061951 112.02187347]
[210.72975159 110.48314667]
[195.80888367 108.94441986]
[180.88801575 107.40570068]
[173.91362000 109.84584808]
[165.75996399 105.73329926]
[150.86329651 103.97570801]
[135.96662903 102.21810913]
[131.86988831 114.63092041]
[123.77852631 124.44263458]
[112.98942566 130.48133850]
[101.09508514 132.14787292]
[89.75033569 129.46774292]
[80.44241333 123.05414581]
[68.20445251 131.72779846]
[55.96648788 140.40145874]
[43.72852707 149.07510376]
[31.49056435 157.74876404]
[19.25260353 166.42240906]
[7.01464033 175.09606934]
[4.23122883 190.42219543]
[-8.30336475 199.04418945]
[-22.89733696 196.29617310]
[-35.13529968 204.96983337]
[-47.30926514 213.73307800]
[-59.41858292 222.58544922]
[-71.52790070 231.43782043]
[-83.63721466 240.29019165]
[-95.74652863 249.14256287]
[-101.33385468 263.06311035]
[-98.70503998 277.83096313]
[-96.07622528 292.59881592]
[-93.44741058 307.36666870]
[-84.71877289 321.90100098]
[-96.26878357 334.31204224]
[-111.39214325 326.64910889]
[-108.21525574 309.99548340]
[-110.84407043 295.22763062]
[-113.47288513 280.45977783]
[-116.10169983 265.69192505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 74]
[12 73]
[13 72]
[14 71]
[15 70]
[16 69]
[18 68]
[19 67]
[20 66]
[27 38]
[28 37]
[29 36]
[30 35]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[47 56]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[82 197]
[83 196]
[86 193]
[87 192]
[88 191]
[89 190]
[90 189]
[91 188]
[92 187]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[105 141]
[107 140]
[108 139]
[109 137]
[110 136]
[112 135]
[113 134]
[114 133]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[148 181]
[149 180]
[150 179]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[157 170]
[158 169]
[159 168]
[160 167]
[203 213]
[204 212]
[205 211]
[206 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
