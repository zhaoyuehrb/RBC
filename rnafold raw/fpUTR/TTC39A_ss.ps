%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCCAGGCCUGGGGGAGGGAGGAGGCCUUGGAGAAGGAGGAGGGAAAAAGGGGCUGUGGGAUUUAGUGGCUGGGCUGCACCCCCUGGGGGGGCAGCAGAGCCCA\
) } def
/len { sequence length } bind def

/coor [
[85.22756958 109.73178864]
[82.31011963 100.02640533]
[68.71550751 93.68713379]
[55.12088776 87.34786224]
[41.52627182 81.00859070]
[27.93165398 74.66931152]
[14.33703804 68.33003998]
[-5.52108860 71.13128662]
[-16.18423080 55.11159515]
[-30.12444496 49.57350540]
[-44.06465912 44.03541183]
[-58.00487137 38.49731827]
[-71.94508362 32.95922852]
[-79.71133423 45.03132248]
[-89.59084320 55.43909836]
[-101.23539734 63.81806183]
[-114.23502350 69.87519073]
[-128.13240051 73.39917755]
[-142.43894958 74.26779175]
[-156.65202332 72.45211792]
[-170.27256775 68.01754761]
[-182.82263184 61.12137604]
[-193.86213684 52.00725555]
[-203.00430298 40.99658203]
[-209.92926025 28.47716141]
[-214.39515686 14.88953972]
[-216.24662781 0.71151555]
[-215.42024231 -13.55866718]
[-211.94662476 -27.41983032]
[-225.54124451 -33.75910568]
[-239.13586426 -40.09837723]
[-252.73048401 -46.43765259]
[-269.01116943 -44.47012329]
[-278.63769531 -57.74649429]
[-271.70712280 -72.60916901]
[-255.34901428 -73.76870728]
[-246.39120483 -60.03226852]
[-232.79658508 -53.69299698]
[-219.20196533 -47.35372162]
[-205.60736084 -41.01444626]
[-196.28149414 -53.63705063]
[-184.56475830 -64.08644867]
[-170.95211792 -71.91827393]
[-156.01918030 -76.79877472]
[-140.39796448 -78.51907349]
[-124.75007629 -77.00407410]
[-109.73868561 -72.31576538]
[-96.00047302 -64.65066528]
[-84.11858368 -54.33159256]
[-74.59788513 -41.79408264]
[-67.84351349 -27.56798935]
[-64.14365387 -12.25509453]
[-63.65719986 3.49633741]
[-66.40699005 19.01901436]
[-52.46677780 24.55710602]
[-38.52656555 30.09519768]
[-24.58635139 35.63328934]
[-10.64613914 41.17138290]
[-1.48652399 36.22988892]
[9.09336948 37.25116348]
[17.48137665 44.13425446]
[20.67631149 54.73542404]
[34.27092743 61.07469559]
[47.86554718 67.41397095]
[61.46016312 73.75324249]
[75.05477905 80.09252167]
[88.64939880 86.43179321]
[107.00660706 83.75685120]
[117.65841675 98.94506073]
[126.94775391 99.22621918]
[131.91970825 104.85228729]
[145.69294739 110.79347992]
[159.46620178 116.73468018]
[173.23944092 122.67587280]
[187.77716064 117.08192444]
[201.66055298 123.30334473]
[206.90393066 137.19732666]
[220.67718506 143.13851929]
[234.45042419 149.07971191]
[248.22366333 155.02090454]
[261.99691772 160.96211243]
[271.27413940 161.51332092]
[276.08035278 167.28161621]
[289.67498779 173.62089539]
[303.26959229 179.96015930]
[316.86419678 186.29943848]
[333.14489746 184.33190918]
[342.77142334 197.60827637]
[335.84085083 212.47094727]
[319.48275757 213.63049316]
[310.52493286 199.89405823]
[296.93032837 193.55477905]
[283.33569336 187.21551514]
[269.74108887 180.87623596]
[256.05569458 174.73535156]
[242.28247070 168.79415894]
[228.50923157 162.85295105]
[214.73597717 156.91175842]
[200.96273804 150.97056580]
[187.25840759 156.69128418]
[173.20574951 150.86227417]
[167.29823303 136.44911194]
[153.52499390 130.50791931]
[139.75175476 124.56671906]
[125.97851562 118.62552643]
[112.12032318 112.88527679]
[103.05881500 117.42343903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[9 58]
[10 57]
[11 56]
[12 55]
[13 54]
[29 40]
[30 39]
[31 38]
[32 37]
[69 106]
[71 105]
[72 104]
[73 103]
[74 102]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
