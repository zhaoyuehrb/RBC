%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCGCGGCGCCAUUUGCUGCCGCCGAGCGUGGACGCAGGCGGAUCUCUGAAGAGCUGGGUCGCCAGCCUCUCCCGCGCACGUUGCCUGGCCUCCAGCACCUACUUGGUCCCGCGCGCUCCCUCGUGUCGCCCCUCGGAGCAGCAGCCGCCGCGGUCGCCGCUACCCGGAAAGAAGUCAGAGACGCCGCGAGGUCGCCGCCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[404.77474976 492.12368774]
[399.19476318 488.51416016]
[394.97109985 483.31674194]
[392.54208374 477.02026367]
[392.17523193 470.22988892]
[393.93832397 463.60876465]
[383.37167358 452.96237183]
[372.80499268 442.31597900]
[362.23831177 431.66961670]
[351.67166138 421.02322388]
[350.52200317 435.97909546]
[339.22479248 445.84686279]
[324.25015259 444.97500610]
[314.17440796 433.86285400]
[314.76818848 418.87460327]
[325.69137573 408.59436035]
[340.68722534 408.90948486]
[331.12237549 397.35464478]
[321.55755615 385.79983521]
[311.99270630 374.24502563]
[302.42788696 362.69018555]
[292.86303711 351.13537598]
[280.85235596 349.68841553]
[272.78924561 340.13882446]
[273.41357422 327.25473022]
[264.02349854 315.55746460]
[254.63342285 303.86016846]
[245.24334717 292.16287231]
[235.85327148 280.46560669]
[221.85223389 275.38421631]
[219.24696350 259.77899170]
[204.45889282 258.41934204]
[194.76939392 246.69038391]
[196.29577637 231.18852234]
[186.90570068 219.49124146]
[177.51564026 207.79394531]
[168.12556458 196.09666443]
[158.73548889 184.39936829]
[144.73446655 179.31799316]
[142.12918091 163.71276855]
[132.73910522 152.01547241]
[126.09944916 148.76678467]
[123.29739380 140.07106018]
[114.08419800 128.23396301]
[104.87100983 116.39685059]
[106.64527893 131.29154968]
[98.93082428 144.15573120]
[84.95601654 149.60594177]
[70.56909180 145.36137390]
[61.79074478 133.19828796]
[62.29456711 118.20674896]
[71.86972046 106.66047668]
[86.51041412 103.39152527]
[72.28694916 98.62779999]
[58.06348419 93.86407471]
[43.84002304 89.10034943]
[29.58115768 84.44364929]
[15.28769779 79.89425659]
[0.99423850 75.34485626]
[-13.29922104 70.79546356]
[-29.19481659 74.82808685]
[-40.43954849 62.89125443]
[-35.46580124 47.26454926]
[-19.39013863 44.02339172]
[-8.74982452 56.50200272]
[5.54363489 61.05139923]
[19.83709526 65.60079956]
[34.13055420 70.15019226]
[41.45886612 69.18324280]
[48.60374832 74.87688446]
[62.82721329 79.64060974]
[77.05067444 84.40433502]
[91.27413940 89.16806793]
[96.90518951 84.21414948]
[93.95549774 69.50703430]
[108.16728210 74.30631256]
[113.79833221 69.35240173]
[110.88580322 54.63787842]
[107.97326660 39.92335510]
[105.06073761 25.20883179]
[94.79113007 13.17364597]
[99.90993500 -0.81374472]
[96.99739838 -15.52826691]
[81.44234467 -20.68366814]
[71.83715820 -36.10109329]
[74.49566650 -55.86894608]
[69.20092010 -69.90338898]
[63.24286652 -76.82932281]
[63.93381119 -84.18878937]
[58.85062027 -98.30123138]
[53.76743317 -112.41368103]
[42.71129990 -125.26663208]
[52.00130844 -139.44873047]
[68.20089722 -134.44778442]
[67.87987518 -117.49687195]
[72.96306610 -103.38442230]
[78.04625702 -89.27198029]
[83.23537445 -75.19813538]
[88.53011322 -61.16368484]
[103.30655670 -63.74373245]
[103.53202057 -78.74203491]
[103.75748444 -93.74034119]
[93.66198730 -106.20872498]
[97.25628662 -121.84395599]
[111.78314972 -128.65203857]
[126.09880066 -121.41037750]
[129.22151184 -105.67416382]
[118.75579071 -93.51487732]
[118.53032684 -78.51657104]
[118.30486298 -63.51826859]
[127.38874817 -46.23151779]
[123.98973846 -28.77350807]
[111.71192169 -18.44079971]
[114.62445831 -3.72627687]
[124.68573761 7.25642872]
[119.77526093 22.29630089]
[122.68778992 37.01082230]
[125.60032654 51.72534561]
[128.51284790 66.43986511]
[116.70811462 107.18366241]
[125.92131042 119.02076721]
[135.13449097 130.85787964]
[144.43638611 142.62541199]
[153.82646179 154.32269287]
[168.49913025 160.24073792]
[170.43276978 175.00930786]
[179.82284546 186.70658875]
[189.21292114 198.40386963]
[198.60299683 210.10116577]
[207.99307251 221.79844666]
[223.45823669 223.66023254]
[232.81448364 235.65670776]
[230.94424438 250.38891602]
[245.61691284 256.30697632]
[247.55055237 271.07553101]
[256.94064331 282.77279663]
[266.33068848 294.47009277]
[275.72076416 306.16738892]
[285.11083984 317.86465454]
[302.42346191 324.13589478]
[304.41787720 341.57052612]
[313.98269653 353.12536621]
[323.54754639 364.68017578]
[333.11236572 376.23498535]
[342.67721558 387.78982544]
[352.24203491 399.34463501]
[362.31805420 410.45654297]
[372.88470459 421.10293579]
[383.45138550 431.74932861]
[394.01803589 442.39569092]
[404.58471680 453.04208374]
[428.07971191 457.13677979]
[433.38696289 479.64276123]
[444.86959839 489.29418945]
[456.35220337 498.94558716]
[467.83480835 508.59698486]
[479.31741333 518.24841309]
[494.85995483 521.20483398]
[499.62438965 535.31689453]
[511.10699463 544.96826172]
[526.64953613 547.92474365]
[531.41394043 562.03674316]
[542.89654541 571.68817139]
[558.43908691 574.64459229]
[563.20349121 588.75665283]
[574.68609619 598.40802002]
[586.16870117 608.05944824]
[597.72357178 617.62426758]
[609.34991455 627.10198975]
[619.94708252 621.42651367]
[631.80322266 619.66253662]
[643.52569580 621.99359131]
[653.74560547 628.12371826]
[661.27746582 637.31457520]
[665.25683594 648.47454834]
[665.23944092 660.28808594]
[661.25067139 671.37115479]
[672.43798828 681.36334229]
[683.62530518 691.35552979]
[699.46618652 697.39721680]
[698.04583740 714.29156494]
[681.41851807 717.60351562]
[673.63311768 702.54284668]
[662.44580078 692.55065918]
[651.25848389 682.55847168]
[634.32757568 689.01239014]
[616.37994385 685.96545410]
[602.39746094 674.17578125]
[596.30572510 656.84033203]
[599.87219238 638.72839355]
[588.24584961 629.25067139]
[581.07403564 627.46063232]
[576.51733398 619.54205322]
[565.03472900 609.89062500]
[553.55212402 600.23925781]
[538.83087158 597.97314453]
[533.24511719 583.17077637]
[521.76251221 573.51934814]
[507.04132080 571.25323486]
[501.45556641 556.45086670]
[489.97296143 546.79949951]
[475.25177002 544.53338623]
[469.66601562 529.73101807]
[458.18341064 520.07958984]
[446.70080566 510.42819214]
[435.21817017 500.77679443]
[423.73556519 491.12536621]
[417.68029785 493.46362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[17 146]
[18 145]
[19 144]
[20 143]
[21 142]
[22 141]
[25 139]
[26 138]
[27 137]
[28 136]
[29 135]
[31 133]
[34 130]
[35 129]
[36 128]
[37 127]
[38 126]
[40 124]
[41 123]
[43 122]
[44 121]
[45 120]
[53 73]
[54 72]
[55 71]
[56 70]
[57 68]
[58 67]
[59 66]
[60 65]
[77 119]
[78 118]
[79 117]
[80 116]
[82 114]
[83 113]
[86 99]
[87 98]
[89 97]
[90 96]
[91 95]
[100 110]
[101 109]
[102 108]
[153 207]
[154 206]
[155 205]
[156 204]
[157 203]
[159 201]
[160 200]
[162 198]
[163 197]
[165 195]
[166 194]
[167 193]
[168 191]
[169 190]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
