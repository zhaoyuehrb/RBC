%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGAGCCAAGGAAAAAAAGUACAAGUGUGGCUGCAAAGUUUGCCCCUCUUGUUACCCUCAGGCAAAUGAUUGAUUUAGAAAGGCCCCAGGGGCUAUUUUUUGCAGGAACGGUCACUCCCUAAAUCCAGGCAGGGAAAGGGAGGAGUCUGAGCCGAGUCACGCCCCUUCUCCUGUAAACUUGGGUCGCCUCUAGCUUAGCGAGCGCUGGAGUUUGAAGAGCGGGCAGUGGCUGCACACGCCAAACUUUCCCU\
) } def
/len { sequence length } bind def

/coor [
[94.23374176 398.14062500]
[85.36201477 410.51852417]
[72.21946716 418.21224976]
[57.08312225 419.88879395]
[42.57543564 415.25769043]
[31.20995712 405.12133789]
[24.95582390 391.23590088]
[24.89660263 376.00708008]
[31.04255295 362.07342529]
[42.32885361 351.84896851]
[56.80008316 347.10519409]
[58.28771591 332.17913818]
[59.77534866 317.25311279]
[61.26298523 302.32705688]
[59.62075424 300.08682251]
[58.75473785 297.06970215]
[58.96204758 293.56378174]
[60.43170929 289.95819092]
[63.21307373 286.70330811]
[65.43993378 271.86953735]
[67.66680145 257.03576660]
[57.33231735 248.60710144]
[52.46674347 236.07449341]
[54.43804550 222.66651917]
[62.83794403 211.89411926]
[75.56082153 206.63122559]
[77.97170258 191.82624817]
[80.38259125 177.02125549]
[82.79347229 162.21626282]
[85.20435333 147.41128540]
[87.52326965 132.59161377]
[89.75013733 117.75782776]
[80.79829407 105.72186279]
[65.95096588 103.58714294]
[51.10364914 101.45242310]
[36.25632477 99.31769562]
[21.40900421 97.18297577]
[6.56168222 95.04825592]
[-8.28563881 92.91352844]
[-19.92065430 105.20814514]
[-36.42902374 108.10641479]
[-51.25875092 100.65955353]
[-58.64391708 85.98502350]
[-73.51660156 84.03482056]
[-88.38928986 82.08462524]
[-103.26197052 80.13442993]
[-118.13465118 78.18422699]
[-133.00733948 76.23403168]
[-147.92385864 74.65375519]
[-162.87503052 73.44437408]
[-177.82620239 72.23500061]
[-184.18408203 85.97554779]
[-194.83941650 96.69168854]
[-208.49250793 103.10366058]
[-223.48730469 104.45503998]
[-238.01229858 100.60196686]
[-250.31935120 92.02812195]
[-258.93414307 79.78415680]
[-262.83267212 65.35894775]
[-277.78384399 64.14956665]
[-292.73498535 62.94018936]
[-307.68615723 61.73080826]
[-317.68673706 73.59539795]
[-332.75921631 77.28317261]
[-347.10794067 71.37611389]
[-355.21554565 58.14560699]
[-353.96447754 42.67904663]
[-343.83581543 30.92364502]
[-328.72421265 27.39959145]
[-314.44039917 33.46195984]
[-306.47677612 46.77964020]
[-291.52563477 47.98902130]
[-276.57446289 49.19839859]
[-261.62329102 50.40777969]
[-255.45693970 36.79669952]
[-244.98623657 26.09653282]
[-231.46115112 19.61221504]
[-216.50570679 18.14376640]
[-201.92306519 21.88763046]
[-189.47804260 30.41063881]
[-180.68357849 42.70004654]
[-176.61682129 57.28382874]
[-161.66564941 58.49320984]
[-146.71447754 59.70258713]
[-144.50521851 58.01891708]
[-141.50477600 57.09685898]
[-137.99560547 57.23883438]
[-134.36326599 58.64109039]
[-131.05714417 61.36134720]
[-116.18445587 63.31154633]
[-101.31177521 65.26174164]
[-86.43908691 67.21194458]
[-71.56640625 69.16213989]
[-56.69372177 71.11233521]
[-48.45901108 60.62266541]
[-36.01919937 55.52451706]
[-22.57683754 57.24575424]
[-11.64985085 65.44355774]
[-6.15091658 78.06620789]
[8.69640541 80.20092773]
[23.54372597 82.33565521]
[38.39104843 84.47037506]
[53.23836899 86.60509491]
[68.08569336 88.73982239]
[82.93301392 90.87454224]
[94.68532562 81.55343628]
[95.98751068 66.61006165]
[86.10057831 54.57319260]
[87.63404846 39.43703842]
[99.17029572 30.08553886]
[100.47248077 15.14216805]
[101.77466583 0.19879754]
[95.26459503 -14.22096634]
[104.07756805 -26.22849846]
[95.90937042 -42.74577713]
[106.55472565 -56.71164703]
[107.67125702 -71.67003632]
[108.78778076 -86.62841797]
[109.90431213 -101.58680725]
[111.02084351 -116.54519653]
[112.13736725 -131.50358582]
[104.59721375 -139.29562378]
[102.61593628 -149.73295593]
[106.60828400 -159.34101868]
[115.04010773 -165.05453491]
[116.52774048 -179.98059082]
[118.01537323 -194.90664673]
[107.81079865 -206.97486877]
[109.21184540 -222.71693420]
[121.38729095 -232.79335022]
[137.11366272 -231.22595215]
[147.06079102 -218.94465637]
[145.32720947 -203.23573303]
[132.94142151 -193.41900635]
[131.45378113 -178.49295044]
[129.96615601 -163.56690979]
[139.17553711 -146.54711914]
[127.09575653 -130.38705444]
[125.97923279 -115.42866516]
[124.86270142 -100.47028351]
[123.74617004 -85.51189423]
[122.62964630 -70.55350494]
[121.51311493 -55.59511566]
[129.15893555 -46.24319077]
[128.36836243 -33.78820419]
[119.02093506 -24.92631531]
[125.62414551 -11.57540131]
[116.71803284 1.50097942]
[115.41584778 16.44434929]
[114.11367035 31.38772011]
[123.85852051 42.59367752]
[122.75079346 57.76693344]
[110.93088531 67.91224670]
[109.62870026 82.85561371]
[115.28544617 88.58382416]
[118.03134155 95.89370728]
[132.94787598 97.47398376]
[147.86439514 99.05426025]
[162.78091431 100.63453674]
[177.69744873 102.21481323]
[192.61396790 103.79508972]
[207.54002380 105.28272247]
[222.47502136 106.67765808]
[237.41001892 108.07259369]
[252.34501648 109.46752167]
[260.27612305 102.07379913]
[270.74856567 100.28726196]
[280.28060913 104.45787048]
[285.83609009 112.99464417]
[300.73184204 114.76001740]
[315.62759399 116.52539062]
[325.16265869 107.03530884]
[338.23019409 104.79371643]
[350.03158569 110.39685059]
[356.36306763 121.60122681]
[371.23574829 123.55142212]
[386.10842896 125.50161743]
[400.98110962 127.45182037]
[415.85379028 129.40202332]
[430.72647095 131.35221863]
[445.59915161 133.30241394]
[460.28814697 127.42498779]
[471.90145874 136.75132751]
[486.77413940 138.70152283]
[495.66223145 136.71765137]
[501.81893921 140.76939392]
[516.66625977 142.90411377]
[531.51361084 145.03883362]
[546.37390137 147.08132935]
[561.06286621 141.20391846]
[572.67614746 150.53025818]
[587.54882812 152.48045349]
[602.42150879 154.43064880]
[618.91235352 150.49493408]
[627.25933838 165.25173950]
[615.38989258 177.35765076]
[600.47131348 169.30332947]
[585.59863281 167.35313416]
[570.72595215 165.40293884]
[557.10076904 171.41986084]
[544.42370605 161.95402527]
[537.40209961 164.19444275]
[529.37884521 159.88615417]
[514.53155518 157.75143433]
[499.68423462 155.61671448]
[484.82394409 153.57421875]
[469.95123291 151.62400818]
[456.32604980 157.64093018]
[443.64895630 148.17509460]
[428.77627563 146.22489929]
[413.90359497 144.27470398]
[399.03091431 142.32450867]
[384.15823364 140.37429810]
[369.28555298 138.42410278]
[354.41287231 136.47390747]
[341.51113892 147.28099060]
[324.45056152 145.36233521]
[313.86221313 131.42114258]
[298.96646118 129.65576172]
[284.07070923 127.89039612]
[266.88235474 136.78118896]
[250.95007324 124.40251923]
[236.01507568 123.00759125]
[221.08007812 121.61265564]
[206.14508057 120.21772003]
[199.21183777 122.71809387]
[191.03369141 118.71160889]
[176.11717224 117.13134003]
[161.20063782 115.55106354]
[146.28411865 113.97078705]
[131.36759949 112.39051056]
[116.45106506 110.81023407]
[104.58391571 119.98469543]
[102.35705566 134.81848145]
[104.17504883 143.74197388]
[100.00933838 149.82217407]
[97.59845734 164.62715149]
[95.18757629 179.43214417]
[92.77669525 194.23712158]
[90.36580658 209.04211426]
[102.44158936 220.90409851]
[105.03189087 237.46357727]
[97.31011200 252.15203857]
[82.50057983 259.26260376]
[80.27371979 274.09640503]
[78.04685211 288.93017578]
[76.18903351 303.81469727]
[74.70140076 318.74072266]
[73.21376801 333.66677856]
[71.72612762 348.59283447]
[84.97639465 356.09951782]
[94.02263641 368.35046387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 250]
[12 249]
[13 248]
[14 247]
[19 246]
[20 245]
[21 244]
[26 240]
[27 239]
[28 238]
[29 237]
[30 236]
[31 234]
[32 233]
[33 105]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[39 99]
[43 94]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 84]
[50 83]
[51 82]
[59 74]
[60 73]
[61 72]
[62 71]
[106 154]
[107 153]
[110 150]
[111 149]
[112 148]
[114 146]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[125 136]
[126 135]
[127 134]
[156 232]
[157 231]
[158 230]
[159 229]
[160 228]
[161 227]
[162 225]
[163 224]
[164 223]
[165 222]
[169 220]
[170 219]
[171 218]
[175 215]
[176 214]
[177 213]
[178 212]
[179 211]
[180 210]
[181 209]
[183 207]
[184 206]
[186 205]
[187 204]
[188 203]
[189 201]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
