%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCACAGGAAGCCACGCACCCUUGAAAGGCACCGGGUCCUUCUUAGCAUCGUGCUUCCUGAGCAAGCCUGGCAUUGCCUCACAGACCUUCCUCAGAGCCGCUUUCAGAAAAGCAAGCUGCUUCUGGUUGGGCCCAGACCUGCCUUGAGGAGCCUGUAGAGUUAAAAA\
) } def
/len { sequence length } bind def

/coor [
[123.25218201 249.96353149]
[121.58261108 235.05673218]
[119.91304016 220.14993286]
[118.24346924 205.24313354]
[116.43541718 190.35250854]
[114.48904419 175.47932434]
[112.54267120 160.60614014]
[110.59629822 145.73295593]
[108.64992523 130.85977173]
[101.32065582 129.26861572]
[86.66210175 126.08633423]
[79.33283234 124.49519348]
[71.39455414 137.22247314]
[68.14242554 153.86158752]
[51.25329971 155.34271240]
[45.15467453 139.52363586]
[58.66726685 129.28419495]
[66.60554504 116.55691528]
[67.62941742 96.10581207]
[78.62977600 82.00994873]
[93.32376862 77.71376801]
[93.88131714 62.72413635]
[94.43886566 47.73450089]
[94.99642181 32.74486923]
[92.22109985 26.67211723]
[92.86296082 20.97414780]
[95.86358643 17.21140671]
[96.97792053 2.25285506]
[98.09224701 -12.70569611]
[99.20658112 -27.66424751]
[100.32090759 -42.62279892]
[101.43524170 -57.58135223]
[102.13208771 -72.56515503]
[94.65264893 -86.50676727]
[102.62519073 -99.08802032]
[102.90400696 -114.08542633]
[103.18283081 -129.08283997]
[103.46165466 -144.08024597]
[103.74047852 -159.07765198]
[104.01930237 -174.07505798]
[93.33358002 -185.40876770]
[93.82998657 -200.61430359]
[104.70080566 -210.73165894]
[104.97962952 -225.72906494]
[94.41963959 -242.86911011]
[105.01077271 -259.01864624]
[104.73194885 -274.01605225]
[104.45312500 -289.01345825]
[104.17430115 -304.01086426]
[96.18181610 -317.66482544]
[103.68119812 -330.53372192]
[95.68872070 -344.18768311]
[103.18810272 -357.05657959]
[102.90927887 -372.05398560]
[102.63045502 -387.05139160]
[102.35163116 -402.04879761]
[102.07280731 -417.04620361]
[92.20280457 -432.56964111]
[101.23783112 -447.59399414]
[100.68028259 -462.58361816]
[100.12273407 -477.57324219]
[99.56517792 -492.56289673]
[96.34638977 -498.41268921]
[96.56318665 -504.14257812]
[99.27599335 -508.11785889]
[99.27599335 -523.11785889]
[99.27599335 -538.11785889]
[99.27599335 -553.11785889]
[96.27686310 -559.08325195]
[96.70648956 -564.80114746]
[99.56517792 -568.67279053]
[100.12273407 -583.66241455]
[100.68028259 -598.65209961]
[93.46128082 -612.73028564]
[101.66630554 -625.16119385]
[102.22386169 -640.15081787]
[102.78141022 -655.14044189]
[88.73043060 -660.82775879]
[77.47408295 -670.98016357]
[70.37163544 -684.37158203]
[68.28073883 -699.38507080]
[71.45388031 -714.20758057]
[79.50788116 -727.04925537]
[91.47019196 -736.35943604]
[105.89630127 -741.01379395]
[121.04418182 -740.45037842]
[135.08465576 -734.73712158]
[146.32228088 -724.56402588]
[153.40002441 -711.15954590]
[155.46325684 -696.14227295]
[152.26280212 -681.32562256]
[144.18515015 -668.49877930]
[132.20570374 -659.21069336]
[117.77104187 -654.58288574]
[117.21349335 -639.59326172]
[116.65594482 -624.60363770]
[123.91482544 -611.59753418]
[115.66991425 -598.09454346]
[115.11236572 -583.10491943]
[114.55481720 -568.11523438]
[114.27599335 -553.11785889]
[114.27599335 -538.11785889]
[114.27599335 -523.11785889]
[114.27599335 -508.11785889]
[114.55481720 -493.12045288]
[115.11236572 -478.13079834]
[115.66991425 -463.14117432]
[116.22746277 -448.15155029]
[124.88986969 -439.67199707]
[125.45408630 -427.16149902]
[117.07022095 -417.32504272]
[117.34903717 -402.32763672]
[117.62786102 -387.33023071]
[117.90668488 -372.33282471]
[118.18550873 -357.33541870]
[126.15805054 -344.75415039]
[118.67861176 -330.81256104]
[126.65115356 -318.23129272]
[119.17170715 -304.28967285]
[119.45053101 -289.29226685]
[119.72935486 -274.29486084]
[120.00817871 -259.29745483]
[128.00871277 -252.86195374]
[131.19226074 -242.86911011]
[128.26887512 -232.56809998]
[119.97703552 -225.45024109]
[119.69821167 -210.45283508]
[130.18545532 -199.93840027]
[130.11633301 -184.72492981]
[119.01671600 -173.79623413]
[118.73789215 -158.79882812]
[118.45906830 -143.80142212]
[118.18024445 -128.80401611]
[117.90142059 -113.80660248]
[117.62259674 -98.80919647]
[125.12197876 -85.94029999]
[117.12949371 -72.28633118]
[119.33674622 -69.48791504]
[120.27624512 -65.46807861]
[119.38291168 -60.84469604]
[116.39379120 -56.46702194]
[115.27946472 -41.50846863]
[114.16513062 -26.54991722]
[113.05079651 -11.59136581]
[111.93647003 3.36718583]
[110.82213593 18.32573700]
[109.98605347 33.30241776]
[109.42850494 48.29205322]
[108.87094879 63.28168869]
[108.31340027 78.27132416]
[124.41165924 86.42063141]
[132.01664734 106.16065216]
[123.52310944 128.91339111]
[125.46948242 143.78657532]
[127.41585541 158.65975952]
[129.36222839 173.53294373]
[131.30860901 188.40612793]
[135.54042053 196.54785156]
[133.15026855 203.57356262]
[134.81983948 218.48036194]
[136.48941040 233.38716125]
[138.15898132 248.29396057]
[151.28170776 256.79855347]
[155.81819153 271.76364136]
[149.62646484 286.12319946]
[135.63006592 293.09704590]
[120.43765259 289.39236450]
[111.22262573 276.75839233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[12 18]
[13 17]
[21 150]
[22 149]
[23 148]
[24 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 137]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[43 127]
[44 126]
[46 122]
[47 121]
[48 120]
[49 119]
[51 117]
[53 115]
[54 114]
[55 113]
[56 112]
[57 111]
[59 108]
[60 107]
[61 106]
[62 105]
[65 104]
[66 103]
[67 102]
[68 101]
[71 100]
[72 99]
[73 98]
[75 96]
[76 95]
[77 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
