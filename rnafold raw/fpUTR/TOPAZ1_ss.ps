%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCUUACGCGCCCCACUUCCGCUUCCGGCCCCGGGCUGUGGUGACUGGCGGUGUGGGGUGGGUCAGAGGGCAGUAGGUACCUCCAGGCGGGAGCAGCGUUUGCACCGCGGUGGGUUCCUGCGAGCUGGUGCAGAGGGGCCCCAGCGGGCCGGCCCCGGGGCAC\
) } def
/len { sequence length } bind def

/coor [
[98.75913239 143.75442505]
[83.76377869 144.12767029]
[73.37425232 133.30833435]
[74.35470581 118.34041595]
[86.06637573 108.96894836]
[71.14470673 110.49989319]
[58.20629501 119.60527802]
[44.75579453 113.20736694]
[29.83412552 114.73831177]
[16.89571190 123.84369659]
[3.44520950 117.44578552]
[-11.47645950 118.97673798]
[-24.41487312 128.08212280]
[-37.86537552 121.68421173]
[-52.78704453 123.21515656]
[-67.70870972 124.74610901]
[-82.63037872 126.27705383]
[-97.55204773 127.80799866]
[-112.47371674 129.33894348]
[-127.39538574 130.86988831]
[-142.31706238 132.40084839]
[-151.07122803 141.90924072]
[-163.55851746 142.85710144]
[-173.02037048 135.27995300]
[-187.96792603 136.53327942]
[-202.91546631 137.78659058]
[-217.86302185 139.03990173]
[-232.81056213 140.29321289]
[-247.68374634 142.23959351]
[-262.45046997 144.87481689]
[-277.19201660 147.64718628]
[-291.90719604 150.55644226]
[-306.62237549 153.46571350]
[-321.33752441 156.37496948]
[-336.05270386 159.28422546]
[-350.41839600 168.28776550]
[-363.04687500 156.97593689]
[-355.67303467 141.70953369]
[-338.96197510 144.56906128]
[-324.24679565 141.65979004]
[-309.53161621 138.75053406]
[-294.81646729 135.84127808]
[-280.10128784 132.93202209]
[-274.12515259 128.53208923]
[-265.08569336 130.10812378]
[-250.31898499 127.47288513]
[-260.77752686 116.72027588]
[-259.08096313 101.81652832]
[-246.47326660 93.68966675]
[-232.19889832 98.29862976]
[-226.72439575 112.26394653]
[-234.06388855 125.34567261]
[-219.11633301 124.09235382]
[-204.16879272 122.83904266]
[-189.22123718 121.58572388]
[-174.27368164 120.33241272]
[-160.44793701 109.55227661]
[-143.84800720 117.47917175]
[-128.92633057 115.94822693]
[-114.00466919 114.41727448]
[-99.08300018 112.88632965]
[-84.16133118 111.35538483]
[-69.23966217 109.82444000]
[-54.31799316 108.29348755]
[-39.39632416 106.76254272]
[-27.52520752 97.76666260]
[-13.00740623 104.05506897]
[1.91426218 102.52412415]
[13.78537846 93.52823639]
[28.30317879 99.81664276]
[43.22484589 98.28569794]
[55.09596252 89.28981781]
[69.61376190 95.57822418]
[84.53543091 94.04727936]
[97.68540192 86.83074951]
[106.99095917 75.06611633]
[109.21990204 56.80618286]
[125.73883057 50.93355560]
[134.82409668 38.99797821]
[143.90936279 27.06240463]
[152.99462891 15.12683010]
[162.07989502 3.19125581]
[164.28182983 -12.47597218]
[178.14715576 -17.91676331]
[187.23242188 -29.85233879]
[196.31768799 -41.78791428]
[205.40295410 -53.72348785]
[214.37689209 -65.74298859]
[223.23872375 -77.84538269]
[224.34324646 -84.43026733]
[228.06794739 -88.78979492]
[232.66174316 -90.22467804]
[241.96731567 -101.98931122]
[251.27287292 -113.75394440]
[260.57843018 -125.51857758]
[259.86511230 -138.42347717]
[267.89147949 -148.03640747]
[279.92013550 -149.53692627]
[289.44274902 -161.12655640]
[298.96539307 -172.71618652]
[298.83950806 -188.75874329]
[311.39379883 -198.74719238]
[326.99771118 -195.01925659]
[333.68124390 -180.43467712]
[326.31738281 -166.18150330]
[310.55502319 -163.19355774]
[301.03237915 -151.60392761]
[291.50976562 -140.01429749]
[289.59896851 -122.58697510]
[272.34304810 -116.21302032]
[263.03750610 -104.44838715]
[253.73194885 -92.68375397]
[244.42639160 -80.91912079]
[235.34112549 -68.98354340]
[226.47927856 -56.88115692]
[225.05891418 -49.59719086]
[217.33853149 -44.63822174]
[208.25326538 -32.70264816]
[199.16799927 -20.76707268]
[190.08273315 -8.83149815]
[188.53062439 5.98201799]
[174.01547241 12.27652168]
[164.93020630 24.21209717]
[155.84494019 36.14767075]
[146.75967407 48.08324432]
[137.67440796 60.01882172]
[138.98417664 72.06972504]
[131.47792053 82.09405518]
[118.75559235 84.37167358]
[109.45003510 96.13630676]
[113.41367340 98.35092926]
[116.64715576 102.40480042]
[118.46324921 108.00836182]
[127.98587799 119.59799194]
[137.50851440 131.18762207]
[147.03114319 142.77723694]
[162.41589355 141.99267578]
[175.16365051 150.32025146]
[180.50033569 164.39091492]
[176.57530212 178.73428345]
[186.09793091 190.32391357]
[195.62055969 201.91354370]
[205.14320374 213.50315857]
[214.66583252 225.09278870]
[224.18846130 236.68241882]
[233.92488098 248.09303284]
[243.87171936 259.32070923]
[259.58978271 263.99771118]
[263.13470459 280.00912476]
[250.85977173 290.88378906]
[235.39237976 285.43475342]
[232.64405823 269.26754761]
[222.69721985 258.03988647]
[218.03057861 256.86328125]
[214.06867981 252.71813965]
[212.59884644 246.20504761]
[203.07620239 234.61543274]
[193.55357361 223.02580261]
[184.03094482 211.43617249]
[174.50830078 199.84654236]
[164.98567200 188.25691223]
[150.15341187 189.32551575]
[137.38497925 181.36114502]
[131.68797302 167.24032593]
[135.44151306 152.29988098]
[125.91888428 140.71025085]
[116.39625549 129.12062073]
[106.87361908 117.53099823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 74]
[6 73]
[8 71]
[9 70]
[11 68]
[12 67]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[20 59]
[21 58]
[24 56]
[25 55]
[26 54]
[27 53]
[28 52]
[29 46]
[30 45]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[75 130]
[76 129]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[84 120]
[85 119]
[86 118]
[87 117]
[88 115]
[89 114]
[92 113]
[93 112]
[94 111]
[95 110]
[98 108]
[99 107]
[100 106]
[133 168]
[134 167]
[135 166]
[136 165]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
