%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCGAGGGCCAGGGCCGUUGGCGGCGGUUGGAACGAAACGAUGAGUGCCUCCUCGUGGCCCCAGAAUGGAAUGCCGCCGUCGGUAGGGGUCUGCCGGGCAUAAAGGGGCCUUCGGAACCCCACCAGAGUCACAGCCAGGGAGGGCAGCGGGGCGCACCAGGCCGAAGGCUCACGCCACAGGGAGGGCAGCUAGGAC\
) } def
/len { sequence length } bind def

/coor [
[-65.81855011 354.12930298]
[-75.27684021 365.77151489]
[-84.73513031 377.41369629]
[-80.16059875 393.69244385]
[-86.12739563 409.33630371]
[-100.10074615 418.25500488]
[-116.47114563 417.10299683]
[-114.78948975 432.58877563]
[-124.36096954 444.41424561]
[-139.13467407 445.92199707]
[-148.40705872 457.71279907]
[-157.67944336 469.50360107]
[-166.95182800 481.29440308]
[-169.14361572 499.57269287]
[-185.66923523 505.46432495]
[-194.75338745 517.40075684]
[-203.83752441 529.33715820]
[-212.92167664 541.27362061]
[-214.45982361 557.60046387]
[-229.47904968 564.18487549]
[-242.52886963 554.25341797]
[-240.18473816 538.02264404]
[-224.85809326 532.18945312]
[-215.77395630 520.25305176]
[-206.68980408 508.31658936]
[-197.60566711 496.38015747]
[-198.91973877 484.34848022]
[-191.44007874 474.32803345]
[-178.74263000 472.02200317]
[-169.47024536 460.23120117]
[-160.19786072 448.44039917]
[-150.92547607 436.64962769]
[-152.94323730 421.93688965]
[-143.70768738 409.84725952]
[-128.26194763 407.83059692]
[-133.07836914 395.37258911]
[-131.09144592 382.05508423]
[-122.71471405 371.37509155]
[-110.05367279 366.19042969]
[-96.37732697 367.95541382]
[-86.91903687 356.31320190]
[-77.46074677 344.67102051]
[-81.28116608 324.60031128]
[-68.88947296 307.98867798]
[-47.97858429 305.87203979]
[-39.27773285 293.65341187]
[-30.67408562 281.36611938]
[-22.16818810 269.01098633]
[-13.66228962 256.65582275]
[-5.15639162 244.30068970]
[3.25122261 231.87844849]
[11.56002331 219.38989258]
[19.86882401 206.90135193]
[28.17762566 194.41279602]
[28.78567314 179.53060913]
[42.87170792 172.32684326]
[51.18051147 159.83830261]
[59.48931122 147.34974670]
[67.79811096 134.86120605]
[76.10691071 122.37265778]
[68.12997437 107.46437836]
[68.65699005 90.56436157]
[55.66661072 83.06436157]
[42.67623138 75.56436157]
[25.93596840 72.88108063]
[23.88022232 56.05222702]
[39.48230743 49.41812897]
[50.17623138 62.57397842]
[63.16661072 70.07398224]
[76.15699005 77.57398224]
[78.56478119 75.26244354]
[81.19545746 73.20812225]
[75.62052155 59.28260422]
[70.04558563 45.35708618]
[64.47064972 31.43156815]
[58.89570999 17.50604820]
[50.63005829 30.02319717]
[35.70567703 31.52746201]
[25.10838890 20.91155624]
[26.63884926 5.98983765]
[39.17048645 -2.25382853]
[53.47937775 2.24927139]
[49.02556992 -12.07426262]
[44.57176590 -26.39779663]
[40.11795807 -40.72132874]
[35.66415405 -55.04486465]
[31.21034813 -69.36839294]
[18.80309868 -80.09183502]
[22.15158081 -96.14548492]
[37.81116486 -101.01473236]
[49.67261124 -89.69050598]
[45.53388214 -73.82220459]
[49.98768616 -59.49866867]
[54.44149399 -45.17513657]
[58.89529800 -30.85160065]
[63.34910583 -16.52806854]
[67.80290985 -2.20453429]
[72.82122803 11.93111134]
[78.39616394 25.85663033]
[83.97109985 39.78215027]
[89.54603577 53.70766830]
[95.12097931 67.63318634]
[102.97814941 67.40328217]
[110.66357422 69.05321503]
[117.73403168 72.48783112]
[123.78178406 77.50906372]
[128.45803833 83.82733917]
[142.85043335 79.60134888]
[157.24282837 75.37535858]
[171.63522339 71.14936829]
[186.02761841 66.92338562]
[200.42001343 62.69739532]
[214.81240845 58.47140503]
[229.20480347 54.24541855]
[243.59719849 50.01942825]
[257.98959351 45.79344177]
[262.07287598 23.09948540]
[282.52978516 7.56911802]
[310.72726440 10.14734554]
[323.71765137 2.64734554]
[336.70800781 -4.85265446]
[340.90231323 -19.85417557]
[354.18325806 -27.27519035]
[368.45904541 -23.18412399]
[381.44943237 -30.68412399]
[389.53207397 -44.28490829]
[404.42288208 -43.94784546]
[410.29797363 -50.95647049]
[417.67941284 -51.46191406]
[430.78713989 -58.75486374]
[438.74218750 -73.09534454]
[455.14132690 -73.10573578]
[463.11453247 -58.77535248]
[454.45965576 -44.84606171]
[438.08007812 -45.64712524]
[424.97235107 -38.35417175]
[411.92288208 -30.95746422]
[404.76937866 -17.89313126]
[388.94943237 -17.69374275]
[375.95904541 -10.19374275]
[372.36410522 4.21500444]
[359.29687500 12.00612450]
[344.20800781 8.13772678]
[331.21765137 15.63772678]
[318.22726440 23.13772583]
[319.76330566 30.47874451]
[322.83541870 45.16078186]
[324.37145996 52.50180054]
[339.27902222 54.16437149]
[354.18661499 55.82694626]
[370.59832764 51.57344055]
[379.22879028 66.16628265]
[367.59539795 78.49919128]
[352.52404785 70.73451996]
[337.61645508 69.07195282]
[322.70889282 67.40937805]
[313.78085327 75.11228180]
[303.41735840 79.70512390]
[292.61834717 81.02925110]
[282.35058594 79.22792816]
[273.46157837 74.71343231]
[266.60955811 68.11094666]
[262.21557617 60.18583679]
[247.82319641 64.41182709]
[233.43080139 68.63780975]
[219.03840637 72.86380005]
[204.64601135 77.08979034]
[190.25361633 81.31577301]
[175.86122131 85.54176331]
[161.46882629 89.76775360]
[147.07643127 93.99374390]
[132.68403625 98.21972656]
[126.90485382 118.64253235]
[109.81320190 131.22685242]
[88.59545898 130.68145752]
[80.28665924 143.17001343]
[71.97785950 155.65855408]
[63.66905594 168.14709473]
[55.36025620 180.63565063]
[54.15790939 196.41110229]
[40.66617203 202.72160339]
[32.35737228 215.21014404]
[24.04857063 227.69869995]
[15.73976994 240.18724060]
[13.58801365 249.07586670]
[7.19875717 252.80657959]
[-1.30714071 265.16174316]
[-9.81303883 277.51687622]
[-18.31893730 289.87203979]
[-20.61144829 298.72540283]
[-27.05909348 302.35424805]
[-35.75994492 314.57290649]
[-31.44083977 323.28738403]
[-30.60345268 332.91918945]
[-33.32109451 342.13711548]
[-39.17864990 349.68261719]
[-47.33537292 354.54159546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[7 35]
[10 32]
[11 31]
[12 30]
[13 29]
[15 26]
[16 25]
[17 24]
[18 23]
[45 192]
[46 191]
[47 189]
[48 188]
[49 187]
[50 186]
[51 184]
[52 183]
[53 182]
[54 181]
[56 179]
[57 178]
[58 177]
[59 176]
[60 175]
[62 70]
[63 69]
[64 68]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[107 172]
[108 171]
[109 170]
[110 169]
[111 168]
[112 167]
[113 166]
[114 165]
[115 164]
[116 163]
[119 145]
[120 144]
[121 143]
[124 140]
[125 139]
[127 137]
[129 136]
[130 135]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
