%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGCACGCAGCUGGAGCGGACAGGACGGCUUCCGGGAUUUGGCGGGGCCUUUGUCUCUAGCUGCUGCGGGAGCUCCAGGUCUAGUCUUUACUGCUCUGUGUAUUCUGCUCCUAGAGGCCCAGCCUCUGUGACUCCGUUAUCUGCAGGUAUUGGGAGAUGCACAGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[61.59369659 175.83757019]
[52.72505951 163.74017334]
[49.97776031 148.99389648]
[53.89498901 134.51441956]
[63.70223618 123.16462708]
[77.45838165 117.18897247]
[89.28527069 107.96266937]
[74.48287201 110.38940430]
[59.68047714 112.81613159]
[51.68550491 117.30684662]
[44.58913422 115.15053558]
[29.74533653 117.30962372]
[14.90153885 119.46871185]
[0.05774064 121.62779999]
[-14.78605747 123.78689575]
[-29.62985420 125.94598389]
[-44.47365189 128.10507202]
[-59.31745148 130.26416016]
[-74.16124725 132.42324829]
[-78.31003571 135.70382690]
[-82.84941864 136.91921997]
[-86.91868591 136.27064514]
[-89.86486053 134.27470398]
[-104.80377960 135.62699890]
[-119.74269867 136.97930908]
[-134.68162537 138.33160400]
[-149.62054443 139.68389893]
[-164.55946350 141.03619385]
[-170.22215271 144.55587769]
[-175.94805908 144.64723206]
[-180.06056213 142.15763855]
[-195.03857422 142.96972656]
[-210.01657104 143.78179932]
[-224.99456787 144.59388733]
[-233.42820740 148.19387817]
[-240.24984741 145.28294373]
[-255.24006653 145.82447815]
[-270.23028564 146.36602783]
[-278.77978516 159.31538391]
[-293.31970215 164.73483276]
[-308.25912476 160.54049683]
[-317.85360718 148.34516907]
[-318.41378784 132.83821106]
[-309.72433472 119.98235321]
[-295.12649536 114.72094727]
[-280.23342896 119.07711029]
[-270.77182007 131.37579346]
[-255.78160095 130.83425903]
[-240.79138184 130.29272461]
[-225.80665588 129.61589050]
[-210.82865906 128.80380249]
[-195.85064697 127.99172211]
[-180.87265015 127.17964172]
[-165.91175842 126.09727478]
[-150.97283936 124.74497223]
[-136.03392029 123.39267731]
[-121.09499359 122.04038239]
[-106.15607452 120.68808746]
[-91.21715546 119.33579254]
[-76.32033539 117.57945251]
[-61.47653961 115.42036438]
[-46.63274384 113.26127625]
[-31.78894424 111.10218811]
[-16.94514656 108.94309235]
[-2.10134912 106.78400421]
[12.74244881 104.62491608]
[27.58624649 102.46582794]
[42.43004227 100.30673981]
[57.25374603 98.01373291]
[72.05614471 95.58700562]
[86.85854340 93.16027069]
[98.63410187 83.86854553]
[104.43685150 70.03640747]
[110.23959351 56.20426559]
[106.08596039 43.96932220]
[111.23017883 32.55553055]
[122.40798187 27.87493134]
[128.45950317 14.14980888]
[134.51103210 0.42468503]
[132.99880981 -15.32408524]
[145.21313477 -23.84814453]
[151.26466370 -37.57326889]
[157.31619263 -51.29839325]
[151.83908081 -65.88053894]
[158.17170715 -79.71356201]
[172.10731506 -84.84528351]
[178.15884399 -98.57040405]
[184.21037292 -112.29553223]
[175.25842285 -124.69754791]
[173.72622681 -139.81538391]
[179.92562866 -153.57887268]
[192.10041809 -162.33277893]
[206.92239380 -163.80738831]
[212.97392273 -177.53251648]
[219.02545166 -191.25762939]
[213.07551575 -205.89915466]
[219.29827881 -220.42680359]
[234.00187683 -226.22160339]
[248.46293640 -219.84559631]
[254.10195923 -205.08155823]
[247.57341003 -190.68872070]
[232.75057983 -185.20611572]
[226.69905090 -171.48098755]
[220.64752197 -157.75585938]
[229.55595398 -145.81829834]
[231.30465698 -130.92541504]
[225.32455444 -117.06523132]
[213.12971497 -107.99975586]
[197.93548584 -106.24400330]
[191.88395691 -92.51888275]
[185.83242798 -78.79375458]
[191.44300842 -65.04395294]
[185.50141907 -51.03852081]
[171.04132080 -45.24686432]
[164.98979187 -31.52174187]
[158.93826294 -17.79661751]
[160.88333130 -3.02955985]
[148.23616028 6.47621250]
[142.18463135 20.20133591]
[136.13310242 33.92646027]
[138.98152161 51.22780991]
[124.07173920 62.00701141]
[118.26898956 75.83914948]
[112.46624756 89.67129517]
[123.35604095 79.35565948]
[138.31694031 80.43797302]
[147.60858154 92.21360016]
[145.18161011 107.01596069]
[132.61608887 115.20790100]
[118.09323883 111.45630646]
[129.86880493 120.74803162]
[141.64436340 130.03976440]
[153.41992188 139.33148193]
[165.19548035 148.62321472]
[185.23548889 150.58468628]
[191.67980957 168.79408264]
[203.78314209 177.65461731]
[215.88648987 186.51516724]
[227.98982239 195.37570190]
[245.20779419 192.37867737]
[259.00497437 202.54734802]
[261.15258789 219.21174622]
[273.41394043 227.85232544]
[285.67526245 236.49291992]
[297.93658447 245.13349915]
[314.30886841 246.07223511]
[321.43930054 260.84005737]
[311.99276733 274.24508667]
[295.68701172 272.49737549]
[289.29602051 257.39483643]
[277.03466797 248.75424194]
[264.77334595 240.11366272]
[252.51200867 231.47308350]
[240.22787476 235.42872620]
[227.72502136 231.51828003]
[219.64709473 220.95881653]
[219.12928772 207.47903442]
[207.02593994 198.61849976]
[194.92260742 189.75794983]
[182.81927490 180.89741516]
[172.86012268 183.36590576]
[162.98553467 179.85400391]
[156.55700684 171.29974365]
[155.90376282 160.39877319]
[144.12820435 151.10704041]
[132.35263062 141.81532288]
[120.57707214 132.52359009]
[108.80151367 123.23187256]
[114.68084717 137.03163147]
[117.38749695 151.78541565]
[113.43038177 166.25404358]
[103.59188843 177.57676697]
[89.81730652 183.51484680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 71]
[8 70]
[9 69]
[11 68]
[12 67]
[13 66]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[31 53]
[32 52]
[33 51]
[34 50]
[36 49]
[37 48]
[38 47]
[72 124]
[73 123]
[74 122]
[77 120]
[78 119]
[79 118]
[81 116]
[82 115]
[83 114]
[86 111]
[87 110]
[88 109]
[93 104]
[94 103]
[95 102]
[130 168]
[131 167]
[132 166]
[133 165]
[134 164]
[136 160]
[137 159]
[138 158]
[139 157]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
