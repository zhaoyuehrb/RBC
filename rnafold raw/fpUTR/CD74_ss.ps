%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCUGGGGAGCCCCCCCGCCCCACAUCCUGCCCCGCAAAAGGCAGCUUCACCAAAGUGGGGUAUUUCCAGCCUUUGUAGCUUUCACUUCCACAUCUACCAAGUGGGCGGAGUGGCCUUCUGUGGACGAAUCAGAUUCCUCUCCAGCACCGACUUUAAGAGGCGAGCCGGGGGGUCAGGGUCCCAG\
) } def
/len { sequence length } bind def

/coor [
[106.31199646 373.10888672]
[91.45205688 379.15551758]
[77.53063965 371.18218994]
[75.22706604 355.30538940]
[86.30844116 343.70440674]
[87.31033325 328.73791504]
[88.31222534 313.77139282]
[89.31410980 298.80490112]
[90.31600189 283.83840942]
[91.31789398 268.87188721]
[79.87181854 250.51062012]
[92.50000000 232.01109314]
[92.50000000 217.01109314]
[92.50000000 202.01109314]
[92.50000000 187.01109314]
[92.50000000 172.01109314]
[92.50000000 157.01109314]
[92.50000000 142.01109314]
[72.44763184 132.58909607]
[59.82157898 114.38320160]
[45.03052521 116.87814331]
[30.23947144 119.37308502]
[15.44841862 121.86802673]
[0.65736467 124.36296844]
[-14.13368893 126.85791016]
[-28.92474365 129.35284424]
[-37.11429596 149.69146729]
[-55.78337097 160.93858337]
[-77.33221436 158.69880676]
[-93.09838104 144.03018188]
[-107.49717712 148.23429871]
[-121.89597321 152.43843079]
[-136.29476929 156.64254761]
[-150.69357300 160.84666443]
[-155.80331421 175.49829102]
[-168.56835938 184.32060242]
[-184.08029175 183.92124939]
[-196.37446594 174.45376587]
[-200.72349548 159.55862427]
[-195.45512390 144.96328735]
[-182.59512329 136.27996826]
[-167.08842468 136.84757996]
[-154.89768982 146.44786072]
[-140.49888611 142.24374390]
[-126.10009766 138.03962708]
[-111.70130157 133.83551025]
[-97.30249786 129.63139343]
[-96.79297638 120.99661255]
[-94.10691071 112.75438690]
[-89.41032410 105.44532776]
[-83.00144196 99.55142212]
[-75.29176331 95.46423340]
[-66.77964783 93.45888519]
[-58.01812363 93.67558289]
[-49.57891464 96.10986328]
[-42.01517868 100.61220551]
[-35.82522202 106.89724731]
[-31.41968346 114.56179047]
[-16.62862968 112.06685638]
[-1.83757567 109.57191467]
[12.95347786 107.07697296]
[27.74453163 104.58203125]
[42.53558731 102.08708954]
[57.32664108 99.59214783]
[59.02095032 88.08784485]
[63.75788498 77.46799469]
[71.18573761 68.52111053]
[80.75300598 61.91148376]
[91.74932861 58.12986374]
[103.35824585 57.45703125]
[114.71782684 59.94294357]
[124.98462677 65.40303040]
[135.76698303 54.97513962]
[146.54933167 44.54725647]
[157.33169556 34.11936951]
[168.11404419 23.69148254]
[178.89640808 13.26359558]
[183.57931519 -0.98668075]
[181.08436584 -15.77773476]
[178.58943176 -30.56878853]
[176.09448242 -45.35984039]
[161.22096252 -48.38353348]
[148.44621277 -56.57926941]
[139.49790955 -68.83864594]
[135.58624268 -83.50368500]
[137.24023438 -98.59105682]
[144.23619080 -112.06031799]
[155.62797546 -122.08985901]
[169.87492371 -127.32328033]
[185.05027771 -127.05278778]
[199.10168457 -121.31497192]
[210.12879944 -110.88582611]
[216.64030457 -97.17580414]
[217.75556946 -82.03907013]
[213.32376099 -67.52275085]
[203.94425964 -55.59005737]
[190.88554382 -47.85478210]
[193.38047791 -33.06372833]
[195.87542725 -18.27267456]
[198.37036133 -3.48162103]
[213.06799316 -4.83149576]
[223.93055725 2.55865550]
[237.74031067 -3.29718351]
[251.55006409 -9.15302277]
[265.35980225 -15.00886154]
[279.12014771 -20.97987938]
[292.83010864 -27.06566048]
[306.48876953 -33.26577759]
[320.09512329 -39.57979965]
[333.64825439 -46.00728226]
[347.14721680 -52.54778290]
[360.64617920 -59.08828354]
[374.14514160 -65.62878418]
[383.19061279 -78.60915375]
[398.01800537 -77.19563293]
[411.51693726 -83.73612976]
[414.44589233 -96.89504242]
[424.27969360 -105.82926941]
[437.27194214 -107.43827057]
[448.64462280 -101.35638428]
[462.25097656 -107.67040253]
[475.85736084 -113.98442078]
[489.46371460 -120.29844666]
[491.46450806 -135.59552002]
[501.43536377 -147.36776733]
[516.19458008 -151.85870361]
[531.03259277 -147.63529968]
[541.21459961 -136.04521179]
[543.49157715 -120.78681183]
[537.13696289 -106.72898865]
[524.17852783 -98.35754395]
[508.75112915 -98.34378052]
[495.77774048 -106.69208527]
[482.17135620 -100.37805939]
[468.56500244 -94.06404114]
[454.95864868 -87.75001526]
[449.86575317 -71.73129272]
[434.46423340 -64.19528961]
[418.05743408 -70.23717499]
[404.55850220 -63.69667435]
[396.47854614 -51.18412781]
[380.68563843 -52.12982559]
[367.18667603 -45.58932495]
[353.68771362 -39.04882431]
[340.18875122 -32.50832367]
[335.53088379 -26.75090218]
[326.40914917 -25.97343445]
[312.80279541 -19.65941238]
[308.04934692 -13.98062706]
[298.91589355 -13.35569000]
[285.20593262 -7.26990986]
[280.35827637 -1.67134535]
[271.21563721 -1.19911349]
[257.40591431 4.65672541]
[243.59614563 10.51256466]
[229.78640747 16.36840439]
[223.16543579 32.30563354]
[204.98240662 36.85541916]
[189.32429504 24.04595184]
[178.54193115 34.47383881]
[167.75958252 44.90172195]
[156.97721863 55.32960892]
[146.19487000 65.75749969]
[135.41250610 76.18538666]
[141.23002625 88.98784637]
[142.57070923 102.98603058]
[139.28901672 116.65998077]
[131.74127197 128.52497864]
[120.74700165 137.29267883]
[107.50000000 142.01109314]
[107.50000000 157.01109314]
[107.50000000 172.01109314]
[107.50000000 187.01109314]
[107.50000000 202.01109314]
[107.50000000 217.01109314]
[107.50000000 232.01109314]
[114.43162537 236.74163818]
[118.86878204 243.75354004]
[120.14691162 251.85716248]
[118.13009644 259.71209717]
[113.22127533 266.04879761]
[106.28439331 269.87377930]
[105.28250122 284.84030151]
[104.28061676 299.80679321]
[103.27872467 314.77328491]
[102.27683258 329.73980713]
[101.27494812 344.70629883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[26 58]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 100]
[79 99]
[80 98]
[81 97]
[102 156]
[103 155]
[104 154]
[105 153]
[106 151]
[107 150]
[108 148]
[109 147]
[110 145]
[111 144]
[112 143]
[113 142]
[115 140]
[116 139]
[120 136]
[121 135]
[122 134]
[123 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
