%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAUCCAUAGGGAGCUCUGCCUUACCAUUGGGUUCCUAAUUAACUGAGUGAGUGGGUGUGUUCUGCAUGGUGAGAGGCAUUGGAAUGAUGCAUCAGAAAACAUGUCAUAAUGUCAUCACUGUAAUAUGACAAGAAUUGCAGCUGUGGCUGGAACCUUUAUAAAGUGACCAAGCACACCUUUUCAUCCAGUCUCAGCGUGGGGUGAAGCCUAGCAGCU\
) } def
/len { sequence length } bind def

/coor [
[35.98144150 485.88705444]
[33.86793518 500.73739624]
[31.75443268 515.58776855]
[32.68489456 530.55889893]
[19.04733658 536.80523682]
[8.31896496 526.32183838]
[14.24806976 512.54406738]
[17.27092743 497.85180664]
[20.29378510 483.15954590]
[23.31664276 468.46728516]
[15.92749214 467.18258667]
[6.23084307 478.62704468]
[-3.46580601 490.07147217]
[-13.16245461 501.51589966]
[-22.85910416 512.96032715]
[-32.55575180 524.40472412]
[-42.25240326 535.84918213]
[-51.94905090 547.29364014]
[-45.69109726 561.21484375]
[-46.10166168 576.47247314]
[-53.09921646 590.03698730]
[-65.29440308 599.21527100]
[-80.26584625 602.18487549]
[-95.04096222 598.35620117]
[-106.68614197 588.48944092]
[-112.88922882 574.54370117]
[-112.41858673 559.28784180]
[-105.36766815 545.75091553]
[-93.13643646 536.62078857]
[-78.15341187 533.71014404]
[-63.39348221 537.59698486]
[-53.69683075 526.15252686]
[-44.00018311 514.70812988]
[-34.30353546 503.26367188]
[-24.60688591 491.81924438]
[-14.91023731 480.37481689]
[-5.21358824 468.93038940]
[4.48306084 457.48596191]
[-2.83487725 442.18249512]
[-3.77123809 425.81771851]
[1.38438940 410.86126709]
[11.45421791 399.41024780]
[24.60716629 392.89587402]
[38.67962646 391.91009521]
[42.09231949 377.30346680]
[45.50501251 362.69686890]
[48.91770554 348.09024048]
[44.27893066 333.93640137]
[54.95303726 322.25845337]
[58.36573029 307.65182495]
[61.77842331 293.04519653]
[65.19111633 278.43859863]
[68.60380554 263.83197021]
[63.96503448 249.67813110]
[74.63913727 238.00019836]
[78.05183411 223.39356995]
[81.46452332 208.78694153]
[84.87722015 194.18031311]
[88.28990936 179.57368469]
[91.70259857 164.96705627]
[95.11529541 150.36044312]
[98.52798462 135.75381470]
[101.94068146 121.14718628]
[85.68457794 122.38619995]
[69.93348694 110.68304443]
[64.63557434 88.31772614]
[55.27121735 76.59984589]
[45.90686035 64.88195801]
[36.54249954 53.16407776]
[27.17814255 41.44619370]
[9.86467838 44.48828888]
[-6.51993275 38.37028503]
[-17.49003792 24.86349869]
[-20.09125710 7.74868250]
[-13.69569588 -8.24202824]
[-23.39234543 -19.68645859]
[-38.21664047 -25.21374130]
[-40.54083252 -39.92589188]
[-50.23748016 -51.37032318]
[-59.93413162 -62.81475449]
[-69.63077545 -74.25918579]
[-79.32743073 -85.70361328]
[-95.13312531 -88.45308685]
[-102.71149445 -102.59337616]
[-96.24906921 -117.27726746]
[-80.70326996 -121.24053192]
[-67.99948883 -111.44289398]
[-67.88299561 -95.40026855]
[-58.18634796 -83.95583344]
[-48.48970032 -72.51140594]
[-38.79304886 -61.06697083]
[-29.09640121 -49.62254333]
[-14.96567535 -44.91384125]
[-11.94791412 -29.38310814]
[-2.25126505 -17.93867683]
[9.85904026 -21.51569939]
[22.46933365 -20.24417114]
[33.70425797 -14.27770042]
[41.87959290 -4.47073746]
[45.75471878 7.74363279]
[44.72076797 20.56305122]
[38.89602661 32.08183670]
[48.26038361 43.79971695]
[57.62474442 55.51760101]
[66.98910522 67.23548126]
[76.35346222 78.95336914]
[83.85037231 78.73822021]
[75.98090363 65.96827698]
[83.10536194 52.76819611]
[98.09919739 52.33822632]
[105.96839142 65.10834503]
[98.84420013 78.30792236]
[106.34111786 78.09277344]
[115.01805115 65.85713959]
[123.69498444 53.62150192]
[132.37191772 41.38586807]
[141.04885864 29.15023041]
[138.60215759 13.76675129]
[147.57611084 1.48168266]
[162.25698853 -0.75606120]
[170.93392944 -12.99169731]
[179.61085510 -25.22733307]
[188.28779602 -37.46297073]
[196.96472168 -49.69860458]
[205.64166260 -61.93424225]
[214.31860352 -74.16987610]
[208.46156311 -88.44218445]
[211.27296448 -103.61121368]
[221.85571289 -114.83659363]
[236.83287048 -118.53633881]
[251.42530823 -113.52987671]
[260.97659302 -101.41474915]
[262.43899536 -86.05685425]
[255.34580994 -72.35683441]
[241.96049500 -64.68631744]
[226.55422974 -65.49294281]
[217.87730408 -53.25730515]
[209.20036316 -41.02167130]
[200.52342224 -28.78603363]
[191.84649658 -16.55039787]
[183.16955566 -4.31476212]
[174.49263000 7.92087412]
[177.23670959 22.51558304]
[168.61137390 35.04786301]
[153.28448486 37.82716751]
[144.60755920 50.06280136]
[135.93061829 62.29843903]
[127.25368500 74.53407288]
[118.57675171 86.76971436]
[126.16973114 99.70596313]
[141.08299255 98.09524536]
[155.99626160 96.48452759]
[163.77409363 83.18746948]
[177.72717285 77.09117126]
[192.42070007 80.34146118]
[202.26496887 91.48723602]
[217.17823792 89.87651062]
[232.09150696 88.26579285]
[245.00448608 78.15702820]
[260.11221313 84.53575134]
[261.87319946 100.84007263]
[248.47584534 110.29751587]
[233.70222473 103.17906189]
[218.78895569 104.78977966]
[203.87568665 106.40050507]
[196.63829041 119.39119720]
[182.97763062 125.70390320]
[168.04464722 122.72747040]
[157.60699463 111.39778900]
[142.69372559 113.00851440]
[127.78044891 114.61923218]
[116.54730225 124.55987549]
[113.13461304 139.16650391]
[109.72191620 153.77313232]
[106.30922699 168.37976074]
[102.89653778 182.98638916]
[99.48384094 197.59300232]
[96.07115173 212.19963074]
[92.65845490 226.80625916]
[89.24576569 241.41288757]
[93.64044189 256.61148071]
[83.21043396 267.24465942]
[79.79773712 281.85128784]
[76.38504791 296.45791626]
[72.97235870 311.06454468]
[69.55966187 325.67114258]
[73.95433807 340.86975098]
[63.52433014 351.50292969]
[60.11163712 366.10955811]
[56.69894409 380.71618652]
[53.28625488 395.32278442]
[69.85816193 406.86117554]
[78.31980896 426.52352905]
[74.95870209 448.89157104]
[59.52977753 467.05651855]
[64.79463959 481.10220337]
[70.05950928 495.14788818]
[75.42498016 509.15545654]
[80.89078522 523.12414551]
[93.12473297 533.15618896]
[90.55704498 547.82775879]
[96.02285004 561.79650879]
[101.48865509 575.76519775]
[106.95446014 589.73394775]
[118.35667419 602.28088379]
[109.45651245 616.71081543]
[93.12667847 612.15307617]
[92.98574829 595.19970703]
[87.51994324 581.23101807]
[82.05413818 567.26232910]
[76.58833313 553.29357910]
[64.74533844 544.26074219]
[66.92207336 528.58996582]
[61.45626831 514.62127686]
[56.09491730 509.54074097]
[56.01382828 500.41275024]
[50.74896240 486.36706543]
[45.48409653 472.32138062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[44 191]
[45 190]
[46 189]
[47 188]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[55 180]
[56 179]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[62 173]
[63 172]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[75 95]
[76 94]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[113 149]
[114 148]
[115 147]
[116 146]
[117 145]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[150 171]
[151 170]
[152 169]
[156 165]
[157 164]
[158 163]
[195 218]
[196 217]
[197 216]
[198 214]
[199 213]
[201 211]
[202 210]
[203 209]
[204 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
