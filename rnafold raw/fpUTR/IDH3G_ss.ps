%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCCAGCUGGUCGCGGUCCCCCCCUCAACAUGGCGGCAGCGGUGCUCUAGGCGCCGGAAGGGGGCGUGAAUCGGUGCGACCGCGCGCGUGCGCAGUACCGGGUCCGCGCCUGUCCCCGAAACUUCGCACCCCGUCGAACUCUCGCGAGAGCGGUAUCUGCGUGUCGGGACGUGCGGAGGCUCUCACUUUCCGUC\
) } def
/len { sequence length } bind def

/coor [
[322.44415283 203.91430664]
[308.34875488 198.78401184]
[294.25335693 193.65370178]
[280.15795898 188.52340698]
[277.55624390 189.59391785]
[274.37152100 189.69271851]
[270.97384644 188.59176636]
[267.80920410 186.20179749]
[265.34878540 182.59471130]
[251.60717773 176.58074951]
[236.84548950 178.56620789]
[227.30516052 165.94508362]
[213.56352234 159.93112183]
[206.16748047 160.12962341]
[199.65277100 153.71119690]
[186.00830078 147.47996521]
[172.36381531 141.24874878]
[158.71932983 135.01751709]
[145.07485962 128.78630066]
[130.28353882 130.53729248]
[120.94464111 117.76639557]
[107.30016327 111.53517151]
[75.59674835 131.73130798]
[60.74942398 133.86602783]
[45.90210342 136.00074768]
[31.05478096 138.13548279]
[16.20746040 140.27020264]
[1.36013854 142.40492249]
[-2.70967484 152.28713989]
[-10.45921612 159.52903748]
[-20.44082832 162.86972046]
[-30.82761765 161.76856995]
[-39.74777222 156.49153137]
[-45.62187576 148.05101013]
[-60.55395508 149.47685242]
[-75.48603058 150.90269470]
[-90.41811371 152.32853699]
[-105.35018921 153.75436401]
[-118.35240173 162.76843262]
[-131.75752258 156.27597046]
[-146.65142822 158.05674744]
[-161.49876404 160.19146729]
[-176.34608459 162.32620239]
[-191.16351318 170.56513977]
[-203.18234253 158.60754395]
[-195.01919556 143.74821472]
[-178.48080444 147.47888184]
[-163.63348389 145.34414673]
[-148.78616333 143.20942688]
[-146.38836670 140.61058044]
[-142.60830688 139.04913330]
[-137.94970703 139.16400146]
[-133.18336487 141.34388733]
[-121.24919128 132.43182373]
[-106.77603149 138.82229614]
[-91.84395599 137.39645386]
[-76.91187286 135.97061157]
[-61.97979736 134.54476929]
[-47.04771805 133.11892700]
[-35.79509735 117.22731781]
[-16.18296814 114.67878723]
[-0.77458405 127.55760193]
[14.07273769 125.42287445]
[28.92005920 123.28815460]
[43.76737976 121.15343475]
[58.61470413 119.01870728]
[73.46202087 116.88398743]
[77.41621399 110.51104736]
[62.52030945 112.27512360]
[51.85352707 101.72904968]
[53.44798279 86.81403351]
[66.10304260 78.76111603]
[80.28942108 83.63416290]
[85.32460022 97.76516724]
[89.27878571 91.39222717]
[84.59828949 77.14115906]
[79.91778564 62.89009094]
[75.23728180 48.63902283]
[70.55677795 34.38795853]
[65.87628174 20.13689041]
[56.95220566 17.03420448]
[50.55577850 10.26893997]
[48.03356552 1.44981742]
[49.83103561 -7.40460777]
[55.41963577 -14.32779312]
[51.42253113 -28.78542519]
[47.42542267 -43.24305725]
[43.42831421 -57.70069122]
[31.36754417 -68.81238556]
[35.22369003 -84.75171661]
[51.02988052 -89.12165833]
[62.52606201 -77.42679596]
[57.88594818 -61.69779587]
[61.88305664 -47.24016571]
[65.88016510 -32.78253174]
[69.87727356 -18.32489967]
[85.79923248 -5.20150375]
[80.12734985 15.45638943]
[84.80784607 29.70745659]
[89.48834991 43.95852280]
[94.16885376 58.20959091]
[98.84934998 72.46065521]
[103.52985382 86.71172333]
[113.53138733 97.89069366]
[127.17587280 104.12191772]
[142.94314575 102.81661987]
[151.30607605 115.14181519]
[164.95056152 121.37303925]
[178.59504700 127.60426331]
[192.23951721 133.83549500]
[205.88400269 140.06671143]
[219.57748413 146.18949890]
[233.31910706 152.20346069]
[249.06369019 150.64816284]
[257.62112427 162.83912659]
[271.36276245 168.85307312]
[285.28826904 174.42800903]
[299.38366699 179.55831909]
[313.47906494 184.68861389]
[327.57443237 189.81892395]
[342.12310791 193.47084045]
[356.97042847 195.60556030]
[369.54067993 186.40631104]
[384.56756592 188.78273010]
[393.26019287 200.82324219]
[408.10751343 202.95796204]
[422.95483398 205.09268188]
[437.80215454 207.22740173]
[452.64947510 209.36213684]
[467.49679565 211.49685669]
[482.34411621 213.63157654]
[497.19143677 215.76629639]
[512.07073975 217.66519165]
[526.97833252 219.32775879]
[541.88592529 220.99032593]
[556.79351807 222.65290833]
[571.36621094 216.49285889]
[583.15747070 225.59315491]
[598.06506348 227.25573730]
[589.62847900 214.85313416]
[592.28845215 200.09085083]
[604.52337646 191.41294861]
[619.33496094 193.78320312]
[628.25085449 205.84579468]
[626.17120361 220.70094299]
[614.28619385 229.85128784]
[628.96820068 232.92338562]
[643.65026855 235.99549866]
[652.70190430 234.68954468]
[658.53997803 239.23455811]
[673.17144775 242.53921509]
[687.80291748 245.84387207]
[701.03015137 237.19432068]
[716.48211670 240.51300049]
[724.99133301 253.83097839]
[721.50946045 269.24694824]
[708.10229492 277.61489868]
[692.72393799 273.97024536]
[684.49822998 260.47531128]
[669.86682129 257.17065430]
[655.23535156 253.86601257]
[640.57812500 250.67753601]
[625.89611816 247.60542297]
[611.21405029 244.53332520]
[596.40246582 242.16331482]
[581.49493408 240.50073242]
[567.98846436 246.77969360]
[555.13092041 237.56048584]
[540.22332764 235.89790344]
[525.31573486 234.23533630]
[510.40820312 232.57276917]
[506.17718506 234.80892944]
[500.49514771 234.40351868]
[495.05670166 230.61361694]
[480.20938110 228.47889709]
[465.36206055 226.34417725]
[450.51473999 224.20945740]
[435.66741943 222.07472229]
[420.82009888 219.94000244]
[405.97277832 217.80528259]
[391.12545776 215.67056274]
[379.39276123 224.77435303]
[364.30505371 222.82095337]
[354.83569336 210.45288086]
[339.98837280 208.31816101]
[351.43795776 218.00872803]
[358.03417969 231.48054504]
[358.66732788 246.46717834]
[353.23089600 260.44735718]
[342.63946533 271.06909180]
[328.67492676 276.54550171]
[313.68652344 275.95520020]
[300.19589233 269.39752197]
[290.47262573 257.97570801]
[286.15249634 243.61129761]
[287.96231079 228.72088623]
[295.59759521 215.80955505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 120]
[2 119]
[3 118]
[4 117]
[9 116]
[10 115]
[12 113]
[13 112]
[15 111]
[16 110]
[17 109]
[18 108]
[19 107]
[21 105]
[22 104]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[40 53]
[41 49]
[42 48]
[43 47]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[85 96]
[86 95]
[87 94]
[88 93]
[121 185]
[122 184]
[125 181]
[126 180]
[127 179]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 171]
[134 170]
[135 169]
[136 168]
[138 166]
[139 165]
[146 164]
[147 163]
[148 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
