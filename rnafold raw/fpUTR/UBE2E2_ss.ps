%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGGCGUGGUCGGGUGCGUGGUGCGUGGGUCCGGCUUUCGGUGACUAGACGGUCCGCAGGGGACAUCCCGUCCCUGGGGCCUCCCCAGUCUCCCUCCCCCUCGCGCCUGGGCAGCUCUCUCCCAGGGCUUCGGCUCGAGCCUGCGACCUGCACGGACACCCCCCCCUCAGGAUCUAAA\
) } def
/len { sequence length } bind def

/coor [
[201.71076965 285.34835815]
[195.35905457 281.53018188]
[193.32916260 272.59585571]
[185.19964600 259.98983765]
[177.07014465 247.38386536]
[168.94062805 234.77786255]
[160.81111145 222.17187500]
[147.41091919 215.66925049]
[146.43409729 199.87823486]
[138.30458069 187.27223206]
[130.06597900 174.73727417]
[121.71889496 162.27427673]
[113.37181854 149.81127930]
[105.02474213 137.34828186]
[96.67766571 124.88528442]
[82.31682587 98.31579590]
[70.70619965 88.81877136]
[55.12554169 86.07040405]
[50.17285538 72.02333069]
[38.56222916 62.52631378]
[29.91321945 59.50348663]
[26.83437538 52.76231003]
[15.39032841 43.06520844]
[3.94628191 33.36810684]
[-7.49776459 23.67100334]
[-18.94181061 13.97390175]
[-30.38585854 4.27679920]
[-45.91647339 1.25842190]
[-50.62461090 -12.87248993]
[-62.06866074 -22.56959343]
[-73.51270294 -32.26669693]
[-78.70270538 -33.20298767]
[-82.61026764 -35.79071426]
[-84.81907654 -39.25767136]
[-85.28292084 -42.77864456]
[-96.20674896 -53.05823135]
[-106.49875641 -50.07433319]
[-117.01863861 -51.63438416]
[-125.86609650 -57.38849258]
[-131.47132874 -66.23537445]
[-132.87344360 -76.53256226]
[-129.88455200 -86.40116119]
[-140.25854492 -97.23537445]
[-155.39125061 -101.85185242]
[-158.60493469 -116.39562988]
[-168.97894287 -127.22984314]
[-179.35293579 -138.06405640]
[-189.72694397 -148.89825439]
[-209.30471802 -153.62710571]
[-213.14530945 -172.56207275]
[-223.88908386 -183.02970886]
[-232.24353027 -186.79080200]
[-234.72650146 -193.77346802]
[-245.28697205 -204.42599487]
[-255.84745789 -215.07852173]
[-266.40792847 -225.73104858]
[-276.96841431 -236.38357544]
[-285.25631714 -240.28912354]
[-287.61773682 -247.31382751]
[-297.99172974 -258.14804077]
[-308.36572266 -268.98223877]
[-318.73971558 -279.81646729]
[-329.11373901 -290.65066528]
[-337.33261108 -294.69946289]
[-339.57174683 -301.76409912]
[-349.75613403 -312.77673340]
[-365.66632080 -314.83734131]
[-373.85147095 -328.63525391]
[-368.03268433 -343.58587646]
[-352.67361450 -348.22039795]
[-339.55642700 -338.98358154]
[-338.74349976 -322.96112061]
[-328.55911255 -311.94848633]
[-318.27951050 -301.02465820]
[-307.90551758 -290.19046021]
[-297.53152466 -279.35626221]
[-287.15753174 -268.52203369]
[-276.78350830 -257.68783569]
[-266.31588745 -246.94406128]
[-255.75540161 -236.29153442]
[-245.19493103 -225.63900757]
[-234.63444519 -214.98648071]
[-224.07397461 -204.33395386]
[-213.42144775 -193.77346802]
[-202.67767334 -183.30584717]
[-192.48043823 -184.35618591]
[-183.20050049 -179.50576782]
[-178.02871704 -170.14892578]
[-178.89273071 -159.27226257]
[-168.51872253 -148.43804932]
[-158.14472961 -137.60383606]
[-147.77072144 -126.76963043]
[-133.38003540 -122.92809296]
[-129.42434692 -107.60937500]
[-119.05033875 -96.77516937]
[-99.61959839 -97.81188202]
[-85.44305420 -84.04293823]
[-85.92716217 -63.98206329]
[-75.00333405 -53.70247269]
[-63.81560516 -43.71074295]
[-52.37155533 -34.01364136]
[-40.92750931 -24.31653786]
[-26.21545029 -21.99176216]
[-20.68875504 -7.16724730]
[-9.24470901 2.52985477]
[2.19933748 12.22695732]
[13.64338398 21.92405891]
[25.08743095 31.62116241]
[36.53147888 41.31826401]
[48.05924988 50.91568756]
[59.66987228 60.41270447]
[74.42006683 62.48178864]
[80.20322418 77.20814514]
[91.81385040 86.70516968]
[106.70326996 88.52315521]
[120.25788879 82.09880066]
[133.81250000 75.67444611]
[147.36712646 69.25009155]
[160.92173767 62.82572937]
[174.47634888 56.40137482]
[181.20130920 41.83585358]
[196.81576538 38.15227127]
[209.34161377 48.17636490]
[209.17012024 64.21849823]
[196.43284607 73.97252655]
[180.90071106 69.95599365]
[167.34609985 76.38034821]
[153.79147339 82.80470276]
[140.23686218 89.22906494]
[126.68224335 95.65341949]
[113.12762451 102.07777405]
[109.14066315 116.53820801]
[117.48773956 129.00120544]
[125.83481598 141.46420288]
[134.18190002 153.92720032]
[142.52897644 166.39019775]
[149.92515564 171.79754639]
[150.91056824 179.14273071]
[159.04008484 191.74871826]
[173.02175903 199.15299988]
[173.41709900 214.04235840]
[181.54661560 226.64836121]
[189.67613220 239.25434875]
[197.80564880 251.86033630]
[205.93515015 264.46633911]
[214.17376709 277.00128174]
[223.05360413 289.09048462]
[232.44950867 300.78308105]
[241.94653320 312.39370728]
[251.54394531 323.92147827]
[261.14135742 335.44924927]
[270.73880005 346.97702026]
[286.11816406 346.09292603]
[298.91952515 354.33782959]
[304.34713745 368.37368774]
[300.51498413 382.74215698]
[310.11239624 394.26992798]
[325.74951172 394.14929199]
[337.77279663 404.14804077]
[340.50518799 419.54507446]
[332.65658569 433.07034302]
[317.93280029 438.33764648]
[303.28601074 432.85995483]
[295.63192749 419.22363281]
[298.58462524 403.86734009]
[288.98721313 392.33956909]
[274.16217041 393.50411987]
[261.34246826 385.62252808]
[255.55422974 371.53887939]
[259.21102905 356.57443237]
[249.61360168 345.04666138]
[240.01617432 333.51889038]
[230.41876221 321.99111938]
[223.70455933 318.85391235]
[220.75689697 310.17898560]
[211.36100769 298.48638916]
[207.01762390 312.84378052]
[193.15145874 318.56475830]
[179.94775391 311.44702148]
[177.10514832 296.71881104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[9 139]
[10 138]
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 114]
[17 113]
[19 111]
[20 110]
[22 109]
[23 108]
[24 107]
[25 106]
[26 105]
[27 104]
[29 102]
[30 101]
[31 100]
[35 99]
[36 98]
[42 95]
[43 94]
[45 92]
[46 91]
[47 90]
[48 89]
[50 85]
[51 84]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[65 73]
[66 72]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[147 176]
[148 175]
[149 173]
[150 172]
[151 171]
[152 170]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
