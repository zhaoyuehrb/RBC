%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCACCACGCUUCGUCCGCGUGCUCCCCACGUGAAGGCACCCGCCCUGCGCGUGUGAAAGGGCGAGAGCAGCGCGAGAUAGGGCCUAGCGCCUCAGAUCUUCGUUGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[184.01763916 327.78271484]
[176.23242188 323.22927856]
[169.53015137 317.18118286]
[164.19363403 309.88882446]
[160.44898987 301.65527344]
[158.45611572 292.82354736]
[158.30184937 283.76239014]
[159.99618530 274.85089111]
[163.47167969 266.46255493]
[168.58619690 258.94973755]
[175.12864685 252.62872314]
[168.04640198 239.40594482]
[160.96415710 226.18316650]
[153.88191223 212.96038818]
[141.05216980 205.39422607]
[141.35699463 189.57595825]
[134.27476501 176.35317993]
[127.19251251 163.13040161]
[119.93032837 150.00559998]
[112.48955536 136.98120117]
[105.04877472 123.95680237]
[97.60800171 110.93241119]
[89.99002075 98.01086426]
[82.19625854 85.19457245]
[74.40250397 72.37828064]
[66.60874176 59.56198883]
[58.81498337 46.74569702]
[50.50273514 34.25944519]
[41.68595886 22.12418938]
[32.86917877 9.98893452]
[23.08856583 -1.38382280]
[12.40977383 -11.91773987]
[1.73098135 -22.45165634]
[-8.94781113 -32.98557281]
[-19.62660217 -43.51948929]
[-30.44827843 -53.90656662]
[-45.81505966 -57.67121887]
[-49.83548737 -72.01295471]
[-60.79802704 -82.25125122]
[-71.76056671 -92.48954773]
[-87.85002136 -95.66153717]
[-92.89093018 -111.26670837]
[-81.69763947 -123.25179291]
[-65.78485107 -119.28756714]
[-61.52227020 -103.45208740]
[-50.55973053 -93.21379089]
[-39.59719086 -82.97549438]
[-25.01452446 -79.94315338]
[-20.20998192 -64.86910248]
[-13.07716560 -62.57237625]
[-9.09268665 -54.19828033]
[1.58610582 -43.66436386]
[12.26489830 -33.13044739]
[22.94368935 -22.59653091]
[33.62248230 -12.06261539]
[35.50003433 -26.94464493]
[47.19469452 -36.33798981]
[62.13139725 -34.96144485]
[71.91230774 -23.58894157]
[71.03832245 -8.61442566]
[60.00082016 1.54301202]
[45.00443268 1.17215562]
[53.82121277 13.30741024]
[62.63799286 25.44266510]
[66.18478394 26.32647324]
[69.44692230 29.05479050]
[71.52313995 33.45781326]
[71.63127136 38.95193863]
[79.42503357 51.76823044]
[87.21879578 64.58451843]
[95.01255035 77.40081024]
[102.80631256 90.21710205]
[109.44175720 94.99936676]
[110.63239288 103.49163055]
[118.07316589 116.51602936]
[125.51394653 129.54042053]
[132.95472717 142.56481934]
[140.02589417 148.56481934]
[140.41529846 156.04815674]
[147.49752808 169.27093506]
[154.57977295 182.49371338]
[167.91609192 191.00566101]
[167.10469055 205.87814331]
[174.18693542 219.10092163]
[181.26918030 232.32369995]
[188.35142517 245.54647827]
[210.52560425 244.12327576]
[230.55854797 253.58770752]
[243.46649170 271.51705933]
[246.07130432 293.39129639]
[237.78277588 313.73257446]
[248.16984558 324.55422974]
[258.55691528 335.37591553]
[268.94400024 346.19760132]
[284.22262573 344.23028564]
[297.57394409 351.55117798]
[303.97863770 365.16894531]
[301.17010498 379.77203369]
[311.55718994 390.59371948]
[326.88742065 397.83386230]
[324.17407227 414.56927490]
[307.34155273 416.59478760]
[300.73550415 400.98080444]
[290.34841919 390.15911865]
[275.64254761 392.36706543]
[262.29855347 385.40988159]
[255.53077698 371.76986694]
[258.12231445 356.58465576]
[247.73526001 345.76300049]
[237.34817505 334.94131470]
[226.96110535 324.11962891]
[219.06414795 328.38583374]
[210.45602417 330.95843506]
[201.49586487 331.72634888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 86]
[12 85]
[13 84]
[14 83]
[16 81]
[17 80]
[18 79]
[19 77]
[20 76]
[21 75]
[22 74]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[28 64]
[29 63]
[30 62]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[36 49]
[38 47]
[39 46]
[40 45]
[91 111]
[92 110]
[93 109]
[94 108]
[98 104]
[99 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
