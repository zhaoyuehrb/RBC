%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAAUGGCAGGCGCGGGGGAUGACGCCACGGACAUGGUGGCCGAGACCGGCGGGGUGGGGGACGUGUCGCGCGGCCGGGUGGCCUCGGUCGGUACCCUGGGCGCGGAGCAGCUGCCUCAUUAGUAUUCGUACCCACGAGGCGGCGCAGCGGGCCCUCGGGGACAGCGAGCGUCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[79.01912689 283.62902832]
[71.30226135 269.15899658]
[80.20370483 255.38597107]
[80.46119690 240.38818359]
[80.71869659 225.39039612]
[78.84385681 223.27468872]
[77.70489502 220.27972412]
[77.64437866 216.68601990]
[78.89561462 212.89393616]
[81.54389191 209.38182068]
[82.82984924 194.43704224]
[80.26433563 187.48594666]
[84.26831055 179.24749756]
[85.81063080 164.32699585]
[87.35294342 149.40650940]
[88.89525604 134.48600769]
[90.43757629 119.56550598]
[77.02026367 112.85910034]
[66.01198578 123.04820251]
[61.13998413 138.10058594]
[46.54388428 141.06758118]
[44.49005127 156.97863770]
[30.69562912 165.16969299]
[15.74251842 159.35728455]
[11.10146427 144.00019836]
[20.33268738 130.87907410]
[36.35478210 130.05931091]
[40.43939972 115.73571777]
[55.82288742 112.03992462]
[66.83116913 101.85082245]
[65.80194855 86.88616943]
[53.50236893 78.30010986]
[37.75775528 76.74520874]
[31.75061417 63.11569977]
[19.45103645 54.52964020]
[7.15146065 45.94358063]
[-1.70048165 43.58835983]
[-5.28383780 37.10306168]
[-17.43420982 28.30712700]
[-29.58458328 19.51119423]
[-38.39479065 17.00436592]
[-41.86629105 10.45850849]
[-53.86388016 1.45529401]
[-65.86146545 -7.54792023]
[-77.85905457 -16.55113411]
[-89.85664368 -25.55434799]
[-100.54920197 -23.39549637]
[-110.45572662 -27.40838432]
[-116.38220978 -36.03781891]
[-116.56295776 -46.28488541]
[-128.24441528 -55.69464493]
[-139.92587280 -65.10440063]
[-151.60733032 -74.51415253]
[-163.28878784 -83.92391205]
[-178.88961792 -86.55546570]
[-183.94741821 -100.56503296]
[-199.54823303 -103.19658661]
[-204.60603333 -117.20615387]
[-216.28749084 -126.61590576]
[-227.96894836 -136.02566528]
[-239.65040588 -145.43542480]
[-255.25122070 -148.06697083]
[-260.30902100 -162.07653809]
[-276.58728027 -164.06419373]
[-282.75515747 -179.25924683]
[-272.46768188 -192.03030396]
[-256.30773926 -189.23962402]
[-250.89926147 -173.75799561]
[-236.13398743 -171.79949951]
[-230.24064636 -157.11688232]
[-218.55918884 -147.70712280]
[-206.87773132 -138.29736328]
[-195.19627380 -128.88760376]
[-180.43098450 -126.92910767]
[-174.53765869 -112.24649048]
[-159.77236938 -110.28798676]
[-153.87904358 -95.60536957]
[-142.19758606 -86.19561768]
[-130.51611328 -76.78585815]
[-118.83466339 -67.37609863]
[-107.15320587 -57.96634674]
[-87.89312744 -56.42384720]
[-80.85343170 -37.55193710]
[-68.85584259 -28.54872322]
[-56.85825348 -19.54550934]
[-44.86066437 -10.54229450]
[-32.86307526 -1.53908050]
[-20.78865051 7.36082077]
[-8.63827801 16.15675354]
[3.51209545 24.95268631]
[15.73752022 33.64400482]
[28.03709602 42.23006439]
[40.33667374 50.81612396]
[55.20153809 51.75689697]
[62.08842850 66.00053406]
[74.38800812 74.58659363]
[103.15545654 72.27597046]
[116.76617432 89.60839081]
[131.36514282 86.16307068]
[145.96411133 82.71775818]
[159.05789185 69.78675079]
[175.65417480 75.45758057]
[190.19184875 71.76216125]
[204.72952271 68.06674194]
[219.26719666 64.37132263]
[230.73583984 53.47267532]
[244.97700500 57.83599091]
[259.51467896 54.14057159]
[267.62066650 40.83903885]
[282.41656494 37.29845428]
[295.04760742 45.10824203]
[309.58526611 41.41282272]
[317.15396118 36.25349426]
[324.40423584 37.78102875]
[339.00320435 34.33571243]
[353.60217285 30.89039803]
[368.20111084 27.44508171]
[382.80007935 23.99976540]
[397.39904785 20.55444908]
[411.99801636 17.10913277]
[426.59698486 13.66381741]
[431.09594727 -0.95488971]
[442.23455811 -11.29066753]
[456.95327759 -14.64111900]
[471.27697754 -10.20407581]
[481.38845825 0.73317659]
[495.98742676 -2.71213961]
[510.58639526 -6.15745592]
[522.14801025 -17.78765488]
[537.92944336 -13.32912636]
[541.69610596 2.63157964]
[529.57318115 13.67545605]
[514.03173828 8.44151020]
[499.43273926 11.88682652]
[484.83377075 15.33214188]
[480.67916870 29.63615417]
[469.85058594 40.00907516]
[455.18688965 43.59278870]
[440.60250854 39.32756805]
[430.04229736 28.26278305]
[415.44332886 31.70809937]
[400.84436035 35.15341568]
[386.24539185 38.59873199]
[371.64645386 42.04404831]
[357.04748535 45.48936462]
[342.44851685 48.93468094]
[327.84954834 52.37999725]
[313.28070068 55.95049667]
[298.74301147 59.64591217]
[291.37469482 72.53945923]
[276.68408203 76.49423218]
[263.21011353 68.67824554]
[248.67242432 72.37366486]
[238.24360657 83.00798798]
[222.96261597 78.90899658]
[208.42494202 82.60441589]
[193.88726807 86.29983521]
[179.34959412 89.99525452]
[172.88749695 100.23953247]
[160.78697205 103.42690277]
[149.40942383 97.31672668]
[134.81045532 100.76203918]
[120.21149445 104.20735931]
[135.14407349 102.78671265]
[148.29473877 110.00196075]
[155.11900330 123.35971069]
[153.25857544 138.24389648]
[143.35636902 149.51094055]
[128.83432007 153.26727295]
[114.71083832 148.21481323]
[105.86662292 136.09953308]
[105.35807037 121.10782623]
[103.81575775 136.02832031]
[102.27343750 150.94882202]
[100.73112488 165.86932373]
[99.18881226 180.78981018]
[97.77462006 195.72300720]
[96.48866272 210.66778564]
[95.71648407 225.64788818]
[95.45899200 240.64567566]
[95.20149231 255.64346313]
[103.62490082 269.71395874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[10 178]
[11 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[18 30]
[19 29]
[21 27]
[31 96]
[32 95]
[34 93]
[35 92]
[36 91]
[38 90]
[39 89]
[40 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[56 75]
[58 73]
[59 72]
[60 71]
[61 70]
[63 68]
[98 163]
[99 162]
[100 161]
[102 158]
[103 157]
[104 156]
[105 155]
[107 153]
[108 152]
[111 149]
[112 148]
[114 147]
[115 146]
[116 145]
[117 144]
[118 143]
[119 142]
[120 141]
[121 140]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
