%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCGUGCGGUUGCCAUGUAAUAUCCUGGCCGCGCGGGCGCGCGAGCGGCUGAGGCGGCGCCGGGGCGGGCGCGGAGCUGGCAAGCGGGUGGCGGAGGCGGCGCCGACGGGGACUGCUGAGGCGCGCAGAGGGUCGGCGGCGCCCGGGAGCCUGUCGCUGGCGCGGUCCGGGCGGGAGGCUCGGCGGCGGGCGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-40.41746521 428.23956299]
[-52.14709473 437.58920288]
[-67.02479553 439.50073242]
[-80.73697662 433.41995239]
[-89.30797577 421.10986328]
[-90.25325012 406.14202881]
[-99.77481079 417.73254395]
[-109.29637146 429.32305908]
[-118.81793213 440.91354370]
[-128.33949280 452.50405884]
[-137.86105347 464.09457397]
[-138.71392822 469.26065063]
[-141.21681213 473.18646240]
[-144.61882019 475.45053101]
[-148.11074829 475.99148560]
[-158.16511536 487.12295532]
[-168.21948242 498.25442505]
[-178.27386475 509.38589478]
[-181.78215027 524.81323242]
[-196.05497742 529.07189941]
[-195.00230408 544.84106445]
[-205.47119141 556.68072510]
[-221.25062561 557.56665039]
[-232.97895813 546.97314453]
[-233.69796753 531.18524170]
[-222.98109436 519.56958008]
[-207.18644714 519.01751709]
[-204.39729309 504.38638306]
[-189.40533447 499.33154297]
[-179.35095215 488.20007324]
[-169.29658508 477.06860352]
[-159.24221802 465.93713379]
[-149.45156860 454.57299805]
[-139.93000793 442.98251343]
[-130.40844727 431.39199829]
[-120.88687897 419.80148315]
[-111.36531830 408.21096802]
[-101.84375763 396.62048340]
[-100.24562073 385.96173096]
[-89.77252960 379.89614868]
[-81.77079010 367.20867920]
[-80.86094666 359.86810303]
[-73.54353333 354.38681030]
[-65.34447479 341.82592773]
[-57.14542007 329.26507568]
[-60.44980621 314.78692627]
[-52.31373215 301.93161011]
[-37.10531616 298.56384277]
[-28.90626144 286.00296021]
[-28.42863464 271.11602783]
[-14.40626049 263.78909302]
[-6.20720339 251.22824097]
[1.99185324 238.66737366]
[10.19091034 226.10649109]
[18.38996696 213.54562378]
[26.58902359 200.98475647]
[27.06665039 186.09780884]
[41.08902359 178.77090454]
[36.92945480 162.47937012]
[46.01521301 147.93168640]
[63.14109421 144.38368225]
[71.14282990 131.69619751]
[79.14456940 119.00872040]
[87.14630890 106.32124329]
[87.88434601 92.35890198]
[100.16620636 85.67701721]
[108.16794586 72.98954010]
[116.16968536 60.30205917]
[124.17142487 47.61457825]
[124.37336731 42.38245773]
[126.36710358 38.17516327]
[129.46020508 35.50448990]
[132.85739136 34.53226852]
[141.44503784 22.23379135]
[150.03266907 9.93531513]
[150.47962952 4.71841240]
[152.66838074 0.60919285]
[155.88325500 -1.91356456]
[159.32229614 -2.72548389]
[168.47694397 -14.60792065]
[177.63159180 -26.49035835]
[186.78625488 -38.37279510]
[195.94090271 -50.25523376]
[205.09556580 -62.13766861]
[204.21470642 -75.01103210]
[212.09097290 -84.72071075]
[224.07527161 -86.40171814]
[233.41452026 -98.13962555]
[242.75376892 -109.87753296]
[252.09301758 -121.61544037]
[261.43225098 -133.35334778]
[270.77151489 -145.09124756]
[269.17788696 -160.58634949]
[278.81643677 -172.35720825]
[293.59848022 -173.78099060]
[296.13604736 -189.39736938]
[310.11489868 -194.53942871]
[313.01254272 -203.21081543]
[319.69299316 -206.38630676]
[329.21453857 -217.97682190]
[338.73611450 -229.56732178]
[348.25765991 -241.15783691]
[351.03900146 -256.73263550]
[365.09652710 -261.65560913]
[374.61807251 -273.24612427]
[384.13964844 -284.83660889]
[393.66119385 -296.42712402]
[403.18276978 -308.01763916]
[412.70431519 -319.60815430]
[422.22589111 -331.19863892]
[417.50564575 -342.78390503]
[418.15841675 -355.20449829]
[423.99890137 -366.10385132]
[433.86325073 -373.44009399]
[445.84063721 -375.86868286]
[457.64318848 -372.98840332]
[467.52233887 -384.27566528]
[477.40151978 -395.56292725]
[487.28067017 -406.85015869]
[483.71014404 -421.95086670]
[489.72851562 -436.25326538]
[503.02160645 -444.25781250]
[518.47796631 -442.88662720]
[530.15435791 -432.66690063]
[533.56085205 -417.52835083]
[527.38769531 -403.29208374]
[514.00854492 -395.43222046]
[498.56793213 -396.97100830]
[488.68875122 -385.68374634]
[478.80960083 -374.39651489]
[468.93041992 -363.10925293]
[473.64328003 -346.09643555]
[467.14874268 -329.51205444]
[451.86895752 -320.05838013]
[433.81637573 -321.67709351]
[424.29483032 -310.08657837]
[414.77325439 -298.49606323]
[405.25170898 -286.90557861]
[395.73013306 -275.31506348]
[386.20858765 -263.72454834]
[376.68701172 -252.13404846]
[374.58673096 -237.38825989]
[359.84817505 -231.63627625]
[350.32659912 -220.04576111]
[340.80505371 -208.45526123]
[331.28347778 -196.86474609]
[321.85278320 -185.20018005]
[319.98324585 -170.42338562]
[305.33636475 -164.44174194]
[307.27047729 -149.71778870]
[297.96636963 -137.68084717]
[282.50942993 -135.75199890]
[273.17016602 -124.01409149]
[263.83093262 -112.27619171]
[254.49166870 -100.53828430]
[245.15242004 -88.80037689]
[235.81317139 -77.06246948]
[234.16014099 -59.59496689]
[216.97799683 -52.98301697]
[207.82334900 -41.10057831]
[198.66868591 -29.21814156]
[189.51403809 -17.33570480]
[180.35937500 -5.45326710]
[171.20472717 6.42917013]
[162.33114624 18.52295113]
[153.74351501 30.82142639]
[145.15586853 43.11990356]
[136.85890198 55.61631775]
[128.85716248 68.30379486]
[120.85543060 80.99127960]
[112.85369110 93.67875671]
[112.11565399 107.64109802]
[99.83379364 114.32298279]
[91.83205414 127.01045990]
[83.83031464 139.69793701]
[75.82857513 152.38542175]
[80.29684448 165.09683228]
[76.67852020 177.87358093]
[66.51107788 186.10945129]
[53.64989471 186.96995544]
[52.58581543 202.75534058]
[39.14989471 209.18380737]
[30.95083809 221.74467468]
[22.75177956 234.30555725]
[14.55272388 246.86642456]
[6.35366726 259.42730713]
[-1.84538949 271.98815918]
[-2.90946722 287.77355957]
[-16.34539032 294.20202637]
[-24.54444695 306.76287842]
[-21.50685120 322.04067993]
[-30.00079346 334.66238403]
[-44.58454895 337.46411133]
[-52.78360367 350.02499390]
[-60.98266220 362.58584595]
[-69.08330536 375.21041870]
[-77.08504486 387.89788818]
[-62.57882690 384.08087158]
[-48.19614029 388.33978271]
[-38.10704803 399.43978882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[15 32]
[16 31]
[17 30]
[18 29]
[20 27]
[40 197]
[41 196]
[43 195]
[44 194]
[45 193]
[48 190]
[49 189]
[51 187]
[52 186]
[53 185]
[54 184]
[55 183]
[56 182]
[58 180]
[61 176]
[62 175]
[63 174]
[64 173]
[66 171]
[67 170]
[68 169]
[69 168]
[73 167]
[74 166]
[75 165]
[79 164]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[92 152]
[95 149]
[97 147]
[99 146]
[100 145]
[101 144]
[102 143]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[116 131]
[117 130]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
