%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCCGGCGAGGAAAUACAUGCACUGGCUGAGAAUCGCCCGCGCCAGGGCGCAACGCCACAAGGUGUAGGGAGUGUGCGGGGUGGGGCGAAAGGGGACCCAAGAGUCCCUGUGGCUCGGAGUGCCGGGCCGUCGGUUCUUCAUUCCUGCCCUCGGGGCAGACGGAGUGACCCCGGCCCCCACUCCCCGCCCCGACC\
) } def
/len { sequence length } bind def

/coor [
[128.65820312 138.09452820]
[121.11268616 145.16949463]
[111.84125519 150.68475342]
[101.18125916 154.22621155]
[89.56757355 155.45581055]
[77.51490784 154.13406372]
[69.20610809 166.62261963]
[60.89730453 179.11116028]
[52.58850479 191.59971619]
[51.38615417 207.37516785]
[37.89442062 213.68565369]
[29.58561897 226.17420959]
[37.41077042 239.27877808]
[38.76657104 254.48156738]
[33.38383484 268.76403809]
[22.33130074 279.29037476]
[7.80345964 283.97061157]
[-7.31517410 281.87545776]
[-20.02278519 273.42092896]
[-27.79627037 260.28564453]
[-29.09219360 245.07763672]
[-23.65325356 230.81648254]
[-12.55935287 220.33372498]
[1.98680532 215.71073914]
[17.09707069 217.86540222]
[25.40587234 205.37686157]
[26.01391983 190.49467468]
[40.09995651 183.29090881]
[48.40875626 170.80236816]
[56.71755600 158.31381226]
[65.02635956 145.82527161]
[60.97155380 139.51586914]
[51.47634888 151.12797546]
[37.49840546 145.68580627]
[38.35480881 130.71028137]
[52.86194229 126.89706421]
[48.80713272 120.58766174]
[33.99555206 122.95767975]
[19.18396759 125.32770538]
[4.37238455 127.69772339]
[-10.43919945 130.06774902]
[-19.50426292 143.01379395]
[-35.08275986 145.67575073]
[-47.93224335 136.47431946]
[-50.42934036 120.86854553]
[-41.09257507 108.11706543]
[-25.46127510 105.78509521]
[-12.80922031 115.25615692]
[2.00236344 112.88613892]
[16.81394577 110.51612091]
[31.62553024 108.14609528]
[46.43711472 105.77607727]
[47.26839828 98.32228851]
[48.93097305 83.41471100]
[49.76226044 75.96092224]
[35.83673859 70.38598633]
[21.91122055 64.81105042]
[7.98570251 59.23611069]
[-5.93981647 53.66117477]
[-22.08620262 56.52932358]
[-32.43479156 43.80773926]
[-26.33984375 28.58329773]
[-10.07131863 26.51759720]
[-0.36487976 39.73565674]
[13.56063938 45.31059265]
[27.48615837 50.88552856]
[41.41167831 56.46046829]
[55.33719635 62.03540421]
[98.74540710 53.44104767]
[125.06951904 76.24937439]
[137.93927002 68.54421234]
[150.80902100 60.83905029]
[156.57217407 53.73809433]
[163.94465637 53.11560059]
[176.93502808 45.61560059]
[189.92541504 38.11560059]
[195.80052185 31.10697556]
[203.18193054 30.60153389]
[209.16749573 23.68700409]
[216.55599976 23.29873848]
[229.77780151 16.21467209]
[242.99960327 9.13060665]
[256.22140503 2.04654074]
[269.44320679 -5.03752518]
[282.66500854 -12.12159157]
[295.88681030 -19.20565796]
[309.10861206 -26.28972435]
[322.33041382 -33.37379074]
[307.39038086 -34.71362686]
[298.30291748 -46.64754105]
[300.98449707 -61.40589905]
[313.68923950 -69.38021088]
[328.14566040 -65.37875366]
[334.94183350 -52.00714874]
[336.60440063 -66.91472626]
[338.26696777 -81.82230377]
[339.92953491 -96.72988129]
[341.59213257 -111.63745880]
[343.25469971 -126.54503632]
[333.19235229 -138.73210144]
[334.77792358 -154.45666504]
[347.07067871 -164.38958740]
[362.77758789 -162.63787842]
[372.58001709 -150.24076843]
[370.66232300 -134.55325317]
[358.16226196 -124.88246155]
[356.49969482 -109.97488403]
[354.83712769 -95.06730652]
[353.17456055 -80.15972900]
[351.51199341 -65.25215149]
[349.84939575 -50.34457397]
[356.67166138 -47.22896194]
[370.31613159 -40.99773788]
[377.13836670 -37.88212585]
[387.31600952 -48.90100098]
[397.49365234 -59.91987610]
[407.67129517 -70.93875122]
[417.84893799 -81.95762634]
[428.02658081 -92.97650146]
[438.20422363 -103.99537659]
[441.28735352 -120.10209656]
[456.86447144 -125.22904968]
[468.91116333 -114.10207367]
[465.03482056 -98.16764069]
[449.22308350 -93.81774139]
[439.04544067 -82.79885864]
[428.86779785 -71.77998352]
[418.69015503 -60.76111221]
[408.51251221 -49.74223709]
[398.33486938 -38.72335815]
[388.15725708 -27.70448494]
[392.83773804 -13.45341682]
[407.56668091 -10.61464882]
[422.29559326 -7.77587986]
[437.02453613 -4.93711138]
[451.75347900 -2.09834266]
[460.12344360 -10.55901241]
[471.42410278 -13.88985062]
[482.81063843 -11.37313175]
[491.47467041 -3.74821830]
[495.33670044 7.00051880]
[509.96813965 10.30517673]
[524.59960938 13.60983467]
[539.23101807 16.91449356]
[553.86248779 20.21915054]
[568.49395752 23.52380943]
[583.12536621 26.82846642]
[597.83135986 29.78399467]
[612.60345459 32.38871765]
[627.37554932 34.99343872]
[642.14770508 37.59816360]
[656.91979980 40.20288467]
[673.56823730 36.99884033]
[681.25579834 52.10968018]
[668.86364746 63.67992020]
[654.31506348 54.97500229]
[639.54296875 52.37027740]
[624.77081299 49.76555634]
[609.99871826 47.16083145]
[595.22662354 44.55611038]
[592.13763428 46.27700424]
[588.05908203 46.58098984]
[583.66888428 45.01821518]
[579.82073975 41.45991516]
[565.18927002 38.15525436]
[550.55786133 34.85059738]
[535.92639160 31.54594040]
[521.29492188 28.24128151]
[506.66348267 24.93662453]
[492.03204346 21.63196564]
[477.18078613 32.32186508]
[458.91687012 28.71027184]
[448.91470337 12.63058758]
[434.18576050 9.79181957]
[419.45684814 6.95305061]
[404.72790527 4.11428165]
[389.99896240 1.27551317]
[329.41448975 -20.15198898]
[316.19268799 -13.06792355]
[302.97088623 -5.98385715]
[289.74908447 1.10020900]
[276.52728271 8.18427467]
[263.30548096 15.26834106]
[250.08367920 22.35240746]
[236.86187744 29.43647385]
[223.64007568 36.52053833]
[210.47488403 43.70927429]
[197.42541504 51.10598373]
[184.43502808 58.60598373]
[171.44465637 66.10597992]
[158.51417542 73.70880127]
[145.64442444 81.41396332]
[132.77467346 89.11912537]
[136.48970032 95.86594391]
[138.73748779 103.68788147]
[139.23410034 112.25029755]
[137.77462769 121.14807129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[11 26]
[12 25]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[70 193]
[71 192]
[72 191]
[74 190]
[75 189]
[76 188]
[78 187]
[80 186]
[81 185]
[82 184]
[83 183]
[84 182]
[85 181]
[86 180]
[87 179]
[88 178]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[132 177]
[133 176]
[134 175]
[135 174]
[136 173]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
