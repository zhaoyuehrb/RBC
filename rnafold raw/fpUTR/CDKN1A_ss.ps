%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUAGGAGACAGGAGACCUCUAAAGACCCCAGAAAUAAAGGAUGACAAGCAGAGAGCCCCGGGCAGGAGGCAAAAGUCCUGUGUUCCAACUAUAGUCAUUUCUUUGCUGCAUGAUCUGAGUUAGGUCACCAGACUUCUCUGAGCCCCAGUUUCCCCAGCAGUGUAUACGGGCU\
) } def
/len { sequence length } bind def

/coor [
[272.48577881 422.77310181]
[269.37640381 412.53723145]
[272.49389648 402.07406616]
[264.61080933 389.31253052]
[258.40036011 385.26119995]
[256.70324707 376.25210571]
[249.04920959 363.35186768]
[241.39515686 350.45166016]
[233.74110413 337.55145264]
[226.08706665 324.65124512]
[212.93852234 317.65371704]
[212.55090332 301.83724976]
[199.40235901 294.83972168]
[199.01473999 279.02328491]
[191.36068726 266.12307739]
[178.21215820 259.12554932]
[177.82452393 243.30908203]
[170.17048645 230.40887451]
[162.51643372 217.50865173]
[154.86238098 204.60844421]
[147.20832825 191.70823669]
[131.07508850 192.30030823]
[116.75785828 184.63964844]
[108.20058441 170.72935486]
[107.81435394 154.30844116]
[115.79882050 139.84698486]
[107.91573334 127.08544922]
[100.03264618 114.32390594]
[87.81362915 107.52779388]
[87.20581055 93.55918121]
[69.04784393 84.85303497]
[69.23229980 65.53652191]
[60.89874649 53.06447601]
[52.56519318 40.59243011]
[47.82330322 38.25975418]
[44.77515411 34.68801117]
[43.60906982 30.73883247]
[44.14035416 27.22225189]
[36.48630524 14.32203770]
[28.83225441 1.42182410]
[21.17820358 -11.47838974]
[13.52415371 -24.37860298]
[5.87010336 -37.27881622]
[-1.78394711 -50.17903137]
[-9.55282497 -63.01041794]
[-17.43591309 -75.77195740]
[-25.31900024 -88.53350067]
[-33.20208740 -101.29504395]
[-51.36005402 -110.00118256]
[-51.17559814 -129.31770325]
[-59.50915146 -141.78974915]
[-74.75287628 -144.99391174]
[-83.02661133 -157.76104736]
[-79.87799072 -172.27386475]
[-87.27240753 -177.69296265]
[-88.24665833 -185.04373169]
[-96.35626984 -197.66253662]
[-104.46588135 -210.28134155]
[-112.57549286 -222.90014648]
[-118.43807220 -209.09324646]
[-132.83770752 -204.89201355]
[-145.20507812 -213.38012695]
[-146.46253967 -228.32731628]
[-135.68711853 -238.76237488]
[-120.78670502 -237.02516174]
[-127.73931122 -250.31655884]
[-134.69190979 -263.60797119]
[-141.64451599 -276.89935303]
[-148.59712219 -290.19076538]
[-155.54972839 -303.48214722]
[-170.91993713 -305.61196899]
[-182.07946777 -316.39364624]
[-184.73722839 -331.68142700]
[-177.87127686 -345.59683228]
[-164.12170410 -352.78909302]
[-148.77549744 -350.49267578]
[-137.73359680 -339.59054565]
[-135.24182129 -324.27484131]
[-142.25833130 -310.43475342]
[-135.30572510 -297.14337158]
[-128.35311890 -283.85195923]
[-121.40051270 -270.56054688]
[-114.44791412 -257.26916504]
[-107.49530792 -243.97776794]
[-99.95669556 -231.00975037]
[-91.84708405 -218.39094543]
[-83.73747253 -205.77214050]
[-75.62785339 -193.15333557]
[-67.40594482 -180.60742188]
[-52.79292679 -177.96255493]
[-44.16385269 -165.43284607]
[-47.03710938 -150.12330627]
[-38.70355606 -137.65126038]
[-28.50424957 -136.55764771]
[-20.43243599 -129.87716675]
[-17.32305527 -119.64128876]
[-20.44054604 -109.17813110]
[-12.55745888 -96.41658783]
[-4.67437124 -83.65504456]
[3.20871592 -70.89350891]
[9.41917515 -66.84217834]
[11.11626625 -57.83308029]
[18.77031708 -44.93286896]
[26.42436790 -32.03265381]
[34.07841873 -19.13244057]
[41.73246765 -6.23222637]
[49.38652039 6.66798735]
[57.04056931 19.56820107]
[65.03723907 32.25887680]
[73.37078857 44.73092270]
[81.70434570 57.20296860]
[91.90364838 58.29657364]
[99.97546387 64.97705841]
[103.08484650 75.21293640]
[99.96735382 85.67609406]
[112.18637085 92.47220612]
[112.79418945 106.44081879]
[120.67727661 119.20236206]
[128.56036377 131.96389771]
[142.51943970 130.82421875]
[155.54309082 135.79299927]
[165.10440063 145.84503174]
[169.37469482 158.97489929]
[167.57307434 172.59689331]
[160.10853577 184.05418396]
[167.76258850 196.95439148]
[175.41664124 209.85461426]
[183.07069397 222.75482178]
[190.72474670 235.65502930]
[204.42074585 243.57527161]
[204.26091003 258.46902466]
[211.91494751 271.36923218]
[225.61096191 279.28945923]
[225.45111084 294.18319702]
[239.14710999 302.10345459]
[238.98727417 316.99719238]
[246.64132690 329.89739990]
[254.29537964 342.79760742]
[261.94943237 355.69781494]
[269.60348511 368.59805298]
[277.37234497 381.42944336]
[285.25543213 394.19097900]
[303.41342163 402.89712524]
[303.22894287 422.21362305]
[311.56250000 434.68566895]
[319.89605713 447.15771484]
[328.22961426 459.62976074]
[336.56317139 472.10180664]
[350.84747314 467.24166870]
[365.90301514 466.24514771]
[380.70327759 469.18017578]
[394.23916626 475.84667969]
[405.58776855 485.79010010]
[413.97534180 498.33248901]
[418.82995605 512.61865234]
[419.82067871 527.67456055]
[416.87991333 542.47369385]
[410.20819092 556.00701904]
[400.26037598 567.35180664]
[387.71478271 575.73449707]
[373.42672729 580.58361816]
[358.37039185 581.56854248]
[343.57241821 578.62207031]
[330.04168701 571.94512939]
[318.70074463 561.99291992]
[310.32287598 549.44409180]
[305.47927856 535.15411377]
[304.50021362 520.09747314]
[307.45239258 505.30059814]
[314.13455200 491.77243042]
[324.09112549 480.43536377]
[315.75756836 467.96331787]
[307.42401123 455.49127197]
[299.09045410 443.01922607]
[290.75689697 430.54718018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 142]
[4 141]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[12 134]
[14 132]
[15 131]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[26 119]
[27 118]
[28 117]
[30 115]
[32 111]
[33 110]
[34 109]
[38 108]
[39 107]
[40 106]
[41 105]
[42 104]
[43 103]
[44 102]
[45 100]
[46 99]
[47 98]
[48 97]
[50 93]
[51 92]
[54 89]
[56 88]
[57 87]
[58 86]
[59 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
