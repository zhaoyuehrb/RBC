%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCCGGUGAAGGGAAAGGAAAUAGCUCUACGAGCGGCAUCCUGCCUGCGUUAGCGGCGGUGGAGGAGGAGGCAGAGAGGAGUGGAGGGCGGAGUAGACGGAGGAGGCUGCUGCAGAGAAGAAAGUGUCAGAGCCGGUUCGGCUUUAGAGUGUGGUGAAGGGUACUUUUCAUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[88.60827637 352.42358398]
[75.42598724 341.76226807]
[82.02141571 326.14379883]
[74.73300934 313.15423584]
[82.94721222 299.63250732]
[83.47070312 284.64166260]
[83.99419403 269.65078735]
[84.51769257 254.65992737]
[81.60064697 247.84631348]
[85.18340302 239.41265869]
[85.96843719 224.43321228]
[86.75347900 209.45376587]
[87.53852081 194.47431946]
[88.32355499 179.49488831]
[89.10859680 164.51544189]
[89.89363861 149.53599548]
[81.89856720 147.20478821]
[74.39467621 143.59266663]
[67.58558655 138.79766846]
[61.65606308 132.94990540]
[56.76699829 126.20803833]
[53.05105972 118.75502014]
[50.60908127 110.79308319]
[49.50732040 102.53827667]
[49.77567673 94.21459198]
[51.40686798 86.04789734]
[54.35663223 78.25979614]
[41.92106628 69.87190247]
[29.48550415 61.48400497]
[17.04994011 53.09611511]
[4.61437750 44.70822144]
[-11.15312767 43.40577316]
[-17.37787056 29.87426186]
[-31.89803123 35.01927185]
[-46.49294662 30.67854881]
[-55.62530899 18.71761513]
[-55.95944595 3.85066056]
[-71.72695160 2.54821467]
[-77.95169067 -10.98329830]
[-90.38726044 -19.37119102]
[-99.27882385 -21.58537674]
[-102.96490479 -28.01556778]
[-115.25218201 -36.61921310]
[-127.53946686 -45.22286224]
[-139.82675171 -53.82650757]
[-155.19532776 -51.28791046]
[-167.53381348 -60.18826675]
[-169.85926819 -74.85550690]
[-182.14654541 -83.45915222]
[-194.43382263 -92.06279755]
[-206.72111511 -100.66644287]
[-222.46348572 -102.24387360]
[-228.45112610 -115.88196564]
[-240.73840332 -124.48561096]
[-256.10699463 -121.94701385]
[-268.44546509 -130.84736633]
[-270.77093506 -145.51460266]
[-286.13949585 -142.97601318]
[-298.47799683 -151.87637329]
[-300.80343628 -166.54360962]
[-317.17843628 -167.43307495]
[-324.35330200 -182.17938232]
[-314.94714355 -195.61277771]
[-298.63619995 -193.91413879]
[-292.19979858 -178.83088684]
[-277.62173462 -181.66217041]
[-265.03814697 -173.11187744]
[-262.16726685 -157.80189514]
[-247.58923340 -160.63316345]
[-235.00561523 -152.08288574]
[-232.13475037 -136.77288818]
[-219.84747314 -128.16925049]
[-204.98396301 -127.20720673]
[-198.11746216 -112.95372772]
[-185.83018494 -104.35008240]
[-173.54290771 -95.74642944]
[-161.25561523 -87.14278412]
[-146.67756653 -89.97406769]
[-134.09396362 -81.42378235]
[-131.22309875 -66.11378479]
[-118.93581390 -57.51014328]
[-106.64853668 -48.90649414]
[-94.36125946 -40.30284882]
[-81.99936676 -31.80675507]
[-69.56379700 -23.41886139]
[-54.68576813 -22.71637344]
[-47.57155228 -8.58490276]
[-33.66197968 -13.84435654]
[-19.15095329 -9.85762119]
[-9.65895462 2.04848456]
[-8.98997688 17.43869781]
[5.88805294 18.14118576]
[13.00227070 32.27265549]
[25.43783379 40.66054916]
[37.87339783 49.04844284]
[50.30895996 57.43633652]
[62.74452591 65.82423401]
[81.27874756 53.03758621]
[103.52664185 49.56671143]
[125.07496643 56.10011673]
[141.64926147 71.34178925]
[155.13116455 64.76622009]
[168.61308289 58.19065094]
[182.09498596 51.61508560]
[184.99168396 38.44406509]
[194.80813599 29.48366737]
[207.80163574 27.84628487]
[219.19026184 33.90827179]
[232.78488159 27.56899643]
[246.37950134 21.22972298]
[259.97412109 14.89044952]
[266.45153809 8.40927696]
[273.86175537 8.56148529]
[287.56494141 2.46043587]
[301.26812744 -3.64061379]
[314.91754150 -9.86101246]
[328.51217651 -16.20028687]
[329.77081299 -31.50751877]
[338.52767944 -44.12549210]
[352.42712402 -50.66004181]
[367.73034668 -49.35340118]
[380.32080078 -40.55705261]
[386.81176758 -26.63717079]
[385.45715332 -11.33813095]
[376.62139893 1.22470105]
[362.68121338 7.67198563]
[347.38650513 6.26943541]
[334.85144043 -2.60566974]
[321.25680542 3.73360419]
[316.51016235 9.42602634]
[307.36917114 10.06256771]
[293.66598511 16.16361809]
[279.96279907 22.26466751]
[266.31338501 28.48506546]
[252.71878052 34.82434082]
[239.12416077 41.16361237]
[225.52954102 47.50288773]
[220.46980286 63.52828217]
[205.08854675 71.09701538]
[188.67054749 65.09699249]
[175.18864441 71.67256165]
[161.70672607 78.24813080]
[148.22482300 84.82369995]
[150.32368469 104.84561920]
[144.44302368 124.09919739]
[156.42254639 133.12641907]
[168.40208435 142.15365601]
[180.38162231 151.18087769]
[192.36114502 160.20809937]
[207.16027832 155.54273987]
[221.86453247 160.49899292]
[230.81982422 173.17109680]
[230.58268738 188.68637085]
[221.24427795 201.07885742]
[206.39541626 205.58340454]
[191.74578857 200.46791077]
[182.92848206 187.69941711]
[183.33392334 172.18763733]
[171.35440063 163.16041565]
[159.37486267 154.13317871]
[147.39532471 145.10595703]
[135.41580200 136.07873535]
[130.20053101 140.54481506]
[124.42820740 144.26303101]
[118.20530701 147.16482544]
[111.64660645 149.19665527]
[104.87307739 150.32102966]
[104.08804321 165.30047607]
[103.30300140 180.27992249]
[102.51795959 195.25936890]
[101.73291779 210.23881531]
[100.94788361 225.21824646]
[100.16284180 240.19769287]
[99.50855255 255.18341064]
[98.98506165 270.17428589]
[98.46157074 285.16513062]
[97.93807220 300.15600586]
[105.18904114 314.21780396]
[97.01228333 326.66729736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[5 177]
[6 176]
[7 175]
[8 174]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[27 97]
[28 96]
[29 95]
[30 94]
[31 93]
[33 91]
[37 87]
[39 85]
[40 84]
[42 83]
[43 82]
[44 81]
[45 80]
[48 77]
[49 76]
[50 75]
[51 74]
[53 72]
[54 71]
[57 68]
[60 65]
[101 143]
[102 142]
[103 141]
[104 140]
[108 137]
[109 136]
[110 135]
[111 134]
[113 133]
[114 132]
[115 131]
[116 129]
[117 128]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
