%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGUUCUAAAGACGAAGGGGAACUCCCUAGUGCUACAGGCUGUUUCAGGAAGCCAAUUAAUUUUGUACACAUAAUACUUAAUUACCUUCUAAUAAUUGGAGCAGAAG\
) } def
/len { sequence length } bind def

/coor [
[128.74388123 379.45205688]
[138.29907227 366.56494141]
[137.43489075 351.58987427]
[136.57070923 336.61477661]
[135.70652771 321.63967896]
[134.84234619 306.66461182]
[133.97816467 291.68951416]
[133.11398315 276.71441650]
[132.24980164 261.73934937]
[131.38563538 246.76425171]
[115.82474518 239.69680786]
[105.86118317 225.70280457]
[104.25801849 208.51080322]
[111.53616333 192.75614929]
[125.80997467 182.73115540]
[124.08448792 167.83071899]
[122.35900116 152.93029785]
[120.63351440 138.02987671]
[118.90802002 123.12944794]
[61.54534149 117.60609436]
[47.50833893 112.31812286]
[33.47133636 107.03015900]
[19.43433380 101.74219513]
[5.39733267 96.45423126]
[-8.86171532 102.72457886]
[-23.02190208 97.16187286]
[-28.91185188 83.52940369]
[-42.94885254 78.24143982]
[-56.98585510 72.95347595]
[-69.87200165 81.59793854]
[-85.37690735 80.98352814]
[-97.53862000 71.34649658]
[-101.68070984 56.39247513]
[-96.21045685 41.87159729]
[-83.23129272 33.36742783]
[-67.73396301 34.15000153]
[-55.67751312 43.91839981]
[-51.69789124 58.91647339]
[-37.66088867 64.20443726]
[-23.62388611 69.49240112]
[-10.20325947 63.13454437]
[4.10758591 68.29733276]
[10.68529797 82.41722870]
[24.72229958 87.70519257]
[38.75930023 92.99315643]
[52.79630280 98.28112030]
[66.83330536 103.56909180]
[72.67774200 98.86881256]
[90.21103668 84.76798248]
[88.05686188 69.92346954]
[79.79851532 55.11684418]
[91.74035645 43.08235931]
[106.61035919 51.22602463]
[102.90137482 67.76929474]
[105.05554962 82.61380768]
[111.86549377 85.75621033]
[124.11804962 77.10319519]
[125.48537445 92.04101562]
[132.29531860 95.18341827]
[144.98796082 87.18986511]
[157.68060303 79.19631195]
[170.37324524 71.20276642]
[183.06588745 63.20921326]
[186.68072510 48.05762100]
[199.66673279 40.13183594]
[214.08918762 43.67140961]
[226.78182983 35.67785645]
[239.47447205 27.68430710]
[241.41683960 12.16782475]
[252.91368103 1.56798840]
[268.53656006 0.88971668]
[280.90878296 10.45326900]
[284.18862915 25.74302673]
[276.82739258 39.53963852]
[262.30087280 45.32875824]
[247.46801758 40.37694931]
[234.77537537 48.37049866]
[222.08273315 56.36404800]
[219.04403687 70.90027618]
[206.28576660 79.18768311]
[191.05943298 75.90185547]
[178.36679077 83.89540100]
[165.67414856 91.88895416]
[152.98150635 99.88250732]
[140.28886414 107.87605286]
[133.80844116 121.40396118]
[135.53393555 136.30438232]
[137.25942993 151.20480347]
[138.98490906 166.10523987]
[140.71040344 181.00566101]
[153.15028381 185.05293274]
[163.06454468 193.51513672]
[168.97247314 205.08111572]
[170.00985718 217.97990417]
[166.05517578 230.25175476]
[157.74263000 240.04600525]
[146.36071777 245.90008545]
[147.22489929 260.87515259]
[148.08908081 275.85025024]
[148.95324707 290.82534790]
[149.81742859 305.80041504]
[150.68161011 320.77551270]
[151.54579163 335.75057983]
[152.40997314 350.72567749]
[153.27415466 365.70077515]
[164.24835205 377.40316772]
[161.79882812 393.25811768]
[147.80465698 401.10305786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 105]
[3 104]
[4 103]
[5 102]
[6 101]
[7 100]
[8 99]
[9 98]
[10 97]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[27 40]
[28 39]
[29 38]
[49 55]
[50 54]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[66 78]
[67 77]
[68 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
