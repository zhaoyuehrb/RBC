%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUCGCGGCCUCUCAGACGAGGGUGGGUUAGCGGGGGCAGCUCCCAACCCCCGUCCUGGACCCACAAAUCACCUCGACCCCUGGCCCACCCCGGCCGUCACCGAGAACGGUCCCCUAGGGUGCCUAGGGACUUCCGGAGCCCGACCGGAUCCGGAAGCUUCUGAGAGCGAGGGGGUGGGGCCGAAAAUCAAAAAAAGCGCGGCGAAAGCUAAAGGCCGGCGCACGCUGGGCGGUGGUGGUCCCUAAGCCGGG\
CCGCGGCCGGUGCA\
) } def
/len { sequence length } bind def

/coor [
[-40.68287659 712.86614990]
[-40.69967270 697.06188965]
[-29.47725105 685.93383789]
[-29.65177917 670.93487549]
[-29.82630920 655.93585205]
[-30.17534256 640.93994141]
[-30.69883537 625.94909668]
[-31.22232819 610.95819092]
[-31.74582100 595.96734619]
[-32.26931381 580.97650146]
[-32.79280472 565.98559570]
[-33.31629944 550.99475098]
[-33.83979034 536.00390625]
[-34.36328125 521.01306152]
[-49.03549576 517.89434814]
[-55.61106491 531.37628174]
[-62.18663025 544.85815430]
[-60.50354004 561.17071533]
[-73.94589233 570.56408691]
[-88.68534851 563.37518311]
[-89.55921936 546.99932861]
[-75.66854095 538.28259277]
[-69.09297180 524.80072021]
[-62.51740646 511.31878662]
[-62.58675766 507.00637817]
[-62.19188309 502.86840820]
[-75.51713562 509.75588989]
[-88.84239197 516.64337158]
[-102.16764832 523.53088379]
[-115.49289703 530.41839600]
[-128.81816101 537.30590820]
[-142.14340210 544.19335938]
[-152.65406799 562.89367676]
[-173.21649170 560.91644287]
[-186.29324341 568.26483154]
[-199.37001038 575.61315918]
[-212.44677734 582.96148682]
[-225.52354431 590.30987549]
[-238.60031128 597.65820312]
[-251.67707825 605.00653076]
[-251.77555847 620.36511230]
[-259.55395508 633.60870361]
[-272.91995239 641.17480469]
[-288.27813721 641.02813721]
[-301.49725342 633.20831299]
[-309.02142334 619.81866455]
[-308.82666016 604.46099854]
[-300.96539307 591.26641846]
[-287.55224609 583.78430176]
[-272.19525146 584.02716064]
[-259.02542114 591.92974854]
[-245.94865417 584.58142090]
[-232.87190247 577.23309326]
[-219.79513550 569.88476562]
[-206.71836853 562.53637695]
[-193.64160156 555.18804932]
[-180.56483459 547.83972168]
[-179.60238647 539.07531738]
[-174.65611267 531.61120605]
[-166.72033691 527.17517090]
[-157.49697876 526.86248779]
[-149.03089905 530.86810303]
[-135.70564270 523.98065186]
[-122.38039398 517.09313965]
[-109.05514526 510.20562744]
[-95.72988892 503.31814575]
[-82.40463257 496.43063354]
[-69.07938385 489.54315186]
[-67.06784058 463.27935791]
[-48.11900711 444.73104858]
[-21.46817589 443.26165771]
[-14.11983013 430.18487549]
[-6.77148438 417.10812378]
[0.57686132 404.03134155]
[7.92520714 390.95458984]
[15.27355289 377.87783813]
[22.54569626 364.75851440]
[29.74139404 351.59713745]
[36.93709183 338.43576050]
[37.38678360 331.08560181]
[44.29384995 325.16381836]
[51.64219666 312.08706665]
[58.99053955 299.01028442]
[54.00297546 279.36322021]
[67.28284454 264.82635498]
[67.45737457 249.82736206]
[67.63190460 234.82838440]
[67.80643463 219.82939148]
[67.98095703 204.83041382]
[68.15548706 189.83143616]
[68.24275208 174.83168030]
[68.24275208 159.83168030]
[68.24275208 144.83168030]
[68.24275208 129.83168030]
[68.24275208 114.83168030]
[63.19454193 100.70668793]
[53.68707657 89.10461426]
[44.17961502 77.50254059]
[34.67214966 65.90046692]
[25.16468430 54.29838943]
[15.65721989 42.69631577]
[0.17481083 43.73295975]
[-12.94208813 35.44280624]
[-18.64976120 21.01359749]
[-14.75349140 5.99365425]
[-2.75147462 -3.84154844]
[12.74126911 -4.71017408]
[25.76746368 3.72178149]
[31.31827164 18.21205902]
[27.25929451 33.18885040]
[36.76675797 44.79092789]
[46.27422333 56.39300156]
[55.78168869 67.99507141]
[65.28915405 79.59714508]
[74.79661560 91.19921875]
[88.16171265 84.38936615]
[84.36378479 69.87813568]
[80.56585693 55.36690903]
[76.76792908 40.85567856]
[72.97000122 26.34445190]
[69.17207336 11.83322239]
[65.37415314 -2.67800546]
[55.51443481 -16.47011948]
[66.03810883 -29.76254845]
[81.72430420 -23.32985497]
[79.88537598 -6.47593307]
[83.68330383 8.03529549]
[87.48123169 22.54652405]
[91.27915955 37.05775070]
[95.07708740 51.56898117]
[98.87501526 66.08020782]
[102.67294312 80.59143829]
[110.17243195 80.67870331]
[125.17141724 80.85323334]
[132.67091370 80.94049835]
[136.80546570 66.52156830]
[140.94003296 52.10264206]
[145.07460022 37.68371964]
[149.20915222 23.26479340]
[153.34371948 8.84586716]
[157.47827148 -5.57305813]
[153.84454346 -20.97132492]
[164.79022217 -31.07287407]
[168.92478943 -45.49179840]
[162.43585205 -60.16399384]
[169.98867798 -74.31794739]
[185.78938293 -77.09595490]
[197.71701050 -66.36697388]
[196.62171936 -50.36135483]
[183.34371948 -41.35723877]
[179.20915222 -26.93831444]
[183.13861084 -12.57138538]
[171.89720154 -1.43849766]
[167.76263428 12.98042774]
[163.62808228 27.39935303]
[159.49351501 41.81827927]
[155.35896301 56.23720551]
[151.22439575 70.65612793]
[147.08984375 85.07505798]
[160.29286194 92.19406128]
[170.06771851 80.81636047]
[179.84257507 69.43865204]
[189.61743164 58.06094742]
[192.11944580 41.85379028]
[207.50213623 36.17005157]
[219.94111633 46.85667419]
[216.64021301 62.92017746]
[200.99513245 67.83580780]
[191.22027588 79.21350861]
[181.44541931 90.59121704]
[171.67056274 101.96891785]
[148.14965820 134.72953796]
[116.06404114 144.20985413]
[91.45086670 133.63868713]
[83.24275208 114.83168030]
[83.24275208 129.83168030]
[83.24275208 144.83168030]
[83.24275208 159.83168030]
[83.24275208 174.83168030]
[86.36321259 183.37789917]
[83.15447235 190.00596619]
[82.97994232 205.00494385]
[82.80541229 220.00392151]
[82.63088989 235.00291443]
[82.45635986 250.00189209]
[82.28182983 265.00088501]
[89.62588501 251.92170715]
[90.69348145 236.95974731]
[98.00164795 223.86048889]
[110.17274475 215.09324646]
[124.91239929 212.31072998]
[139.44207764 216.03746033]
[151.02279663 225.57092285]
[157.47149658 239.11398315]
[157.57254028 254.11363220]
[151.30688477 267.74234009]
[139.85565186 277.43093872]
[125.37749481 281.35308838]
[110.60157013 278.76934814]
[96.13420868 282.73110962]
[110.72988129 286.19036865]
[125.32556152 289.64959717]
[139.92123413 293.10882568]
[154.53678894 296.48309326]
[169.17172241 299.77227783]
[183.80665588 303.06146240]
[193.66941833 291.35742188]
[207.84597778 285.58822632]
[223.07865906 287.07955933]
[235.86709595 295.48873901]
[243.27261353 308.88339233]
[243.59346008 324.18554688]
[236.75592041 337.87884521]
[224.33122253 346.81671143]
[209.17443848 348.94525146]
[194.76850891 343.77532959]
[184.42381287 332.49502563]
[180.51747131 317.69641113]
[165.88253784 314.40722656]
[151.24760437 311.11804199]
[144.05821228 312.71176147]
[136.46199036 307.70449829]
[121.86631775 304.24526978]
[107.27064514 300.78604126]
[92.67497253 297.32678223]
[104.59642792 306.43057251]
[105.91580200 321.37243652]
[95.77410889 332.42440796]
[80.77414703 332.39105225]
[70.68170929 321.29409790]
[72.06730652 306.35864258]
[64.71896362 319.43539429]
[57.37061691 332.51217651]
[50.09847260 345.63146973]
[42.90277481 358.79284668]
[35.70707703 371.95422363]
[34.34531403 380.94982910]
[28.35031891 385.22616577]
[21.00197411 398.30294800]
[13.65362740 411.37969971]
[6.30528164 424.45648193]
[-1.04306400 437.53323364]
[-8.39140987 450.60998535]
[-2.49126458 456.11294556]
[2.18549299 462.82296753]
[5.39236403 470.46752930]
[6.94366789 478.72399902]
[6.72469425 487.23309326]
[4.69880915 495.61459351]
[0.91112608 503.48434448]
[-4.51152754 510.47189331]
[-11.36441994 516.23767090]
[-19.37241936 520.48956299]
[-18.84892845 535.48040771]
[-18.32543564 550.47125244]
[-17.80194283 565.46215820]
[-17.27845001 580.45300293]
[-16.75495720 595.44384766]
[-16.23146629 610.43469238]
[-15.70797348 625.42559814]
[-15.18448067 640.41644287]
[-12.03818130 646.16613770]
[-12.21490765 651.80181885]
[-14.82732391 655.76135254]
[-14.65279484 670.76031494]
[-14.47826576 685.75933838]
[-2.99994636 696.62316895]
[-2.64898849 712.42358398]
[-13.63360882 723.78637695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 266]
[4 265]
[5 264]
[6 261]
[7 260]
[8 259]
[9 258]
[10 257]
[11 256]
[12 255]
[13 254]
[14 253]
[15 24]
[16 23]
[17 22]
[26 68]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[71 243]
[72 242]
[73 241]
[74 240]
[75 239]
[76 238]
[77 236]
[78 235]
[79 234]
[81 233]
[82 232]
[83 231]
[85 186]
[86 185]
[87 184]
[88 183]
[89 182]
[90 181]
[91 179]
[92 178]
[93 177]
[94 176]
[95 175]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[135 159]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[143 151]
[144 150]
[160 171]
[161 170]
[162 169]
[163 168]
[200 225]
[201 224]
[202 223]
[203 222]
[204 220]
[205 219]
[206 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
