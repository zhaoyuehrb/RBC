%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGGCAGCGCUUGCAGUCGGGCUACGGAGGCCGGGUUGCCAGAUUACGGGAAAGCCAUUUAAGAAGUUCCUGGAAUAAUAUUAGUCAGAGUAAUAUAGGAUCUGCAGGAAGUGUCUCAAGAUAGUUGGAAAAGAAGAAUUUCUAGACUCUUCAUCAAGAUCUUCAUUUAUACAGCUGUUAAAUCCAAGGCUACUUUGGUGAAAGC\
) } def
/len { sequence length } bind def

/coor [
[146.25410461 209.30148315]
[149.69241333 201.75254822]
[154.80952454 195.20385742]
[161.32778931 190.02268982]
[156.43473816 175.84318542]
[151.54170227 161.66369629]
[146.64866638 147.48419189]
[141.75561523 133.30470276]
[136.86257935 119.12519836]
[131.96952820 104.94570160]
[111.80517578 130.51885986]
[79.21225739 125.75194550]
[67.98459625 135.69879150]
[62.78579330 150.64144897]
[48.12851715 153.28973389]
[36.90085602 163.23657227]
[25.67319298 173.18341064]
[14.44553185 183.13024902]
[3.21787119 193.07708740]
[-8.00979042 203.02394104]
[-13.20858860 217.96659851]
[-27.86586761 220.61488342]
[-39.09352875 230.56172180]
[-50.32118988 240.50856018]
[-61.54885101 250.45539856]
[-63.94885635 266.31793213]
[-77.91846466 274.20648193]
[-92.74138641 268.06967163]
[-97.04675293 252.61512756]
[-87.53184509 239.69822693]
[-71.49568939 239.22773743]
[-60.26802826 229.28089905]
[-49.04036713 219.33406067]
[-37.81270599 209.38722229]
[-33.41698456 195.15602112]
[-17.95663071 191.79627991]
[-6.72896862 181.84942627]
[4.49869251 171.90258789]
[15.72635365 161.95574951]
[26.95401573 152.00891113]
[38.18167496 142.06207275]
[42.57739639 127.83087921]
[58.03775406 124.47112274]
[69.26541138 114.52428436]
[66.00653076 99.88257599]
[51.61995316 95.63682556]
[37.85841751 102.93462372]
[23.32886124 98.42388916]
[16.45633698 85.25939178]
[2.06975937 81.01364136]
[-12.31681919 76.76789856]
[-26.70339775 72.52215576]
[-41.08997726 68.27640533]
[-55.47655487 64.03066254]
[-67.76819611 73.31622314]
[-82.99263763 73.58050537]
[-95.30776215 64.93170929]
[-100.11119080 50.85815048]
[-113.87110901 58.63247681]
[-129.07553101 54.31958771]
[-136.70394897 40.47824097]
[-132.23054504 25.32026482]
[-118.30932617 17.83861732]
[-103.19949341 22.47202682]
[-95.86544037 36.47157288]
[-84.19046783 27.26109314]
[-69.15279388 26.68461990]
[-56.51132584 35.17264938]
[-51.23080826 49.64408112]
[-36.84423065 53.88982773]
[-22.45765114 58.13557434]
[-8.07107258 62.38132095]
[6.31550550 66.62706757]
[20.70208359 70.87281036]
[33.62104416 63.54914856]
[48.27156448 67.64999390]
[55.86569977 81.25025177]
[70.25228119 85.49599457]
[89.09935760 69.14649200]
[113.71802521 70.70278168]
[107.15151215 57.21646500]
[100.58499908 43.73014069]
[94.01847839 30.24382019]
[87.45196533 16.75749779]
[80.88545227 3.27117634]
[65.67203522 -0.34630066]
[56.38469696 -12.92721272]
[57.40862656 -28.53123665]
[68.26036072 -39.79063034]
[83.81603241 -41.38905334]
[96.73074341 -32.57177734]
[100.90654755 -17.50205231]
[94.37177277 -3.29533935]
[100.93828583 10.19098282]
[107.50479889 23.67730331]
[114.07131958 37.16362762]
[120.63783264 50.64994812]
[127.20434570 64.13626862]
[141.91612244 67.06262207]
[153.14378357 57.11578369]
[164.37144470 47.16894531]
[175.59910583 37.22210312]
[186.82676697 27.27526474]
[198.05442810 17.32842445]
[209.28208923 7.38158464]
[206.32330322 -7.62484121]
[211.24061584 -22.00249100]
[222.61868286 -31.92247581]
[237.33595276 -34.79612732]
[251.42071533 -29.94997025]
[262.64837646 -39.89681244]
[273.87603760 -49.84365082]
[285.10369873 -59.79048920]
[290.30249023 -74.73314667]
[304.95977783 -77.38143921]
[316.18743896 -87.32827759]
[327.41510010 -97.27512360]
[338.64276123 -107.22196198]
[339.75158691 -122.75927734]
[351.27972412 -132.68684387]
[366.08535767 -131.53398132]
[377.31301880 -141.48081970]
[388.54067993 -151.42765808]
[399.76834106 -161.37451172]
[400.87719727 -176.91181946]
[412.40533447 -186.83938599]
[427.21093750 -185.68652344]
[438.43859863 -195.63337708]
[437.83792114 -211.25941467]
[447.46279907 -223.58401489]
[462.76867676 -226.78787231]
[476.52856445 -219.35821533]
[482.24545288 -204.80311584]
[477.22003174 -189.99504089]
[463.82516479 -181.92590332]
[448.38543701 -184.40571594]
[437.15777588 -174.45886230]
[436.51760864 -159.62223816]
[425.27285767 -149.37478638]
[409.71517944 -150.14685059]
[398.48751831 -140.19999695]
[387.25985718 -130.25315857]
[376.03219604 -120.30632782]
[375.39202881 -105.46968842]
[364.14727783 -95.22223663]
[348.58959961 -95.99430084]
[337.36193848 -86.04745483]
[326.13427734 -76.10061646]
[314.90661621 -66.15377808]
[310.51089478 -51.92258453]
[295.05053711 -48.56282806]
[283.82287598 -38.61598969]
[272.59521484 -28.66914940]
[261.36755371 -18.72230911]
[264.48065186 -4.15610838]
[259.85397339 10.10747719]
[248.63484192 20.20685768]
[233.76930237 23.35528564]
[219.22894287 18.60924530]
[208.00126648 28.55608559]
[196.77360535 38.50292587]
[185.54594421 48.44976425]
[174.31828308 58.39660645]
[163.09062195 68.34344482]
[151.86296082 78.29028320]
[163.51237488 68.84088898]
[178.27088928 66.16008759]
[192.49932861 70.90892792]
[202.68927002 81.91642761]
[206.32806396 96.46837616]
[202.51847839 110.97654724]
[192.19987488 121.86353302]
[177.91661072 126.44480896]
[163.19062805 123.59074402]
[151.65307617 114.00508118]
[146.14903259 100.05265808]
[151.04206848 114.23215485]
[155.93511963 128.41165161]
[160.82815552 142.59115601]
[165.72119141 156.77064514]
[170.61424255 170.95014954]
[175.50727844 185.12963867]
[197.45881653 189.88209534]
[212.02101135 206.81365967]
[213.41949463 228.97424316]
[201.24223328 247.38906860]
[207.80874634 260.87539673]
[214.37527466 274.36172485]
[220.94178772 287.84802246]
[227.50830078 301.33435059]
[234.07481384 314.82067871]
[246.44487000 326.41455078]
[238.72845459 341.51068115]
[222.08616638 338.27487183]
[220.58848572 321.38720703]
[214.02197266 307.90087891]
[207.45545959 294.41455078]
[200.88894653 280.92822266]
[194.32243347 267.44189453]
[187.75592041 253.95558167]
[179.66610718 254.97126770]
[171.54731750 254.06634521]
[163.85006714 251.28363037]
[157.00318909 246.77033997]
[151.39002991 240.77030945]
[147.32684326 233.61087036]
[145.04512024 225.68492126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[12 44]
[13 43]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[22 34]
[23 33]
[24 32]
[25 31]
[45 78]
[46 77]
[49 74]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[58 65]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[104 160]
[105 159]
[110 154]
[111 153]
[112 152]
[113 151]
[115 149]
[116 148]
[117 147]
[118 146]
[121 143]
[122 142]
[123 141]
[124 140]
[127 137]
[128 136]
[186 200]
[187 199]
[188 198]
[189 197]
[190 196]
[191 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
