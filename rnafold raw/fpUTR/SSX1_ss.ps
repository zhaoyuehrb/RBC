%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGGAGCAAUGACAUUGCAGAAUAUUUUCUCCUCCUCCAGCCACACUUUGUCACCAACUGCUGCCAACUCGCCACCACUGCUGCCGACCUCGCAACCACUGCUUUGUCUCUGAAUAGAGACAGGGUUUCCUUAUGUUGGCCGAACUGGGCUUGACCUCCUCGGCUCAAGUGAUCCUCCCACCUCGGCCUCGGAACUACAGGUGAGACUGCUCCUGGUGCC\
) } def
/len { sequence length } bind def

/coor [
[-180.71755981 488.76724243]
[-199.94313049 492.90402222]
[-218.99639893 488.23156738]
[-227.88140869 500.31695557]
[-236.76643372 512.40234375]
[-245.65145874 524.48773193]
[-254.53648376 536.57312012]
[-261.91415405 549.63336182]
[-267.67880249 563.48138428]
[-273.44345093 577.32946777]
[-279.20809937 591.17755127]
[-284.97274780 605.02557373]
[-285.47787476 621.97198486]
[-301.90185547 626.17785645]
[-310.48992920 611.56005859]
[-298.82080078 599.26092529]
[-293.05615234 585.41290283]
[-287.29150391 571.56481934]
[-281.52685547 557.71673584]
[-275.76220703 543.86871338]
[-288.38619995 535.76715088]
[-298.57403564 546.77661133]
[-308.76187134 557.78607178]
[-318.94967651 568.79553223]
[-322.04772949 584.89941406]
[-337.62957764 590.01196289]
[-349.66595459 578.87384033]
[-345.77487183 562.94299316]
[-329.95913696 558.60772705]
[-319.77133179 547.59826660]
[-309.58349609 536.58880615]
[-299.39566040 525.57934570]
[-292.91265869 522.17755127]
[-286.34646606 520.51422119]
[-280.10937500 520.47424316]
[-274.56253052 521.85223389]
[-269.99752808 524.36834717]
[-266.62185669 527.68804932]
[-257.73684692 515.60272217]
[-248.85182190 503.51730347]
[-239.96679688 491.43194580]
[-231.08177185 479.34655762]
[-237.41584778 471.00042725]
[-241.58668518 461.37490845]
[-243.34901428 451.02075195]
[-242.59555054 440.53195190]
[-239.36357117 430.51168823]
[-233.83297729 421.53765869]
[-226.31645203 414.12878418]
[-217.24165344 408.71511841]
[-207.12699890 405.61300659]
[-196.55192566 405.00653076]
[-186.12382507 406.93658447]
[-176.44305420 411.29827881]
[-166.56942749 400.00616455]
[-156.69580078 388.71408081]
[-146.82217407 377.42196655]
[-136.94854736 366.12988281]
[-140.43179321 351.67288208]
[-134.66604614 337.77252197]
[-121.66888428 329.83984375]
[-106.31542969 331.09591675]
[-96.44180298 319.80383301]
[-100.92491150 309.60458374]
[-101.28393555 298.41799927]
[-97.42889404 287.85595703]
[-89.87975311 279.45446777]
[-79.69660187 274.45056152]
[-68.33094025 273.60009766]
[-57.41874695 277.06381226]
[-47.07683182 266.19897461]
[-36.73492050 255.33412170]
[-26.39300919 244.46928406]
[-16.05109596 233.60443115]
[-5.70918417 222.73959351]
[-12.20507336 211.65531921]
[-15.61464977 199.25453186]
[-15.69886398 186.38034058]
[-12.44499588 173.90991211]
[-6.06799889 162.69470215]
[3.00368881 153.50231934]
[14.15692043 146.96401978]
[26.63528061 143.53131104]
[39.59038544 143.44483948]
[52.13956451 146.71746826]
[63.42599487 153.13294983]
[74.21772003 142.71476746]
[85.00945282 132.29658508]
[95.80117798 121.87839508]
[85.81591034 116.13916779]
[80.34512329 106.47813416]
[80.54630280 95.79212952]
[85.94335938 87.05057526]
[94.67388153 82.47042084]
[96.57065582 67.59082794]
[98.46742249 52.71123505]
[84.45623779 44.81652832]
[74.57254028 32.17873764]
[70.30731201 16.75234604]
[72.28552246 0.90873939]
[80.17470551 -12.92832375]
[92.74044800 -22.65350342]
[108.03941345 -26.80019379]
[109.72637939 -41.70503235]
[111.41334534 -56.60986710]
[113.10031128 -71.51470184]
[114.78727722 -86.41954041]
[116.47424316 -101.32437897]
[118.16120911 -116.22920990]
[119.84817505 -131.13404846]
[121.53514099 -146.03887939]
[123.22210693 -160.94372559]
[124.90907288 -175.84855652]
[117.86627197 -190.65838623]
[127.39209747 -204.00718689]
[143.68721008 -202.16287231]
[149.98858643 -187.02270508]
[139.81391907 -174.16159058]
[138.12695312 -159.25675964]
[136.43998718 -144.35191345]
[134.75300598 -129.44708252]
[133.06604004 -114.54224396]
[131.37907410 -99.63740540]
[129.69210815 -84.73257446]
[128.00514221 -69.82773590]
[126.31818390 -54.92290115]
[124.63121033 -40.01806259]
[122.94424438 -25.11322784]
[135.46937561 -18.79380226]
[145.10667419 -8.55781937]
[150.68432617 4.37984371]
[151.51399231 18.47406769]
[147.47576904 32.03401947]
[139.03488159 43.42598343]
[127.18831635 51.27021408]
[113.34701538 54.60800552]
[111.45024872 69.48759460]
[109.55347443 84.36718750]
[119.73601532 95.25134277]
[118.99223328 111.64427948]
[133.96209717 110.69398499]
[148.93197632 109.74369812]
[163.90184021 108.79340363]
[178.87170410 107.84310913]
[193.84156799 106.89281464]
[204.26213074 95.31482697]
[219.45724487 94.56434631]
[230.43086243 104.57010651]
[245.40072632 103.61981964]
[260.37060547 102.66952515]
[275.34045410 101.71923065]
[290.24530029 100.03226471]
[305.04888916 97.61272430]
[319.85244751 95.19318390]
[334.65603638 92.77364349]
[349.45959473 90.35411072]
[364.24575806 87.83035278]
[379.01379395 85.20251465]
[389.33731079 72.92225647]
[405.37063599 73.48090363]
[414.81436157 86.44992065]
[410.42410278 101.88056946]
[395.56765747 107.93579102]
[381.64163208 99.97053528]
[366.87359619 102.59837341]
[360.84420776 106.86109924]
[351.87915039 105.15768433]
[337.07556152 107.57721710]
[322.27200317 109.99675751]
[307.46841431 112.41629791]
[292.66485596 114.83583832]
[304.93231201 123.46772003]
[308.89617920 137.93449402]
[302.74200439 151.61389160]
[289.28686523 158.24407959]
[274.68994141 154.79002380]
[265.63311768 142.83285522]
[266.26220703 127.84604645]
[276.29077148 116.68909454]
[261.32089233 117.63938904]
[246.35102844 118.58968353]
[231.38114929 119.53997803]
[221.76086426 130.85304260]
[206.59283447 132.03002930]
[194.79187012 121.86267853]
[179.82199097 122.81297302]
[164.85212708 123.76326752]
[149.88226318 124.71356201]
[134.91239929 125.66385651]
[119.94252777 126.61415100]
[106.21936798 132.67012024]
[95.42763519 143.08830261]
[84.63591003 153.50650024]
[73.84417725 163.92468262]
[81.17134857 179.57952881]
[82.69481659 196.77220154]
[78.24733734 213.42381287]
[68.38263702 227.52677917]
[54.30650330 237.38673401]
[37.72943115 241.82617188]
[20.65876961 240.32502747]
[5.15566063 233.08149719]
[-5.18625164 243.94635010]
[-15.52816391 254.81118774]
[-25.87007713 265.67602539]
[-36.21199036 276.54089355]
[-46.55390167 287.40573120]
[-42.30282211 306.07702637]
[-50.11194992 323.39669800]
[-66.65519714 332.42907715]
[-85.14970398 329.67745972]
[-95.02333069 340.96954346]
[-91.72979736 356.01809692]
[-97.85723114 369.95755005]
[-110.86393738 377.52651978]
[-125.65644836 376.00350952]
[-135.53007507 387.29559326]
[-145.40370178 398.58770752]
[-155.27732849 409.87979126]
[-165.15095520 421.17190552]
[-156.49894714 439.04458618]
[-156.53033447 458.85351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[21 32]
[22 31]
[23 30]
[24 29]
[54 220]
[55 219]
[56 218]
[57 217]
[58 216]
[62 212]
[63 211]
[70 207]
[71 206]
[72 205]
[73 204]
[74 203]
[75 202]
[86 194]
[87 193]
[88 192]
[89 191]
[94 138]
[95 137]
[96 136]
[103 128]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[140 190]
[141 189]
[142 188]
[143 187]
[144 186]
[145 185]
[148 182]
[149 181]
[150 180]
[151 179]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
