%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUUCUUCGUGUUCCUGUGCGGGAUUGGUGUGCCCAGGGGUUUGGCUUUCCAAUUGGCUAACGCCGGGGUGGGUGGGGAAUGUGGGGAGAUUUGAAUUUGAAACCGGUAGGGAGUGAUAAUCCGCAUUCAGUUGUCGAGGAGUGCCAGUCACCUUCAGUUUCUGGAGCUGGCCGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[217.52073669 425.92080688]
[222.80690002 411.88314819]
[233.19668579 401.06408691]
[247.00897217 395.21420288]
[262.00881958 395.28005981]
[275.77130127 401.25250244]
[267.93933105 388.45953369]
[260.10733032 375.66656494]
[252.27534485 362.87359619]
[244.44335938 350.08062744]
[236.61137390 337.28765869]
[228.77938843 324.49468994]
[215.16621399 325.74435425]
[202.28269958 320.97888184]
[192.66722107 311.07629395]
[188.24044800 297.93270874]
[189.92187500 284.09924316]
[197.43948364 272.28710938]
[189.82826233 259.36157227]
[182.21702576 246.43605042]
[174.38504028 233.64308167]
[166.33459473 220.98645020]
[158.28416443 208.32981873]
[150.23371887 195.67318726]
[142.18327332 183.01655579]
[135.92485046 179.05021667]
[134.10543823 170.07283020]
[126.27344513 157.27986145]
[118.44145203 144.48689270]
[110.60946655 131.69393921]
[95.82862091 133.16120911]
[81.87164307 128.07897949]
[71.49510956 117.45099640]
[66.74844360 103.37635803]
[68.56912231 88.63487244]
[76.59757233 76.13805389]
[68.76557922 63.34509277]
[60.93359375 50.55212784]
[44.06685257 49.45319748]
[31.29935074 38.63192368]
[27.52652359 22.49672890]
[34.04022598 7.44098997]
[25.98978424 -5.21564341]
[17.93934059 -17.87227631]
[9.88889790 -30.52890968]
[1.83845484 -43.18554306]
[-12.09659004 -50.67721176]
[-12.39872360 -65.56875610]
[-21.40193748 -77.56633759]
[-31.30422020 -88.83332062]
[-41.20650101 -100.10029602]
[-51.10878372 -111.36727905]
[-61.01106644 -122.63425446]
[-70.91334534 -133.90122986]
[-80.81562805 -145.16821289]
[-94.38465881 -141.71527100]
[-108.05137634 -144.43785095]
[-119.15527344 -152.74772644]
[-125.55988312 -164.97471619]
[-126.06376648 -178.70208740]
[-120.62548828 -191.24421692]
[-130.33290100 -202.67953491]
[-143.11671448 -204.51165771]
[-150.96603394 -214.25694275]
[-150.08956909 -226.33734131]
[-159.59924316 -237.93759155]
[-169.10891724 -249.53785706]
[-178.61860657 -261.13812256]
[-194.36868286 -262.44604492]
[-204.51692200 -274.56167603]
[-203.04255676 -290.29705811]
[-190.82029724 -300.31661987]
[-175.10139465 -298.67596436]
[-165.21159363 -286.34848022]
[-167.01834106 -270.64779663]
[-157.50866699 -259.04754639]
[-147.99897766 -247.44728088]
[-138.48930359 -235.84701538]
[-121.76526642 -230.56478882]
[-118.89759064 -212.38693237]
[-109.19017792 -200.95162964]
[-93.38063049 -204.23812866]
[-77.97999573 -199.08044434]
[-67.21480560 -186.79435730]
[-64.08956146 -170.66537476]
[-69.54865265 -155.07049561]
[-59.64636612 -143.80351257]
[-49.74408722 -132.53654480]
[-39.84180450 -121.26956177]
[-29.93952179 -110.00257874]
[-20.03724098 -98.73560333]
[-10.13495922 -87.46862030]
[-10.67187119 -102.45900726]
[-3.12486243 -115.42213440]
[10.17623615 -122.35617065]
[25.12525368 -121.12050629]
[37.10729218 -112.09660339]
[42.42338943 -98.07023621]
[39.43241119 -83.37145233]
[29.05770683 -72.53791809]
[14.50203896 -68.91403961]
[0.25790989 -73.61919403]
[13.61713314 -67.03281403]
[14.49508858 -51.23598480]
[22.54553032 -38.57935333]
[30.59597397 -25.92271996]
[38.64641571 -13.26608658]
[46.69686127 -0.60945290]
[60.05495834 -1.02248025]
[71.96537018 5.27504253]
[79.26142883 16.72994423]
[79.94365692 30.40239906]
[73.72655487 42.72013855]
[81.55854797 55.51310349]
[89.39053345 68.30606842]
[104.17137909 66.83879089]
[118.12835693 71.92102814]
[128.50489807 82.54900360]
[133.25155640 96.62364197]
[131.43087769 111.36512756]
[123.40242767 123.86194611]
[131.23442078 136.65490723]
[139.06640625 149.44787598]
[146.89839172 162.24084473]
[154.83990479 174.96611023]
[162.89035034 187.62274170]
[170.94079590 200.27937317]
[178.99122620 212.93600464]
[187.04167175 225.59263611]
[192.75221252 229.00363159]
[195.45822144 234.03669739]
[195.14256287 238.82481384]
[202.75378418 251.75035095]
[210.36500549 264.67587280]
[226.88476562 264.35977173]
[241.23117065 272.36547852]
[249.54106140 286.42901611]
[249.63150024 302.67010498]
[241.57234192 316.66271973]
[249.40434265 329.45568848]
[257.23632812 342.24865723]
[265.06832886 355.04162598]
[272.90029907 367.83456421]
[280.73229980 380.62753296]
[288.56427002 393.42050171]
[298.30435181 399.06713867]
[300.35052490 408.84909058]
[310.63372803 419.76950073]
[320.91696167 430.68991089]
[331.20016479 441.61032104]
[341.48339844 452.53076172]
[345.73959351 453.64111328]
[349.07412720 455.83804321]
[351.25695801 458.69351196]
[352.22259521 461.74874878]
[352.06552124 464.57125854]
[361.57519531 476.17153931]
[371.08486938 487.77178955]
[380.59454346 499.37203979]
[390.10421753 510.97232056]
[399.61389160 522.57257080]
[414.33151245 530.98852539]
[410.31869507 547.46075439]
[393.37936401 548.16467285]
[388.01364136 532.08221436]
[378.50396729 520.48199463]
[368.99429321 508.88171387]
[359.48458862 497.28146362]
[349.97491455 485.68121338]
[340.46524048 474.08093262]
[330.56295776 462.81396484]
[320.27975464 451.89355469]
[309.99655151 440.97314453]
[299.71331787 430.05270386]
[289.43011475 419.13229370]
[291.57348633 433.97836304]
[287.69366455 448.46792603]
[278.41836548 460.25643921]
[265.24844360 467.43646240]
[250.31483459 468.84625244]
[236.03390503 464.25769043]
[224.71638489 454.41320801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 140]
[12 139]
[18 134]
[19 133]
[20 132]
[21 129]
[22 128]
[23 127]
[24 126]
[25 125]
[27 124]
[28 123]
[29 122]
[30 121]
[36 115]
[37 114]
[38 113]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[48 102]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[61 81]
[62 80]
[65 78]
[66 77]
[67 76]
[68 75]
[147 175]
[148 174]
[149 173]
[150 172]
[151 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
