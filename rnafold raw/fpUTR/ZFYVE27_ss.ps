%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAGCGAUUCGCGUCCCGGAAGCGGCGGUGGCGGCCGCGGCGUAGGCGGAGGAGAUUUUCGGACCUGCGACUUCCGAACAACCCUGGCAGGAGGAGCGGCGUUCAGCCGGGGGAGGCCUGAAGAAACGCUCCGGGGCCCAGUGGCUCUACCCCUGCUCCUGCCCGACCCUGCCGCCUCCCUCACGGAGCCAGCGGCCGGGUAGG\
) } def
/len { sequence length } bind def

/coor [
[316.89950562 402.50753784]
[307.54504395 383.44281006]
[311.63607788 362.46704102]
[300.67355347 352.22875977]
[289.71099854 341.99044800]
[278.74847412 331.75216675]
[267.78591919 321.51385498]
[253.20326233 318.48150635]
[248.39871216 303.40747070]
[237.43617249 293.16915894]
[226.47363281 282.93087769]
[211.89096069 279.89852905]
[207.08642578 264.82449341]
[200.05010986 262.55572510]
[196.03669739 254.34664917]
[185.23080444 243.94316101]
[174.42489624 233.53967285]
[163.61900330 223.13619995]
[152.81311035 212.73271179]
[142.00720215 202.32922363]
[131.20130920 191.92573547]
[120.39540863 181.52224731]
[113.39434814 179.14697266]
[109.50597382 170.87792969]
[98.85920715 160.31164551]
[88.21243286 149.74536133]
[73.30950165 148.04165649]
[60.55272293 155.93244934]
[47.79594040 163.82324219]
[35.03916168 171.71401978]
[22.28238106 179.60481262]
[14.99841785 194.29753113]
[-1.38273263 195.06561279]
[-10.00954628 181.11892700]
[-2.00749779 166.80462646]
[14.39159203 166.84803772]
[27.14837265 158.95724487]
[39.90515518 151.06645203]
[52.66193390 143.17567444]
[65.41871643 135.28488159]
[63.94855881 127.93038177]
[61.00825119 113.22138214]
[59.53809738 105.86688232]
[44.72815323 103.48664856]
[29.91820908 101.10640717]
[15.10826302 98.72617340]
[0.29831845 96.34593201]
[-14.51162624 93.96569061]
[-29.33920670 91.69790649]
[-44.10788727 97.37210846]
[-55.59140778 87.88643646]
[-70.43576813 85.73122406]
[-85.28012848 83.57601929]
[-100.12449646 81.42081451]
[-115.14862823 87.99404907]
[-128.19102478 78.05283356]
[-125.83479309 61.82384109]
[-110.50381470 56.00206757]
[-97.96928406 66.57645416]
[-83.12492371 68.73165894]
[-68.28056335 70.88686371]
[-53.43619919 73.04206848]
[-39.72928619 67.21371460]
[-27.18400192 76.85354614]
[-20.11068726 74.70295715]
[-12.13138771 79.15574646]
[2.67855668 81.53598785]
[17.48850060 83.91622162]
[32.29844666 86.29646301]
[47.10839081 88.67670441]
[61.91833496 91.05693817]
[75.13393402 79.94842529]
[89.35543060 77.63456726]
[87.31292725 62.77428055]
[85.27043152 47.91399002]
[83.22792816 33.05369949]
[73.68357086 20.43562508]
[79.61577606 6.77333403]
[67.30673981 -2.77262115]
[65.44704437 -17.87216377]
[74.62350464 -29.54812431]
[62.31446838 -39.09408188]
[60.45477295 -54.19362259]
[69.63124084 -65.86958313]
[67.58873749 -80.72987366]
[65.54624176 -95.59016418]
[63.50373840 -110.45045471]
[61.46123886 -125.31073761]
[59.41873932 -140.17103577]
[57.37623978 -155.03132629]
[47.83188248 -167.64939880]
[53.76408768 -181.31169128]
[51.72158813 -196.17196655]
[49.67908859 -211.03225708]
[40.13472748 -223.65034485]
[46.06693268 -237.31262207]
[34.20400620 -248.11311340]
[35.39549255 -264.11187744]
[48.72738266 -273.03601074]
[63.97259521 -268.03970337]
[69.43630219 -252.95568848]
[60.92722321 -239.35513306]
[70.32548523 -227.79995728]
[64.53937531 -213.07476807]
[66.58187866 -198.21447754]
[68.62437439 -183.35418701]
[78.02264404 -171.79901123]
[72.23652649 -157.07382202]
[74.27902985 -142.21353149]
[76.32152557 -127.35324097]
[78.36402893 -112.49295044]
[80.40652466 -97.63265991]
[82.44902802 -82.77236938]
[84.49152374 -67.91208649]
[96.47784424 -59.14487839]
[98.76091766 -44.10353088]
[89.48379517 -31.59062386]
[101.47010803 -22.82342148]
[103.75318909 -7.78207064]
[94.47606659 4.73083448]
[103.87432861 16.28600121]
[98.08821869 31.01119995]
[100.13072205 45.87149048]
[102.17321777 60.73177719]
[104.21572113 75.59207153]
[122.58577728 82.85449219]
[131.78028870 103.22490692]
[123.40750122 126.73033905]
[98.77871704 139.09858704]
[109.42548370 149.66487122]
[120.07225800 160.23115540]
[130.79890442 170.71633911]
[141.60479736 181.11982727]
[152.41069031 191.52331543]
[163.21659851 201.92680359]
[174.02249146 212.33029175]
[184.82838440 222.73377991]
[195.63429260 233.13726807]
[206.44018555 243.54075623]
[217.32472229 253.86195374]
[232.69149780 257.62658691]
[236.71192932 271.96832275]
[247.67446899 282.20663452]
[258.63702393 292.44494629]
[274.00378418 296.20959473]
[278.02423096 310.55133057]
[288.98675537 320.78961182]
[299.94931030 331.02792358]
[310.91183472 341.26620483]
[321.87438965 351.50451660]
[330.26007080 347.48690796]
[339.40280151 345.92623901]
[348.59982300 346.92941284]
[357.14767456 350.40682983]
[364.39614868 356.08004761]
[369.79772949 363.50418091]
[372.94882202 372.10278320]
[373.62002563 381.21243286]
[371.77270508 390.13409424]
[367.56106567 398.18667603]
[377.54714966 409.37942505]
[387.53326416 420.57217407]
[397.51937866 431.76492310]
[407.50546265 442.95770264]
[417.49157715 454.15045166]
[427.47766113 465.34320068]
[437.46377563 476.53594971]
[440.92767334 461.94137573]
[454.43066406 455.40927124]
[468.02337646 461.75262451]
[471.69027710 476.29751587]
[462.72949219 488.32681274]
[447.74295044 488.97674561]
[456.85177612 500.89434814]
[465.96063232 512.81195068]
[475.06945801 524.72955322]
[484.17828369 536.64715576]
[493.55603027 548.35430908]
[503.19784546 559.84497070]
[512.83966064 571.33563232]
[522.48144531 582.82629395]
[538.27386475 585.65130615]
[545.78448486 599.82769775]
[539.25195312 614.48052979]
[523.68737793 618.36938477]
[511.03057861 608.51110840]
[510.99081421 592.46813965]
[501.34899902 580.97747803]
[491.70718384 569.48681641]
[482.06536865 557.99609375]
[478.60046387 557.32702637]
[475.28811646 554.94451904]
[472.93090820 550.93896484]
[472.26068115 545.75598145]
[463.15185547 533.83837891]
[454.04302979 521.92077637]
[444.93417358 510.00317383]
[435.82534790 498.08557129]
[426.27102661 486.52206421]
[416.28491211 475.32931519]
[406.29882812 464.13653564]
[396.31271362 452.94378662]
[386.32659912 441.75103760]
[376.34051514 430.55828857]
[366.35440063 419.36553955]
[356.36831665 408.17276001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[9 144]
[10 143]
[11 142]
[13 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[24 131]
[25 130]
[26 129]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 64]
[51 62]
[52 61]
[53 60]
[54 59]
[73 125]
[74 124]
[75 123]
[76 122]
[78 120]
[81 117]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[92 106]
[93 105]
[94 104]
[96 102]
[160 206]
[161 205]
[162 204]
[163 203]
[164 202]
[165 201]
[166 200]
[167 199]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 190]
[179 189]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
