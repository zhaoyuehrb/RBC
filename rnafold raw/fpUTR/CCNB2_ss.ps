%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGCCCAAUGGGGCGCAAGCGACGCGGUAUUUGAAUCCUGGAACAAGGCUACAGCGUCGAAGAUCCCCAGCGCUGCGGGCUCGGAGAGCAGUCCUAACGGCGCCUCGUACGCUAGUGUCCUCCCUUUUCAGUCCGCGUCCCUCCCUGGGCCGGGCUGGCACUCUUGCCUUCCCCGUCCCUC\
) } def
/len { sequence length } bind def

/coor [
[118.38278961 139.29405212]
[109.77334595 127.01083374]
[101.16390991 114.72761536]
[93.70954895 115.55378723]
[71.34648132 118.03230286]
[65.63565826 131.90264893]
[59.92483521 145.77299500]
[54.21401215 159.64334106]
[48.50318909 173.51368713]
[51.21333694 189.68734741]
[38.39118195 199.91105652]
[23.22705841 193.66755676]
[21.32051659 177.37960815]
[34.63284302 167.80287170]
[40.34366608 153.93252563]
[46.05448914 140.06217957]
[51.76530838 126.19182587]
[57.47613144 112.32147980]
[67.94123077 102.58365631]
[80.09466553 97.57566833]
[92.46809387 97.48049927]
[87.71187592 83.25452423]
[75.99806213 72.61981201]
[79.30052948 58.09593201]
[74.54431915 43.86995697]
[69.78810120 29.64398003]
[65.03189087 15.41800213]
[60.27567291 1.19202542]
[55.51945877 -13.03395176]
[50.76324463 -27.25992775]
[40.74030304 -31.55834961]
[34.86925125 -40.48691559]
[34.89385605 -50.95292664]
[40.56376648 -59.48735046]
[36.29336166 -73.86663055]
[32.02295685 -88.24590302]
[27.75255203 -102.62518311]
[23.48214531 -117.00446320]
[10.16827297 -120.62223053]
[0.46176797 -130.27386475]
[-3.17340112 -143.35827637]
[0.11063723 -156.42355347]
[9.35080433 -166.07749939]
[5.32518530 -180.52722168]
[1.29956675 -194.97694397]
[-1.94846630 -197.93630981]
[-3.87774134 -201.42803955]
[-4.48361158 -204.96752930]
[-3.92075539 -208.11932373]
[-2.47297931 -210.54507446]
[-5.50855255 -225.23471069]
[-15.87852097 -237.18353271]
[-10.87695312 -251.21327209]
[-13.91252613 -265.90289307]
[-16.94809914 -280.59252930]
[-20.10828781 -295.25585938]
[-23.39286613 -309.89181519]
[-26.67744255 -324.52780151]
[-29.96201897 -339.16375732]
[-33.24659729 -353.79974365]
[-36.65532303 -368.40728760]
[-40.18795776 -382.98535156]
[-43.72059250 -397.56344604]
[-51.15413666 -384.53491211]
[-64.26632690 -377.24996948]
[-79.25546265 -377.82080078]
[-91.77564240 -386.08184814]
[-98.19680023 -399.63800049]
[-96.65721130 -414.55877686]
[-87.60325623 -426.51812744]
[-73.66001129 -432.04858398]
[-58.87013626 -429.54666138]
[-47.52310944 -419.73980713]
[-49.04880905 -434.66201782]
[-50.57450867 -449.58422852]
[-52.10020828 -464.50643921]
[-53.62590790 -479.42861938]
[-55.15160751 -494.35083008]
[-67.68847656 -510.11749268]
[-59.07165527 -527.41271973]
[-61.10318375 -542.27453613]
[-63.13470840 -557.13629150]
[-65.16623688 -571.99810791]
[-67.19776154 -586.85992432]
[-69.35540771 -601.70391846]
[-81.39219666 -612.31030273]
[-80.46073151 -628.32629395]
[-67.27555084 -637.46575928]
[-51.95119476 -632.71777344]
[-46.24320221 -617.72448730]
[-54.53025055 -603.98748779]
[-50.39504242 -597.84124756]
[-52.33597183 -588.89141846]
[-50.30444336 -574.02966309]
[-48.27291489 -559.16784668]
[-46.24139023 -544.30603027]
[-44.20986176 -529.44427490]
[-35.52793503 -524.00286865]
[-31.19455338 -514.47607422]
[-32.86673737 -503.92184448]
[-40.22940063 -495.87652588]
[-38.70370102 -480.95434570]
[-37.17800140 -466.03213501]
[-35.65230179 -451.10992432]
[-34.12660217 -436.18771362]
[-32.60090256 -421.26550293]
[-26.21001244 -412.72116089]
[-29.14250755 -401.09606934]
[-25.60987473 -386.51800537]
[-22.07724190 -371.93991089]
[-17.43568420 -366.16644287]
[-18.61062813 -357.08432007]
[-15.32605171 -342.44833374]
[-12.04147434 -327.81237793]
[-8.75689793 -313.17639160]
[-5.47232056 -298.54043579]
[-0.92947161 -292.68899536]
[-2.25846744 -283.62811279]
[0.77710605 -268.93847656]
[3.81267929 -254.24884033]
[13.96552372 -243.35072327]
[9.18107986 -228.27027893]
[12.21665287 -213.58064270]
[15.74928665 -199.00256348]
[19.77490425 -184.55284119]
[23.80052376 -170.10311890]
[39.35080338 -164.87599182]
[48.82295227 -151.27862549]
[48.32738876 -134.54855347]
[37.86142349 -121.27486420]
[42.13182831 -106.89559174]
[46.40223694 -92.51631165]
[50.67264175 -78.13703156]
[54.94304657 -63.75775528]
[69.91887665 -51.54710770]
[64.98921967 -32.01614380]
[69.74543762 -17.79016685]
[74.50164795 -3.56418920]
[79.25786591 10.66178799]
[84.01407623 24.88776398]
[88.77029419 39.11374283]
[93.52651215 53.33971786]
[104.90013123 62.95689392]
[101.93785858 78.49830627]
[106.69406891 92.72428131]
[113.44712830 106.11817169]
[122.05657196 118.40139008]
[130.66601562 130.68461609]
[149.30018616 138.33494568]
[150.21238708 157.63632202]
[159.23396301 169.62011719]
[168.25553894 181.60389709]
[182.73696899 187.97561646]
[184.21015930 202.79719543]
[193.23171997 214.78097534]
[202.25329590 226.76477051]
[211.27487183 238.74856567]
[228.62864685 240.86602783]
[238.88908386 254.60191345]
[236.10746765 271.17764282]
[245.33122253 283.00650024]
[254.55499268 294.83538818]
[263.77874756 306.66424561]
[279.17288208 312.31695557]
[281.70755005 328.51904297]
[268.77532959 338.60317993]
[253.67976379 332.19567871]
[251.94989014 315.88800049]
[242.72612000 304.05914307]
[233.50236511 292.23028564]
[224.27859497 280.40139771]
[211.38195801 280.62081909]
[200.55613708 273.25640869]
[195.88658142 260.81591797]
[199.29107666 247.77012634]
[190.26951599 235.78634644]
[181.24794006 223.80255127]
[172.22636414 211.81875610]
[158.39021301 206.30421448]
[156.27174377 190.62547302]
[147.25016785 178.64169312]
[138.22859192 166.65789795]
[127.99542999 166.14163208]
[119.56615448 159.93798828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[21 145]
[22 144]
[24 142]
[25 141]
[26 140]
[27 139]
[28 138]
[29 137]
[30 136]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[43 126]
[44 125]
[45 124]
[50 123]
[51 122]
[53 120]
[54 119]
[55 118]
[56 116]
[57 115]
[58 114]
[59 113]
[60 112]
[61 110]
[62 109]
[63 108]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 91]
[150 182]
[151 181]
[152 180]
[154 178]
[155 177]
[156 176]
[157 175]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
