%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAAGGGGAGGGAAAAGGGGAGGAGGAGGAGGAUGUGAGACUGGGUUAGAGAAAUGAAAGAAAGCAAGGCUUUCUGUUGACAUUCAGUGCAGUCUACCUGCAGCACAGCACACUCCCUUUGGGCAAGGACCUGAGACCCUUGUGCUAAGUCAAGAGGCUCA\
) } def
/len { sequence length } bind def

/coor [
[204.59701538 428.32382202]
[189.97831726 424.96316528]
[179.40103149 414.32733154]
[176.12110901 399.69030762]
[181.14819336 385.55776978]
[192.93481445 376.28009033]
[207.85275269 374.71316528]
[221.31071472 381.34014893]
[215.24426270 367.62161255]
[209.17781067 353.90307617]
[193.09379578 352.57574463]
[179.79000854 343.27514648]
[172.94107056 328.45501709]
[174.49658203 312.10894775]
[184.12719727 298.69433594]
[169.49835205 296.02322388]
[159.12475586 285.12127686]
[157.13648987 270.02493286]
[164.50382996 256.49612427]
[158.17886353 242.89485168]
[151.85388184 229.29357910]
[145.52890015 215.69230652]
[139.20393372 202.09101868]
[132.87895203 188.48974609]
[126.55397797 174.88847351]
[120.22899628 161.28720093]
[105.60015106 158.61608887]
[95.22654724 147.71415710]
[93.23828888 132.61778259]
[100.60563660 119.08898926]
[87.03151703 114.02050781]
[80.92179108 100.88211060]
[85.79309082 87.23599243]
[73.94326782 82.06988525]
[68.96607971 70.57564545]
[73.03764343 59.15558243]
[60.38014221 49.66357040]
[62.30914307 34.89440918]
[56.24269104 21.17587471]
[50.17623901 7.45734072]
[44.10978699 -6.26119280]
[37.65639114 -19.80200768]
[30.82125092 -33.15419388]
[23.98611259 -46.50638199]
[17.15097237 -59.85856628]
[10.31583405 -73.21075439]
[3.48069477 -86.56294250]
[-9.69503689 -95.32140350]
[-8.60722351 -110.17623138]
[-15.44236183 -123.52841949]
[-22.27750206 -136.88059998]
[-29.00351524 -143.12763977]
[-29.11294746 -150.55076599]
[-35.69418335 -164.02990723]
[-42.27542114 -177.50906372]
[-57.33761597 -175.97425842]
[-71.98860931 -179.67837524]
[-84.46484375 -188.15562439]
[-93.27136993 -200.36689758]
[-97.36095428 -214.82708740]
[-96.25857544 -229.78567505]
[-90.11653900 -243.43867493]
[-79.69374847 -254.14617920]
[-86.27498627 -267.62533569]
[-92.85622406 -281.10446167]
[-99.43745422 -294.58361816]
[-106.01869202 -308.06274414]
[-112.59992981 -321.54190063]
[-119.18116760 -335.02105713]
[-131.56387329 -346.60140991]
[-123.86393738 -361.70596313]
[-107.21813202 -358.48831177]
[-105.70202637 -341.60226440]
[-99.12078857 -328.12313843]
[-92.53955078 -314.64398193]
[-85.95831299 -301.16485596]
[-79.37707520 -287.68569946]
[-72.79583740 -274.20657349]
[-66.21459961 -260.72741699]
[-51.36143112 -262.36099243]
[-36.81830597 -258.80758667]
[-24.34507942 -250.47732544]
[-15.45790482 -238.35958862]
[-11.24497223 -223.90547180]
[-12.23328495 -208.85411072]
[-18.32282066 -195.02336121]
[-28.79627609 -184.09030151]
[-22.21504021 -170.61114502]
[-15.63380337 -157.13200378]
[-8.92531490 -143.71574402]
[-2.09017611 -130.36355591]
[4.74496269 -117.01136780]
[17.43179893 -109.20794678]
[16.83288193 -93.39807892]
[23.66802025 -80.04589081]
[30.50315857 -66.69370270]
[37.33829880 -53.34151840]
[44.17343903 -39.98933411]
[51.00857544 -26.63714790]
[54.27939606 -25.21249390]
[57.00838089 -22.10869026]
[58.40290070 -17.60468483]
[57.82831955 -12.32764435]
[63.89477158 1.39088857]
[69.96121979 15.10942173]
[76.02767944 28.82795525]
[88.25125885 37.33872604]
[86.75617218 53.08913040]
[101.46026611 62.63362885]
[99.39436340 80.91101074]
[112.96848297 85.97949219]
[119.07820892 99.11788940]
[114.20690918 112.76400757]
[129.29975891 115.84818268]
[139.56257629 127.09664154]
[141.21447754 142.05442810]
[133.83027649 154.96221924]
[140.15524292 168.56350708]
[146.48022461 182.16477966]
[152.80520630 195.76605225]
[159.13017273 209.36732483]
[165.45515442 222.96859741]
[171.78013611 236.56987000]
[178.10511780 250.17114258]
[193.19795227 253.25532532]
[203.46078491 264.50378418]
[205.11268616 279.46154785]
[197.72846985 292.36935425]
[211.73095703 292.88317871]
[224.08261108 299.35757446]
[232.39218140 310.47463989]
[235.07890320 324.02398682]
[231.67292786 337.34225464]
[222.89634705 347.83660889]
[228.96279907 361.55514526]
[235.02925110 375.27368164]
[242.24061584 388.42648315]
[250.54464722 400.91821289]
[258.84866333 413.40994263]
[266.23919678 418.85464478]
[267.18902588 426.21755981]
[275.25518799 438.86419678]
[283.44064331 451.43392944]
[291.74465942 463.92565918]
[300.04867554 476.41738892]
[308.35269165 488.90908813]
[323.86135864 489.42041016]
[336.08688354 498.97634888]
[340.32830811 513.90252686]
[334.95471191 528.45941162]
[322.03237915 537.04974365]
[306.53021240 536.37017822]
[294.40905762 526.68218994]
[290.32980347 511.71090698]
[295.86099243 497.21313477]
[287.55694580 484.72140503]
[279.25292969 472.22967529]
[270.94891357 459.73794556]
[264.59915161 455.89147949]
[262.60855103 446.93032837]
[254.54240417 434.28369141]
[246.35694885 421.71395874]
[238.05291748 409.22222900]
[229.74890137 396.73049927]
[228.09967041 411.63955688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 136]
[9 135]
[10 134]
[15 128]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[30 113]
[33 110]
[36 108]
[38 106]
[39 105]
[40 104]
[41 103]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[47 94]
[49 92]
[50 91]
[51 90]
[53 89]
[54 88]
[55 87]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[137 164]
[138 163]
[139 162]
[141 161]
[142 160]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
