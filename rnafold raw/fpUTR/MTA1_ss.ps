%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCCUCCCGUCCCUGCGCGGCCUCGGCGGCCUCGGCGGCGGCGGCGGCGGCGGCGGCGGCAGCAGCGCGGCCCCUUUAAACGCCUGCGGCGCCCCCCGCCCCCGCCAUCGCGCCUCCAUUUUCCCGGCCGCCCGCGCCGAGCGCCGCGCCCGCCCCGGGCCCCUCCGCCGCCGCCGGCCCGGAC\
) } def
/len { sequence length } bind def

/coor [
[208.58619690 449.94039917]
[201.15867615 436.90844727]
[193.73115540 423.87649536]
[186.30363464 410.84454346]
[185.56867981 425.82653809]
[178.88511658 439.25521851]
[167.37573242 448.87469482]
[152.97404480 453.06890869]
[138.09945679 451.13327026]
[125.25083160 443.39294434]
[116.58664703 431.14825439]
[113.56245422 416.45626831]
[116.68630219 401.78515625]
[125.43339539 389.59957886]
[138.33427429 381.94665527]
[153.22164917 380.11199951]
[167.59454346 384.40386963]
[179.03802490 394.10079956]
[174.59388733 379.77426147]
[170.14976501 365.44772339]
[165.70562744 351.12118530]
[161.26148987 336.79464722]
[156.81735229 322.46810913]
[152.37322998 308.14160156]
[147.80953979 293.85269165]
[143.12663269 279.60241699]
[138.44372559 265.35214233]
[133.76081848 251.10185242]
[129.07791138 236.85157776]
[124.39501190 222.60130310]
[119.71210480 208.35102844]
[114.62688446 202.96731567]
[115.07215881 193.82334900]
[105.61778259 189.88317871]
[99.77925873 181.20140076]
[99.69202423 170.51954651]
[105.62705994 161.37461853]
[101.66413116 146.90757751]
[97.70120239 132.44053650]
[93.73826599 117.97350311]
[77.42212677 92.30644226]
[69.56328583 79.52995300]
[61.70444870 66.75347137]
[53.84560776 53.97698212]
[40.02501678 46.27621078]
[39.94728088 31.38180923]
[32.08843994 18.60532188]
[24.22960091 5.82883453]
[16.37076187 -6.94765329]
[8.51192188 -19.72414017]
[-5.30866957 -27.42490959]
[-5.38640738 -42.31931305]
[-13.24524689 -55.09579849]
[-21.10408592 -67.87228394]
[-28.96292686 -80.64877319]
[-36.82176590 -93.42526245]
[-53.21371841 -101.79466248]
[-53.04033661 -119.33432770]
[-61.11157227 -131.97770691]
[-69.18280792 -144.62109375]
[-77.25404358 -157.26448059]
[-91.20138550 -164.73323059]
[-91.52799225 -179.62425232]
[-98.79828644 -185.18782043]
[-99.62641144 -192.54702759]
[-107.48525238 -205.32351685]
[-115.34409332 -218.10000610]
[-123.20293427 -230.87649536]
[-130.37924194 -236.56076050]
[-131.08428955 -243.93278503]
[-138.72853088 -256.83880615]
[-146.37278748 -269.74484253]
[-161.65464783 -268.89453125]
[-175.57641602 -275.25399780]
[-184.93896484 -287.36190796]
[-187.59085083 -302.43591309]
[-182.92268372 -317.01217651]
[-172.00717163 -327.74111938]
[-157.35263062 -332.15731812]
[-142.32655334 -329.24600220]
[-130.38183594 -319.67614746]
[-124.26328278 -305.64682007]
[-125.37689209 -290.38186646]
[-133.46675110 -277.38909912]
[-125.82250977 -264.48306274]
[-118.17826080 -251.57704163]
[-110.42644501 -238.73533630]
[-102.56760406 -225.95884705]
[-94.70876312 -213.18235779]
[-86.84992218 -200.40586853]
[-78.88460541 -187.69549561]
[-65.51457977 -181.13107300]
[-64.61065674 -165.33570862]
[-56.53942490 -152.69233704]
[-48.46818924 -140.04895020]
[-40.39695358 -127.40556335]
[-28.64500618 -124.48664093]
[-21.82026482 -114.00211334]
[-24.04527855 -101.28410339]
[-16.18643951 -88.50761414]
[-8.32759857 -75.73112488]
[-0.46875924 -62.95463943]
[7.39008045 -50.17815018]
[20.64855385 -43.39124298]
[21.28841019 -27.58298111]
[29.14724922 -14.80649281]
[37.00608826 -2.03000522]
[44.86492920 10.74648285]
[52.72376633 23.52297020]
[65.98223877 30.30987930]
[66.62209320 46.11814117]
[74.48093414 58.89463043]
[82.33977509 71.67111969]
[90.19861603 84.44760132]
[104.87256622 87.55810547]
[117.23918915 79.06890106]
[129.60580444 70.57969666]
[127.73668671 55.38874435]
[133.15208435 41.07329941]
[144.60760498 30.92294121]
[159.47084045 27.27014923]
[174.32632446 30.95430946]
[185.76039124 41.12882614]
[191.14555359 55.45567322]
[189.24436951 70.64263916]
[180.49369812 83.19988251]
[166.90437317 90.24182892]
[151.59913635 90.15029907]
[138.09501648 82.94631958]
[125.72839355 91.43552399]
[113.36177063 99.92472839]
[108.20530701 114.01056671]
[112.16823578 128.47760010]
[116.13117218 142.94464111]
[120.09410095 157.41168213]
[135.05633545 170.90130615]
[129.39869690 189.37921143]
[133.96237183 203.66812134]
[138.64527893 217.91839600]
[143.32818604 232.16867065]
[148.01109314 246.41894531]
[152.69401550 260.66921997]
[157.37692261 274.91949463]
[162.05982971 289.16976929]
[167.72291565 296.36282349]
[166.69976807 303.69744873]
[171.14389038 318.02398682]
[175.58802795 332.35052490]
[180.03216553 346.67706299]
[184.47630310 361.00360107]
[188.92042542 375.33013916]
[193.36456299 389.65667725]
[199.33558655 403.41702271]
[206.76310730 416.44897461]
[214.19062805 429.48092651]
[221.61816406 442.51287842]
[239.45880127 451.86965942]
[238.56127930 471.17346191]
[246.42012024 483.94995117]
[254.27896118 496.72644043]
[262.13781738 509.50292969]
[269.99664307 522.27941895]
[277.85546875 535.05590820]
[285.71432495 547.83239746]
[294.09689331 548.23004150]
[301.54998779 551.87786865]
[306.88433838 558.11059570]
[309.28186035 565.85778809]
[308.42062378 573.82702637]
[304.51602173 580.71942139]
[311.50393677 593.99230957]
[325.65664673 602.27679443]
[325.28784180 618.67181396]
[310.77691650 626.31152344]
[297.05148315 617.33685303]
[298.23107910 600.98022461]
[291.24316406 587.70733643]
[271.87390137 578.06469727]
[272.93783569 555.69122314]
[265.07897949 542.91473389]
[257.22015381 530.13824463]
[249.36131287 517.36175537]
[241.50247192 504.58526611]
[233.64363098 491.80877686]
[225.78479004 479.03231812]
[215.64854431 477.56036377]
[207.83903503 470.59808350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[33 137]
[37 135]
[38 134]
[39 133]
[40 132]
[41 114]
[42 113]
[43 112]
[44 111]
[46 109]
[47 108]
[48 107]
[49 106]
[50 105]
[52 103]
[53 102]
[54 101]
[55 100]
[56 99]
[58 96]
[59 95]
[60 94]
[61 93]
[63 91]
[65 90]
[66 89]
[67 88]
[68 87]
[70 86]
[71 85]
[72 84]
[115 131]
[116 130]
[117 129]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
