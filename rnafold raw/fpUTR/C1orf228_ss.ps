%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGCUGAAGAGUUGCUGUAUUCUGGGAAUGGGCAGGGUCACUCGUCCGAACAGAGUCCUAUCCUACGCGGCGGAAGAGUGUGCCCUUUGACUUGCAUCGUCUACCUACCUCUGCCAUCCUCUACCAGCCGCAACUGCGAGGGCUGGAGCCAACUUCAGGACUGAUUGAUC\
) } def
/len { sequence length } bind def

/coor [
[145.16067505 224.44528198]
[147.70217896 212.69607544]
[152.82350159 201.81044006]
[160.26632690 192.34724426]
[151.23312378 180.37222290]
[142.19992065 168.39718628]
[133.16673279 156.42216492]
[124.13352966 144.44712830]
[115.10033417 132.47210693]
[106.06713104 120.49707031]
[90.68782043 121.97624969]
[76.63647461 112.20520782]
[66.97176361 123.67662048]
[57.30704498 135.14802551]
[47.64233017 146.61944580]
[37.97761536 158.09085083]
[39.57319641 173.81439209]
[29.51862144 186.00787354]
[13.77909184 187.43713379]
[1.69259191 177.25419617]
[0.42982700 161.50044250]
[10.73997307 149.52227783]
[26.50620461 148.42613220]
[36.17091751 136.95472717]
[45.83563232 125.48331451]
[55.50034714 114.01190186]
[65.16506195 102.54048920]
[67.31190491 87.69491577]
[61.29296112 73.95547485]
[55.27401733 60.21602631]
[49.25507736 46.47658157]
[38.87318420 43.09377670]
[32.21862030 34.71596146]
[31.31138420 24.27618790]
[36.21115875 15.26275826]
[30.68929100 1.31611109]
[25.16742325 -12.63053608]
[-13.49813175 -29.04785156]
[-24.70516586 -39.01792908]
[-35.91219711 -48.98800278]
[-47.11923218 -58.95807648]
[-58.32626724 -68.92815399]
[-69.62233734 -78.79723358]
[-81.00653839 -88.56452179]
[-92.39073944 -98.33181763]
[-103.77494049 -108.09910583]
[-115.15914154 -117.86640167]
[-130.67089844 -120.98022461]
[-135.29205322 -135.13981628]
[-146.67625427 -144.90710449]
[-158.06045532 -154.67440796]
[-169.44465637 -164.44169617]
[-180.93496704 -161.23867798]
[-192.42361450 -163.96755981]
[-201.06860352 -171.83386230]
[-204.78930664 -182.78730774]
[-202.76657104 -194.05525208]
[-218.15655518 -197.72387695]
[-222.26644897 -212.04023743]
[-233.29270935 -222.20988464]
[-248.48123169 -219.03364563]
[-262.62213135 -225.42230225]
[-270.27792358 -238.91926575]
[-268.50482178 -254.33471680]
[-257.98458862 -265.74105835]
[-242.76252747 -268.75234985]
[-228.69177246 -262.21066284]
[-221.18283081 -248.63143921]
[-223.12306213 -233.23612976]
[-212.09681702 -223.06648254]
[-197.49549866 -220.12525940]
[-192.59692383 -205.08151245]
[-174.40974426 -206.94050598]
[-160.37670898 -194.73190308]
[-159.67736816 -175.82589722]
[-148.29316711 -166.05859375]
[-136.90896606 -156.29130554]
[-125.52476501 -146.52401733]
[-110.82727814 -144.10882568]
[-105.39184570 -129.25059509]
[-94.00764465 -119.48330688]
[-82.62344360 -109.71601868]
[-71.23925018 -99.94872284]
[-59.85504532 -90.18143463]
[-52.70716858 -88.20574188]
[-48.35618973 -80.13518524]
[-37.14915848 -70.16510773]
[-25.94212341 -60.19503784]
[-14.73509026 -50.22496033]
[-3.52805638 -40.25488663]
[3.79858828 -41.85809326]
[18.45187759 -45.06451035]
[25.77852249 -46.66772079]
[31.79746437 -60.40716553]
[37.81640625 -74.14660645]
[30.71567917 -88.07907867]
[34.28218079 -103.30451965]
[46.83191681 -112.63394928]
[62.43928146 -111.66228485]
[73.73496246 -100.84832764]
[75.38547516 -85.29809570]
[66.61150360 -72.35392761]
[51.55585098 -68.12767029]
[45.53690720 -54.38822556]
[39.51796722 -40.64878082]
[48.02597427 -53.00247574]
[61.16890335 -60.23181534]
[76.15803528 -60.80283737]
[89.81288910 -54.59438324]
[99.23612213 -42.92378998]
[102.42825317 -28.26738358]
[98.71198273 -13.73503113]
[88.87582397 -2.41027737]
[75.00687408 3.30393529]
[60.04790878 2.19513750]
[47.17300034 -5.50140047]
[39.11407089 -18.15240479]
[44.63593674 -4.20575714]
[50.15780640 9.74089050]
[66.15335846 20.57043457]
[62.99452209 40.45764160]
[69.01346588 54.19708633]
[75.03240204 67.93653107]
[81.05134583 81.67597961]
[94.60484314 75.21766663]
[108.88928986 77.31323242]
[119.16066742 86.62086487]
[122.36752319 99.51321411]
[118.04216003 111.46387482]
[127.07536316 123.43890381]
[136.10856628 135.41394043]
[145.14175415 147.38896179]
[154.17495728 159.36399841]
[163.20816040 171.33901978]
[172.24134827 183.31405640]
[189.57841492 177.40713501]
[207.86846924 177.72895813]
[224.94429016 184.22587585]
[238.78784180 196.11351013]
[247.76869202 211.97134399]
[250.83604431 229.91250610]
[247.64166260 247.80830383]
[238.57936096 263.54067993]
[248.64962769 274.65777588]
[264.19824219 275.59490967]
[274.25256348 287.01266479]
[273.26333618 301.83010864]
[283.33358765 312.94720459]
[293.40386963 324.06430054]
[303.47412109 335.18139648]
[313.54440308 346.29849243]
[323.61465454 357.41558838]
[339.38342285 361.91867065]
[343.10501099 377.88995361]
[330.95095825 388.89953613]
[315.42431641 383.62170410]
[312.49755859 367.48583984]
[302.42730713 356.36874390]
[292.35702515 345.25164795]
[282.28677368 334.13458252]
[272.21649170 323.01748657]
[262.14624023 311.90039062]
[247.30343628 311.42416382]
[236.93238831 300.29330444]
[237.53253174 284.72802734]
[227.46226501 273.61093140]
[216.89993286 279.15417480]
[205.35296631 282.18374634]
[193.41127014 282.54058838]
[181.68588257 280.20230103]
[170.77770996 275.28448486]
[161.24673462 268.03500366]
[153.58323669 258.82162476]
[148.18261719 248.11317444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 135]
[5 134]
[6 133]
[7 132]
[8 131]
[9 130]
[10 129]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[28 124]
[29 123]
[30 122]
[31 121]
[35 119]
[36 118]
[37 117]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[49 78]
[50 77]
[51 76]
[52 75]
[57 72]
[59 70]
[60 69]
[93 105]
[94 104]
[95 103]
[143 166]
[144 165]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
