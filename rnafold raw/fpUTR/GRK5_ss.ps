%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACACAGAGGGAGGAAGAAGCGGCGGCGGCGGCGGCGGCGGCGGCGGCUCCUCUUUGCAGAGGGGGAAACUCUUGGGCUGAGAGCAGGAAUAAUGCGGUAGGCAAGGCGGGCUGCUGGCUCCCCCGGCUCCGGCAGCAGCGGCGGCAGCCCGAGCAGCGGCAGCAGCAGCGGCAGCACCCCAGGCGCUGACAGCCCCGCCGGCCGGCUCCGUUGCUGACCGCCGACUGUCA\
) } def
/len { sequence length } bind def

/coor [
[55.95506287 559.90637207]
[58.96795273 574.70837402]
[57.68721771 589.75952148]
[52.21668625 603.83966064]
[42.99982452 615.80737305]
[30.78380585 624.69250488]
[16.55892563 629.77478027]
[1.47833383 630.64215088]
[-13.23545551 627.22442627]
[-26.38966179 619.79852295]
[-36.91793060 608.96655273]
[-43.96678162 595.60650635]
[-46.96479797 580.80151367]
[-45.66894531 565.75164795]
[-40.18426895 551.67706299]
[-30.95539093 539.71856689]
[-18.73045158 530.84576416]
[-4.50047445 525.77777100]
[10.58098221 524.92547607]
[13.97486687 510.31448364]
[17.27059555 495.68103027]
[20.46801949 481.02578735]
[23.56699371 466.34939575]
[26.56737900 451.65252686]
[29.56776428 436.95565796]
[32.56814957 422.25881958]
[35.56853485 407.56195068]
[38.56892014 392.86508179]
[41.47058105 378.14840698]
[44.27338791 363.41259766]
[47.07619476 348.67678833]
[49.87900162 333.94097900]
[52.68180847 319.20513916]
[55.48461533 304.46932983]
[58.28742218 289.73352051]
[61.09022903 274.99771118]
[63.89303589 260.26190186]
[58.67014313 246.31303406]
[68.84978485 234.20166016]
[63.62689590 220.25279236]
[73.80654144 208.14141846]
[76.60934448 193.40559387]
[79.41215515 178.66978455]
[82.21495819 163.93397522]
[84.91878510 149.17967224]
[87.52350616 134.40754700]
[90.12823486 119.63543701]
[92.73295593 104.86331940]
[86.66805267 108.39267731]
[80.40495300 111.58412933]
[65.40495300 111.58412933]
[50.40495682 111.58412933]
[35.40495682 111.58412933]
[20.40495682 111.58412933]
[5.40495634 111.58412933]
[-9.59504414 111.58412933]
[-23.51884651 120.24782562]
[-37.85428238 112.28369904]
[-37.85428238 95.88455200]
[-23.51884651 87.92042542]
[-9.59504414 96.58412933]
[5.40495634 96.58412933]
[20.40495682 96.58412933]
[35.40495682 96.58412933]
[50.40495682 96.58412933]
[65.40495300 96.58412933]
[80.40495300 96.58412933]
[65.64231110 93.92623901]
[54.39810562 83.99810791]
[49.93243790 69.67826843]
[53.54007339 55.11856461]
[64.17502594 44.54039001]
[78.75383759 41.01074982]
[93.04956055 45.55300903]
[102.91735840 56.85020828]
[105.49617767 71.62686920]
[100.03980255 85.59674072]
[107.88586426 72.81240082]
[115.73192596 60.02806091]
[123.57799530 47.24372482]
[131.42405701 34.45938492]
[139.27011108 21.67504692]
[146.94383240 8.78652477]
[154.44383240 -4.20385599]
[154.64321899 -20.02380562]
[167.70756531 -27.17729759]
[175.20756531 -40.16767883]
[174.78691101 -58.58441162]
[190.32997131 -66.74640656]
[197.65490723 -79.83631134]
[188.97789001 -92.34513855]
[186.60209656 -107.31987000]
[190.94583130 -121.78195953]
[201.09626770 -132.87834167]
[215.00057983 -138.44427490]
[229.88101196 -137.42550659]
[237.20594788 -150.51539612]
[244.53086853 -163.60530090]
[244.51785278 -179.42649841]
[257.48498535 -186.75474548]
[264.80990601 -199.84463501]
[262.06225586 -212.43605042]
[268.41995239 -223.18350220]
[280.01043701 -226.61061096]
[287.51043701 -239.60098267]
[284.09756470 -249.90745544]
[286.85464478 -260.18139648]
[294.64129639 -267.10272217]
[304.73358154 -268.57247925]
[312.57965088 -281.35681152]
[310.34124756 -294.04864502]
[317.12655640 -304.53137207]
[328.84561157 -307.48901367]
[336.86260986 -320.16683960]
[344.87960815 -332.84469604]
[352.89657593 -345.52255249]
[360.91357422 -358.20040894]
[368.93054199 -370.87826538]
[376.94754028 -383.55612183]
[378.88406372 -392.46615601]
[385.15823364 -396.34933472]
[393.34469604 -408.91842651]
[401.53115845 -421.48748779]
[398.38171387 -430.34484863]
[399.63259888 -439.52322388]
[404.87951660 -446.98983765]
[412.84747314 -451.14956665]
[421.69842529 -451.18505859]
[430.38436890 -463.41430664]
[439.07031250 -475.64355469]
[447.75622559 -487.87280273]
[456.35989380 -500.16006470]
[464.88085938 -512.50482178]
[473.40182495 -524.84960938]
[474.87353516 -540.60217285]
[488.47113037 -546.68127441]
[485.37615967 -562.17950439]
[494.21600342 -575.28039551]
[509.74615479 -578.21136475]
[522.75280762 -569.23345947]
[525.51940918 -553.67321777]
[516.40454102 -540.76220703]
[500.81588745 -538.16027832]
[499.95364380 -523.29064941]
[485.74658203 -516.32861328]
[477.22561646 -503.98385620]
[468.70465088 -491.63909912]
[467.49362183 -484.36053467]
[459.98550415 -479.18685913]
[451.29956055 -466.95761108]
[442.61361694 -454.72836304]
[433.92767334 -442.49911499]
[433.76037598 -421.85253906]
[414.10025024 -413.30102539]
[405.91378784 -400.73196411]
[397.72729492 -388.16287231]
[389.62539673 -375.53912354]
[381.60839844 -362.86126709]
[373.59143066 -350.18341064]
[365.57443237 -337.50558472]
[357.55743408 -324.82772827]
[349.54046631 -312.14987183]
[341.52346802 -299.47201538]
[341.75531006 -281.91778564]
[325.36398315 -273.51074219]
[317.51791382 -260.72640991]
[318.39746094 -241.40106201]
[300.50082397 -232.10098267]
[293.00082397 -219.11061096]
[293.93930054 -201.57994080]
[277.89981079 -192.51971436]
[270.57485962 -179.42980957]
[271.11181641 -164.54489136]
[257.62075806 -156.28038025]
[250.29583740 -143.19047546]
[242.97091675 -130.10057068]
[251.62272644 -117.95102692]
[254.15188599 -103.18915558]
[250.00395203 -88.73386383]
[239.95014954 -77.46704102]
[225.94464111 -71.65906525]
[210.74479675 -72.51138306]
[203.41987610 -59.42148209]
[206.40466309 -47.70929718]
[200.42256165 -36.74834824]
[188.19793701 -32.66767883]
[180.69793701 -19.67729759]
[181.03500366 -4.78650570]
[167.43421936 3.29614377]
[159.93421936 16.28652573]
[160.27806091 21.03547287]
[157.65324402 26.05339432]
[152.05445862 29.52110863]
[144.20838928 42.30544662]
[136.36233521 55.08978653]
[128.51626587 67.87412262]
[120.67020416 80.65846252]
[112.82414246 93.44280243]
[107.50507355 107.46804047]
[104.90034485 122.24015808]
[102.29562378 137.01228333]
[99.69090271 151.78439331]
[101.28138733 160.76268005]
[96.95077515 166.73677063]
[94.14797211 181.47259521]
[91.34516144 196.20840454]
[88.54235840 210.94422913]
[93.56477356 225.94708252]
[83.58560181 237.00445557]
[88.60801697 252.00732422]
[78.62885284 263.06469727]
[75.82604218 277.80050659]
[73.02323914 292.53631592]
[70.22042847 307.27215576]
[67.41762543 322.00796509]
[64.61481476 336.74377441]
[61.81201172 351.47958374]
[59.00920486 366.21539307]
[56.20639801 380.95123291]
[57.67620087 389.95004272]
[53.26578140 395.86547852]
[50.26539612 410.56231689]
[47.26501083 425.25918579]
[44.26462555 439.95605469]
[41.26423645 454.65292358]
[38.26385117 469.34976196]
[39.61271286 478.36752319]
[35.12327194 484.22320557]
[31.92584991 498.87844849]
[33.15352249 507.91351318]
[28.58587456 513.70837402]
[25.19198990 528.31939697]
[38.35364914 535.73205566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 232]
[20 231]
[21 229]
[22 228]
[23 226]
[24 225]
[25 224]
[26 223]
[27 222]
[28 221]
[29 219]
[30 218]
[31 217]
[32 216]
[33 215]
[34 214]
[35 213]
[36 212]
[37 211]
[39 209]
[41 207]
[42 206]
[43 205]
[44 204]
[45 202]
[46 201]
[47 200]
[48 199]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[77 198]
[78 197]
[79 196]
[80 195]
[81 194]
[82 193]
[83 190]
[84 189]
[86 187]
[87 186]
[89 183]
[90 182]
[96 176]
[97 175]
[98 174]
[100 172]
[101 171]
[104 169]
[105 168]
[109 166]
[110 165]
[113 163]
[114 162]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
[121 156]
[122 155]
[123 154]
[128 152]
[129 151]
[130 150]
[131 149]
[132 147]
[133 146]
[134 145]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
