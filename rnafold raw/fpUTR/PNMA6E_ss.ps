%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCUUCCGGGAGAACCAGGGGUUUCUGGGAGCCCGGGUGACUGUUGGCGCCAAGUGCCUCAGAGAGCCACACGCUUCCACGCUGCGGAGCUGAGGUGAUCUCUUCAGACCCUUCGGAGAGACCCAGAUAUCUGACUUCCCACUGAGAGACCCGGAAUUGCCCAGAGUUUGAGAAAGCUGUGUCGGAGACUGCAACAGUCAGCACACAUUCCUGAUUGAUCAGGCUCCCUCCCUCAAGUCCUCUGCG\
) } def
/len { sequence length } bind def

/coor [
[359.95330811 280.12622070]
[363.73220825 265.61004639]
[377.38470459 259.39550781]
[364.39431763 251.89549255]
[351.40393066 244.39549255]
[338.31997681 237.05998230]
[325.14450073 229.89013672]
[311.96899414 222.72029114]
[298.79351807 215.55043030]
[285.61804199 208.38058472]
[272.44256592 201.21072388]
[259.26708984 194.04087830]
[247.22055054 202.83555603]
[232.48957825 205.53883362]
[217.98631287 201.56187439]
[206.60156250 191.64179993]
[200.62861633 177.70585632]
[201.30139160 162.49700928]
[188.12591553 155.32716370]
[174.95043945 148.15730286]
[161.72999573 141.07070923]
[148.46510315 134.06765747]
[135.20022583 127.06460571]
[120.94209290 139.15325928]
[102.97226715 144.30253601]
[84.47564697 141.59979248]
[68.73050690 131.52407837]
[58.52745056 115.86114502]
[43.81336594 118.77590179]
[29.09928513 121.69065094]
[14.38520241 124.60540771]
[-0.32887998 127.52015686]
[-15.04296207 130.43490601]
[-29.75704384 133.34967041]
[-36.65043640 148.80854797]
[-51.25922012 157.02288818]
[-67.71928406 154.92300415]
[-79.55802155 143.53466797]
[-94.23416138 146.63482666]
[-108.91029358 149.73500061]
[-118.19855499 164.57284546]
[-135.01556396 168.02214050]
[-148.83917236 158.42411804]
[-163.47503662 161.70919800]
[-178.11088562 164.99426270]
[-185.64691162 175.44187927]
[-197.88653564 177.88690186]
[-208.17541504 171.55526733]
[-222.85154724 174.65542603]
[-237.52767944 177.75559998]
[-252.20382690 180.85575867]
[-266.87994385 183.95591736]
[-281.12747192 193.14529419]
[-293.90182495 181.99845886]
[-286.72692871 166.63757324]
[-269.98013306 169.27978516]
[-255.30398560 166.17961121]
[-240.62783813 163.07945251]
[-225.95170593 159.97929382]
[-211.27557373 156.87913513]
[-198.85444641 144.46736145]
[-181.39596558 150.35841370]
[-166.76010132 147.07333374]
[-152.12425232 143.78825378]
[-146.82948303 132.05694580]
[-135.58059692 125.41137695]
[-122.36287689 126.46574402]
[-112.01045990 135.05885315]
[-97.33432007 131.95869446]
[-82.65818787 128.85853577]
[-78.37422943 116.22827148]
[-68.33238983 107.28769684]
[-55.07994080 104.44770050]
[-42.04991913 108.55319977]
[-32.67179871 118.63558197]
[-17.95771599 115.72083282]
[-3.24363279 112.80607605]
[11.47044945 109.89132690]
[26.18453217 106.97657013]
[40.89861298 104.06182098]
[55.61269760 101.14706421]
[54.11300278 88.58022308]
[56.30333710 75.34742737]
[62.40942764 62.55860901]
[54.34328079 49.91197586]
[40.39895248 42.43760681]
[40.07833862 27.54645157]
[32.01219559 14.89981842]
[23.94605064 2.25318503]
[15.87990665 -10.39344788]
[7.81376314 -23.04008102]
[-0.49026248 -35.53180313]
[-9.02919579 -47.86414337]
[-17.56812859 -60.19648361]
[-26.10706329 -72.52882385]
[-34.64599609 -84.86116791]
[-43.18492889 -97.19350433]
[-58.77733612 -99.77272797]
[-67.91099548 -112.67047119]
[-65.16706848 -128.23474121]
[-52.17347717 -137.23152161]
[-36.63908768 -134.32319641]
[-27.78018379 -121.23520660]
[-30.85259056 -105.73243713]
[-22.31365585 -93.40010071]
[-13.77472305 -81.06775665]
[-5.23578930 -68.73542023]
[3.30314422 -56.40307999]
[11.84207726 -44.07073975]
[15.20178509 -43.08042145]
[18.25480652 -40.42777634]
[20.23138237 -36.27172470]
[20.46039581 -31.10622406]
[28.52653885 -18.45959091]
[36.59268188 -5.81295824]
[44.65882874 6.83367443]
[52.72497177 19.48030853]
[66.09235382 26.05010605]
[66.98991394 41.84583282]
[75.05606079 54.49246597]
[82.39412689 52.94238281]
[74.91068268 39.94245529]
[84.96197510 28.80820847]
[98.65722656 34.92705536]
[97.07026672 49.84222412]
[104.40833282 48.29214096]
[106.67070007 33.46373367]
[108.93305969 18.63532448]
[102.46851349 3.56410456]
[112.50366974 -9.40615749]
[128.71522522 -6.93276739]
[134.42611694 8.43986225]
[123.76147461 20.89768791]
[121.49910736 35.72609711]
[119.23674011 50.55450821]
[132.04032898 59.90420532]
[141.11447144 72.26567078]
[145.86096191 86.29991913]
[146.12902832 100.59352112]
[142.20327759 113.79972076]
[155.46815491 120.80277252]
[168.73304749 127.80582428]
[177.75823975 129.03889465]
[182.12030029 134.98182678]
[195.29577637 142.15168762]
[208.47125244 149.32153320]
[220.87675476 140.49742126]
[235.82238770 137.94497681]
[250.33476257 142.11764526]
[261.55023193 152.13633728]
[267.27993774 165.97396851]
[266.43695068 180.86540222]
[279.61242676 188.03524780]
[292.78790283 195.20510864]
[305.96337891 202.37495422]
[319.13885498 209.54479980]
[332.31433105 216.71466064]
[345.48980713 223.88450623]
[352.05780029 224.09846497]
[356.82876587 227.12864685]
[358.90393066 231.40512085]
[371.89431763 238.90512085]
[384.88470459 246.40512085]
[398.10513306 253.49171448]
[411.54251099 260.15783691]
[424.97985840 266.82397461]
[438.41720581 273.49011230]
[451.85458374 280.15625000]
[465.37496948 286.65234375]
[478.97625732 292.97732544]
[492.57751465 299.30227661]
[506.17880249 305.62725830]
[519.78009033 311.95223999]
[533.38134766 318.27722168]
[547.78869629 304.75619507]
[566.47509766 298.47131348]
[586.03894043 300.52859497]
[602.93469238 310.51901245]
[614.11547852 326.59912109]
[617.58239746 345.83099365]
[632.29644775 348.74575806]
[647.01055908 351.66052246]
[661.72460938 354.57525635]
[676.43872070 357.49002075]
[685.43939209 356.08914185]
[691.31951904 360.53549194]
[704.46392822 352.17712402]
[719.30346680 355.53018188]
[727.19085693 368.11288452]
[741.86700439 371.21304321]
[756.54315186 374.31320190]
[771.21929932 377.41336060]
[785.89544678 380.51351929]
[802.64221191 377.87133789]
[809.81713867 393.23220825]
[797.04278564 404.37905884]
[782.79528809 395.18966675]
[768.11914062 392.08950806]
[753.44299316 388.98934937]
[738.76684570 385.88919067]
[724.09069824 382.78903198]
[711.78833008 391.10684204]
[696.86047363 388.17190552]
[688.21936035 375.21160889]
[673.52398682 372.20410156]
[658.80987549 369.28933716]
[644.09582520 366.37460327]
[629.38171387 363.45983887]
[614.66760254 360.54507446]
[612.99768066 364.42880249]
[610.97698975 368.14208984]
[608.62268066 371.65341187]
[619.06072998 382.42596436]
[629.49871826 393.19851685]
[639.93670654 403.97106934]
[650.37475586 414.74362183]
[666.28588867 418.71447754]
[670.54180908 434.55175781]
[658.76446533 445.96337891]
[643.06927490 441.21008301]
[639.60217285 425.18164062]
[629.16418457 414.40908813]
[618.72613525 403.63653564]
[608.28814697 392.86395264]
[597.85015869 382.09140015]
[586.78289795 387.77697754]
[574.57678223 390.28228760]
[562.12811279 389.41333008]
[550.35382080 385.22418213]
[540.12371826 378.01385498]
[532.19653320 368.30496216]
[527.16326904 356.80578613]
[525.40344238 344.35873413]
[527.05639648 331.87847900]
[513.45507812 325.55352783]
[499.85382080 319.22854614]
[486.25253296 312.90356445]
[472.65127563 306.57858276]
[459.04998779 300.25360107]
[454.35742188 301.01153564]
[449.13647461 298.84692383]
[445.18844604 293.59362793]
[431.75109863 286.92749023]
[418.31372070 280.26135254]
[404.87637329 273.59521484]
[391.43899536 266.92907715]
[393.82180786 281.73861694]
[383.82525635 292.92202759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 163]
[4 162]
[5 161]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[11 153]
[12 152]
[18 146]
[19 145]
[20 144]
[21 142]
[22 141]
[23 140]
[28 81]
[29 80]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[38 70]
[39 69]
[40 68]
[43 64]
[44 63]
[45 62]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[84 120]
[85 119]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[126 135]
[127 134]
[128 133]
[164 246]
[165 245]
[166 244]
[167 243]
[168 242]
[169 239]
[170 238]
[171 237]
[172 236]
[173 235]
[174 234]
[180 209]
[181 208]
[182 207]
[183 206]
[184 205]
[186 204]
[189 201]
[190 200]
[191 199]
[192 198]
[193 197]
[212 225]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
