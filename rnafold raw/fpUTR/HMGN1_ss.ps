%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGAGGAGGCGGGCUCCCAAUCCGGUUCCAUCCGGUUCUCCCACCGCCCCCGCUGUGGGUCUCAGCAGCUCGGGCGGCGGGAGGAGUGGCAGCGGCAAGGCAGCCCAGUUUCGCGAAGGCUGUCGGCGCGCCGCGGCCCGCAGGCACCCGGCACGCGCCUUCCCCGCAGGCACCCGGCACGCGCCUUCCCCGCCGCCACG\
) } def
/len { sequence length } bind def

/coor [
[131.08399963 411.33731079]
[130.39462280 396.35317993]
[129.59045410 381.37472534]
[128.67153931 366.40292358]
[120.16909027 354.17355347]
[127.04644775 339.92529297]
[126.12753296 324.95346069]
[117.62507629 312.72409058]
[124.50243378 298.47586060]
[123.58351898 283.50402832]
[122.66460419 268.53219604]
[121.74568939 253.56036377]
[120.82677460 238.58853149]
[119.90785980 223.61671448]
[118.98894501 208.64488220]
[110.48649597 196.41551208]
[117.36384583 182.16726685]
[106.07096863 172.52328491]
[104.92577362 157.35281372]
[115.11784363 145.57318115]
[114.19892883 130.60136414]
[107.50337982 127.22206116]
[100.74456787 140.61303711]
[87.35369110 133.85403442]
[94.11228943 120.46345520]
[87.41674805 117.08415222]
[74.82626343 125.23767090]
[62.23578262 133.39117432]
[49.64530182 141.54469299]
[46.58517075 157.04989624]
[33.41116333 165.78036499]
[17.93918800 162.55647278]
[9.34848881 149.29089355]
[12.73577881 133.85386658]
[26.09143639 125.40390015]
[41.49179077 128.95420837]
[54.08227158 120.80069733]
[66.67275238 112.64718628]
[79.26322937 104.49367523]
[78.00042725 89.54692078]
[64.22045135 83.62136841]
[50.44047546 77.69580841]
[36.66049957 71.77024841]
[22.88052177 65.84469604]
[9.10054493 59.91913605]
[-4.67943192 53.99357605]
[-20.41369057 55.64998245]
[-29.04927063 43.51425171]
[-42.82924652 37.58869171]
[-56.60922241 31.66313553]
[-70.38919830 25.73757744]
[-84.16918182 19.81201935]
[-97.94915771 13.88646221]
[-112.48052216 19.49691010]
[-126.37096405 13.29125118]
[-131.63012695 -0.59676188]
[-145.41009521 -6.52231932]
[-159.19007874 -12.44787693]
[-172.97004700 -18.37343407]
[-186.75003052 -24.29899216]
[-200.01872253 -16.25402069]
[-215.47918701 -17.57818985]
[-227.18658447 -27.76232529]
[-230.63916016 -42.89042282]
[-224.50933838 -57.14542007]
[-211.15415955 -65.04597473]
[-195.70895386 -63.55417252]
[-184.11273193 -53.24362946]
[-180.82446289 -38.07896805]
[-167.04449463 -32.15341187]
[-153.26451111 -26.22785378]
[-139.48454285 -20.30229568]
[-125.70455933 -14.37673855]
[-112.00672913 -20.11301613]
[-97.94745636 -14.29995918]
[-92.02359772 0.10648522]
[-78.24362183 6.03204298]
[-64.46364594 11.95760059]
[-50.68366623 17.88315773]
[-36.90369034 23.80871582]
[-23.12371254 29.73427391]
[-8.37509060 27.65403175]
[1.24612558 40.21360016]
[15.02610302 46.13915634]
[28.80607986 52.06471634]
[42.58605576 57.99027252]
[56.36603546 63.91583252]
[70.14601135 69.84138489]
[83.92598724 75.76694489]
[98.83975983 74.16091919]
[111.04222107 65.43738556]
[123.24467468 56.71385193]
[129.97129822 42.39382553]
[144.82467651 41.28631210]
[151.55130005 26.96628761]
[166.40466309 25.85877037]
[178.60713196 17.13523483]
[190.80958557 8.41170025]
[203.01203918 -0.31183517]
[199.82482910 -17.98159409]
[206.78526306 -35.34540176]
[222.50791931 -46.81081390]
[242.66871643 -48.24065399]
[248.48851013 -62.06562805]
[254.30830383 -75.89060211]
[260.12811279 -89.71558380]
[265.94790649 -103.54055786]
[271.76770020 -117.36553192]
[277.58749390 -131.19050598]
[270.69015503 -147.26429749]
[277.41726685 -163.04356384]
[293.15826416 -168.95864868]
[298.76550293 -182.87118530]
[299.07846069 -199.82223511]
[315.45367432 -204.21405029]
[324.20697021 -189.69453430]
[312.67803955 -177.26393127]
[307.07080078 -163.35139465]
[313.72567749 -152.31449890]
[312.79324341 -139.26513672]
[304.39041138 -128.98515320]
[291.41247559 -125.37071228]
[285.59268188 -111.54573822]
[279.77288818 -97.72075653]
[273.95306396 -83.89578247]
[268.13327026 -70.07080841]
[262.31347656 -56.24583054]
[256.49368286 -42.42085648]
[266.21353149 -30.99612617]
[280.79235840 -34.52574158]
[295.37115479 -38.05535507]
[309.94998169 -41.58496857]
[324.52880859 -45.11458206]
[339.05181885 -48.86719131]
[353.51562500 -52.84191513]
[367.97943115 -56.81663513]
[382.44320679 -60.79135895]
[393.69982910 -71.90886688]
[408.02239990 -67.82064056]
[422.45532227 -71.90607452]
[436.85650635 -76.10197449]
[451.25772095 -80.29788208]
[462.20220947 -92.51058197]
[478.19314575 -88.87438965]
[482.78042603 -73.12990570]
[471.24505615 -61.47370148]
[455.45361328 -65.89668274]
[441.05242920 -61.70078278]
[426.65121460 -57.50487900]
[421.10614014 -52.61337662]
[411.99713135 -53.35683823]
[401.77505493 -42.52362823]
[386.41793823 -46.32755661]
[371.95413208 -42.35283279]
[357.49032593 -38.37811279]
[343.02651978 -34.40338898]
[339.92642212 -30.76475143]
[334.50582886 -29.03779984]
[328.05841064 -30.53576851]
[313.47958374 -27.00615311]
[298.90078735 -23.47653961]
[284.32196045 -19.94692612]
[269.74316406 -16.41731071]
[266.46151733 0.78458112]
[255.91647339 14.10897350]
[240.87710571 20.82915878]
[224.95396423 19.85664749]
[211.73558044 11.89062119]
[199.53311157 20.61415672]
[187.33065796 29.33769226]
[175.12820435 38.06122589]
[169.27438354 51.75728607]
[153.54820251 53.48876572]
[147.69438171 67.18482208]
[131.96821594 68.91630554]
[119.76575470 77.63983917]
[107.56330109 86.36338043]
[121.90563202 89.55567932]
[132.44177246 105.72238159]
[129.17074585 129.68244934]
[130.08966064 144.65426636]
[141.64578247 155.09907532]
[142.36441040 170.29573059]
[132.33567810 181.24835205]
[140.90385437 194.54861450]
[133.96076965 207.72596741]
[134.87968445 222.69779968]
[135.79859924 237.66961670]
[136.71751404 252.64144897]
[137.63642883 267.61328125]
[138.55534363 282.58511353]
[139.47425842 297.55694580]
[148.04243469 310.85717773]
[141.09936523 324.03454590]
[142.01828003 339.00637817]
[150.58645630 352.30664062]
[143.64337158 365.48400879]
[144.56228638 380.45581055]
[148.21302795 388.83432007]
[145.37878418 395.66378784]
[146.06814575 410.64794922]
[155.36260986 424.15887451]
[148.06573486 438.84518433]
[131.68391418 439.59884644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 198]
[4 197]
[6 195]
[7 194]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[17 184]
[20 181]
[21 180]
[26 39]
[27 38]
[28 37]
[29 36]
[40 89]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[48 81]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[90 177]
[91 176]
[92 175]
[94 173]
[96 171]
[97 170]
[98 169]
[99 168]
[103 128]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[112 118]
[113 117]
[129 163]
[130 162]
[131 161]
[132 160]
[133 159]
[134 156]
[135 155]
[136 154]
[137 153]
[139 151]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
