%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCAUGCGCGCUGCGGAAGCUGGUGCUGGACAGCUGGCGCCGGCAGCAGCGGACCGGCGGGAGACGGCGGCUUGGGAGCUGGCUGUGCUGCAGGAGCUGCGGCAGCCGCCGUCCUUGCACCUAAGGAACCUCUGCUGCCAGCCCUUCCUCACUUUUGGAA\
) } def
/len { sequence length } bind def

/coor [
[67.75643158 106.01550293]
[56.50667953 115.93734741]
[45.25692749 125.85919952]
[34.00717163 135.78103638]
[22.75741768 145.70289612]
[21.61402893 161.23770142]
[10.06383896 171.13960266]
[-4.73918533 169.95382690]
[-15.98893929 179.87567139]
[-26.64652443 190.43104553]
[-36.67631912 201.58465576]
[-46.70611572 212.73828125]
[-56.73591232 223.89190674]
[-66.76570892 235.04551697]
[-76.68755341 246.29527283]
[-86.50052643 257.64010620]
[-89.05690002 273.83877563]
[-104.45857239 279.47088623]
[-116.86162567 268.74258423]
[-113.50685883 252.69024658]
[-97.84537506 247.82713318]
[-88.03239441 236.48229980]
[-86.02535248 229.33181763]
[-77.91932678 225.01571655]
[-67.88952637 213.86210632]
[-57.85973358 202.70848083]
[-47.82993698 191.55487061]
[-37.80014420 180.40124512]
[-52.78785706 179.79429626]
[-63.08701706 168.88891602]
[-62.83670044 153.89100647]
[-52.17935181 143.33540344]
[-37.17972946 143.22894287]
[-26.37363625 153.63223267]
[-25.91078568 168.62591553]
[-14.66103172 158.70407104]
[-13.98787117 143.86889648]
[-2.72036147 133.64646912]
[12.83557129 134.45314026]
[24.08532524 124.53128815]
[35.33507919 114.60944366]
[46.58483505 104.68759918]
[57.83458710 94.76574707]
[98.36073303 80.26094055]
[104.53212738 66.58930206]
[110.70352936 52.91765594]
[116.87492371 39.24601364]
[123.04632568 25.57436752]
[129.21772766 11.90272427]
[135.38911438 -1.76891971]
[141.56051636 -15.44056320]
[140.18617249 -31.20196342]
[152.47460938 -39.61881638]
[158.64601135 -53.29045868]
[156.37300110 -71.54146576]
[170.96492004 -81.25364685]
[176.87168884 -95.04168701]
[182.24272156 -109.04711914]
[186.93292236 -123.29499817]
[191.48561096 -137.58740234]
[196.03831482 -151.87982178]
[200.59100342 -166.17222595]
[205.14369202 -180.46463013]
[204.76957703 -189.64050293]
[209.92430115 -194.98712158]
[214.75158691 -209.18913269]
[219.57888794 -223.39114380]
[224.40618896 -237.59315491]
[229.23347473 -251.79516602]
[234.06077576 -265.99719238]
[238.88806152 -280.19918823]
[243.71536255 -294.40121460]
[248.54266357 -308.60324097]
[253.36994934 -322.80523682]
[258.06015015 -337.05313110]
[254.87638855 -352.55065918]
[266.11157227 -362.32919312]
[262.92779541 -377.82675171]
[274.16299438 -387.60528564]
[278.71569824 -401.89767456]
[283.26837158 -416.19009399]
[287.82107544 -430.48251343]
[282.59649658 -442.30938721]
[286.71746826 -454.14019775]
[297.44909668 -459.78689575]
[302.27639771 -473.98892212]
[307.10369873 -488.19091797]
[311.93099976 -502.39294434]
[311.30364990 -519.33526611]
[327.41021729 -524.62823486]
[336.95504761 -510.61633301]
[326.13299561 -497.56564331]
[321.30572510 -483.36364746]
[316.47842407 -469.16162109]
[311.65112305 -454.95959473]
[316.00723267 -437.98092651]
[302.11349487 -425.92980957]
[297.56079102 -411.63739014]
[293.00811768 -397.34500122]
[288.45541382 -383.05258179]
[291.96484375 -368.57733154]
[280.40399170 -357.77648926]
[283.91342163 -343.30123901]
[272.35256958 -332.50042725]
[273.32342529 -325.13735962]
[267.57196045 -317.97796631]
[262.74465942 -303.77593994]
[257.91738892 -289.57391357]
[253.09008789 -275.37191772]
[248.26278687 -261.16989136]
[243.43550110 -246.96788025]
[238.60820007 -232.76586914]
[233.78089905 -218.56384277]
[228.95361328 -204.36183167]
[224.12631226 -190.15982056]
[219.43609619 -175.91194153]
[214.88340759 -161.61953735]
[210.33071899 -147.32711792]
[205.77803040 -133.03471375]
[201.22534180 -118.74230194]
[202.19619751 -111.37922668]
[196.44473267 -104.21982574]
[197.60459900 -101.61780548]
[197.77828979 -98.38901520]
[196.71775818 -94.91622162]
[194.32148743 -91.66614532]
[190.65972900 -89.13491821]
[184.75297546 -75.34687805]
[188.95704651 -63.97238922]
[184.11059570 -52.41978073]
[172.31765747 -47.11906052]
[166.14625549 -33.44741821]
[167.96202087 -18.66390419]
[155.23216248 -9.26916599]
[149.06076050 4.40247822]
[142.88935852 18.07412148]
[136.71797180 31.74576569]
[130.54656982 45.41741180]
[124.37517548 59.08905411]
[118.20377350 72.76069641]
[112.03237915 86.43234253]
[124.52986908 78.13700104]
[139.36370850 80.36352539]
[148.87513733 91.96234894]
[148.15339661 106.94496918]
[137.57110596 117.57583618]
[122.59194946 118.36620331]
[110.94865417 108.90622711]
[115.77595520 123.10824585]
[120.60324860 137.31025696]
[135.46353149 141.77696228]
[144.83348083 154.14562988]
[145.11015320 169.66023254]
[136.18714905 182.35510254]
[121.49556732 187.34881592]
[106.68461609 182.72116089]
[97.44939423 170.25157166]
[97.34104919 154.73487854]
[106.40122986 142.13755798]
[101.57393646 127.93553925]
[96.74664307 113.73352051]
[89.49909210 111.80401611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[8 36]
[9 35]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 22]
[16 21]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[53 132]
[54 131]
[56 128]
[57 127]
[58 122]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 104]
[77 102]
[79 100]
[80 99]
[81 98]
[82 97]
[85 95]
[86 94]
[87 93]
[88 92]
[148 161]
[149 160]
[150 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
