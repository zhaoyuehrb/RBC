%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUGCCAUGGGGACCUGGAUGCUGACGAAGGCUCGCGAGGCUGUGAGCAGCCACAGUGCCCUGCUCAGAAGCCCCGGGCUCGUCAGUCAAACCGGUUCUCUGUUUGCACUCGGCAGCACGGGCAGGCAAGUGGUCCCUAGGUUCGGGAGCAGAGCAGCAGCGCCUCAGUCCUGGUCCCCCAGUCCCAAGCCUCACCUGCCUGCCCAGCGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[88.87729645 106.70957947]
[73.91693878 105.61971283]
[59.59106827 112.33386993]
[47.45960999 103.69228363]
[32.49925613 102.60240936]
[17.53890419 101.51254272]
[1.15334356 109.91842651]
[-12.97002220 99.49951935]
[-27.94464493 98.62734985]
[-42.91926575 97.75518036]
[-57.89389038 96.88300323]
[-72.86851501 96.01083374]
[-87.84313202 95.13865662]
[-102.81775665 94.26648712]
[-117.04446411 101.18828583]
[-129.30032349 92.72405243]
[-144.27494812 91.85188293]
[-159.24955750 90.97970581]
[-174.22418213 90.10753632]
[-190.48576355 98.75084686]
[-204.75915527 88.53844452]
[-219.74488831 87.88415527]
[-234.73497009 87.33885956]
[-249.72862244 86.90258789]
[-264.72229004 86.46632385]
[-279.71594238 86.03005219]
[-294.70959473 85.59378052]
[-309.70324707 85.15750885]
[-324.69689941 84.72123718]
[-330.68231201 87.51515198]
[-336.33282471 86.95393372]
[-340.11853027 84.04791260]
[-355.09313965 83.17574310]
[-370.06777954 82.30356598]
[-385.04238892 81.43139648]
[-400.01699829 80.55922699]
[-408.76229858 83.18363190]
[-415.20260620 79.56391144]
[-423.98510742 82.06085205]
[-430.37210083 78.34783936]
[-445.31500244 77.04050446]
[-460.25793457 75.73316956]
[-475.20086670 74.42583466]
[-491.70693970 82.59252167]
[-505.67727661 71.96930695]
[-520.63763428 70.87944031]
[-535.59796143 69.78956604]
[-550.55834961 68.69969940]
[-565.51867676 67.60982513]
[-580.47906494 66.51995850]
[-595.43939209 65.43009186]
[-603.99847412 78.18303680]
[-617.79437256 84.93346405]
[-633.11608887 83.86553955]
[-645.84216309 75.26653290]
[-652.54931641 61.44952393]
[-651.43334961 46.13122559]
[-642.79449463 33.43218231]
[-628.95654297 26.76837540]
[-613.64184570 27.93233109]
[-600.96990967 36.61095428]
[-594.34954834 50.46973419]
[-579.38916016 51.55960464]
[-564.42883301 52.64947510]
[-549.46844482 53.73934555]
[-534.50811768 54.82921600]
[-519.54772949 55.91908264]
[-504.58740234 57.00895309]
[-495.23526001 49.34038162]
[-482.76489258 50.12353516]
[-473.89352417 59.48291397]
[-458.95059204 60.79024887]
[-444.00769043 62.09758377]
[-429.06475830 63.40492249]
[-414.11273193 64.60355377]
[-399.14483643 65.58460236]
[-384.17022705 66.45677185]
[-369.19558716 67.32894897]
[-354.22097778 68.20111847]
[-339.24633789 69.07329559]
[-324.26062012 69.72758484]
[-309.26696777 70.16385651]
[-294.27331543 70.60012817]
[-279.27966309 71.03639221]
[-264.28601074 71.47266388]
[-249.29235840 71.90893555]
[-234.29870605 72.34520721]
[-227.52386475 69.39878845]
[-219.09059143 72.89842987]
[-204.10487366 73.55272675]
[-194.97973633 65.61539459]
[-182.49185181 66.03551483]
[-173.35202026 75.13291168]
[-158.37739563 76.00508881]
[-143.40277100 76.87725830]
[-128.42814636 77.74942780]
[-115.27252197 70.76524353]
[-101.94558716 79.29186249]
[-86.97096252 80.16403961]
[-71.99633789 81.03620911]
[-57.02171707 81.90837860]
[-42.04709244 82.78055573]
[-27.07247162 83.65272522]
[-12.09784889 84.52490234]
[-2.85823226 76.72112274]
[9.62221050 77.32282257]
[18.62877274 86.55218506]
[33.58912659 87.64205933]
[48.54948044 88.73192596]
[61.80529022 81.93981171]
[75.00681305 90.65935516]
[89.96716309 91.74922943]
[104.95288849 92.40351868]
[119.95130157 92.62167358]
[134.94970703 92.83983612]
[143.57218933 89.83646393]
[150.16426086 93.17181396]
[165.15791321 93.60808563]
[175.05586243 85.34190369]
[187.53283691 86.01176453]
[195.93147278 94.71420288]
[210.91719055 95.36849213]
[225.90290833 96.02278137]
[240.88864136 96.67707062]
[255.87435913 97.33135986]
[270.86007690 97.98565674]
[285.84579468 98.63994598]
[300.83154297 99.29423523]
[315.81726074 99.94852448]
[329.94180298 92.82054901]
[342.31945801 101.10563660]
[357.30517578 101.75992584]
[372.29089355 102.41421509]
[362.96243286 90.66773987]
[364.53833008 75.75074768]
[376.11535645 66.21280670]
[391.05822754 67.52050781]
[400.80258179 78.92435455]
[399.76348877 93.88832092]
[388.53741455 103.83560181]
[403.40908813 105.79349518]
[418.28076172 107.75138855]
[433.15243530 109.70928192]
[448.02410889 111.66717529]
[462.71615601 105.79735565]
[474.32461548 115.12969971]
[489.19628906 117.08759308]
[504.06796265 119.04548645]
[518.93963623 121.00337982]
[531.51782227 106.57160950]
[550.10687256 102.67203522]
[567.15258789 110.70423889]
[575.83935547 127.25635529]
[590.78228760 128.56369019]
[605.20428467 122.05859375]
[617.20880127 130.87571716]
[632.15173340 132.18304443]
[647.09460449 133.49038696]
[657.45648193 125.81369781]
[669.87341309 127.20789337]
[677.75183105 136.38394165]
[692.67413330 137.90847778]
[704.76757812 127.73376465]
[720.50610352 129.17372131]
[730.55236816 141.37403870]
[728.94610596 157.09648132]
[716.64025879 167.01321411]
[700.93566895 165.24081421]
[691.14959717 152.83079529]
[676.22729492 151.30627441]
[660.62451172 159.34217834]
[645.78729248 148.43330383]
[630.84436035 147.12596130]
[615.90142822 145.81863403]
[602.54827881 152.41723633]
[589.47497559 143.50660706]
[574.53204346 142.19927979]
[568.93884277 151.84428406]
[560.11120605 158.73837280]
[549.29974365 161.85620117]
[538.05462646 160.71098328]
[528.00286865 155.42991638]
[520.61328125 146.74148560]
[516.98175049 135.87506104]
[502.11007690 133.91716003]
[487.23840332 131.95927429]
[472.36672974 130.00137329]
[458.73840332 136.01124573]
[446.06622314 126.53884888]
[431.19454956 124.58095551]
[416.32287598 122.62306213]
[401.45120239 120.66516876]
[386.57952881 118.70727539]
[371.63659668 117.39994049]
[356.65087891 116.74565125]
[341.66516113 116.09136200]
[328.61251831 123.26614380]
[315.16296387 114.93424988]
[300.17724609 114.27996063]
[285.19152832 113.62567139]
[270.20578003 112.97137451]
[255.22006226 112.31708527]
[240.23434448 111.66279602]
[225.24862671 111.00850677]
[210.26289368 110.35421753]
[195.27717590 109.69992065]
[180.16801453 118.62944794]
[164.72163391 108.60174561]
[149.72798157 108.16547394]
[134.73155212 107.83824921]
[119.73313904 107.62008667]
[104.73472595 107.40193176]
[102.37863922 109.32883453]
[99.27037811 110.44245911]
[95.70928192 110.46290588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[4 109]
[5 108]
[6 107]
[8 104]
[9 103]
[10 102]
[11 101]
[12 100]
[13 99]
[14 98]
[16 96]
[17 95]
[18 94]
[19 93]
[21 90]
[22 89]
[23 87]
[24 86]
[25 85]
[26 84]
[27 83]
[28 82]
[29 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[38 75]
[40 74]
[41 73]
[42 72]
[43 71]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[113 212]
[114 211]
[115 210]
[117 209]
[118 208]
[121 206]
[122 205]
[123 204]
[124 203]
[125 202]
[126 201]
[127 200]
[128 199]
[129 198]
[131 196]
[132 195]
[133 194]
[140 193]
[141 192]
[142 191]
[143 190]
[144 189]
[146 187]
[147 186]
[148 185]
[149 184]
[153 177]
[154 176]
[156 174]
[157 173]
[158 172]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
