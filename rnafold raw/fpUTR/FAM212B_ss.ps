%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCGCGCGCGGCUAGCCGCUGGGGAAGCGACUCUGAGUCCCGGGCUCGGAGCGCAGGCUCAGCUCCGCGCUGCGAGCGCUACGGGCGCAGGGGCGGGGAGCCGGCCCGGAGCGCAGUUUCCAGUGGGGCCGGGGUUUCACCCGGGCCCUCUCUGUUUGAACCGAACCCGACAAAUGGGCGC\
) } def
/len { sequence length } bind def

/coor [
[93.05779266 198.73416138]
[78.18683624 204.75364685]
[64.28000641 196.75491333]
[62.00543213 180.87393188]
[73.10797119 169.29321289]
[74.13719177 154.32855225]
[75.16641235 139.36390686]
[76.19564056 124.39926147]
[61.79338837 120.20697784]
[54.63035202 133.38615417]
[47.46731186 146.56533813]
[40.30427551 159.74452209]
[41.26719284 176.11538696]
[27.42412758 184.90751648]
[13.01563644 177.07632446]
[12.86393929 160.67788696]
[27.12508965 152.58149719]
[34.28812790 139.40231323]
[41.45116806 126.22312164]
[48.61420441 113.04393768]
[57.81955338 91.38355255]
[73.69161987 79.93376160]
[89.54621887 79.37437439]
[99.74993134 86.84282684]
[90.85002899 74.76840210]
[81.95012665 62.69397354]
[73.05022430 50.61954880]
[64.15032196 38.54512405]
[55.25042343 26.47069740]
[50.32324982 40.63837051]
[36.23400497 45.78552628]
[23.33442116 38.13041306]
[21.10215759 23.29744148]
[31.17731476 12.18478203]
[46.15822601 12.95762920]
[38.32623672 0.16466458]
[24.52185059 -7.56511354]
[24.47539520 -22.45964622]
[16.64340591 -35.25261307]
[2.83901954 -42.98239136]
[2.79256368 -57.87692261]
[-5.03942537 -70.66988373]
[-12.87141418 -83.46285248]
[-20.70340347 -96.25581360]
[-28.53539085 -109.04878235]
[-36.36737823 -121.84174347]
[-43.53540802 -127.54467010]
[-44.22183228 -134.92222595]
[-51.83306122 -147.84774780]
[-63.43331909 -157.35743713]
[-77.60066223 -162.28556824]
[-91.76799774 -167.21369934]
[-105.93533325 -172.14184570]
[-121.93260956 -168.53363037]
[-132.85572815 -180.76545715]
[-127.46790314 -196.25427246]
[-111.31169128 -199.06651306]
[-101.00720215 -186.30917358]
[-86.83985901 -181.38104248]
[-72.67252350 -176.45291138]
[-58.50518417 -171.52476501]
[-47.76242828 -181.99440002]
[-37.02061844 -192.46308899]
[-41.58234024 -206.75262451]
[-46.14406204 -221.04216003]
[-50.70578766 -235.33169556]
[-55.26750946 -249.62121582]
[-66.83517456 -260.41473389]
[-63.33489609 -274.89221191]
[-67.89662170 -289.18173218]
[-72.45834351 -303.47125244]
[-77.02006531 -317.76080322]
[-88.58773041 -328.55429077]
[-85.08745575 -343.03176880]
[-96.18287659 -349.64044189]
[-99.67956543 -361.65521240]
[-94.22364044 -372.46896362]
[-98.53939056 -386.83468628]
[-102.85514069 -401.20043945]
[-107.17089081 -415.56616211]
[-111.48664093 -429.93188477]
[-121.83450317 -443.36163330]
[-111.79416656 -457.02282715]
[-95.88742065 -451.15667725]
[-97.12091064 -434.24765015]
[-92.80516052 -419.88192749]
[-88.48941040 -405.51617432]
[-84.17366028 -391.15045166]
[-79.85790253 -376.78472900]
[-66.45256042 -365.47576904]
[-70.79792023 -347.59350586]
[-59.55654526 -337.82208252]
[-62.73053360 -322.32250977]
[-58.16881180 -308.03298950]
[-53.60709000 -293.74343872]
[-49.04536819 -279.45391846]
[-37.80398941 -269.68249512]
[-40.97797775 -254.18293762]
[-36.41625595 -239.89341736]
[-31.85453224 -225.60388184]
[-27.29281044 -211.31434631]
[-22.73108864 -197.02481079]
[-38.90753174 -155.45898438]
[-31.29630661 -142.53346252]
[-23.57441521 -129.67373657]
[-15.74242592 -116.88076782]
[-7.91043758 -104.08780670]
[-0.07844888 -91.29483795]
[7.75354004 -78.50187683]
[15.58552837 -65.70890808]
[28.82971954 -58.89417267]
[29.43637085 -43.08459854]
[37.26836014 -30.29163551]
[50.51255035 -23.47689629]
[51.11920166 -7.66732407]
[58.95119095 5.12564087]
[67.32484436 17.57079697]
[76.22474670 29.64522171]
[85.12464905 41.71964645]
[94.02455139 53.79407120]
[102.92445374 65.86849976]
[111.82435608 77.94292450]
[125.18360138 84.76425171]
[140.18304443 84.89300537]
[154.04913330 77.27444458]
[166.70951843 85.12070465]
[181.70896912 85.24945068]
[196.70840454 85.37820435]
[210.57449341 77.75964355]
[223.23487854 85.60590363]
[238.23432922 85.73465729]
[253.23377991 85.86341095]
[268.23321533 85.99215698]
[283.23266602 86.12091064]
[294.32638550 74.86457825]
[310.13064575 74.83314514]
[321.26904297 86.04524994]
[321.13339233 101.84895325]
[309.80416870 112.86820221]
[294.00277710 112.56546783]
[283.10391235 101.12036133]
[268.10446167 100.99160767]
[253.10502625 100.86285400]
[238.10557556 100.73410034]
[223.10612488 100.60535431]
[210.31291199 108.23312378]
[196.57966614 100.37765503]
[181.58021545 100.24890137]
[166.58076477 100.12014771]
[153.78755188 107.74791718]
[140.05429077 99.89244843]
[125.05484772 99.76369476]
[118.00519562 113.00388336]
[126.48536682 125.37670135]
[134.96554565 137.74952698]
[143.44570923 150.12234497]
[151.92587280 162.49516296]
[160.40605164 174.86799622]
[168.88621521 187.24081421]
[179.70675659 188.62193298]
[187.80513000 195.59751892]
[190.65406799 205.67094421]
[187.54188538 215.43563843]
[195.59233093 228.09228516]
[210.37539673 235.19107056]
[211.34922791 251.56127930]
[197.51203918 260.36264038]
[183.09832764 252.54106140]
[182.93568420 236.14271545]
[174.88525391 223.48608398]
[157.13491821 215.85354614]
[156.51339722 195.72097778]
[148.03323364 183.34815979]
[139.55305481 170.97534180]
[131.07289124 158.60250854]
[122.59272003 146.22969055]
[114.11254883 133.85687256]
[105.63237762 121.48404694]
[91.16028595 125.42848206]
[90.13106537 140.39312744]
[89.10184479 155.35778809]
[88.07262421 170.32243347]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 182]
[6 181]
[7 180]
[8 179]
[9 20]
[10 19]
[11 18]
[12 17]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[35 116]
[36 115]
[38 113]
[39 112]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[48 104]
[49 103]
[50 61]
[51 60]
[52 59]
[53 58]
[63 102]
[64 101]
[65 100]
[66 99]
[67 98]
[69 96]
[70 95]
[71 94]
[72 93]
[74 91]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[123 152]
[124 151]
[126 149]
[127 148]
[128 147]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[153 178]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
[159 172]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
