%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAACACAACAAACCCCACACACCCCACUCCAGCUCCGGAGCACCCGUGCUGGGCUGCAUGGGGACUGGCCGGAGGGGCAGGGCCAGGGGAGCGGGUAGGCAGAGCUUCGGGAGGAGAUGAGGUGAAAGUAAUUGACGCUGCCCAGCCCGGCAGUGGGAGAGGCAGGGGAUGCGUCAGUGUCGCGCUGGAGCUGGCAGAGGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[56.17365265 680.24157715]
[59.27298737 695.01647949]
[58.27003098 710.07958984]
[53.23920441 724.31311035]
[44.55382919 736.66082764]
[32.85842514 746.20654297]
[19.02085876 752.24176025]
[4.06797647 754.31878662]
[-10.89062214 752.28332520]
[-24.74490738 746.28656006]
[-36.46680069 736.77343750]
[-45.18646240 724.44989014]
[-50.25682831 710.23040771]
[-51.30165100 695.17016602]
[-48.24339294 680.38671875]
[-41.30900192 666.97711182]
[-31.01305199 655.93646240]
[-18.11957169 648.08404541]
[-3.58534241 644.00256348]
[11.51109791 643.99481201]
[15.53907585 629.54577637]
[19.56705475 615.09667969]
[23.59503174 600.64764404]
[27.62301064 586.19854736]
[31.65098763 571.74951172]
[25.84970284 563.33422852]
[25.63481522 552.89575195]
[31.31876183 543.87713623]
[41.22848511 539.38598633]
[45.69103241 525.06518555]
[50.04529953 510.71105957]
[54.29104614 496.32449341]
[58.53679276 481.93789673]
[62.78253937 467.55133057]
[67.02828217 453.16473389]
[71.27403259 438.77816772]
[75.51977539 424.39160156]
[79.76552582 410.00500488]
[84.01126862 395.61843872]
[88.25701904 381.23184204]
[84.43858337 366.83502197]
[95.76560211 355.78924561]
[100.01135254 341.40267944]
[87.70968628 311.26190186]
[106.23628998 292.33871460]
[105.33061218 277.36608887]
[104.42493439 262.39343262]
[103.51925659 247.42080688]
[102.50053406 232.45544434]
[101.36882019 217.49819946]
[100.23711395 202.54095459]
[99.10540009 187.58370972]
[97.97369385 172.62644958]
[96.84198761 157.66920471]
[95.71027374 142.71195984]
[94.57856750 127.75471497]
[93.44685364 112.79747009]
[85.20245361 125.32862091]
[70.39008331 127.69370270]
[58.65340042 118.35291290]
[57.63363266 103.38761902]
[67.99470520 92.54103851]
[82.99058533 92.87471008]
[71.32389832 83.44664764]
[55.81714630 84.92261505]
[44.11977386 75.19502258]
[42.80822372 60.40261078]
[31.14153481 50.97454834]
[19.47484589 41.54648209]
[3.87817454 38.89046860]
[-1.15764964 24.87298965]
[-12.82433796 15.44492531]
[-29.09944534 13.43174076]
[-35.24349594 -1.77295232]
[-24.93601608 -14.52786922]
[-8.78045750 -11.71184444]
[-3.39627504 3.77823710]
[8.27041340 13.20630074]
[23.03260612 15.18795681]
[28.90290833 29.87979507]
[40.56959915 39.30785751]
[52.23628616 48.73591995]
[66.97449493 46.91361237]
[78.94048309 56.30881119]
[80.75196075 71.77995300]
[92.41864777 81.20801544]
[94.62527466 86.23384094]
[96.71776581 91.30623627]
[102.24805450 77.36292267]
[107.77835083 63.41961670]
[105.67404175 47.73897552]
[117.55865479 38.76092911]
[123.08894348 24.81761932]
[128.61923218 10.87430954]
[134.14953613 -3.06899881]
[123.03036499 -14.94596100]
[118.22048187 -30.42734146]
[120.63422394 -46.39915466]
[129.73825073 -59.67188263]
[143.66835022 -67.61740112]
[159.61097717 -68.68931580]
[164.93003845 -82.71456146]
[155.46936035 -96.73431396]
[156.22094727 -113.46450806]
[166.69081116 -126.32170868]
[182.59982300 -130.36471558]
[187.70645142 -144.46868896]
[192.81309509 -158.57267761]
[197.91973877 -172.67665100]
[203.02638245 -186.78062439]
[208.13302612 -200.88461304]
[199.32321167 -213.65829468]
[199.73777771 -229.16983032]
[209.21728516 -241.45471191]
[224.11668396 -245.78916931]
[238.70684814 -240.50648499]
[247.37756348 -227.63798523]
[246.79476929 -212.13186646]
[237.18254089 -199.95053101]
[222.23699951 -195.77796936]
[217.13035583 -181.67399597]
[212.02371216 -167.57000732]
[206.91708374 -153.46603394]
[201.81044006 -139.36204529]
[196.70379639 -125.25807190]
[205.18218994 -114.94334412]
[207.47450256 -101.67968750]
[202.87648010 -88.91397858]
[192.48867798 -80.01744843]
[178.95529175 -77.39548492]
[173.63621521 -63.37024307]
[183.67288208 -53.79070663]
[189.31773376 -41.06901169]
[189.68823242 -27.11278343]
[184.69538879 -14.02857399]
[175.06230164 -3.80391169]
[162.21954346 1.99460733]
[148.09283447 2.46129441]
[142.56254578 16.40460396]
[137.03225708 30.34791183]
[131.50195312 44.29122162]
[134.00183105 58.97454071]
[121.72165680 68.94991302]
[116.19136047 82.89321899]
[110.66107178 96.83652496]
[108.40410614 111.66575623]
[109.53581238 126.62300873]
[110.66751862 141.58024597]
[111.79923248 156.53750610]
[112.93093872 171.49475098]
[114.06265259 186.45199585]
[115.19435883 201.40924072]
[116.32607269 216.36648560]
[117.45777893 231.32373047]
[121.22649384 239.64709473]
[118.49188995 246.51513672]
[119.39756775 261.48776245]
[120.30324554 276.46038818]
[121.20892334 291.43304443]
[138.40936279 298.15460205]
[147.20922852 318.86126709]
[161.06742859 324.60150146]
[176.77806091 322.73428345]
[185.57559204 334.75311279]
[199.43377686 340.49337769]
[213.29197693 346.23361206]
[228.60441589 341.44732666]
[241.81239319 350.55389404]
[242.78384399 366.56750488]
[230.77359009 377.20391846]
[214.99484253 374.30377197]
[207.55172729 360.09182739]
[193.69352722 354.35156250]
[179.83534241 348.61129761]
[165.11593628 350.88912964]
[155.32717896 338.45968628]
[141.46897888 332.71945190]
[134.70121765 335.95169067]
[147.06732178 344.44165039]
[145.89775085 359.39596558]
[132.36207581 365.86016846]
[119.99616241 357.36993408]
[121.16568756 342.41616821]
[114.39792633 345.64840698]
[110.15218353 360.03500366]
[113.66693115 375.46084595]
[102.64359283 385.47760010]
[98.39785004 399.86416626]
[94.15209961 414.25076294]
[89.90635681 428.63732910]
[85.66060638 443.02392578]
[81.41486359 457.41049194]
[77.16912079 471.79705811]
[72.92337036 486.18365479]
[68.67762756 500.57022095]
[64.43187714 514.95678711]
[65.00418091 524.07568359]
[60.01184464 529.52770996]
[55.54929733 543.84851074]
[60.86336899 563.29229736]
[46.10005188 575.77746582]
[42.07207108 590.22656250]
[38.04409409 604.67559814]
[34.01611710 619.12469482]
[29.98813820 633.57373047]
[25.96015930 648.02276611]
[38.87541580 655.83935547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[29 199]
[30 198]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[42 185]
[43 184]
[45 159]
[46 158]
[47 157]
[48 156]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[63 86]
[64 85]
[67 82]
[68 81]
[69 80]
[71 78]
[72 77]
[88 145]
[89 144]
[90 143]
[92 141]
[93 140]
[94 139]
[95 138]
[101 131]
[102 130]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[161 177]
[162 176]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
