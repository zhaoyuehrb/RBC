%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCGUCACGUCCGGUCUCGGCGGAAGUUUUCCGGCGGCUACCGGGAAGUCGCUGAAGACAGAGCGAUGGUAGUUCUGGAGGCCUCGCUCCGGGGCCGACCCGAGGCCACAGUGCCUCCGCGGUAGACCGGACUUGGGUGACGGGCUCCGGGCUCCCGAGGUGAAGAGCAUCGGGGGCUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[331.62164307 380.95751953]
[322.64169312 368.94250488]
[310.70562744 366.89596558]
[303.12786865 356.94049072]
[304.41293335 344.09213257]
[295.63720703 331.92715454]
[286.86145020 319.76217651]
[278.08572388 307.59722900]
[269.30999756 295.43225098]
[260.53427124 283.26727295]
[251.35267639 271.40563965]
[241.77569580 259.86087036]
[232.19873047 248.31610107]
[222.62176514 236.77133179]
[213.04479980 225.22656250]
[203.46783447 213.68179321]
[193.89085388 202.13702393]
[184.31388855 190.59225464]
[174.73692322 179.04748535]
[165.06280518 167.58401489]
[150.90187073 162.96694946]
[147.78355408 147.45610046]
[138.01296997 136.07472229]
[128.24238586 124.69335175]
[118.47179413 113.31198120]
[108.70120239 101.93061066]
[111.61298370 109.59364319]
[108.42114258 119.47046661]
[98.25243378 127.30805969]
[82.88339996 128.81370544]
[68.30081940 132.32771301]
[53.71823120 135.84170532]
[39.13564301 139.35569763]
[24.55305862 142.86970520]
[9.97047138 146.38369751]
[-4.61211443 149.89768982]
[-12.64360237 163.50910950]
[-27.96809387 167.37376404]
[-41.49383926 159.19882202]
[-45.19625473 143.83432007]
[-36.87876129 130.39576721]
[-21.47598076 126.85599518]
[-8.12611198 135.31510925]
[6.45647478 131.80110168]
[21.03906059 128.28710938]
[35.62164688 124.77311707]
[50.20423508 121.25911713]
[64.78681946 117.74512482]
[79.36940765 114.23112488]
[80.88693237 99.30808258]
[67.31021118 92.93056488]
[53.73349762 86.55304718]
[40.15678024 80.17552948]
[26.58006096 73.79801178]
[13.00334358 67.42049408]
[-0.52385241 75.02276611]
[-15.93214607 73.18861389]
[-27.29673386 62.62330627]
[-30.24769974 47.38941574]
[-23.65033913 33.34468842]
[-10.04146862 25.88960266]
[5.34602165 27.89079666]
[16.59532738 38.57876968]
[19.38086128 53.84377670]
[32.95758057 60.22129440]
[46.53429794 66.59880829]
[60.11101532 72.97633362]
[73.68772888 79.35385132]
[87.26445007 85.73136902]
[99.99411011 77.79690552]
[100.24745941 62.79904556]
[100.50080109 47.80118561]
[100.75414276 32.80332565]
[98.19618225 28.20311928]
[97.72118378 23.54894257]
[98.99745178 19.64819336]
[101.41941833 17.05739212]
[102.43206787 2.09161282]
[103.44470978 -12.87416649]
[95.55783844 -23.09810257]
[96.72257233 -35.55511475]
[105.76948547 -43.60567093]
[107.03475189 -58.55221176]
[108.30001831 -73.49875641]
[109.56528473 -88.44529724]
[110.83055115 -103.39183807]
[112.09581757 -118.33837891]
[99.06075287 -110.91630554]
[85.06739807 -116.31871796]
[80.40154266 -130.57458496]
[88.49280548 -143.20515442]
[103.39373016 -144.92636108]
[114.15088654 -134.47444153]
[116.67240143 -149.26098633]
[119.19391632 -164.04753113]
[111.12866211 -177.91587830]
[117.07682800 -192.81550598]
[132.47549438 -197.31669617]
[145.51211548 -187.96650696]
[146.18612671 -171.93762207]
[133.98046875 -161.52601624]
[131.45895386 -146.73947144]
[128.93743896 -131.95292664]
[127.04235840 -117.07311249]
[125.77709198 -102.12657166]
[124.51182556 -87.18003082]
[123.24655914 -72.23348999]
[121.98129272 -57.28694916]
[120.71602631 -42.34040451]
[129.02703857 -26.89476967]
[118.41049194 -11.86152077]
[117.39784241 3.10425901]
[116.38520050 18.07003784]
[115.75199890 33.05666733]
[115.49865723 48.05452728]
[115.24531555 63.05238724]
[114.99197388 78.05024719]
[120.08258057 92.16002655]
[129.85316467 103.54139709]
[139.62374878 114.92276764]
[149.39433289 126.30413818]
[159.16493225 137.68551636]
[174.02471924 143.11663818]
[176.44416809 157.81343079]
[184.42686462 162.29937744]
[186.28169250 169.47052002]
[195.85865784 181.01528931]
[205.43562317 192.56005859]
[215.01260376 204.10482788]
[224.58956909 215.64959717]
[234.16653442 227.19436646]
[243.74349976 238.73913574]
[253.32046509 250.28390503]
[262.89743042 261.82867432]
[267.06878662 263.20257568]
[270.25476074 265.60009766]
[272.25347900 268.58154297]
[273.02810669 271.68676758]
[272.69921875 274.49154663]
[281.47497559 286.65652466]
[290.25070190 298.82147217]
[299.02642822 310.98645020]
[307.80215454 323.15142822]
[316.57791138 335.31637573]
[333.53961182 342.45849609]
[334.65670776 359.96258545]
[343.63665771 371.97760010]
[360.71658325 378.83221436]
[362.12915039 396.31491089]
[371.31076050 408.17654419]
[388.50399780 414.74172974]
[390.21163940 432.19808960]
[399.59225464 443.90295410]
[408.97286987 455.60781860]
[418.35351562 467.31268311]
[427.73413086 479.01757812]
[437.11474609 490.72244263]
[446.49536133 502.42730713]
[455.87597656 514.13220215]
[465.25659180 525.83703613]
[479.92446899 531.76696777]
[481.84616089 546.53710938]
[491.22677612 558.24194336]
[506.95153809 561.42187500]
[514.14105225 575.76379395]
[507.28021240 590.26574707]
[491.63198853 593.80316162]
[479.20043945 583.66241455]
[479.52191162 567.62255859]
[470.14129639 555.91772461]
[456.14437866 550.82501221]
[453.55172729 535.21765137]
[444.17108154 523.51281738]
[434.79046631 511.80792236]
[425.40985107 500.10305786]
[416.02923584 488.39819336]
[406.64862061 476.69332886]
[397.26800537 464.98843384]
[387.88739014 453.28356934]
[378.50677490 441.57870483]
[366.50839233 439.93643188]
[358.59872437 430.24258423]
[359.44909668 417.35815430]
[350.26751709 405.49652100]
[338.29858398 403.65182495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 124]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[70 117]
[71 116]
[72 115]
[73 114]
[77 113]
[78 112]
[79 111]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[93 103]
[94 102]
[95 101]
[149 184]
[150 183]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
