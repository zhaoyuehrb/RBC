%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGACGCACGAGGUGCUGUGACUCGUGCCAGCCCCCUAAUCUGCGGAAGUGGAGUGCGGGGAGUGCGCCGGAAGAGGGGUACGGAAGUGCGCCGGAAGUGGGGUGCGGAGGUGUGCAGCGCGCUGUCAGACUGGCUCGCAGGCGGCGCGGCCGGCGGACCCGUUCGAGACAGCGCGGGCGGCUCGGGUCCCCUGGGGCUCCGCAGCAGGAGGACGCC\
) } def
/len { sequence length } bind def

/coor [
[98.95648956 177.02102661]
[99.17092896 162.02305603]
[91.67169189 161.91596985]
[84.10993958 174.87049866]
[89.01004791 187.41227722]
[85.84049988 200.29869080]
[75.97531128 208.88111877]
[63.16129684 210.19677734]
[55.41533279 223.04200745]
[47.66937256 235.88723755]
[39.92340851 248.73248291]
[32.17744827 261.57772827]
[24.43148613 274.42294312]
[16.68552399 287.26818848]
[23.58452797 301.06698608]
[21.90542221 316.40270996]
[12.18400002 328.38177490]
[-2.47766685 333.18167114]
[-17.40109253 329.27078247]
[-27.82426834 317.89709473]
[-30.42119598 302.68988037]
[-24.36320496 288.50170898]
[-11.58337784 279.85998535]
[3.84028816 279.52221680]
[11.58625031 266.67700195]
[19.33221245 253.83175659]
[27.07817459 240.98651123]
[34.82413483 228.14128113]
[42.57009888 215.29605103]
[50.31605911 202.45080566]
[45.58058167 186.31034851]
[54.15547180 171.44790649]
[71.15541077 167.30874634]
[78.71715546 154.35421753]
[70.16231537 142.03291321]
[55.38201141 144.59074402]
[40.60170364 147.14857483]
[25.82139397 149.70640564]
[18.56301689 164.98774719]
[3.77215481 172.85136414]
[-12.62650204 170.37181091]
[-24.19695282 158.72270203]
[-38.93922806 161.49131775]
[-53.68150711 164.25994873]
[-68.42378235 167.02857971]
[-83.16606140 169.79721069]
[-95.25152588 180.88203430]
[-110.81063080 175.70071411]
[-113.83750916 159.58332825]
[-101.21836090 149.11006165]
[-85.93468475 155.05493164]
[-71.19240570 152.28630066]
[-56.45013428 149.51766968]
[-41.70785522 146.74903870]
[-26.96557999 143.98042297]
[-22.39269066 131.44117737]
[-12.13985729 122.72774506]
[1.18535376 120.19646454]
[14.12398911 124.61322784]
[23.26356125 134.92610168]
[38.04386902 132.36827087]
[52.82417679 129.81042480]
[67.60448456 127.25260162]
[65.16378784 101.34387207]
[77.74398041 84.03467560]
[68.41557312 72.28815460]
[59.08716965 60.54162598]
[49.75876617 48.79510117]
[35.11743546 42.79993820]
[33.26152039 28.02140999]
[23.93311691 16.27488327]
[14.60471249 4.52835751]
[-0.26196501 7.80605125]
[-15.01734924 4.31812668]
[-26.74711990 -5.19148207]
[-33.15847778 -18.79499245]
[-33.02821350 -33.77138901]
[-26.43572998 -47.15065002]
[-35.76413345 -58.89717484]
[-50.40546417 -64.89234161]
[-52.26137924 -79.67086792]
[-61.58978271 -91.41738892]
[-70.91819000 -103.16391754]
[-80.24658966 -114.91044617]
[-95.69027710 -120.42630005]
[-98.36866760 -136.60523987]
[-85.52646637 -146.80377197]
[-70.37462616 -140.53050232]
[-68.50006104 -124.23884583]
[-59.17166138 -112.49232483]
[-49.84325790 -100.74579620]
[-40.51485443 -88.99926758]
[-26.54075050 -83.84429932]
[-24.01760674 -68.22557831]
[-14.68920231 -56.47905350]
[-0.16446677 -59.86985397]
[14.45222664 -56.60462570]
[26.25005531 -47.27873611]
[32.85577393 -33.69990540]
[32.91100693 -18.53798103]
[26.35123825 -4.80004597]
[35.67964172 6.94648075]
[45.00804520 18.69300652]
[58.98214722 23.84797859]
[61.50529480 39.46669388]
[70.83369446 51.21322250]
[80.16210175 62.95974731]
[89.49050140 74.70627594]
[128.20349121 79.50777435]
[132.16244507 127.52726746]
[145.42893982 120.52725983]
[158.69543457 113.52724457]
[167.29002380 100.24403381]
[182.15718079 101.14775848]
[195.42367554 94.14774323]
[208.69017029 87.14773560]
[217.28474426 73.86452484]
[232.15191650 74.76824188]
[234.92408752 70.36097717]
[238.72756958 67.71783447]
[242.71943665 66.93642426]
[246.13987732 67.76637268]
[259.69400024 61.34094620]
[273.24810791 54.91551971]
[286.80221558 48.49009323]
[300.35632324 42.06466675]
[313.91043091 35.63924026]
[327.46453857 29.21381569]
[341.01864624 22.78838921]
[351.72372437 5.70218658]
[370.91232300 8.11736393]
[384.27740479 1.30750644]
[397.64251709 -5.50235081]
[406.42590332 -18.66148376]
[421.27865601 -17.54555893]
[434.64373779 -24.35541534]
[443.42712402 -37.51454926]
[458.27987671 -36.39862442]
[471.64495850 -43.20848083]
[485.01007080 -50.01833725]
[498.37515259 -56.82819748]
[507.15853882 -69.98732758]
[522.01129150 -68.87140656]
[535.37640381 -75.68125916]
[548.74145508 -82.49111938]
[553.38629150 -97.59745026]
[567.39135742 -104.92092896]
[582.44775391 -100.11666107]
[589.62274170 -86.03493500]
[584.65954590 -71.03018951]
[570.50274658 -64.00447845]
[555.55133057 -69.12602234]
[542.18621826 -62.31616211]
[528.82116699 -55.50630569]
[520.99371338 -42.83425903]
[505.18502808 -43.46309662]
[491.81991577 -36.65324020]
[478.45483398 -29.84338379]
[465.08972168 -23.03352547]
[457.26229858 -10.36148071]
[441.45361328 -10.99031830]
[428.08850098 -4.18046093]
[420.26107788 8.49158478]
[404.45236206 7.86274672]
[391.08728027 14.67260456]
[377.72216797 21.48246193]
[375.45437622 31.43756485]
[367.92565918 38.65527725]
[357.45214844 40.58102417]
[347.44406128 36.34249878]
[333.88995361 42.76792526]
[320.33584595 49.19335175]
[306.78173828 55.61877823]
[293.22763062 62.04420471]
[279.67352295 68.46962738]
[266.11941528 74.89505768]
[252.56530762 81.32048035]
[239.15193176 88.03473663]
[231.50625610 100.81726074]
[215.69018555 100.41423035]
[202.42369080 107.41423798]
[189.15719604 114.41425323]
[181.51152039 127.19677734]
[165.69544983 126.79373932]
[152.42895508 133.79374695]
[139.16246033 140.79376221]
[134.83381653 155.15560913]
[148.23840332 163.55964661]
[147.54707336 178.43820190]
[154.73580933 191.60337830]
[161.92453003 204.76856995]
[169.11326599 217.93374634]
[176.39582825 231.04727173]
[183.77182007 244.10845947]
[191.14781189 257.16964722]
[198.52380371 270.23083496]
[213.48471069 274.56774902]
[220.77896118 287.91873169]
[216.55218506 302.15496826]
[223.92817688 315.21615601]
[236.98162842 326.03482056]
[230.19929504 341.57305908]
[213.39077759 339.35717773]
[210.86697388 322.59213257]
[203.49098206 309.53094482]
[189.11711121 305.79901123]
[181.45074463 292.65817261]
[185.46261597 277.60684204]
[178.08662415 264.54565430]
[170.71063232 251.48445129]
[163.33462524 238.42326355]
[157.31250000 234.14755249]
[155.94808960 225.12248230]
[148.75935364 211.95730591]
[141.57061768 198.79211426]
[134.38188171 185.62693787]
[121.49148560 178.16456604]
[121.66863251 162.34434509]
[114.16939545 162.23725891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[35 63]
[36 62]
[37 61]
[38 60]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[65 108]
[66 107]
[67 106]
[68 105]
[70 103]
[71 102]
[72 101]
[78 95]
[79 94]
[81 92]
[82 91]
[83 90]
[84 89]
[110 186]
[111 185]
[112 184]
[114 182]
[115 181]
[116 180]
[118 178]
[122 177]
[123 176]
[124 175]
[125 174]
[126 173]
[127 172]
[128 171]
[129 170]
[131 166]
[132 165]
[133 164]
[135 162]
[136 161]
[138 159]
[139 158]
[140 157]
[141 156]
[143 154]
[144 153]
[145 152]
[187 218]
[189 216]
[190 215]
[191 214]
[192 213]
[193 211]
[194 210]
[195 209]
[196 208]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
