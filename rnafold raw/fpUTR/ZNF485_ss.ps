%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUCCGCUUCCGGUCCAGCCUGUCUCCGCGUGGUGCGAGCGCUGCACCAGCCCCUGGCUGGUGGUUACUGUCCGAACGGCGUGGUGUGGUCGCUGACUCUCUGGGCGUGCAGCUCCGCAGCCCUGCCGGCUCGGUUCGGUUCGUGAGCGGCCGGGAUUGACUUACGCAGGAUUCUCAGCCCUUGCCUGGGAGAACAGUUCAGGAGACAG\
) } def
/len { sequence length } bind def

/coor [
[62.52029419 251.22431946]
[63.67799377 266.27334595]
[58.99851227 280.58035278]
[49.22452164 291.97482300]
[35.86906815 298.74069214]
[20.98138237 299.87475586]
[16.38842964 314.15429688]
[11.79547501 328.43380737]
[15.77961826 344.34164429]
[3.80855513 355.54992676]
[-11.80291176 350.52856445]
[-14.99504280 334.44308472]
[-2.48404765 323.84085083]
[2.10890627 309.56134033]
[6.70186043 295.28182983]
[-4.73305178 285.68118286]
[-11.63981056 272.39804077]
[-12.93830395 257.44213867]
[-8.39963913 243.08985901]
[1.31425488 231.53762817]
[14.74696732 224.56588745]
[29.86591148 223.26463318]
[34.45886612 208.98510742]
[39.05181885 194.70559692]
[43.64477158 180.42607117]
[48.23772812 166.14654541]
[52.83068085 151.86701965]
[57.42363358 137.58749390]
[62.01659012 123.30797577]
[51.25397873 112.85971069]
[37.11683273 117.87380219]
[30.07556725 123.69136047]
[22.73288345 122.85575104]
[8.52298737 127.65979767]
[-5.68690777 132.46383667]
[-19.89680290 137.26789856]
[-34.10669708 142.07194519]
[-48.31659317 146.87599182]
[-62.52648926 151.68003845]
[-70.90008545 165.36442566]
[-86.83701324 167.20669556]
[-98.11181641 155.79362488]
[-96.07543945 139.88034058]
[-82.29001617 131.67414856]
[-67.33053589 137.47013855]
[-53.12063980 132.66609192]
[-38.91074753 127.86204529]
[-24.70085144 123.05799866]
[-10.49095535 118.25395203]
[3.71894002 113.44989777]
[17.92883492 108.64585114]
[32.10274506 103.73664856]
[46.23989105 98.72256470]
[77.65171051 65.27959442]
[111.30334473 73.50340271]
[111.30334473 58.50340652]
[111.30334473 43.50340652]
[111.30334473 28.50340652]
[111.30334473 13.50340557]
[111.30334473 -1.49659431]
[111.30334473 -16.49659348]
[111.30334473 -31.49659348]
[103.56604767 -45.29676819]
[111.30334473 -58.02404022]
[96.89928436 -66.14357758]
[88.60312653 -80.33798218]
[88.59755707 -96.68511200]
[96.78939056 -110.72296143]
[110.86086273 -118.66761780]
[110.63858795 -133.66596985]
[110.41631317 -148.66432190]
[110.19403839 -163.66267395]
[100.38741302 -179.24871826]
[109.52806091 -194.22959900]
[109.08356476 -209.22300720]
[108.63906097 -224.21643066]
[108.19456482 -239.20983887]
[98.15805817 -254.64884949]
[107.07571411 -269.76354980]
[106.40908051 -284.74871826]
[105.74245453 -299.73388672]
[105.07582855 -314.71908569]
[104.40920258 -329.70425415]
[96.06623840 -343.14694214]
[103.23027039 -356.20550537]
[102.56364441 -371.19067383]
[101.78600311 -386.17050171]
[100.89739227 -401.14416504]
[100.00878143 -416.11779785]
[99.12017822 -431.09146118]
[98.23156738 -446.06512451]
[89.12304688 -455.19665527]
[88.69078064 -467.68603516]
[96.62142944 -476.81945801]
[95.95480347 -491.80465698]
[95.28817749 -506.78982544]
[94.62155151 -521.77502441]
[93.84391022 -536.75482178]
[92.95529938 -551.72851562]
[84.41405487 -565.04608154]
[91.38379669 -578.20935059]
[90.49518585 -593.18298340]
[83.52114868 -608.63610840]
[96.43975067 -619.61547852]
[110.56624603 -610.24108887]
[105.46884155 -594.07159424]
[106.35745239 -579.09796143]
[114.83513641 -566.85137939]
[107.92895508 -552.61712646]
[108.81756592 -537.64343262]
[112.35150146 -531.15307617]
[109.60672760 -522.44165039]
[110.27335358 -507.45645142]
[110.93998718 -492.47128296]
[111.60661316 -477.48608398]
[121.83116150 -463.22296143]
[113.20522308 -446.95373535]
[114.09383392 -431.98007202]
[114.98244476 -417.00640869]
[115.87104797 -402.03277588]
[116.75965881 -387.05911255]
[120.29359436 -380.56875610]
[117.54882050 -371.85729980]
[118.21545410 -356.87213135]
[126.51072693 -344.50128174]
[119.39437866 -330.37088013]
[120.06100464 -315.38571167]
[120.72763824 -300.40051270]
[121.39426422 -285.41534424]
[122.06089020 -270.43017578]
[130.77122498 -262.03701782]
[131.44967651 -249.55859375]
[123.18798065 -239.65434265]
[123.63247681 -224.66091919]
[124.07698059 -209.66751099]
[124.52147675 -194.67410278]
[133.10649109 -186.15280151]
[133.59994507 -173.66569519]
[125.19239044 -163.88494873]
[125.41466522 -148.88659668]
[125.63694000 -133.88824463]
[125.85921478 -118.88989258]
[138.19877625 -113.03829956]
[146.85499573 -102.38994598]
[150.09442139 -88.98681641]
[147.22950745 -75.43103790]
[138.76354980 -64.37969971]
[126.30334473 -58.02404022]
[134.04064941 -45.29676819]
[126.30334473 -31.49659348]
[126.30334473 -16.49659348]
[126.30334473 -1.49659431]
[126.30334473 13.50340557]
[126.30334473 28.50340652]
[126.30334473 43.50340652]
[126.30334473 58.50340652]
[126.30334473 73.50340271]
[128.11808777 58.61358643]
[136.87138367 46.43245697]
[150.40483093 39.96363831]
[165.38137817 40.80220413]
[178.10809326 48.74138260]
[185.44685364 61.82353973]
[185.58804321 76.82287598]
[178.49685669 90.04086304]
[165.92184448 98.21820831]
[150.96374512 99.33856201]
[137.31185913 93.12641144]
[150.11306763 100.94493103]
[162.91427612 108.76345062]
[175.71546936 116.58196259]
[188.51667786 124.40048218]
[201.96488953 116.98149872]
[217.32054138 117.29662323]
[230.45306396 125.26108551]
[237.82984924 138.73248291]
[237.46659851 154.08708191]
[229.46101379 167.19456482]
[215.96655273 174.52909851]
[200.61317444 174.11770630]
[187.53085327 166.07107544]
[180.23866272 152.55369568]
[180.69816589 137.20169067]
[167.89695740 129.38316345]
[155.09574890 121.56465149]
[142.29455566 113.74613190]
[129.49334717 105.92761993]
[118.88674927 116.53421783]
[126.70526123 129.33541870]
[134.52378845 142.13662720]
[149.94285583 145.60473633]
[158.32272339 159.00448608]
[154.69178772 174.38603210]
[141.20419312 182.62376404]
[125.86190033 178.83039856]
[117.76721954 165.25646973]
[121.72257996 149.95513916]
[113.90406036 137.15394592]
[106.08554077 124.35273743]
[98.63818359 125.23978424]
[100.41203308 140.13453674]
[85.51725769 141.90812683]
[83.74346924 127.01388550]
[76.29611206 127.90093231]
[71.70315552 142.18045044]
[67.11020660 156.45997620]
[62.51725006 170.73950195]
[57.92429733 185.01902771]
[53.33134079 199.29853821]
[48.73838806 213.57806396]
[44.14543533 227.85758972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 15]
[7 14]
[8 13]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[30 53]
[31 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[64 148]
[69 142]
[70 141]
[71 140]
[72 139]
[74 136]
[75 135]
[76 134]
[77 133]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[85 124]
[86 123]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[94 115]
[95 114]
[96 113]
[97 112]
[98 110]
[99 109]
[101 107]
[102 106]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
[188 199]
[189 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
