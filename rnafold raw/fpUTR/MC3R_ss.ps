%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGCAUCCAAAAGACGUAUCUGGAGGGAGAUUUUGUCUUUCCUGUGAGCAGCAGCAGCUUCCUACGGACCCUGCUGGAGCCCCAGCUCGGAUCAGCCCUUCUGACAGCA\
) } def
/len { sequence length } bind def

/coor [
[98.98915863 191.74699402]
[83.79796600 195.45668030]
[69.79927063 188.48744202]
[63.60281372 174.12992859]
[68.13438416 159.16334534]
[81.25431061 150.65443420]
[82.91897583 135.74708557]
[77.87986755 130.19213867]
[70.42805481 143.21022034]
[55.74439240 140.14590454]
[54.12125015 125.23398590]
[67.80165863 119.08225250]
[62.76255417 113.52730560]
[47.76400375 113.73580933]
[32.76545334 113.94431305]
[17.76690102 114.15282440]
[2.76835012 114.36132812]
[-12.23020077 114.56983185]
[-27.22875214 114.77834320]
[-42.73564911 124.58675385]
[-57.73934174 115.60135651]
[-72.72630310 116.22671509]
[-87.71325684 116.85206604]
[-102.70021820 117.47742462]
[-113.21411133 129.27714539]
[-128.99681091 130.10295105]
[-140.68472290 119.46488953]
[-141.34361267 103.67433929]
[-130.58256531 92.09955597]
[-114.78594208 91.60765076]
[-103.32557678 102.49047089]
[-88.33861542 101.86511230]
[-73.35166168 101.23975372]
[-58.36470032 100.61439514]
[-49.86785126 91.88098907]
[-37.29297638 91.31746674]
[-27.43725777 99.77979279]
[-12.43870640 99.57128143]
[2.55984402 99.36277771]
[17.55839539 99.15427399]
[32.55694580 98.94576263]
[47.55549622 98.73725891]
[62.55404663 98.52875519]
[81.08592224 74.05114746]
[107.18067169 74.23574829]
[115.09799957 61.49541855]
[123.01532745 48.75509262]
[124.93128204 39.67591858]
[131.33399963 35.77495575]
[132.48539734 19.99570084]
[145.95668030 13.64166546]
[154.22509766 1.12634945]
[151.27207947 -14.16800880]
[159.83572388 -26.74253273]
[174.43475342 -29.46353531]
[182.70318604 -41.97885132]
[190.97160339 -54.49416733]
[199.24003601 -67.00948334]
[207.50845337 -79.52479553]
[215.77688599 -92.04011536]
[212.82386780 -107.33447266]
[221.38751221 -119.90899658]
[235.98654175 -122.62999725]
[244.25495911 -135.14530945]
[252.52339172 -147.66062927]
[256.20959473 -164.20899963]
[273.13165283 -165.24790955]
[278.81448364 -149.27473450]
[265.03869629 -139.39221191]
[256.77029419 -126.87689209]
[248.50186157 -114.36157227]
[251.72608948 -99.86537170]
[243.51901245 -87.05527496]
[228.29220581 -83.77169037]
[220.02377319 -71.25637054]
[211.75535583 -58.74105835]
[203.48692322 -46.22574234]
[195.21849060 -33.71042633]
[186.95007324 -21.19510841]
[190.17430115 -6.69890594]
[181.96722412 6.11119127]
[166.74041748 9.39477539]
[158.47198486 21.91009140]
[157.91200256 36.79416656]
[143.84930420 44.04338074]
[135.75564575 56.67242050]
[127.83832550 69.41275024]
[119.92099762 82.15307617]
[126.53714752 96.66256714]
[123.71976471 112.35846710]
[134.54519653 122.74161530]
[145.37065125 133.12477112]
[156.19609070 143.50791931]
[167.02153015 153.89106750]
[182.26921082 151.01220703]
[196.28256226 157.67594910]
[203.67318726 171.31994629]
[201.59921265 186.69778442]
[190.85813904 197.89640808]
[175.58012390 200.60968018]
[161.63987732 193.79431152]
[154.39770508 180.07095337]
[156.63838196 164.71650696]
[145.81292725 154.33335876]
[134.98748779 143.95021057]
[124.16204834 133.56706238]
[113.33660889 123.18390656]
[109.78762817 128.69932556]
[104.57308197 133.58874512]
[97.82631683 137.41174316]
[96.16165161 152.31909180]
[107.08147430 163.51246643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 111]
[7 110]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[21 34]
[22 33]
[23 32]
[24 31]
[45 88]
[46 87]
[47 86]
[49 85]
[51 83]
[52 82]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[63 71]
[64 70]
[65 69]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
