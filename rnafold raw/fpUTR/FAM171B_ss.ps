%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUGCGCGAGGGGGAGCGAGCGAGCGGGCGCUGCCAGGAGCCCGCAGCCCUGGCGCCCGCCGCCGCCCGGAGCCCCGCAAUAUGCCGCCGCGGCCCUCUGGCUCUAGGCC\
) } def
/len { sequence length } bind def

/coor [
[198.82191467 254.51982117]
[195.28349304 238.53268433]
[200.27919006 222.84130859]
[190.04751587 211.87257385]
[179.81584167 200.90385437]
[169.58418274 189.93511963]
[159.35250854 178.96640015]
[149.12083435 167.99768066]
[145.48735046 167.55505371]
[141.91108704 165.24098206]
[139.31187439 161.11444092]
[138.54110718 155.66256714]
[129.25878906 143.87959290]
[119.97647095 132.09660339]
[110.05366516 120.84770203]
[99.52104187 110.16763306]
[91.95944214 107.03757477]
[88.84922791 99.04123688]
[78.61756134 88.07250977]
[68.38588715 77.10378265]
[60.12171936 72.88409424]
[58.02749634 65.68502808]
[48.10469055 54.43612289]
[38.18188477 43.18721771]
[30.03820610 38.73942947]
[28.14491272 31.48493195]
[18.53863907 19.96453476]
[8.93236732 8.44413853]
[-0.67390543 -3.07625699]
[-10.28017807 -14.59665298]
[-19.88644981 -26.11705017]
[-25.06068611 -27.99969292]
[-28.55978775 -31.39682770]
[-30.08343887 -35.37464905]
[-29.76431656 -39.02105713]
[-38.37744904 -51.30169296]
[-46.99058151 -63.58232498]
[-55.60371780 -75.86295319]
[-64.21685028 -88.14359283]
[-72.82997894 -100.42422485]
[-80.42974854 -105.74830627]
[-81.50626373 -113.16809845]
[-89.77468872 -125.68341827]
[-105.14183044 -130.29107666]
[-110.98672485 -145.23152161]
[-102.82566833 -159.04371643]
[-86.91912079 -161.13212585]
[-75.46923065 -149.89471436]
[-77.25936890 -133.95184326]
[-68.99094391 -121.43653107]
[-60.54935074 -109.03735352]
[-51.93621826 -96.75672150]
[-43.32308197 -84.47608948]
[-34.70994949 -72.19545746]
[-26.09681702 -59.91482544]
[-17.48368454 -47.63419342]
[-8.36605453 -35.72332382]
[1.24021804 -24.20292664]
[10.84649086 -12.68252945]
[20.45276260 -1.16213369]
[30.05903625 10.35826206]
[39.66530991 21.87865829]
[49.43078995 33.26441193]
[59.35359573 44.51331711]
[69.27640533 55.76222610]
[79.35461426 66.87211609]
[89.58628082 77.84084320]
[99.81795502 88.80957031]
[110.20110321 99.63500977]
[120.73372650 110.31507111]
[125.28402710 111.36659241]
[128.83692932 113.64969635]
[131.11711121 116.66886902]
[132.05076599 119.89009857]
[131.75944519 122.81429291]
[141.04176331 134.59727478]
[150.32408142 146.38024902]
[160.08956909 157.76600647]
[170.32122803 168.73472595]
[180.55290222 179.70346069]
[190.78457642 190.67218018]
[201.01623535 201.64089966]
[211.24790955 212.60963440]
[224.77206421 208.74887085]
[238.56932068 211.11102295]
[249.93054199 219.17391968]
[256.65026855 231.30183411]
[257.45465088 245.07702637]
[252.24256897 257.78164673]
[262.16537476 269.03057861]
[272.08816528 280.27947998]
[289.49844360 281.01077271]
[300.82385254 293.80899048]
[299.48504639 310.50927734]
[309.71673584 321.47799683]
[319.94839478 332.44671631]
[330.18008423 343.41543579]
[346.01296997 347.68759155]
[349.96759033 363.60278320]
[337.97573853 374.78881836]
[322.37359619 369.73849487]
[319.21133423 353.64712524]
[308.97967529 342.67840576]
[298.74801636 331.70965576]
[288.51632690 320.74093628]
[275.61962891 322.08850098]
[264.15222168 315.62728882]
[258.45672607 303.54452515]
[260.83926392 290.20227051]
[250.91647339 278.95336914]
[240.99366760 267.70446777]
[225.30604553 271.29751587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[5 81]
[6 80]
[7 79]
[8 78]
[12 77]
[13 76]
[14 75]
[15 70]
[16 69]
[18 68]
[19 67]
[20 66]
[22 65]
[23 64]
[24 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[42 50]
[43 49]
[89 111]
[90 110]
[91 109]
[94 105]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
