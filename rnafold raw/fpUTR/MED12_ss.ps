%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUCCGAUGGUUCCCGGCGUACCUCGGCUUCCCUCGGUAGUUUCCGGCAAUGGUCGAGAGUUUCUAACGUGCCCCCUUGUUGUCUCUCGGCCGCCGUCCUCUCAACCACCGCCCCCCUUUUCGGCUCCCUCUCCCCCUUCCCGUUCCCCCAGUCAGCCUGGCCCUGCUGGUGCCUCCGGCGCUACGGGCUGGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[86.47483063 128.11521912]
[76.91347504 139.67292786]
[67.35211182 151.23062134]
[57.79075623 162.78831482]
[54.72790527 171.40367126]
[47.98730850 174.45092773]
[38.24558640 185.85702515]
[28.50386620 197.26310730]
[18.76214600 208.66920471]
[15.68313980 224.18791199]
[1.53394818 228.84082031]
[-8.20777225 240.24691772]
[-4.73956442 255.25616455]
[-10.70457458 269.26586914]
[-23.62243462 276.98553467]
[-38.43164825 275.63452148]
[-48.17337036 287.04061890]
[-57.91508865 298.44671631]
[-67.65680695 309.85278320]
[-66.16711426 325.58673096]
[-76.30355072 337.71224976]
[-92.05234528 339.03549194]
[-104.07001495 328.77145386]
[-105.22669983 313.00952148]
[-94.83615112 301.10104370]
[-79.06289673 300.11108398]
[-69.32118225 288.70498657]
[-59.57945633 277.29888916]
[-49.83773804 265.89279175]
[-53.48877335 251.47726440]
[-47.88497162 237.51081848]
[-34.98087311 229.42765808]
[-19.61386299 230.50518799]
[-9.87214088 219.09910583]
[-7.48992872 204.39624023]
[7.35605574 198.92747498]
[17.09777641 187.52139282]
[26.83949661 176.11529541]
[36.58121872 164.70921326]
[46.23305511 153.22695923]
[55.79441452 141.66926575]
[65.35577393 130.11157227]
[74.91713715 118.55386353]
[66.87843323 103.67317963]
[67.57321930 85.67511749]
[77.91178131 69.60244751]
[95.95930481 60.50557709]
[84.55321503 50.76385498]
[73.14712524 41.02213287]
[61.74103928 31.28041267]
[56.59053421 30.32856178]
[52.71245193 27.74984169]
[50.51407242 24.30371094]
[50.04114151 20.80111122]
[39.10661316 10.53290558]
[28.17208290 0.26469851]
[17.23755264 -10.00350761]
[6.30302382 -20.27171516]
[-4.63150549 -30.53992081]
[-15.56603527 -40.80812836]
[-26.50056458 -51.07633591]
[-37.43509293 -61.34453964]
[-46.75196838 -59.79426956]
[-55.60473251 -62.66734314]
[-62.04226685 -69.19733429]
[-64.70745087 -77.82714844]
[-63.12211609 -86.57907104]
[-73.56080627 -97.35095978]
[-83.99949646 -108.12285614]
[-94.43819427 -118.89475250]
[-104.87688446 -129.66664124]
[-120.21960449 -127.34703064]
[-133.98002625 -134.51852417]
[-140.86700439 -148.42352295]
[-138.23233032 -163.71530151]
[-127.08911896 -174.51382446]
[-111.72213745 -176.66687012]
[-98.04031372 -169.34652710]
[-91.30459595 -155.36763000]
[-94.10498810 -140.10533142]
[-83.66629791 -129.33345032]
[-73.22760773 -118.56154633]
[-62.78891373 -107.78964996]
[-52.35022354 -97.01776123]
[-32.08552933 -93.13029480]
[-27.16688728 -72.27906799]
[-16.23235703 -62.01086426]
[-5.29782867 -51.74265671]
[5.63670111 -41.47444916]
[16.57122993 -31.20624352]
[27.50576019 -20.93803787]
[38.44028854 -10.66983128]
[49.37481689 -0.40162432]
[60.30934906 9.86658192]
[71.48275757 19.87432289]
[82.88884735 29.61604500]
[94.29493713 39.35776520]
[105.70102692 49.09948730]
[113.14904022 48.21795654]
[107.80968475 34.20042038]
[102.47032928 20.18288612]
[91.51833344 9.93331432]
[87.79792786 -4.59798241]
[92.47697449 -18.84952545]
[104.08669281 -28.34765244]
[118.98271179 -30.11083412]
[132.48904419 -23.58559227]
[140.36598206 -10.82025051]
[140.14086914 4.17806005]
[131.88406372 16.70153999]
[129.96456909 31.57821655]
[128.04507446 46.45489502]
[135.49308777 45.57336426]
[144.30986023 33.43811035]
[153.12663269 21.30285454]
[147.43377686 6.96427536]
[150.41908264 -8.17149448]
[161.12994385 -19.27468491]
[176.14857483 -22.80231094]
[190.68258667 -17.62871742]
[200.09422302 -5.40477943]
[201.38026428 9.96888828]
[194.13034058 23.58660316]
[180.65788269 31.10300446]
[165.26188660 30.11963272]
[156.44511414 42.25488663]
[147.62834167 54.39014435]
[161.18373108 47.96744537]
[174.73913574 41.54474258]
[188.29454041 35.12204361]
[201.84994507 28.69934654]
[215.40534973 22.27664757]
[225.60101318 11.27444649]
[238.07580566 2.94500899]
[252.14566040 -2.25491118]
[267.03903198 -4.04017162]
[281.93927002 -2.31287622]
[296.02923584 2.83225751]
[308.53634644 11.11309052]
[318.77474976 22.07553673]
[326.18301392 35.11845779]
[330.35488892 49.52663040]
[331.06158447 64.50997162]
[328.26440430 79.24685669]
[322.11669922 92.92916870]
[312.95559692 104.80663300]
[301.28341675 114.22792816]
[287.74029541 120.67642975]
[273.06878662 123.79853058]
[258.07348633 123.42302704]
[243.57667542 119.57050323]
[230.37326050 112.45223236]
[219.18659973 102.45775604]
[205.08691406 97.33924103]
[190.98724365 92.22071838]
[176.88757324 87.10220337]
[162.78790283 81.98368073]
[148.68823242 76.86516571]
[158.60791016 88.11682892]
[168.52758789 99.36849976]
[178.44726562 110.62016296]
[188.36694336 121.87182617]
[198.28662109 133.12348938]
[208.20629883 144.37516785]
[218.12597656 155.62683105]
[228.04565430 166.87849426]
[236.07579041 171.25137329]
[238.03108215 178.38568115]
[245.99154663 182.88414001]
[247.83453369 190.04829407]
[257.39587402 201.60598755]
[266.95724487 213.16368103]
[276.51861572 224.72138977]
[286.07995605 236.27908325]
[295.64132690 247.83677673]
[305.20269775 259.39447021]
[319.95770264 267.74465942]
[316.01846313 284.23461914]
[299.08245850 285.01419067]
[293.64498901 268.95584106]
[284.08361816 257.39813232]
[274.52227783 245.84043884]
[264.96090698 234.28274536]
[255.39955139 222.72503662]
[245.83819580 211.16734314]
[236.27682495 199.60964966]
[226.62498474 188.12739563]
[216.79399109 176.79817200]
[206.87431335 165.54650879]
[196.95463562 154.29484558]
[187.03495789 143.04316711]
[177.11528015 131.79150391]
[167.19560242 120.53984070]
[157.27592468 109.28817749]
[147.35624695 98.03650665]
[137.43656921 86.78484344]
[137.66795349 105.01500702]
[129.87619019 120.61814880]
[116.43683624 130.44630432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[6 39]
[7 38]
[8 37]
[9 36]
[11 34]
[12 33]
[16 29]
[17 28]
[18 27]
[19 26]
[47 98]
[48 97]
[49 96]
[50 95]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[113 127]
[114 126]
[115 125]
[158 196]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 189]
[166 188]
[168 187]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
