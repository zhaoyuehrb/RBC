%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGGCAGUUAUAUAGACCGGCGGCGGAGCACGCGUGUGUGCGGACGCAGUUGCGUGAGGGGUUUGUACUAUCCUCGGUGCUGUGGUGCAGAGCUAGUUCCUCUCCAGCUCAGCCGCGUAGGUUUGGACAUAUUUGACUCUUUUCCCCCCAGGUUGAAUUGACCAAAGCA\
) } def
/len { sequence length } bind def

/coor [
[84.46395111 464.44149780]
[81.76839447 449.25146484]
[87.73419189 435.02426147]
[100.45767975 426.29980469]
[99.90984344 411.30978394]
[99.36201477 396.31979370]
[98.67731476 381.33544922]
[97.85579681 366.35794067]
[97.03427887 351.38046265]
[96.21276093 336.40298462]
[95.39124298 321.42550659]
[88.46906281 317.49816895]
[83.62313843 311.06652832]
[81.71275330 303.14657593]
[83.12587738 295.02728271]
[87.70317078 288.06094360]
[94.75215912 283.43780518]
[95.02611542 268.44030762]
[95.30007935 253.44281006]
[95.57403564 238.44531250]
[95.71102142 223.44593811]
[95.71102142 208.44593811]
[92.55493927 201.73229980]
[95.85050964 193.17260742]
[96.12447357 178.17510986]
[93.09152985 171.40493774]
[96.54289246 162.90686035]
[97.09072113 147.91687012]
[97.63854980 132.92687988]
[98.18638611 117.93688965]
[88.07499695 106.85718536]
[73.09750366 106.03566742]
[58.12002182 105.21414948]
[43.14253235 104.39263153]
[28.16504669 103.57111359]
[13.18756008 102.74960327]
[-1.80243242 102.20176697]
[-16.79993057 101.92781067]
[-31.79742813 101.65384674]
[-46.79492569 101.37989044]
[-61.79242325 101.10592651]
[-75.87213898 109.51387787]
[-90.05972290 101.28925323]
[-89.76020813 84.89284515]
[-75.28170776 77.19186401]
[-61.51846313 86.10842896]
[-46.52096558 86.38239288]
[-31.52346802 86.65634918]
[-16.52596855 86.93031311]
[-1.52847147 87.20426941]
[2.49345613 84.56704712]
[8.22186565 84.45365143]
[14.00907707 87.77210999]
[28.98656464 88.59362793]
[43.96405029 89.41514587]
[58.94153595 90.23666382]
[73.91902161 91.05818176]
[88.89651489 91.87969971]
[102.17345428 84.89952087]
[109.98755646 72.09562683]
[117.80165863 59.29172897]
[125.61576843 46.48783493]
[133.42987061 33.68393707]
[141.24397278 20.88004112]
[149.05807495 8.07614422]
[156.27958679 -5.07109499]
[162.89343262 -18.53426933]
[169.50727844 -31.99744225]
[170.49023438 -41.11681747]
[176.36683655 -45.64444351]
[183.22547913 -58.98457336]
[190.08410645 -72.32470703]
[188.74645996 -90.67311859]
[203.82380676 -99.62238312]
[210.43765259 -113.08555603]
[217.05149841 -126.54872894]
[223.54211426 -140.07174683]
[229.90896606 -153.65347290]
[224.77005005 -168.35820007]
[231.42041016 -182.04130554]
[245.47079468 -186.84986877]
[251.83764648 -200.43157959]
[258.20449829 -214.01330566]
[264.57135010 -227.59503174]
[263.42321777 -243.37452698]
[275.83111572 -251.61425781]
[274.68295288 -267.39373779]
[287.09085083 -275.63348389]
[293.45770264 -289.21520996]
[292.30957031 -304.99468994]
[304.71746826 -313.23443604]
[311.08432007 -326.81616211]
[317.45117188 -340.39788818]
[323.81802368 -353.97961426]
[317.07437134 -368.08837891]
[321.02740479 -383.21804810]
[333.81063843 -392.22488403]
[349.38821411 -390.85614014]
[360.40484619 -379.75805664]
[361.65884399 -364.17080688]
[352.55813599 -351.45428467]
[337.39971924 -347.61276245]
[331.03286743 -334.03103638]
[324.66604614 -320.44931030]
[318.29919434 -306.86758423]
[319.90274048 -292.05953979]
[307.03942871 -282.84835815]
[300.67257690 -269.26663208]
[302.27612305 -254.45860291]
[289.41284180 -245.24740601]
[291.01638794 -230.43937683]
[278.15307617 -221.22817993]
[271.78622437 -207.64645386]
[265.41937256 -194.06472778]
[259.05252075 -180.48301697]
[264.34408569 -166.60731506]
[258.08068848 -152.74281311]
[243.49069214 -147.28662109]
[237.12384033 -133.70489502]
[237.13186646 -126.28641510]
[230.51467896 -119.93488312]
[223.90083313 -106.47171021]
[217.28698730 -93.00853729]
[220.89533997 -81.43849945]
[215.46531677 -70.15625000]
[203.42424011 -65.46607208]
[196.56561279 -52.12593842]
[189.70697021 -38.78580856]
[182.97044373 -25.38359642]
[176.35659790 -11.92042255]
[169.74275208 1.54275107]
[184.59669495 -0.54549700]
[195.61857605 9.62887669]
[194.72294617 24.60211372]
[182.56681824 33.39009094]
[168.06773376 29.54608345]
[161.86198425 15.89024925]
[154.04786682 28.69414520]
[146.23376465 41.49804306]
[138.41966248 54.30193710]
[130.60556030 67.10583496]
[122.79145050 79.90972900]
[114.97734833 92.71363068]
[113.17637634 118.48471832]
[112.62854767 133.47471619]
[112.08071136 148.46470642]
[111.53288269 163.45469666]
[111.12197113 178.44906616]
[110.84800720 193.44656372]
[110.71102142 208.44593811]
[110.71102142 223.44593811]
[113.84971619 232.06439209]
[110.57153320 238.71926880]
[110.29757690 253.71676636]
[110.02361298 268.71426392]
[109.74965668 283.71176147]
[122.06707764 302.40942383]
[110.36872864 320.60397339]
[111.19024658 335.58145142]
[112.01176453 350.55895996]
[112.83328247 365.53643799]
[113.65480042 380.51391602]
[117.26079559 388.94754028]
[114.35200500 395.77197266]
[114.89984131 410.76196289]
[115.44766998 425.75195312]
[128.77404785 433.52441406]
[135.76245117 447.27816772]
[134.18289185 462.62445068]
[124.53941345 474.66632080]
[109.90919495 479.56127930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[17 156]
[18 155]
[19 154]
[20 153]
[21 151]
[22 150]
[24 149]
[25 148]
[27 147]
[28 146]
[29 145]
[30 144]
[31 58]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[65 137]
[66 131]
[67 130]
[68 129]
[70 128]
[71 127]
[72 126]
[74 123]
[75 122]
[76 121]
[77 119]
[78 118]
[81 115]
[82 114]
[83 113]
[84 112]
[86 110]
[88 108]
[89 107]
[91 105]
[92 104]
[93 103]
[94 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
