%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGCCGUGGGAUUAGGCUUCGCCGGCUACGAUUGCGGCCCCCAUCUUCUGACUUUUCCUCGUGUGACCCAUCUUUUCAAAUUCCCUUACCUGAGGAAGGAGCCCGAUUACAAGGAUAUUUACCUGCUCCUACCCUGAUCUAGGGACGAGGAUGGGAAGACCGCCUGUGGCCAUGAGCCCUCCCCGGUGCUCCUGGGGCUAAGGCUGGGGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[258.84701538 754.30920410]
[261.03140259 748.08038330]
[259.10891724 733.20410156]
[257.18643188 718.32781982]
[255.26393127 703.45153809]
[253.34144592 688.57525635]
[251.41894531 673.69897461]
[242.11425781 662.06829834]
[248.01902771 647.39025879]
[246.09654236 632.51397705]
[244.17404175 617.63769531]
[231.06713867 611.70538330]
[221.61708069 601.40252686]
[217.10818481 588.59924316]
[217.96578979 575.45947266]
[223.73500061 564.07659912]
[233.20376587 556.13970947]
[228.36528015 541.94152832]
[223.52679443 527.74334717]
[218.68829346 513.54510498]
[213.84980774 499.34692383]
[202.77096558 496.65463257]
[194.27751160 488.87020874]
[190.55545044 477.84039307]
[192.63798523 466.26547241]
[200.12205505 457.03854370]
[195.69099426 442.70794678]
[191.25991821 428.37738037]
[186.82884216 414.04678345]
[182.39776611 399.71621704]
[177.96669006 385.38562012]
[173.53561401 371.05505371]
[164.11302185 367.12289429]
[158.28483582 358.47366333]
[158.17327881 347.82516479]
[164.05632019 338.68643188]
[160.03627014 324.23516846]
[156.01623535 309.78387451]
[151.99618530 295.33261108]
[147.87306213 280.91040039]
[134.53805542 269.49798584]
[139.03694153 251.63868713]
[134.60588074 237.30810547]
[130.17480469 222.97752380]
[125.74372864 208.64694214]
[121.31265259 194.31636047]
[116.88157654 179.98577881]
[112.45050812 165.65519714]
[108.01943207 151.32461548]
[103.58835602 136.99403381]
[92.55866241 137.08221436]
[81.79830933 133.89758301]
[72.27305603 127.60983276]
[64.87103271 118.67177582]
[60.32033920 107.78800201]
[59.11857605 95.85983276]
[61.48080826 83.91080475]
[67.31143951 72.99885559]
[55.43290710 63.83913803]
[43.55437469 54.67941666]
[31.67584038 45.51969910]
[19.79730797 36.35998154]
[7.91877365 27.20026398]
[-7.73437977 24.90040398]
[-13.08836937 11.00133610]
[-24.96690369 1.84161794]
[-36.84543610 -7.31810045]
[-48.72396851 -16.47781754]
[-61.06358719 -7.74711323]
[-75.42893219 -3.04303694]
[-90.54264069 -2.78387308]
[-105.06082153 -6.99266672]
[-117.69252014 -15.29517365]
[-127.31452942 -26.95314217]
[-133.07128906 -40.92995453]
[-134.45088196 -55.98279572]
[-131.33065796 -70.77318573]
[-123.98806000 -83.98596954]
[-113.07598114 -94.44627380]
[-99.56472015 -101.22397614]
[-84.65569305 -103.71640778]
[-69.67459106 -101.70195007]
[-55.95352936 -95.35971832]
[-44.71257782 -85.25365448]
[-36.95126724 -72.28240204]
[-33.35973740 -57.59933853]
[-34.25733566 -42.51008224]
[-39.56425095 -28.35635185]
[-27.68571854 -19.19663429]
[-15.80718422 -10.03691578]
[-3.92865086 -0.87719756]
[10.87487030 0.76749855]
[17.07849121 15.32172966]
[28.95702553 24.48144913]
[40.83555984 33.64116669]
[52.71409225 42.80088425]
[64.59262848 51.96060181]
[76.47116089 61.12031937]
[90.40990448 55.57854080]
[92.75642395 40.76321793]
[95.10294342 25.94789314]
[97.44945526 11.13256741]
[99.79597473 -3.68275785]
[102.14249420 -18.49808311]
[103.42611694 -33.44305801]
[103.64031219 -48.44152832]
[91.13801575 -57.63241196]
[86.45780182 -72.42684174]
[91.39929962 -87.13606262]
[104.06240845 -96.10408020]
[119.57790375 -95.88249969]
[131.97975159 -86.55653381]
[136.49920654 -71.71220398]
[131.39843750 -57.05745316]
[118.63877869 -48.22733688]
[118.42459106 -33.22886658]
[127.39342499 -45.25217438]
[141.13458252 -51.26719666]
[156.05249023 -49.70001221]
[168.24365234 -40.96070099]
[174.51808167 -27.33602905]
[173.23396301 -12.39109421]
[164.72731018 -0.03646063]
[151.22402954 6.49510145]
[136.25744629 5.49451256]
[123.74377441 -2.77640891]
[116.95781708 -16.15156555]
[114.61129761 -1.33624089]
[112.26478577 13.47908401]
[109.91826630 28.29440880]
[107.57174683 43.10973358]
[105.22523499 57.92506027]
[115.07292938 63.18306732]
[122.60016632 70.49292755]
[133.93640137 60.67001343]
[145.27264404 50.84710312]
[156.60890198 41.02419281]
[167.94514465 31.20128059]
[175.95603943 16.25933456]
[192.53169250 19.82083130]
[193.69798279 36.73461533]
[177.76805115 42.53752518]
[166.43180847 52.36043549]
[155.09556580 62.18334579]
[143.75932312 72.00625610]
[132.42308044 81.82917023]
[137.16326904 100.57116699]
[131.84934998 119.15864563]
[117.91894531 132.56295776]
[122.35001373 146.89353943]
[126.78108978 161.22412109]
[131.21215820 175.55470276]
[135.64323425 189.88528442]
[140.07431030 204.21586609]
[144.50538635 218.54644775]
[148.93646240 232.87704468]
[153.36752319 247.20762634]
[164.38673401 253.90296936]
[167.78469849 265.92507935]
[162.26545715 276.68441772]
[167.68235779 284.03091431]
[166.44746399 291.31256104]
[170.46749878 305.76385498]
[174.48754883 320.21511841]
[178.50758362 334.66638184]
[193.51808167 348.12826538]
[187.86619568 366.62396240]
[192.29727173 380.95455933]
[196.72834778 395.28512573]
[201.15942383 409.61572266]
[205.59049988 423.94628906]
[210.02157593 438.27688599]
[214.45263672 452.60745239]
[231.53613281 460.80895996]
[237.09770203 478.59005737]
[228.04801941 494.50842285]
[232.88650513 508.70663452]
[237.72499084 522.90484619]
[242.56349182 537.10302734]
[247.40197754 551.30120850]
[268.73648071 555.27404785]
[283.23263550 573.26361084]
[282.50909424 597.75897217]
[293.56021118 607.90161133]
[304.61132812 618.04425049]
[315.66244507 628.18682861]
[326.71356201 638.32946777]
[337.76467896 648.47210693]
[353.79010010 649.22436523]
[363.07650757 662.30645752]
[358.50021362 677.68298340]
[343.57171631 683.55834961]
[329.74291992 675.42547607]
[327.62207031 659.52319336]
[316.57095337 649.38061523]
[305.51983643 639.23797607]
[294.46871948 629.09533691]
[283.41760254 618.95269775]
[272.36648560 608.81011963]
[259.05032349 615.71520996]
[260.97283936 630.59149170]
[262.89532471 645.46777344]
[272.33752441 658.16247559]
[266.29525757 671.77642822]
[268.21774292 686.65277100]
[270.14022827 701.52905273]
[272.06271362 716.40533447]
[273.98522949 731.28161621]
[275.90771484 746.15789795]
[278.04241943 761.00524902]
[280.38894653 775.82055664]
[282.73547363 790.63586426]
[293.47067261 803.03295898]
[287.84713745 818.43774414]
[271.64990234 821.00317383]
[261.54125977 808.09008789]
[267.92013550 792.98242188]
[265.57360840 778.16705322]
[263.22711182 763.35174561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[9 202]
[10 201]
[11 200]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[36 165]
[37 164]
[38 163]
[39 162]
[40 160]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[63 93]
[65 91]
[66 90]
[67 89]
[68 88]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[105 116]
[106 115]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
