%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGGCUUCGGCACACUGAGGACCGAGUCCCAGUGCAGCUCCAGCCGACCCCCGGGACGUAGACAAGGGCAGGCGCGCGGUGAAGACUGCGGCCGGCCGCGUAGCCGCGCUGUGGUCCCGCUGGCCUUCUCUUGGGCCGCGCACCCUCCGGACCUGCGUCGGGAUCCUCCCGGAGUCUCCCGCUCUCUCCUCCCGGCUUGCGAAC\
) } def
/len { sequence length } bind def

/coor [
[-125.33461761 467.25164795]
[-135.00364685 466.48715210]
[-144.29229736 463.72680664]
[-152.79368591 459.09539795]
[-163.15490723 469.94186401]
[-173.51611328 480.78829956]
[-183.87733459 491.63473511]
[-183.68971252 507.21041870]
[-194.35195923 518.06268311]
[-209.20217896 518.14556885]
[-219.56338501 528.99200439]
[-229.92460632 539.83843994]
[-233.86402893 557.82440186]
[-250.88345337 562.09606934]
[-261.07806396 573.09924316]
[-271.27267456 584.10241699]
[-281.46725464 595.10559082]
[-291.66186523 606.10882568]
[-295.20068359 614.53424072]
[-302.09683228 617.20056152]
[-312.45803833 628.04699707]
[-322.81924438 638.89343262]
[-333.18048096 649.73986816]
[-339.74923706 665.36956787]
[-356.58654785 663.38421631]
[-359.33984375 646.65533447]
[-344.02691650 639.37866211]
[-333.66567993 628.53222656]
[-323.30447388 617.68579102]
[-312.94326782 606.83929443]
[-302.66506958 595.91418457]
[-292.47045898 584.91101074]
[-282.27584839 573.90783691]
[-272.08123779 562.90466309]
[-261.88665771 551.90142822]
[-262.03356934 539.80334473]
[-253.62689209 530.55267334]
[-240.77104187 529.47723389]
[-230.40982056 518.63079834]
[-220.04861450 507.78433228]
[-220.64498901 492.94586182]
[-210.29176331 481.79843140]
[-194.72377014 481.27349854]
[-184.36256409 470.42706299]
[-174.00134277 459.58062744]
[-163.64012146 448.73419189]
[-172.13533020 429.97741699]
[-171.64074707 409.34750366]
[-162.21549988 390.93936157]
[-145.69528198 378.42388916]
[-125.33495331 374.31585693]
[-105.16726685 379.46871948]
[-96.20309448 367.44192505]
[-87.23892212 355.41516113]
[-78.27474976 343.38836670]
[-69.31057739 331.36157227]
[-60.34640503 319.33477783]
[-58.94409561 304.50634766]
[-44.49329758 298.06546021]
[-43.01589203 290.82095337]
[-35.29957581 285.92501831]
[-26.15303802 274.03631592]
[-17.00650024 262.14764404]
[-22.15101814 246.56071472]
[-16.94035339 230.82063293]
[-3.23950148 221.19122314]
[13.66733932 221.62841797]
[22.63151360 209.60162354]
[31.59568596 197.57484436]
[33.07308960 190.33032227]
[40.78940582 185.43438721]
[49.93594360 173.54571533]
[59.08248138 161.65702820]
[68.22901917 149.76834106]
[69.85729218 134.96299744]
[84.40464020 128.74324036]
[55.18951797 56.53816986]
[53.36400223 41.64966965]
[51.53848267 26.76116562]
[49.71296692 11.87266445]
[46.97239685 8.49318218]
[45.59116364 4.78958607]
[45.50400162 1.22976279]
[46.50016403 -1.78782642]
[48.25874329 -3.97564173]
[47.34428406 -18.94774055]
[46.42982483 -33.91984177]
[45.51536560 -48.89194107]
[44.60090637 -63.86404037]
[43.68644714 -78.83613586]
[42.77198792 -93.80823517]
[41.85752487 -108.78034210]
[40.94306564 -123.75244141]
[39.91447067 -138.71713257]
[38.77179337 -153.67353821]
[37.62911987 -168.62995911]
[36.48644257 -183.58636475]
[24.33057785 -193.68638611]
[22.96009254 -209.43115234]
[33.18807220 -221.47955322]
[48.94643784 -222.68350220]
[60.88602829 -212.32870483]
[61.92330170 -196.55848694]
[51.44285583 -184.72904968]
[52.58552933 -169.77262878]
[53.72820663 -154.81622314]
[54.87088394 -139.85980225]
[58.51633453 -133.42735291]
[55.91516495 -124.66690063]
[56.82962418 -109.69480133]
[57.74408722 -94.72270203]
[58.65854645 -79.75060272]
[59.57300568 -64.77849579]
[60.48746490 -49.80640030]
[61.40192413 -34.83430099]
[62.31638336 -19.86220169]
[63.23084259 -4.89010143]
[64.60147095 10.04714680]
[66.42698669 24.93564796]
[68.25250244 39.82415009]
[70.07801819 54.71265411]
[84.12561035 59.97432327]
[98.17195129 65.23553467]
[109.32932281 55.20991516]
[120.48669434 45.18429565]
[131.64405823 35.15867615]
[142.80143738 25.13305473]
[143.39422607 9.33988762]
[155.03752136 -1.34699678]
[170.82353210 -0.58725870]
[181.38671875 11.16836262]
[180.46012878 26.94546509]
[168.59347534 37.38377380]
[152.82705688 36.29042435]
[141.66967773 46.31604767]
[130.51231384 56.34166718]
[119.35494232 66.36728668]
[108.19757080 76.39290619]
[114.72054291 89.90034485]
[129.50997925 87.39580536]
[144.29940796 84.89126587]
[159.08883667 82.38672638]
[173.87826538 79.88218689]
[188.60655212 77.04001617]
[203.26596069 73.86170197]
[215.03787231 62.44443130]
[230.73530579 67.19022369]
[234.21008301 83.21701050]
[221.88764954 94.03781128]
[206.44427490 88.52111053]
[191.78486633 91.69942474]
[189.57838440 94.45442200]
[185.92613220 96.27579498]
[181.28228760 96.49490356]
[176.38281250 94.67162323]
[161.59338379 97.17616272]
[146.80393982 99.68070221]
[132.01451111 102.18523407]
[117.22508240 104.68977356]
[115.85445404 119.62702179]
[129.94113159 124.78120422]
[144.02781677 129.93537903]
[158.11448669 135.08956909]
[172.20115662 140.24374390]
[189.15347290 140.00807190]
[194.07279968 156.23263550]
[179.84410095 165.45112610]
[167.04698181 154.33041382]
[152.96031189 149.17623901]
[138.87362671 144.02206421]
[124.78695679 138.86787415]
[110.70027924 133.71369934]
[96.29331970 137.88978577]
[94.01082611 153.54547119]
[80.11770630 158.91487122]
[70.97116852 170.80355835]
[61.82463074 182.69224548]
[52.67809296 194.58093262]
[43.62247086 206.53901672]
[34.65829849 218.56579590]
[25.69412613 230.59259033]
[30.76156044 243.41340637]
[28.84646225 256.95635986]
[20.55511856 267.69802856]
[8.13852978 272.89721680]
[-5.11781502 271.29418945]
[-14.26435280 283.18286133]
[-23.41089058 295.07156372]
[-32.46651077 307.02963257]
[-34.50999451 322.71832275]
[-48.31961823 328.29895020]
[-57.28379059 340.32574463]
[-66.24796295 352.35253906]
[-75.21213531 364.37933350]
[-84.17630768 376.40609741]
[-93.14048004 388.43289185]
[-87.13355255 396.17462158]
[-82.87602234 404.99014282]
[-80.55150604 414.49063110]
[-80.25843048 424.25790405]
[-82.00588989 433.86282349]
[-85.71340942 442.88424683]
[-91.21466827 450.92733765]
[-98.26491547 457.64096069]
[-106.55188751 462.73297119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 46]
[5 45]
[6 44]
[7 43]
[10 40]
[11 39]
[12 38]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[20 30]
[21 29]
[22 28]
[23 27]
[52 196]
[53 195]
[54 194]
[55 193]
[56 192]
[57 191]
[59 189]
[61 188]
[62 187]
[63 186]
[67 181]
[68 180]
[69 179]
[71 178]
[72 177]
[73 176]
[74 175]
[76 173]
[77 121]
[78 120]
[79 119]
[80 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 107]
[95 106]
[96 105]
[97 104]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[144 151]
[145 150]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
