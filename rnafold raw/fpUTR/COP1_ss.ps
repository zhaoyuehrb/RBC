%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCUACAGGGACCGCGGUGGCGGCGGCGGCCUCGACAGCGGUAGUGCCUUCUACUCCGCUUUUUUAGUUUCCUCCGCCCCCUCCCGUGGGACGCUGUUGUGUGGCUGCCUUAAAAAAAAACGCAACUUUAUUGUUCCUCAGCCCCACCUCCGGCUCGGCGGGCGUCCUCAGGAUGCACUGAGGCUGAGGGGAGGGGAGGCGGCGGAGGGUCGAGGUCGCGGUCCCUCUCCUCCGAGCGCCCGGCUGGAGGGG\
AGGGAGUCACG\
) } def
/len { sequence length } bind def

/coor [
[77.93827820 116.83420563]
[70.49013519 117.71464539]
[65.47055817 131.84983826]
[60.45098114 145.98503113]
[55.43140030 160.12023926]
[50.41182327 174.25543213]
[45.39224625 188.39064026]
[40.37266541 202.52583313]
[35.35308838 216.66102600]
[38.02623367 232.25477600]
[26.47598076 241.65907288]
[33.49277115 255.82029724]
[28.36179924 270.76849365]
[14.12718391 277.63516235]
[-0.76593351 272.34643555]
[-7.48172903 258.04003906]
[-2.03584099 243.20365906]
[12.34078217 236.63949585]
[9.30860043 222.05679321]
[21.21788788 211.64144897]
[26.23746681 197.50625610]
[31.25704575 183.37104797]
[36.27662659 169.23585510]
[41.29620361 155.10066223]
[46.31578064 140.96545410]
[51.33536148 126.83026123]
[56.35493851 112.69506073]
[73.08819580 95.72446442]
[92.52571869 94.90661621]
[89.71846771 80.17164612]
[86.91120911 65.43667603]
[84.10395813 50.70170212]
[81.29670715 35.96673203]
[78.48945618 21.23176384]
[75.68220520 6.49679422]
[72.87495422 -8.23817539]
[70.06769562 -22.97314453]
[67.26044464 -37.70811462]
[64.45319366 -52.44308472]
[51.37546921 -59.78972244]
[37.33105850 -54.52145767]
[23.28664970 -49.25319672]
[9.24224091 -43.98493576]
[-4.80216742 -38.71667480]
[-11.70918465 -32.79259491]
[-19.04293823 -33.47011566]
[-33.14836121 -28.36746407]
[-47.25378418 -23.26481247]
[-61.35920715 -18.16216278]
[-69.44235229 -4.30422926]
[-85.33688354 -2.12627292]
[-96.84986877 -13.29903507]
[-95.14954376 -29.25172806]
[-81.54023743 -37.74681091]
[-66.46186066 -32.26758575]
[-52.35643387 -37.37023544]
[-38.25101089 -42.47288513]
[-24.14558792 -47.57553864]
[-10.07042885 -52.76108170]
[3.97397947 -58.02934265]
[18.01838875 -63.29760742]
[32.06279755 -68.56586456]
[46.10720444 -73.83412933]
[31.49001884 -70.46695709]
[17.05530930 -74.54606628]
[6.36238050 -85.06563568]
[2.04789257 -99.43174744]
[5.17570972 -114.10201263]
[14.97457600 -125.45905304]
[29.02828979 -130.70243835]
[43.87149429 -128.53926086]
[55.84415436 -119.50292969]
[61.99406052 -105.82160187]
[60.80516052 -90.86997986]
[63.95835495 -105.53481293]
[67.11154938 -120.19964600]
[70.26473999 -134.86448669]
[73.41793823 -149.52931213]
[76.57112885 -164.19415283]
[79.72432709 -178.85897827]
[82.87751770 -193.52381897]
[78.21408081 -208.64212036]
[88.45393372 -219.45852661]
[91.60712433 -234.12335205]
[94.76032257 -248.78819275]
[97.91351318 -263.45303345]
[101.06671143 -278.11785889]
[104.21990204 -292.78268433]
[99.55646515 -307.90100098]
[109.79631805 -318.71740723]
[79.59716034 -340.37750244]
[73.43168640 -354.05181885]
[67.26620483 -367.72613525]
[61.10073090 -381.40045166]
[54.93525696 -395.07476807]
[48.76977921 -408.74908447]
[29.60995865 -414.90026855]
[21.32983971 -432.90365601]
[28.89135361 -450.88812256]
[22.24713326 -464.33633423]
[15.60291100 -477.78454590]
[8.95868874 -491.23275757]
[2.31446695 -504.68096924]
[-4.32975483 -518.12915039]
[-10.97397709 -531.57739258]
[-25.98896217 -529.62060547]
[-40.82525635 -532.64764404]
[-53.87353134 -540.33020020]
[-63.71840286 -551.83483887]
[-69.29197693 -565.91369629]
[-69.98967743 -581.03955078]
[-65.73581696 -595.57171631]
[-56.99182129 -607.93383789]
[-44.70618057 -616.78491211]
[-30.21154213 -621.16491699]
[-15.08018112 -620.59863281]
[-0.95343190 -615.14764404]
[10.63634109 -605.40307617]
[18.43196487 -592.42205811]
[21.58782959 -577.61267090]
[19.76161194 -562.58123779]
[13.15140343 -548.95831299]
[2.47423196 -538.22161865]
[9.11845398 -524.77337646]
[15.76267529 -511.32519531]
[22.40689659 -497.87698364]
[29.05111885 -484.42877197]
[35.69533920 -470.98056030]
[42.33956146 -457.53234863]
[52.53152847 -456.98825073]
[61.65776443 -452.24111938]
[68.05389404 -444.08166504]
[70.52257538 -433.92932129]
[68.55718994 -423.58563232]
[62.44409561 -414.91455078]
[68.60957336 -401.24023438]
[74.77504730 -387.56591797]
[80.94052124 -373.89160156]
[87.10599518 -360.21728516]
[93.27147675 -346.54296875]
[100.58483124 -344.88021851]
[96.15137482 -359.21005249]
[106.34458160 -370.21453857]
[120.97136688 -366.88928223]
[125.40509033 -352.55950928]
[115.21155548 -341.55468750]
[122.52490997 -339.89193726]
[133.99664307 -349.55627441]
[138.52302551 -357.45016479]
[145.66069031 -359.26586914]
[157.24534607 -368.79452515]
[168.82998657 -378.32321167]
[180.41464233 -387.85189819]
[186.15757751 -402.59399414]
[200.90206909 -404.70333862]
[206.64498901 -419.44543457]
[221.38948059 -421.55477905]
[232.97413635 -431.08346558]
[244.55877686 -440.61215210]
[256.14343262 -450.14083862]
[267.72808838 -459.66952515]
[268.14971924 -470.49533081]
[274.31677246 -479.13491821]
[284.00961304 -482.89251709]
[293.95999146 -480.75878906]
[305.76565552 -490.01223755]
[317.57131958 -499.26568604]
[329.37698364 -508.51916504]
[341.18264771 -517.77258301]
[352.98831177 -527.02606201]
[361.72442627 -541.55590820]
[378.10482788 -537.18347168]
[378.43780518 -520.23278809]
[362.24176025 -515.22039795]
[350.43609619 -505.96694946]
[338.63043213 -496.71350098]
[326.82476807 -487.46005249]
[315.01910400 -478.20657349]
[303.21347046 -468.95312500]
[297.28906250 -450.52639771]
[277.25677490 -448.08486938]
[265.67211914 -438.55618286]
[254.08746338 -429.02749634]
[242.50280762 -419.49880981]
[230.91816711 -409.97012329]
[226.00384521 -395.90960693]
[210.43074036 -393.11868286]
[205.51643372 -379.05816650]
[189.94332886 -376.26724243]
[178.35867310 -366.73855591]
[166.77403259 -357.20989990]
[155.18937683 -347.68121338]
[143.66098022 -338.08453369]
[132.18923950 -328.42019653]
[124.46115112 -315.56420898]
[129.35012817 -301.49484253]
[118.88473511 -289.62948608]
[115.73154449 -274.96466064]
[112.57834625 -260.29983521]
[109.42515564 -245.63499451]
[106.27195740 -230.97016907]
[103.11876678 -216.30532837]
[108.00774384 -202.23596191]
[97.54235077 -190.37062073]
[94.38916016 -175.70579529]
[91.23596954 -161.04095459]
[88.08277130 -146.37611389]
[84.92958069 -131.71128845]
[81.77638245 -117.04645538]
[78.62319183 -102.38161469]
[75.46999359 -87.71678162]
[79.18816376 -55.25033569]
[81.99541473 -40.51536560]
[84.80266571 -25.78039742]
[87.60992432 -11.04542732]
[90.41717529 3.68954206]
[93.22442627 18.42451096]
[96.03167725 33.15948105]
[98.83892822 47.89445114]
[101.64617920 62.62942123]
[104.45343781 77.36438751]
[107.26068878 92.09935760]
[112.85796356 106.01591492]
[126.86744690 113.36743927]
[127.31893158 128.25520325]
[135.49591064 140.83044434]
[143.67289734 153.40570068]
[151.84988403 165.98095703]
[160.02687073 178.55619812]
[168.20385742 191.13145447]
[176.38084412 203.70669556]
[184.55783081 216.28195190]
[192.73480225 228.85719299]
[200.91178894 241.43244934]
[209.08877563 254.00770569]
[217.26576233 266.58294678]
[224.54168701 272.04760742]
[225.46395874 279.35461426]
[233.49243164 292.02520752]
[241.52088928 304.69580078]
[256.79745483 309.59542847]
[262.35659790 324.64453125]
[253.93385315 338.29870605]
[237.99040222 340.08364868]
[226.75671387 328.63012695]
[228.85029602 312.72424316]
[220.82183838 300.05364990]
[212.79338074 287.38308716]
[204.69052124 274.75994873]
[196.51353455 262.18469238]
[188.33654785 249.60943604]
[180.15956116 237.03417969]
[171.98257446 224.45893860]
[163.80558777 211.88368225]
[155.62860107 199.30844116]
[147.45161438 186.73318481]
[139.27462769 174.15792847]
[131.09764099 161.58268738]
[122.92066193 149.00743103]
[114.74367523 136.43218994]
[101.31906128 129.98013306]
[100.28270721 114.19290161]
[92.83456421 115.07333374]
[94.59543610 129.96961975]
[96.35607910 144.86593628]
[81.45973969 146.62634277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[11 18]
[29 222]
[30 221]
[31 220]
[32 219]
[33 218]
[34 217]
[35 216]
[36 215]
[37 214]
[38 213]
[39 212]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[46 58]
[47 57]
[48 56]
[49 55]
[74 211]
[75 210]
[76 209]
[77 208]
[78 207]
[79 206]
[80 205]
[81 204]
[83 202]
[84 201]
[85 200]
[86 199]
[87 198]
[88 197]
[90 195]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[147 194]
[148 193]
[150 192]
[151 191]
[152 190]
[153 189]
[155 187]
[157 185]
[158 184]
[159 183]
[160 182]
[161 181]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
[170 174]
[223 262]
[225 260]
[226 259]
[227 258]
[228 257]
[229 256]
[230 255]
[231 254]
[232 253]
[233 252]
[234 251]
[235 250]
[236 249]
[238 248]
[239 247]
[240 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
