%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACCGGCGCCGCGGCGGAGCCGCUCCCGAGGCCCCGGCGCGGCGCGAGGGCGCGGGGCGCGGCGUCCACAGGCGCCGAGGCUGCCCCCGCCGCCCCGCCCGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[92.81021118 147.27632141]
[91.51483917 132.33235168]
[90.21946716 117.38838959]
[91.51542664 111.62403870]
[93.98828888 106.47028351]
[82.69932556 117.20326996]
[67.49185181 116.77040100]
[57.32915497 105.94195557]
[42.33071136 105.72579956]
[27.33226967 105.50964355]
[12.33382702 105.29347992]
[-2.66461539 105.07732391]
[-17.66305733 104.86116791]
[-32.66149902 104.64501190]
[-47.65994263 104.42885590]
[-61.57017899 111.96648407]
[-74.18463135 104.04657745]
[-89.18307495 103.83042145]
[-104.18151855 103.61426544]
[-118.09175110 111.15189362]
[-130.70620728 103.23199463]
[-145.70465088 103.01583862]
[-160.70309448 102.79968262]
[-169.89561462 115.30076599]
[-184.69065857 119.97904205]
[-199.39923096 115.03561401]
[-208.36558533 102.37133026]
[-208.14198303 86.85586548]
[-198.81439209 74.45523834]
[-183.96946716 69.93773651]
[-169.31538391 75.04042816]
[-160.48693848 87.80123901]
[-145.48849487 88.01739502]
[-130.49005127 88.23355103]
[-117.65260315 80.68045807]
[-103.96536255 88.61582184]
[-88.96691895 88.83197784]
[-73.96847534 89.04814148]
[-61.13102722 81.49504852]
[-47.44378662 89.43041229]
[-32.44534302 89.64656830]
[-17.44690132 89.86272430]
[-2.44845819 90.07888031]
[12.54998398 90.29504395]
[27.54842758 90.51119995]
[42.54686737 90.72735596]
[57.54531097 90.94351196]
[68.01583862 80.41242981]
[83.22946930 80.41798401]
[94.20444489 91.47183990]
[109.04895782 89.31767273]
[123.36729431 84.84719086]
[130.76022339 79.22049713]
[138.16305542 80.46061707]
[152.60426331 76.40461731]
[167.04548645 72.34861755]
[181.48670959 68.29261780]
[195.92793274 64.23661804]
[210.36915588 60.18061447]
[224.81037903 56.12461472]
[219.76620483 37.16755295]
[234.11337280 14.95620441]
[246.06828308 5.89640331]
[258.02319336 -3.16339803]
[269.97811890 -12.22319889]
[281.93301392 -21.28299904]
[293.88793945 -30.34280014]
[305.84286499 -39.40260315]
[311.70727539 -54.71731567]
[327.94277954 -57.02836227]
[337.84765625 -43.95833588]
[331.23260498 -28.95255661]
[314.90264893 -27.44768715]
[302.94775391 -18.38788605]
[290.99282837 -9.32808399]
[279.03790283 -0.26828343]
[267.08300781 8.79151726]
[255.12808228 17.85131836]
[243.17317200 26.91111946]
[244.46369934 34.29925537]
[248.33529663 56.46365738]
[262.65362549 60.93413925]
[276.97198486 65.40462494]
[290.03845215 56.81387329]
[305.56390381 58.68328857]
[316.21765137 70.13018799]
[316.96936035 85.74969482]
[307.46405029 98.16675568]
[292.18988037 101.51840973]
[278.35882568 94.22211456]
[272.50149536 79.72296143]
[258.18316650 75.25247955]
[243.86482239 70.78199005]
[228.86637878 70.56583405]
[214.42515564 74.62183380]
[199.98393250 78.67784119]
[185.54270935 82.73384094]
[171.10148621 86.78984070]
[156.66026306 90.84584045]
[142.21905518 94.90184021]
[127.83777618 99.16552734]
[113.51943970 103.63600922]
[105.16342926 116.09301758]
[106.45880127 131.03698730]
[107.75417328 145.98094177]
[117.58794403 159.10455322]
[110.89155579 174.07420349]
[94.55367279 175.49040222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[5 50]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[17 38]
[18 37]
[19 36]
[21 34]
[22 33]
[23 32]
[51 102]
[52 101]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[81 93]
[82 92]
[83 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
