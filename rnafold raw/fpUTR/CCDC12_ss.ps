%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCCCAGGCUGCCCACUGUCUGCUCAGGCUUCCAAAGCUACAACCUGCCAGCCUAUGCUCCAUACCUGCCCUGCGAGGACCUCCCAGUCUCUCAUUCUCGUCCUUGGAUUGGCCGCGAGACAUUUAUCCACUCUCCUUAGGCCUGCGCG\
) } def
/len { sequence length } bind def

/coor [
[107.50536346 193.12979126]
[119.14062500 182.86332703]
[117.59325409 167.94335938]
[116.04588318 153.02337646]
[114.49851227 138.10340881]
[95.14360046 138.41474915]
[78.83869934 129.95109558]
[69.07313538 115.56848907]
[54.53213120 119.25077057]
[39.99112701 122.93305206]
[25.45012474 126.61533356]
[10.90912056 130.29762268]
[-3.63188386 133.97990417]
[-18.13405800 137.81225586]
[-22.09017754 152.58711243]
[-32.83955002 163.32711792]
[-47.42453003 167.21875000]
[-61.90230179 163.31361389]
[-72.41072845 152.75717163]
[-86.87252808 156.73918152]
[-101.33432770 160.72120667]
[-108.40282440 171.55932617]
[-120.57757568 174.55438232]
[-131.16610718 168.62414551]
[-145.70710754 172.30642700]
[-160.24810791 175.98870850]
[-168.36610413 189.28291321]
[-183.16520691 192.81011963]
[-195.78916931 184.98892212]
[-210.33018494 188.67120361]
[-224.20034790 198.42080688]
[-237.40856934 187.79164124]
[-230.85121155 172.15716553]
[-214.01246643 174.13020325]
[-199.47145081 170.44792175]
[-192.09149170 157.56103516]
[-177.39730835 153.61953735]
[-163.93038940 161.44770813]
[-149.38938904 157.76542664]
[-134.84838867 154.08314514]
[-122.98736572 141.18591309]
[-105.31633759 146.25939941]
[-90.85454559 142.27738953]
[-76.39274597 138.29537964]
[-72.76911926 123.84771729]
[-62.33091354 113.08203888]
[-47.80956268 108.95933533]
[-33.07761765 112.68313599]
[-22.11607170 123.35045624]
[-16.46646118 118.51199341]
[-7.31416607 119.43889618]
[7.22683764 115.75661469]
[21.76784134 112.07433319]
[36.30884552 108.39205170]
[50.84984970 104.70976257]
[65.39085388 101.02748108]
[65.31796265 88.13996887]
[70.13310242 75.41616058]
[79.66679382 64.72837830]
[74.50413513 50.64480591]
[59.31477737 50.05158997]
[45.51074600 43.68627930]
[35.19705963 32.51953125]
[29.94647217 18.25419617]
[30.55966568 3.06563354]
[36.94313049 -10.73001099]
[48.12343597 -21.02900124]
[62.39566803 -26.26081848]
[77.58341217 -25.62764549]
[91.37064362 -19.22603607]
[101.65492249 -8.03219318]
[106.86795807 6.24690628]
[106.21480560 21.43380356]
[99.79506683 35.21260452]
[88.58770752 45.48214722]
[93.75035858 59.56571579]
[108.74315643 60.03068161]
[114.76858521 46.29407883]
[120.79401398 32.55747986]
[126.67716980 18.75934792]
[132.41741943 4.90115452]
[138.15766907 -8.95703888]
[131.87884521 -23.46054840]
[137.77217102 -38.12493515]
[152.34124756 -44.25007629]
[166.94250488 -38.20203781]
[172.91328430 -23.56901169]
[166.71119690 -9.03251171]
[152.01586914 -3.21678710]
[146.27561951 10.64140606]
[140.53536987 24.49959946]
[140.88352966 31.92978096]
[134.53062439 38.58291245]
[128.50518799 52.31951141]
[122.47975159 66.05611420]
[133.01731873 76.14839172]
[139.32373047 89.31342316]
[140.58512878 103.86309052]
[155.38055420 101.39417267]
[170.17596436 98.92524719]
[184.97138977 96.45632935]
[199.76681519 93.98741150]
[214.56222534 91.51849365]
[229.30346680 88.74432373]
[243.98422241 85.66609955]
[251.20362854 71.79475403]
[265.67004395 65.85703278]
[280.55288696 70.65653229]
[288.82492065 83.92708588]
[286.58032227 99.40274048]
[274.87896729 109.77636719]
[259.24584961 110.14984894]
[247.06245422 100.34684753]
[232.38169861 103.42507935]
[229.03753662 106.91490936]
[223.44403076 108.30130768]
[217.03114319 106.31391144]
[202.23573303 108.78282928]
[187.44030762 111.25175476]
[172.64489746 113.72067261]
[157.84947205 116.18959045]
[143.05404663 118.65850830]
[157.22192383 123.58512878]
[171.38978577 128.51174927]
[185.55764771 133.43836975]
[200.48277283 131.94148254]
[214.98918152 135.75775146]
[227.24554443 144.40539551]
[235.70454407 156.79269409]
[239.29829407 171.35583496]
[237.57308960 186.25628662]
[230.74674988 199.61297607]
[219.68104553 209.73966980]
[205.77294922 215.35795593]
[190.77830505 215.75854492]
[176.59007263 210.89086914]
[164.99946594 201.36943054]
[157.46971130 188.39627075]
[154.95137024 173.61102295]
[146.44041443 161.25935364]
[137.92945862 148.90769958]
[129.41848755 136.55603027]
[130.96586609 151.47601318]
[132.51322937 166.39598083]
[134.06060791 181.31596375]
[147.55506897 188.97618103]
[153.93908691 203.11917114]
[150.75785828 218.30664062]
[139.23464966 228.69871521]
[123.80036163 230.29942322]
[110.38979340 222.49327087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 145]
[3 144]
[4 143]
[5 142]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[14 49]
[19 44]
[20 43]
[21 42]
[24 40]
[25 39]
[26 38]
[29 35]
[30 34]
[59 76]
[60 75]
[77 95]
[78 94]
[79 93]
[80 91]
[81 90]
[82 89]
[98 122]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 114]
[105 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
