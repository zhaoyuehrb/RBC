%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGACGGCCCCACAACCCUGCGCGUCGCCUCAGAGGGGGCGCGCUUGACUGACAGGCGGCGGCGGCGCAGUUGCGAGUGCAGGCUCCUUGCCAGAGGCCUCCACUCACUCCAGACCCCUAUAGCCCGUCGCUGUCAGCUGUCAACAAAGGAUGCGAAUGCUGGCCGCUUCCUGUGGGCUUCGUGUCACCCAGAGGUGAGCCCAGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[70.76403809 228.15217590]
[55.42031860 227.46958923]
[42.48220062 219.19308472]
[35.42996979 205.54898071]
[36.16063690 190.20747375]
[44.47766113 177.29536438]
[58.14380646 170.28593445]
[58.81043243 155.30075073]
[59.47706223 140.31556702]
[60.14368820 125.33039093]
[53.60268784 121.66088104]
[46.26367188 134.74288940]
[38.92465973 147.82489014]
[31.58564568 160.90690613]
[24.24642944 173.98880005]
[11.16464996 166.64938354]
[18.50363922 153.56788635]
[25.84265327 140.48588562]
[33.18166733 127.40387726]
[40.52067947 114.32186890]
[33.97967529 110.65236664]
[21.53859138 119.03206635]
[9.09750652 127.41176605]
[-3.34357858 135.79147339]
[-15.78466415 144.17117310]
[-28.22574997 152.55087280]
[-40.66683578 160.93057251]
[-47.79035950 175.05735779]
[-62.66884613 175.75004578]
[-75.10993195 184.12974548]
[-87.55101776 192.50944519]
[-97.31031799 206.37280273]
[-113.33351898 200.83265686]
[-112.44555664 183.90197754]
[-95.93071747 180.06835938]
[-83.48963165 171.68865967]
[-71.04854584 163.30895996]
[-64.81489563 149.78155518]
[-49.04653549 148.48948669]
[-36.60544968 140.10978699]
[-24.16436577 131.73008728]
[-11.72327995 123.35037994]
[0.71780515 114.97068024]
[13.15889072 106.59098053]
[25.59997559 98.21128082]
[25.57238388 83.21130371]
[31.58688927 69.46991730]
[42.62527847 59.31344223]
[56.81882477 54.46130371]
[71.76465607 55.73493195]
[84.93254089 62.91871643]
[94.09324646 74.79648590]
[97.69585419 89.35508728]
[101.21913910 74.77474976]
[104.74243164 60.19440079]
[108.26572418 45.61405945]
[111.78901672 31.03371429]
[107.50965118 15.80224800]
[118.01994324 5.24843168]
[121.54322815 -9.33191204]
[125.06652069 -23.91225624]
[128.58981323 -38.49259949]
[132.11309814 -53.07294464]
[135.63639832 -67.65328979]
[131.35702515 -82.88475800]
[141.86732483 -93.43856812]
[140.84118652 -102.51438904]
[145.55235291 -108.20807648]
[149.29132080 -122.73461151]
[153.03027344 -137.26113892]
[148.97708130 -152.55435181]
[159.64260864 -162.95126343]
[163.38157654 -177.47779846]
[167.12052917 -192.00433350]
[170.85948181 -206.53086853]
[169.52755737 -221.47161865]
[163.27795410 -235.10768127]
[157.02835083 -248.74375916]
[150.77874756 -262.37982178]
[144.52914429 -276.01589966]
[131.74568176 -285.33758545]
[133.47674561 -300.13125610]
[127.22714996 -313.76733398]
[120.97754669 -327.40341187]
[114.72795105 -341.03945923]
[108.47834778 -354.67553711]
[95.69488525 -363.99722290]
[97.42594910 -378.79089355]
[91.17635345 -392.42697144]
[77.49921417 -401.47503662]
[78.76645660 -417.82516479]
[93.67445374 -424.65771484]
[106.88713074 -414.94393921]
[104.81242371 -398.67657471]
[111.06202698 -385.04049683]
[123.39847565 -376.69415283]
[122.11441803 -360.92514038]
[128.36401367 -347.28906250]
[134.61361694 -333.65298462]
[140.86322021 -320.01693726]
[147.11282349 -306.38085938]
[159.44927979 -298.03451538]
[158.16522217 -282.26550293]
[164.41482544 -268.62942505]
[170.66442871 -254.99336243]
[176.91401672 -241.35728455]
[183.16362000 -227.72122192]
[190.61097717 -226.83416748]
[184.69995117 -240.62037659]
[193.68357849 -252.63264465]
[208.57832336 -250.85882568]
[214.48960876 -237.07272339]
[205.50569153 -225.06007385]
[212.95306396 -224.17301941]
[222.23072815 -235.95965576]
[231.50840759 -247.74627686]
[229.83370972 -263.23281860]
[239.41050720 -275.05398560]
[254.18487549 -276.55511475]
[263.46255493 -288.34176636]
[272.65264893 -300.19680786]
[281.75463867 -312.11962891]
[290.85665894 -324.04241943]
[299.95864868 -335.96524048]
[309.06066895 -347.88806152]
[308.36102295 -363.91586304]
[320.55001831 -374.34695435]
[336.27728271 -371.17953491]
[343.47821045 -356.84335327]
[336.62887573 -342.33590698]
[320.98345947 -338.78607178]
[311.88146973 -326.86325073]
[302.77947998 -314.94042969]
[293.67745972 -303.01760864]
[284.57546997 -291.09478760]
[283.01541138 -283.87124634]
[275.24917603 -279.06408691]
[265.97149658 -267.27743530]
[267.98266602 -252.56381226]
[258.74169922 -240.47833252]
[243.29504395 -238.46859741]
[234.01736450 -226.68197632]
[224.73968506 -214.89533997]
[238.53242493 -220.79112244]
[249.59501648 -210.66102600]
[255.08645630 -196.70236206]
[253.89149475 -181.75003052]
[246.25282288 -168.84071350]
[233.72175598 -160.59617615]
[218.84326172 -158.69078064]
[204.63902283 -163.51153564]
[193.99378967 -174.07936096]
[189.06916809 -188.25112915]
[185.38601685 -202.79190063]
[181.64706421 -188.26538086]
[177.90809631 -173.73884583]
[174.16914368 -159.21231079]
[178.48977661 -144.95812988]
[167.55680847 -133.52218628]
[163.81784058 -118.99565125]
[160.07888794 -104.46911621]
[156.44766235 -89.91528320]
[160.97903442 -75.72669983]
[150.21673584 -64.12999725]
[146.69345093 -49.54965210]
[143.17015076 -34.96931076]
[139.64686584 -20.38896561]
[136.12358093 -5.80862141]
[132.60028076 8.77172184]
[137.13165283 22.96030617]
[126.36935425 34.55700684]
[122.84606934 49.13734818]
[119.32277679 63.71769333]
[115.79948425 78.29803467]
[112.27619171 92.87837982]
[115.47454834 107.53343201]
[124.75222778 119.32006073]
[134.02990723 131.10668945]
[143.30758667 142.89332581]
[146.14755249 128.16462708]
[158.49304199 119.64470673]
[173.27124023 122.21468353]
[182.01564026 134.40220642]
[179.71650696 149.22496033]
[167.69104004 158.19090271]
[152.82952881 156.16387939]
[161.02395630 168.72776794]
[169.21838379 181.29167175]
[177.41281128 193.85556030]
[185.60723877 206.41944885]
[200.47039795 213.34898376]
[201.63107300 229.70701599]
[187.89526367 238.66578674]
[173.39318848 231.00929260]
[173.04335022 214.61387634]
[164.84892273 202.04998779]
[156.65449524 189.48609924]
[148.46006775 176.92219543]
[140.26564026 164.35830688]
[131.52095032 152.17100525]
[122.24327087 140.38436890]
[112.96559143 128.59774780]
[103.68791199 116.81111145]
[96.54815674 119.10758972]
[75.12886810 125.99701691]
[74.46224213 140.98219299]
[73.79561615 155.96737671]
[73.12898254 170.95256042]
[86.11873627 179.14779663]
[93.25636292 192.74742126]
[92.62188721 208.09320068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[29 37]
[30 36]
[31 35]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[66 162]
[68 161]
[69 160]
[70 159]
[72 157]
[73 156]
[74 155]
[75 154]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[88 95]
[89 94]
[114 143]
[115 142]
[116 141]
[119 138]
[120 137]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[176 203]
[177 202]
[178 201]
[179 200]
[186 199]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
