%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUUUGGCACCUGUGCGCUGGACUCGAGCGCUCCGAUUGGAGUUAGGGCCUGCUUGUCUGCGUGCUGCGAAGUCCGCGGCUGCCCCCGGGGCCCUAGUCGUUGGGUUCCAGGGUCCUUCACGUUCCAUUCCCAGGCUGGUCUGAGCUCCGGGGCCGUGGUCCCGCUGCCUCCUCCGGUCGUCGUGCGGAAGCUGCGACGCAGGCAGACC\
) } def
/len { sequence length } bind def

/coor [
[79.76806641 641.96606445]
[65.07441711 645.56494141]
[49.98796463 644.44512939]
[35.98672104 638.71618652]
[24.44238663 628.93951416]
[16.48595619 616.07287598]
[12.89692211 601.37683105]
[14.02689934 586.29113770]
[19.76518440 572.29370117]
[29.54960060 560.75592041]
[42.42156601 552.80810547]
[57.12002182 549.22894287]
[58.23041916 534.27008057]
[59.34081650 519.31127930]
[60.45121002 504.35241699]
[61.56160736 489.39355469]
[62.67200089 474.43472290]
[63.67153168 459.46804810]
[64.56014252 444.49441528]
[65.44875336 429.52075195]
[62.70725250 422.65798950]
[66.46309662 414.33230591]
[67.57348633 399.37344360]
[57.68570328 388.29342651]
[58.59870911 373.10720825]
[70.28751373 362.81109619]
[71.39791107 347.85226440]
[63.74139404 338.48782349]
[64.54357147 326.01675415]
[73.91869354 317.15914917]
[75.25062561 302.21838379]
[76.58256531 287.27764893]
[77.91450500 272.33691406]
[68.19199371 261.11157227]
[69.32993317 245.94053650]
[81.17002106 235.81878662]
[82.50196075 220.87803650]
[83.83390045 205.93728638]
[85.16584015 190.99655151]
[86.49777985 176.05580139]
[87.82971954 161.11505127]
[89.16165161 146.17430115]
[90.49359131 131.23355103]
[91.82553101 116.29280853]
[85.58131409 109.67973328]
[83.54395294 101.26433563]
[85.83316040 93.36743164]
[91.43138123 87.95652771]
[87.05052948 73.61051178]
[82.66967773 59.26449585]
[78.28882599 44.91847992]
[73.90797424 30.57246590]
[62.47757721 19.63369751]
[66.16045380 5.20159149]
[61.77960205 -9.14442348]
[57.39875031 -23.49043846]
[53.01789856 -37.83645248]
[48.63704681 -52.18246841]
[42.94612122 -50.04320145]
[36.17809677 -49.70178223]
[28.90617180 -51.52882004]
[21.81208420 -55.71520233]
[9.49653816 -64.27833557]
[-2.81900787 -72.84147644]
[-11.65061569 -75.17089081]
[-15.25232410 -81.62387085]
[-27.43962669 -90.36856079]
[-39.62693024 -99.11325836]
[-51.81423187 -107.85794830]
[-64.00153351 -116.60263824]
[-76.18884277 -125.34732819]
[-92.18885803 -124.17304993]
[-102.97658539 -136.04759216]
[-100.27658844 -151.86181641]
[-86.16008759 -159.48440552]
[-71.45604706 -153.06796265]
[-67.44414520 -137.53463745]
[-55.25684357 -128.78994751]
[-43.06954193 -120.04524994]
[-30.88223839 -111.30056000]
[-18.69493484 -102.55587006]
[-6.50763178 -93.81117249]
[5.74412918 -85.15702057]
[18.05967522 -76.59388733]
[30.37522125 -68.03074646]
[43.05916214 -76.03810120]
[40.62487030 -90.83925629]
[38.19057465 -105.64041138]
[28.31626511 -118.00198364]
[33.88553619 -131.81619263]
[31.45124245 -146.61735535]
[29.01694870 -161.41851807]
[26.58265495 -176.21966553]
[24.14836121 -191.02082825]
[21.71406746 -205.82197571]
[19.27977371 -220.62313843]
[5.35254288 -227.46505737]
[-1.86345768 -241.20219421]
[0.40647238 -256.55233765]
[11.28949833 -267.61303711]
[26.60087585 -270.13125610]
[40.45306396 -263.13867188]
[47.51961899 -249.32405090]
[45.08330536 -233.99943542]
[34.08092880 -223.05743408]
[36.51522446 -208.25627136]
[38.94951630 -193.45512390]
[41.38381195 -178.65396118]
[43.81810379 -163.85279846]
[46.25239944 -149.05165100]
[48.68669128 -134.25048828]
[58.38688660 -122.94759369]
[52.99172974 -108.07470703]
[55.42602539 -93.27354431]
[57.86031723 -78.47238922]
[60.16768265 -93.29386139]
[66.83794403 -106.72917938]
[77.24983978 -117.52697754]
[90.43360901 -124.68156433]
[105.16133881 -127.52657318]
[120.06129456 -125.79701233]
[133.74569702 -119.65398407]
[144.94001770 -109.66963196]
[152.60162354 -96.77389526]
[156.01689148 -82.16787720]
[154.86775208 -67.21195984]
[149.26124573 -53.29912186]
[139.71952820 -41.72520447]
[127.13130951 -33.56818008]
[112.66906738 -29.58779335]
[97.67978668 -30.15477180]
[83.55955505 -35.21630859]
[71.62352753 -44.30097198]
[62.98306274 -56.56332016]
[67.36391449 -42.21730423]
[71.74476624 -27.87129021]
[76.12561798 -13.52527428]
[80.50646973 0.82074010]
[91.62351990 10.73338413]
[88.25399017 26.19161415]
[92.63484192 40.53762817]
[97.01569366 54.88364410]
[101.39654541 69.22966003]
[105.77739716 83.57567596]
[117.83377838 92.50000000]
[132.83378601 92.50000000]
[147.83378601 92.50000000]
[162.83337402 92.38886261]
[173.80383301 81.33052826]
[189.01745605 81.31877136]
[199.49227905 91.84558105]
[214.49063110 91.62330627]
[229.48898315 91.40103149]
[244.48733521 91.17875671]
[259.48568726 90.95648193]
[274.48403931 90.73420715]
[288.27795410 81.86512756]
[302.72982788 89.61595154]
[302.97280884 106.01330566]
[288.75698853 114.18898010]
[274.70632935 105.73255920]
[259.70797729 105.95483398]
[244.70960999 106.17710876]
[229.71125793 106.39938354]
[214.71290588 106.62165833]
[199.71455383 106.84393311]
[189.55627441 117.67652130]
[174.34898376 118.11559296]
[163.05563354 107.38721466]
[156.41465759 110.62921906]
[147.83378601 107.50000000]
[132.83378601 107.50000000]
[117.83377838 107.50000000]
[106.76628113 117.62474823]
[105.43434143 132.56549072]
[104.10240173 147.50624084]
[102.77046204 162.44699097]
[101.43852234 177.38774109]
[100.10659027 192.32847595]
[98.77465057 207.26922607]
[97.44271088 222.20997620]
[96.11077118 237.15072632]
[105.97371674 249.20726013]
[104.41010284 264.34033203]
[92.85525513 273.66885376]
[91.52331543 288.60958862]
[90.19137573 303.55032349]
[88.85943604 318.49108887]
[96.99948120 335.00878906]
[86.35675049 348.96264648]
[85.24636078 363.92150879]
[95.28687286 375.83056641]
[93.94767761 390.98513794]
[82.53233337 400.48385620]
[81.42193604 415.44268799]
[80.42240906 430.40936279]
[79.53379822 445.38302612]
[78.64518738 460.35665894]
[81.26057434 469.10784912]
[77.63084412 475.54510498]
[76.52045441 490.50396729]
[75.41005707 505.46279907]
[74.29965973 520.42163086]
[73.18926239 535.38049316]
[72.07886505 550.33935547]
[86.08777618 556.04949951]
[97.64520264 565.81066895]
[105.61886597 578.66662598]
[109.22759247 593.35784912]
[108.11783600 608.44506836]
[102.39831543 622.45013428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 198]
[19 197]
[20 196]
[22 195]
[23 194]
[26 191]
[27 190]
[30 188]
[31 187]
[32 186]
[33 185]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[62 85]
[63 84]
[64 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[86 115]
[87 114]
[88 113]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[145 173]
[146 172]
[147 171]
[148 169]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
