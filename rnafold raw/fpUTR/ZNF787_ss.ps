%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACAGGGUGGCGGCCCGGGGGGCAGGGAGUAGGGAGAAGGGGGGGAGCGGCGCGGGCGGAAGCGGCCGGGAAGGUCACUUCCGGCCUGGGCGCCCGUCCCCCUGACCCCAGGGUCUGAGUCGCCGCUGCCGCCGCUGCCACCAUCCGCGAGGCAGGAGAGAGGAGGAGGAGUGCGGCGCGGCGGCCCCGGGACCAAGGAGGGACCCAGAC\
) } def
/len { sequence length } bind def

/coor [
[99.77395630 390.17407227]
[85.02925110 386.06893921]
[73.88916779 375.57336426]
[68.91362000 361.09915161]
[71.24594116 345.97241211]
[80.35019684 333.66909790]
[94.13428497 327.01647949]
[94.57669830 312.02301025]
[95.01911163 297.02951050]
[95.46152496 282.03604126]
[82.12541962 269.49395752]
[82.19477844 250.86734009]
[96.09247589 237.99047852]
[95.76064301 222.99415588]
[95.09714508 208.00883484]
[94.32315063 193.02882385]
[93.43870544 178.05491638]
[92.55426788 163.08100891]
[91.66982269 148.10711670]
[90.78538513 133.13320923]
[89.90093994 118.15930939]
[86.60741425 107.85942078]
[89.72181702 99.98080444]
[77.19625854 91.72790527]
[64.67070007 83.47500610]
[49.38001251 86.44699097]
[36.79487991 77.89894104]
[34.05577469 63.30329895]
[21.53021812 55.05039597]
[9.00465870 46.79749680]
[-6.77601147 45.66566849]
[-13.14674568 32.20227051]
[-31.54980278 31.54272461]
[-38.79355621 15.55780315]
[-51.43947601 7.49053621]
[-64.08538818 -0.57673097]
[-73.00180054 -2.55331421]
[-76.85710144 -8.85739422]
[-92.14778900 -5.88540840]
[-104.73291779 -14.43345451]
[-107.47202301 -29.02910233]
[-119.99758148 -37.28200150]
[-132.52314758 -45.53490448]
[-145.04870605 -53.78780365]
[-157.57426453 -62.04070663]
[-170.09982300 -70.29360962]
[-182.62538147 -78.54650879]
[-198.40605164 -79.67833710]
[-204.77677917 -93.14173126]
[-213.66307068 -95.24960327]
[-217.42497253 -101.60986328]
[-229.82745361 -110.04660034]
[-242.22993469 -118.48333740]
[-254.63240051 -126.92008209]
[-267.03488159 -135.35681152]
[-279.62097168 -143.51712036]
[-292.38449097 -151.39700317]
[-308.19168091 -152.06289673]
[-314.95672607 -165.33253479]
[-327.72024536 -173.21241760]
[-340.48376465 -181.09230042]
[-353.24728394 -188.97216797]
[-366.01083374 -196.85205078]
[-378.77435303 -204.73193359]
[-394.58154297 -205.39782715]
[-401.34658813 -218.66746521]
[-414.11010742 -226.54734802]
[-426.87362671 -234.42723083]
[-439.63714600 -242.30709839]
[-455.51748657 -240.02783203]
[-467.10147095 -251.12693787]
[-465.50292969 -267.09014893]
[-451.94805908 -275.67184448]
[-436.83505249 -270.28890991]
[-431.75726318 -255.07063293]
[-418.99374390 -247.19075012]
[-406.23022461 -239.31086731]
[-393.46670532 -231.43098450]
[-378.57244873 -231.32872009]
[-370.89447021 -217.49545288]
[-358.13095093 -209.61557007]
[-345.36743164 -201.73570251]
[-332.60388184 -193.85581970]
[-319.84036255 -185.97593689]
[-307.07684326 -178.09605408]
[-292.18258667 -177.99378967]
[-284.50460815 -164.16052246]
[-271.74108887 -156.28063965]
[-268.24551392 -156.73139954]
[-264.35794067 -155.51239014]
[-260.86514282 -152.45780945]
[-258.59814453 -147.75929260]
[-246.19566345 -139.32255554]
[-233.79319763 -130.88581848]
[-221.39071655 -122.44907379]
[-208.98823547 -114.01233673]
[-196.52388000 -105.66728973]
[-181.63912964 -105.12576294]
[-174.37248230 -91.07206726]
[-161.84692383 -82.81916809]
[-149.32136536 -74.56626129]
[-136.79580688 -66.31336212]
[-124.27024078 -58.06046295]
[-111.74468231 -49.80755997]
[-99.21912384 -41.55466080]
[-84.72692871 -44.79686737]
[-71.90666962 -36.60568237]
[-68.60420227 -21.38295364]
[-56.01812363 -13.22264767]
[-43.37220764 -5.15538025]
[-30.72629166 2.91188717]
[-18.85214996 0.60794127]
[-8.25095081 7.22412729]
[-4.89384508 19.67671204]
[9.99091244 20.21823883]
[17.25755882 34.27193832]
[29.78311729 42.52483749]
[42.30867767 50.77774048]
[56.80087280 47.53553391]
[69.62113190 55.72671509]
[72.92359924 70.94944763]
[85.44915771 79.20234680]
[97.97471619 87.45524597]
[112.58444214 90.85466003]
[127.46671295 88.97904968]
[142.34898376 87.10343933]
[157.23126221 85.22783661]
[172.11354065 83.35222626]
[186.99580383 81.47661591]
[201.87808228 79.60100555]
[216.76036072 77.72539520]
[224.88188171 73.54807281]
[231.87576294 75.93354797]
[246.78407288 74.27764130]
[261.69238281 72.62172699]
[276.60070801 70.96582031]
[291.50903320 69.30990601]
[302.18640137 55.45211792]
[319.24682617 53.64053345]
[332.08053589 64.51056671]
[346.96279907 62.63495636]
[359.68719482 53.23279953]
[373.28204346 59.31795120]
[388.16433716 57.44234085]
[396.28585815 53.26501083]
[403.27972412 55.65048981]
[418.18804932 53.99457932]
[433.09637451 52.33867264]
[445.95803833 43.12520599]
[459.46166992 49.41020203]
[464.97546387 35.13236618]
[476.50057983 25.06109047]
[491.38861084 21.51067924]
[506.21838379 25.29699516]
[517.58215332 35.54996490]
[522.86859131 49.91353607]
[520.86291504 65.08705902]
[512.02600098 77.58377838]
[498.38854980 84.53202820]
[483.08432007 84.33515930]
[469.63009644 77.03841400]
[461.11758423 64.31851959]
[449.32226562 73.41354370]
[434.75228882 67.24698639]
[419.84396362 68.90290070]
[404.93563843 70.55880737]
[390.03994751 72.32461548]
[375.15765381 74.20022583]
[363.49777222 83.46822357]
[348.83840942 77.51723480]
[333.95614624 79.39283752]
[327.55819702 90.57643890]
[315.71041870 96.11618042]
[302.64285278 93.78687286]
[293.16494751 84.21822357]
[278.25662231 85.87413788]
[263.34829712 87.53004456]
[248.43998718 89.18595886]
[233.53167725 90.84186554]
[218.63597107 92.60767365]
[203.75369263 94.48328400]
[188.87141418 96.35888672]
[173.98915100 98.23449707]
[159.10687256 100.11010742]
[144.22459412 101.98571777]
[129.34231567 103.86132812]
[114.46004486 105.73693085]
[104.87483978 117.27486420]
[105.75928497 132.24876404]
[106.64373016 147.22267151]
[107.52816772 162.19657898]
[108.41261292 177.17047119]
[109.29705048 192.14437866]
[112.92654419 200.52507019]
[110.08245850 207.34533691]
[110.74596405 222.33065796]
[113.55302429 226.72790527]
[114.31730652 231.30458069]
[113.31233215 235.25288391]
[111.09247589 237.99047852]
[120.97298431 244.59872437]
[126.38199615 255.04864502]
[126.07879639 266.69168091]
[120.25431824 276.63900757]
[110.45500183 282.47845459]
[110.01258850 297.47192383]
[109.57017517 312.46542358]
[109.12776184 327.45889282]
[122.49561310 334.91268921]
[130.85858154 347.73138428]
[132.29493713 362.96936035]
[126.47460938 377.12500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[13 200]
[14 196]
[15 195]
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[23 123]
[24 122]
[25 121]
[28 118]
[29 117]
[30 116]
[32 114]
[34 111]
[35 110]
[36 109]
[38 108]
[41 105]
[42 104]
[43 103]
[44 102]
[45 101]
[46 100]
[47 99]
[49 97]
[51 96]
[52 95]
[53 94]
[54 93]
[55 92]
[56 88]
[57 87]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[124 187]
[125 186]
[126 185]
[127 184]
[128 183]
[129 182]
[130 181]
[131 180]
[133 179]
[134 178]
[135 177]
[136 176]
[137 175]
[140 171]
[141 170]
[143 168]
[144 167]
[146 166]
[147 165]
[148 164]
[150 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
