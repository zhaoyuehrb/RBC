%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGGUGACACUCGGGCUUGGGACAGGGCGUGCUGCCGCGGGUCACGUGCUGCGGAGGCUUGGGGAGGGGCGGCGAGGCGGGGUUUAUAGCCCGGGCGCCCGCGGGCCCCACGCUUUGACCGGGUCGUGGCAGCCGGAGUCGUCUUCGGGACGCGCCUGCUCUUCGCCUUUCGCUGCAGUCCGUCGAUUUCUUUCUCCAGGAAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[260.03277588 581.29394531]
[265.53668213 571.91223145]
[260.92266846 557.63952637]
[256.30865479 543.36676025]
[245.03157043 533.63659668]
[248.14878845 518.12548828]
[243.53479004 503.85275269]
[238.70878601 489.65029907]
[233.67187500 475.52127075]
[228.46482849 470.27642822]
[228.66685486 461.14422607]
[223.84085083 446.94177246]
[218.90925598 432.77563477]
[203.42039490 426.22326660]
[197.34323120 410.18008423]
[204.89509583 394.40072632]
[199.64837646 380.34823608]
[194.40165710 366.29577637]
[189.15493774 352.24328613]
[173.57022095 345.92224121]
[167.25488281 329.97134399]
[174.57096863 314.08126831]
[169.11561584 300.10848999]
[163.66026306 286.13568115]
[158.29936218 281.04818726]
[158.22940063 271.91403198]
[152.98268127 257.86154175]
[147.73596191 243.80908203]
[142.48924255 229.75660706]
[137.13806152 215.74357605]
[131.68269348 201.77078247]
[126.22734070 187.79798889]
[120.77198792 173.82519531]
[108.93575287 164.78346252]
[111.12420654 149.11434937]
[105.66885376 135.14155579]
[100.21349335 121.16875458]
[84.95119476 114.88942719]
[78.83472443 99.56113434]
[85.58132935 84.49955750]
[79.91854858 70.60953522]
[74.25576019 56.71950531]
[68.59297180 42.82947922]
[56.21838760 32.97147369]
[58.57835388 18.26501656]
[52.91556931 4.37499046]
[46.77799606 -2.39021564]
[47.27357101 -9.76423740]
[41.81821442 -23.73703575]
[35.78204727 -30.59287071]
[36.38735580 -37.95869827]
[31.14063644 -52.01116943]
[25.89391899 -66.06363678]
[20.64720154 -80.11611176]
[15.40048218 -94.16857910]
[3.32489562 -104.39065552]
[6.12168121 -119.02032471]
[-5.95390606 -129.24240112]
[-3.15712047 -143.87207031]
[-8.40383911 -157.92454529]
[-13.65055656 -171.97700500]
[-18.89727592 -186.02947998]
[-24.14399338 -200.08195496]
[-29.39071083 -214.13442993]
[-34.63742828 -228.18688965]
[-40.30021667 -242.07691956]
[-46.37405014 -255.79219055]
[-63.17866135 -266.92626953]
[-60.28640366 -286.04489136]
[-66.76589966 -299.57324219]
[-73.24539185 -313.10159302]
[-79.72489166 -326.62991333]
[-86.20438385 -340.15826416]
[-101.63417053 -350.20831299]
[-99.60392761 -367.63946533]
[-106.28412628 -381.06982422]
[-112.96431732 -394.50021362]
[-119.58806610 -400.79019165]
[-119.64231873 -408.18063354]
[-126.12181091 -421.70898438]
[-132.60130310 -435.23733521]
[-139.08081055 -448.76568604]
[-145.86079407 -462.14596558]
[-152.93789673 -475.37149048]
[-160.01499939 -488.59701538]
[-167.09211731 -501.82254028]
[-174.16921997 -515.04803467]
[-186.97329712 -526.16076660]
[-179.83943176 -541.54077148]
[-163.08563232 -538.94323730]
[-160.94369507 -522.12518311]
[-153.86657715 -508.89962769]
[-146.78947449 -495.67410278]
[-139.71237183 -482.44857788]
[-132.63526917 -469.22305298]
[-129.38482666 -467.85668945]
[-126.63468933 -464.84808350]
[-125.14955139 -460.44946289]
[-125.55245972 -455.24517822]
[-119.07295990 -441.71682739]
[-112.59346771 -428.18847656]
[-106.11396790 -414.66012573]
[-99.53394318 -401.18041992]
[-92.85375214 -387.75003052]
[-86.17355347 -374.31964111]
[-74.80939484 -370.17446899]
[-69.13410187 -359.04006958]
[-72.67604065 -346.63775635]
[-66.19654846 -333.10940552]
[-59.71704865 -319.58108521]
[-53.23755264 -306.05273438]
[-46.75805664 -292.52438354]
[-36.85406494 -290.00964355]
[-29.82147026 -282.29660034]
[-28.16078377 -271.76937866]
[-32.65878296 -261.86602783]
[-26.58494949 -248.15075684]
[-24.02150917 -247.01632690]
[-21.75297546 -244.79814148]
[-20.19438744 -241.60342407]
[-19.71433830 -237.68754578]
[-20.58495903 -233.43360901]
[-15.33824062 -219.38114929]
[-10.09152222 -205.32867432]
[-4.84480381 -191.27619934]
[0.40191436 -177.22372437]
[5.64863253 -163.17126465]
[10.89535046 -149.11878967]
[22.59565735 -139.90184021]
[20.17415237 -124.26704407]
[31.87445831 -115.05009460]
[29.45295334 -99.41529846]
[34.69967270 -85.36283112]
[39.94639206 -71.31035614]
[45.19310760 -57.25788498]
[50.43982697 -43.20541382]
[55.79101181 -29.19239235]
[61.24636841 -15.21959400]
[66.80559540 -1.28779602]
[72.46838379 12.60223103]
[84.43792725 21.46672821]
[82.48300171 37.16669083]
[88.14578247 51.05671692]
[93.80857086 64.94674683]
[99.47135925 78.83676910]
[111.65598297 82.32799530]
[119.66225433 92.15414429]
[120.62014771 104.79281616]
[114.18629456 115.71339417]
[119.64164734 129.68618774]
[125.09700775 143.65899658]
[137.32344055 153.70014954]
[134.74478149 168.36982727]
[140.20013428 182.34263611]
[145.65550232 196.31542969]
[151.11085510 210.28822327]
[157.14701843 217.14405823]
[156.54171753 224.50988770]
[161.78843689 238.56236267]
[167.03515625 252.61482239]
[172.28187561 266.66729736]
[177.63305664 280.68032837]
[183.08840942 294.65310669]
[188.54376221 308.62591553]
[201.41993713 312.57800293]
[209.55026245 323.07122803]
[210.14370728 336.13760376]
[203.20741272 346.99658203]
[208.45411682 361.04904175]
[213.70083618 375.10153198]
[218.94755554 389.15399170]
[231.76345825 393.29733276]
[239.73666382 403.91046143]
[240.13548279 416.98422241]
[233.03828430 427.73870850]
[238.86766052 434.77124023]
[238.04330444 442.11578369]
[242.86930847 456.31823730]
[247.80090332 470.48437500]
[252.83781433 484.61340332]
[257.61849976 489.18029785]
[259.14590454 494.65423584]
[257.80752563 499.23876953]
[262.42153931 513.51147461]
[274.02862549 524.26257324]
[270.58139038 538.75274658]
[275.19540405 553.02551270]
[279.80941772 567.29821777]
[295.36450195 580.12017822]
[290.49893188 598.83416748]
[295.53585815 612.96319580]
[300.57275391 627.09222412]
[305.60968018 641.22125244]
[310.64660645 655.35028076]
[315.68350220 669.47930908]
[320.72042847 683.60833740]
[325.75735474 697.73736572]
[338.59353638 707.94342041]
[335.90557861 724.12078857]
[320.45864868 729.62756348]
[308.14318848 718.79882812]
[311.62832642 702.77429199]
[306.59140015 688.64526367]
[301.55447388 674.51617432]
[296.51757812 660.38714600]
[291.48065186 646.25811768]
[286.44372559 632.12908936]
[281.40679932 618.00006104]
[276.36990356 603.87103271]
[266.78128052 600.33959961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[6 184]
[7 183]
[8 180]
[9 179]
[11 178]
[12 177]
[13 175]
[16 171]
[17 170]
[18 169]
[19 168]
[22 164]
[23 163]
[24 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 156]
[31 155]
[32 154]
[33 153]
[35 151]
[36 150]
[37 149]
[40 145]
[41 144]
[42 143]
[43 142]
[45 140]
[46 139]
[48 138]
[49 137]
[51 136]
[52 135]
[53 134]
[54 133]
[55 132]
[57 130]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 117]
[67 116]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[75 105]
[76 104]
[77 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[190 209]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
