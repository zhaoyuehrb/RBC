%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUUCCCGCUCCGCGUCCCGCCCAGCGGCGCAGGGGGCCGGGCUCCGGCUAGGAGGGUGGGGGCCGCGCCGGUGACAGCCGAUCCCCGCCCCUGCUGCCCGCCACGUCCCUCACGUACCACUCGGCAGAGGCGCGGGGAAACCUGGCGUACUGGCUGUGGCUUCUCUAGCGGGACUCGGC\
) } def
/len { sequence length } bind def

/coor [
[-35.71767044 285.98706055]
[-45.02680969 297.74884033]
[-54.33595276 309.51065063]
[-63.64509583 321.27243042]
[-72.95423889 333.03424072]
[-75.45178223 348.65707397]
[-89.41741943 353.83493042]
[-98.62526703 365.67620850]
[-107.73112488 377.59606934]
[-116.83699036 389.51593018]
[-125.94285583 401.43579102]
[-135.04872131 413.35568237]
[-133.14971924 428.81631470]
[-142.55416870 440.77505493]
[-157.30523682 442.49017334]
[-166.41110229 454.41003418]
[-175.51695251 466.32989502]
[-180.32745361 482.58706665]
[-197.28096008 482.46499634]
[-201.85685730 466.14025879]
[-187.43682861 457.22402954]
[-178.33096313 445.30416870]
[-169.22509766 433.38430786]
[-171.44931030 418.70138550]
[-162.38447571 406.48321533]
[-146.96858215 404.24981689]
[-137.86271667 392.32995605]
[-128.75685120 380.41006470]
[-119.65099335 368.49020386]
[-110.54512787 356.57034302]
[-108.97922516 349.32827759]
[-101.17921448 344.52578735]
[-99.34752655 329.74423218]
[-84.71603394 323.72509766]
[-75.40689087 311.96328735]
[-66.09774780 300.20150757]
[-56.78860855 288.43969727]
[-47.47946548 276.67791748]
[-38.27162552 264.83663940]
[-29.16576004 252.91677856]
[-20.05989647 240.99690247]
[-10.95403290 229.07704163]
[-1.84816933 217.15716553]
[7.25769424 205.23730469]
[8.82360077 197.99523926]
[16.62360764 193.19274902]
[25.93274879 181.43095398]
[35.24188995 169.66915894]
[37.07358551 154.88760376]
[51.70507431 148.86846924]
[61.01421738 137.10667419]
[70.32335663 125.34487152]
[79.63249969 113.58307648]
[88.94164276 101.82127380]
[73.94960785 102.31003571]
[62.89493942 92.17128754]
[62.08846664 77.19297791]
[71.99058533 65.92585754]
[86.94843292 64.80204010]
[98.42293549 74.46308136]
[99.86344147 89.39427948]
[110.33260345 78.65199280]
[120.80176544 67.90971375]
[131.27091980 57.16742706]
[141.74008179 46.42514420]
[152.20925903 35.68286133]
[162.67842102 24.94058037]
[173.14758301 14.19829750]
[183.61674500 3.45601463]
[193.99331665 -7.37573433]
[204.27651978 -18.29615211]
[214.55973816 -29.21656799]
[224.84295654 -40.13698578]
[235.12615967 -51.05740356]
[245.40937805 -61.97782135]
[255.69259644 -72.89823914]
[259.30987549 -81.31364441]
[266.24728394 -83.91593170]
[270.00851440 -92.26800537]
[276.98959351 -94.75082397]
[287.64160156 -105.31180573]
[298.29364014 -115.87278748]
[308.94564819 -126.43376923]
[313.26882935 -147.40599060]
[333.39880371 -151.90092468]
[343.49301147 -162.99626160]
[353.58724976 -174.09158325]
[363.68148804 -185.18692017]
[373.77572632 -196.28225708]
[383.86996460 -207.37759399]
[393.96420288 -218.47291565]
[403.96282959 -229.65449524]
[413.86511230 -240.92146301]
[423.67031860 -252.27302551]
[433.37771606 -263.70834351]
[443.08514404 -275.14364624]
[452.79254150 -286.57894897]
[462.49996948 -298.01425171]
[472.20736694 -309.44955444]
[465.33636475 -322.97970581]
[464.17211914 -338.06903076]
[468.86096191 -352.41574097]
[478.65884399 -363.84332275]
[492.04901123 -370.63064575]
[506.97698975 -371.77117920]
[521.16558838 -367.12222290]
[530.87298584 -378.55752563]
[540.58044434 -389.99282837]
[550.28784180 -401.42816162]
[550.41943359 -417.47067261]
[563.13238525 -427.25634766]
[578.67449951 -423.27844238]
[585.12310791 -408.58850098]
[577.53143311 -394.45535278]
[561.72314453 -391.72073364]
[552.01574707 -380.28543091]
[542.30834961 -368.85012817]
[532.60089111 -357.41482544]
[539.49194336 -344.16934204]
[540.79028320 -329.25424194]
[536.26715088 -314.93969727]
[526.58209229 -303.41641235]
[513.18701172 -296.46032715]
[498.10891724 -295.15914917]
[483.64266968 -299.74215698]
[473.93527222 -288.30682373]
[464.22784424 -276.87152100]
[454.52044678 -265.43621826]
[444.81301880 -254.00093079]
[435.10562134 -242.56561279]
[433.16897583 -235.41377258]
[425.13208008 -231.01918030]
[415.22979736 -219.75221252]
[413.17068481 -212.63465881]
[405.05953979 -208.37869263]
[394.96530151 -197.28335571]
[384.87106323 -186.18801880]
[374.77682495 -175.09268188]
[364.68258667 -163.99736023]
[354.58834839 -152.90202332]
[344.49411011 -141.80668640]
[346.35833740 -133.08155823]
[343.94808960 -124.34817505]
[337.68508911 -117.61228180]
[328.89028931 -114.48125458]
[319.50665283 -115.78174591]
[308.85461426 -105.22076416]
[298.20257568 -94.65978241]
[287.55056763 -84.09879303]
[276.98959351 -73.44676971]
[266.61300659 -62.61502075]
[256.32980347 -51.69460678]
[246.04658508 -40.77418900]
[235.76336670 -29.85377121]
[225.48014832 -18.93335342]
[215.19694519 -8.01293755]
[204.91372681 2.90747976]
[202.61148071 9.95015240]
[194.35902405 13.92517662]
[183.88986206 24.66745949]
[173.42070007 35.40974426]
[162.95153809 46.15202713]
[152.48237610 56.89431000]
[142.01321411 67.63658905]
[131.54405212 78.37887573]
[121.07488251 89.12115479]
[110.60572052 99.86344147]
[100.70343781 111.13041687]
[91.39430237 122.89221191]
[82.08515930 134.65400696]
[72.77601624 146.41581726]
[63.46687317 158.17761230]
[60.96932602 173.80043030]
[47.00368881 178.97830200]
[37.69454575 190.74009705]
[28.38540459 202.50189209]
[19.17756271 214.34317017]
[10.07169819 226.26303101]
[0.96583492 238.18290710]
[-8.14002895 250.10276794]
[-17.24589157 262.02264404]
[-26.35175514 273.94250488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[5 34]
[7 32]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[15 23]
[16 22]
[17 21]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[46 176]
[47 175]
[48 174]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[78 150]
[80 149]
[81 148]
[82 147]
[83 146]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 133]
[93 132]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[106 118]
[107 117]
[108 116]
[109 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
