%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGACCUAGGGCUGCAGGGGGACGUUUCACCUGAAGGACUGCCUCGUUUCAACAACAACUUUAUGGCUCCCGGAAGUGCCUCCUCCCCGUCCCCUUCCUUUCCAGCCUCACGCCCGUGGGCUGCAGUUGGAACG\
) } def
/len { sequence length } bind def

/coor [
[195.81173706 243.23544312]
[210.56884766 240.54994202]
[200.27059937 229.64370728]
[189.97233582 218.73747253]
[179.67408752 207.83123779]
[169.37582397 196.92500305]
[165.79328918 196.48652649]
[162.25918579 194.23612976]
[159.64840698 190.22306824]
[158.77662659 184.89701843]
[149.25242615 173.30868530]
[139.72821045 161.72035217]
[130.20401001 150.13201904]
[118.14675140 148.62113953]
[110.12151337 138.96780396]
[110.88451385 126.03473663]
[101.62852478 114.23107147]
[88.72832489 108.83882141]
[86.56780243 95.02491760]
[77.31181335 83.22125244]
[68.05582428 71.41757965]
[58.66510773 59.72080612]
[49.14089966 48.13247299]
[39.61669540 36.54413605]
[24.87682152 30.79551125]
[22.77317238 16.05021095]
[13.24896622 4.46187544]
[-0.46140808 7.46601248]
[-14.05933571 4.26636934]
[-24.88818741 -4.45304966]
[-30.85781860 -16.93565941]
[-30.84788895 -30.70593643]
[-24.91766739 -43.06030655]
[-34.17365646 -54.86397934]
[-43.42964554 -66.66764832]
[-49.54069519 -69.54385376]
[-52.73801041 -74.37598419]
[-52.82449722 -79.23133850]
[-61.52959442 -91.44696045]
[-70.23469543 -103.66257477]
[-76.20745087 -106.81591797]
[-79.17987061 -111.78955841]
[-79.04366302 -116.64377594]
[-87.17955780 -129.24565125]
[-95.31546021 -141.84751892]
[-109.73361206 -137.37318420]
[-124.82427979 -136.95590210]
[-139.46765137 -140.62661743]
[-152.57708740 -148.11296082]
[-163.17979431 -158.85937500]
[-170.48895264 -172.06842041]
[-173.96218872 -186.75988770]
[-173.34176636 -201.84356689]
[-168.67372131 -216.20016479]
[-160.30445862 -228.76432800]
[-148.85502625 -238.60369873]
[-135.17506409 -244.98812866]
[-120.27969360 -247.44386292]
[-105.27426910 -245.78866577]
[-91.27227783 -240.14535522]
[-79.31276703 -230.93272400]
[-70.28321838 -218.83438110]
[-64.85367584 -204.74812317]
[-63.42704773 -189.71923828]
[-66.10919952 -174.86297607]
[-72.70110321 -161.28176880]
[-82.71359253 -149.98341370]
[-74.57769012 -137.38154602]
[-66.44178772 -124.77967834]
[-58.01907730 -112.36766815]
[-49.31398010 -100.15205383]
[-40.60887909 -87.93643951]
[-31.62597466 -75.92363739]
[-22.36998558 -64.11996460]
[-13.11399651 -52.31629562]
[2.78086710 -54.99189758]
[17.95238876 -49.27733231]
[28.25050163 -36.63520432]
[30.80777359 -20.43656921]
[24.83730125 -5.06233072]
[34.36150742 6.52600431]
[48.42014694 11.44575405]
[51.20502853 27.01993179]
[60.72923660 38.60826492]
[70.25344086 50.19660187]
[76.98984528 53.39483261]
[79.85949707 62.16159058]
[89.11548615 73.96526337]
[98.37147522 85.76892853]
[111.27167511 91.16117859]
[113.43219757 104.97508240]
[122.68818665 116.77874756]
[139.90356445 123.19851685]
[141.79234314 140.60780334]
[151.31654358 152.19613647]
[160.84075928 163.78446960]
[170.36495972 175.37281799]
[180.28205872 186.62675476]
[190.58032227 197.53298950]
[200.87857056 208.43920898]
[211.17683411 219.34544373]
[221.47508240 230.25167847]
[232.38131714 240.54994202]
[243.85969543 250.20639038]
[255.33805847 259.86282349]
[266.81643677 269.51928711]
[278.29479980 279.17572021]
[289.77319336 288.83215332]
[305.30603027 287.66247559]
[316.80917358 297.61898804]
[317.82858276 312.43441772]
[329.30694580 322.09085083]
[337.96984863 325.26028442]
[340.93450928 332.10269165]
[352.18844604 342.01980591]
[363.44238281 351.93688965]
[379.61682129 354.64242554]
[385.10675049 370.09533691]
[374.26464844 382.39901733]
[358.24389648 378.89648438]
[353.52529907 363.19082642]
[342.27136230 353.27374268]
[331.01742554 343.35662842]
[319.65051270 333.56921387]
[308.17214966 323.91278076]
[293.40084839 325.44390869]
[281.62258911 315.81442261]
[280.11672974 300.31054688]
[268.63836670 290.65408325]
[257.16000366 280.99765015]
[245.68162537 271.34121704]
[234.20324707 261.68475342]
[222.72486877 252.02830505]
[220.88902283 266.91555786]
[208.22950745 274.96145630]
[193.97119141 270.30307007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 102]
[3 101]
[4 100]
[5 99]
[6 98]
[10 97]
[11 96]
[12 95]
[13 94]
[16 92]
[17 91]
[19 89]
[20 88]
[21 87]
[22 85]
[23 84]
[24 83]
[26 81]
[27 80]
[33 75]
[34 74]
[35 73]
[38 72]
[39 71]
[40 70]
[43 69]
[44 68]
[45 67]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[111 125]
[112 124]
[114 123]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
