%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCACCCCCCCAGGGGACAGGCGGAGCCGGCCUUCUCCCCGUCUCUAGUAGUUUCCGCACCGCUGACGCAUGCCUGCGCGCACAGCUGGGCCGGGCGCGUCCUACGCAGCAGCCGCGAGCCGGGCUGCGGGUGCCAGACGGUUCCCGGCGGGGGGCAGGGGCGGGGCGCCGCAGGAGGCCGGGACUCCUGGCGGAGGAGCCCCAAGGAGGCCCGCCUGACGACUGACCAGUUGCC\
) } def
/len { sequence length } bind def

/coor [
[244.23880005 668.30572510]
[236.73895264 668.25622559]
[232.82481384 682.73657227]
[228.91065979 697.21685791]
[224.99650574 711.69720459]
[235.42474365 723.06622314]
[238.02845764 738.27227783]
[231.97679138 752.46313477]
[219.20082092 761.11059570]
[203.77731323 761.45520020]
[190.62783813 753.38708496]
[183.94836426 739.48065186]
[185.87028503 724.17346191]
[195.78030396 712.34997559]
[210.51618958 707.78302002]
[214.43034363 693.30273438]
[218.34449768 678.82238770]
[222.25865173 664.34210205]
[227.18704224 639.26312256]
[244.81840515 630.89013672]
[245.21435547 615.89532471]
[245.61030579 600.90057373]
[246.00625610 585.90582275]
[246.40220642 570.91101074]
[246.79817200 555.91625977]
[247.19412231 540.92150879]
[244.23423767 534.16455078]
[247.69555664 525.73175049]
[248.28939819 510.74353027]
[248.88323975 495.75527954]
[270.87231445 460.46899414]
[266.01168823 446.27835083]
[261.15106201 432.08770752]
[256.29040527 417.89709473]
[251.42977905 403.70645142]
[246.56915283 389.51580811]
[241.70851135 375.32516479]
[236.84786987 361.13452148]
[231.42924500 347.14743042]
[225.46113586 333.38583374]
[219.49301147 319.62423706]
[213.52488708 305.86264038]
[207.55677795 292.10104370]
[201.58865356 278.33944702]
[195.62052917 264.57785034]
[189.65242004 250.81626892]
[183.68429565 237.05467224]
[177.71617126 223.29307556]
[172.18159485 218.41607666]
[171.76142883 209.31021118]
[165.97547913 195.47103882]
[161.99215698 192.86669922]
[159.59257507 187.74066162]
[160.22479248 181.18937683]
[154.80616760 167.20228577]
[149.38754272 153.21520996]
[143.96891785 139.22811890]
[138.55029297 125.24103546]
[133.13166809 111.25395203]
[127.71305084 97.26686859]
[119.76829529 117.08007050]
[101.15489960 124.37511444]
[84.31731415 116.38392639]
[79.04270935 99.92424011]
[65.05562592 94.50561523]
[55.94184494 94.32596588]
[50.92045975 88.92205048]
[41.80984497 88.62212372]
[36.86022568 83.15239716]
[23.02104950 77.36643982]
[9.18187523 71.58049011]
[-4.65729952 65.79454041]
[-20.84541321 68.41693878]
[-30.99944878 55.53953552]
[-24.67380333 40.40948868]
[-8.37575912 38.59130096]
[1.12865257 51.95536423]
[14.96782780 57.74131775]
[28.80700302 63.52726746]
[42.64617538 69.31321716]
[56.52323532 75.00770569]
[70.47425079 80.51853180]
[84.46133423 85.93715668]
[90.49301147 77.52563477]
[100.96993256 72.16940308]
[96.29702759 57.91584015]
[91.62413025 43.66227722]
[86.95122528 29.40871811]
[82.27832794 15.15515709]
[70.62693024 4.45209265]
[74.01432037 -10.05221272]
[69.34142303 -24.30577469]
[64.66851807 -38.55933380]
[59.90164948 -52.78174591]
[55.04101181 -66.97238159]
[50.08682632 -81.13063049]
[45.03930664 -95.25587463]
[39.99178314 -109.38111877]
[34.57315826 -123.36820221]
[28.78720665 -137.20738220]
[23.00125504 -151.04655457]
[17.21530342 -164.88572693]
[5.52724934 -177.16683960]
[14.09283638 -191.79786682]
[30.52327156 -187.61730957]
[31.05447769 -170.67167664]
[36.84043121 -156.83250427]
[42.62638092 -142.99333191]
[48.41233444 -129.15415955]
[50.93133926 -127.96456909]
[53.13547134 -125.71469116]
[54.62189484 -122.51787567]
[55.03560257 -118.62994385]
[54.11702728 -114.42864227]
[59.16455078 -100.30339813]
[64.21207428 -86.17815399]
[69.41295624 -80.94676971]
[69.23165131 -71.83301544]
[74.09228516 -57.64237976]
[79.22366333 -52.34279633]
[78.92208099 -43.23223495]
[83.59497833 -28.97867393]
[88.26788330 -14.72511292]
[99.58503723 -5.04155922]
[96.53189087 10.48225594]
[101.20478821 24.73581696]
[105.87769318 38.98937988]
[110.55059052 53.24293900]
[115.22348785 67.49649811]
[130.12918091 69.17596436]
[137.85662842 56.31959152]
[145.58409119 43.46321487]
[153.31153870 30.60683823]
[153.78932190 14.79284763]
[166.97752380 7.87038469]
[174.70498657 -4.98599148]
[182.43243408 -17.84236717]
[182.17988586 -34.23957062]
[196.39097595 -42.42352295]
[210.44654846 -33.97527695]
[209.88743591 -17.58566093]
[195.28881836 -10.11491108]
[187.56135559 2.74146533]
[179.83389282 15.59784126]
[179.90884399 30.49225807]
[166.16792297 38.33429718]
[158.44046021 51.19067001]
[150.71301270 64.04705048]
[142.98554993 76.90342712]
[141.70013428 91.84824371]
[147.11875916 105.83532715]
[152.53738403 119.82241058]
[157.95600891 133.80949402]
[163.37463379 147.79658508]
[168.79325867 161.78366089]
[174.21188354 175.77075195]
[179.81465149 189.68508911]
[185.60061646 203.52426147]
[191.47776794 217.32495117]
[197.44589233 231.08654785]
[203.41401672 244.84814453]
[209.38212585 258.60974121]
[215.35025024 272.37133789]
[221.31837463 286.13293457]
[227.28648376 299.89453125]
[233.25460815 313.65612793]
[239.22273254 327.41772461]
[245.19084167 341.17932129]
[251.58380127 327.60986328]
[265.65750122 322.42034912]
[279.32943726 328.59106445]
[284.74789429 342.57821655]
[278.80102539 356.34902954]
[264.90414429 361.99493408]
[251.03851318 356.27389526]
[255.89915466 370.46453857]
[260.75979614 384.65518188]
[265.62042236 398.84579468]
[270.48104858 413.03643799]
[275.34167480 427.22708130]
[280.20233154 441.41772461]
[285.06295776 455.60836792]
[295.24133301 466.62655640]
[309.00292969 472.59466553]
[322.76452637 478.56280518]
[338.50381470 476.95501709]
[347.10186768 489.11740112]
[360.86346436 495.08551025]
[374.62506104 501.05361938]
[388.38665771 507.02175903]
[402.14825439 512.98986816]
[417.53756714 508.45687866]
[430.59350586 517.78009033]
[431.30062866 533.80755615]
[419.11648560 544.24438477]
[403.38775635 541.08428955]
[396.18011475 526.75146484]
[382.41851807 520.78332520]
[368.65692139 514.81524658]
[354.89532471 508.84710693]
[341.13372803 502.87899780]
[326.37875366 504.91363525]
[316.79641724 492.32440186]
[303.03482056 486.35626221]
[289.27322388 480.38815308]
[282.92279053 484.37838745]
[294.43743896 493.99154663]
[288.85299683 507.91326904]
[273.88696289 506.90414429]
[270.22192383 492.35888672]
[263.87149048 496.34912109]
[263.27764893 511.33737183]
[262.68380737 526.32562256]
[262.18890381 541.31744385]
[261.79293823 556.31219482]
[261.39697266 571.30700684]
[261.00103760 586.30175781]
[260.60507202 601.29650879]
[260.20913696 616.29132080]
[259.81317139 631.28607178]
[276.82995605 640.08233643]
[281.26901245 664.73156738]
[284.99169922 679.26226807]
[288.71438599 693.79296875]
[292.43704224 708.32373047]
[296.15972900 722.85443115]
[308.00796509 734.19244385]
[303.85073853 750.05590820]
[287.96466064 754.12585449]
[276.69195557 742.21545410]
[281.62899780 726.57708740]
[277.90634155 712.04638672]
[274.18365479 697.51568604]
[270.46096802 682.98492432]
[266.73831177 668.45422363]
[259.23846436 668.40472412]
[259.13925171 683.40441895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[20 220]
[21 219]
[22 218]
[23 217]
[24 216]
[25 215]
[26 214]
[28 213]
[29 212]
[30 211]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[50 158]
[51 157]
[54 156]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[64 83]
[65 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 119]
[95 118]
[96 116]
[97 115]
[98 114]
[99 109]
[100 108]
[101 107]
[102 106]
[130 149]
[131 148]
[132 147]
[133 146]
[135 144]
[136 143]
[137 142]
[183 205]
[184 204]
[185 203]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
[222 235]
[223 234]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
