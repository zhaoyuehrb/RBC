%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCGAGAGUGAGUGGGACCGGAGGGGCGGGGCAUCAUAUGGGCGGGGCUGAGGCGAGGCCCCGGCGGCCAUCUUGAGCCCCGCCUUUUACUUCGGCCCGCUUCUUCUGGUCACUCCGCCACCGUAGAAUCGCCUACCAUUUGGUGCAAGCAAAAAGCAAUCAGCAAUUGGACAGGAAAAGA\
) } def
/len { sequence length } bind def

/coor [
[155.76947021 195.41567993]
[153.66096497 182.58129883]
[154.95796204 169.62612915]
[159.57850647 157.43917847]
[147.62643433 148.37562561]
[135.67436218 139.31208801]
[132.12814331 139.43840027]
[128.34585571 137.83833313]
[125.14646149 134.42048645]
[123.35824585 129.46571350]
[111.88589478 119.80212402]
[100.41354370 110.13852692]
[92.69052124 107.75884247]
[88.82964325 100.21068573]
[77.52394867 90.35263062]
[66.21824646 80.49457550]
[54.91255569 70.63652039]
[43.35811996 61.07121658]
[31.56252861 51.80493546]
[19.76693726 42.53865051]
[7.97134495 33.27236938]
[-3.82424736 24.00608444]
[-15.61983967 14.73980141]
[-27.41543198 5.47351885]
[-39.21102524 -3.79276443]
[-51.00661469 -13.05904770]
[-62.80220795 -22.32533073]
[-74.67647552 -31.49057961]
[-86.62855530 -40.55412674]
[-98.58062744 -49.61767197]
[-110.53270721 -58.68121719]
[-122.48477936 -67.74476624]
[-138.15599060 -69.91820526]
[-143.62197876 -83.77361298]
[-156.95401001 -75.07054138]
[-172.43309021 -71.46066284]
[-188.18640137 -73.36190796]
[-202.31436157 -80.52651978]
[-213.11973572 -92.07322693]
[-219.31146240 -106.59554291]
[-220.15895081 -122.33310699]
[-215.57821655 -137.38507080]
[-227.68328857 -146.24324036]
[-239.78837585 -155.10140991]
[-251.89344788 -163.95956421]
[-263.99853516 -172.81773376]
[-276.10360718 -181.67590332]
[-288.20867920 -190.53407288]
[-300.31375122 -199.39224243]
[-312.41882324 -208.25039673]
[-324.52389526 -217.10856628]
[-340.22994995 -219.01414490]
[-345.93170166 -232.77420044]
[-358.03677368 -241.63237000]
[-370.14184570 -250.49053955]
[-383.14086914 -246.90931702]
[-395.64398193 -251.41027832]
[-403.15429688 -262.13610840]
[-403.10879517 -275.03512573]
[-415.06088257 -284.09866333]
[-427.01296997 -293.16220093]
[-438.96502686 -302.22576904]
[-454.99047852 -301.47448730]
[-465.46081543 -313.62982178]
[-462.34405518 -329.36721802]
[-448.03112793 -336.61428833]
[-433.50170898 -329.81170654]
[-429.90148926 -314.17782593]
[-417.94940186 -305.11428833]
[-405.99734497 -296.05075073]
[-394.04525757 -286.98718262]
[-377.50900269 -289.99212646]
[-363.63604736 -279.91860962]
[-361.28369141 -262.59561157]
[-349.17858887 -253.73744202]
[-337.07351685 -244.87928772]
[-322.23333740 -243.60729980]
[-315.66574097 -229.21365356]
[-303.56066895 -220.35548401]
[-291.45559692 -211.49731445]
[-279.35052490 -202.63914490]
[-267.24542236 -193.78097534]
[-255.14035034 -184.92282104]
[-243.03527832 -176.06465149]
[-230.93020630 -167.20648193]
[-218.82513428 -158.34831238]
[-206.72004700 -149.49014282]
[-195.19015503 -157.72506714]
[-181.65913391 -161.99972534]
[-167.44796753 -161.88291931]
[-153.94833374 -157.37277222]
[-142.48632812 -148.89837646]
[-134.19221497 -137.27886963]
[-129.88894653 -123.64433289]
[-130.01057434 -109.32587433]
[-134.55844116 -95.72568512]
[-119.74212646 -94.20052338]
[-113.42123413 -79.69683838]
[-101.46916199 -70.63329315]
[-89.51708221 -61.56974792]
[-77.56501007 -52.50620270]
[-65.61293030 -43.44265747]
[-58.36611557 -41.90257263]
[-53.53592682 -34.12092209]
[-41.74033356 -24.85463905]
[-29.94474030 -15.58835697]
[-18.14914894 -6.32207346]
[-6.35355663 2.94420958]
[5.44203568 12.21049309]
[17.23762894 21.47677612]
[29.03322029 30.74305916]
[40.82881165 40.00934219]
[52.62440491 49.27562332]
[56.17226410 49.20986938]
[59.92668152 50.87427902]
[63.06724930 54.34626007]
[64.77060699 59.33082962]
[76.07630157 69.18888092]
[87.38200378 79.04693604]
[98.68769836 88.90499115]
[110.07713318 98.66617584]
[121.54949188 108.32977295]
[133.02185059 117.99336243]
[144.73789978 127.36000824]
[156.68998718 136.42355347]
[168.64205933 145.48710632]
[182.94602966 135.85557556]
[199.65441895 131.69006348]
[216.75677490 133.47448730]
[232.20115662 140.97787476]
[244.14028931 153.28405762]
[251.15254211 168.90362549]
[252.41117859 185.95402527]
[247.78181458 202.38656616]
[260.18225098 210.82629395]
[272.58270264 219.26600647]
[290.96264648 220.18986511]
[297.98806763 236.26014709]
[310.53079224 244.48692322]
[323.07354736 252.71369934]
[338.85653687 253.81263733]
[345.25531006 267.26272583]
[357.79803467 275.48950195]
[370.34075928 283.71627808]
[386.12377930 284.81521606]
[392.52255249 298.26531982]
[405.06527710 306.49209595]
[419.51785278 301.16018677]
[434.16754150 305.31228638]
[443.45346069 317.15441895]
[443.97933960 332.01583862]
[456.52206421 340.24261475]
[472.45889282 338.39947510]
[483.73431396 349.81195068]
[481.69879150 365.72534180]
[467.91378784 373.93228149]
[452.95401001 368.13708496]
[448.29528809 352.78533936]
[435.75256348 344.55856323]
[421.91198730 349.99700928]
[407.35073853 346.19778442]
[397.70596313 334.41513062]
[396.83850098 319.03482056]
[384.29577637 310.80804443]
[369.40991211 310.29754639]
[362.11398315 296.25900269]
[349.57125854 288.03222656]
[337.02853394 279.80545044]
[322.14266968 279.29495239]
[314.84677124 265.25643921]
[302.30401611 257.02966309]
[289.76129150 248.80287170]
[277.84246826 250.95469666]
[267.32046509 244.18321228]
[264.14297485 231.66645813]
[251.74253845 223.22673035]
[239.34208679 214.78701782]
[229.41851807 223.02641296]
[217.68391418 228.41275024]
[204.93997192 230.57032776]
[192.05937195 229.34425354]
[179.92602539 224.81163025]
[169.37434387 217.27667236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 126]
[5 125]
[6 124]
[10 123]
[11 122]
[12 121]
[14 120]
[15 119]
[16 118]
[17 117]
[18 113]
[19 112]
[20 111]
[21 110]
[22 109]
[23 108]
[24 107]
[25 106]
[26 105]
[27 104]
[28 102]
[29 101]
[30 100]
[31 99]
[32 98]
[34 96]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[47 82]
[48 81]
[49 80]
[50 79]
[51 78]
[53 76]
[54 75]
[55 74]
[59 71]
[60 70]
[61 69]
[62 68]
[134 177]
[135 176]
[136 175]
[138 172]
[139 171]
[140 170]
[142 168]
[143 167]
[144 166]
[146 164]
[147 163]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
