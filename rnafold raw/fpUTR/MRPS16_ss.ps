%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGGGAAGUAUAGGGCGGCAAGCGGAGGAGGCGUGGCGAGCGGAUCAUCCGCUUCCGGAGUCGAGGUUUUCGGGCUUGUACCGCUUGGCGGUGCGGCCUGGUGUCGGCUUGCAGGUUCUUUCUGUGUUUGUUCUCUGCCCUGCCAAGGCCGUAGAGCUGGUGCGUGCGGGUAGCGGGGCUCUCCGAGGAGCCGCACGCCGGCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[334.73587036 450.42709351]
[322.90441895 459.64752197]
[308.06173706 461.81442261]
[294.08807373 456.36132812]
[284.63638306 444.71377563]
[282.17755127 429.91665649]
[287.35437012 415.83828735]
[298.81347656 406.15899658]
[313.55929565 403.40917969]
[327.73843384 408.30871582]
[319.17529297 395.99319458]
[310.61218262 383.67764282]
[294.35232544 377.07489014]
[292.96151733 358.71298218]
[284.21682739 346.52566528]
[270.51062012 340.69561768]
[268.75186157 324.97247314]
[260.00717163 312.78515625]
[251.26246643 300.59786987]
[242.24905396 288.60794067]
[232.97137451 276.82128906]
[223.69371033 265.03466797]
[214.41603088 253.24803162]
[197.79359436 247.62013245]
[195.31742859 229.37284851]
[185.86611938 217.72499084]
[176.41479492 206.07713318]
[166.96348572 194.42927551]
[157.51216125 182.78141785]
[148.06085205 171.13356018]
[138.60952759 159.48570251]
[129.15821838 147.83784485]
[115.13071442 142.83000183]
[112.44359589 127.23865509]
[89.61161041 131.87181091]
[67.66127014 118.17835999]
[60.41160202 90.66776276]
[45.54481125 92.66238403]
[30.67801857 94.65699768]
[22.58944893 98.89946747]
[15.57633686 96.56933594]
[0.68162018 98.34342957]
[-14.21309662 100.11753082]
[-29.10781288 101.89162445]
[-44.00252914 103.66572571]
[-58.89724731 105.43981934]
[-73.79196167 107.21392059]
[-88.80480194 115.09116364]
[-100.53016663 102.84567261]
[-92.00914001 88.18864441]
[-75.56606293 92.31920624]
[-60.67134476 90.54510498]
[-45.77662659 88.77101135]
[-30.88191032 86.99691010]
[-15.98719406 85.22280884]
[-1.09247744 83.44871521]
[13.80223942 81.67461395]
[28.68340111 79.79020691]
[43.55019379 77.79559326]
[58.41698456 75.80097198]
[64.76744843 62.21158218]
[56.76009750 49.52764130]
[48.75274658 36.84370041]
[40.74539566 24.15976143]
[32.73804855 11.47582054]
[24.73069572 -1.20811903]
[16.72334480 -13.89205933]
[2.81386065 -21.43107796]
[2.56237555 -36.32355881]
[-2.05717921 -38.75066757]
[-4.99091291 -42.34717560]
[-6.07568359 -46.27531815]
[-5.50440788 -49.75395203]
[-12.94014931 -62.78121948]
[-20.37589073 -75.80848694]
[-27.81163216 -88.83576202]
[-35.24737167 -101.86302948]
[-42.68311310 -114.89029694]
[-50.11885452 -127.91756439]
[-57.09020996 -133.81872559]
[-57.56662369 -141.19343567]
[-64.80850983 -154.32945251]
[-72.05039215 -167.46548462]
[-79.29227448 -180.60150146]
[-86.53415680 -193.73753357]
[-93.77603912 -206.87355042]
[-101.01792145 -220.00958252]
[-113.95992279 -230.96133423]
[-107.01886749 -246.42930603]
[-90.23391724 -244.04147339]
[-87.88189697 -227.25146484]
[-80.64001465 -214.11543274]
[-73.39813232 -200.97941589]
[-66.15625000 -187.84338379]
[-58.91436768 -174.70736694]
[-51.67248154 -161.57133484]
[-44.43059921 -148.43531799]
[-37.09158707 -135.35330200]
[-29.65584564 -122.32604218]
[-22.22010422 -109.29876709]
[-14.78436279 -96.27149963]
[-7.34862089 -83.24423218]
[0.08712026 -70.21696472]
[7.52286148 -57.18969345]
[15.24631596 -44.33090973]
[28.58306122 -37.69913101]
[29.40728569 -21.89941025]
[37.41463470 -9.21546936]
[45.42198563 3.46847034]
[53.42933655 16.15241051]
[61.43668747 28.83634949]
[69.44403839 41.52029037]
[77.45139313 54.20423126]
[92.42504883 53.31562042]
[98.87602234 39.77365494]
[105.32700348 26.23168564]
[111.77797699 12.68971920]
[118.22895813 -0.85224867]
[114.24295044 -16.39223862]
[124.02198792 -29.11033630]
[140.06442261 -29.25030327]
[150.06388855 -16.70477295]
[146.34963989 -1.09759831]
[131.77091980 5.59872913]
[125.31994629 19.14069748]
[118.86897278 32.68266296]
[112.41799164 46.22463226]
[105.96701050 59.76659775]
[123.35704041 70.03637695]
[132.60742188 86.45201874]
[132.38922119 103.94165039]
[124.09145355 117.78733826]
[138.79496765 123.62832642]
[140.80607605 138.38653564]
[150.25738525 150.03439331]
[159.70870972 161.68225098]
[169.16001892 173.33010864]
[178.61134338 184.97796631]
[188.06265259 196.62582397]
[197.51397705 208.27368164]
[206.96530151 219.92153931]
[219.68933105 222.03070068]
[227.32159424 231.92614746]
[226.20265198 243.97036743]
[235.48033142 255.75698853]
[244.75801086 267.54360962]
[254.03569031 279.33026123]
[258.88174438 281.26599121]
[262.17208862 284.53936768]
[263.65777588 288.33407593]
[263.44976807 291.85317993]
[272.19445801 304.04046631]
[280.93914795 316.22778320]
[295.27084351 322.92953491]
[296.40411377 337.78097534]
[305.14880371 349.96829224]
[317.72555542 352.82751465]
[324.75820923 363.15774536]
[322.92770386 375.11450195]
[331.49084473 387.43005371]
[340.05398560 399.74560547]
[349.50531006 411.39346313]
[359.79293823 422.30969238]
[370.08056641 433.22595215]
[380.36822510 444.14221191]
[390.65585327 455.05847168]
[398.81826782 459.15704346]
[401.01354980 466.21353149]
[411.13830566 477.28103638]
[421.26306152 488.34854126]
[436.28677368 493.30819702]
[439.16864014 507.92135620]
[449.29336548 518.98883057]
[459.41812134 530.05633545]
[467.51889038 534.27545166]
[469.60940552 541.36370850]
[484.55798340 546.54547119]
[487.22296143 561.19970703]
[502.17153931 566.38146973]
[504.83654785 581.03570557]
[514.79620361 592.25201416]
[524.75579834 603.46832275]
[534.71545410 614.68463135]
[544.67504883 625.90093994]
[554.63470459 637.11730957]
[570.35809326 641.77636719]
[573.92126465 657.78375244]
[561.65869141 668.67236328]
[546.18511963 663.24096680]
[543.41839600 647.07690430]
[533.45874023 635.86059570]
[523.49914551 624.64428711]
[513.53948975 613.42797852]
[503.57986450 602.21166992]
[493.62023926 590.99536133]
[479.38403320 586.61584473]
[476.00665283 571.15930176]
[461.77044678 566.77984619]
[458.39309692 551.32330322]
[448.35061646 540.18109131]
[438.22586060 529.11358643]
[428.10113525 518.04608154]
[413.80160522 513.87805176]
[410.19555664 498.47326660]
[400.07080078 487.40576172]
[389.94607544 476.33828735]
[379.73959351 465.34609985]
[369.45196533 454.42984009]
[359.16433716 443.51358032]
[348.87667847 432.59735107]
[338.58905029 421.68109131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 161]
[11 160]
[12 159]
[14 156]
[15 155]
[17 153]
[18 152]
[19 151]
[20 147]
[21 146]
[22 145]
[23 144]
[25 141]
[26 140]
[27 139]
[28 138]
[29 137]
[30 136]
[31 135]
[32 134]
[34 132]
[37 60]
[38 59]
[39 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[61 113]
[62 112]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[69 105]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[78 99]
[79 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[162 211]
[163 210]
[164 209]
[165 208]
[166 207]
[168 206]
[169 205]
[170 204]
[172 202]
[173 201]
[174 200]
[176 199]
[178 197]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
