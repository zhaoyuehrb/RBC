%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGUCCUCUGAACCAAUCAGGACCGGCCUGGCAGUGUCAUGGCUGCCCACAGGUCUGCAGGCACUCGGUACGCCGCUAACGCGGCGAGGUAGCUCGGUGCGUCUCGCGGUACCAGUGCGAAUCAUCGGGCUAUCCAGGUCCGAGAUCCUAGUCUCCUGUCGGCUCUGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[85.21643829 446.07388306]
[72.04477692 435.39944458]
[78.65578461 419.78756714]
[71.38033295 406.79074097]
[79.60802460 393.27722168]
[80.14646149 378.28686523]
[80.68490601 363.29653931]
[81.22335052 348.30621338]
[81.76179504 333.31588745]
[74.48634338 320.31906128]
[82.71402740 306.80554199]
[83.25247192 291.81518555]
[75.97702026 278.81838989]
[84.20470428 265.30484009]
[84.74314880 250.31451416]
[74.71928406 242.18725586]
[71.16362762 229.57960510]
[75.59371948 217.04519653]
[86.59985352 209.24649048]
[87.40729523 194.26824951]
[88.21474457 179.28999329]
[89.02219391 164.31173706]
[89.82964325 149.33348083]
[72.54705811 142.23228455]
[59.04191971 129.32003784]
[51.17248154 112.37345886]
[36.24553680 113.85208893]
[21.31859398 115.33071899]
[6.39164925 116.80934906]
[-8.53529453 118.28797913]
[-23.41701508 120.16798401]
[-38.24272156 122.44798279]
[-53.06842804 124.72798920]
[-67.89413452 127.00798798]
[-82.71984100 129.28799438]
[-97.54554749 131.56799316]
[-106.68908691 144.45874023]
[-122.28347015 147.02600098]
[-135.07681274 137.74668884]
[-137.47908020 122.12603760]
[-128.06501770 109.43151093]
[-112.41983795 107.19454193]
[-99.82555389 116.74228668]
[-84.99984741 114.46228790]
[-70.17414093 112.18228149]
[-55.34843063 109.90228271]
[-40.52272415 107.62227631]
[-25.69701767 105.34227753]
[-23.31765175 102.69751740]
[-19.52516174 101.08983612]
[-14.82855034 101.17700958]
[-10.01392555 103.36103821]
[4.91301823 101.88240814]
[19.83996201 100.40377808]
[34.76690674 98.92514801]
[49.69384766 97.44651031]
[51.83594513 85.25371552]
[56.88722610 73.95162201]
[64.54259491 64.22289276]
[74.33964539 56.65515900]
[85.68662262 51.70552444]
[97.89815521 49.67295456]
[99.51071167 34.75988388]
[101.12326813 19.84681511]
[102.73581696 4.93374491]
[104.34837341 -9.97932529]
[102.15487671 -18.88176727]
[106.12606812 -25.14476585]
[108.00606537 -40.02648544]
[109.88606262 -54.90820694]
[107.66205597 -61.19182205]
[108.79868317 -66.80307007]
[112.10997772 -70.28676605]
[114.52296448 -85.09141541]
[116.93595123 -99.89605713]
[119.34893036 -114.70069885]
[121.76191711 -129.50534058]
[111.28694153 -143.49586487]
[114.09928131 -160.40364075]
[127.98188782 -169.86961365]
[130.12872314 -184.71519470]
[132.27555847 -199.56077576]
[134.42239380 -214.40634155]
[136.56922913 -229.25192261]
[130.88670349 -244.01739502]
[140.36590576 -255.50625610]
[142.51274109 -270.35183716]
[144.65957642 -285.19741821]
[146.80642700 -300.04299927]
[140.22471619 -315.06341553]
[150.15858459 -328.11141968]
[166.38890076 -325.76434326]
[172.21931458 -310.43664551]
[161.65199280 -297.89614868]
[159.50515747 -283.05056763]
[157.35832214 -268.20498657]
[155.21148682 -253.35942078]
[161.04757690 -239.65579224]
[151.41481018 -227.10508728]
[149.26797485 -212.25950623]
[147.12113953 -197.41392517]
[144.97430420 -182.56835938]
[142.82746887 -167.72277832]
[151.91952515 -158.56501770]
[154.09921265 -145.64817810]
[148.34729004 -133.66265869]
[136.56655884 -127.09236145]
[134.15357971 -112.28771973]
[131.74058533 -97.48307037]
[129.32760620 -82.67842865]
[126.91462708 -67.87378693]
[124.76778412 -53.02820969]
[122.88778687 -38.14648819]
[121.00778961 -23.26476669]
[119.26144409 -8.36677170]
[117.64888763 6.54629850]
[116.03633881 21.45936966]
[114.42378235 36.37244034]
[112.81122589 51.28551102]
[131.83396912 60.96376038]
[145.14123535 77.65055847]
[150.34388733 98.34996796]
[165.24188232 100.09631348]
[180.13987732 101.84266663]
[189.06164551 99.72916412]
[195.28874207 103.75640869]
[210.15299988 105.76991272]
[225.01724243 107.78340912]
[239.88148499 109.79690552]
[254.74572754 111.81040955]
[269.60998535 113.82390594]
[284.47421265 115.83740234]
[298.05813599 107.30180359]
[313.15280151 112.73606873]
[318.17883301 127.97150421]
[309.28073120 141.32078552]
[293.28433228 142.54348755]
[282.46072388 130.70164490]
[267.59646606 128.68815613]
[252.73223877 126.67465210]
[237.86798096 124.66115570]
[223.00373840 122.64765930]
[208.13949585 120.63415527]
[193.27525330 118.62065887]
[178.39352417 116.74066162]
[163.49552917 114.99431610]
[148.59753418 113.24796295]
[146.04899597 120.41370392]
[142.45063782 127.11405945]
[137.88450623 133.19627380]
[132.45469666 138.52169800]
[126.28500366 142.96891785]
[119.51606750 146.43653870]
[112.30220795 148.84552002]
[104.80789185 150.14093018]
[104.00044250 165.11918640]
[103.19299316 180.09744263]
[102.38555145 195.07568359]
[101.57810211 210.05393982]
[113.49639893 222.83728027]
[112.51800537 239.94940186]
[99.73348236 250.85296631]
[99.19503784 265.84329224]
[106.43197632 279.91232300]
[98.24280548 292.35363770]
[97.70436096 307.34396362]
[104.94129944 321.41299438]
[96.75212860 333.85430908]
[96.21368408 348.84466553]
[95.67523956 363.83499146]
[95.13679504 378.82531738]
[94.59835815 393.81564331]
[101.83529663 407.88467407]
[93.64611816 420.32598877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[11 166]
[12 165]
[14 163]
[15 162]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[68 114]
[69 113]
[70 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[86 97]
[87 96]
[88 95]
[89 94]
[122 147]
[123 146]
[124 145]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
