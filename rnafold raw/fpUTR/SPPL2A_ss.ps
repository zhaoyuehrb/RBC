%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGAAGUCGCGCUGCUGUGGCGGCCGCUGUAGCAGCGGCGGUCCAGUCGUAGCCCGGCCGCCCGCGCCUGUCCGGUCCGGUCCGGCCACGGAGGCAGCGCAGCGGCGGGACUCCGAGCCUACCCCGCCGAGUGAGCUGCGCCGCACCGUGCCGUCCCACCCGGCACCCACCAGUCCG\
) } def
/len { sequence length } bind def

/coor [
[99.50460052 220.65042114]
[83.72173309 219.82786560]
[73.20542145 208.03028870]
[74.19480896 192.25698853]
[86.10290527 181.86599731]
[86.88361359 166.88633728]
[87.66432190 151.90666199]
[80.40334320 147.79347229]
[74.10441589 142.72236633]
[68.88323212 136.88937378]
[64.81843567 130.50239563]
[61.95092392 123.77449036]
[48.08030701 129.48466492]
[34.25976944 135.31498718]
[20.49035072 141.26502991]
[10.89148140 153.84169006]
[-3.86081576 151.78767395]
[-17.63023567 157.73773193]
[-31.39965439 163.68777466]
[-45.16907501 169.63783264]
[-51.82735443 175.93148804]
[-59.22948837 175.56935120]
[-73.10010529 181.27952576]
[-86.97071838 186.98968506]
[-96.78642273 199.39785767]
[-111.50084686 197.08810425]
[-125.37145996 202.79827881]
[-139.24208069 208.50845337]
[-153.11268616 214.21862793]
[-166.98330688 219.92878723]
[-180.85392761 225.63896179]
[-194.72453308 231.34913635]
[-207.06939697 242.96984863]
[-221.65335083 234.32435608]
[-217.38298035 217.91703796]
[-200.43470764 217.47851562]
[-186.56408691 211.76835632]
[-172.69348145 206.05818176]
[-158.82286072 200.34800720]
[-144.95225525 194.63783264]
[-131.08163452 188.92767334]
[-117.21102142 183.21749878]
[-108.38743591 171.21775818]
[-92.68089294 173.11907959]
[-78.81027222 167.40890503]
[-64.93965912 161.69873047]
[-51.11912537 155.86840820]
[-37.34970474 149.91835022]
[-23.58028412 143.96830750]
[-9.81086540 138.01826477]
[-1.19687665 125.86718750]
[14.54030228 127.49562073]
[28.30972099 121.54557037]
[33.21586609 115.99106598]
[42.37013626 115.61404419]
[56.24075317 109.90386963]
[55.53673935 94.00192261]
[60.42924118 78.85493469]
[70.30245209 66.36944580]
[62.39295197 53.62425995]
[54.48345184 40.87907028]
[46.57395554 28.13388252]
[38.66445541 15.38869381]
[22.24095535 7.08860588]
[22.33667946 -10.44864559]
[14.20716667 -23.05463600]
[6.07765341 -35.66062927]
[-7.90401459 -43.06491852]
[-8.29936028 -57.95427704]
[-16.42887306 -70.56026459]
[-24.55838776 -83.16625977]
[-39.87363434 -87.94358063]
[-45.55294418 -102.94774628]
[-37.23963547 -116.66884613]
[-21.31097221 -118.58122253]
[-9.98605633 -107.21786499]
[-11.95239639 -91.29576874]
[-3.82288265 -78.68978119]
[4.30663061 -66.08378601]
[17.70682144 -59.58116531]
[18.68364525 -43.79014206]
[26.81315804 -31.18415070]
[34.94267273 -18.57815933]
[46.71197128 -15.71126366]
[53.58398819 -5.25226021]
[51.40964127 7.47919464]
[59.31914139 20.22438240]
[67.22863770 32.96957016]
[75.13813782 45.71475983]
[83.04763794 58.45994568]
[109.65797424 56.18582535]
[132.84605408 69.43703461]
[145.38102722 61.19842911]
[157.91598511 52.95981979]
[161.29586792 40.49410248]
[171.92831421 33.89361572]
[183.81222534 36.24060440]
[196.48828125 28.22079849]
[209.16435242 20.20098877]
[221.84042358 12.18118095]
[234.51649475 4.16137266]
[242.04183960 -9.75551224]
[256.93405151 -10.02162838]
[269.61013794 -18.04143715]
[277.76736450 -34.53634644]
[295.30480957 -34.59281921]
[307.83975220 -42.83142853]
[320.37472534 -51.07003403]
[332.90969849 -59.30863953]
[345.44467163 -67.54724884]
[357.97964478 -75.78585052]
[370.51458740 -84.02445984]
[368.00799561 -99.04566956]
[371.83407593 -113.78612518]
[381.32992554 -125.69195557]
[394.85034180 -132.70039368]
[410.05282593 -133.59719849]
[424.30346680 -128.22697449]
[435.13323975 -117.52016449]
[440.66583252 -103.33177948]
[439.94268799 -88.12004089]
[433.08908081 -74.52047729]
[421.29248047 -64.88929749]
[406.59664917 -60.89515686]
[391.54779053 -63.23006821]
[378.75320435 -71.48949432]
[366.21823120 -63.25088501]
[353.68325806 -55.01227951]
[341.14831543 -46.77367401]
[328.61334229 -38.53506851]
[316.07836914 -30.29646111]
[303.54339600 -22.05785561]
[300.77874756 -10.26411915]
[290.37979126 -3.30159259]
[277.62994385 -5.36536980]
[264.95388794 2.65443850]
[258.33520508 15.99769306]
[242.53630066 16.83744049]
[229.86022949 24.85724831]
[217.18415833 32.87705612]
[204.50808716 40.89686584]
[191.83203125 48.91667175]
[184.54565430 64.86888885]
[166.15460205 65.49478912]
[153.61962891 73.73339081]
[141.08467102 81.97200012]
[145.64718628 90.80907440]
[148.25425720 100.77797699]
[148.63159180 111.43460846]
[146.60784912 122.27001953]
[142.12974548 132.73461914]
[152.12147522 143.92234802]
[162.11320496 155.11009216]
[172.10493469 166.29782104]
[182.09666443 177.48554993]
[192.08839417 188.67327881]
[207.71191406 188.01000977]
[220.07496643 197.58544922]
[223.34010315 212.87835693]
[215.96562195 226.66787720]
[201.43353271 232.44303894]
[186.60545349 227.47698975]
[178.48272705 214.11451721]
[180.90066528 198.66500854]
[170.90893555 187.47727966]
[160.91720581 176.28955078]
[150.92547607 165.10182190]
[140.93374634 153.91409302]
[130.94201660 142.72636414]
[123.86750793 145.21661377]
[128.84800720 159.36561584]
[137.95701599 171.28308105]
[129.43765259 183.62895203]
[115.06342316 179.34161377]
[114.69899750 164.34613037]
[109.71849060 150.19711304]
[102.64398956 152.68737793]
[101.86328125 167.66703796]
[101.08257294 182.64671326]
[111.84598541 194.21928406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[12 56]
[13 55]
[14 53]
[15 52]
[17 50]
[18 49]
[19 48]
[20 47]
[22 46]
[23 45]
[24 44]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[59 90]
[60 89]
[61 88]
[62 87]
[63 86]
[65 83]
[66 82]
[67 81]
[69 79]
[70 78]
[71 77]
[92 146]
[93 145]
[94 144]
[97 142]
[98 141]
[99 140]
[100 139]
[101 138]
[103 136]
[104 135]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
