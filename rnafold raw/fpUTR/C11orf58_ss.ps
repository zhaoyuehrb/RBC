%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCCCCGGGGCGGCGAGGGGCCGCAACGGUGACGACUGUGGCAGAGAAGGCCCGGAGGGGCUCUGCGUUCUGUAGUGGCGCUGCUUGGGCCCUUGGCGGAUUGUAAGCUGCUGGUUUUGCGGCUGGGAAGAGCGGCGAGAGGGUUCGGCAUUUUUCGUCGGGAUCCCCGCAAGG\
) } def
/len { sequence length } bind def

/coor [
[100.94182587 231.65039062]
[96.68575287 246.47904968]
[85.07328033 256.63552856]
[69.80989838 258.87890625]
[55.76610565 252.49336243]
[47.42321777 239.51646423]
[47.44342041 224.08911133]
[55.82027054 211.13412476]
[69.88074493 204.78536987]
[71.97992706 189.93298340]
[62.85988998 180.80667114]
[60.63723373 167.89976501]
[66.34644318 155.89672852]
[78.10134125 149.28565979]
[80.46085358 134.47239685]
[82.82037354 119.65913391]
[76.21064758 106.19393921]
[63.04833221 98.99995422]
[47.22805023 99.17079163]
[39.77082443 86.27741241]
[26.60850906 79.08342743]
[13.44619274 71.88944244]
[0.28387594 64.69545746]
[-12.87844086 57.50147247]
[-26.04075623 50.30748749]
[-39.20307159 43.11350250]
[-48.26319885 41.73627472]
[-52.53164291 35.67601013]
[-65.56568146 28.25213432]
[-78.59971619 20.82826042]
[-91.69839478 13.51904774]
[-104.86071014 6.32506227]
[-118.02302551 -0.86892313]
[-131.18534851 -8.06290913]
[-144.34765625 -15.25689411]
[-153.40779114 -16.63412094]
[-157.67622375 -22.69438744]
[-173.49707031 -22.80121994]
[-180.72686768 -35.82348251]
[-193.76091003 -43.24735641]
[-206.79493713 -50.67123032]
[-212.07284546 -50.63553619]
[-216.39288330 -52.46182251]
[-219.20263672 -55.46622467]
[-220.30470276 -58.84439850]
[-232.92997742 -66.94393921]
[-245.55525208 -75.04348755]
[-258.18051147 -83.14302826]
[-270.80578613 -91.24256897]
[-283.43106079 -99.34210968]
[-303.57046509 -99.34619904]
[-311.74822998 -116.84931946]
[-324.64996338 -124.50080109]
[-337.61834717 -132.03877258]
[-350.65237427 -139.46264648]
[-363.68643188 -146.88652039]
[-376.72045898 -154.31039429]
[-393.10723877 -153.67343140]
[-401.62216187 -167.68870544]
[-393.50579834 -181.93850708]
[-377.10760498 -181.76387024]
[-369.29660034 -167.34442139]
[-356.26254272 -159.92054749]
[-343.22851562 -152.49667358]
[-330.19448853 -145.07279968]
[-322.80462646 -144.49278259]
[-316.99847412 -137.40254211]
[-304.09674072 -129.75106812]
[-294.42889404 -133.16754150]
[-284.26715088 -130.63021851]
[-277.04266357 -122.74599457]
[-275.33151245 -111.96738434]
[-262.70623779 -103.86783600]
[-250.08097839 -95.76829529]
[-237.45570374 -87.66875458]
[-224.83042908 -79.56920624]
[-212.20516968 -71.46966553]
[-199.37106323 -63.70526886]
[-186.33703613 -56.28139114]
[-173.30299377 -48.85751724]
[-158.41442871 -49.28168869]
[-150.25234985 -35.72842407]
[-137.15367126 -28.41921043]
[-123.99135590 -21.22522545]
[-110.82904053 -14.03123951]
[-97.66672516 -6.83725405]
[-84.50440979 0.35673171]
[-77.10550690 0.80697632]
[-71.17584229 7.79422426]
[-58.14180374 15.21809959]
[-45.10776901 22.64197350]
[-32.00908661 29.95118523]
[-18.84677124 37.14517212]
[-5.68445492 44.33915710]
[7.47786140 51.53314209]
[20.64017868 58.72712708]
[33.80249405 65.92111206]
[46.96480942 73.11509705]
[61.84363937 72.42970276]
[70.24231720 85.83763885]
[83.40463257 93.03162384]
[75.30259705 80.40795135]
[67.44934082 67.62803650]
[67.83017731 52.63286972]
[76.32204437 40.26807022]
[90.18083191 34.52926254]
[104.92815399 37.27090836]
[115.79847717 47.60705948]
[119.27906036 62.19880676]
[111.62503052 75.09902954]
[124.52677155 67.44755554]
[137.42851257 59.79607773]
[150.33024597 52.14459991]
[163.23199463 44.49312210]
[176.13372803 36.84164429]
[178.49008179 21.38261604]
[190.26611328 11.09382534]
[205.90153503 10.83332539]
[218.01376343 20.72411728]
[220.88378906 36.09606934]
[213.15647888 49.69101715]
[198.48042297 55.08984375]
[183.78520203 49.74338531]
[170.88346863 57.39486313]
[157.98171997 65.04634094]
[145.07998657 72.69781494]
[132.17825317 80.34929657]
[119.27650452 88.00077057]
[119.14487457 103.00019836]
[131.91035461 110.87691498]
[144.67581177 118.75363922]
[157.44128418 126.63036346]
[169.78302002 120.45573425]
[183.45527649 121.18744659]
[194.88514709 128.52699280]
[201.13882446 140.46311951]
[200.67430115 153.82183838]
[213.29957581 161.92137146]
[225.92485046 170.02091980]
[238.55010986 178.12046814]
[251.17538452 186.22000122]
[263.80065918 194.31954956]
[276.42590332 202.41909790]
[289.05117798 210.51863098]
[301.67645264 218.61817932]
[314.30172729 226.71772766]
[328.70751953 220.95123291]
[343.74325562 224.78620911]
[353.62731934 236.74800110]
[354.55914307 252.23707581]
[346.18038940 265.29754639]
[331.71289062 270.90740967]
[316.71966553 266.90957642]
[306.96591187 254.84126282]
[306.20217896 239.34298706]
[293.57690430 231.24345398]
[280.95162964 223.14390564]
[268.32638550 215.04435730]
[255.70111084 206.94482422]
[243.07583618 198.84527588]
[230.45056152 190.74572754]
[217.82530212 182.64619446]
[205.20002747 174.54664612]
[192.57476807 166.44709778]
[177.49595642 172.90235901]
[161.37686157 169.06971741]
[150.60346985 156.26437378]
[149.56455994 139.39582825]
[136.79908752 131.51911926]
[124.03362274 123.64238739]
[111.26815033 115.76566315]
[97.63363647 122.01865387]
[95.27411652 136.83190918]
[92.91459656 151.64517212]
[103.44029999 165.60020447]
[100.68536377 182.51948547]
[86.83231354 192.03216553]
[84.73313141 206.88455200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 178]
[10 177]
[14 174]
[15 173]
[16 172]
[17 101]
[18 100]
[20 98]
[21 97]
[22 96]
[23 95]
[24 94]
[25 93]
[26 92]
[28 91]
[29 90]
[30 89]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[37 82]
[39 80]
[40 79]
[41 78]
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[52 68]
[53 67]
[54 65]
[55 64]
[56 63]
[57 62]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[129 171]
[130 170]
[131 169]
[132 168]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
