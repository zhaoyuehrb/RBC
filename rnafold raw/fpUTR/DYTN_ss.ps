%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCCUUUUUGUUCCCCUGUCCUCAUUCCUCUGCUGCAAAACCUUCUGCUUAAAAUACUGGUUCAUUUCUAGUUACAGGGACCCACUUGCCAUCUGUCAUUCCAGGAAAUUUGUGAA\
) } def
/len { sequence length } bind def

/coor [
[175.84165955 244.61151123]
[168.58558655 244.75411987]
[161.40919495 243.62924194]
[154.53236389 241.26904297]
[148.16621399 237.74357605]
[142.50662231 233.15867615]
[137.72816467 227.65283203]
[133.97874451 221.39299011]
[131.37506104 214.56948853]
[129.99887085 207.39025879]
[129.89453125 200.07450867]
[131.06752014 192.84600830]
[133.48420715 185.92625427]
[137.07281494 179.52770996]
[141.72555542 173.84722900]
[133.10374451 161.57269287]
[124.48193359 149.29815674]
[115.86012268 137.02360535]
[107.23831177 124.74906921]
[98.61650085 112.47452545]
[102.97850037 126.82628632]
[102.02265167 141.79579163]
[95.87071228 155.47621155]
[85.30632782 166.12486267]
[71.67523193 172.38529968]
[56.71378326 173.46005249]
[42.32781982 169.21221924]
[30.34987068 160.18289185]
[22.30571938 147.52226257]
[19.22005463 132.84307861]
[21.48593712 118.01520538]
[28.81473160 104.92746735]
[40.27287674 95.24702454]
[54.40079498 90.20700073]
[69.39883423 90.44940186]
[83.35448456 95.94210815]
[71.80697632 86.36844635]
[60.25946808 76.79478455]
[45.25970459 80.76804352]
[30.80140877 75.13445282]
[22.44408989 62.06024551]
[23.40130615 46.57272339]
[33.30498886 34.62715149]
[48.34696960 30.81684685]
[62.74330139 36.60694885]
[70.95829773 49.77104568]
[69.83312988 65.24727631]
[81.38063812 74.82093811]
[92.92814636 84.39459991]
[100.13700104 82.32518768]
[94.59296417 68.38733673]
[87.29492950 55.28242493]
[96.85980988 43.72763824]
[111.09723663 48.44946671]
[111.86164093 63.43009186]
[114.55470276 78.18636322]
[121.76354980 76.11695099]
[126.47470093 61.87598419]
[131.18585205 47.63502121]
[135.89700317 33.39405441]
[140.60815430 19.15309143]
[132.23883057 5.94368410]
[134.36962891 -9.54804707]
[145.99444580 -20.00737953]
[161.62440491 -20.49573708]
[173.87950134 -10.78253078]
[176.97328186 4.54595852]
[169.44493103 18.25208855]
[154.84912109 23.86424255]
[150.13796997 38.10520554]
[145.42681885 52.34617233]
[140.71566772 66.58713531]
[136.00451660 80.82810211]
[126.09871674 98.04830170]
[110.89104462 103.85271454]
[119.51285553 116.12725830]
[128.13465881 128.40179443]
[136.75648499 140.67634583]
[145.37829590 152.95088196]
[154.00010681 165.22541809]
[178.64741516 162.11665344]
[200.63647461 173.46020508]
[212.29470825 195.17059326]
[209.62644958 219.56765747]
[222.12615967 227.85966492]
[234.62586975 236.15165710]
[247.25192261 227.73390198]
[262.09884644 224.79934692]
[276.89819336 227.76463318]
[289.40087891 236.14736938]
[297.71905518 248.64430237]
[300.61105347 263.33380127]
[297.66674805 277.97143555]
[310.16647339 286.26342773]
[322.66616821 294.55545044]
[335.16589355 302.84744263]
[350.60449219 299.46734619]
[363.86605835 308.06423950]
[367.08273315 323.53771973]
[358.34613037 336.70764160]
[342.83950806 339.76055908]
[329.76266479 330.88519287]
[326.87387085 315.34713745]
[314.37417603 307.05514526]
[301.87448120 298.76315308]
[289.37475586 290.47116089]
[277.03375244 298.87524414]
[262.37564087 301.92242432]
[247.62777710 299.11791992]
[235.04331970 290.85845947]
[226.55700684 278.37661743]
[223.48779297 263.55691528]
[226.33387756 248.65136719]
[213.83416748 240.35937500]
[201.33445740 232.06736755]
[195.89881897 236.83650208]
[189.70977783 240.58898926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[20 75]
[36 49]
[37 48]
[38 47]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[84 115]
[85 114]
[86 113]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
