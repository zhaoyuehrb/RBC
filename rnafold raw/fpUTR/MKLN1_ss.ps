%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCUGAUCCUCCGGUAGCGAAGGGCUAGAGGCAAACACCGAGCUCCUCCAGAGCCGCCCGGGAGCAGGGAGGGCUCCGCUAGCCCGGGGGGCCCUCCCCGCGGGGCAGAUGAGUUCCAUAUCCAGACUCUCAAACCAUGUUUUGGGAUCAUCCAAACAUUCCAUCCUCCUGACUCCAUAAACUAUUGGAUUCAUAACCUGCUCC\
) } def
/len { sequence length } bind def

/coor [
[-33.45146561 137.04296875]
[-46.86594772 141.06840515]
[-59.18061066 136.24668884]
[-71.85532379 144.26863098]
[-84.53004456 152.29057312]
[-97.20475769 160.31253052]
[-94.69367981 178.60728455]
[-105.94148254 196.44978333]
[-128.50065613 203.80792236]
[-137.28038025 215.97001648]
[-146.06010437 228.13211060]
[-154.83982849 240.29420471]
[-155.36825562 245.49516296]
[-157.61610413 249.56462097]
[-160.86341858 252.03671265]
[-164.30972290 252.79933167]
[-173.63650513 264.54714966]
[-182.96327209 276.29498291]
[-192.29005432 288.04278564]
[-191.89491272 304.08099365]
[-204.27980042 314.27874756]
[-219.94407654 310.81320190]
[-226.87145996 296.34286499]
[-219.74784851 281.96810913]
[-204.03787231 278.71600342]
[-194.71109009 266.96820068]
[-185.38432312 255.22038269]
[-176.05754089 243.47256470]
[-167.00192261 231.51448059]
[-158.22219849 219.35238647]
[-149.44247437 207.19029236]
[-140.66275024 195.02819824]
[-144.37968445 188.51403809]
[-157.40802002 195.94790649]
[-167.50166321 207.04377747]
[-181.17349243 200.87280273]
[-179.52919006 185.96321106]
[-164.84188843 182.91955566]
[-151.81355286 175.48570251]
[-155.53048706 168.97152710]
[-170.46774292 170.34214783]
[-178.73135376 174.24397278]
[-185.64294434 171.61801147]
[-200.59936523 172.76068115]
[-215.55577087 173.90335083]
[-230.51219177 175.04603577]
[-242.00837708 186.23608398]
[-257.90615845 184.08200073]
[-266.01013184 170.23623657]
[-260.10357666 155.32005310]
[-244.71755981 150.77587891]
[-231.65486145 160.08961487]
[-216.69845581 158.94694519]
[-201.74203491 157.80426025]
[-186.78562927 156.66159058]
[-171.83836365 155.40490723]
[-156.90110779 154.03427124]
[-139.95191956 138.90121460]
[-119.79087830 137.58218384]
[-105.22669983 147.63780212]
[-92.55198669 139.61585999]
[-79.87727356 131.59391785]
[-67.20255280 123.57197571]
[-65.80558014 107.29487610]
[-51.63330460 95.89228821]
[-60.03804779 83.46810913]
[-74.17914581 76.37305450]
[-74.90180206 61.49599075]
[-83.30654907 49.07181168]
[-91.71128845 36.64762878]
[-100.11603546 24.22344589]
[-108.52077484 11.79926491]
[-116.92552185 -0.62491649]
[-125.33026886 -13.04909801]
[-133.73501587 -25.47327995]
[-142.13975525 -37.89746094]
[-150.54449463 -50.32164383]
[-158.94923401 -62.74582291]
[-173.09034729 -69.84088135]
[-173.81300354 -84.71794128]
[-189.37652588 -87.46604156]
[-198.36982727 -100.46204376]
[-195.45733643 -115.99565125]
[-182.36698914 -124.85105133]
[-166.86503601 -121.77449036]
[-158.14852905 -108.59123993]
[-161.38880920 -93.12268829]
[-147.84887695 -86.91629028]
[-146.52505493 -71.15056610]
[-138.12031555 -58.72638702]
[-129.71557617 -46.30220413]
[-121.31082916 -33.87802124]
[-112.90608215 -21.45384216]
[-104.50134277 -9.02966022]
[-96.09659576 3.39452171]
[-87.69185638 15.81870365]
[-79.28710938 28.24288559]
[-70.88237000 40.66706467]
[-62.47762299 53.09124756]
[-48.93768311 59.29764175]
[-47.61386490 75.06336975]
[-39.20912170 87.48754883]
[-25.90689468 94.41941071]
[-10.90863895 94.19066620]
[4.08961630 93.96191406]
[19.08787155 93.73316956]
[34.08612823 93.50442505]
[49.08438492 93.27567291]
[64.08264160 93.04692841]
[71.27248383 67.68408203]
[96.32188416 50.24245453]
[130.94738770 52.67220306]
[138.77511597 39.87662888]
[146.60284424 27.08105278]
[154.43055725 14.28547668]
[162.25828552 1.48990214]
[155.44741821 -12.35262966]
[157.22430420 -27.67732430]
[167.02191162 -39.59412766]
[181.71389771 -44.30043030]
[196.61207581 -40.29446793]
[206.96250916 -28.85453224]
[209.46240234 -13.63106060]
[203.31404114 0.51819104]
[190.47937012 9.07824707]
[175.05386353 9.31762600]
[167.22613525 22.11320114]
[159.39840698 34.90877533]
[151.57069397 47.70434952]
[143.74296570 60.49992752]
[147.94534302 66.71201324]
[160.36952209 58.30727386]
[169.58856201 46.47472000]
[183.69076538 51.58626175]
[183.18702698 66.57779694]
[168.77426147 70.73145294]
[156.35008240 79.13619995]
[160.55245972 85.34828949]
[175.34188843 82.84375000]
[190.13131714 80.33921051]
[204.92074585 77.83467102]
[219.71017456 75.33013153]
[234.49961853 72.82559967]
[242.44198608 68.30561066]
[249.53353882 70.39743042]
[264.35943604 68.11872101]
[273.50411987 55.22877121]
[289.09869385 52.66286087]
[301.89126587 61.94329071]
[304.29214478 77.56414795]
[294.87698364 90.25785828]
[279.23159790 92.49346924]
[266.63815308 82.94462585]
[251.81225586 85.22333527]
[237.00415039 87.61502838]
[222.21472168 90.11956787]
[207.42529297 92.62410736]
[192.63584900 95.12864685]
[177.84642029 97.63317871]
[163.05699158 100.13771820]
[160.53367615 107.20050812]
[174.71336365 112.09299469]
[188.89305115 116.98548889]
[203.69241333 114.54029846]
[213.30639648 126.05426788]
[208.26002502 140.17993164]
[193.52671814 142.99588013]
[183.62661743 131.72636414]
[169.55683899 126.52621460]
[155.48706055 121.32607269]
[152.96376038 128.38885498]
[162.81806946 139.69781494]
[172.67237854 151.00677490]
[187.57183838 156.32810974]
[190.09967041 171.00663757]
[199.95397949 182.31559753]
[209.80828857 193.62457275]
[219.66259766 204.93353271]
[235.10653687 203.42871094]
[248.46836853 211.31800842]
[254.61019897 225.56782532]
[251.17037964 240.69883728]
[239.47157288 250.89283752]
[224.01222229 252.23002625]
[210.73675537 244.19624329]
[204.74986267 229.88063049]
[208.35363770 214.78784180]
[198.49932861 203.47886658]
[188.64501953 192.16990662]
[178.79071045 180.86094666]
[164.59609985 176.34851074]
[161.36340332 160.86108398]
[151.50910950 149.55212402]
[141.65480042 138.24316406]
[120.10923767 148.55574036]
[97.92279816 148.51794434]
[79.48920441 139.56970215]
[67.87378693 124.78694916]
[64.31138611 108.04518127]
[49.31313324 108.27393341]
[34.31487656 108.50267792]
[19.31661987 108.73142242]
[4.31836462 108.96017456]
[-10.67989159 109.18891907]
[-25.67814636 109.41767120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 63]
[4 62]
[5 61]
[6 60]
[9 32]
[10 31]
[11 30]
[12 29]
[16 28]
[17 27]
[18 26]
[19 25]
[40 57]
[41 56]
[43 55]
[44 54]
[45 53]
[46 52]
[65 102]
[66 101]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[80 87]
[103 205]
[104 204]
[105 203]
[106 202]
[107 201]
[108 200]
[109 199]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[138 160]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[145 154]
[146 153]
[171 194]
[172 193]
[173 192]
[175 190]
[176 189]
[177 188]
[178 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
