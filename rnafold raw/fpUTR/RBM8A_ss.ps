%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUUAGCCUUUGAUUGGUCAGCUUGACUGGCGACCUUUCCCCUCUGCGACAGUUUCCCGAGGUACCUAGUGUCUGAGCGGCACAGACGAGAUCUCGAUCGAAGGCGAG\
) } def
/len { sequence length } bind def

/coor [
[76.35370636 419.81314087]
[61.17503357 421.77951050]
[46.82520676 416.45584106]
[36.60171509 405.06555176]
[32.85383987 390.22601318]
[36.44281387 375.34725952]
[46.54391861 363.84826660]
[60.83599091 358.37149048]
[62.53052521 343.46749878]
[64.22505951 328.56353760]
[65.91959381 313.65954590]
[67.61412811 298.75558472]
[69.30865479 283.85159302]
[71.00318909 268.94763184]
[72.69772339 254.04364014]
[74.39225769 239.13966370]
[76.08679199 224.23568726]
[77.78132629 209.33171082]
[79.47585297 194.42773438]
[68.78212738 186.30068970]
[63.49248505 173.83645630]
[65.10250092 160.28280640]
[73.29441833 149.22991943]
[85.99272919 143.65946960]
[88.10835266 128.80940247]
[90.22396851 113.95935059]
[82.40711975 101.64289856]
[86.91086578 87.21546936]
[82.31600189 72.93656158]
[77.72114563 58.65764999]
[73.12628174 44.37873840]
[68.53142548 30.09982872]
[54.75025940 22.83916664]
[50.29382324 8.29286671]
[57.30068588 -4.80062389]
[52.70582581 -19.07953262]
[48.11096573 -33.35844421]
[43.51610565 -47.63735199]
[38.92124557 -61.91626358]
[23.80212593 -63.21548843]
[10.36848354 -70.18544769]
[0.65304816 -81.73637390]
[-3.88753295 -96.08805084]
[-2.59103608 -111.04412079]
[4.31394863 -124.32819366]
[15.74757957 -133.93034363]
[11.15271854 -148.20925903]
[6.55785847 -162.48817444]
[-4.04972410 -175.71372986]
[5.72250843 -189.56796265]
[21.74053764 -184.01286316]
[20.83676720 -167.08302307]
[25.43162918 -152.80412292]
[30.02648926 -138.52520752]
[44.91432571 -137.39312744]
[58.27068329 -130.62902832]
[68.04619598 -119.23585510]
[72.72758484 -104.92948914]
[71.57189178 -89.88030243]
[64.72418213 -76.38394165]
[53.20015335 -66.51112366]
[57.79501343 -52.23221207]
[62.38987350 -37.95330429]
[66.98473358 -23.67439270]
[71.57959747 -9.39548397]
[84.90756226 -2.84560895]
[89.77081299 11.56978035]
[82.81033325 25.50496864]
[87.40519714 39.78387833]
[92.00005341 54.06278992]
[96.59491730 68.34169769]
[101.18977356 82.62060547]
[113.85014343 90.66517639]
[128.72865295 88.75991058]
[143.60716248 86.85464478]
[158.48565674 84.94937897]
[173.36416626 83.04410553]
[181.66001892 69.78843689]
[196.55145264 65.01568604]
[211.00718689 70.97939301]
[218.20166016 84.86368561]
[214.73786926 100.11282349]
[202.25131226 109.52662659]
[186.63774109 108.66018677]
[175.26943970 97.92261505]
[160.39093018 99.82788086]
[145.51242065 101.73314667]
[130.63391113 103.63842010]
[115.75540924 105.54368591]
[105.07402802 116.07497406]
[102.95840454 130.92503357]
[100.84278870 145.77508545]
[113.11620331 157.31143188]
[116.11891174 173.71775818]
[108.87201691 188.55625916]
[94.37983704 196.12226868]
[92.68530273 211.02624512]
[90.99076843 225.93022156]
[89.29623413 240.83419800]
[87.60169983 255.73817444]
[85.90716553 270.64215088]
[84.21263885 285.54614258]
[82.51810455 300.45010376]
[80.82357025 315.35409546]
[79.12903595 330.25805664]
[77.43450165 345.16204834]
[75.73996735 360.06600952]
[88.43775940 368.61148071]
[95.69963074 382.08456421]
[95.85684204 397.38925171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 107]
[9 106]
[10 105]
[11 104]
[12 103]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[24 92]
[25 91]
[26 90]
[28 72]
[29 71]
[30 70]
[31 69]
[32 68]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[46 54]
[47 53]
[48 52]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
