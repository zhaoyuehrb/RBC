%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUUUGACCGGUCCCAGGCCAGGACACACUCUUCCAUGCUCUGGCUGUGCUGUGCUAGAGGCUGAUAAUUUUUCUCCAGGUAGAGUAAAAGAUCAAGGCACGAACUAUAUAGAUUUACAGAAAAUAGGCCAAAGAUUGAGAUUUUUUUGACACAAGCAAGUCCAGAGAACUUUUACC\
) } def
/len { sequence length } bind def

/coor [
[124.13397217 299.47384644]
[114.85513306 287.68814087]
[110.08962250 273.46527100]
[110.39468384 258.46838379]
[115.73464966 244.45106506]
[125.48509216 233.05244446]
[138.50587463 225.60534668]
[153.27444458 222.98060608]
[168.06388855 225.48513794]
[181.14587402 232.82693481]
[173.60791016 219.85855103]
[166.06994629 206.89015198]
[158.53196716 193.92176819]
[150.99400330 180.95338440]
[136.18263245 179.62631226]
[124.85883331 169.71492004]
[121.50331116 154.86251831]
[127.60732269 140.71871948]
[120.06935120 127.75032806]
[112.53138733 114.78193665]
[104.99342346 101.81355286]
[113.56485748 122.20413208]
[94.14620209 146.35888672]
[81.24446106 154.01036072]
[68.34272766 161.66183472]
[67.03555298 177.12376404]
[56.86429596 188.84234619]
[41.74000549 192.31155396]
[27.47827721 186.19740295]
[19.56304169 172.85092163]
[21.03786469 157.40408325]
[31.33564949 145.79653931]
[46.49668503 142.49160767]
[60.69124603 148.76010132]
[73.59298706 141.10862732]
[86.49472809 133.45715332]
[85.25001526 126.06115723]
[71.19506836 120.82109070]
[82.76059723 111.26917267]
[81.51589203 103.87317657]
[66.82038116 100.86618042]
[52.12487793 97.85917664]
[37.42936707 94.85218048]
[22.73386002 91.84518433]
[8.03835201 88.83818054]
[-6.65715599 85.83118439]
[-18.01799202 96.40052795]
[-33.42563629 98.24014282]
[-46.95552826 90.64266968]
[-53.40515518 76.52948761]
[-50.29449844 61.32740402]
[-38.81967163 50.88192368]
[-23.39298058 49.20955658]
[-9.94630146 56.95335770]
[-3.65015674 71.13567352]
[11.04535103 74.14267731]
[25.74085999 77.14967346]
[40.43636703 80.15666962]
[55.13187408 83.16367340]
[69.82738495 86.17066956]
[84.52288818 89.17766571]
[94.60541534 78.07169342]
[90.19606781 63.73440933]
[85.78672028 49.39712906]
[81.12643433 35.13943863]
[76.21665192 20.96573067]
[71.30686188 6.79202414]
[60.05103683 0.45483407]
[56.26296616 -11.47411537]
[61.45748520 -22.41873169]
[56.79719925 -36.67642212]
[52.13691330 -50.93411255]
[47.47662735 -65.19180298]
[35.83470917 -75.90517426]
[39.23493195 -90.40647888]
[34.57464600 -104.66416931]
[29.91436005 -118.92185974]
[15.70844364 -125.84771729]
[10.63972855 -140.81713867]
[17.71539307 -154.94903564]
[32.73756790 -159.85920715]
[46.79386902 -152.63452148]
[51.54493713 -137.56127930]
[44.17205048 -123.58214569]
[48.83233643 -109.32445526]
[53.49262238 -95.06676483]
[64.80120850 -85.37319946]
[61.73431778 -69.85208893]
[66.39460754 -55.59439850]
[71.05489349 -41.33670807]
[75.71517181 -27.07901764]
[89.38868713 -16.09867859]
[85.48056793 1.88223541]
[90.39035797 16.05594254]
[95.30014801 30.22965050]
[99.15467072 33.09410477]
[101.23393250 38.42245865]
[100.12400818 44.98778152]
[104.53334808 59.32506561]
[108.94269562 73.66234589]
[106.76256561 58.82162476]
[107.76837158 43.85538483]
[111.91466522 29.43982887]
[119.01411438 16.22628403]
[128.74595642 4.81175995]
[140.67047119 -4.28800869]
[154.24890137 -10.66187763]
[168.86775208 -14.02186394]
[183.86648560 -14.21615410]
[198.56745911 -11.23597240]
[212.30644226 -5.21596813]
[224.46267700 3.57186317]
[234.48692322 14.73046970]
[241.92625427 27.75568199]
[246.44458008 42.05899811]
[247.83772278 56.99416351]
[246.04273987 71.88637543]
[241.14074707 86.06278229]
[233.35321045 98.88285828]
[223.03199768 109.76736450]
[210.64343262 118.22453308]
[196.74726868 123.87223053]
[181.97135925 126.45529938]
[166.98329163 125.85702515]
[152.46026611 122.10443878]
[139.05847168 115.36708832]
[127.38342285 105.94938660]
[117.96180725 94.27558899]
[125.49977112 107.24397278]
[133.03773499 120.21236420]
[140.57571411 133.18074036]
[155.88679504 134.87687683]
[167.13185120 145.14343262]
[170.13977051 159.88848877]
[163.96238708 173.41542053]
[171.50036621 186.38380432]
[179.03833008 199.35218811]
[186.57629395 212.32057190]
[194.11425781 225.28897095]
[203.39291382 237.07482910]
[214.22962952 247.44619751]
[222.61920166 251.13371277]
[225.16351318 258.09594727]
[235.81655884 268.65591431]
[246.46958923 279.21588135]
[257.12261963 289.77584839]
[267.77566528 300.33581543]
[278.42871094 310.89575195]
[293.67666626 315.11599731]
[297.26855469 329.57101440]
[307.92160034 340.13098145]
[318.57464600 350.69094849]
[333.86764526 348.06350708]
[347.76940918 354.95703125]
[354.93438721 368.72082520]
[352.60754395 384.06246948]
[341.68356323 395.08273315]
[326.36294556 397.54412842]
[312.53680420 390.50018311]
[305.52154541 376.65945435]
[308.01467896 361.34396362]
[297.36163330 350.78402710]
[286.70861816 340.22406006]
[272.22262573 336.75915527]
[267.86874390 321.54879761]
[257.21569824 310.98883057]
[246.56266785 300.42889404]
[235.90963745 289.86892700]
[225.25659180 279.30895996]
[214.60356140 268.74899292]
[203.85826111 258.28292847]
[193.02154541 247.91154480]
[197.08740234 262.35000610]
[196.05097961 277.31414795]
[190.03344727 291.05419922]
[179.73844910 301.96353149]
[166.36981201 308.76641846]
[151.49075317 310.66744995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[18 131]
[19 130]
[20 129]
[21 128]
[23 36]
[24 35]
[25 34]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[62 100]
[63 99]
[64 98]
[65 95]
[66 94]
[67 93]
[70 91]
[71 90]
[72 89]
[73 88]
[75 86]
[76 85]
[77 84]
[140 172]
[141 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
