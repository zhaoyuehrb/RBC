%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAUUUUCAAAACAUUUACUAACGCUUUCAAUUAUUUACCCCAUUAAUGGAAUUUGUCAACAGACUGGAGUCCUUGACAGGAUUGUGAAUGCAUAGAGGAUGCAAAGAAAUGGACACACUGAGGUAGCUAUGCCAGUGGUCUGCAUGCGCAGGCAGUAAACUGAAGACAUUUGAGCGGUGAAUUACUUGGCAUUUGGAAACACCACCGUCUGUGUCGGGAAAGCAGAAUAACUCUCCAGUAUCUCGUCAUUAG\
CUUGCUGGAAGCAGGAGGGCU\
) } def
/len { sequence length } bind def

/coor [
[118.32106018 314.77081299]
[114.45246887 329.26336670]
[110.58387756 343.75592041]
[106.71528625 358.24847412]
[102.84669495 372.74102783]
[114.45861816 382.64688110]
[120.61474609 396.61343384]
[120.09278107 411.86764526]
[112.99635315 425.38070679]
[100.73447418 434.46966553]
[85.74174500 437.32986450]
[70.99497986 433.39343262]
[59.42215729 423.44189453]
[53.32107925 409.45120239]
[53.90311050 394.19918823]
[61.05269241 380.71417236]
[73.35026550 371.67355347]
[88.35414886 368.87243652]
[92.22274017 354.37988281]
[96.09133148 339.88732910]
[99.95991516 325.39477539]
[103.82850647 310.90222168]
[87.89881897 296.82958984]
[81.70786285 276.39337158]
[87.20001984 255.65702820]
[102.83719635 240.82971191]
[98.64089203 226.42863464]
[94.44459534 212.02755737]
[90.24829102 197.62646484]
[86.05199432 183.22538757]
[81.85569000 168.82431030]
[74.93886566 165.92474365]
[71.71722412 180.57469177]
[68.49557495 195.22463989]
[69.05948639 210.21403503]
[58.67658997 221.03973389]
[43.67671967 221.10192871]
[33.20439148 210.36273193]
[33.64395142 195.36918640]
[44.72874832 185.26147461]
[52.91698074 172.69354248]
[61.10520935 160.12561035]
[54.18838501 157.22604370]
[40.97714996 164.32978821]
[27.76591301 171.43353271]
[19.60552025 185.65815735]
[3.20792246 185.43278503]
[-4.55843973 170.98925781]
[4.29580212 157.18583679]
[20.66216278 158.22230530]
[33.87339783 151.11854553]
[47.08463287 144.01480103]
[44.70238495 136.90319824]
[30.47917938 141.66769409]
[15.77921200 138.68257141]
[25.71468163 127.44449615]
[39.93788528 122.67999268]
[37.55563736 115.56838989]
[22.73111343 117.85607910]
[7.90659046 120.14376831]
[-4.53300190 130.82968140]
[-19.91536331 125.14505005]
[-22.41644096 108.93774414]
[-9.46333790 98.88045502]
[5.61890125 105.31924438]
[20.44342422 103.03155518]
[35.26794815 100.74386597]
[29.11094093 87.32402039]
[25.94350815 71.66916656]
[10.83445263 76.36245728]
[-0.00216007 66.14398956]
[-14.67319393 63.01976776]
[-29.34422874 59.89554596]
[-44.01526260 56.77132416]
[-58.68629456 53.64710236]
[-73.35733032 50.52288055]
[-88.78025818 56.09650803]
[-101.14251709 45.32123566]
[-97.72688293 29.28173828]
[-82.04705811 24.47807693]
[-70.23310852 35.85184479]
[-55.56207275 38.97606659]
[-40.89104080 42.10028839]
[-26.22000694 45.22451019]
[-11.54897213 48.34873199]
[3.12206197 51.47295380]
[17.18174744 46.55619812]
[29.06772995 56.99813080]
[32.27799988 50.21991730]
[23.74779892 37.88153458]
[38.69853210 36.66349030]
[41.90879822 29.88527489]
[30.19649506 20.51393890]
[18.48419189 11.14260292]
[6.77188730 1.77126718]
[-4.94041681 -7.60006857]
[-20.97998810 -7.26586246]
[-31.13062096 -19.68939781]
[-27.60561752 -35.34040070]
[-13.10905838 -42.21276093]
[1.23853552 -35.03459549]
[4.43091917 -19.31237221]
[16.14322281 -9.94103718]
[27.85552788 -0.56970114]
[39.56783295 8.80163479]
[51.28013611 18.17296982]
[57.67382431 14.25241852]
[49.83272171 1.46503842]
[41.99161530 -11.32234097]
[34.15051270 -24.10972023]
[26.30940819 -36.89710236]
[18.46851540 -49.68461227]
[31.25615501 -57.52529144]
[39.09678650 -44.73820496]
[46.93789291 -31.95082474]
[54.77899551 -19.16344643]
[62.62010193 -6.37606621]
[70.46120453 6.41131353]
[76.85489655 2.49076152]
[73.81391907 -12.19775295]
[70.77294159 -26.88626862]
[67.73196411 -41.57478333]
[63.66539001 -46.70835114]
[62.88884354 -52.28902817]
[64.79257965 -56.63077545]
[62.08553314 -71.38448334]
[59.37849045 -86.13819122]
[56.67144775 -100.89189911]
[45.63717270 -113.02354431]
[50.88342667 -128.56088257]
[67.01330566 -131.52043152]
[77.43378448 -118.85765839]
[71.42515564 -103.59894562]
[74.13219452 -88.84523773]
[76.83924103 -74.09152222]
[79.54628754 -59.33781815]
[82.42047882 -44.61576080]
[85.46145630 -29.92724419]
[88.50243378 -15.23872948]
[91.54341125 -0.55021507]
[106.54244232 -0.38009638]
[109.91578674 -14.99586010]
[113.28913116 -29.61162376]
[116.66248322 -44.22738647]
[120.03582764 -58.84315109]
[123.40917206 -73.45891571]
[118.09871674 -88.97442627]
[129.08273315 -101.15159607]
[145.06179810 -97.46360016]
[149.59802246 -81.70432281]
[138.02493286 -70.08557129]
[134.65158081 -55.46980667]
[131.27824402 -40.85404205]
[127.90489960 -26.23827934]
[124.53155518 -11.62251472]
[121.15821075 2.99324846]
[126.73937988 8.00329399]
[136.70693970 -3.20597744]
[146.67449951 -14.41524887]
[156.64205933 -25.62452126]
[162.89027405 -39.26122284]
[177.80398560 -37.65457916]
[181.00440979 -22.99997902]
[168.11892700 -15.32208729]
[158.04652405 -4.20692968]
[147.97412109 6.90822744]
[137.90171814 18.02338409]
[143.48287964 23.03343010]
[157.65113831 18.10792923]
[171.81939697 13.18242741]
[185.98764038 8.25692558]
[200.15589905 3.33142400]
[206.45095825 -7.89717913]
[218.32302856 -11.72050571]
[229.26179504 -6.61339998]
[243.48500061 -11.37789917]
[250.59469604 -17.04953575]
[257.89660645 -16.11478615]
[272.17294312 -20.71767044]
[286.44924927 -25.32055473]
[300.72558594 -29.92343712]
[315.00189209 -34.52632141]
[317.10034180 -50.67942429]
[326.00897217 -64.24655914]
[339.89724731 -72.53262329]
[355.95156860 -73.91822052]
[370.94534302 -68.17594147]
[381.88735962 -56.50584030]
[396.11056519 -61.27033615]
[400.64288330 -76.11074829]
[413.05282593 -85.42594910]
[428.56851196 -85.63406372]
[441.22381592 -76.65506744]
[446.15255737 -61.94156647]
[441.45953369 -47.15119934]
[428.94924927 -37.97116852]
[413.43225098 -37.93137741]
[400.87506104 -47.04713440]
[386.65185547 -42.28263474]
[385.59835815 -28.46963882]
[379.34634399 -16.05908012]
[368.80795288 -6.93463945]
[355.54849243 -2.49523139]
[341.55419922 -3.44060349]
[328.93469238 -9.66125870]
[319.60479736 -20.24999619]
[305.32846069 -15.64711285]
[291.05212402 -11.04422855]
[276.77581787 -6.44134521]
[262.49948120 -1.83846140]
[248.24949646 2.84530544]
[234.02629089 7.60980463]
[223.10334778 21.36600685]
[205.08140564 17.49967766]
[190.91314697 22.42518044]
[176.74488831 27.35068130]
[162.57664490 32.27618408]
[148.40838623 37.20168304]
[174.27462769 95.05316925]
[149.41828918 148.99272156]
[96.25676727 164.62802124]
[100.45307159 179.02909851]
[104.64937592 193.43017578]
[108.84567261 207.83125305]
[113.04197693 222.23233032]
[117.23827362 236.63340759]
[129.59300232 237.52165222]
[141.03950500 242.18109131]
[150.45928955 250.13760376]
[156.93772888 260.59588623]
[159.85287476 272.51882935]
[158.93511963 284.73043823]
[154.29203796 296.03173828]
[146.39608765 305.31857300]
[153.87152100 318.32308960]
[161.34695435 331.32763672]
[168.82238770 344.33215332]
[176.29780579 357.33670044]
[183.77323914 370.34124756]
[197.35873413 378.44958496]
[196.99351501 393.33972168]
[204.46894836 406.34423828]
[218.05442810 414.45257568]
[217.68922424 429.34271240]
[225.16465759 442.34725952]
[232.64009094 455.35177612]
[246.22557068 463.46011353]
[245.86035156 478.35025024]
[252.82250977 484.20205688]
[253.34587097 491.54495239]
[260.67333984 504.63342285]
[275.94979858 508.68374634]
[283.81552124 522.39160156]
[279.60391235 537.62438965]
[265.81362915 545.34478760]
[250.62622070 540.97235107]
[243.05209351 527.10119629]
[247.58485413 511.96087646]
[240.25738525 498.87240601]
[232.85581970 485.82568359]
[219.80503845 478.64752197]
[219.63554382 462.82720947]
[212.16012573 449.82269287]
[204.68469238 436.81814575]
[191.63389587 429.63998413]
[191.46441650 413.81967163]
[183.98898315 400.81512451]
[170.93818665 393.63696289]
[170.76870728 377.81668091]
[163.29327393 364.81213379]
[155.81784058 351.80758667]
[148.34242249 338.80307007]
[140.86698914 325.79852295]
[133.39155579 312.79400635]
[129.71545410 313.84368896]
[125.95395660 314.52685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[26 226]
[27 225]
[28 224]
[29 223]
[30 222]
[31 221]
[43 52]
[44 51]
[45 50]
[58 67]
[59 66]
[60 65]
[69 88]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[119 140]
[120 139]
[121 138]
[122 137]
[125 136]
[126 135]
[127 134]
[128 133]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
[146 151]
[168 218]
[169 217]
[170 216]
[171 215]
[172 214]
[175 212]
[176 211]
[178 210]
[179 209]
[180 208]
[181 207]
[182 206]
[188 199]
[189 198]
[234 274]
[235 273]
[236 272]
[237 271]
[238 270]
[239 269]
[241 267]
[242 266]
[244 264]
[245 263]
[246 262]
[248 260]
[250 259]
[251 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
