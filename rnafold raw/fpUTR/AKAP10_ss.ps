%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGAAGCCUAGCGCGGGGAAGGACCGGAACUCCGGGCGGGCGGCUUGUUGAUAAUAUGGCGGCUGGAGCUGCCUGGGCAUCCCGAGGAGGCGGUGGGGCCCACUCCCGGAAGAAGGGUCCCUUUUCGCGCUAGUGCAGCGGCCCCUCUGGACCCGGAAGUCCGGGCCGGUUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[336.44381714 527.10797119]
[324.14855957 518.51574707]
[318.33419800 504.68850708]
[320.79437256 489.89163208]
[330.77017212 478.68966675]
[345.18423462 474.53820801]
[359.58807373 478.71658325]
[351.11743164 466.33721924]
[342.53790283 454.03308105]
[333.85012817 441.80514526]
[325.16235352 429.57720947]
[316.47457886 417.34927368]
[307.78680420 405.12133789]
[299.09899902 392.89340210]
[290.41122437 380.66546631]
[281.72344971 368.43750000]
[273.03567505 356.20956421]
[264.34790039 343.98162842]
[255.66012573 331.75369263]
[246.97233582 319.52575684]
[233.29347229 313.63186646]
[231.60803223 297.90069580]
[222.92025757 285.67276001]
[214.23248291 273.44482422]
[205.54469299 261.21688843]
[196.85691833 248.98893738]
[182.17182922 251.59921265]
[167.75036621 247.55805969]
[156.46742249 237.61541748]
[150.59629822 223.70320129]
[151.35084534 208.55995178]
[158.63491821 195.19194031]
[149.94714355 182.96400452]
[141.25935364 170.73606873]
[132.57157898 158.50813293]
[123.88379669 146.28018188]
[115.19602203 134.05224609]
[101.51715851 128.15835571]
[99.83171844 112.42718506]
[73.42356110 111.04104614]
[59.86018753 104.63520050]
[46.29681396 98.22935486]
[32.73344040 91.82350922]
[19.17006493 85.41766357]
[5.60669088 79.01181793]
[-7.95668411 72.60597229]
[-21.52005768 66.20011902]
[-35.19437408 60.03464508]
[-48.97537231 54.11146164]
[-62.75636673 48.18827820]
[-76.53736877 42.26509094]
[-89.26727295 50.98019791]
[-104.68873596 51.40666580]
[-117.88083649 43.40840912]
[-124.63401031 29.53764153]
[-122.79335022 14.22047710]
[-112.94620514 2.34456611]
[-98.23476410 -2.30053115]
[-83.35338593 1.76741862]
[-73.05067444 13.25034714]
[-70.61418152 28.48409462]
[-56.83318329 34.40727997]
[-43.05218506 40.33046341]
[-29.27118874 46.25365067]
[-24.55645943 45.33539581]
[-19.21726227 47.39044952]
[-15.11421204 52.63674927]
[-1.55083728 59.04259491]
[12.01253700 65.44844055]
[25.57591248 71.85428619]
[39.13928604 78.26013184]
[52.70265961 84.66597748]
[66.26603699 91.07183075]
[79.82940674 97.47767639]
[92.50000000 89.44921112]
[92.50000000 74.44921112]
[92.50000000 59.44921494]
[92.50000000 44.44921494]
[92.50000000 29.44921494]
[84.76270294 15.64904213]
[92.50000000 2.92177057]
[92.50000000 -12.07822990]
[92.36763000 -27.07764626]
[92.10290527 -42.07530975]
[91.83818054 -57.07297134]
[80.29473114 -67.86762238]
[79.84875488 -83.66561890]
[90.76484680 -95.09429169]
[106.56667328 -95.37320709]
[117.87929535 -84.33689880]
[117.99113464 -68.53300476]
[106.83583832 -57.33769989]
[107.10057068 -42.34003830]
[107.36529541 -27.34237289]
[110.63700104 -20.68997002]
[107.50000000 -12.07822990]
[107.50000000 2.92177057]
[115.23729706 15.64904213]
[107.50000000 29.44921494]
[107.50000000 44.44921494]
[107.50000000 59.44921494]
[107.50000000 74.44921112]
[107.50000000 89.44921112]
[112.05965424 103.73940277]
[126.35992432 110.50791931]
[127.42395782 125.36447144]
[136.11174011 137.59240723]
[144.79951477 149.82034302]
[153.48728943 162.04829407]
[162.17507935 174.27622986]
[170.86285400 186.50416565]
[185.88336182 184.02508545]
[200.43141174 188.29603577]
[211.63659668 198.41848755]
[217.31231689 212.34498596]
[216.38244629 227.29306030]
[209.08485413 240.30116272]
[217.77264404 252.52909851]
[226.46041870 264.75704956]
[235.14819336 276.98498535]
[243.83596802 289.21292114]
[258.13626099 295.98141479]
[259.20028687 310.83798218]
[267.88806152 323.06591797]
[276.57583618 335.29385376]
[285.26361084 347.52178955]
[293.95138550 359.74972534]
[302.63916016 371.97766113]
[311.32696533 384.20562744]
[320.01473999 396.43356323]
[328.70251465 408.66149902]
[337.39028931 420.88943481]
[346.07806396 433.11737061]
[354.76583862 445.34530640]
[362.31091309 450.54867554]
[363.49679565 457.86660767]
[371.96743774 470.24597168]
[381.39349365 481.91424561]
[391.71563721 492.79791260]
[402.03775024 503.68154907]
[412.35986328 514.56518555]
[422.68197632 525.44885254]
[433.00408936 536.33251953]
[443.32620239 547.21618652]
[446.49694824 532.55511475]
[459.85494995 525.73132324]
[473.59228516 531.75500488]
[477.62258911 546.20343018]
[468.98666382 558.46807861]
[454.02557373 559.54388428]
[463.34832764 571.29492188]
[471.15820312 576.09167480]
[472.72970581 583.33654785]
[481.84362793 595.25030518]
[490.95751953 607.16400146]
[500.07144165 619.07769775]
[509.18536377 630.99145508]
[524.52648926 636.78637695]
[526.91113281 653.01123047]
[513.88616943 662.97521973]
[498.85052490 656.42828369]
[497.27163696 640.10534668]
[488.15771484 628.19165039]
[479.04382324 616.27789307]
[469.92990112 604.36419678]
[460.81600952 592.45050049]
[451.59732056 580.61767578]
[442.27456665 568.86663818]
[432.44256592 557.53826904]
[422.12045288 546.65460205]
[411.79830933 535.77099609]
[401.47619629 524.88732910]
[391.15408325 514.00366211]
[380.83197021 503.12002563]
[370.50985718 492.23635864]
[371.56646729 507.19909668]
[364.47653198 520.41778564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 137]
[8 136]
[9 134]
[10 133]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[20 123]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[32 111]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[39 104]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 64]
[49 63]
[50 62]
[51 61]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[81 97]
[82 96]
[83 94]
[84 93]
[85 92]
[138 175]
[139 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[150 168]
[151 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
