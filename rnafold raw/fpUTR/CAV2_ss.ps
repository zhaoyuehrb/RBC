%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUCGGGACGGCCGGGCUGGGAGCUGGAGCCCACAGCGGGAAGCGGCCGCCGCCCGGGCCUCGCAGGGCUAGGCGAGGCGAGGGGGGGCGGGGCCGGGCGCUACGGGAAGGGGAGGCCGCGCGGACCGGGAGCCGCACCGCGCCAGCCGGGCUGCAGCGGCCGCGCACCAAGGCUGCG\
) } def
/len { sequence length } bind def

/coor [
[82.31338501 93.93517303]
[68.68852997 100.20919037]
[55.06367111 106.48320770]
[41.43881607 112.75722504]
[27.81395912 119.03124237]
[14.18910313 125.30525970]
[0.56424654 131.57928467]
[-13.06060982 137.85330200]
[-26.68546677 144.12731934]
[-40.31032181 150.40132141]
[-46.81706619 156.85002136]
[-54.22492981 156.66378784]
[-67.95604706 162.70169067]
[-81.68717194 168.73960876]
[-95.41828918 174.77751160]
[-99.65691376 179.90599060]
[-105.04358673 181.81723022]
[-109.72912598 180.77774048]
[-123.66046906 186.33810425]
[-137.59181213 191.89846802]
[-151.52316284 197.45883179]
[-165.45449829 203.01919556]
[-169.34515381 221.73136902]
[-183.59465027 234.24284363]
[-202.35443115 235.65792847]
[-218.06753540 225.58708191]
[-231.69238281 231.86109924]
[-245.31724548 238.13511658]
[-258.94210815 244.40913391]
[-262.88696289 259.54095459]
[-275.66531372 268.55468750]
[-291.24362183 267.19433594]
[-302.26626587 256.10223389]
[-303.52871704 240.51568604]
[-294.43484497 227.79421997]
[-279.27853394 223.94450378]
[-265.21612549 230.78428650]
[-251.59126282 224.51026917]
[-237.96640015 218.23625183]
[-224.34155273 211.96223450]
[-224.26229858 200.76327515]
[-219.97880554 190.35997009]
[-212.07783508 182.27844238]
[-201.67980957 177.71972656]
[-190.27998352 177.38136292]
[-179.53344727 181.35095215]
[-171.01486206 189.08786011]
[-157.08352661 183.52748108]
[-143.15217590 177.96711731]
[-129.22084045 172.40675354]
[-115.28948975 166.84638977]
[-101.45619965 161.04638672]
[-87.72507477 155.00848389]
[-73.99395752 148.97056580]
[-60.26283646 142.93266296]
[-46.58433914 136.77647400]
[-32.95948410 130.50245667]
[-19.33462715 124.22843933]
[-5.70977068 117.95442200]
[7.91508579 111.68040466]
[21.53994179 105.40638733]
[35.16479874 99.13237000]
[48.78965378 92.85835266]
[62.41451263 86.58433533]
[76.03936768 80.31031799]
[88.08265686 71.36833191]
[98.02949524 60.14067078]
[107.97634125 48.91300964]
[109.68129730 42.48180389]
[113.77474213 38.49271393]
[118.46550751 37.47710037]
[128.79396057 26.59945679]
[139.12240601 15.72181225]
[143.01379395 0.38663360]
[157.38822937 -3.51526189]
[167.71667480 -14.39290619]
[178.04512024 -25.27055168]
[178.49606323 -38.17778778]
[187.34432983 -47.02689743]
[199.44973755 -47.44992828]
[209.96440125 -58.14767838]
[220.47906494 -68.84542847]
[230.99372864 -79.54317474]
[235.14923096 -94.80889893]
[249.58888245 -98.46210480]
[260.10354614 -109.15985107]
[264.25903320 -124.42557526]
[278.69869995 -128.07878113]
[282.85418701 -143.34451294]
[297.29382324 -146.99771118]
[307.80850220 -157.69544983]
[318.32315063 -168.39320374]
[317.42095947 -187.29652405]
[330.38085938 -200.64674377]
[348.66531372 -200.31692505]
[358.80447388 -211.37123108]
[368.84783936 -222.51261902]
[378.79467773 -233.74028015]
[388.74151611 -244.96794128]
[392.10128784 -260.42831421]
[406.33248901 -264.82403564]
[416.27932739 -276.05169678]
[426.22616577 -287.27935791]
[436.07571411 -298.59243774]
[445.82727051 -309.99011230]
[448.91967773 -325.50616455]
[463.07287598 -330.14685059]
[459.33267212 -345.20642090]
[465.18978882 -359.57562256]
[478.39199829 -367.72921753]
[493.86282349 -366.53198242]
[505.65338135 -356.44427490]
[509.23001099 -341.34503174]
[503.21737671 -327.04019165]
[489.92749023 -319.03030396]
[474.47055054 -320.39529419]
[472.07565308 -305.69448853]
[457.22497559 -300.23855591]
[447.47338867 -288.84088135]
[445.50894165 -281.69580078]
[437.45382690 -277.33251953]
[427.50698853 -266.10485840]
[417.56015015 -254.87718201]
[414.91183472 -240.21990967]
[399.96917725 -235.02110291]
[390.02233887 -223.79344177]
[380.07550049 -212.56578064]
[377.98800659 -205.45568848]
[369.85876465 -201.23207092]
[359.71963501 -190.17778015]
[362.67446899 -179.12672424]
[359.88748169 -167.90844727]
[351.94116211 -159.34907532]
[340.73251343 -155.66252136]
[329.02090454 -157.87854004]
[318.50625610 -147.18078613]
[307.99157715 -136.48304749]
[304.58816528 -121.98249054]
[289.39642334 -117.56411743]
[285.99301147 -103.06356049]
[270.80130005 -98.64518738]
[260.28662109 -87.94744110]
[256.88320923 -73.44688416]
[241.69148254 -69.02851105]
[231.17681885 -58.33076096]
[220.66215515 -47.63301468]
[210.14747620 -36.93526459]
[206.68797302 -19.74190140]
[188.92277527 -14.94210243]
[178.59432983 -4.06445789]
[168.26586914 6.81318665]
[165.11325073 21.37032318]
[150.00004578 26.05026054]
[139.67160034 36.92790604]
[129.34315491 47.80554962]
[119.20400238 58.85984802]
[109.25715637 70.08750916]
[99.31031799 81.31517029]
[115.13039398 92.12901306]
[112.28562164 109.30709076]
[118.32353210 123.03820801]
[124.36143494 136.76933289]
[130.39935303 150.50044250]
[136.43725586 164.23156738]
[142.47515869 177.96269226]
[157.72869873 180.27204895]
[169.29714966 190.47863770]
[173.48907471 205.32557678]
[168.96682739 220.07524109]
[157.17344666 230.02108765]
[141.87216187 231.98942566]
[127.94556427 225.35215759]
[119.83756256 212.22723389]
[120.13540649 196.80273438]
[128.74404907 184.00059509]
[122.70613861 170.26947021]
[116.66822815 156.53836060]
[110.63031769 142.80723572]
[104.59240723 129.07611084]
[98.55450439 115.34499359]
[89.41182709 112.66483307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[5 61]
[6 60]
[7 59]
[8 58]
[9 57]
[10 56]
[12 55]
[13 54]
[14 53]
[15 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[26 40]
[27 39]
[28 38]
[29 37]
[66 158]
[67 157]
[68 156]
[71 155]
[72 154]
[73 153]
[75 151]
[76 150]
[77 149]
[80 147]
[81 146]
[82 145]
[83 144]
[85 142]
[86 141]
[88 139]
[90 137]
[91 136]
[92 135]
[95 130]
[96 129]
[97 127]
[98 126]
[99 125]
[101 123]
[102 122]
[103 121]
[104 119]
[105 118]
[107 116]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
