%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGCUCCGCGGCCGUGUGGAGCGAGGCCUUGUUCCCGCGUUGAGCCGCCGCCGCCGCCGCCGCCUCCUCAGCUUCAGCCUCCGCGCCAGGCCCGGCCCCGCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[125.77035522 453.06466675]
[111.76805115 445.23428345]
[109.30207062 429.38189697]
[120.26410675 417.66809082]
[121.11273193 402.69210815]
[121.96135712 387.71612549]
[122.80998230 372.74017334]
[109.56786346 353.73696899]
[121.57220459 333.12414551]
[119.87767029 318.22015381]
[118.18313599 303.31619263]
[114.24307251 296.93255615]
[116.65769196 287.96728516]
[115.38560486 273.02130127]
[114.11351776 258.07534790]
[112.84142303 243.12937927]
[111.14689636 228.22540283]
[109.03127289 213.37535095]
[106.91565704 198.52529907]
[104.80003357 183.67523193]
[102.68441010 168.82518005]
[100.56879425 153.97512817]
[98.45317078 139.12507629]
[96.33755493 124.27501678]
[94.01200867 109.45638275]
[91.26803589 94.70949554]
[88.31566620 80.00292206]
[85.36328888 65.29634094]
[82.41091156 50.58975983]
[79.45854187 35.88317871]
[75.23657990 30.48868942]
[74.58721161 24.65561485]
[76.78005219 20.26218796]
[74.66442871 5.41213179]
[60.17871094 0.72968602]
[49.20721054 -9.73516655]
[43.88909149 -23.86802864]
[45.22904205 -38.84686661]
[52.90793991 -51.70547867]
[65.35673523 -59.92089462]
[63.24111176 -74.77095032]
[61.12549210 -89.62100983]
[51.51914215 -102.19194794]
[57.38402557 -115.88327789]
[55.26840591 -130.73333740]
[50.90278244 -138.92771912]
[53.30921555 -146.03292847]
[51.61468506 -160.93690491]
[42.36792374 -173.77465820]
[48.61790848 -187.29452515]
[46.92337418 -202.19850159]
[36.74217606 -215.05444336]
[43.03586578 -230.19781494]
[59.33003616 -232.05041504]
[68.86264038 -218.70643616]
[61.82735443 -203.89303589]
[63.52188492 -188.98905945]
[72.64744568 -177.21734619]
[66.51866150 -162.63143921]
[68.21319580 -147.72746277]
[70.11846161 -132.84895325]
[72.23408508 -117.99889374]
[81.68910980 -106.49012756]
[75.97554779 -91.73662567]
[78.09117126 -76.88657379]
[80.20678711 -62.03651428]
[94.45455933 -57.62443924]
[105.41888428 -47.42184067]
[110.88855743 -33.41313934]
[109.72880554 -18.35740280]
[102.11625671 -5.24496508]
[89.51448822 3.29651165]
[91.63011169 18.14656639]
[94.16512299 32.93080521]
[97.11749268 47.63738632]
[100.06987000 62.34396362]
[103.02223969 77.05054474]
[105.97461700 91.75712585]
[110.58434296 98.52500153]
[108.79624176 106.92137146]
[113.39201355 114.98894501]
[111.18760681 122.15939331]
[113.30323029 137.00944519]
[115.41884613 151.85951233]
[117.53446960 166.70956421]
[119.65009308 181.55961609]
[121.76570892 196.40966797]
[123.88133240 211.25973511]
[125.99694824 226.10978699]
[129.90695190 231.73449707]
[130.22528076 237.59497070]
[127.78739166 241.85729980]
[129.05947876 256.80325317]
[130.33157349 271.74920654]
[131.60365295 286.69519043]
[133.08711243 301.62164307]
[134.78164673 316.52563477]
[136.47618103 331.42959595]
[143.15200806 334.34353638]
[148.50225830 339.20913696]
[151.98439026 345.48776245]
[153.25994873 352.50006104]
[152.22711182 359.49938965]
[149.02813721 365.75137329]
[144.03068542 370.61093140]
[137.78594971 373.58877563]
[136.93733215 388.56475830]
[136.08869934 403.54074097]
[135.24008179 418.51672363]
[144.80863953 431.39392090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 109]
[5 108]
[6 107]
[7 106]
[9 98]
[10 97]
[11 96]
[13 95]
[14 94]
[15 93]
[16 92]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[24 82]
[25 80]
[26 78]
[27 77]
[28 76]
[29 75]
[30 74]
[33 73]
[34 72]
[40 66]
[41 65]
[42 64]
[44 62]
[45 61]
[47 60]
[48 59]
[50 57]
[51 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
