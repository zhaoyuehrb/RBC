%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGACGUGGGACGGGAAGGACGGCUGCCGGGACUGGCGCGCGGGGACACUGGGCCGACGCGUGGAGUAGCGGGGAGAGCGGGAAGCCUGAGGGGGCGGGGCCGGCGCGAGGCCGUGGGUGCGGCACGAGGAUGCCGGCGGCGGGACAGCGCCCGUAGGCAGCCCCACGGGCAGGGCGCGCGGGCGGGGCGGGGCGGGCCGGGCCAGAGGAGCGCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[70.04598999 345.93530273]
[62.72888565 332.84100342]
[55.22962189 332.73580933]
[48.15867233 345.96463013]
[41.08772278 359.19345093]
[34.01676941 372.42227173]
[26.94581985 385.65109253]
[27.26415253 401.46908569]
[14.44086838 409.04620361]
[7.36991739 422.27502441]
[0.29896641 435.50384521]
[9.34654617 447.79629517]
[12.15620518 462.79855347]
[8.17008400 477.53198242]
[-1.82037091 489.07119751]
[-15.83154678 495.12509155]
[-31.08151436 494.49166870]
[-44.54238129 487.29669189]
[-53.54148483 474.96871948]
[-56.29204559 459.95547485]
[-52.24793243 445.23788452]
[-42.21211624 433.73809814]
[-28.17720795 427.73941040]
[-12.92985249 428.43289185]
[-5.85890150 415.20407104]
[1.21204960 401.97525024]
[0.38795432 387.10345459]
[13.71700001 378.58013916]
[20.78795052 365.35131836]
[27.85890198 352.12249756]
[34.92985153 338.89367676]
[42.00080490 325.66485596]
[48.91472244 316.92572021]
[57.16031647 311.12973022]
[65.78391266 308.36318970]
[73.87587738 308.43963623]
[80.64275360 310.92742920]
[81.48381042 295.95104980]
[74.47230530 282.80996704]
[82.97121429 269.46533203]
[83.81227112 254.48892212]
[76.80076599 241.34783936]
[85.29967499 228.00321960]
[86.14073181 213.02680969]
[86.98178864 198.05041504]
[87.82284546 183.07400513]
[80.81134033 169.93292236]
[89.31024933 156.58830261]
[79.22470093 145.68797302]
[79.86430359 130.48777771]
[91.36595917 119.98303223]
[81.64973450 111.71051788]
[78.23937225 99.41381073]
[64.30204010 93.86847687]
[48.61914062 95.95586395]
[39.65391922 84.06157684]
[25.28191757 90.06851959]
[11.22647381 84.24622345]
[5.58834171 70.50769806]
[-8.78365803 76.51464081]
[-22.83910179 70.69234467]
[-28.47723389 56.95381927]
[-44.16013718 59.04120636]
[-53.12535858 47.14691925]
[-67.06269073 41.60158920]
[-81.00003052 36.05625534]
[-95.41405487 42.53787613]
[-110.15964508 36.85078812]
[-116.48851013 22.36903954]
[-110.64584351 7.68439579]
[-96.09799194 1.50899494]
[-81.47594452 7.50659275]
[-75.45469666 22.11892128]
[-61.51736069 27.66425323]
[-47.58002472 33.20958710]
[-32.89401627 30.72555923]
[-22.93190193 43.01648712]
[-9.39657021 36.90662384]
[4.81686354 42.33183670]
[11.13367462 56.57036591]
[24.66900635 50.46050644]
[38.88243866 55.88571930]
[45.19924927 70.12424469]
[59.88526154 67.64022064]
[69.84737396 79.93114471]
[83.78470612 85.47647858]
[89.74555206 80.79805756]
[96.94893646 78.44635773]
[104.52202606 78.70634460]
[112.50250244 66.00548553]
[120.48298645 53.30461884]
[128.46347046 40.60375595]
[136.44395447 27.90289497]
[134.33972168 15.18378353]
[141.24050903 4.77168894]
[152.99554443 1.94280684]
[161.15336609 -10.64488506]
[169.31118774 -23.23257637]
[177.46900940 -35.82026672]
[185.62683105 -48.40795898]
[182.74667358 -58.88435745]
[186.03483582 -69.00944519]
[194.17816162 -75.52033234]
[204.34164429 -76.45903015]
[212.84928894 -88.81297302]
[221.35693359 -101.16691589]
[229.51475525 -113.75460815]
[237.31632996 -126.56613922]
[245.11790466 -139.37768555]
[252.91947937 -152.18920898]
[260.72103882 -165.00074768]
[253.47534180 -178.47097778]
[253.94175720 -193.65910339]
[261.89498901 -206.48925781]
[275.11392212 -213.56848145]
[290.00119019 -213.08381653]
[297.80276489 -225.89535522]
[305.60433960 -238.70689392]
[313.40591431 -251.51843262]
[313.97500610 -267.32940674]
[327.20297241 -274.17556763]
[324.03012085 -284.56707764]
[327.03302002 -294.78039551]
[334.99053955 -301.51712036]
[345.12368774 -302.74050903]
[353.28149414 -315.32818604]
[361.43933105 -327.91589355]
[369.59713745 -340.50357056]
[377.75497437 -353.09124756]
[374.20993042 -368.49282837]
[382.66445923 -381.84558105]
[398.10263062 -385.22760010]
[411.36526489 -376.63235474]
[414.58386230 -361.15930176]
[405.84890747 -347.98828125]
[390.34265137 -344.93344116]
[382.18484497 -332.34576416]
[374.02700806 -319.75805664]
[365.86920166 -307.17037964]
[357.71136475 -294.58267212]
[358.12271118 -275.24545288]
[340.01449585 -266.37402344]
[340.00341797 -251.47940063]
[326.21743774 -243.71685791]
[318.41586304 -230.90531921]
[310.61428833 -218.09378052]
[302.81271362 -205.28224182]
[310.07629395 -192.27816772]
[309.85406494 -177.28462219]
[302.10552979 -164.32981873]
[288.82580566 -156.94433594]
[273.53259277 -157.19917297]
[265.73101807 -144.38764954]
[257.92944336 -131.57611084]
[250.12786865 -118.76457214]
[242.32629395 -105.95303345]
[242.84967041 -103.20819092]
[242.32250977 -100.09152985]
[240.59811401 -97.00026703]
[237.67547607 -94.37722015]
[233.71087646 -92.65926361]
[225.20323181 -80.30532074]
[216.69558716 -67.95137787]
[216.56442261 -48.61023331]
[198.21452332 -40.25014114]
[190.05670166 -27.66244888]
[181.89888000 -15.07475662]
[173.74105835 -2.48706508]
[165.58323669 10.10062695]
[165.62243652 27.65357780]
[149.14480591 35.88337708]
[141.16433716 48.58423996]
[133.18385315 61.28510284]
[125.20336914 73.98596191]
[117.22288513 86.68682861]
[120.74050140 106.61059570]
[106.34236145 120.82408905]
[116.59553528 132.55056763]
[115.52924347 147.72679138]
[104.28665161 157.42935181]
[111.23799896 171.64164734]
[102.79924774 183.91506958]
[101.95819092 198.89146423]
[101.11713409 213.86787415]
[100.27607727 228.84426880]
[107.22742462 243.05656433]
[98.78867340 255.32998657]
[97.94761658 270.30639648]
[104.89896393 284.51867676]
[96.46021271 296.79208374]
[95.61915588 311.76849365]
[98.64860535 326.45941162]
[105.34574890 339.88131714]
[118.43050385 348.77511597]
[117.18963623 363.61795044]
[123.88678741 377.03988647]
[130.58393860 390.46182251]
[137.28109741 403.88375854]
[143.97824097 417.30566406]
[158.69731140 422.40338135]
[165.29797363 436.11053467]
[160.34739685 450.11151123]
[167.04454041 463.53341675]
[182.37121582 465.95678711]
[193.32250977 476.94992065]
[195.68743896 492.28570557]
[188.55662537 506.06726074]
[174.67201233 512.99530029]
[159.37252808 510.40579224]
[148.54113770 499.29452515]
[146.34271240 483.93395996]
[153.62260437 470.23059082]
[146.92546082 456.80865479]
[132.76165771 452.34518433]
[125.77860260 438.82885742]
[130.55630493 424.00283813]
[123.85916138 410.58090210]
[117.16201019 397.15896606]
[110.46485901 383.73703003]
[103.76770782 370.31509399]
[91.16197968 362.38131714]
[91.92382050 346.57849121]
[85.22666931 333.15655518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[9 26]
[10 25]
[11 24]
[37 191]
[38 190]
[40 188]
[41 187]
[43 185]
[44 184]
[45 183]
[46 182]
[48 180]
[51 177]
[53 86]
[54 85]
[56 83]
[59 80]
[62 77]
[64 75]
[65 74]
[66 73]
[89 175]
[90 174]
[91 173]
[92 172]
[93 171]
[96 169]
[97 168]
[98 167]
[99 166]
[100 165]
[104 163]
[105 162]
[106 161]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[116 147]
[117 146]
[118 145]
[119 144]
[121 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[192 223]
[193 222]
[195 220]
[196 219]
[197 218]
[198 217]
[199 216]
[202 213]
[203 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
