%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCUGUCCUGCGCGCGCAGAUUCGCGCAGACCAGGAAGUGGAUCCCGUGGAAUGACGGUCACGCCGCGGCGGGCGGAUUGACUUCUAAAGACUGUUGGUACGUGAGAAAGAAACCCAGAAGAGGAAGAGGAAAGCAAAGGAGUCAGGG\
) } def
/len { sequence length } bind def

/coor [
[187.23030090 221.92137146]
[177.77444458 210.27719116]
[168.31857300 198.63302612]
[158.86271667 186.98884583]
[149.40686035 175.34468079]
[139.95100403 163.70051575]
[130.49514771 152.05633545]
[116.46569061 147.05395508]
[113.77249146 131.46366882]
[104.31662750 119.81949615]
[89.39665222 118.27212524]
[77.75248718 127.72798157]
[66.10831451 137.18383789]
[54.46414185 146.63969421]
[42.81996918 156.09556580]
[31.17579842 165.55142212]
[19.53162766 175.00727844]
[20.49951935 190.49414062]
[12.15121269 203.57409668]
[-2.30319571 209.21765137]
[-17.30569267 205.25473022]
[-27.08751106 193.20916748]
[-27.88734245 177.71272278]
[-19.39763641 164.72409058]
[-4.88285589 159.23767090]
[10.07576847 163.36311340]
[21.71994019 153.90724182]
[33.36410904 144.45138550]
[45.00828171 134.99552917]
[56.65245438 125.53967285]
[68.29662323 116.08380890]
[79.94079590 106.62795258]
[83.92280579 92.16615295]
[78.76014709 78.08258820]
[73.59749603 63.99901581]
[68.43483734 49.91544342]
[61.98649597 36.37221909]
[54.30821991 23.48641014]
[46.62994385 10.60060024]
[38.95166779 -2.28520918]
[31.27339363 -15.17101860]
[23.59511757 -28.05682755]
[9.88425732 -35.95131302]
[10.01611614 -50.84533310]
[2.33784008 -63.73114395]
[-5.34043550 -76.61695099]
[-13.01871109 -89.50276184]
[-20.69698715 -102.38857269]
[-30.50924301 -113.73403931]
[-42.15341568 -123.18989563]
[-53.79758835 -132.64575195]
[-69.48973083 -130.76632690]
[-81.86289978 -140.59893799]
[-83.57631683 -156.31007385]
[-73.61344147 -168.57859802]
[-57.88507080 -170.12580872]
[-45.72256470 -160.03378296]
[-44.34172821 -144.28993225]
[-32.69755554 -134.83407593]
[-21.05338478 -125.37821198]
[-8.58134079 -133.71176147]
[-12.86138344 -148.08818054]
[-17.14142799 -162.46458435]
[-22.62260818 -169.85243225]
[-21.35806084 -177.18249512]
[-25.34007454 -191.64428711]
[-29.32208824 -206.10607910]
[-41.37125397 -217.23036194]
[-37.49847031 -233.16566467]
[-21.68772888 -237.51910400]
[-10.20376110 -225.81224060]
[-14.86029053 -210.08810425]
[-10.87827682 -195.62629700]
[-6.89626360 -181.16450500]
[-2.76501489 -166.74462891]
[1.51502848 -152.36822510]
[5.79507208 -137.99180603]
[-7.81117773 -110.06684875]
[-0.13290213 -97.18103790]
[7.54537344 -84.29522705]
[15.22364902 -71.40941620]
[22.90192413 -58.52360916]
[36.06358337 -51.55080414]
[36.48092651 -35.73510361]
[44.15920258 -22.84929466]
[51.83747864 -9.96348476]
[59.51575470 2.92232418]
[67.19403076 15.80813408]
[74.87230682 28.69394302]
[77.42498016 13.91274357]
[87.45474243 2.75909686]
[101.88285828 -1.34327114]
[116.28047180 2.86490297]
[126.22808838 14.09187794]
[128.67218018 28.89141846]
[122.86251831 42.72065353]
[110.58242798 51.33456421]
[95.60141754 52.08901596]
[82.51840210 44.75278473]
[87.68106079 58.83635712]
[92.84371948 72.91992950]
[98.00637817 87.00349426]
[102.45214844 86.22782898]
[107.16944885 87.01927948]
[111.59487915 89.46030426]
[115.14552307 93.42901611]
[117.29299927 98.59735107]
[117.63583374 104.45587921]
[115.96080017 110.36363220]
[125.41666412 122.00780487]
[140.12245178 127.84305573]
[142.13931274 142.60047913]
[151.59516907 154.24464417]
[161.05102539 165.88882446]
[170.50689697 177.53298950]
[179.96275330 189.17716980]
[189.41860962 200.82133484]
[198.87446594 212.46551514]
[212.01623535 205.15353394]
[226.22813416 200.23486328]
[241.07824707 197.85897827]
[256.11532593 198.09806824]
[270.88241577 200.94488525]
[284.93075562 206.31289673]
[297.83340454 214.03898621]
[309.19830322 223.88836670]
[318.68005371 235.56173706]
[325.99053955 248.70433044]
[330.90762329 262.91677856]
[333.28179932 277.76718140]
[333.04101562 292.80422974]
[330.19253540 307.57098389]
[324.82290649 321.61871338]
[317.09536743 334.52050781]
[307.24468994 345.88427734]
[295.57025146 355.36471558]
[282.42681885 362.67370605]
[268.21383667 367.58914185]
[253.36315918 369.96166992]
[238.32612610 369.71917725]
[223.55969238 366.86901855]
[209.51257324 361.49780273]
[196.61166382 353.76876831]
[185.24900818 343.91680908]
[175.76989746 332.24130249]
[168.46238708 319.09704590]
[163.54855347 304.88348389]
[161.17771912 290.03256226]
[161.42193604 274.99554443]
[164.27377319 260.22943115]
[169.64656067 246.18293762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[3 116]
[4 115]
[5 114]
[6 113]
[7 112]
[9 110]
[10 109]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[33 102]
[34 101]
[35 100]
[36 99]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[49 60]
[50 59]
[51 58]
[61 77]
[62 76]
[63 75]
[65 74]
[66 73]
[67 72]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
