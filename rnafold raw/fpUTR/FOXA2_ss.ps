%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCACUUCCAACUACCGCCUCCGGCCUGCCCAGGGAGAGAGAGGGAGUGGAGCCCAGGGAGAGGGAGCGCGAGAGAGGGAGGGAGGAGGGGACGGUGCUUUGGCUGACUUUUUUUUAAAAGAGGGUGGGGGUGGGGGGUGAUUGCUGGUCGUUUGUUGUGGCUGUUAAAUUUUAAACUGCC\
) } def
/len { sequence length } bind def

/coor [
[178.09309387 178.37306213]
[166.54832458 168.79608154]
[155.00357056 159.21911621]
[143.45880127 149.64215088]
[131.91403198 140.06518555]
[120.36925507 130.48822021]
[108.82448578 120.91124725]
[92.62802887 117.65116119]
[85.55071259 105.77487946]
[70.55927277 105.26826477]
[55.56782913 104.76165009]
[40.57638550 104.25504303]
[25.58494377 103.74842834]
[14.09021568 114.26075745]
[-1.10602200 113.53341675]
[-11.05708027 102.51016998]
[-26.04852295 102.00355530]
[-37.54325104 112.51588440]
[-52.73948669 111.78855133]
[-62.69054413 100.76529694]
[-77.68198395 100.25868988]
[-92.67343140 99.75207520]
[-107.66861725 99.37208557]
[-122.66647339 99.11874390]
[-137.66433716 98.86540222]
[-152.66220093 98.61206055]
[-161.21394348 109.03487396]
[-174.02218628 112.57089233]
[-186.34349060 108.14334106]
[-193.74790955 97.58250427]
[-208.73934937 97.07589722]
[-217.44377136 99.91844177]
[-223.97909546 96.43200684]
[-238.95985413 95.67226410]
[-253.94059753 94.91252899]
[-268.11495972 101.94093323]
[-280.43399048 93.56893158]
[-295.41473389 92.80919647]
[-310.39547729 92.04946136]
[-316.01144409 106.11145782]
[-325.89093018 117.58640289]
[-338.96231079 125.22959137]
[-353.80764771 128.21194458]
[-368.81665039 126.20995331]
[-382.36129761 119.44078064]
[-392.97232056 108.63870239]
[-399.49871826 94.97544098]
[-401.23257446 79.93308258]
[-397.98580933 65.14331818]
[-390.11059570 52.21042252]
[-378.46118164 42.53726578]
[-364.30123901 37.17311478]
[-349.16668701 36.69983292]
[-334.69921875 41.16876221]
[-322.46817017 50.09514236]
[-313.80026245 62.51070786]
[-309.63574219 77.06871033]
[-294.65499878 77.82845306]
[-279.67425537 78.58818817]
[-266.57144165 71.50544739]
[-253.18086243 79.93177795]
[-238.20011902 80.69152069]
[-223.21936035 81.45125580]
[-208.23274231 82.08444977]
[-193.24128723 82.59106445]
[-181.46789551 70.59545135]
[-164.32391357 70.82025146]
[-152.40885925 83.61419678]
[-137.41099548 83.86753845]
[-122.41313171 84.12088013]
[-107.41527557 84.37422180]
[-100.65949249 81.33693695]
[-92.16681671 84.76063538]
[-77.17537689 85.26724243]
[-62.18393326 85.77385712]
[-51.51140213 75.44754791]
[-36.30072784 75.74776459]
[-25.54191017 87.01211548]
[-10.55046749 87.51873016]
[0.12206471 77.19242096]
[15.33273602 77.49263763]
[26.09155464 88.75698853]
[41.08299637 89.26359558]
[56.07444000 89.77021027]
[71.06587982 90.27682495]
[86.05732727 90.78343201]
[98.51174927 82.42356873]
[103.72132874 68.35728455]
[108.93090057 54.29100418]
[114.14048004 40.22472382]
[119.35005951 26.15843964]
[124.55963898 12.09215832]
[129.76922607 -1.97412348]
[134.97880554 -16.04040527]
[140.18836975 -30.10668755]
[137.72558594 -45.73503494]
[149.40150452 -54.98285294]
[154.61106873 -69.04913330]
[159.82064819 -83.11541748]
[165.03022766 -97.18170166]
[158.20489502 -111.43618011]
[163.53680420 -126.31388855]
[177.86264038 -132.98814392]
[192.68315125 -127.49923706]
[199.20558167 -113.10363007]
[193.56027222 -98.34197998]
[179.09651184 -91.97212219]
[173.88693237 -77.90583801]
[168.67735291 -63.83955765]
[163.46777344 -49.77327728]
[166.30320740 -35.15104294]
[154.25465393 -24.89710808]
[149.04507446 -10.83082676]
[143.83549500 3.23545527]
[138.62591553 17.30173683]
[133.41633606 31.36801910]
[128.20677185 45.43429947]
[122.99718475 59.50058365]
[117.78760529 73.56686401]
[112.57802582 87.63314819]
[121.94944000 75.92090607]
[136.75546265 73.51634979]
[149.35169983 81.66096497]
[153.23469543 96.14966583]
[146.39965820 109.50189972]
[132.37551880 114.82388306]
[118.40145874 109.36647797]
[129.94622803 118.94344330]
[141.49099731 128.52041626]
[153.03576660 138.09738159]
[164.58053589 147.67434692]
[176.12530518 157.25131226]
[187.67007446 166.82829285]
[199.29530334 176.30741882]
[211.00016785 185.68803406]
[222.70504761 195.06864929]
[234.40991211 204.44926453]
[246.11479187 213.82987976]
[259.88180542 207.33135986]
[275.04333496 207.45410156]
[288.59262085 214.12022400]
[297.86587524 225.95945740]
[301.06597900 240.59054565]
[297.61053467 255.10003662]
[309.31539917 264.48065186]
[321.02029419 273.86126709]
[332.72515869 283.24188232]
[348.96734619 278.55841064]
[364.64785767 284.41314697]
[373.66525269 298.31680298]
[372.63687134 314.69030762]
[384.49850464 323.87191772]
[396.36016846 333.05349731]
[408.22180176 342.23507690]
[420.08343506 351.41668701]
[435.32504272 347.91998291]
[449.22482300 355.08450317]
[455.21972656 369.52734375]
[450.47909546 384.42901611]
[437.24136353 392.75344849]
[421.75692749 390.57009888]
[411.33712769 378.90982056]
[410.90182495 363.27832031]
[399.04019165 354.09671021]
[387.17855835 344.91513062]
[375.31692505 335.73355103]
[363.45529175 326.55194092]
[351.02841187 331.46496582]
[337.69046021 329.57537842]
[326.94586182 321.27148438]
[321.67092896 308.64096069]
[323.34454346 294.94677734]
[311.63967896 285.56613159]
[299.93478394 276.18551636]
[288.22991943 266.80490112]
[274.82144165 273.33776855]
[259.84460449 273.40133667]
[246.26977539 266.92947388]
[236.81250000 255.15745544]
[233.39031982 240.38668823]
[236.73417664 225.53475952]
[225.02929688 216.15414429]
[213.32443237 206.77352905]
[201.61955261 197.39291382]
[189.91468811 188.01228333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 133]
[2 132]
[3 131]
[4 130]
[5 129]
[6 128]
[7 127]
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[16 79]
[17 78]
[20 75]
[21 74]
[22 73]
[23 71]
[24 70]
[25 69]
[26 68]
[30 65]
[31 64]
[33 63]
[34 62]
[35 61]
[37 59]
[38 58]
[39 57]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[97 110]
[98 109]
[99 108]
[100 107]
[134 185]
[135 184]
[136 183]
[137 182]
[138 181]
[144 175]
[145 174]
[146 173]
[147 172]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
