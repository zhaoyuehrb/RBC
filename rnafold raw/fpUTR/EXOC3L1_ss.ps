%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUGUUGAUGGCCUUGGGGAGGGAGGAGCCUCGGUGGGAAGAAGGGGCUUCUGGGUGGGGAGUGGGAGAGAGACUUCCUUGGGGAGAGGAAUUCAGCUGCACGCUGGAGUCAGCUGGAGUUGCCCAGGCCCUGUGAGCAAGUGGCAGGCGUGCCCAGCUGCAUUGGGGAGAGGGCUGUUCUCAAGGCCAAGGUCAUUUUUGGAGGGAGAACUGGACGCCUGAUCAAAUCUGGCCCACA\
) } def
/len { sequence length } bind def

/coor [
[251.20086670 566.81280518]
[245.14729309 553.08856201]
[239.09371948 539.36437988]
[233.04013062 525.64013672]
[226.98655701 511.91592407]
[220.93298340 498.19171143]
[206.36007690 495.23056030]
[196.20506287 484.12472534]
[194.51704407 468.99185181]
[202.15165710 455.61206055]
[196.09808350 441.88781738]
[190.04450989 428.16360474]
[183.99092102 414.43939209]
[177.93734741 400.71517944]
[171.88377380 386.99093628]
[165.83020020 373.26672363]
[159.77662659 359.54251099]
[153.72305298 345.81829834]
[147.66947937 332.09405518]
[141.61590576 318.36984253]
[125.45934296 315.41082764]
[114.14227295 303.27798462]
[112.27603912 286.62426758]
[120.79428864 271.99990845]
[114.56306458 258.35543823]
[108.33184052 244.71096802]
[102.10061646 231.06648254]
[95.86939240 217.42199707]
[83.54419708 209.05905151]
[84.84949493 193.29179382]
[78.61827087 179.64730835]
[72.38703918 166.00282288]
[66.15581512 152.35835266]
[59.92459106 138.71386719]
[46.12294388 132.83895874]
[31.96929359 137.80627441]
[21.51001167 149.67700195]
[6.93861628 146.59094238]
[-3.52066517 158.46166992]
[-18.09206200 155.37562561]
[-32.24571228 160.34294128]
[-46.39936066 165.31024170]
[-60.55301285 170.27755737]
[-74.70665741 175.24487305]
[-81.32390594 189.59713745]
[-96.18029785 194.98817444]
[-110.46179962 188.21955872]
[-115.69545746 173.30699158]
[-108.77622986 159.09785461]
[-93.80917358 154.02215576]
[-79.67397308 161.09121704]
[-65.52032471 156.12391663]
[-51.36667252 151.15660095]
[-37.21302414 146.18928528]
[-23.05937386 141.22196960]
[-13.61245537 129.70654297]
[1.97130406 132.43730164]
[11.41822147 120.92187500]
[27.00198174 123.65262604]
[41.15563202 118.68531036]
[40.66889954 103.69321442]
[26.22285843 99.65441132]
[11.77681732 95.61561584]
[-2.66922379 91.57682037]
[-17.11526489 87.53801727]
[-31.56130600 83.49922180]
[-43.01980209 93.82910156]
[-58.24773407 96.30166626]
[-72.38592529 90.12792969]
[-80.92293549 77.27790833]
[-81.13462830 61.85199738]
[-72.95346069 48.77254868]
[-58.99000549 42.21316910]
[-43.69995499 44.26692581]
[-31.96230888 54.27848053]
[-27.52250862 69.05317688]
[-13.07646656 73.09197998]
[1.36957467 77.13077545]
[15.81561565 81.16957855]
[30.26165771 85.20837402]
[44.70769882 89.24716949]
[54.67694092 78.03939819]
[48.98169708 64.16265106]
[43.28645325 50.28590012]
[37.59120560 36.40914917]
[31.89596176 22.53240013]
[19.49836540 12.70335293]
[21.82394028 -2.00857997]
[12.21919441 -2.99488401]
[3.67937279 -7.37467861]
[-2.64920235 -14.51289558]
[-5.93423414 -23.40750885]
[-5.76675463 -32.83007431]
[-2.21157527 -41.49537277]
[4.20727968 -48.23670959]
[-0.76003265 -62.39035797]
[-5.72734499 -76.54400635]
[-10.69465733 -90.69766235]
[-15.66196918 -104.85131073]
[-20.62928200 -119.00495911]
[-25.59659386 -133.15861511]
[-30.56390572 -147.31225586]
[-36.34675980 -154.35551453]
[-35.50253677 -161.68200684]
[-40.28569412 -175.89894104]
[-54.55085373 -182.70195007]
[-59.74856949 -197.62707520]
[-52.79513168 -211.81950378]
[-37.81588745 -216.85913086]
[-23.69776344 -209.75602722]
[-18.81678581 -194.72434998]
[-26.06875420 -180.68209839]
[-21.28559494 -166.46516418]
[-16.41025734 -152.27957153]
[-11.44294453 -138.12591553]
[-6.47563171 -123.97227478]
[-1.50831962 -109.81861877]
[3.45899272 -95.66497040]
[8.42630482 -81.51132202]
[13.39361763 -67.35767365]
[18.36092949 -53.20402145]
[37.46759415 -45.89477921]
[45.03117752 -26.57003403]
[35.70069122 -7.70382547]
[47.69092560 1.13266420]
[45.77270889 16.83715439]
[51.46795654 30.71390533]
[57.16320038 44.59065247]
[62.85844803 58.46740341]
[68.55369568 72.34415436]
[94.14493561 65.02851868]
[114.37026978 74.76583099]
[124.90780640 64.09060669]
[135.44534302 53.41538239]
[139.63349915 38.15858078]
[154.08093262 34.53628540]
[164.61845398 23.86106300]
[175.15599060 13.18583870]
[185.62400818 2.44244218]
[196.02207947 -8.36867428]
[206.42013550 -19.17979240]
[206.94639587 -32.05358124]
[215.81204224 -40.84281158]
[227.88929749 -41.23078156]
[231.67991638 -49.51812744]
[238.63359070 -51.97507858]
[249.30882263 -62.51260757]
[259.98403931 -73.05014038]
[270.65927124 -83.58767700]
[274.48229980 -99.53497314]
[290.27938843 -103.93772125]
[301.79983521 -92.26675415]
[297.19238281 -76.52815247]
[281.19680786 -72.91245270]
[270.52157593 -62.37491608]
[259.84634399 -51.83738327]
[249.17112732 -41.29985428]
[238.56452942 -30.69325066]
[235.04266357 -13.49226856]
[217.23126221 -8.78172684]
[206.83319092 2.02939034]
[196.43511963 12.84050655]
[194.06864929 19.82548714]
[185.83120728 23.72337151]
[175.29368591 34.39859390]
[164.75614929 45.07381821]
[161.32170105 59.56705475]
[146.12055969 63.95291519]
[135.58302307 74.62813568]
[125.04549408 85.30335999]
[131.59585571 100.82933044]
[128.52667236 118.81804657]
[115.34205627 133.38563538]
[95.05469513 138.99742126]
[73.56906891 132.48265076]
[79.80030060 146.12712097]
[86.03152466 159.77160645]
[92.26274872 173.41607666]
[98.49397278 187.06056213]
[111.26486969 196.39944458]
[109.51387024 211.19078064]
[115.74509430 224.83525085]
[121.97631836 238.47973633]
[128.20755005 252.12422180]
[134.43876648 265.76870728]
[148.10273743 267.48971558]
[159.04841614 275.66833496]
[164.48501587 288.08593750]
[163.09243774 301.46102905]
[155.34011841 312.31628418]
[161.39369202 326.04049683]
[167.44726562 339.76470947]
[173.50083923 353.48892212]
[179.55442810 367.21316528]
[185.60800171 380.93737793]
[191.66157532 394.66159058]
[197.71514893 408.38580322]
[203.76872253 422.11004639]
[209.82229614 435.83425903]
[215.87586975 449.55847168]
[230.90447998 452.94180298]
[240.94186401 464.39190674]
[242.29634094 479.37954712]
[234.65721130 492.13812256]
[240.71078491 505.86236572]
[246.76435852 519.58654785]
[252.81793213 533.31079102]
[258.87152100 547.03503418]
[264.92507935 560.75921631]
[277.36157227 561.76245117]
[288.13308716 567.91497803]
[295.23196411 577.99969482]
[297.36514282 590.07330322]
[294.18933105 601.84075928]
[286.36450195 611.09167480]
[292.05975342 624.96844482]
[297.75497437 638.84515381]
[302.71957397 643.16046143]
[304.50714111 648.52746582]
[303.41278076 653.15686035]
[308.74584961 667.17675781]
[314.07894897 681.19671631]
[326.21719360 691.34429932]
[323.51046753 705.99090576]
[328.84353638 720.01080322]
[334.17660522 734.03076172]
[345.45932007 746.68524170]
[336.42269897 761.03015137]
[320.13684082 756.31774902]
[320.15670776 739.36383057]
[314.82360840 725.34387207]
[309.49053955 711.32397461]
[297.73373413 702.17919922]
[300.05902100 686.52978516]
[294.72595215 672.50982666]
[289.39285278 658.48992920]
[283.87823486 644.54040527]
[278.18298340 630.66369629]
[272.48773193 616.78692627]
[255.13948059 613.39776611]
[243.20516968 600.14575195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 205]
[6 204]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 60]
[36 59]
[38 57]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[88 124]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[104 113]
[105 112]
[132 170]
[133 169]
[134 168]
[136 166]
[137 165]
[138 164]
[139 162]
[140 161]
[141 160]
[144 158]
[146 157]
[147 156]
[148 155]
[149 154]
[215 239]
[216 238]
[217 237]
[220 236]
[221 235]
[222 234]
[224 232]
[225 231]
[226 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
