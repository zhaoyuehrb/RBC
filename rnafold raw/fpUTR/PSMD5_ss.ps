%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCCCCAUAGCCAUCUCAGGGACAAGGAGGCUGUGAUCAGAUCUCGCGAGGUUCAGGAAAGCGCCCCGGGAACUGGGCCGCUGGGCCAGCCCCUGCGUCGGGGGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[80.51476288 126.48466492]
[75.20806885 121.59796143]
[61.94865417 128.61137390]
[48.68924713 135.62480164]
[35.42983627 142.63821411]
[22.17042542 149.65162659]
[8.91101456 156.66505432]
[-4.24962568 163.86210632]
[-17.30895233 171.24139404]
[-17.26932335 187.70878601]
[-25.45686722 201.88879395]
[-39.57646561 209.99409485]
[-55.76349258 209.91433716]
[-69.64144135 201.76487732]
[-82.49058533 209.50433350]
[-86.05368042 224.90173340]
[-99.50482178 233.19886780]
[-114.86368561 229.47319031]
[-123.01814270 215.93507385]
[-119.13028717 200.61645508]
[-105.50671387 192.60559082]
[-90.23005676 196.65518188]
[-77.38090515 188.91572571]
[-78.52610779 175.23135376]
[-73.61170197 162.33750916]
[-63.55237198 152.79545593]
[-50.29076767 148.52723694]
[-36.42252350 150.42868042]
[-24.68824768 158.18206787]
[-11.62892056 150.80278015]
[-7.29271746 144.68643188]
[1.89759588 143.40563965]
[15.15700626 136.39222717]
[28.41641617 129.37879944]
[41.67582703 122.36538696]
[54.93523788 115.35196686]
[68.19464874 108.33854675]
[67.21887207 90.40486145]
[75.98030853 73.95123291]
[92.57247162 64.05019379]
[112.57488251 64.15645599]
[115.06544495 49.36466599]
[117.55600739 34.57287216]
[112.21746063 19.67957115]
[121.96056366 8.41364574]
[124.45113373 -6.37814569]
[126.94169617 -21.16993713]
[129.43226624 -35.96172714]
[131.92283630 -50.75351715]
[130.25019836 -59.88065338]
[134.69371033 -65.91947937]
[133.27545166 -75.08958435]
[137.88511658 -81.00256348]
[141.19387817 -95.63307953]
[144.50265503 -110.26359558]
[140.00004578 -125.43057251]
[150.35418701 -136.13761902]
[141.70835876 -149.36730957]
[145.03135681 -164.81831360]
[158.35173035 -173.32379150]
[173.76672363 -169.83761597]
[182.13090515 -156.42805481]
[178.48194885 -141.05078125]
[164.98471069 -132.82884216]
[169.72398376 -118.70834351]
[159.13316345 -106.95482635]
[155.82440186 -92.32431030]
[152.51564026 -77.69379425]
[149.41055298 -63.01869583]
[146.71461487 -48.26295471]
[144.22406006 -33.47116089]
[141.73348999 -18.67937088]
[139.24291992 -3.88757992]
[136.75236511 10.90421104]
[142.26905823 24.73950386]
[132.34780884 37.06343842]
[129.85723877 51.85522842]
[127.36666870 66.64701843]
[137.13215637 78.03277588]
[152.13070679 77.82426453]
[167.12925720 77.61576080]
[182.12780762 77.40725708]
[195.92984009 68.55084229]
[210.37458801 76.31493378]
[210.60253906 92.71249390]
[196.37919617 100.87512207]
[182.33631897 92.40580750]
[167.33775330 92.61431122]
[152.33920288 92.82281494]
[137.34065247 93.03132629]
[134.49517822 108.09729767]
[126.26219940 119.78404999]
[135.86846924 131.30444336]
[145.47474670 142.82484436]
[155.08102417 154.34523010]
[164.68728638 165.86563110]
[174.29356384 177.38603210]
[190.05401611 178.56230164]
[200.30314636 190.59272766]
[198.96029663 206.33985901]
[186.82218933 216.46121216]
[171.09013367 214.95196533]
[161.09767151 202.70751953]
[162.77316284 186.99229431]
[153.16690063 175.47190857]
[143.56062317 163.95150757]
[133.95434570 152.43110657]
[124.34807587 140.91072083]
[114.74180603 129.39031982]
[107.97766876 131.89778137]
[100.82950592 132.86979675]
[93.64142609 132.25958252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 37]
[3 36]
[4 35]
[5 34]
[6 33]
[7 32]
[8 30]
[9 29]
[14 23]
[15 22]
[41 78]
[42 77]
[43 76]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[51 69]
[53 68]
[54 67]
[55 66]
[57 64]
[79 90]
[80 89]
[81 88]
[82 87]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
