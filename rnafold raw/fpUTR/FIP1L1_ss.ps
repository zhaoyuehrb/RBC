%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGACCUGCGCUGGAGGCUUCAUCUUUGCCGCCGCUGCCGUCGCCUUCCUGGGAUUGGAGUCUCGAGCUUUCUUCGUUCGUUCGUCGGCGGGUUCGCGCCCUUCUCGCGCCUCGGGGCUGCGAGGCUGGGGAAGGGGUUGGAGGGGGCUGUUGAUCGCCGCGUUUAAGUUGCGCUCGGGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[70.55893707 117.45629120]
[67.67997742 104.53723907]
[52.74396133 103.15321350]
[37.80794907 101.76918793]
[22.87193680 100.38516235]
[7.93592358 99.00113678]
[-7.00008917 97.61711121]
[-21.93610191 96.23308563]
[-36.87211609 94.84906006]
[-51.80812836 93.46503448]
[-87.74027252 114.66084290]
[-102.35614014 118.03374481]
[-116.97200775 121.40664673]
[-128.67895508 132.04891968]
[-142.82011414 127.37161255]
[-157.43597412 130.74452209]
[-172.05183411 134.11741638]
[-186.66770935 137.49032593]
[-201.28356934 140.86322021]
[-215.89944458 144.23611450]
[-230.51530457 147.60902405]
[-245.13116455 150.98191833]
[-259.74703979 154.35482788]
[-274.33404541 157.85038757]
[-288.89120483 161.46833801]
[-303.44833374 165.08630371]
[-318.00549316 168.70425415]
[-322.45309448 185.68742371]
[-334.81759644 198.02496338]
[-351.63830566 202.39082336]
[-368.27117920 197.67256165]
[-380.17092896 185.25305176]
[-394.59829712 189.35800171]
[-405.75424194 200.57653809]
[-420.11306763 196.61758423]
[-434.54046631 200.72251892]
[-445.56179810 212.86592102]
[-461.52947998 209.12890625]
[-466.01733398 193.35577393]
[-454.40863037 181.77259827]
[-438.64541626 186.29513550]
[-424.21801758 182.19020081]
[-414.09402466 171.26527405]
[-398.70324707 174.93061829]
[-384.27587891 170.82566833]
[-382.52481079 158.29063416]
[-376.13320923 147.31216431]
[-366.02276611 139.54373169]
[-353.67819214 136.17082214]
[-340.92938232 137.73014832]
[-329.68002319 144.02453613]
[-321.62344360 154.14712524]
[-307.06628418 150.52915955]
[-292.50915527 146.91119385]
[-277.95202637 143.29324341]
[-272.20697021 138.61892700]
[-263.11993408 139.73896790]
[-248.50407410 136.36605835]
[-233.88819885 132.99316406]
[-219.27233887 129.62025452]
[-204.65647888 126.24735260]
[-190.04060364 122.87445068]
[-175.42474365 119.50154877]
[-160.80888367 116.12864685]
[-146.19300842 112.75574493]
[-135.53147888 102.35473633]
[-120.34490967 106.79078674]
[-105.72904205 103.41788483]
[-91.11317444 100.04498291]
[-87.43615723 93.50820160]
[-101.87983704 89.46097565]
[-116.75421906 91.39816284]
[-129.06573486 82.82922363]
[-132.41526794 68.20798492]
[-125.06188202 55.13405991]
[-110.82757568 50.40280914]
[-97.11086273 56.47337341]
[-91.04109955 70.19253540]
[-80.08211517 80.43463135]
[-76.40509033 73.89785004]
[-81.11219025 59.65554810]
[-94.73918915 51.18888474]
[-96.47280884 35.23977280]
[-84.98316193 24.04300880]
[-69.08412170 26.18778801]
[-60.97207260 40.02882004]
[-66.86988068 54.94845200]
[-62.16278839 69.19075775]
[-50.42410278 78.52902222]
[-35.48809052 79.91304779]
[-20.55207634 81.29707336]
[-5.61606359 82.68109894]
[9.31994915 84.06512451]
[24.25596237 85.44915009]
[39.19197464 86.83317566]
[54.12798691 88.21720123]
[69.06400299 89.60122681]
[80.81678009 73.59593964]
[99.67066193 67.36470795]
[118.64645386 73.21417999]
[129.81608582 63.20221329]
[140.98571777 53.19025040]
[152.15533447 43.17828369]
[163.32496643 33.16632080]
[174.49459839 23.15435600]
[185.66421509 13.14239120]
[196.83384705 3.13042712]
[197.85231018 -12.41307640]
[209.32252502 -22.40751648]
[224.13459778 -21.34077644]
[235.30422974 -31.35273933]
[246.47386169 -41.36470413]
[257.64349365 -51.37666702]
[268.81311035 -61.38863373]
[279.98272705 -71.40059662]
[280.59484863 -87.19303131]
[292.25119019 -97.86566162]
[308.03628540 -97.08660889]
[318.58508301 -85.31807709]
[317.63919067 -69.54212189]
[305.75976562 -59.11833572]
[289.99468994 -60.23096848]
[278.82507324 -50.21900558]
[267.65545654 -40.20704269]
[256.48580933 -30.19507790]
[245.31619263 -20.18311310]
[234.14656067 -10.17114830]
[233.59269714 4.66895962]
[222.40773010 14.98163033]
[206.84580994 14.30005455]
[195.67617798 24.31201935]
[184.50656128 34.32398224]
[173.33692932 44.33594894]
[162.16729736 54.34791183]
[150.99768066 64.35987854]
[139.82804871 74.37184143]
[128.65841675 84.38380432]
[135.56375122 95.74525452]
[137.67919922 110.05507660]
[151.21708679 116.51463318]
[164.75495911 122.97419739]
[178.29283142 129.43376160]
[191.83070374 135.89332581]
[207.61767578 134.85308838]
[215.77238464 147.31703186]
[231.55935669 146.27679443]
[239.71406555 158.74073792]
[253.25193787 165.20030212]
[266.78982544 171.65986633]
[280.36276245 164.13958740]
[295.75967407 166.06695557]
[307.06011963 176.70083618]
[309.91885376 191.95231628]
[303.23660278 205.95686340]
[289.58288574 213.32945251]
[274.20779419 211.23518372]
[263.02337646 200.47932434]
[260.33026123 185.19773865]
[246.79237366 178.73817444]
[233.25450134 172.27862549]
[218.43585205 173.78088379]
[209.31282043 160.85490417]
[194.49417114 162.35717773]
[185.37113953 149.43119812]
[171.83326721 142.97163391]
[158.29539490 136.51206970]
[144.75752258 130.05250549]
[131.21963501 123.59294891]
[120.05001831 133.60491943]
[124.99570465 147.76612854]
[129.94139099 161.92735291]
[134.88708496 176.08857727]
[139.83277893 190.24978638]
[151.68751526 200.72718811]
[148.57920837 215.29385376]
[159.50981140 228.25373840]
[150.08230591 242.34480286]
[133.93211365 237.18653870]
[134.41798401 220.23954773]
[122.91700745 210.77505493]
[125.67155457 195.19548035]
[120.72586823 181.03425598]
[115.78017426 166.87304688]
[110.83448792 152.71182251]
[105.88879395 138.55059814]
[90.95764923 136.29824829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 97]
[3 96]
[4 95]
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[10 89]
[11 69]
[12 68]
[13 67]
[15 65]
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 55]
[25 54]
[26 53]
[27 52]
[32 45]
[33 44]
[35 42]
[36 41]
[80 88]
[81 87]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[107 130]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[139 168]
[140 167]
[141 166]
[142 165]
[143 164]
[145 162]
[147 160]
[148 159]
[149 158]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
