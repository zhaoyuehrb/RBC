%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAGGCCUCGCACAAAACACUGUACAAACCCGAAAGGAAGUCUGAGAGACGAACCGCCUUCCUCCCUGAAGCUUCUAGAACUGGAGCAGAAAGAAGGUGUGGCCCAGGGCCAGCCCCGCCUCCUCCCCGGGCGGAAGCUGUGUCAGUUGCCGGAAGUCGGCGUGAGGUGGGGCUU\
) } def
/len { sequence length } bind def

/coor [
[229.38929749 246.88418579]
[214.52906799 248.92718506]
[201.24255371 241.96528625]
[194.46432495 228.58410645]
[196.71183777 213.75344849]
[207.15037537 202.98138428]
[221.90292358 200.26866150]
[209.13745117 192.39193726]
[196.37197876 184.51521301]
[183.60650635 176.63848877]
[170.84103394 168.76176453]
[151.54179382 169.64178467]
[142.19096375 151.80482483]
[129.15693665 144.38095093]
[114.36494446 146.87036133]
[104.47888184 158.15158081]
[94.59281921 169.43278503]
[95.88219452 185.18438721]
[85.59230042 197.17996216]
[69.82794189 198.30271912]
[57.94184113 187.88658142]
[56.98580551 172.11123657]
[67.52703857 160.33592224]
[83.31160736 159.54672241]
[93.19766998 148.26551819]
[103.08373260 136.98429871]
[99.03396606 130.67166138]
[86.40869904 138.77120972]
[73.78329468 146.87054443]
[65.68416595 134.24501038]
[78.30915070 126.14594269]
[90.93441772 118.04639435]
[86.88465118 111.73376465]
[72.50922394 116.01712799]
[61.63917542 128.29612732]
[45.62642670 124.75720978]
[40.94352722 109.04089355]
[52.40784073 97.31478882]
[68.22586060 101.64170074]
[82.60128784 97.35833740]
[81.94397736 89.88719940]
[80.62935638 74.94491577]
[79.97204590 67.47377777]
[65.06954956 65.76628113]
[50.16704559 64.05879211]
[35.26454926 62.35129547]
[18.84009933 66.55532074]
[10.25363064 51.93653488]
[21.92413712 39.63874435]
[36.97204208 47.44879913]
[51.87454224 49.15629196]
[66.77703857 50.86378479]
[81.67953491 52.57127762]
[86.42156982 46.76067352]
[81.09905243 32.73673630]
[95.90563965 35.13946533]
[100.64766693 29.32886124]
[95.86244965 15.11261463]
[90.95265961 0.93890715]
[86.04286957 -13.23480034]
[81.13307953 -27.40850639]
[76.22329712 -41.58221436]
[71.31350708 -55.75592041]
[66.40371704 -69.92962646]
[52.93795013 -72.94917297]
[42.80805206 -82.16063690]
[38.59336853 -95.07370758]
[41.29522324 -108.27519226]
[50.10143280 -118.33113098]
[45.44115067 -132.58882141]
[41.50939941 -136.11003113]
[39.53842163 -140.36601257]
[39.47755814 -144.47908020]
[40.93228149 -147.72105408]
[37.02880859 -162.20425415]
[33.12533951 -176.68745422]
[29.22186470 -191.17063904]
[25.31839371 -205.65383911]
[11.06100273 -212.07730103]
[4.31473064 -226.18479919]
[8.26495934 -241.31523132]
[21.04651070 -250.32444763]
[36.62432861 -248.95857239]
[47.64304352 -237.86253357]
[48.89995575 -222.27555847]
[39.80158615 -209.55731201]
[43.70505905 -195.07411194]
[47.60853195 -180.59092712]
[51.51200485 -166.10772705]
[55.41547775 -151.62452698]
[59.69884109 -137.24911499]
[64.35912323 -122.99141693]
[80.12285614 -118.45870972]
[90.18780518 -105.29775238]
[90.43802643 -88.56513977]
[80.57742310 -74.83941650]
[85.48721313 -60.66571045]
[90.39700317 -46.49200439]
[95.30679321 -32.31829453]
[100.21657562 -18.14458847]
[105.12636566 -3.97088146]
[110.03615570 10.20282555]
[115.21164703 15.50949287]
[114.90535736 24.66857529]
[136.58081055 131.34690857]
[149.61483765 138.77078247]
[159.95640564 135.28385925]
[170.29307556 138.02381897]
[177.25686646 145.84712219]
[178.71775818 155.99630737]
[191.48323059 163.87301636]
[204.24870300 171.74974060]
[217.01417542 179.62646484]
[229.77964783 187.50318909]
[243.06619263 194.46507263]
[256.80834961 200.47781372]
[270.55050659 206.49055481]
[284.29266357 212.50329590]
[298.03482056 218.51603699]
[311.77697754 224.52877808]
[325.51913452 230.54151917]
[339.26129150 236.55426025]
[353.00347900 242.56698608]
[366.74563599 248.57972717]
[380.48779297 254.59246826]
[392.78091431 250.62606812]
[404.11312866 255.93928528]
[408.62643433 267.18197632]
[424.39575195 265.90182495]
[432.73901367 278.24035645]
[446.37353516 284.49334717]
[460.00805664 290.74633789]
[478.40966797 282.74795532]
[496.50158691 290.69564819]
[502.86035156 309.08380127]
[516.80505371 314.61056519]
[530.74975586 320.13732910]
[546.42987061 318.02905273]
[555.41094971 329.91140747]
[569.35565186 335.43817139]
[583.30035400 340.96493530]
[597.24505615 346.49169922]
[611.18975830 352.01846313]
[628.14233398 352.23342896]
[632.62872314 368.58300781]
[618.16003418 377.42007446]
[605.66302490 365.96316528]
[591.71832275 360.43640137]
[577.77362061 354.90963745]
[563.82885742 349.38287354]
[549.88415527 343.85610962]
[535.20147705 346.35968018]
[525.22302246 334.08203125]
[511.27828979 328.55526733]
[497.33358765 323.02850342]
[489.31570435 329.51782227]
[479.24533081 332.09881592]
[468.93527222 330.23727417]
[460.27053833 324.20510864]
[454.86370850 315.04287720]
[453.75506592 304.38085938]
[440.12054443 298.12786865]
[426.48602295 291.87487793]
[411.69192505 293.60226440]
[402.37344360 280.81649780]
[385.02929688 283.40759277]
[374.47503662 268.33462524]
[360.73287964 262.32189941]
[346.99072266 256.30914307]
[333.24856567 250.29641724]
[319.50640869 244.28367615]
[305.76425171 238.27093506]
[292.02209473 232.25819397]
[278.27993774 226.24545288]
[264.53778076 220.23271179]
[250.79560852 214.21997070]
[237.05345154 208.20722961]
[243.21980286 221.88114929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[13 106]
[14 105]
[15 26]
[16 25]
[17 24]
[33 40]
[34 39]
[43 53]
[44 52]
[45 51]
[46 50]
[57 104]
[58 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[69 92]
[70 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[115 177]
[116 176]
[117 175]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[123 169]
[124 168]
[125 167]
[128 165]
[130 163]
[131 162]
[132 161]
[135 155]
[136 154]
[137 153]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
