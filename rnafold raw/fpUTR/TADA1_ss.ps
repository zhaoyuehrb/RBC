%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCACCUUCCCUGCGAAAAGGCGGGCGGAGCCGAAAACCAAACAAACGACUUCUGAGAGAUUGGGGGCGGGACUGACGGCGGCCGGCUUAGCUUCCAGAGCCAAGGCCUUCCGCCGAGUUGGUUUUUGGGUUGUUGAUCGCGGUGGCCGGGCGGUCUGCGGUCGGGCUGAGACACGCGGAGCA\
) } def
/len { sequence length } bind def

/coor [
[150.54447937 188.17643738]
[142.14485168 175.74879456]
[128.60746765 169.53681946]
[127.29015350 153.77055359]
[118.89053345 141.34291077]
[110.49090576 128.91526794]
[102.09128571 116.48761749]
[87.09615326 116.10557556]
[78.07457733 128.08937073]
[69.05300903 140.07315063]
[60.13350677 152.13311768]
[51.31673050 164.26837158]
[42.49995041 176.40362549]
[33.68317032 188.53887939]
[24.86639214 200.67413330]
[27.58596420 216.24267578]
[18.43213654 229.12611389]
[2.83571243 231.68092346]
[-9.95022583 222.39140320]
[-12.34000778 206.76884460]
[-2.91581869 194.08183289]
[12.73113823 191.85734558]
[21.54791641 179.72209167]
[30.36469460 167.58683777]
[39.18147278 155.45158386]
[47.99825287 143.31632996]
[49.38942337 136.04023743]
[57.06921768 131.05157471]
[66.09078979 119.06778717]
[75.11236572 107.08399963]
[81.39367676 97.51443481]
[90.01058197 93.97250366]
[84.29975891 80.10215759]
[78.58893585 66.23181152]
[72.87811279 52.36146164]
[67.16728973 38.49111557]
[61.45647049 24.62076950]
[55.74565125 10.75042152]
[50.03482819 -3.11992455]
[44.32400513 -16.99027061]
[38.61318588 -30.86061859]
[32.90236282 -44.73096466]
[21.74732399 -43.48013687]
[10.33551121 -46.29510880]
[0.16196720 -53.17815018]
[-7.31881380 -63.58047104]
[-10.89521408 -76.43513489]
[-9.78120327 -90.26351929]
[-23.39667702 -96.55786896]
[-32.52251434 -97.32271576]
[-37.18851089 -103.07643890]
[-50.69514084 -109.60108948]
[-64.20176697 -116.12573242]
[-77.70839691 -122.65037537]
[-91.21502686 -129.17501831]
[-104.72165680 -135.69966125]
[-118.22828674 -142.22430420]
[-134.53436279 -140.47967529]
[-143.97837830 -153.88647461]
[-136.84513855 -168.65295410]
[-120.47270966 -169.58862305]
[-111.70364380 -155.73094177]
[-98.19701385 -149.20628357]
[-84.69038391 -142.68164062]
[-71.18375397 -136.15699768]
[-57.67712402 -129.63235474]
[-44.17049789 -123.10771179]
[-30.66386795 -116.58306885]
[-17.10232735 -110.17333984]
[-3.48685265 -103.87899017]
[3.15178967 -107.36875153]
[-5.77924109 -119.42017365]
[-15.04596233 -131.21542358]
[-7.82068348 -144.36058044]
[7.10396624 -142.85897827]
[11.56581497 -128.53800964]
[16.42907524 -114.34827423]
[23.06771660 -117.83803558]
[25.60272980 -132.62226868]
[28.13774109 -147.40650940]
[30.67275429 -162.19075012]
[33.20776749 -176.97499084]
[35.74277878 -191.75923157]
[26.88644028 -204.57339478]
[29.66790962 -219.53060913]
[41.93884659 -227.89480591]
[44.47385788 -242.67904663]
[47.00886917 -257.46328735]
[49.54388046 -272.24752808]
[52.07889557 -287.03176880]
[45.29496002 -304.13937378]
[57.00388718 -317.19796753]
[59.28748703 -332.02313232]
[61.57108307 -346.84826660]
[63.85468292 -361.67343140]
[60.29017258 -378.24841309]
[75.23065948 -386.26205444]
[87.06704712 -374.12384033]
[78.67984009 -359.38983154]
[76.39624023 -344.56466675]
[74.11264038 -329.73953247]
[71.82904053 -314.91436768]
[78.73026276 -304.96215820]
[76.93347168 -292.57986450]
[66.86313629 -284.49673462]
[64.32811737 -269.71249390]
[61.79310989 -254.92826843]
[59.25809479 -240.14402771]
[56.72308350 -225.35978699]
[65.50662231 -213.38543701]
[63.14636993 -198.35601807]
[50.52701569 -189.22421265]
[47.99200439 -174.43997192]
[45.45699310 -159.65573120]
[42.92197800 -144.87150574]
[40.38696671 -130.08726501]
[37.85195541 -115.30302429]
[59.76800156 -96.22258759]
[62.15064240 -69.54063416]
[46.77270889 -50.44178772]
[52.48353195 -36.57143784]
[58.19435120 -22.70109367]
[63.90517426 -8.83074665]
[69.61599731 5.03960037]
[75.32682037 18.90994644]
[81.03764343 32.78029251]
[86.74845886 46.65063858]
[92.45928192 60.52098465]
[98.17010498 74.39133453]
[103.88092804 88.26168060]
[104.65972137 73.28191376]
[111.65037537 60.01048660]
[123.56333160 50.89558411]
[138.20100403 47.61863327]
[152.86318970 50.78412628]
[164.84515381 59.80813217]
[171.93658447 73.02598572]
[172.82931519 87.99939728]
[167.35867310 101.96621704]
[156.53382874 112.34999084]
[142.35163879 117.23522949]
[127.42829132 115.72074127]
[114.51892853 108.08799744]
[122.91855621 120.51564026]
[131.31817627 132.94328308]
[139.71780396 145.37092590]
[153.85597229 152.47181702]
[154.57249451 167.34918213]
[162.97212219 179.77682495]
[174.88774109 179.72172546]
[185.23939514 185.37707520]
[191.50195312 195.23115540]
[192.21202087 206.76502991]
[187.30838013 217.09603882]
[201.19728088 224.67291260]
[201.40820312 239.56600952]
[209.38098145 252.27171326]
[217.35375977 264.97741699]
[225.32653809 277.68310547]
[233.29931641 290.38882446]
[241.27209473 303.09451294]
[249.35246277 315.73205566]
[257.53985596 328.30056763]
[265.72723389 340.86904907]
[281.27166748 342.57308960]
[292.04669189 353.90591431]
[292.96463013 369.51654053]
[283.59204102 382.03408813]
[268.35443115 385.54815674]
[254.44647217 378.39950562]
[248.43511963 363.96350098]
[253.15873718 349.05642700]
[244.97135925 336.48794556]
[236.78398132 323.91943359]
[230.48419189 320.02206421]
[228.56639099 311.06729126]
[220.59361267 298.36160278]
[212.62083435 285.65588379]
[204.64805603 272.95019531]
[196.67527771 260.24450684]
[188.70249939 247.53878784]
[175.38386536 240.87071228]
[174.60267639 225.06880188]
[156.55824280 222.08399963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[4 146]
[5 145]
[6 144]
[7 143]
[8 30]
[9 29]
[10 28]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[39 123]
[40 122]
[41 121]
[42 120]
[48 70]
[49 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[92 102]
[93 101]
[94 100]
[95 99]
[154 183]
[156 181]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[162 174]
[163 173]
[164 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
