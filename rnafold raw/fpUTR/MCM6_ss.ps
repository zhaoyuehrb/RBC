%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGGGGCGGGGCGGAAGCGGCGGCGGCGCGCGCAAAGCUGCAGCGUCUGGAAAAAAGCGACUUGUGGCGGUCGAGCGUGGCGCAGGCGAAUCCUCGGCACUAAGCAAAU\
) } def
/len { sequence length } bind def

/coor [
[90.51321411 389.82257080]
[83.55965424 376.30529785]
[82.31320953 361.15557861]
[86.96397400 346.68356323]
[96.80271912 335.09616089]
[110.32911682 328.16040039]
[109.07949066 313.21255493]
[107.62220001 298.28350830]
[98.52025604 286.49353027]
[104.67824554 271.91992188]
[103.01358032 257.01257324]
[101.34891510 242.10523987]
[99.68424988 227.19789124]
[98.01958466 212.29054260]
[87.23813629 208.61135864]
[78.61376190 201.08944702]
[73.45674133 190.81555176]
[72.57024384 179.30227661]
[76.12540436 168.26138306]
[83.63006592 159.34930420]
[93.99652100 153.91867065]
[93.57954407 138.92446899]
[85.49143982 126.41719055]
[92.84213257 112.40727234]
[85.68158722 100.39817810]
[92.16366577 88.00970459]
[91.74668884 73.01550293]
[91.32971954 58.02129745]
[83.21179199 44.44153976]
[90.59230804 31.50410271]
[90.17533875 16.50989914]
[89.75836182 1.51569617]
[89.34139252 -13.47850704]
[88.92442322 -28.47270966]
[74.07521057 -34.95890427]
[63.55275726 -47.20532227]
[59.40616989 -62.74998474]
[62.40940857 -78.49647522]
[71.91736603 -91.33069611]
[86.00362396 -98.73677063]
[85.16999817 -113.71358490]
[84.33638000 -128.69039917]
[83.50276184 -143.66722107]
[82.66913605 -158.64404297]
[81.83551788 -173.62086487]
[81.00189209 -188.59767151]
[77.35716248 -197.13104248]
[80.35915375 -204.00128174]
[79.94217682 -218.99548340]
[79.52520752 -233.98970032]
[76.11909485 -242.62106323]
[79.31090546 -249.40521240]
[66.67864990 -258.41662598]
[61.78765106 -273.14273071]
[66.51860809 -287.92102051]
[79.05236816 -297.06893921]
[94.56944275 -297.06893921]
[107.10320282 -287.92102051]
[111.83415985 -273.14273071]
[106.94316101 -258.41662598]
[94.31090546 -249.40521240]
[94.51940918 -234.40666199]
[94.93638611 -219.41246033]
[95.35335541 -204.41825867]
[95.97871399 -189.43130493]
[96.81233215 -174.45448303]
[97.64595795 -159.47766113]
[98.47957611 -144.50083923]
[99.31319427 -129.52403259]
[100.14682007 -114.54721069]
[100.98043823 -99.57038879]
[114.10575104 -94.85559845]
[124.45776367 -85.44527435]
[130.43629456 -72.74903870]
[131.09999084 -58.68776321]
[126.31444550 -45.40299988]
[116.77769470 -34.93080139]
[103.91862488 -28.88968277]
[104.33559418 -13.89547920]
[104.75256348 1.09872425]
[105.16954041 16.09292793]
[105.58650970 31.08713150]
[113.67461395 43.59440231]
[106.32392120 57.60432434]
[106.74089813 72.59852600]
[107.15786743 87.59272766]
[114.31841278 99.60182190]
[107.83633423 111.99029541]
[115.95426178 125.57005310]
[108.57374573 138.50749207]
[108.99072266 153.50169373]
[125.15528107 163.46157837]
[132.15449524 180.95242310]
[127.39819336 199.02911377]
[112.92692566 210.62588501]
[114.59159088 225.53321838]
[116.25625610 240.44056702]
[117.92092133 255.34791565]
[119.58559418 270.25524902]
[128.80661011 283.11151123]
[122.52954865 296.61883545]
[126.64289093 304.93646240]
[124.02734375 311.96292114]
[125.27697754 326.91076660]
[139.76721191 331.50439453]
[151.39334106 341.29733276]
[158.38244629 354.79623413]
[159.66873169 369.94265747]
[155.05606079 384.42684937]
[145.24783325 396.04006958]
[131.73973083 403.01141357]
[116.59163666 404.27780151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 104]
[7 103]
[8 101]
[10 99]
[11 98]
[12 97]
[13 96]
[14 95]
[21 91]
[22 90]
[24 88]
[26 86]
[27 85]
[28 84]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[48 64]
[49 63]
[50 62]
[52 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
