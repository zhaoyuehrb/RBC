%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUUCCUGGGUUCCGGCUCCGGCUCCAGCUCCUUCCCUCGCCUACAGAGGCGGCGCUGUCCCUGAUCGAGCGGCGGGAGCGAGGGCCUGGACGUAGUGUCUUCAACAGUUGUAACAGCAGCUGCCAUUUGCUGAAUGACAGCAUGUGUCACACACUCUGCUGAGUAUUACAGGCAUUUUUUUCUAAUACAAAGUCUUGUAGUGUGGAAAUACUUGCAGACUUGAAGGAAUUAUCAGUCUUUCAUUUUCUAUCA\
UCAGUGUCCUAUGAUAGUUUGUGCUUCCCUCCCUCAUCCCUUUGUUC\
) } def
/len { sequence length } bind def

/coor [
[-7.31988096 378.65725708]
[-20.76946259 385.29870605]
[-35.56194687 387.78515625]
[-50.44376373 385.90591431]
[-64.15377808 379.82025146]
[-75.53015137 370.04385376]
[-83.60881805 357.40521240]
[-87.70516205 342.97537231]
[-87.47203827 327.97717285]
[-82.92749023 313.67813110]
[-93.33990479 324.47543335]
[-103.75231934 335.27270508]
[-102.92657471 346.05590820]
[-108.04154968 355.33535767]
[-117.21303558 360.18951416]
[-127.32661438 359.24136353]
[-137.96067810 369.82043457]
[-148.59472656 380.39950562]
[-159.22879028 390.97857666]
[-163.55534363 406.19671631]
[-178.03507996 409.68762207]
[-188.66914368 420.26669312]
[-199.30320740 430.84579468]
[-203.62976074 446.06390381]
[-218.10949707 449.55484009]
[-228.74356079 460.13391113]
[-239.37760925 470.71298218]
[-238.41680908 490.82687378]
[-252.39871216 504.88781738]
[-271.90335083 504.06613159]
[-282.20324707 514.97082520]
[-277.72991943 529.66381836]
[-281.21804810 544.62139893]
[-291.72933960 555.82000732]
[-306.43630981 560.24725342]
[-321.38287354 556.71221924]
[-332.54846191 546.16589355]
[-336.92956543 531.44512939]
[-333.34774780 516.50970459]
[-322.76644897 505.37722778]
[-308.03201294 501.04226685]
[-293.10791016 504.67089844]
[-282.80801392 493.76623535]
[-285.83483887 484.04635620]
[-284.56933594 473.86395264]
[-279.17138672 465.04336548]
[-270.54702759 459.19250488]
[-260.19723511 457.40988159]
[-249.95668030 460.07891846]
[-239.32263184 449.49984741]
[-228.68856812 438.92077637]
[-225.12263489 424.45932007]
[-209.88227844 420.21173096]
[-199.24821472 409.63265991]
[-188.61415100 399.05358887]
[-185.04821777 384.59213257]
[-169.80786133 380.34451294]
[-159.17379761 369.76544189]
[-148.53974915 359.18637085]
[-137.90568542 348.60729980]
[-134.17434692 329.60586548]
[-114.54962158 324.86029053]
[-104.13720703 314.06301880]
[-93.72479248 303.26571655]
[-91.49914551 293.33551025]
[-81.42775726 287.86911011]
[-73.19956207 275.32730103]
[-64.97136688 262.78552246]
[-63.93472290 255.50543213]
[-56.59228516 250.15693665]
[-48.23450089 237.70111084]
[-39.87671661 225.24530029]
[-38.76464462 217.97636414]
[-31.36714935 212.70428467]
[-22.88067245 200.33578491]
[-22.05994225 185.46380615]
[-7.87236691 178.46214294]
[0.61411113 166.09364319]
[9.10058880 153.72514343]
[17.58706665 141.35665894]
[26.00931168 128.94433594]
[34.36709595 116.48851013]
[29.92454147 102.16148376]
[15.98592472 96.61937714]
[2.04730773 91.07727051]
[-11.89130974 85.53516388]
[-25.82992744 79.99305725]
[-39.76854324 74.45095062]
[-53.73570633 68.98117828]
[-67.73103333 63.58388519]
[-81.72636414 58.18659210]
[-97.83494568 61.25996017]
[-108.34457397 48.67108536]
[-102.44384003 33.37032318]
[-86.20291901 31.09778214]
[-76.32907104 44.19126129]
[-62.33374405 49.58855438]
[-48.33841324 54.98584747]
[-41.00348282 54.46340942]
[-34.22643661 60.51233292]
[-20.28782082 66.05443573]
[-6.34920263 71.59654236]
[7.58941460 77.13864899]
[21.52803230 82.68075562]
[35.46664810 88.22286224]
[39.77378082 82.08294678]
[48.38803864 69.80310059]
[52.69516754 63.66318130]
[42.73937607 52.44345856]
[32.78358459 41.22373199]
[22.82779503 30.00400734]
[12.87200260 18.78428268]
[2.91621161 7.56455898]
[-7.03957987 -3.65516543]
[-22.76136971 -8.31964684]
[-26.31905365 -24.32823563]
[-14.05279255 -35.21266937]
[1.41893625 -29.77597427]
[4.18014431 -13.61095715]
[14.13593578 -2.39123249]
[24.09172821 8.82849216]
[34.04751968 20.04821587]
[44.00331116 31.26794052]
[53.95910263 42.48766708]
[63.91489410 53.70738983]
[70.25746918 56.98267365]
[76.09585571 60.81438446]
[70.48155975 46.90468597]
[64.86727142 32.99498367]
[59.25297546 19.08528709]
[53.63868713 5.17558718]
[42.10346603 -7.24918938]
[50.84941101 -21.77312660]
[67.22686768 -17.38960266]
[67.54838562 -0.43870470]
[73.16267395 13.47099400]
[78.77696991 27.38069344]
[84.39125824 41.29039383]
[90.00555420 55.20009232]
[91.71707153 54.85231018]
[93.44058990 54.56988907]
[93.75161743 39.57311630]
[94.06263733 24.57633972]
[94.37366486 9.57956409]
[94.68469238 -5.41721058]
[85.44514465 -21.37182808]
[95.16995239 -36.00499725]
[95.32547760 -51.00419235]
[95.48099518 -66.00338745]
[95.63652039 -81.00257874]
[89.75473022 -96.90354919]
[103.40603638 -106.95730591]
[116.84594727 -96.62265015]
[110.63571167 -80.84706116]
[110.48019409 -65.84786224]
[110.32466888 -50.84867096]
[110.16915131 -35.84947586]
[118.39193726 -27.01976585]
[118.41458893 -14.55408382]
[109.68146515 -5.10618401]
[109.37044525 9.89059067]
[109.05941772 24.88736534]
[108.74839020 39.88414001]
[108.43736267 54.88091660]
[113.13928223 56.01955032]
[117.69524384 57.64673615]
[125.66161346 44.93701553]
[133.62797546 32.22729492]
[141.59434509 19.51757431]
[149.56071472 6.80785322]
[157.52708435 -5.90186739]
[158.30030823 -21.70416832]
[171.61557007 -28.37896156]
[179.58193970 -41.08868027]
[187.54830933 -53.79840088]
[183.77056885 -69.14454651]
[192.02203369 -82.62374878]
[207.40725708 -86.23902893]
[220.79846191 -77.84551239]
[224.25088501 -62.42292023]
[215.71626282 -49.12120438]
[200.25802612 -45.83203506]
[192.29165649 -33.12231445]
[184.32528687 -20.41259384]
[184.12188721 -5.51937819]
[170.23680115 2.06449938]
[162.27043152 14.77421951]
[154.30406189 27.48394012]
[146.33770752 40.19366074]
[138.37133789 52.90338135]
[130.40496826 65.61310577]
[141.58186340 65.42763519]
[153.38005066 67.96986389]
[167.26046753 62.28353882]
[181.14086914 56.59720993]
[195.02127075 50.91088486]
[208.90168762 45.22455978]
[222.78208923 39.53823471]
[229.49606323 33.41937256]
[236.83601379 33.86573029]
[250.77462769 28.32362366]
[264.71325684 22.78151703]
[278.62295532 17.16722488]
[292.50335693 11.48089981]
[306.38375854 5.79457331]
[320.26416016 0.10824748]
[329.86437988 -13.18715286]
[346.14895630 -11.25185966]
[352.36566162 3.92326283]
[342.11932373 16.72735023]
[325.95050049 13.98865414]
[312.07006836 19.67498016]
[298.18966675 25.36130714]
[284.30926514 31.04763222]
[279.33566284 36.46403885]
[270.25534058 36.72013474]
[256.31674194 42.26224136]
[242.37811279 47.80434799]
[228.46841431 53.41864014]
[214.58801270 59.10496521]
[200.70761108 64.79129028]
[186.82719421 70.47761536]
[172.94679260 76.16394806]
[159.06637573 81.85027313]
[160.85067749 96.74376678]
[175.68148804 98.99038696]
[190.51228333 101.23700714]
[205.34309387 103.48362732]
[220.17388916 105.73023987]
[235.00468445 107.97686005]
[245.80645752 96.83676910]
[261.09899902 94.20654297]
[275.00198364 101.09754181]
[282.16949463 114.86005402]
[279.84542847 130.20210266]
[268.92346191 141.22434998]
[253.60328674 143.68853760]
[239.77584839 136.64710999]
[232.75807190 122.80766296]
[217.92727661 120.56104279]
[203.09646606 118.31442261]
[188.26567078 116.06781006]
[173.43486023 113.82118988]
[158.60406494 111.57456970]
[155.51097107 118.40705109]
[169.17593384 124.59323120]
[177.91706848 136.78308105]
[162.98976135 138.25819397]
[149.32479858 132.07202148]
[146.23170471 138.90449524]
[157.70568848 148.56614685]
[169.17968750 158.22781372]
[180.65367126 167.88946533]
[192.12765503 177.55111694]
[203.60163879 187.21278381]
[215.07563782 196.87443542]
[223.61003113 199.98599243]
[226.61782837 206.69622803]
[237.99102783 216.47633362]
[254.19702148 218.98580933]
[259.87368774 234.37112427]
[249.18132019 246.80517578]
[233.11933899 243.49687195]
[228.21092224 227.84953308]
[216.83772278 218.06942749]
[205.41397095 208.34841919]
[193.93998718 198.68676758]
[182.46600342 189.02511597]
[170.99200439 179.36344910]
[159.51802063 169.70179749]
[148.04403687 160.04014587]
[136.57005310 150.37847900]
[120.23107147 158.24606323]
[102.48477936 161.01612854]
[84.86869049 158.55024719]
[68.87982178 151.15925598]
[55.84749603 139.56820679]
[46.82291412 124.84629822]
[38.46512985 137.30210876]
[36.29927444 146.12406921]
[29.95556259 149.84313965]
[21.46908569 162.21162415]
[12.98260689 174.58012390]
[4.49612904 186.94862366]
[3.06838942 202.70527649]
[-10.51217651 208.82226562]
[-18.99865341 221.19075012]
[-27.42089844 233.60307312]
[-35.77868271 246.05889893]
[-44.13646698 258.51470947]
[-52.42956543 271.01370239]
[-60.65775681 283.55551147]
[-68.88594818 296.09732056]
[-55.94901276 288.50549316]
[-41.37374115 284.96127319]
[-26.39528847 285.76504517]
[-12.28298664 290.84863281]
[-0.23275737 299.78125000]
[8.73421955 311.80596924]
[13.85805225 325.90368652]
[14.70452881 340.87979126]
[11.20191574 355.46511841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 64]
[11 63]
[12 62]
[16 60]
[17 59]
[18 58]
[19 57]
[21 55]
[22 54]
[23 53]
[25 51]
[26 50]
[27 49]
[30 43]
[31 42]
[66 293]
[67 292]
[68 291]
[70 290]
[71 289]
[72 288]
[74 287]
[75 286]
[77 284]
[78 283]
[79 282]
[80 281]
[81 279]
[82 278]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 98]
[90 97]
[91 96]
[108 125]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[147 157]
[148 156]
[149 155]
[150 154]
[166 191]
[167 190]
[168 189]
[169 188]
[170 187]
[171 186]
[173 184]
[174 183]
[175 182]
[193 224]
[194 223]
[195 222]
[196 221]
[197 220]
[198 219]
[200 218]
[201 217]
[202 216]
[203 214]
[204 213]
[205 212]
[206 211]
[225 244]
[226 243]
[227 242]
[228 241]
[229 240]
[230 239]
[250 272]
[251 271]
[252 270]
[253 269]
[254 268]
[255 267]
[256 266]
[258 265]
[259 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
