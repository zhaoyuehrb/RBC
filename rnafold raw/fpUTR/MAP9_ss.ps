%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCUUCGUCUGGGUGGUUGCCCCAGCGACACGUUGGGCCGAAGAGCGGUGUUGGGUACCCGAGAGACCCGGCGGUGGGGAAGUCACUUCCUCCCGAAGACGCUGUUUCCUAGCAACCGCCCUCCGCCUCUGUUAUUAGCCCCUCCUCCUCGCUCGGUCCAGGACCGGCUCUGCGGGCGCCGCCAGGCCCAGACCAAGCUACUAUCAGAAGUUGAAUUCUAAUAAUUAGCUAUUUUAUAAAGGUAACGAGAAA\
AAAUACACU\
) } def
/len { sequence length } bind def

/coor [
[485.62347412 863.97546387]
[491.86331177 850.25219727]
[501.20654297 838.42138672]
[513.10998535 829.17095947]
[526.88165283 823.03863525]
[524.22827148 808.27514648]
[521.57495117 793.51171875]
[518.92156982 778.74822998]
[500.98709106 755.57348633]
[508.31091309 732.98785400]
[498.65399170 721.50988770]
[488.99703979 710.03192139]
[479.34008789 698.55395508]
[469.68316650 687.07598877]
[460.02621460 675.59802246]
[450.36926270 664.12011719]
[440.71234131 652.64215088]
[430.91998291 641.27947998]
[420.99365234 630.03369141]
[411.06729126 618.78790283]
[396.84414673 614.36621094]
[393.51260376 598.89978027]
[383.58624268 587.65399170]
[368.58862305 587.38726807]
[358.26867676 598.27294922]
[347.94873047 609.15869141]
[337.62878418 620.04443359]
[327.30886841 630.93011475]
[316.98892212 641.81585693]
[306.66897583 652.70153809]
[300.15960693 668.35607910]
[283.31491089 666.43475342]
[280.49807739 649.71643066]
[295.78326416 642.38159180]
[306.10321045 631.49591064]
[316.42312622 620.61016846]
[326.74307251 609.72448730]
[337.06301880 598.83874512]
[347.38296509 587.95306396]
[357.70291138 577.06732178]
[359.30032349 562.15264893]
[351.51977539 549.32830811]
[343.73922729 536.50396729]
[330.52252197 529.63610840]
[329.97937012 513.82421875]
[322.19882202 500.99990845]
[314.41827393 488.17559814]
[306.63772583 475.35125732]
[298.85717773 462.52694702]
[291.00076294 449.74896240]
[283.06875610 437.01779175]
[275.13671875 424.28662109]
[261.83950806 417.57589722]
[261.10894775 401.77157593]
[253.17692566 389.04037476]
[245.24490356 376.30920410]
[237.31288147 363.57803345]
[229.38085938 350.84683228]
[226.08152771 349.69436646]
[223.16751099 346.90502930]
[221.39387512 342.67303467]
[221.40246582 337.51892090]
[213.92814636 324.51376343]
[206.45382690 311.50857544]
[198.97950745 298.50338745]
[191.50518799 285.49822998]
[178.45501709 278.31893921]
[178.28689575 262.49862671]
[170.81257629 249.49345398]
[167.55632019 248.22438049]
[164.74333191 245.33319092]
[163.12129211 241.04080200]
[163.31314087 235.89025879]
[156.30598450 222.62754822]
[143.51934814 214.98875427]
[143.91384888 199.17247009]
[136.90669250 185.90975952]
[124.12005615 178.27096558]
[124.51456451 162.45468140]
[117.50740814 149.19195557]
[110.50025177 135.92924500]
[103.49308777 122.66651917]
[78.99745941 121.39012909]
[63.31425476 95.03131104]
[51.66639709 85.57999420]
[40.01853943 76.12867737]
[24.50887680 77.57371521]
[12.83092976 67.82280731]
[11.54889202 53.02780533]
[-0.09896635 43.57648849]
[-11.74682426 34.12517166]
[-23.39468193 24.67385292]
[-39.43616486 24.89821815]
[-49.50148773 12.40546703]
[-45.86939621 -3.22103167]
[-31.32611847 -9.99396515]
[-17.02801323 -2.71771789]
[-13.94336414 13.02599525]
[-2.29550672 22.47731209]
[9.35235119 31.92863083]
[21.00020981 41.37994766]
[35.74202347 39.58703995]
[47.68924332 49.00609207]
[49.46985626 64.48081970]
[61.11771393 73.93213654]
[72.76557159 83.38345337]
[79.22339630 79.56947327]
[71.59543610 66.65381622]
[63.96768188 53.73803711]
[76.88359070 46.11050034]
[84.51108551 59.02585220]
[92.13905334 71.94150543]
[98.59687805 68.12752533]
[95.94352722 53.36406326]
[93.29017639 38.60060501]
[90.63681793 23.83714676]
[87.98346710 9.07368755]
[74.17335510 2.24822307]
[67.11286163 -11.24262142]
[69.32395935 -26.12801743]
[79.75138092 -36.73022461]
[77.09803009 -51.49368668]
[64.79994965 -61.79595947]
[65.33090210 -77.83022308]
[78.28357697 -87.29636383]
[93.72179413 -82.93276215]
[99.80267334 -68.08680725]
[91.86148834 -54.14703751]
[94.51483917 -39.38357925]
[107.98142242 -33.07571030]
[115.23726654 -19.89175224]
[113.31615448 -4.78669500]
[102.74692535 6.42033339]
[105.40027618 21.18379211]
[108.05363464 35.94725037]
[110.70698547 50.71070862]
[113.36033630 65.47416687]
[123.55978394 75.20468903]
[128.65428162 87.19309235]
[128.55615234 99.15223694]
[124.09201050 109.09453583]
[116.75581360 115.65936279]
[123.76296997 128.92208862]
[130.77012634 142.18479919]
[137.77728271 155.44752502]
[151.06512451 164.03494263]
[150.16941833 178.90258789]
[157.17657471 192.16531372]
[170.46441650 200.75273132]
[169.56871033 215.62039185]
[176.57586670 228.88310242]
[183.81774902 242.01913452]
[191.29206848 255.02430725]
[204.87686157 263.13381958]
[204.51037598 278.02389526]
[211.98469543 291.02908325]
[219.45899963 304.03424072]
[226.93331909 317.03942871]
[234.40763855 330.04461670]
[242.11203003 342.91482544]
[250.04406738 355.64599609]
[257.97607422 368.37716675]
[265.90811157 381.10836792]
[273.84014893 393.83953857]
[287.70468140 401.46087646]
[287.86788940 416.35458374]
[295.79992676 429.08575439]
[303.73193359 441.81695557]
[310.90145874 447.42211914]
[311.68151855 454.74639893]
[319.46206665 467.57070923]
[327.24258423 480.39505005]
[335.02313232 493.21936035]
[342.80368042 506.04367065]
[356.57690430 513.82885742]
[356.56353760 528.72344971]
[364.34408569 541.54772949]
[372.12463379 554.37207031]
[384.53112793 556.43890381]
[393.21307373 565.42340088]
[394.83203125 577.72766113]
[404.75839233 588.97344971]
[419.69152832 594.19946289]
[422.31307983 608.86157227]
[432.23944092 620.10736084]
[442.16577148 631.35314941]
[448.25155640 633.79687500]
[451.69540405 638.26519775]
[452.19027710 642.98516846]
[461.84722900 654.46313477]
[471.50418091 665.94110107]
[481.16110229 677.41906738]
[490.81805420 688.89703369]
[500.47500610 700.37500000]
[510.13192749 711.85290527]
[519.78887939 723.33087158]
[535.09497070 718.62585449]
[552.40649414 725.43212891]
[563.16857910 743.70697021]
[576.93139648 749.67236328]
[590.69415283 755.63769531]
[604.45697021 761.60308838]
[618.21972656 767.56848145]
[636.47637939 765.05084229]
[646.35015869 779.57562256]
[660.18267822 785.37744141]
[674.01525879 791.17926025]
[689.73400879 789.38189697]
[698.47802734 801.43969727]
[712.31054688 807.24151611]
[726.14312744 813.04333496]
[739.97564697 818.84515381]
[754.50689697 812.63085938]
[769.14495850 818.58929443]
[775.20526123 833.18548584]
[769.09240723 847.75970459]
[754.43298340 853.66534424]
[739.92419434 847.39868164]
[734.17382812 832.67767334]
[720.34130859 826.87585449]
[706.50878906 821.07403564]
[692.67620850 815.27227783]
[677.94683838 817.48461914]
[668.21343994 805.01177979]
[654.38092041 799.20996094]
[640.54833984 793.40820312]
[629.25866699 797.69390869]
[617.69927979 792.99987793]
[612.25433350 781.33123779]
[598.49157715 775.36584473]
[584.72875977 769.40051270]
[570.96600342 763.43511963]
[557.20318604 757.46972656]
[551.32366943 762.12603760]
[560.63623047 773.88513184]
[569.94879150 785.64416504]
[579.26123047 797.40344238]
[567.50183105 806.71563721]
[558.18975830 794.95678711]
[548.87713623 783.19769287]
[539.56457520 771.43859863]
[533.68505859 776.09490967]
[536.33837891 790.85833740]
[538.99176025 805.62182617]
[541.64508057 820.38525391]
[556.69018555 821.33850098]
[571.06976318 825.86529541]
[583.94781494 833.70233154]
[594.57556152 844.39410400]
[602.33526611 857.31890869]
[606.77563477 871.72540283]
[607.63861084 886.77593994]
[604.87396240 901.59552002]
[598.64251709 915.32257080]
[589.30639648 927.15899658]
[577.40856934 936.41668701]
[563.64062500 942.55731201]
[548.80310059 945.22399902]
[533.75860596 944.26165771]
[519.38177490 939.72613525]
[506.50851440 931.88128662]
[495.88720703 921.18310547]
[488.13537598 908.25354004]
[483.70370483 893.84442139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 245]
[6 244]
[7 243]
[8 242]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 186]
[19 185]
[20 184]
[22 182]
[23 181]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[41 178]
[42 177]
[43 176]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 168]
[51 167]
[52 166]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[62 159]
[63 158]
[64 157]
[65 156]
[66 155]
[68 153]
[69 152]
[73 151]
[74 150]
[76 148]
[77 147]
[79 145]
[80 144]
[81 143]
[82 142]
[84 106]
[85 105]
[86 104]
[89 101]
[90 100]
[91 99]
[92 98]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[121 129]
[122 128]
[199 233]
[200 232]
[201 231]
[202 230]
[203 229]
[205 226]
[206 225]
[207 224]
[209 222]
[210 221]
[211 220]
[212 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
