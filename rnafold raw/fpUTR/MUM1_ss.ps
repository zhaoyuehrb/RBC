%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGAGCGGCGGCGGCGGCGGCGGCGGCGGUGGCGGAGGCGGACACAUUGGCGUGAGACCUGGGAGUACGUUGUGCCAAAUCAUUGCCACUUGCCACAUGAGUGUAA\
) } def
/len { sequence length } bind def

/coor [
[115.88097382 128.10789490]
[109.70245361 141.77632141]
[103.52393341 155.44474792]
[104.89007568 171.20686340]
[92.59724426 179.61730957]
[94.75662231 195.87367249]
[81.59470367 205.65609741]
[66.65132904 198.90126038]
[65.29897308 182.55796814]
[78.92881775 173.43879700]
[77.12075043 158.65434265]
[89.85550690 149.26623535]
[96.03402710 135.59780884]
[102.21253967 121.92937469]
[91.98773956 110.95424652]
[77.91670990 116.15097809]
[67.65177917 128.19015503]
[53.03214264 125.34138489]
[38.96110916 130.53811646]
[28.90115547 143.48915100]
[12.69436646 140.98475647]
[7.01289892 125.60122681]
[17.70135880 113.16382599]
[33.76437759 116.46708679]
[47.83540726 111.27035522]
[57.09388733 99.60288239]
[72.71997833 102.07994843]
[86.79100800 96.88321686]
[97.90972900 86.81474304]
[104.47257233 73.32663727]
[111.03542328 59.83853149]
[117.59826660 46.35042191]
[123.96958160 32.77079391]
[130.14810181 19.10236740]
[136.32662964 5.43393993]
[142.50514221 -8.23448753]
[148.68365479 -21.90291405]
[154.86218262 -35.57134247]
[161.04069519 -49.23976898]
[159.67456055 -65.00188446]
[171.96739197 -73.41233063]
[178.14590454 -87.08075714]
[175.11825562 -106.91157532]
[191.02734375 -117.74835205]
[196.42266846 -131.74444580]
[196.60778809 -141.02735901]
[202.17379761 -146.05668640]
[207.96304321 -159.89448547]
[213.75228882 -173.73228455]
[219.54153442 -187.57008362]
[218.82261658 -193.04045105]
[220.22785950 -197.72018433]
[223.06333923 -200.90866089]
[226.45365906 -202.30238342]
[233.39558411 -215.59936523]
[240.33749390 -228.89634705]
[247.27940369 -242.19334412]
[254.22132874 -255.49032593]
[245.44706726 -268.03109741]
[243.51733398 -283.21447754]
[248.87557983 -297.55139160]
[260.29049683 -307.74740601]
[275.13903809 -311.45947266]
[290.00909424 -307.83462524]
[301.48367310 -297.70581055]
[306.92596436 -283.40054321]
[305.08538818 -268.20611572]
[296.38488770 -255.61405945]
[282.82379150 -248.51794434]
[267.51831055 -248.54840088]
[260.57638550 -235.25141907]
[253.63447571 -221.95443726]
[246.69256592 -208.65745544]
[239.75065613 -195.36047363]
[233.37933350 -181.78083801]
[227.59008789 -167.94303894]
[221.80084229 -154.10523987]
[216.01159668 -140.26744080]
[210.41874695 -126.34910583]
[205.02342224 -112.35302734]
[210.05450439 -103.25427246]
[209.14859009 -92.67449188]
[202.36706543 -84.21784973]
[191.81433105 -80.90224457]
[185.63581848 -67.23381042]
[187.44387817 -52.44935608]
[174.70912170 -43.06125259]
[168.53060913 -29.39282417]
[162.35208130 -15.72439671]
[156.17356873 -2.05596900]
[149.99505615 11.61245823]
[143.81652832 25.28088570]
[137.63801575 38.94931412]
[137.75227356 46.45009613]
[131.08638000 52.91326523]
[124.52352905 66.40137482]
[117.96068573 79.88948059]
[111.39783478 93.37759399]
[118.89782715 80.38719940]
[130.70916748 71.14099884]
[145.12016296 66.97891998]
[160.04241943 68.50412750]
[173.31341553 75.49559784]
[183.00994873 86.94013977]
[187.72679138 101.17921448]
[186.78039551 116.14933014]
[180.30792236 129.68103027]
[169.24734497 139.81333923]
[155.20155334 145.07788086]
[140.20600891 144.71174622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[5 10]
[15 28]
[16 27]
[18 25]
[19 24]
[29 98]
[30 97]
[31 96]
[32 95]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[41 85]
[42 84]
[44 80]
[45 79]
[47 78]
[48 77]
[49 76]
[50 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
