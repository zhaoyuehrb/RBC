%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGGAAACAGCUGAUUGAUCAGCCUGGCUCAGGCUUGGGGCGGGGAUUGGCUGAUUGGCAGCAACGCCACGGGACAGCCAAGCUAGAAGCCUGAGGAGCCGGAGAGGGUGCUGGCUGCCGCGCGGCCGAGUGUGUUUUAUGGACCAUGUGCUGCUAUGUAUGCCUGAAGAAGUACUUGAAAUGCAAAUUUGGGGAGACUUUGCCAUAUAA\
) } def
/len { sequence length } bind def

/coor [
[216.03225708 285.61029053]
[216.86256409 300.58728027]
[212.90936279 315.05697632]
[204.57923889 327.53131104]
[192.72883606 336.72738647]
[178.57687378 341.69949341]
[163.57873535 341.93630981]
[149.27685547 337.41345215]
[137.14204407 328.59606934]
[128.42224121 316.39093018]
[124.01421356 302.05325317]
[124.37115479 287.05813599]
[116.58561707 299.87942505]
[108.80007935 312.70071411]
[101.01454163 325.52200317]
[93.22899628 338.34329224]
[93.40736389 354.74145508]
[79.15940094 362.86105347]
[65.14218903 354.34930420]
[65.77543640 337.96237183]
[80.40771484 330.55773926]
[88.19325256 317.73648071]
[95.97879028 304.91519165]
[103.76432800 292.09390259]
[111.54986572 279.27261353]
[111.48144531 269.55667114]
[119.41805267 262.01309204]
[123.99013519 247.72686768]
[128.56222534 233.44064331]
[133.13430786 219.15441895]
[134.01875305 204.18052673]
[131.16023254 189.45541382]
[128.30172729 174.73030090]
[125.44320679 160.00518799]
[122.58469391 145.28007507]
[119.72618103 130.55496216]
[85.24604034 126.70320129]
[75.35503387 99.70365906]
[59.62161255 101.36799622]
[50.97992325 89.23661041]
[37.19696426 83.31799316]
[23.41400528 77.39937592]
[9.63104534 71.48075867]
[-7.68470621 79.16997528]
[-24.82739830 71.88412476]
[-31.08979034 54.68126297]
[-45.04132080 49.17173767]
[-60.71880722 51.29938889]
[-69.71454620 39.42816544]
[-83.66607666 33.91864014]
[-97.61759949 28.40911674]
[-111.56912994 22.89959335]
[-125.52066040 17.39006805]
[-139.47218323 11.88054466]
[-153.42372131 6.37102079]
[-171.40826416 15.33160686]
[-189.89823914 8.28336906]
[-197.12780762 -9.80799484]
[-211.30938721 -14.69500351]
[-225.49096680 -19.58201218]
[-239.67253113 -24.46902084]
[-253.76744080 -17.31994438]
[-268.76303101 -22.31072807]
[-275.76269531 -36.48042679]
[-270.61364746 -51.42240906]
[-256.37072754 -58.27186584]
[-241.48400879 -52.96512985]
[-234.78552246 -38.65060043]
[-220.60395813 -33.76359177]
[-206.42237854 -28.87658119]
[-192.24079895 -23.98957253]
[-184.56823730 -30.80491638]
[-174.68193054 -33.84501648]
[-164.34548950 -32.49746323]
[-155.43202209 -26.93887711]
[-149.58473206 -18.11503410]
[-147.91419983 -7.58050776]
[-133.96266174 -2.07098365]
[-120.01113892 3.43854022]
[-106.05960846 8.94806385]
[-92.10807800 14.45758820]
[-78.15654755 19.96711159]
[-64.20502472 25.47663689]
[-49.52544022 22.95490646]
[-39.53179550 35.22020721]
[-25.58026695 40.72973251]
[-16.34805870 34.02959061]
[-4.90960455 32.60265350]
[5.90838575 36.91809464]
[13.37618542 46.01151276]
[15.54966164 57.69779968]
[29.33262062 63.61641693]
[43.11558151 69.53503418]
[56.89854050 75.45365143]
[71.64611053 73.36598206]
[81.27365112 85.92070007]
[94.09494019 78.13516235]
[95.20013428 63.17593384]
[96.19497681 48.20896149]
[97.07942200 33.23505783]
[97.96385956 18.26115608]
[98.84830475 3.28725362]
[99.73274231 -11.68664932]
[100.61718750 -26.66055107]
[88.53824615 -36.40112686]
[84.52405548 -51.38998413]
[90.11814880 -65.86360168]
[103.16948700 -74.25658417]
[118.65956879 -73.34165955]
[130.63212585 -63.47062302]
[134.48348999 -48.43909836]
[128.73271179 -34.02701569]
[115.59108734 -25.77610970]
[114.70664978 -10.80220699]
[113.82220459 4.17169571]
[112.93776703 19.14559937]
[112.05332184 34.11950302]
[111.16887665 49.09340286]
[113.91205597 55.95487213]
[110.15936279 64.28112793]
[109.05416870 79.24035645]
[115.52153015 83.03815460]
[128.45625305 90.63375092]
[134.92359924 94.43154907]
[147.44915771 86.17864227]
[159.97473145 77.92574310]
[172.50028992 69.67284393]
[185.02584839 61.41994095]
[186.20172119 48.00326157]
[194.76475525 37.86122894]
[207.41798401 34.55147934]
[219.48573303 39.06547165]
[232.13165283 30.99820518]
[244.77755737 22.93093872]
[250.32829285 15.67843819]
[257.67001343 14.83954239]
[270.43353271 6.95966339]
[283.19705200 -0.92021525]
[295.96057129 -8.80009365]
[306.26184082 -22.26562881]
[322.05279541 -16.09459114]
[320.49429321 0.78757244]
[303.84045410 3.96342897]
[291.07693481 11.84330750]
[278.31341553 19.72318649]
[265.54989624 27.60306549]
[252.84483337 35.57685471]
[240.19891357 43.64412308]
[227.55299377 51.71138763]
[224.62745667 68.27349091]
[210.34704590 77.78186035]
[193.27874756 73.94550323]
[180.75318909 82.19840240]
[168.22763062 90.45130157]
[155.70207214 98.70420074]
[143.17651367 106.95710754]
[157.33462524 102.00254822]
[171.56309509 106.75128937]
[179.90754700 119.21604919]
[178.87594604 134.18052673]
[168.90000916 145.38233948]
[154.15449524 148.13371277]
[140.81018066 141.28323364]
[134.45129395 127.69644928]
[137.30979919 142.42156982]
[140.16831970 157.14666748]
[143.02684021 171.87178040]
[145.88534546 186.59689331]
[148.74386597 201.32200623]
[160.72711182 201.17535400]
[172.83059692 209.91784668]
[183.23985291 220.71817017]
[193.64910889 231.51850891]
[204.05836487 242.31884766]
[214.46763611 253.11918640]
[232.27740479 257.80099487]
[235.83689880 274.98587036]
[246.40432739 285.63150024]
[256.97174072 296.27716064]
[272.18511963 300.62036133]
[275.66018677 315.10391235]
[286.22760010 325.74957275]
[296.79501343 336.39520264]
[307.36245728 347.04083252]
[323.32040405 350.81915283]
[327.76742554 366.60385132]
[316.12878418 378.15695190]
[300.37734985 373.59365845]
[296.71679688 357.60824585]
[286.14938354 346.96261597]
[275.58197021 336.31698608]
[265.01455688 325.67135620]
[250.55702209 322.08956909]
[246.32609558 306.84457397]
[235.75868225 296.19891357]
[225.19126892 285.55328369]
[213.10096741 285.19543457]
[204.21000671 276.41418457]
[203.66729736 263.52844238]
[193.25804138 252.72811890]
[182.84877014 241.92778015]
[172.43951416 231.12744141]
[162.03025818 220.32710266]
[147.42053223 223.72651672]
[142.84844971 238.01272583]
[138.27635193 252.29895020]
[133.70426941 266.58517456]
[144.79008484 256.48046875]
[158.50437927 250.40444946]
[173.43676758 248.98196411]
[188.05162048 252.35928345]
[200.84590149 260.18911743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[27 207]
[28 206]
[29 205]
[30 204]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[38 96]
[40 94]
[41 93]
[42 92]
[43 91]
[46 86]
[47 85]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 71]
[59 70]
[60 69]
[61 68]
[97 121]
[98 120]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[132 149]
[133 148]
[134 147]
[136 146]
[137 145]
[138 144]
[139 143]
[171 203]
[172 202]
[173 201]
[174 200]
[175 199]
[177 196]
[178 195]
[179 194]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
