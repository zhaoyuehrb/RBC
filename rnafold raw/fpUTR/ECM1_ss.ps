%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAGGAGCAGCUGGGACUGAGUCAUGGCAGGAAGCUGAGGAGGGCGGGAGAUCACACCAGACAAUUAUAAAAGAAGAGCUGGUCCUGAAGCUCACAACCGUAACAGCCACCAGACAAGCUUCAGUGGCCGGCCCUUCACAUCCAGACUUGCCUGAGAGGACCCACCUCUGAGUGUCCAGUGGUCAGUUGCCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[77.65180206 469.73086548]
[62.30996323 469.00738525]
[49.39396667 460.69638062]
[42.37815094 447.03350830]
[43.14974213 431.69400024]
[51.50117874 418.80413818]
[65.18596649 411.83117676]
[65.89256287 396.84783936]
[58.76338959 383.77020264]
[67.14218140 370.34982300]
[67.84877777 355.36648560]
[68.55537415 340.38314819]
[69.26197052 325.39978027]
[69.96856689 310.41644287]
[70.67516327 295.43310547]
[71.38175964 280.44973755]
[72.08835602 265.46640015]
[63.20919037 250.33386230]
[73.27416992 234.91874695]
[73.74533081 219.92614746]
[74.21649170 204.93354797]
[74.68765259 189.94094849]
[71.75294495 183.15058899]
[75.28580475 174.71708679]
[68.15663147 161.63946533]
[76.53541565 148.21908569]
[77.24201202 133.23573303]
[77.94860840 118.25238800]
[88.80513000 90.08379364]
[85.07478333 75.55504608]
[81.34442902 61.02630234]
[77.61408234 46.49755478]
[73.88373566 31.96880722]
[70.15338898 17.44005966]
[60.47716522 12.44760513]
[55.25778580 3.14297247]
[56.01034164 -7.27876377]
[62.24486160 -15.38845921]
[58.97271347 -30.02721024]
[55.70056534 -44.66596222]
[50.77035141 -52.36649323]
[52.49390030 -59.56029892]
[49.45209122 -74.24864197]
[39.07704926 -86.19306183]
[44.07266235 -100.22492218]
[32.97819519 -110.32010651]
[18.06878090 -111.96612549]
[3.50290060 -105.78990173]
[-8.29846382 -114.87709808]
[-18.64165306 -103.30998230]
[-33.81552505 -100.06448364]
[-47.98541260 -106.38855743]
[-55.70270920 -119.85046387]
[-53.99995422 -135.27383423]
[-43.53189087 -146.72805786]
[-28.32370567 -149.80876160]
[-14.22325420 -143.33134460]
[-6.65244865 -129.78651428]
[6.84700966 -136.08045959]
[19.71479416 -126.87553406]
[34.62421036 -125.22952271]
[22.32910919 -133.82199097]
[10.03400803 -142.41445923]
[-4.24651289 -147.00430298]
[-15.15869713 -157.29626465]
[-20.57541466 -171.28407288]
[-19.44077301 -186.24110413]
[-11.97595024 -199.25173950]
[0.36392128 -207.77978516]
[15.17340946 -210.16285706]
[29.56567574 -205.93643188]
[40.73520660 -195.92436218]
[46.50471115 -182.07832336]
[45.75009155 -167.09936523]
[49.44185638 -152.56076050]
[53.13362122 -138.02217102]
[56.86396790 -152.55091858]
[60.59431839 -167.07966614]
[64.32466888 -181.60841370]
[60.26240921 -196.89921570]
[70.92177582 -207.30244446]
[74.65212250 -221.83119202]
[78.38246918 -236.35993958]
[82.11281586 -250.88868713]
[85.84316254 -265.41741943]
[89.57351685 -279.94616699]
[93.30386353 -294.47491455]
[96.91999054 -309.03253174]
[100.42166901 -323.61807251]
[103.92334747 -338.20361328]
[107.42503357 -352.78918457]
[110.92671204 -367.37472534]
[114.42839050 -381.96026611]
[117.93006897 -396.54580688]
[121.43175507 -411.13137817]
[108.03731537 -418.04891968]
[96.68804169 -427.97149658]
[88.04376221 -440.32220459]
[82.60704041 -454.38296509]
[80.69395447 -469.33636475]
[82.41574097 -484.31295776]
[87.67229462 -498.44207764]
[96.15800476 -510.90228271]
[107.37951660 -520.96911621]
[120.68443298 -528.05731201]
[135.29922485 -531.75476074]
[150.37420654 -531.84655762]
[165.03292847 -528.32733154]
[178.42317200 -521.40161133]
[189.76643372 -511.47216797]
[198.40322876 -499.11624146]
[203.83142090 -485.05215454]
[205.73542786 -470.09762573]
[204.00456238 -455.12207031]
[198.73945618 -440.99612427]
[190.24618530 -428.54110718]
[179.01856995 -418.48107910]
[165.70936584 -411.40093994]
[151.09233093 -407.71234131]
[136.01730347 -407.62969971]
[132.51562500 -393.04412842]
[129.01394653 -378.45858765]
[125.51226044 -363.87304688]
[122.01058197 -349.28747559]
[118.50889587 -334.70193481]
[115.00721741 -320.11639404]
[111.50553894 -305.53085327]
[113.00227356 -298.28643799]
[107.83261108 -290.74456787]
[104.10226440 -276.21582031]
[100.37191010 -261.68707275]
[96.64156342 -247.15834045]
[92.91121674 -232.62959290]
[89.18087006 -218.10084534]
[85.45052338 -203.57209778]
[89.77959442 -189.32048035]
[78.85341644 -177.87805176]
[75.12306213 -163.34930420]
[71.39271545 -148.82055664]
[67.66236877 -134.29180908]
[69.68048096 -115.59293365]
[58.76100159 -103.26673126]
[68.91847229 -92.37292480]
[64.14043427 -77.29045105]
[67.18224335 -62.60210800]
[70.33931732 -47.93811035]
[73.61146545 -33.29935837]
[76.88361359 -18.66060829]
[90.98065186 -5.43332815]
[84.68213654 13.70971107]
[88.41248322 28.23845863]
[92.14282990 42.76720428]
[95.87317657 57.29595184]
[99.60353088 71.82469940]
[103.33387756 86.35344696]
[112.71251678 98.05990601]
[128.52122498 97.43106842]
[136.34864807 110.10311127]
[149.71374512 116.91297150]
[163.07884216 123.72282410]
[176.44393921 130.53268433]
[189.80903625 137.34254456]
[205.44979858 133.77241516]
[217.90255737 143.88717651]
[217.61462402 159.92764282]
[204.80685425 169.58894348]
[189.30429077 165.45976257]
[182.99917603 150.70764160]
[169.63407898 143.89778137]
[156.26898193 137.08792114]
[142.90388489 130.27806091]
[129.53878784 123.46820831]
[114.68604279 124.58413696]
[105.90265656 111.42500305]
[92.93196106 118.95898438]
[92.22535706 133.94233704]
[91.51876068 148.92567444]
[98.59739685 163.07501221]
[90.26914978 175.42367554]
[89.68025208 190.41210938]
[89.20909119 205.40470886]
[88.73793030 220.39730835]
[88.26676941 235.38990784]
[96.51390076 245.31454468]
[95.80760956 257.79766846]
[87.07170105 266.17300415]
[86.36510468 281.15634155]
[85.65850830 296.13967896]
[84.95191193 311.12304688]
[84.24531555 326.10638428]
[83.53871918 341.08972168]
[82.83212280 356.07308960]
[82.12552643 371.05642700]
[89.20416260 385.20574951]
[80.87591553 397.55441284]
[80.16931915 412.53778076]
[93.13716125 420.76763916]
[100.23848724 434.38626099]
[99.56307983 449.73028564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[19 183]
[20 182]
[21 181]
[22 180]
[24 179]
[26 177]
[27 176]
[28 175]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[38 148]
[39 147]
[40 146]
[42 145]
[43 144]
[45 142]
[46 61]
[47 60]
[49 58]
[76 140]
[77 139]
[78 138]
[79 137]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[156 174]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
