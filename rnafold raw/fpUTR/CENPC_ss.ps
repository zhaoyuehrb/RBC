%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGUGUUGUUAGCGCGCGCCUUCCGGAUCGCAGCUCUCGCGGCAGUCGCCUGAGACUUAAGGUUAUUGCUUGGCCGCGGCCUGGUAUUCCGGCGAUUCGUUUCUUGCUCGGCUUCCUGGAGCUGUGGUCCGUGUGGGCUUCCACCUCAGACAGUUGCGCUGGCUCAGCGGGGCCGGAAC\
) } def
/len { sequence length } bind def

/coor [
[263.47399902 497.71548462]
[255.46257019 485.03411865]
[247.45112610 472.35275269]
[239.33172607 459.74023438]
[231.10494995 447.19750977]
[222.87817383 434.65478516]
[207.91313171 435.67843628]
[201.47088623 449.22454834]
[195.02864075 462.77066040]
[188.58638000 476.31677246]
[182.14413452 489.86291504]
[180.80178833 506.76364136]
[164.18994141 510.15231323]
[156.33506775 495.12777710]
[168.59800720 483.42065430]
[175.04026794 469.87454224]
[181.48251343 456.32839966]
[187.92475891 442.78228760]
[194.36701965 429.23617554]
[188.13229370 414.80224609]
[190.67959595 400.66333008]
[199.71266174 391.29531860]
[194.68946838 377.16140747]
[189.66627502 363.02749634]
[184.64308167 348.89358521]
[173.09042358 339.49224854]
[175.75958252 323.89782715]
[170.61590576 309.80728149]
[165.35214233 295.76119995]
[160.08836365 281.71511841]
[154.82460022 267.66900635]
[149.56082153 253.62292480]
[144.29705811 239.57682800]
[139.03327942 225.53074646]
[133.76951599 211.48464966]
[128.50573730 197.43855286]
[123.24196625 183.39245605]
[117.97819519 169.34637451]
[112.71442413 155.30027771]
[107.45065308 141.25418091]
[102.18688202 127.20809174]
[89.92085266 125.36678314]
[79.73604584 118.28755951]
[73.73547363 107.43218994]
[73.15818787 95.04216766]
[59.72403336 88.36958313]
[46.28987503 81.69699860]
[32.85571671 75.02441406]
[19.42156029 68.35182190]
[5.98740292 61.67923737]
[-9.81402969 62.46998978]
[-17.77085495 49.87879562]
[-31.20501328 43.20620728]
[-44.63917160 36.53362274]
[-58.07332993 29.86103630]
[-71.76337433 37.16598892]
[-87.12792206 34.99567413]
[-98.25899506 24.18462181]
[-100.87646484 8.88990116]
[-93.97386169 -5.00735474]
[-80.20537567 -12.16336727]
[-64.86528015 -9.82650471]
[-53.85213852 1.10466337]
[-51.40074158 16.42687798]
[-37.96658325 23.09946442]
[-24.53242683 29.77205086]
[-11.09826851 36.44463730]
[3.74226308 35.17661667]
[12.65998936 48.24507904]
[26.09414673 54.91766739]
[39.52830505 61.59025192]
[52.96246338 68.26284027]
[66.39662170 74.93542480]
[79.83078003 81.60800934]
[81.36914062 80.05122375]
[83.02728271 78.62268066]
[77.28703308 64.76448822]
[71.54678345 50.90629578]
[58.21415329 41.35783768]
[60.08611679 25.06588173]
[75.23695374 18.79019928]
[88.08078003 28.98667336]
[85.40497589 45.16604614]
[91.14522552 59.02423859]
[96.88547516 72.88243103]
[100.00000000 72.70416260]
[103.11452484 72.88243103]
[108.85477448 59.02423859]
[100.79235077 47.82778549]
[99.33287811 34.21691895]
[104.75172424 21.76428795]
[115.53282928 13.68536186]
[128.79110718 12.00827694]
[134.76712036 -1.74989283]
[140.74313354 -15.50806236]
[146.60148621 -29.31674767]
[152.34173584 -43.17493820]
[158.08198547 -57.03313446]
[163.82223511 -70.89132690]
[155.60006714 -84.05094910]
[156.71681213 -99.52778625]
[166.74305725 -111.37068176]
[181.82348633 -115.02579498]
[196.15940857 -109.08766937]
[204.23832703 -95.83963013]
[202.95375061 -80.37581635]
[192.79963684 -68.64237976]
[177.68043518 -65.15107727]
[171.94017029 -51.29288101]
[166.19992065 -37.43468857]
[160.45967102 -23.57649612]
[160.80557251 -16.17592049]
[154.50129700 -9.53204632]
[148.52528381 4.22612333]
[142.54927063 17.98429298]
[151.33341980 31.83916664]
[150.12496948 48.36593628]
[139.20216370 61.04731750]
[122.71296692 64.76448822]
[116.97271729 78.62268066]
[127.29186249 100.46602631]
[116.23297882 121.94432068]
[121.49674988 135.99041748]
[126.76052094 150.03651428]
[132.02429199 164.08259583]
[137.28805542 178.12869263]
[142.55183411 192.17478943]
[147.81559753 206.22087097]
[153.07937622 220.26696777]
[158.34313965 234.31306458]
[163.60691833 248.35916138]
[168.87068176 262.40524292]
[174.13446045 276.45132446]
[179.39822388 290.49743652]
[184.66200256 304.54351807]
[190.61782837 311.50146484]
[189.89349365 318.87460327]
[201.80543518 329.28692627]
[198.77699280 343.87039185]
[203.80018616 358.00430298]
[208.82337952 372.13821411]
[213.84657288 386.27212524]
[236.41938782 397.39389038]
[235.42089844 426.42800903]
[243.64767456 438.97073364]
[251.87445068 451.51345825]
[259.21591187 456.98959351]
[260.13247681 464.34130859]
[268.14392090 477.02267456]
[276.15536499 489.70404053]
[285.06796265 487.30041504]
[294.27996826 486.93591309]
[303.33145142 488.62350464]
[311.77154541 492.27380371]
[319.18112183 497.69979858]
[325.19345093 504.62649536]
[329.51239014 512.70471191]
[331.92703247 521.52880859]
[332.32183838 530.65698242]
[330.68240356 539.63348389]
[327.09567261 548.01110840]
[321.74548340 555.37384033]
[314.90307617 561.35729980]
[321.11309814 575.01141357]
[327.32315063 588.66558838]
[333.53317261 602.31970215]
[339.74322510 615.97381592]
[345.95327759 629.62799072]
[352.16329956 643.28210449]
[365.81414795 652.36981201]
[364.49951172 668.71618652]
[349.57174683 675.50549316]
[336.38729858 665.75341797]
[338.50915527 649.49212646]
[332.29913330 635.83801270]
[326.08908081 622.18389893]
[319.87905884 608.52972412]
[313.66900635 594.87561035]
[307.45898438 581.22149658]
[301.24893188 567.56732178]
[280.01821899 567.22460938]
[261.78402710 556.20568848]
[251.53965759 537.44372559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 146]
[5 145]
[6 144]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[22 142]
[23 141]
[24 140]
[25 139]
[27 137]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 69]
[52 67]
[53 66]
[54 65]
[55 64]
[76 85]
[77 84]
[78 83]
[87 120]
[88 119]
[93 115]
[94 114]
[95 113]
[96 111]
[97 110]
[98 109]
[99 108]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
