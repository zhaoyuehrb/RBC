%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCUGUAAGGGCGAUGAUUGGCCGAGGCUCAAGAGAGCGUGGCGUCGCAUUGCCGUUUUUGCUCAGAAUCGCGACUAAGGCUUUUUUUUUUUCUCCCUCUGAACGGUUAGGCU\
) } def
/len { sequence length } bind def

/coor [
[89.10128784 228.52462769]
[98.70719147 215.67526245]
[97.90204620 200.69688416]
[86.68275452 190.96739197]
[85.65283966 175.78865051]
[95.93410492 164.08679199]
[95.12895203 149.10842896]
[94.32379913 134.13005066]
[93.51865387 119.15167236]
[84.34734344 107.28208923]
[70.05680847 102.72351074]
[54.55794525 105.90090942]
[44.78404999 94.66168213]
[30.49351501 90.10310364]
[16.20298195 85.54452515]
[1.91244698 80.98594666]
[-12.37808704 76.42737579]
[-26.66862106 71.86879730]
[-40.95915604 67.31021881]
[-52.33953857 77.52951813]
[-67.20892334 80.65973663]
[-81.55332184 75.95819092]
[-91.55155182 64.78270721]
[-94.59306335 50.20138931]
[-108.88359833 45.64281082]
[-123.17413330 41.08423233]
[-132.43539429 41.44920349]
[-137.78421021 36.20667267]
[-153.36279297 38.96681595]
[-162.83140564 27.46923065]
[-176.99440002 22.52862358]
[-191.15739441 17.58801651]
[-205.32038879 12.64741039]
[-221.32084656 16.24154091]
[-232.23316956 4.00009680]
[-226.83172607 -11.48397160]
[-210.67303467 -14.28198338]
[-200.37979126 -1.51558352]
[-186.21679688 3.42502284]
[-172.05380249 8.36562920]
[-157.89080811 13.30623531]
[-143.32525635 10.19270897]
[-132.84359741 22.04367828]
[-118.61555481 26.79369926]
[-104.32501984 31.35227585]
[-90.03448486 35.91085434]
[-79.11129761 25.78417587]
[-64.48860931 22.46258545]
[-50.07137299 26.93579674]
[-39.76119995 38.09810638]
[-36.40057755 53.01968384]
[-22.11004448 57.57826233]
[-7.81950998 62.13683701]
[6.47102451 66.69541168]
[20.76155853 71.25399017]
[35.05209351 75.81256866]
[49.34262848 80.37114716]
[63.81933212 76.86768341]
[74.61538696 88.43297577]
[88.90592194 92.99155426]
[91.50321198 88.91264343]
[95.61629486 85.84837341]
[100.83118439 84.36071014]
[106.52841949 84.83808899]
[111.95652771 87.42211151]
[116.33079529 91.96522522]
[131.22142029 90.15717316]
[146.11206055 88.34912109]
[161.00268555 86.54106903]
[175.89332581 84.73301697]
[182.97795105 73.18605804]
[195.25726318 67.94329071]
[208.11508179 70.72994232]
[216.85835266 80.29766083]
[229.87155151 71.29947662]
[243.26873779 77.80829620]
[258.20254517 76.40068054]
[268.26419067 64.50946045]
[283.42922974 63.29467773]
[294.70370483 72.96019745]
[309.63751221 71.55258179]
[324.57131958 70.14496613]
[339.50512695 68.73735046]
[350.80114746 57.34527969]
[366.73461914 59.21720886]
[375.08273315 72.91716003]
[369.44152832 87.93569183]
[354.13845825 92.75188446]
[340.91271973 83.67115784]
[325.97891235 85.07877350]
[311.04510498 86.48638916]
[296.11129761 87.89400482]
[286.84146118 99.49596405]
[271.71652222 101.13622284]
[259.61016846 91.33448792]
[244.67634583 92.74210358]
[232.73130798 101.63960266]
[218.26596069 95.23146820]
[208.17250061 108.60954285]
[191.20024109 110.65122986]
[177.70137024 99.62365723]
[162.81074524 101.43170166]
[147.92010498 103.23975372]
[133.02947998 105.04780579]
[118.13883972 106.85585785]
[108.49703217 118.34651947]
[109.30217743 133.32489014]
[110.10733032 148.30326843]
[110.91247559 163.28164673]
[122.38891602 173.81393433]
[122.99207306 189.01560974]
[112.88041687 199.89173889]
[113.68556976 214.87010193]
[124.61355591 226.61569214]
[122.10157013 242.46086121]
[108.07658386 250.25056458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[6 109]
[7 108]
[8 107]
[9 106]
[10 60]
[11 59]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[19 51]
[24 46]
[25 45]
[26 44]
[28 43]
[30 41]
[31 40]
[32 39]
[33 38]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[74 98]
[76 96]
[77 95]
[80 92]
[81 91]
[82 90]
[83 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
