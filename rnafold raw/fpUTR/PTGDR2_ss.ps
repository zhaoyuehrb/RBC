%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCUCCCUCUCCCACCUCUGUCUGCCCGCUGCCUCUUGUCUAGCUGCUGUCAGGAGCUGACUGCCUCCAGGGCUGGAAUCCUGUGCUCCCUCUGUGCCCAGAGCCCCACG\
) } def
/len { sequence length } bind def

/coor [
[212.59114075 315.24523926]
[202.04222107 315.42147827]
[191.65234375 313.55227661]
[181.81460571 309.70590210]
[172.90164185 304.02542114]
[165.25160217 296.72348022]
[159.15525818 288.07424927]
[154.84500122 278.40322876]
[152.48593140 268.07485962]
[152.16955566 257.47897339]
[153.91026306 247.01586914]
[157.64468384 237.08137512]
[163.23396301 228.05180359]
[170.46891785 220.26966858]
[162.20050049 207.75434875]
[153.93206787 195.23902893]
[140.46078491 188.88499451]
[139.30938721 173.10574341]
[131.04095459 160.59042358]
[122.77253723 148.07510376]
[114.50411224 135.55979919]
[106.23568726 123.04447937]
[91.55996704 122.33153534]
[80.08125305 113.15960693]
[76.14759064 99.00293732]
[81.24900055 85.22394562]
[72.98057556 72.70863342]
[57.59747314 71.89231110]
[45.78281021 62.28673172]
[41.93521500 47.73819351]
[47.32762527 33.87962723]
[33.26492691 26.63041115]
[32.70494461 11.74633598]
[24.43651772 -0.76897937]
[16.98768616 -6.30226231]
[16.11784744 -13.74911785]
[8.20051956 -26.48944473]
[0.28319070 -39.22977066]
[-7.63413763 -51.97009659]
[-15.55146599 -64.71042633]
[-29.40721512 -72.34775543]
[-29.55323219 -87.24163818]
[-45.03892899 -88.22795105]
[-56.96587372 -98.15406036]
[-60.74791336 -113.20317078]
[-54.93077469 -127.58860016]
[-41.75127029 -135.77885437]
[-26.27718353 -134.62460327]
[-14.45861912 -124.56970215]
[-10.84005642 -109.48044586]
[-16.81290627 -95.15897369]
[-3.52345800 -88.43291473]
[-2.81114006 -72.62775421]
[5.10618830 -59.88742447]
[13.02351665 -47.14709854]
[20.94084549 -34.40677261]
[28.85817337 -21.66644669]
[36.95183182 -9.03740501]
[45.22026062 3.47791052]
[58.69154358 9.83194637]
[59.84294128 25.61120033]
[74.70601654 26.08768654]
[86.57894897 35.33417130]
[90.77970886 49.96998215]
[85.49588776 64.44020844]
[93.76431274 76.95552063]
[108.44003296 77.66846466]
[119.91874695 86.84039307]
[123.85240936 100.99706268]
[118.75099945 114.77605438]
[127.01942444 127.29136658]
[135.28785706 139.80668640]
[143.55627441 152.32199097]
[151.82470703 164.83731079]
[165.88740540 172.08653259]
[166.44738770 186.97059631]
[174.71580505 199.48591614]
[182.98423767 212.00123596]
[202.61555481 206.86538696]
[222.73999023 209.24450684]
[240.58419800 218.79055786]
[253.69639587 234.16923523]
[260.28329468 253.24641418]
[259.45529175 273.38430786]
[251.34658813 291.80615234]
[262.45648193 301.88433838]
[273.56637573 311.96255493]
[286.89291382 308.14227295]
[300.25231934 311.41577148]
[310.14547729 320.81451416]
[314.03640747 333.78045654]
[311.00189209 346.86160278]
[321.82733154 357.24475098]
[332.65277100 367.62789917]
[343.47821045 378.01104736]
[354.30364990 388.39419556]
[370.34951782 391.77981567]
[375.18249512 407.45065308]
[363.83084106 419.28582764]
[347.97216797 415.11038208]
[343.92050171 399.21963501]
[333.09506226 388.83648682]
[322.26962280 378.45333862]
[311.44418335 368.07019043]
[300.61874390 357.68704224]
[284.63330078 361.12457275]
[269.57717896 354.33511353]
[261.40884399 339.79037476]
[263.48815918 323.07244873]
[252.37826538 312.99423218]
[241.26837158 302.91601562]
[232.58120728 308.86975098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 78]
[15 77]
[16 76]
[18 74]
[19 73]
[20 72]
[21 71]
[22 70]
[26 66]
[27 65]
[31 61]
[33 59]
[34 58]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[42 51]
[85 111]
[86 110]
[87 109]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
