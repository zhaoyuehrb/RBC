%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGGCCCGGGCAGGCCGGCUGAGCUAACUCCCCAGAGCCGAAGUGGAAGGCGCGCCCCGAGCGCCUUCUCCCCAGGACCCCGGUGUCCCUCCCCGCGCCCCGAGCCCGCGCUCUCCUUCCCCCGCCCUCAGAGCGCUCCCCGCCCCUCUGUCUCCCCGCAGCCCGCUAGACGAGCCG\
) } def
/len { sequence length } bind def

/coor [
[311.49716187 138.83514404]
[297.00827026 134.95285034]
[282.51940918 131.07057190]
[275.22421265 132.38012695]
[267.81265259 126.99203491]
[253.39373779 122.85747528]
[238.97482300 118.72291565]
[224.60789490 122.65237427]
[213.47500610 111.41095734]
[199.05607605 107.27639771]
[184.63714600 103.14183807]
[170.21821594 99.00727844]
[155.85128784 102.93673706]
[144.71841431 91.69532013]
[130.29948425 87.56076050]
[133.48863220 113.01850891]
[116.64654541 135.38671875]
[86.67407227 140.12835693]
[73.68369293 147.62835693]
[60.69330978 155.12835693]
[47.70292664 162.62835693]
[34.71254730 170.12835693]
[22.06167603 178.18785095]
[9.77439404 186.79150391]
[-2.51288629 195.39514160]
[-8.94930267 210.47839355]
[-25.26023865 212.17703247]
[-34.66640472 198.74363708]
[-27.49154091 183.99734497]
[-11.11653233 183.10786438]
[1.17074788 174.50421143]
[13.45802879 165.90057373]
[-0.57928175 160.61341858]
[-5.36792326 146.39833069]
[2.60901213 133.69523621]
[17.49304581 131.83364868]
[28.35293961 142.18075562]
[27.21254730 157.13796997]
[40.20292664 149.63796997]
[53.19330978 142.13796997]
[66.18369293 134.63796997]
[79.17407227 127.13797760]
[79.04317474 119.63911438]
[64.04545593 119.90065765]
[63.78416824 104.90293121]
[78.78139496 104.64140320]
[78.65049744 97.14254761]
[65.40628815 90.10047150]
[52.16207123 83.05839539]
[38.91785812 76.01632690]
[25.67364311 68.97425079]
[12.42942905 61.93217850]
[-0.81478447 54.89010239]
[-14.05899811 47.84803009]
[-27.30321312 40.80595779]
[-41.73337936 46.83126450]
[-56.64503479 42.12206268]
[-64.99734497 28.90189362]
[-62.84661484 13.41291809]
[-51.20834732 2.96855545]
[-35.57777786 2.50031447]
[-23.33518028 12.22928429]
[-20.26113892 27.56174278]
[-7.01692486 34.60381699]
[6.22728872 41.64588928]
[19.47150230 48.68796158]
[32.71571732 55.73003769]
[45.95993042 62.77210999]
[59.20414352 69.81418610]
[72.44835663 76.85625458]
[85.69257355 83.89833069]
[91.64272308 79.33261871]
[79.28084564 70.83650970]
[83.54112244 56.45422363]
[98.53598022 56.06164169]
[103.54302216 70.20119476]
[109.49317169 65.63549042]
[106.11890411 51.01993561]
[102.74464417 36.40438461]
[99.37037659 21.78883553]
[85.83644867 13.62743950]
[82.11864471 -1.73333824]
[90.42267609 -15.18022156]
[105.82189941 -18.73541260]
[119.18023682 -10.28968048]
[122.57241821 5.14627218]
[113.98592377 18.41456795]
[117.36019135 33.03012085]
[120.73445892 47.64567184]
[124.10872650 62.26122284]
[134.43403625 73.14183807]
[148.85296631 77.27639771]
[164.25123596 73.64266968]
[174.35278320 84.58834839]
[188.77171326 88.72291565]
[203.19062805 92.85747528]
[217.60955811 96.99203491]
[233.00782776 93.35830688]
[243.10937500 104.30398560]
[257.52828979 108.43854523]
[271.94723511 112.57310486]
[286.40167236 116.58168030]
[300.89056396 120.46396637]
[315.37945557 124.34625244]
[323.57769775 111.53789520]
[336.47320557 102.56073761]
[352.31750488 99.10060883]
[368.77645874 102.06108856]
[383.27365112 111.36975861]
[393.39343262 125.93286133]
[407.30117798 120.31375885]
[421.20892334 114.69466400]
[435.11669922 109.07556152]
[449.02444458 103.45645905]
[462.93222046 97.83736420]
[476.83996582 92.21826172]
[476.59249878 77.04251862]
[481.84750366 62.80351639]
[491.89431763 51.42695618]
[505.37417603 44.45143127]
[520.46405029 42.82032394]
[535.12310791 46.75422287]
[547.36889648 55.72110367]
[555.54528809 68.50827026]
[558.54638672 83.38636017]
[555.96643066 98.34323883]
[548.15429688 111.35610962]
[536.16650391 120.66508484]
[521.62426758 125.01120758]
[506.49438477 123.80669403]
[492.82299805 117.21445465]
[482.45907593 106.12602234]
[468.55130005 111.74512482]
[454.64355469 117.36421967]
[440.73577881 122.98332214]
[426.82803345 128.60241699]
[412.92028809 134.22151184]
[399.01251221 139.84062195]
[396.94525146 147.05007935]
[411.84439087 148.78659058]
[426.24307251 144.58204651]
[438.87524414 152.67079163]
[441.08114624 167.50770569]
[431.34854126 178.92156982]
[416.34945679 179.08779907]
[406.36608887 167.89170837]
[392.81066895 161.46900940]
[390.74340820 168.67846680]
[399.56018066 180.81372070]
[408.37695312 192.94897461]
[415.97500610 198.07072449]
[417.23953247 205.37384033]
[425.84317017 217.66111755]
[434.44680786 229.94841003]
[443.05047607 242.23568726]
[452.52136230 242.62535095]
[460.62280273 247.27526855]
[465.58755493 255.02445984]
[466.40084839 264.05322266]
[463.00558472 272.30987549]
[470.95437622 285.03060913]
[486.19989014 290.02600098]
[491.66448975 305.10968018]
[483.15621948 318.71075439]
[467.20190430 320.39562988]
[456.04031372 308.87179565]
[458.23367310 292.97940063]
[450.28488159 280.25866699]
[431.28176880 272.24417114]
[430.76318359 250.83932495]
[422.15954590 238.55204773]
[413.55587769 226.26477051]
[404.95223999 213.97749329]
[396.24169922 201.76576233]
[387.42492676 189.63049316]
[378.60815430 177.49523926]
[359.15588379 185.00680542]
[339.11120605 183.08047485]
[322.65914917 172.75851440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[5 101]
[6 100]
[7 99]
[9 97]
[10 96]
[11 95]
[12 94]
[14 92]
[15 91]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 32]
[24 31]
[25 30]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[77 90]
[78 89]
[79 88]
[80 87]
[110 138]
[111 137]
[112 136]
[113 135]
[114 134]
[115 133]
[116 132]
[148 176]
[149 175]
[150 174]
[152 173]
[153 172]
[154 171]
[155 170]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
