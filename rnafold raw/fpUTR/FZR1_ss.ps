%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGCCGGGAGGCAGCGGAGGAGCGACCGCCGCCAUAUUAGGGACCGCGGAGCCCGGGAUCCCGUCAGCGGCGGCCGCGGCCGGGCCUGCGGGAGCUGCGGAGGCCGGAGGCGGGCGCUGUGCGGUGCCAGGAGAGGCGGGGUCGGCGGGAGCCAGCGAGCCACGGGAGCGAGCCAGGCUAACCUUGCCGCGGGCCGAGCCCUGCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[211.44293213 161.26692200]
[205.60404968 149.76716614]
[191.65252686 144.25764465]
[176.97294617 146.77937317]
[166.97929382 134.51406860]
[153.02777100 129.00454712]
[139.07623291 123.49502563]
[125.12471008 117.98549652]
[119.49208832 127.49119568]
[110.22805023 135.03955078]
[98.08502960 139.25669861]
[84.32402802 139.07800293]
[74.73882294 150.61593628]
[65.15361786 162.15386963]
[62.28661346 177.71313477]
[48.20221710 182.55865479]
[38.61701202 194.09658813]
[29.03180695 205.63450623]
[19.44660187 217.17243958]
[23.40485954 232.17617798]
[17.75681496 246.62882996]
[4.67425966 254.97306824]
[-10.81229782 254.00036621]
[-22.74796104 244.08474731]
[-26.54322243 229.03895569]
[-20.73872757 214.64842224]
[-7.56642294 206.44659424]
[7.90867186 207.58723450]
[17.49387741 196.04931641]
[27.07908249 184.51138306]
[36.66428757 172.97344971]
[38.84569168 158.23944092]
[53.61568451 152.56866455]
[63.20088959 141.03073120]
[72.78609467 129.49279785]
[69.57474518 122.71509552]
[56.01934433 129.13780212]
[42.46384048 135.56028748]
[36.04156113 122.00468445]
[49.59664536 115.58239746]
[63.15204620 109.15969849]
[59.94069672 102.38199615]
[44.94110489 102.49261475]
[29.94151115 102.60323334]
[14.94191933 102.71385193]
[-0.05644881 102.93508148]
[-15.05277824 103.26691437]
[-23.56157875 106.58497620]
[-30.27235985 103.49140167]
[-45.27194977 103.60202026]
[-60.27154541 103.71263885]
[-76.06565857 109.87562561]
[-86.36003113 96.40483093]
[-76.26544952 82.78368378]
[-60.38216019 88.71305084]
[-45.38256836 88.60243225]
[-30.38297844 88.49181366]
[-15.38460922 88.27058411]
[-0.38828012 87.93875122]
[6.22833872 84.64859009]
[14.83130169 87.71425629]
[29.83089256 87.60363770]
[44.83048630 87.49301910]
[59.83007812 87.38240051]
[63.99640274 82.88698578]
[68.59351349 79.28572845]
[73.45674133 76.60588837]
[78.42292786 74.84674835]
[83.33488464 73.98071289]
[78.55258942 59.76348495]
[73.77029419 45.54625320]
[68.98800659 31.32902145]
[64.20571136 17.11178970]
[59.42341995 2.89455771]
[47.69012070 -7.71865654]
[50.96595383 -22.24856377]
[46.18365860 -36.46579361]
[41.40136719 -50.68302536]
[36.61907196 -64.90026093]
[22.74359131 -71.97901154]
[18.09619522 -86.46543121]
[24.93021393 -99.64995575]
[20.14792061 -113.86718750]
[15.36562729 -128.08442688]
[10.58333492 -142.30165100]
[-1.14996231 -152.91487122]
[2.12586784 -167.44477844]
[-2.76114082 -181.62635803]
[-7.75259924 -195.77149963]
[-12.74405766 -209.91665649]
[-17.73551750 -224.06181335]
[-22.72697449 -238.20697021]
[-27.71843338 -252.35211182]
[-38.69088364 -265.27658081]
[-29.30899620 -279.39807129]
[-13.14221382 -274.29205322]
[-13.57328129 -257.34356689]
[-8.58182335 -243.19842529]
[-3.59036422 -229.05326843]
[1.40109444 -214.90811157]
[6.39255285 -200.76296997]
[11.38401127 -186.61781311]
[16.57332611 -181.35704041]
[16.34309959 -172.22706604]
[27.73433495 -162.63076782]
[24.80056572 -147.08395386]
[29.58285904 -132.86671448]
[34.36515045 -118.64948273]
[39.14744568 -104.43225098]
[52.56041718 -98.05826569]
[57.61287308 -83.70809174]
[50.83630371 -69.68254852]
[55.61859894 -55.46532059]
[60.40089035 -41.24808884]
[65.18318176 -27.03085709]
[76.57441711 -17.43455315]
[73.64064789 -1.88773513]
[78.42294312 12.32949638]
[83.20523834 26.54672813]
[87.98752594 40.76395798]
[92.76982117 54.98118973]
[97.55211639 69.19842529]
[122.40527344 78.72248077]
[130.63423157 104.03397369]
[144.58576965 109.54349518]
[158.53729248 115.05301666]
[172.48881531 120.56254578]
[188.16630554 118.43489075]
[197.16204834 130.30612183]
[211.11357117 135.81564331]
[229.26091003 132.68807983]
[239.62809753 146.84828186]
[253.65937805 152.15142822]
[269.30377197 149.79278564]
[278.47363281 161.53004456]
[292.50488281 166.83320618]
[306.53616333 172.13636780]
[320.56741333 177.43951416]
[334.59869385 182.74267578]
[348.62997437 188.04583740]
[362.66122437 193.34898376]
[376.69250488 198.65214539]
[390.72378540 203.95530701]
[404.79376221 209.15484619]
[418.90173340 214.25048828]
[433.00967407 219.34611511]
[447.11764526 224.44175720]
[461.22561646 229.53739929]
[457.30471802 215.05891418]
[466.05718994 202.87721252]
[481.02996826 201.97373962]
[491.18374634 213.01461792]
[489.03222656 227.85952759]
[476.16174316 235.56344604]
[489.85589600 241.68469238]
[498.96597290 242.32948303]
[503.70587158 247.99855042]
[517.30828857 254.32110596]
[530.91064453 260.64367676]
[540.01025391 261.42272949]
[544.66601562 267.16110229]
[558.17364502 273.68359375]
[568.21801758 269.51495361]
[578.68310547 271.52029419]
[586.16015625 278.80062866]
[588.34930420 288.77972412]
[601.65875244 295.69778442]
[614.96813965 302.61584473]
[628.37811279 309.33682251]
[641.88580322 315.85931396]
[655.39349365 322.38180542]
[669.57879639 315.80072021]
[684.66204834 319.92736816]
[693.52142334 332.81323242]
[691.97375488 348.37405396]
[680.74981689 359.26245117]
[665.14923096 360.33728027]
[652.53808594 351.09100342]
[648.87097168 335.88949585]
[635.36334229 329.36700439]
[621.85565186 322.84451294]
[617.13250732 323.54278564]
[611.92034912 321.28247070]
[608.05010986 315.92526245]
[594.74066162 309.00720215]
[581.43127441 302.08914185]
[562.22729492 304.35366821]
[551.65118408 287.19125366]
[538.14349365 280.66876221]
[524.58807373 274.24606323]
[510.98571777 267.92349243]
[497.38330078 261.60095215]
[483.73464966 255.37886047]
[470.04049683 249.25761414]
[456.12997437 243.64535522]
[442.02200317 238.54971313]
[427.91406250 233.45407104]
[413.80609131 228.35844421]
[399.69812012 223.26280212]
[392.34036255 223.94697571]
[385.42062378 217.98657227]
[371.38934326 212.68341064]
[357.35806274 207.38026428]
[343.32681274 202.07710266]
[329.29553223 196.77394104]
[315.26428223 191.47079468]
[301.23300171 186.16763306]
[287.20172119 180.86447144]
[273.17047119 175.56130981]
[258.52966309 178.29927063]
[248.35621643 166.18270874]
[234.32495117 160.87954712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[5 127]
[6 126]
[7 125]
[8 124]
[12 35]
[13 34]
[14 33]
[16 31]
[17 30]
[18 29]
[19 28]
[42 64]
[43 63]
[44 62]
[45 61]
[46 59]
[47 58]
[49 57]
[50 56]
[51 55]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[76 115]
[77 114]
[78 113]
[79 112]
[82 109]
[83 108]
[84 107]
[85 106]
[87 104]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[132 212]
[133 211]
[135 209]
[136 208]
[137 207]
[138 206]
[139 205]
[140 204]
[141 203]
[142 202]
[143 201]
[144 199]
[145 198]
[146 197]
[147 196]
[148 195]
[154 194]
[155 193]
[157 192]
[158 191]
[159 190]
[161 189]
[162 188]
[166 186]
[167 185]
[168 184]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
