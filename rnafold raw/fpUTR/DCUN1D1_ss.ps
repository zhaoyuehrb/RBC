%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGUCUUGGACAGUUUCUCAUUGCUGGGUCUCCACUCCUAGCUGUUACUGCAAGUCCAUGCCUCUACCAUGAGGGUGGAGGAGUUAAGAUCAACAGAUCCACAUGUACCUUGAGGUGACAGACUGGCUCUGAACAAGUUGAAAUCAUCGCAGAAGGAUAAAGUUCGUCAGUUU\
) } def
/len { sequence length } bind def

/coor [
[229.06506348 346.63763428]
[222.59129333 333.10656738]
[216.11752319 319.57546997]
[209.64373779 306.04437256]
[203.16996765 292.51330566]
[196.69619751 278.98220825]
[189.62524414 265.75338745]
[181.97119141 252.85317993]
[174.31715393 239.95297241]
[166.66310120 227.05274963]
[152.21258545 223.62953186]
[144.26652527 210.65591431]
[147.95509338 195.52210999]
[140.30104065 182.62188721]
[132.64700317 169.72167969]
[118.19648743 166.29844666]
[110.25042725 153.32482910]
[113.93899536 138.19102478]
[106.28495026 125.29080963]
[98.62257385 126.87808228]
[90.58385468 126.12132263]
[82.89099121 122.94306946]
[76.27657318 117.48922729]
[71.41444397 110.12758636]
[68.85267639 101.42492676]
[54.70710754 106.41520691]
[40.56153488 111.40547943]
[26.41596603 116.39575195]
[12.27039528 121.38602448]
[-1.87517560 126.37629700]
[-6.17072392 141.28695679]
[-18.43083000 150.79850769]
[-33.94123077 151.25354004]
[-46.73786163 142.47711182]
[-51.90015793 127.84391022]
[-47.44311142 112.98072815]
[-35.08054733 103.60274506]
[-19.56612015 103.31598663]
[-6.86544895 112.23072815]
[7.28012180 107.24045563]
[21.42569351 102.25018311]
[35.57126236 97.25990295]
[49.71683502 92.26963043]
[63.86240387 87.27935791]
[71.51645660 74.37914276]
[69.11706543 59.57229233]
[66.71767426 44.76543808]
[64.31827545 29.95858574]
[61.91888428 15.15173149]
[59.51949310 0.34487781]
[57.12010193 -14.46197605]
[47.27495956 -26.84679604]
[52.87678528 -40.64784241]
[50.47739029 -55.45469666]
[48.07799911 -70.26155090]
[45.67860794 -85.06840515]
[31.31207657 -95.02235413]
[28.62625694 -111.95121002]
[38.79820633 -125.32580566]
[36.13491058 -140.08747864]
[33.47161102 -154.84913635]
[30.80831337 -169.61080933]
[25.56635094 -183.66505432]
[17.91230011 -196.56527710]
[10.25824928 -209.46548462]
[2.60419893 -222.36569214]
[-5.04985142 -235.26591492]
[-12.70390224 -248.16612244]
[-20.35795212 -261.06634521]
[-28.01200294 -273.96655273]
[-43.13856125 -279.31134033]
[-48.25473404 -294.51675415]
[-39.43582916 -307.91848755]
[-23.44695663 -309.23587036]
[-12.55341244 -297.45834351]
[-15.11178970 -281.62060547]
[-7.45773888 -268.72039795]
[0.19631152 -255.82017517]
[7.85036182 -242.91996765]
[15.50441265 -230.01974487]
[23.15846252 -217.11953735]
[30.81251335 -204.21931458]
[38.46656418 -191.31910706]
[45.89945602 -192.32017517]
[43.89732742 -207.18595886]
[41.89544678 -222.05177307]
[56.76129532 -224.05340576]
[58.76311111 -209.18807983]
[60.76523590 -194.32229614]
[68.19812775 -195.32336426]
[72.16655731 -209.78889465]
[76.13497925 -224.25442505]
[80.10340118 -238.71995544]
[75.43210602 -254.43971252]
[86.90506744 -266.15734863]
[102.71989441 -261.81878662]
[106.60764313 -245.88713074]
[94.56893921 -234.75152588]
[90.60050964 -220.28599548]
[86.63208771 -205.82046509]
[82.66365814 -191.35493469]
[71.79359436 -177.19989014]
[58.13029861 -170.90382385]
[45.56998062 -172.27410889]
[48.23328018 -157.51243591]
[50.89657593 -142.75077820]
[53.55987549 -127.98910522]
[65.08291626 -122.18108368]
[71.23976135 -110.61943054]
[69.57892609 -97.42999268]
[60.48545837 -87.46779633]
[62.88485336 -72.66094208]
[65.28424835 -57.85408783]
[67.68363953 -43.04723358]
[77.35715485 -31.72149849]
[71.92695618 -16.86136818]
[74.32634735 -2.05451465]
[76.72573853 12.75233936]
[79.12512970 27.55919266]
[81.52452087 42.36604691]
[83.92391968 57.17290115]
[86.32331085 71.97975159]
[102.99759674 69.99343109]
[117.70479584 76.86537170]
[126.26707458 89.99501801]
[126.59803772 105.10765839]
[119.18515778 117.63676453]
[126.83921051 130.53697205]
[141.88958740 134.55245972]
[149.46810913 147.74414062]
[145.54721069 162.06762695]
[153.20126343 174.96783447]
[160.85531616 187.86805725]
[175.90568542 191.88352966]
[183.48420715 205.07522583]
[179.56330872 219.39869690]
[187.21736145 232.29891968]
[194.87141418 245.19912720]
[202.52546692 258.09933472]
[208.87710571 244.51049805]
[223.41751099 240.82589722]
[235.47404480 249.75001526]
[236.19720459 264.73257446]
[225.05619812 274.77636719]
[210.22727966 272.50845337]
[216.70104980 286.03952026]
[223.17483521 299.57061768]
[229.64860535 313.10168457]
[236.12237549 326.63278198]
[242.59614563 340.16387939]
[249.42985535 353.51678467]
[256.61859131 366.68197632]
[270.02316284 375.08599854]
[269.33184814 389.96453857]
[276.52056885 403.12973022]
[289.92517090 411.53375244]
[289.23382568 426.41232300]
[296.42254639 439.57751465]
[303.61129761 452.74267578]
[310.80001831 465.90786743]
[323.69766235 476.91183472]
[316.69415283 492.35162354]
[299.91897583 489.89599609]
[297.63485718 473.09661865]
[290.44610596 459.93142700]
[283.25738525 446.76623535]
[276.06863403 433.60104370]
[263.17825317 426.13867188]
[263.35537720 410.31848145]
[256.16665649 397.15328979]
[243.27626038 389.69091797]
[243.45339966 373.87069702]
[236.26466370 360.70553589]
[232.96925354 359.36804199]
[230.16792297 356.35003662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 139]
[8 138]
[9 137]
[10 136]
[13 133]
[14 132]
[15 131]
[18 128]
[19 127]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[51 116]
[53 114]
[54 113]
[55 112]
[56 111]
[59 107]
[60 106]
[61 105]
[62 104]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[90 101]
[91 100]
[92 99]
[93 98]
[151 173]
[152 172]
[154 170]
[155 169]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
