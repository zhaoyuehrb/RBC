%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCACCGGGCGAGCUUCUAGUCGGCGAUUGAAGGAUGCGAGUGCUCCUUAAGGGCCUCCGCCCCGUGAGUUCGGUUGUGACUAGGAAGGAGCUAGUGGACUAGAGCCAGGGUAAGGGGAUCUGCUAGAAGUUGGUCUUCCGCCAGGACUAGAGUUUCCUCGCGGUAACAGCCUCCGUGGCCUCCGGAGGACC\
) } def
/len { sequence length } bind def

/coor [
[222.04530334 336.40792847]
[219.14872742 351.12561035]
[216.25216675 365.84329224]
[213.35559082 380.56094360]
[216.22952271 397.26953125]
[200.96949768 404.65655518]
[189.64677429 392.03781128]
[198.63792419 377.66439819]
[201.53448486 362.94671631]
[204.43106079 348.22903442]
[207.32762146 333.51135254]
[205.75164795 318.59439087]
[199.84350586 304.80691528]
[193.93537903 291.01947021]
[188.02723694 277.23202515]
[182.11909485 263.44454956]
[176.58689880 258.52770996]
[176.22892761 249.38568115]
[170.54483032 235.50436401]
[164.86073303 221.62304688]
[159.17663574 207.74172974]
[153.49252319 193.86041260]
[147.80842590 179.97909546]
[141.90029907 166.19163513]
[135.76966858 152.50166321]
[129.63905334 138.81169128]
[123.50842285 125.12171173]
[114.56817627 134.41525269]
[101.96100616 140.29003906]
[87.07189941 141.32894897]
[71.81546783 136.69511414]
[58.39029694 126.32122803]
[43.83065414 129.92910767]
[29.27100945 133.53697205]
[14.71136379 137.14485168]
[0.15171993 140.75273132]
[-7.43823195 145.86126709]
[-14.67289734 144.29910278]
[-29.28905487 147.67074585]
[-40.90916443 159.24247742]
[-56.66790771 154.70440674]
[-60.35403824 138.72489929]
[-48.17558289 127.74231720]
[-32.66069031 133.05458069]
[-18.04453278 129.68295288]
[-3.45615435 126.19307709]
[11.10348988 122.58520508]
[25.66313362 118.97733307]
[40.22277832 115.36945343]
[54.78242111 111.76158142]
[55.08597183 104.26773071]
[55.69307327 89.28002167]
[55.99662399 81.78616333]
[41.77648544 77.01251984]
[27.55634880 72.23887634]
[13.33621120 67.46523285]
[-2.62084436 71.24734497]
[-13.67644024 59.13512802]
[-8.45752621 43.58858490]
[7.66712523 40.60066986]
[18.10985565 53.24509430]
[32.32999420 58.01873779]
[46.55013275 62.79238129]
[60.77026749 67.56602478]
[71.54723358 57.13256836]
[60.17045212 46.13805389]
[63.92383575 31.72412300]
[59.61317062 17.35686302]
[54.14207077 10.02394867]
[55.35105515 2.72195673]
[51.27360535 -11.71322250]
[47.19615173 -26.14840126]
[43.11870193 -40.58358002]
[38.92450333 -54.98527145]
[34.61383820 -69.35253143]
[30.30317307 -83.71979523]
[25.99250603 -98.08705139]
[16.11780930 -102.69029236]
[10.52857399 -111.78533936]
[10.86863327 -122.23522949]
[16.78365135 -130.58876038]
[12.94048405 -145.08807373]
[9.09731770 -159.58738708]
[5.25415087 -174.08670044]
[1.41098404 -188.58601379]
[-12.81955051 -195.06875610]
[-19.50705719 -209.20422363]
[-15.49389648 -224.31806946]
[-2.67496300 -233.27401733]
[12.89703560 -231.84332275]
[23.86947823 -220.70153809]
[25.06151199 -205.10945129]
[15.91029644 -192.42918396]
[19.75346375 -177.92987061]
[23.59663010 -163.43055725]
[27.43979645 -148.93124390]
[31.28296280 -134.43193054]
[45.88879013 -121.77340698]
[40.35976791 -102.39772034]
[44.67043304 -88.03045654]
[48.98109818 -73.66320038]
[53.29176331 -59.29593658]
[58.23229218 -53.78486252]
[57.55387878 -44.66102982]
[61.63133240 -30.22585297]
[65.70878601 -15.79067326]
[69.78623199 -1.35549438]
[73.98043060 13.04619694]
[78.29109955 27.41345787]
[89.35955048 37.38032913]
[85.91448975 52.82190323]
[101.61605835 53.75838470]
[115.25494385 59.47217178]
[125.52286530 68.76354980]
[131.65034485 80.12797546]
[133.45526123 91.96932983]
[146.10975647 83.91552734]
[158.76425171 75.86172485]
[171.41874695 67.80792236]
[184.07324219 59.75411987]
[196.72773743 51.70031738]
[209.38223267 43.64651489]
[216.87020874 29.70948219]
[231.76167297 29.40339661]
[244.41616821 21.34959412]
[257.07064819 13.29579067]
[267.18667603 -0.30945057]
[283.06060791 5.64491987]
[281.73327637 22.54682922]
[265.12445068 25.95028687]
[252.46997070 34.00408936]
[239.81547546 42.05789185]
[233.23263550 55.41886520]
[217.43603516 56.30101395]
[204.78153992 64.35481262]
[192.12704468 72.40861511]
[179.47254944 80.46241760]
[166.81805420 88.51622009]
[154.16355896 96.57002258]
[141.50906372 104.62382507]
[137.19839478 118.99108887]
[143.32902527 132.68106079]
[149.45964050 146.37104797]
[155.59027100 160.06101990]
[160.73263550 164.25299072]
[162.68243408 169.61018372]
[161.68974304 174.29499817]
[167.37384033 188.17631531]
[173.05795288 202.05763245]
[178.74205017 215.93894958]
[184.42614746 229.82026672]
[190.11024475 243.70158386]
[195.90655518 257.53643799]
[201.81469727 271.32388306]
[207.72282410 285.11132812]
[213.63096619 298.89880371]
[219.53910828 312.68624878]
[263.23925781 320.61373901]
[272.29016113 332.57537842]
[281.34109497 344.53701782]
[290.39199829 356.49865723]
[298.07708740 361.46295166]
[299.49078369 368.72808838]
[308.34680176 380.83471680]
[317.20285034 392.94134521]
[327.84515381 391.89434814]
[337.88293457 395.34036255]
[345.52081299 402.59197998]
[349.42224121 412.28765869]
[348.94326782 422.64691162]
[344.23767090 431.79739380]
[352.49533081 444.31982422]
[360.75299072 456.84222412]
[376.11618042 461.46310425]
[381.94821167 476.40856934]
[373.77529907 490.21374512]
[357.86697388 492.28848267]
[346.42672729 481.04122925]
[348.23059082 465.09988403]
[339.97293091 452.57748413]
[331.71527100 440.05505371]
[312.40576172 437.56689453]
[300.95681763 421.44464111]
[305.09622192 401.79739380]
[296.24017334 389.69076538]
[287.38412476 377.58413696]
[278.43035889 365.54959106]
[269.37945557 353.58795166]
[260.32852173 341.62631226]
[251.27761841 329.66467285]
[243.96954346 331.35049438]
[247.34092712 345.96670532]
[232.72465515 349.33786011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 144]
[25 143]
[26 142]
[27 141]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[38 45]
[39 44]
[53 64]
[54 63]
[55 62]
[56 61]
[65 111]
[67 109]
[68 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 102]
[75 101]
[76 100]
[77 99]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[116 140]
[117 139]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[124 132]
[125 131]
[126 130]
[158 190]
[159 189]
[160 188]
[161 187]
[163 186]
[164 185]
[165 184]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
