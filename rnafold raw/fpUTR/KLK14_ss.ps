%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCACCAACCUUCCUGCUCCCUGCUGGGGCCUCUGCUCCCCCAUCUCUCAGGAGUCGAAAGUGAGAAAGCAAGACAUCAAGGAGGGACCUGUGCCCUGCUCCACAUCCUCCCACCUGCCGCCCGCAGAGCCUGCAGGCCCCGCCCCCCUCGUCUCUGGUCCCUACCUCUCUGCUGUGUCUUC\
) } def
/len { sequence length } bind def

/coor [
[-197.74217224 239.56526184]
[-211.46257019 245.62750244]
[-220.95846558 258.28207397]
[-235.72703552 256.34854126]
[-249.44743347 262.41079712]
[-248.69981384 276.64553833]
[-252.85089111 290.25085449]
[-261.38174438 301.59594727]
[-273.24981689 309.32824707]
[-287.01614380 312.53463745]
[-301.02001953 310.84930420]
[-313.57919312 304.49523926]
[-323.19198608 294.25509644]
[-337.01333618 300.08346558]
[-350.83471680 305.91186523]
[-364.65606689 311.74023438]
[-378.47741699 317.56863403]
[-392.29876709 323.39700317]
[-393.13702393 338.59762573]
[-400.46209717 351.87280273]
[-412.77420044 360.61538696]
[-427.60025024 363.13497925]
[-441.99069214 358.98464966]
[-453.10601807 349.03906250]
[-466.92739868 354.86746216]
[-472.95254517 369.23184204]
[-487.05239868 374.94577026]
[-500.70950317 369.11315918]
[-514.53088379 374.94155884]
[-528.35223389 380.76992798]
[-542.17358398 386.59832764]
[-555.99493408 392.42669678]
[-565.45831299 405.81988525]
[-581.76184082 404.05169678]
[-588.13385010 388.94113159]
[-578.01940918 376.03262329]
[-561.82330322 378.60534668]
[-548.00195312 372.77697754]
[-534.18060303 366.94857788]
[-520.35925293 361.12020874]
[-506.53787231 355.29180908]
[-501.18106079 341.44116211]
[-487.24728394 335.33346558]
[-472.75576782 341.04611206]
[-458.93441772 335.21771240]
[-458.29699707 320.31607056]
[-451.22372437 307.11462402]
[-439.07028198 298.25711060]
[-424.21575928 295.54370117]
[-409.59677124 299.56518555]
[-398.12716675 309.57565308]
[-384.30581665 303.74728394]
[-370.48443604 297.91888428]
[-356.66308594 292.09051514]
[-342.84173584 286.26211548]
[-329.02038574 280.43374634]
[-329.36730957 264.60107422]
[-323.60226440 249.80989075]
[-312.57922363 238.33245850]
[-297.96228027 231.94413757]
[-281.97451782 231.64872742]
[-267.05990601 237.52093506]
[-255.50967407 248.69039917]
[-241.78927612 242.62815857]
[-233.27474976 230.40718079]
[-217.52481079 231.90710449]
[-203.80441284 225.84486389]
[-202.80743408 215.58894348]
[-197.59223938 206.60824585]
[-189.04672241 200.56573486]
[-178.68225098 198.61253357]
[-168.36651611 201.16908264]
[-159.98706055 207.83695984]
[-145.97575378 202.48126221]
[-131.96444702 197.12556458]
[-117.95315552 191.76986694]
[-103.94185638 186.41416931]
[-89.93055725 181.05847168]
[-75.91925812 175.70277405]
[-62.00091934 170.10992432]
[-48.17956161 164.28153992]
[-34.51113510 158.10302734]
[-21.00450706 151.57838440]
[-7.49787855 145.05374146]
[5.95286465 138.41464233]
[19.34675217 131.66159058]
[32.74063873 124.90853119]
[46.13452911 118.15547943]
[59.52841568 111.40242004]
[72.92230225 104.64936829]
[86.31619263 97.89630890]
[95.64006042 86.14618683]
[99.17269135 71.56809998]
[102.70532990 56.99001694]
[106.23796082 42.41193390]
[96.08329010 30.67897797]
[94.79798889 15.21522617]
[102.87629700 1.96680582]
[117.21192169 -3.97199512]
[132.29254150 -0.31758600]
[142.31933594 11.52483845]
[143.43679810 27.00162315]
[135.21525574 40.16163254]
[120.81604767 45.94456863]
[117.28340912 60.52265167]
[113.75077820 75.10073090]
[110.21814728 89.67881775]
[115.49888611 95.00458527]
[125.58816528 83.90474701]
[135.67744446 72.80490875]
[145.76672363 61.70507431]
[154.35743713 49.40874481]
[169.03991699 52.47876740]
[171.98413086 67.18698120]
[159.61566162 75.67209625]
[148.43055725 85.66677094]
[137.24546814 95.66144562]
[126.06035614 105.65612030]
[131.34109497 110.98188782]
[145.94865417 107.57315826]
[159.99517822 93.13519287]
[178.24484253 99.48541260]
[192.72822571 95.58262634]
[207.21159363 91.67984009]
[218.52333069 80.61841583]
[232.82539368 84.77777863]
[247.30877686 80.87499237]
[261.79214478 76.97220612]
[276.27554321 73.06941986]
[289.99597168 63.11021042]
[303.36416626 73.53746796]
[297.04510498 89.26978302]
[280.17831421 87.55280304]
[265.69494629 91.45558929]
[251.21156311 95.35837555]
[236.72817993 99.26115417]
[226.45239258 110.04342651]
[211.11437988 106.16321564]
[196.63099670 110.06600189]
[182.14762878 113.96878815]
[177.85308838 123.27154541]
[168.95387268 128.77990723]
[158.27270508 128.46183777]
[149.35737610 122.18070984]
[134.74983215 125.58943939]
[149.20338440 129.60122681]
[154.66395569 143.57199097]
[154.70199585 158.57194519]
[149.31234741 172.57022095]
[139.22474670 183.67158508]
[125.80493927 190.37300110]
[110.86987305 191.76715088]
[96.44161224 187.66528320]
[84.47361755 178.62277222]
[76.58625793 165.86386108]
[73.84741211 151.11602783]
[76.62789154 136.37597656]
[84.55259705 123.63793182]
[93.06924438 111.29019928]
[79.67536163 118.04325104]
[66.28147125 124.79631042]
[52.88758469 131.54936218]
[39.49369812 138.30242920]
[26.09980965 145.05548096]
[12.70592117 151.80853271]
[6.43424177 158.48176575]
[-0.97323442 158.56036377]
[-14.47986317 165.08500671]
[-27.98649216 171.60964966]
[-30.94396782 175.96618652]
[-34.88784790 178.48573303]
[-38.94698715 179.10107422]
[-42.35117722 178.10290527]
[-56.17253494 183.93128967]
[-60.48546219 188.99093628]
[-65.89628601 190.82069397]
[-70.56356049 189.71408081]
[-84.57485962 195.06976318]
[-98.58615875 200.42546082]
[-112.59745789 205.78115845]
[-126.60875702 211.13685608]
[-140.62005615 216.49255371]
[-154.63136292 221.84825134]
[-161.81457520 240.58934021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 67]
[2 66]
[4 64]
[5 63]
[13 56]
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[24 45]
[25 44]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[73 183]
[74 182]
[75 181]
[76 180]
[77 179]
[78 178]
[79 177]
[80 174]
[81 173]
[82 169]
[83 168]
[84 167]
[85 165]
[86 164]
[87 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 107]
[93 106]
[94 105]
[95 104]
[119 145]
[120 144]
[122 140]
[123 139]
[124 138]
[126 136]
[127 135]
[128 134]
[129 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
