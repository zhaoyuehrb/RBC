%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCGGCCCCAGGCUCAGCGUCCGCCAUCUUGUGUCGGCGGCUCGGCUGUAAGGAGGUGGCAGGGACAACCACAACCACAACGGCCGGGGGAGGAGAAGGCGGCAGCGGCGAUUCUAGGCGGCCCAGGCGGCGGGGAGGAGGAGAAGGAGGAGGGUGGCGGCCGGGCUUGGCUUCGGCUCCUUGAGGAGUUGGCGGCGGCGCGACCCGGGGAACCGGCAUUG\
) } def
/len { sequence length } bind def

/coor [
[220.07847595 285.04348755]
[231.07676697 274.84359741]
[245.77006531 271.82580566]
[259.89624023 276.86367798]
[249.59129333 265.96377563]
[239.28633118 255.06387329]
[228.98138428 244.16397095]
[218.67643738 233.26406860]
[208.37147522 222.36416626]
[197.99034119 211.53678894]
[187.53353882 200.78248596]
[177.07672119 190.02816772]
[162.22636414 190.07672119]
[151.46847534 179.31927490]
[151.51824951 163.74252319]
[141.06143188 152.98822021]
[130.60462952 142.23390198]
[115.75427246 142.28245544]
[104.99638367 131.52500916]
[105.04615021 115.94825745]
[90.47048187 112.40567780]
[76.24414062 117.16081238]
[62.01780319 121.91595459]
[47.79146576 126.67108917]
[33.63321686 131.62527466]
[19.54583931 136.77754211]
[5.45846224 141.92979431]
[-8.62891579 147.08206177]
[-22.71629333 152.23431396]
[-36.80366898 157.38658142]
[-50.89104843 162.53884888]
[-64.97842407 167.69110107]
[-75.28133392 179.69779968]
[-89.89189911 176.80285645]
[-96.60556030 190.85862732]
[-110.96556091 195.88307190]
[-124.32421112 189.39599609]
[-138.41159058 194.54824829]
[-152.49896240 199.70051575]
[-166.58634949 204.85278320]
[-173.01504517 219.29048157]
[-187.79954529 224.87562561]
[-202.16848755 218.29464722]
[-207.59700012 203.45190430]
[-200.86447144 189.15336609]
[-185.96517944 183.88206482]
[-171.73860168 190.76539612]
[-157.65122986 185.61314392]
[-143.56384277 180.46087646]
[-129.47647095 175.30860901]
[-123.45524597 161.73362732]
[-109.24203491 156.30781555]
[-95.04415894 162.71548462]
[-85.74887848 151.07731628]
[-70.13068390 153.60372925]
[-56.04330826 148.45146179]
[-41.95593262 143.29920959]
[-27.86855507 138.14694214]
[-13.78117657 132.99467468]
[0.30620083 127.84242249]
[14.39357853 122.69015503]
[28.48095512 117.53789520]
[31.26625824 113.66886902]
[36.50763702 111.50315857]
[43.03633118 112.44474792]
[57.26266861 107.68961334]
[71.48900604 102.93447876]
[85.71533966 98.17934418]
[86.52529907 94.79605865]
[88.12680054 91.69565582]
[90.43122864 89.06090546]
[87.09341431 74.43698120]
[82.13728333 66.77550507]
[83.81285858 59.58459854]
[70.83361053 50.97199631]
[67.86589050 36.05062485]
[76.15667725 23.72997475]
[73.02428436 9.06068230]
[62.57573318 -2.81948376]
[67.48465729 -16.88190460]
[53.45973969 -23.25433540]
[45.96396255 -36.50826645]
[47.68947220 -51.45773315]
[57.76634979 -62.39366531]
[54.63395691 -77.06295776]
[51.50156403 -91.73224640]
[48.36917496 -106.40154266]
[45.23678207 -121.07083130]
[32.26285553 -125.70988464]
[23.34424400 -136.06997681]
[20.72790146 -149.37716675]
[24.99188232 -162.13731384]
[34.92180252 -171.05355835]
[31.99544907 -185.76533508]
[29.06909370 -200.47711182]
[26.14274025 -215.18890381]
[14.16124439 -221.32942200]
[7.99133730 -233.07650757]
[9.68563747 -246.04055786]
[18.40399742 -255.52099609]
[8.29274940 -267.68951416]
[13.59414387 -281.60873413]
[10.87440205 -296.36010742]
[-0.17030802 -308.48226929]
[5.06256914 -324.02410889]
[21.18989944 -326.99752808]
[31.62126541 -314.34375000]
[25.62577629 -299.07986450]
[28.34551620 -284.32849121]
[38.26222992 -273.21505737]
[33.15536880 -258.24072266]
[47.40348053 -249.29797363]
[50.83844757 -232.48529053]
[40.85451889 -218.11524963]
[43.78087234 -203.40347290]
[46.70722961 -188.69169617]
[49.63358307 -173.97991943]
[64.75711823 -167.58476257]
[73.17007446 -153.29039001]
[71.38397217 -136.63327026]
[59.90607071 -124.20322418]
[63.03846359 -109.53392792]
[66.17086029 -94.86463928]
[69.30325317 -80.19535065]
[72.43563843 -65.52605438]
[86.10036469 -59.65976715]
[93.78141022 -46.71891785]
[92.35287476 -31.55934334]
[82.15395355 -20.01429749]
[92.37844849 -9.18337727]
[87.69357300 5.92828989]
[90.82596588 20.59758186]
[103.42595673 28.45734215]
[106.81161499 43.28946686]
[98.48214722 56.45220566]
[101.71733093 71.09916687]
[105.05514526 85.72309113]
[106.36244965 70.78016663]
[114.22924042 58.00857544]
[126.98631287 50.11825180]
[141.92680359 48.78340912]
[155.88055420 54.28727341]
[165.88681030 65.46201324]
[169.82238770 79.93651581]
[166.85221863 94.63951111]
[157.60652161 106.45124817]
[144.04708862 112.86544800]
[129.05104065 112.52111816]
[115.80046082 105.49145508]
[131.37248230 105.87857819]
[141.82397461 116.93393707]
[141.35894775 131.77709961]
[151.81575012 142.53140259]
[162.27255249 153.28572083]
[177.84457397 153.67283630]
[188.29606628 164.72821045]
[187.83103943 179.57136536]
[198.28784180 190.32566833]
[208.74464417 201.07998657]
[216.96246338 205.04595947]
[219.27137756 212.05920410]
[229.57633972 222.95912170]
[239.88128662 233.85902405]
[250.18624878 244.75892639]
[260.49121094 255.65882874]
[270.79614258 266.55874634]
[315.35946655 258.56533813]
[328.68612671 265.45007324]
[344.49810791 264.90994263]
[352.25433350 277.62570190]
[368.06631470 277.08554077]
[375.82250977 289.80130005]
[389.14920044 296.68603516]
[402.47589111 303.57077026]
[415.85052490 310.36187744]
[429.27246094 317.05902100]
[442.69439697 323.75616455]
[456.11630249 330.45330811]
[469.53823853 337.15048218]
[482.96017456 343.84762573]
[496.38211060 350.54476929]
[509.80401611 357.24191284]
[526.13110352 355.70632935]
[535.40258789 369.23303223]
[528.08074951 383.90692139]
[511.69769287 384.63275146]
[503.10687256 370.66384888]
[489.68493652 363.96670532]
[476.26303101 357.26956177]
[462.84109497 350.57238770]
[449.41915894 343.87524414]
[435.99722290 337.17810059]
[422.57531738 330.48095703]
[409.15338135 323.78378296]
[401.77188110 323.61013794]
[395.59115601 316.89743042]
[382.26446533 310.01272583]
[368.93780518 303.12799072]
[354.07901001 304.16058350]
[345.36959839 290.95236206]
[330.51083374 291.98495483]
[321.80142212 278.77676392]
[308.47473145 271.89202881]
[302.77850342 276.77087402]
[305.53305054 291.51580811]
[291.38610840 286.52859497]
[285.68988037 291.40744019]
[290.44503784 305.63378906]
[295.20016479 319.86010742]
[299.95529175 334.08645630]
[312.58612061 344.54562378]
[309.57723999 360.66638184]
[294.02389526 365.86505127]
[281.92608643 354.79370117]
[285.72897339 338.84158325]
[280.97381592 324.61526489]
[276.21868896 310.38891602]
[271.46356201 296.16256714]
[269.24652100 310.99783325]
[259.65771484 322.53274536]
[245.47721863 327.42294312]
[230.81652832 324.25054932]
[219.92630005 313.93536377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[10 159]
[11 158]
[12 157]
[15 154]
[16 153]
[17 152]
[20 149]
[21 68]
[22 67]
[23 66]
[24 65]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[34 53]
[37 50]
[38 49]
[39 48]
[40 47]
[71 137]
[72 136]
[74 135]
[77 132]
[78 131]
[80 129]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[93 117]
[94 116]
[95 115]
[96 114]
[100 111]
[102 109]
[103 108]
[167 203]
[168 202]
[170 200]
[172 198]
[173 197]
[174 196]
[175 194]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
[207 218]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
