%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACUCAAACUUAGAAACUUGAAUUAGAUGUGGUAUUCAAAUCCUUAGCUGCCGCGAAGACACAGACAGCCCCCGUAAGAACCCACGAAGCAGGCGAAGUUCAUUGUUCUCAACAUUCUAGCUGCUCUUGCUGCAUUUGCUCUGGAAUUCUUGUAGAGAUAUUACUUGUCCUUCCAGGCUGUUCUUUCUGUAGCUCCCUUGUUUUCUUUUUGUGAUC\
) } def
/len { sequence length } bind def

/coor [
[41.25715637 456.94958496]
[43.94803619 471.70626831]
[44.54001999 486.69458008]
[43.02137375 501.61749268]
[39.42219925 516.17932129]
[33.81381989 530.09136963]
[26.30738640 543.07806396]
[17.05165672 554.88189697]
[6.23006153 565.26910400]
[-5.94293880 574.03369141]
[-19.22610092 581.00201416]
[-33.35618210 586.03594971]
[-48.05315399 589.03582764]
[-63.02574921 589.94207764]
[-77.97724915 588.73681641]
[-92.61134338 585.44390869]
[-106.63801575 580.12860107]
[-119.77928925 572.89624023]
[-131.77473450 563.89013672]
[-142.38661194 553.28881836]
[-151.40463257 541.30236816]
[-158.65007019 528.16833496]
[-163.97933960 514.14697266]
[-167.28683472 499.51614380]
[-168.50698853 484.56585693]
[-167.61563110 469.59234619]
[-164.63043213 454.89239502]
[-159.61054993 440.75732422]
[-152.65545654 427.46722412]
[-143.90298462 415.28549194]
[-133.52507019 404.45214844]
[-147.75050354 409.21002197]
[-161.97592163 413.96789551]
[-176.20135498 418.72576904]
[-190.42677307 423.48364258]
[-204.65219116 428.24151611]
[-205.67945862 443.40768433]
[-212.43685913 457.02407837]
[-223.89393616 467.01428223]
[-238.30355835 471.85482788]
[-253.46838379 470.80761719]
[-267.07586670 464.03231812]
[-277.05096436 452.56210327]
[-281.87258911 438.14614868]
[-280.80541992 422.98269653]
[-274.01223755 409.38415527]
[-262.52890015 399.42413330]
[-248.10659790 394.62149048]
[-232.94458008 395.70858765]
[-219.35496521 402.51968384]
[-209.41006470 414.01608276]
[-195.18464661 409.25820923]
[-180.95921326 404.50033569]
[-166.73379517 399.74249268]
[-152.50837708 394.98461914]
[-138.28294373 390.22674561]
[-126.10986328 381.46228027]
[-117.08550262 369.48059082]
[-108.06114197 357.49887085]
[-99.03678131 345.51718140]
[-90.01242065 333.53549194]
[-80.98805237 321.55380249]
[-71.96369171 309.57211304]
[-70.45129395 302.34243774]
[-62.72294235 297.48452759]
[-53.52763748 285.63351440]
[-55.64129257 270.93426514]
[-46.48476791 258.78466797]
[-31.05250740 256.66732788]
[-21.85720062 244.81632996]
[-12.66189575 232.96531677]
[-14.77555180 218.26606750]
[-5.61902618 206.11647034]
[9.81323433 203.99914551]
[11.50232506 189.20062256]
[26.07509804 183.04067993]
[27.76418877 168.24215698]
[42.33696365 162.08221436]
[51.53226852 150.23121643]
[60.72757339 138.38020325]
[69.92288208 126.52920532]
[79.11818695 114.67819214]
[88.31349182 102.82718658]
[97.33785248 90.84549713]
[106.18941498 78.73558807]
[103.96364594 63.31859589]
[113.11289215 51.16352081]
[127.82435608 49.13659668]
[136.67591858 37.02668762]
[145.52748108 24.91677856]
[154.37902832 12.80686951]
[155.46585083 6.29505539]
[159.12582397 1.95722544]
[163.66229248 0.48143211]
[172.85760498 -11.36957455]
[182.05290222 -23.22058105]
[184.83874512 -31.91344643]
[191.46611023 -35.17438126]
[200.83045959 -46.89226532]
[210.19482422 -58.61014557]
[219.55917358 -70.32803345]
[212.95913696 -82.82192993]
[211.62245178 -96.84510040]
[215.71800232 -110.27805328]
[224.59613037 -121.10313416]
[236.89141846 -127.70756531]
[250.73266602 -129.12367249]
[264.02761841 -125.17060089]
[273.55911255 -136.75294495]
[283.09057617 -148.33529663]
[292.62207031 -159.91764832]
[302.07022095 -171.56805420]
[311.43460083 -183.28594971]
[320.79895020 -195.00382996]
[323.14172363 -213.27111816]
[339.72579956 -219.01776123]
[348.92111206 -230.86875916]
[358.11642456 -242.71977234]
[367.31173706 -254.57078552]
[376.50701904 -266.42178345]
[385.70233154 -278.27279663]
[394.89764404 -290.12380981]
[394.05963135 -302.99081421]
[401.95745850 -312.67135620]
[413.93695068 -314.32305908]
[423.30133057 -326.04092407]
[416.26263428 -339.54562378]
[415.33181763 -354.74606323]
[420.67013550 -369.00869751]
[431.35269165 -379.86239624]
[445.52865601 -385.42672729]
[460.74197388 -384.73764038]
[474.35684204 -377.91448975]
[484.01440430 -366.13946533]
[488.04141235 -351.45260620]
[485.74017334 -336.39859009]
[477.50942993 -323.58551025]
[464.77514648 -315.23339844]
[449.74362183 -312.78927612]
[435.01919556 -316.67657471]
[425.65484619 -304.95867920]
[423.95724487 -287.48947144]
[406.74865723 -280.92849731]
[397.55334473 -269.07748413]
[388.35803223 -257.22647095]
[379.16271973 -245.37547302]
[369.96743774 -233.52445984]
[360.77212524 -221.67346191]
[351.57681274 -209.82244873]
[352.78024292 -197.78965759]
[345.22161865 -187.84201050]
[332.51684570 -185.63946533]
[323.15246582 -173.92158508]
[313.78811646 -162.20370483]
[312.06893921 -155.02038574]
[304.20440674 -150.38615417]
[294.67294312 -138.80381775]
[285.14144897 -127.22146606]
[275.60995483 -115.63911438]
[282.59817505 -101.26542664]
[282.61715698 -85.22481537]
[275.61230469 -70.72982788]
[262.94088745 -60.70562363]
[247.10920715 -57.19965363]
[231.27706909 -60.96367264]
[221.91270447 -49.24578857]
[212.54833984 -37.52790451]
[203.18399048 -25.81002235]
[193.90391541 -14.02527428]
[184.70860291 -2.17426825]
[175.51330566 9.67673779]
[166.48893738 21.65842819]
[157.63739014 33.76833725]
[148.78582764 45.87824631]
[139.93426514 57.98815536]
[142.46871948 72.62072754]
[133.66448975 85.02799225]
[118.29932404 87.58715057]
[109.44776154 99.69705963]
[109.05903625 104.92159271]
[105.77373505 109.55810547]
[100.16449738 112.02249908]
[90.96919250 123.87350464]
[81.77388763 135.72450256]
[72.57858276 147.57551575]
[63.38327408 159.42651367]
[54.18796921 171.27752686]
[51.84116745 186.92370605]
[37.92610550 192.23599243]
[35.57930374 207.88217163]
[21.66423988 213.19444275]
[23.44683647 228.66894531]
[13.95266533 240.55656433]
[-0.81088930 242.16062927]
[-10.00619507 254.01164246]
[-19.20150185 265.86264038]
[-17.41890526 281.33712769]
[-26.91307640 293.22476196]
[-41.67663193 294.82882690]
[-50.87193680 306.67984009]
[-59.98200607 318.59649658]
[-69.00636292 330.57818604]
[-78.03072357 342.55987549]
[-87.05508423 354.54156494]
[-96.07944489 366.52325439]
[-105.10381317 378.50494385]
[-114.12817383 390.48663330]
[-100.56440735 384.08160400]
[-86.23561096 379.64477539]
[-71.42574310 377.26403809]
[-56.42831039 376.98660278]
[-41.54052353 378.81796265]
[-27.05743217 382.72180176]
[-13.26605892 388.62078857]
[-0.43971866 396.39801025]
[11.16739750 405.89932251]
[21.32526016 416.93643188]
[29.83256531 429.29058838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[57 207]
[58 206]
[59 205]
[60 204]
[61 203]
[62 202]
[63 201]
[65 200]
[66 199]
[69 196]
[70 195]
[71 194]
[74 191]
[76 189]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 179]
[85 178]
[88 175]
[89 174]
[90 173]
[91 172]
[94 171]
[95 170]
[96 169]
[98 168]
[99 167]
[100 166]
[101 165]
[108 159]
[109 158]
[110 157]
[111 156]
[112 154]
[113 153]
[114 152]
[116 149]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[125 141]
[126 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
