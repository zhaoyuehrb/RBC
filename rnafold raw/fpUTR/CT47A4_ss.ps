%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGAAUCUUUCCCAACUUGUCUAAGUCCUCUCAGGCCAGCCUUGGUGGGAGGUUUCUAGGAUUCGCUCCCUGCCCUUCCCAUCUUAGGGUGUCGUCUGAGACAGACUCUUAUUCCCUCAAUAAAGAGAGAGACUCUUAUUCCCUCAGCGGCCAGCUCCUCGCCUCCCCUCGGCCGUAGCCACCUCAGUGGUCACCGUCUUCACCGUGGUCGCCUCAGCCCGCUCGCCACCCCAGUUGAGGCGCUGCUGGUGUC\
) } def
/len { sequence length } bind def

/coor [
[65.81152344 149.64929199]
[52.09352875 135.04031372]
[44.10286331 117.00110626]
[42.55112839 97.64374542]
[27.77196503 95.07931519]
[12.99279976 92.51488495]
[-1.92698467 97.77896881]
[-13.14409733 87.97970581]
[-27.92326164 85.41527557]
[-42.70242691 82.85084534]
[-57.48159027 80.28642273]
[-72.26075745 77.72199249]
[-87.03992462 75.15756226]
[-101.95970917 80.42164612]
[-113.17681885 70.62238312]
[-117.26574707 77.83058929]
[-122.92677307 83.85880280]
[-129.83471680 88.37283325]
[-137.59558105 91.12514496]
[-145.76908875 91.96837616]
[-153.89358521 90.86323547]
[-161.51213074 87.88022614]
[-168.19827271 83.19525909]
[-173.57980347 77.07922363]
[-177.35955811 69.88241577]
[-179.33177185 62.01440811]
[-194.27645874 60.72744751]
[-209.22114563 59.44048691]
[-224.16583252 58.15352631]
[-240.67575073 66.33825684]
[-254.65190125 55.70528793]
[-269.61126709 54.60182190]
[-284.57061768 53.49835205]
[-299.52996826 52.39488220]
[-314.48931885 51.29141617]
[-329.44866943 50.18794632]
[-344.40805054 49.08447647]
[-359.36740112 47.98101044]
[-374.33917236 47.06119919]
[-389.32110596 46.32518387]
[-403.48428345 53.37602234]
[-415.81658936 45.02354431]
[-430.79852295 44.28752899]
[-445.78045654 43.55151367]
[-461.97790527 52.33837891]
[-476.33596802 42.22703934]
[-491.32580566 41.67493057]
[-506.31564331 41.12282562]
[-521.30548096 40.57071686]
[-536.29528809 40.01860809]
[-551.28515625 39.46649933]
[-566.27496338 38.91439056]
[-581.26483154 38.36228180]
[-596.25463867 37.81017303]
[-603.20056152 47.41646194]
[-613.80670166 52.43775177]
[-625.40057373 51.73632431]
[-635.12152100 45.60070801]
[-640.62683105 35.64592743]
[-655.59857178 34.72612000]
[-670.57037354 33.80630875]
[-685.54211426 32.88649750]
[-695.31121826 44.94239426]
[-710.30950928 48.92117310]
[-724.76989746 43.29290390]
[-733.13201904 30.22177315]
[-732.18048096 14.73389912]
[-722.28118896 2.78468442]
[-707.24060059 -1.03115427]
[-692.84216309 4.75365114]
[-684.62231445 17.91472435]
[-669.65057373 18.83453560]
[-654.67877197 19.75434685]
[-639.70703125 20.67415810]
[-626.71966553 7.74368095]
[-608.08630371 8.45385551]
[-595.70251465 22.82033730]
[-580.71270752 23.37244606]
[-565.72290039 23.92455482]
[-550.73303223 24.47666359]
[-535.74322510 25.02877045]
[-520.75335693 25.58087921]
[-505.76351929 26.13298798]
[-490.77368164 26.68509674]
[-475.78384399 27.23720551]
[-466.72760010 19.24487877]
[-454.25265503 19.56462097]
[-445.04443359 28.56958199]
[-430.06250000 29.30559731]
[-415.08056641 30.04161263]
[-401.98898315 22.93812943]
[-388.58508301 31.34325218]
[-373.60314941 32.07926559]
[-369.54409790 29.61220741]
[-363.89706421 29.64935112]
[-358.26391602 33.02165222]
[-343.30456543 34.12512207]
[-328.34521484 35.22858810]
[-313.38586426 36.33205795]
[-298.42651367 37.43552780]
[-283.46713257 38.53899384]
[-268.50778198 39.64246368]
[-253.54843140 40.74593353]
[-244.20413208 33.09235764]
[-231.74942017 33.87105179]
[-222.87887573 43.20883942]
[-207.93418884 44.49580002]
[-192.98950195 45.78275681]
[-178.04481506 47.06971741]
[-171.49603271 35.26685333]
[-160.88337708 26.92625999]
[-164.52807617 12.37579060]
[-168.17279053 -2.17467785]
[-171.81748962 -16.72514725]
[-175.46218872 -31.27561569]
[-188.42819214 -40.72350311]
[-188.98171997 -56.75700378]
[-176.69816589 -67.07659149]
[-161.00041199 -63.76595688]
[-153.93043518 -49.36473846]
[-160.91172791 -34.92031860]
[-157.26701355 -20.36985016]
[-153.62231445 -5.81938076]
[-149.97761536 8.73108768]
[-146.33291626 23.28155708]
[-121.94873047 32.15885925]
[-110.61238861 55.84321594]
[-96.74971008 50.39570618]
[-84.47549438 60.37839890]
[-69.69632721 62.94282532]
[-54.91716385 65.50725555]
[-40.13800049 68.07168579]
[-25.35883331 70.63610840]
[-10.57966900 73.20053864]
[3.28301048 67.75302887]
[15.55722809 77.73572540]
[30.33639336 80.30014801]
[45.11555862 82.86457825]
[49.13973999 73.18286133]
[54.85514832 64.39288330]
[62.07172394 56.78691483]
[70.54950714 50.61788940]
[80.00658417 46.09093094]
[90.12848663 43.35657120]
[100.57864380 42.50574112]
[111.00955200 43.56672668]
[121.07437897 46.50424957]
[130.43843079 51.22063065]
[138.79032898 57.55903625]
[150.26783752 47.90156555]
[161.74534607 38.24409103]
[173.22285461 28.58661842]
[184.70036316 18.92914391]
[196.17787170 9.27167130]
[190.47480774 -4.74012041]
[189.38278198 -19.82861519]
[193.00877380 -34.51559448]
[200.99754333 -47.36217880]
[212.56643677 -57.10979080]
[226.58204651 -62.80345917]
[241.67126465 -63.88537598]
[256.35580444 -60.24954605]
[269.19705200 -52.25217056]
[278.93688965 -40.67675018]
[284.62118530 -26.65732574]
[285.69299316 -11.56738186]
[282.04730225 3.11472535]
[274.04132080 15.95059299]
[262.45938110 25.68269157]
[248.43615723 31.35757256]
[233.34550476 32.41926575]
[218.66584778 28.76375771]
[205.83534241 20.74917984]
[194.35783386 30.40665436]
[182.88032532 40.06412506]
[171.40281677 49.72159958]
[159.92530823 59.37907410]
[148.44779968 69.03654480]
[157.57641602 80.63429260]
[163.78887939 94.87049103]
[178.65242004 92.85177612]
[193.51596069 90.83306885]
[208.37950134 88.81435394]
[223.24304199 86.79564667]
[235.87420654 76.33688354]
[251.15104675 82.29928589]
[253.35806274 98.54924774]
[240.22485352 108.37019348]
[225.26174927 101.65918732]
[210.39820862 103.67789459]
[195.53466797 105.69660950]
[180.67114258 107.71531677]
[165.80760193 109.73403168]
[163.06550598 116.71478271]
[177.07730103 122.06915283]
[191.08911133 127.42353058]
[206.04547119 128.56694031]
[209.73649597 143.10572815]
[197.13674927 151.24493408]
[185.40130615 141.90336609]
[171.49130249 136.28982544]
[157.58129883 130.67628479]
[154.83920288 137.65704346]
[164.35510254 149.25219727]
[173.87100220 160.84735107]
[183.38690186 172.44250488]
[192.97377014 183.97906494]
[202.63124084 195.45657349]
[212.28871155 206.93408203]
[221.94619751 218.41159058]
[229.84197998 222.94599915]
[231.65071106 230.08970642]
[241.16661072 241.68486023]
[250.68251038 253.28002930]
[260.19839478 264.87518311]
[269.71429443 276.47033691]
[279.23019409 288.06549072]
[288.74609375 299.66064453]
[298.26199341 311.25579834]
[307.77789307 322.85095215]
[322.18728638 318.08291626]
[337.34585571 318.84603882]
[351.20352173 325.03710938]
[361.88616943 335.81881714]
[367.94906616 349.73306274]
[368.57220459 364.89801025]
[363.67138672 379.26278687]
[353.90933228 390.88461304]
[340.60635376 398.19177246]
[325.56149292 400.19601440]
[310.80947876 396.62628174]
[298.34542847 387.96536255]
[289.85494995 375.38458252]
[286.48635864 360.58535767]
[288.69519043 345.56918335]
[296.18273926 332.36685181]
[286.66683960 320.77169800]
[277.15093994 309.17654419]
[267.63504028 297.58139038]
[258.11914062 285.98623657]
[248.60324097 274.39108276]
[239.08734131 262.79592896]
[229.57144165 251.20075989]
[220.05554199 239.60560608]
[210.46867371 228.06906128]
[200.81120300 216.59155273]
[191.15373230 205.11404419]
[181.49626160 193.63653564]
[174.80430603 190.55078125]
[171.79174805 181.95840454]
[162.27584839 170.36325073]
[152.75994873 158.76809692]
[143.24404907 147.17294312]
[124.89118958 157.94670105]
[104.31324005 161.98844910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 138]
[5 137]
[6 136]
[8 134]
[9 133]
[10 132]
[11 131]
[12 130]
[13 129]
[15 127]
[26 109]
[27 108]
[28 107]
[29 106]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[36 98]
[37 97]
[38 96]
[39 93]
[40 92]
[42 90]
[43 89]
[44 88]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[59 74]
[60 73]
[61 72]
[62 71]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
[149 178]
[150 177]
[151 176]
[152 175]
[153 174]
[154 173]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
[203 253]
[204 252]
[205 251]
[206 250]
[207 248]
[208 247]
[209 246]
[210 245]
[212 244]
[213 243]
[214 242]
[215 241]
[216 240]
[217 239]
[218 238]
[219 237]
[220 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
