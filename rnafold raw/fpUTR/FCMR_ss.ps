%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUGAGAAUAGUUAGCAAACAAGGGAGGUUGUCAUUUCCUCAUCGUCAAGCUUUGUUCCUCGUGGGGGCUAGAAAUCUCUUUCCAGUUCCAGAUUGUGAAGGGUUCCUGAGUAAGCAGCGUGUCUCCAUCCCCCUCUCUAGGGGCUCUUGGAUGGACCUUGCACUCUAGAAGGGACA\
) } def
/len { sequence length } bind def

/coor [
[84.33863831 113.06880188]
[69.99407196 117.45437622]
[55.64949799 121.83995819]
[41.30492783 126.22553253]
[26.96035576 130.61109924]
[12.77757740 135.49462891]
[-1.22612929 140.87014771]
[-15.22983551 146.24566650]
[-29.18610001 151.74317932]
[-43.09385681 157.36228943]
[-57.00161362 162.98138428]
[-70.90937042 168.60047913]
[-84.81713104 174.21957397]
[-89.21142578 179.21984863]
[-94.65647888 180.96647644]
[-99.30963135 179.78273010]
[-113.40502167 184.91304016]
[-127.50041199 190.04333496]
[-127.01841736 205.15045166]
[-131.22377014 219.64726257]
[-139.69256592 232.11755371]
[-151.58500671 241.34712219]
[-165.72871399 246.44204712]
[-180.73428345 246.91519165]
[-195.13177490 242.73281860]
[-207.51470947 234.31657410]
[-216.67745972 222.50112915]
[-230.77285767 227.63142395]
[-244.86824036 232.76173401]
[-258.96362305 237.89202881]
[-262.26205444 252.96266174]
[-273.20080566 263.84143066]
[-288.28933716 267.05694580]
[-302.71298218 261.58316040]
[-311.86920166 249.16674805]
[-312.83624268 233.76972961]
[-305.30557251 220.30523682]
[-291.68020630 213.06973267]
[-276.30789185 214.37207031]
[-264.09393311 223.79664612]
[-249.99855042 218.66633606]
[-235.90315247 213.53604126]
[-221.80776978 208.40574646]
[-222.38351440 193.46487427]
[-218.30747986 179.05805969]
[-209.96675110 166.59963989]
[-198.16767883 157.31671143]
[-184.05801392 152.12825012]
[-169.01522827 151.55419922]
[-154.51202393 155.66336060]
[-141.97215271 164.06539917]
[-132.63070679 175.94795227]
[-118.53532410 170.81764221]
[-104.43993378 165.68734741]
[-90.43622589 160.31182861]
[-76.52847290 154.69271851]
[-62.62071228 149.07362366]
[-48.71295547 143.45452881]
[-34.80519867 137.83543396]
[-29.76711655 132.39923096]
[-20.60535431 132.24195862]
[-6.60164833 126.86643982]
[7.40205765 121.49092102]
[8.66182518 118.95693970]
[11.01532936 116.77670288]
[14.33021545 115.37460327]
[18.32123566 115.11826324]
[22.57477951 116.26653290]
[36.91934967 111.88095856]
[51.26392365 107.49538422]
[65.60849762 103.10980988]
[79.95306396 98.72423553]
[65.08993530 100.74597931]
[51.65896225 94.06699371]
[44.30150986 80.99534607]
[45.56011963 66.04824066]
[54.99984360 54.39098740]
[69.35858154 50.05200577]
[83.67433929 54.53073502]
[92.99999237 66.27944183]
[94.11277771 81.23844910]
[95.42011261 66.29552460]
[96.72744751 51.35260773]
[98.03478241 36.40968704]
[99.34211731 21.46676636]
[100.51900482 6.51300621]
[101.56535339 -8.45045471]
[102.61170197 -23.41391563]
[103.65804291 -38.37737656]
[104.70439148 -53.34083557]
[99.77766418 -69.56315613]
[114.00215912 -78.78813171]
[126.80434418 -67.67327118]
[119.66785431 -52.29449081]
[118.62150574 -37.33102798]
[117.57515717 -22.36756897]
[116.52881622 -7.40410757]
[115.48246765 7.55935335]
[118.15994263 14.47062397]
[114.28504181 22.77410316]
[112.97770691 37.71702194]
[111.67036438 52.65994263]
[110.36302948 67.60286713]
[109.05569458 82.54578400]
[117.87247467 94.68103790]
[132.48802185 98.05530548]
[147.10357666 101.42957306]
[161.71913147 104.80383301]
[176.33467102 108.17810059]
[190.95022583 111.55236816]
[205.67463684 114.41450500]
[220.48995972 116.76101685]
[235.30528259 119.10753632]
[250.12060547 121.45405579]
[256.46258545 119.43122101]
[262.02947998 120.73847198]
[265.40835571 124.14969635]
[280.13275146 127.01182556]
[294.85714722 129.87396240]
[309.58157349 132.73609924]
[324.60455322 127.77415466]
[335.62164307 137.79777527]
[350.34603882 140.65991211]
[365.36901855 135.69796753]
[376.38610840 145.72158813]
[391.40905762 140.75964355]
[402.42614746 150.78326416]
[417.15057373 153.64540100]
[431.87496948 156.50752258]
[446.59939575 159.36965942]
[461.86141968 148.18228149]
[480.14645386 151.61538696]
[489.96868896 167.03933716]
[504.78399658 169.38584900]
[519.59936523 171.73237610]
[534.41467285 174.07888794]
[549.22998047 176.42539978]
[564.33764648 170.04652405]
[577.25073242 180.15516663]
[574.68536377 196.35241699]
[559.28051758 201.97593689]
[546.88348389 191.24073792]
[532.06811523 188.89421082]
[517.25280762 186.54769897]
[502.43750000 184.20118713]
[487.62216187 181.85466003]
[480.04000854 190.42340088]
[469.14608765 194.29597473]
[457.61972046 192.39675903]
[448.35565186 185.08506775]
[443.73724365 174.09407043]
[429.01284790 171.23193359]
[414.28842163 168.36979675]
[399.56402588 165.50765991]
[385.59423828 170.67433167]
[373.52395630 160.44598389]
[359.55416870 165.61265564]
[347.48391724 155.38432312]
[332.75949097 152.52218628]
[318.78970337 157.68884277]
[306.71942139 147.46051025]
[291.99502563 144.59837341]
[277.27062988 141.73623657]
[262.54620361 138.87409973]
[247.77409363 136.26937866]
[232.95877075 133.92286682]
[218.14344788 131.57633972]
[203.32812500 129.22982788]
[200.97013855 130.79443359]
[197.84182739 131.50582886]
[194.27000427 131.06263733]
[190.68550110 129.28912354]
[187.57595825 126.16791534]
[172.96041870 122.79365540]
[158.34486389 119.41938782]
[143.72930908 116.04512024]
[129.11375427 112.67085266]
[114.49820709 109.29659271]
[106.70063782 117.00886536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 72]
[2 71]
[3 70]
[4 69]
[5 68]
[6 63]
[7 62]
[8 61]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[16 54]
[17 53]
[18 52]
[27 43]
[28 42]
[29 41]
[30 40]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[105 178]
[106 177]
[107 176]
[108 175]
[109 174]
[110 173]
[111 168]
[112 167]
[113 166]
[114 165]
[117 164]
[118 163]
[119 162]
[120 161]
[122 159]
[123 158]
[125 156]
[127 154]
[128 153]
[129 152]
[130 151]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
