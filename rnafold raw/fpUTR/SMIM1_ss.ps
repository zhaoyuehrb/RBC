%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGAGGCGCGCGGGGUCCGGGCUGCGGCUUCCCGGUGCGGCCGCAGUGGGCAGGCUCGAGGCGUCUGCCGCACCUCAGCCCACGACCUGCCCCGCUGGGAGGUGCGGGCCGCUGGCCAGGCCCUGACCGCAACCUGGCCCAGAGGCCCCAGCCCUCAGGCAAGGUUCUCCGGUGAAGCCACAGCCUGGCCACCUGUCUUGAUCUCCCCACCGAGAAGGCCCCGCCCCUCCCGCUGCAGCCCCACAGC\
) } def
/len { sequence length } bind def

/coor [
[261.46945190 563.45538330]
[263.26824951 557.13580322]
[260.45751953 542.40148926]
[256.12802124 536.43530273]
[257.70529175 527.46441650]
[255.07994080 512.69598389]
[252.45460510 497.92749023]
[249.82925415 483.15902710]
[245.57507324 477.13891602]
[247.26492310 468.18856812]
[243.08673096 462.11547852]
[244.88891602 453.18707275]
[242.63554382 438.35729980]
[240.38215637 423.52752686]
[238.12876892 408.69775391]
[235.87538147 393.86798096]
[233.62200928 379.03820801]
[213.15655518 358.29687500]
[220.89816284 333.99792480]
[213.50724792 320.94519043]
[206.11634827 307.89242554]
[198.72543335 294.83966064]
[191.33451843 281.78692627]
[183.94361877 268.73416138]
[176.55270386 255.68139648]
[169.16178894 242.62864685]
[156.15785217 235.36595154]
[156.09100342 219.54489136]
[148.70008850 206.49214172]
[141.30917358 193.43937683]
[133.91825867 180.38662720]
[126.52735901 167.33386230]
[119.13644409 154.28111267]
[111.66366577 141.27505493]
[104.10932159 128.31619263]
[96.55496979 115.35734558]
[83.41036987 108.13104248]
[68.42102814 108.69639587]
[53.43169022 109.26174927]
[44.99913025 112.70503998]
[38.25069046 109.73883057]
[23.25542641 110.11578369]
[8.26016331 110.49273682]
[-5.34121180 118.57438660]
[-18.25890350 111.15937042]
[-29.11473083 122.33026123]
[-44.32743073 122.49893188]
[-54.91026306 112.08071136]
[-69.90552521 112.45766449]
[-84.90078735 112.83461761]
[-99.89338684 113.30577850]
[-114.88272858 113.87113190]
[-129.87207031 114.43648529]
[-144.86141968 115.00183868]
[-159.85075378 115.56719208]
[-174.84010315 116.13254547]
[-189.82943726 116.69789124]
[-199.27891541 129.15748596]
[-214.53790283 132.57765198]
[-228.40156555 125.34349060]
[-234.32389832 110.87075806]
[-229.50857544 95.99303436]
[-216.22923279 87.73513031]
[-200.75596619 89.99616241]
[-190.39479065 101.70854950]
[-175.40545654 101.14320374]
[-160.41610718 100.57785034]
[-145.42677307 100.01249695]
[-130.43742371 99.44714355]
[-115.44808197 98.88179016]
[-100.45874023 98.31643677]
[-93.90986633 94.93234253]
[-85.27774048 97.83935547]
[-70.28247833 97.46240234]
[-55.28721619 97.08544922]
[-45.24120331 86.14866638]
[-30.03924370 85.55277252]
[-18.63585472 96.16410828]
[-6.10704136 88.10941315]
[7.88321209 95.49747467]
[22.87847519 95.12052155]
[37.87373734 94.74356842]
[52.86633682 94.27240753]
[67.85567474 93.70705414]
[82.84501648 93.14170074]
[93.51805878 82.60195160]
[94.27172089 67.62089539]
[95.02538300 52.63984299]
[95.77905273 37.65879059]
[96.53271484 22.67773438]
[97.19223785 7.69224024]
[97.75759125 -7.29710197]
[98.32294464 -22.28644371]
[96.19204712 -26.00407028]
[95.41721344 -29.82296562]
[95.86599731 -33.30879211]
[97.27973938 -36.11360931]
[99.31213379 -38.00925827]
[100.62990570 -52.95126343]
[101.94766998 -67.89326477]
[103.26544189 -82.83527374]
[100.90618134 -91.63289642]
[104.69480133 -97.95635986]
[106.20023346 -112.88062286]
[107.70565796 -127.80489349]
[97.98345184 -139.97520447]
[99.72276306 -155.08908081]
[111.38520813 -164.28271484]
[112.89064026 -179.20698547]
[114.39606476 -194.13125610]
[115.90148926 -209.05551147]
[117.40691376 -223.97978210]
[111.09368896 -238.48680115]
[120.06925201 -250.37329102]
[121.57467651 -265.29754639]
[123.08010864 -280.22183228]
[124.58553314 -295.14608765]
[125.99715424 -310.07949829]
[127.31492615 -325.02151489]
[128.63269043 -339.96353149]
[129.95045471 -354.90551758]
[131.26823425 -369.84753418]
[123.83234406 -377.74194336]
[121.99243164 -388.20721436]
[126.11631775 -397.76174927]
[134.62745667 -403.36004639]
[136.32029724 -418.26419067]
[129.28334045 -433.07681274]
[138.81443787 -446.42184448]
[155.10881042 -444.57110596]
[161.40422058 -429.42843628]
[151.22447205 -416.57135010]
[149.53163147 -401.66717529]
[158.50709534 -384.52392578]
[146.21023560 -368.52975464]
[144.89247131 -353.58776855]
[143.57469177 -338.64575195]
[142.25692749 -323.70373535]
[140.93916321 -308.76174927]
[143.47576904 -301.84036255]
[139.50979614 -293.64065552]
[138.00436401 -278.71640015]
[136.49894714 -263.79211426]
[134.99351501 -248.86785889]
[141.41442871 -235.42831421]
[132.33117676 -222.47434998]
[130.82575989 -207.55009460]
[129.32032776 -192.62582397]
[127.81490326 -177.70155334]
[126.30947876 -162.77729797]
[135.90092468 -151.43975830]
[134.58680725 -136.28298950]
[122.62992096 -126.29946136]
[121.12449646 -111.37519836]
[119.61907196 -96.45093536]
[118.20744324 -81.51750183]
[116.88967896 -66.57550049]
[115.57190704 -51.63349533]
[114.25414276 -36.69149017]
[113.31228638 -21.72109032]
[112.74693298 -6.73174906]
[112.18157959 8.25759315]
[115.06275177 15.04277325]
[111.51377106 23.43139839]
[110.76010132 38.41245270]
[110.00643921 53.39350891]
[109.25277710 68.37456512]
[108.49910736 83.35561371]
[113.58359528 89.62472534]
[115.16934967 96.83205414]
[113.50039673 103.31123352]
[109.51382446 107.80300140]
[117.06816864 120.76184845]
[124.62252045 133.72070312]
[131.62974548 139.53990173]
[132.18920898 146.89019775]
[139.58010864 159.94296265]
[146.97102356 172.99571228]
[154.36193848 186.04847717]
[161.75283813 199.10122681]
[169.14375305 212.15397644]
[182.67634583 220.35029602]
[182.21455383 235.23773193]
[189.60545349 248.29049683]
[196.99636841 261.34326172]
[204.38728333 274.39599609]
[211.77818298 287.44876099]
[219.16909790 300.50152588]
[226.56001282 313.55426025]
[233.95092773 326.60702515]
[245.52455139 325.55895996]
[256.98535156 330.48226929]
[265.26477051 340.92575073]
[267.75741577 354.88687134]
[280.99179077 361.94741821]
[294.22616577 369.00796509]
[303.24536133 370.28005981]
[307.58166504 376.24130249]
[320.72625732 383.46762085]
[333.87084961 390.69393921]
[347.01544189 397.92022705]
[360.16006470 405.14654541]
[373.25576782 397.12170410]
[388.60980225 396.73587036]
[402.09204102 404.09283447]
[410.07577515 417.21365356]
[410.41348267 432.56881714]
[403.01428223 446.02792358]
[389.86853027 453.97052002]
[374.51235962 454.26007080]
[361.07653809 446.81872559]
[353.17517090 433.64813232]
[352.93374634 418.29113770]
[339.78915405 411.06481934]
[326.64456177 403.83853149]
[313.49993896 396.61221313]
[300.35534668 389.38592529]
[287.16561890 382.24234009]
[273.93124390 375.18179321]
[260.69686890 368.12121582]
[248.45178223 376.78482056]
[250.70516968 391.61459351]
[252.95854187 406.44436646]
[255.21192932 421.27413940]
[257.46530151 436.10391235]
[259.71868896 450.93368530]
[262.06521606 465.74902344]
[264.59771729 480.53369141]
[267.22305298 495.30215454]
[269.84841919 510.07061768]
[272.47375488 524.83911133]
[275.19183350 539.59075928]
[278.00256348 554.32507324]
[280.99819946 569.02288818]
[284.17831421 583.68194580]
[287.35842896 598.34094238]
[290.53854370 612.99993896]
[304.79412842 619.12841797]
[312.69598389 632.48284912]
[311.20565796 647.92816162]
[300.89624023 659.52539062]
[285.73190308 662.81512451]
[271.54364014 656.53240967]
[263.78710938 643.09301758]
[265.44488525 627.66479492]
[275.87951660 616.18005371]
[272.69940186 601.52105713]
[269.51928711 586.86199951]
[266.33920288 572.20300293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 233]
[3 232]
[5 231]
[6 230]
[7 229]
[8 228]
[10 227]
[12 226]
[13 225]
[14 224]
[15 223]
[16 222]
[17 221]
[19 190]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 174]
[35 173]
[36 172]
[37 85]
[38 84]
[39 83]
[41 82]
[42 81]
[43 80]
[45 78]
[48 75]
[49 74]
[50 73]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[86 168]
[87 167]
[88 166]
[89 165]
[90 164]
[91 162]
[92 161]
[93 160]
[98 159]
[99 158]
[100 157]
[101 156]
[103 155]
[104 154]
[105 153]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[114 144]
[115 143]
[116 142]
[117 141]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[126 133]
[127 132]
[194 220]
[195 219]
[196 218]
[198 217]
[199 216]
[200 215]
[201 214]
[202 213]
[234 249]
[235 248]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
