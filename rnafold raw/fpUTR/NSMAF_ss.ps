%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAGUCCCCACGCGAGGAUGCUGCGGUGAGCGCGGCCGGGACGCCGCGUCGGGCUCUCGGCCGCCCAGCGGCGCCGCAGGGGAAGCCAGGCCGGCAGCCGCGCGCUCCCCAGCCGGCCACCAAUCCCGCCCUCCCCGGCUCCUCCGGACCUCCUCGGCAGGCGGCGGCGGGGCCUGCCUGUGCGCUCUGCGCCCGCCCGCGCCUACCCUCC\
) } def
/len { sequence length } bind def

/coor [
[277.92764282 281.44149780]
[267.43789673 270.71929932]
[256.94818115 259.99707031]
[246.30290222 249.42930603]
[235.50434875 239.01818848]
[224.70579529 228.60707092]
[213.90724182 218.19595337]
[203.03292847 207.86401367]
[192.08340454 197.61180115]
[181.13388062 187.35958862]
[178.33386230 187.31518555]
[175.38265991 186.16067505]
[172.70256042 183.83291626]
[170.73092651 180.42243958]
[169.86648560 176.17422485]
[162.98251343 173.49111938]
[159.46447754 165.06469727]
[149.29252625 154.04057312]
[139.12057495 143.01643372]
[128.94862366 131.99230957]
[118.77667999 120.96817780]
[101.28912354 124.98892212]
[87.14810944 117.72965240]
[81.88095856 104.91316986]
[66.88455963 105.24192047]
[51.88816452 105.57066345]
[36.89176941 105.89940643]
[21.89537048 106.22814941]
[6.89897394 106.55690002]
[-8.09742355 106.88564301]
[-23.09382057 107.21438599]
[-38.61124802 117.13115692]
[-53.65615082 108.09439850]
[-68.64614105 108.64223480]
[-83.62052917 109.51845551]
[-98.57211304 110.72265625]
[-113.52369690 111.92684937]
[-128.47528076 113.13105011]
[-143.42686462 114.33524323]
[-158.37844849 115.53944397]
[-173.33004761 116.74364471]
[-188.28163147 117.94783783]
[-203.23321533 119.15203857]
[-218.18479919 120.35623169]
[-226.48457336 124.16347504]
[-233.36337280 121.46716309]
[-248.33096313 122.45276642]
[-263.29855347 123.43836975]
[-273.52563477 135.48753357]
[-289.28390503 136.69265747]
[-301.22427368 126.33876038]
[-302.26272583 110.56862640]
[-291.78314209 98.73839569]
[-276.00292969 97.86673737]
[-264.28414917 108.47078705]
[-249.31655884 107.48518372]
[-234.34898376 106.49958038]
[-219.38899231 105.40464783]
[-204.43740845 104.20045471]
[-189.48582458 102.99625397]
[-174.53424072 101.79205322]
[-159.58265686 100.58786011]
[-144.63107300 99.38365936]
[-129.67948914 98.17946625]
[-114.72789764 96.97526550]
[-99.77631378 95.77106476]
[-84.82472992 94.56687164]
[-82.27475739 92.13584137]
[-78.42173767 90.81761169]
[-73.80081177 91.21067810]
[-69.19396973 93.65223694]
[-54.20397949 93.10440826]
[-45.74332809 84.46160889]
[-33.26142120 83.88080597]
[-23.42256546 92.21798706]
[-8.42616844 91.88924408]
[6.57022905 91.56050110]
[21.56662560 91.23175812]
[36.56302261 90.90300751]
[51.55942154 90.57426453]
[66.55581665 90.24552155]
[81.55221558 89.91677856]
[91.88415527 79.04244995]
[91.44585419 64.04885101]
[91.00756073 49.05525970]
[90.56925964 34.06166458]
[76.69944763 27.78553581]
[66.96966553 16.15719604]
[63.26867294 1.51742649]
[66.27861023 -13.21693039]
[75.34999847 -25.13411903]
[88.64095306 -31.90286827]
[88.20265198 -46.89646149]
[87.76435852 -61.89005661]
[87.32605743 -76.88365173]
[86.88775635 -91.87725067]
[86.44945526 -106.87084198]
[86.01115417 -121.86444092]
[85.02555084 -136.83201599]
[83.49396515 -151.75363159]
[81.96237183 -166.67523193]
[70.47687531 -177.87625122]
[72.21641541 -193.82472229]
[85.84655762 -202.28633118]
[100.91142273 -196.77005005]
[105.85454559 -181.50750732]
[96.88397217 -168.20681763]
[98.41556549 -153.28521729]
[99.94715881 -138.36361694]
[111.28388977 -148.18595886]
[126.05835724 -145.59458923]
[133.37565613 -132.50042725]
[127.83990479 -118.55928802]
[113.53325653 -114.05155945]
[101.00475311 -122.30273438]
[101.44305420 -107.30914307]
[101.88134766 -92.31554413]
[102.31964874 -77.32195282]
[102.75794983 -62.32835770]
[103.19625092 -47.33476257]
[103.63455200 -32.34116745]
[117.29820251 -26.36036682]
[127.05024719 -14.99343395]
[130.91575623 -0.46006271]
[128.07626343 14.37090015]
[119.04235840 26.54774857]
[105.56285095 33.62336349]
[106.00115204 48.61695862]
[106.43945312 63.61055374]
[106.87775421 78.60414886]
[120.63971710 84.57142639]
[131.88412476 74.64352417]
[143.12854004 64.71562958]
[143.85910034 48.92823792]
[155.59518433 38.34334183]
[171.37397766 39.24077988]
[181.83419800 51.08811188]
[180.76998901 66.85652924]
[168.81272888 77.19091034]
[153.05644226 75.96004486]
[141.81202698 85.88794708]
[130.56761169 95.81584167]
[129.80081177 110.79622650]
[139.97276306 121.82035828]
[150.14469910 132.84449768]
[160.31665039 143.86862183]
[170.48860168 154.89276123]
[180.74081421 165.84226990]
[191.38609314 176.41006470]
[202.33561707 186.66227722]
[213.28514099 196.91448975]
[221.68563843 200.49401855]
[224.31835938 207.39741516]
[235.11691284 217.80851746]
[245.91546631 228.21963501]
[256.71401978 238.63075256]
[263.02294922 240.59144592]
[266.82577515 244.80953979]
[267.67037964 249.50735474]
[278.16012573 260.22955322]
[288.64984131 270.95175171]
[299.74798584 281.04287720]
[311.41665649 290.46850586]
[323.08535767 299.89410400]
[334.75402832 309.31970215]
[346.42269897 318.74530029]
[361.92913818 317.26608276]
[373.62857056 326.99121094]
[374.94323730 341.78332520]
[386.61190796 351.20892334]
[398.28057861 360.63455200]
[409.94924927 370.06015015]
[421.61791992 379.48574829]
[433.28659058 388.91134644]
[445.02383423 398.25146484]
[456.82897949 407.50555420]
[474.15554810 405.08480835]
[487.60629272 415.73565674]
[489.15939331 432.48297119]
[501.09851074 441.56359863]
[516.72290039 439.18588257]
[529.40264893 448.61987305]
[531.61505127 464.26852417]
[522.04754639 476.84780884]
[506.37634277 478.89462280]
[493.89892578 469.19464111]
[492.01788330 453.50271606]
[480.07879639 444.42208862]
[467.68139648 447.92758179]
[455.34405518 443.58868408]
[447.64428711 432.77774048]
[447.57489014 419.31069946]
[435.76971436 410.05661011]
[428.56845093 408.40441895]
[423.86099243 400.58001709]
[412.19232178 391.15441895]
[400.52365112 381.72882080]
[388.85498047 372.30322266]
[377.18630981 362.87762451]
[365.51760864 353.45199585]
[350.77978516 355.27743530]
[338.81182861 345.88473511]
[336.99710083 330.41397095]
[325.32843018 320.98837280]
[313.65972900 311.56277466]
[301.99105835 302.13717651]
[290.32238770 292.71157837]
[292.92529297 307.48400879]
[286.45004272 321.01437378]
[273.31277466 328.25402832]
[258.41549683 326.50158691]
[247.31690979 316.41094971]
[244.15826416 301.74728394]
[250.11817932 287.98214722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 156]
[5 155]
[6 154]
[7 153]
[8 151]
[9 150]
[10 149]
[15 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[31 75]
[33 72]
[34 71]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[46 57]
[47 56]
[48 55]
[83 130]
[84 129]
[85 128]
[86 127]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 109]
[100 108]
[101 107]
[131 142]
[132 141]
[133 140]
[162 207]
[163 206]
[164 205]
[165 204]
[166 203]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[175 193]
[176 192]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
