%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGCAACUCCUCGCUCCACGUUCCGCGCAGAGGAACGUGGCUCCAAAUUCAAAUCAACGCAGCCUCACGCCGGCGGCGAGCGCGAGGGGCGGAGCCUGCCCGGCGUGGGCCGAGACGCGCUGUGUGAUUGCCUCGGAGAGAGGAAGGCGCUCCAGUUCCGGGUCAGGCCCUUCUCCCGCCUCCCUCGGCCUUAGCC\
) } def
/len { sequence length } bind def

/coor [
[121.77849579 138.22573853]
[106.82524109 137.04248047]
[108.00822449 122.08966827]
[100.53157806 121.49827576]
[95.64929962 135.68148804]
[90.76702118 149.86468506]
[99.77832794 162.49702454]
[99.60987091 178.01318359]
[90.32641602 190.44688416]
[75.49764252 195.01713562]
[60.82551575 189.96655273]
[51.95177078 177.23719788]
[52.28853989 161.72378540]
[61.70633316 149.39151001]
[76.58380890 144.98240662]
[81.46608734 130.79920959]
[86.34836578 116.61599731]
[74.31128693 107.66565704]
[62.13441086 116.42485809]
[49.95753479 125.18406677]
[37.78065872 133.94326782]
[25.60378265 142.70248413]
[13.42690754 151.46168518]
[1.25003159 160.22090149]
[-10.92684364 168.98010254]
[-23.10371971 177.73930359]
[-24.08790398 193.34588623]
[-34.91092300 204.63288879]
[-50.46247482 206.27091980]
[-63.39959717 197.48657227]
[-67.61377716 182.42752075]
[-61.11520004 168.20422363]
[-46.97230148 161.53245544]
[-31.86292648 165.56243896]
[-19.68605042 156.80322266]
[-7.50917530 148.04402161]
[4.66770029 139.28480530]
[16.84457588 130.52560425]
[29.02145195 121.76639557]
[41.19832611 113.00719452]
[53.37520218 104.24798584]
[65.55207825 95.48877716]
[70.65764618 81.38441467]
[66.90895081 66.86038971]
[63.16025925 52.33636093]
[59.41156387 37.81233978]
[46.28985214 36.16886902]
[34.53740311 30.17585754]
[25.54503441 20.56692505]
[20.36861801 8.50214005]
[19.60512733 -4.57201195]
[23.32386398 -17.09604836]
[31.06078911 -27.58349991]
[41.87630463 -34.79734039]
[38.58798218 -49.43246841]
[35.29965591 -64.06759644]
[32.01133347 -78.70272064]
[28.72300911 -93.33784485]
[23.78388786 -101.03371429]
[25.50022316 -108.22991943]
[22.44334221 -122.91513062]
[19.38646126 -137.60034180]
[16.32958221 -152.28555298]
[13.27270126 -166.97076416]
[10.21582127 -181.65597534]
[6.12427616 -196.08717346]
[1.01870644 -210.19154358]
[-4.08686304 -224.29589844]
[-9.19243240 -238.40026855]
[-14.29800224 -252.50463867]
[-19.40357208 -266.60900879]
[-24.50914192 -280.71337891]
[-29.61471176 -294.81774902]
[-34.72027969 -308.92211914]
[-39.82585144 -323.02645874]
[-45.04259109 -337.09008789]
[-50.48069382 -351.06961060]
[-56.02897263 -365.00576782]
[-61.57725143 -378.94195557]
[-74.48474884 -382.81097412]
[-82.68502045 -393.25701904]
[-83.35847473 -406.32528687]
[-76.48295593 -417.22958374]
[-81.81054688 -431.25158691]
[-87.13813782 -445.27359009]
[-101.12357330 -453.13406372]
[-103.55545044 -468.99172974]
[-92.56824493 -480.68194580]
[-76.59040070 -479.23696899]
[-67.87874603 -465.76525879]
[-73.11612701 -450.60119629]
[-67.78853607 -436.57916260]
[-62.46094894 -422.55715942]
[-46.84310150 -416.33035278]
[-40.43039703 -400.42324829]
[-47.64109039 -384.49023438]
[-42.09281158 -370.55404663]
[-36.54453278 -356.61788940]
[-31.14433861 -351.56130981]
[-31.02058029 -342.41769409]
[-25.70088196 -337.27648926]
[-25.72148323 -328.13204956]
[-20.61591339 -314.02767944]
[-15.51034451 -299.92330933]
[-10.40477467 -285.81893921]
[-5.29920530 -271.71456909]
[-0.19363557 -257.61019897]
[4.91193390 -243.50584412]
[10.01750374 -229.40147400]
[15.12307262 -215.29710388]
[20.22864342 -201.19273376]
[25.07173347 -215.38937378]
[36.75074768 -224.80216980]
[51.65219879 -226.51878357]
[65.16556549 -220.00811768]
[73.10981750 -207.28456116]
[73.02699280 -192.28479004]
[64.94271851 -179.64973450]
[51.35827255 -173.28869629]
[36.47668839 -175.16976929]
[24.90103340 -184.71286011]
[27.95791435 -170.02764893]
[31.01479530 -155.34243774]
[34.07167435 -140.65722656]
[37.12855530 -125.97200775]
[40.18543625 -111.28679657]
[43.35813522 -96.62616730]
[46.64646149 -81.99104309]
[49.93478394 -67.35591888]
[53.22310638 -52.72079086]
[56.51143265 -38.08566284]
[73.06664276 -34.75307465]
[86.54675293 -24.48958397]
[94.21385193 -9.31903172]
[94.48422241 7.73208332]
[87.25521851 23.23836517]
[73.93559265 34.06364441]
[77.68428040 48.58766937]
[81.43297577 63.11169434]
[85.18167114 77.63571930]
[121.40603638 59.63661575]
[164.54507446 99.32968140]
[177.72828674 106.48532867]
[190.91148376 113.64097595]
[204.09468079 120.79662323]
[219.91439819 120.57974243]
[227.40911865 133.45135498]
[240.59231567 140.60700989]
[253.77551270 147.76264954]
[266.95870972 154.91830444]
[280.14190674 162.07394409]
[290.67578125 156.53747559]
[302.45364380 156.77557373]
[312.54748535 162.61322021]
[318.50384521 172.49768066]
[318.93997192 183.90983582]
[331.89071655 191.47808838]
[342.59408569 186.27691650]
[354.35858154 186.88670349]
[364.26309204 193.04008484]
[369.90447998 203.10765076]
[369.98010254 214.52787781]
[382.68545532 222.50120544]
[395.39080811 230.47451782]
[408.09619141 238.44784546]
[424.72625732 241.74580383]
[426.16085815 258.63894653]
[410.32504272 264.69396973]
[400.12286377 251.15319824]
[387.41751099 243.17988586]
[374.71215820 235.20655823]
[362.00677490 227.23324585]
[344.44869995 232.38792419]
[328.41882324 222.91786194]
[324.32244873 204.42881775]
[311.37170410 196.86056519]
[293.98510742 202.56695557]
[277.66427612 193.60766602]
[272.98626709 175.25714111]
[259.80307007 168.10150146]
[246.61985779 160.94584656]
[233.43666077 153.79020691]
[220.25346375 146.63455200]
[205.37669373 147.36325073]
[196.93902588 133.97981262]
[183.75582886 126.82417297]
[170.57263184 119.66852570]
[157.38943481 112.51287842]
[145.21255493 121.27208710]
[147.80432129 136.04647827]
[150.39608765 150.82087708]
[161.33529663 163.03831482]
[155.96789551 178.53421021]
[139.81539917 181.36772156]
[129.49411011 168.62397766]
[135.62168884 153.41264343]
[133.02992249 138.63824463]
[130.43815613 123.86385345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[43 140]
[44 139]
[45 138]
[46 137]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 111]
[67 110]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 102]
[76 100]
[77 98]
[78 97]
[79 96]
[83 93]
[84 92]
[85 91]
[142 188]
[143 187]
[144 186]
[145 185]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[156 176]
[157 175]
[162 172]
[163 171]
[164 170]
[165 169]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
