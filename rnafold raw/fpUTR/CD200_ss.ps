%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGUUUCCCCAGCGGUCACCUUUGAAAAGGGAAAAAUGUCUGAAAAUAGACAAAGCUGAAUAUAAACAUCAUUUAAUUCCCCCCACACAGACAGCCUCCGCUCCUGUGAGGGCGUGGGGAAAACGGAGUGGGAGAAGGGGGCUAGCGAGGAGGAAGAGGCGGGAGGUGCGGCAGGGGCACAGGUGACGCUCCUCCCGCCUGCCUAGCAGAGCUCCAGGCGCACAUCCGCAGUCAGCCACCUCGCGCGCGCCUC\
CAGGAGCAAGG\
) } def
/len { sequence length } bind def

/coor [
[-224.26071167 187.45826721]
[-227.08560181 172.72666931]
[-224.84400940 157.89509583]
[-217.79177856 144.65629578]
[-206.73376465 134.52119446]
[-192.92956543 128.64591980]
[-207.83595276 126.97271729]
[-222.74234009 125.29951477]
[-237.64872742 123.62631226]
[-252.55511475 121.95310211]
[-267.46151733 120.27989960]
[-281.76504517 124.79750061]
[-293.00619507 134.72909546]
[-304.24734497 144.66067505]
[-315.48852539 154.59226990]
[-309.90838623 170.11521912]
[-316.02844238 188.33171082]
[-334.31289673 200.49314880]
[-342.92858887 212.77198792]
[-345.28350830 221.56152344]
[-351.71859741 225.14379883]
[-360.47814941 237.32041931]
[-369.23773193 249.49703979]
[-377.99728394 261.67364502]
[-379.09542847 278.03598022]
[-393.93197632 285.02230835]
[-407.24438477 275.44567871]
[-405.33798218 259.15771484]
[-390.17391968 252.91407776]
[-381.41433716 240.73747253]
[-372.65478516 228.56085205]
[-363.89520264 216.38423157]
[-355.20742798 204.15629578]
[-346.59173584 191.87745667]
[-351.52438354 186.22776794]
[-362.82394409 196.09284973]
[-372.68884277 184.79313660]
[-361.38967896 174.92837524]
[-366.32229614 169.27867126]
[-379.65115356 176.15921021]
[-392.98001099 183.03973389]
[-406.30886841 189.92025757]
[-419.63772583 196.80078125]
[-432.96658325 203.68132019]
[-441.36508179 217.76667786]
[-457.75656128 217.26551819]
[-465.27886963 202.69338989]
[-456.19372559 189.04084778]
[-439.84710693 190.35246277]
[-426.51824951 183.47193909]
[-413.18939209 176.59140015]
[-399.86053467 169.71087646]
[-386.53167725 162.83035278]
[-373.20285034 155.94982910]
[-358.78063965 139.55805969]
[-340.02822876 135.88874817]
[-325.42010498 143.35110474]
[-314.17895508 133.41952515]
[-302.93777466 123.48793793]
[-291.69662476 113.55635071]
[-306.32312012 116.88283539]
[-320.94961548 120.20932770]
[-335.57614136 123.53582001]
[-348.25732422 131.54748535]
[-363.06472778 133.94364929]
[-377.62548828 130.34033203]
[-389.60641479 121.31494904]
[-397.08761597 108.31373596]
[-398.87030029 93.42005157]
[-394.66882324 79.02048492]
[-385.15643311 67.42245483]
[-371.85739136 60.48447037]
[-356.90280151 59.31828308]
[-342.68899536 64.11076355]
[-331.49456787 74.09272003]
[-317.61157227 79.77268219]
[-303.72854614 85.45265198]
[-289.84555054 91.13262177]
[-299.30590820 79.49211121]
[-308.76626587 67.85160065]
[-318.22662354 56.21109009]
[-327.68701172 44.57057953]
[-337.48562622 33.21334839]
[-347.61407471 22.14922142]
[-357.74249268 11.08509350]
[-367.87094116 0.02096659]
[-377.99935913 -11.04316044]
[-388.12777710 -22.10728645]
[-388.44638062 -7.11067104]
[-398.25512695 4.23783731]
[-413.04757690 6.72439814]
[-426.02767944 -0.79338741]
[-431.23196411 -14.86162758]
[-426.26943970 -29.01695824]
[-413.42004395 -36.75600433]
[-398.58789062 -34.52361298]
[-407.77172852 -46.38350677]
[-416.95556641 -58.24340057]
[-426.13940430 -70.10329437]
[-440.70620728 -76.27732086]
[-442.38098145 -91.07746887]
[-451.56484985 -102.93736267]
[-460.74868774 -114.79725647]
[-476.12365723 -120.50183868]
[-478.60369873 -136.71237183]
[-465.63754272 -146.75285339]
[-450.56369019 -140.29449463]
[-448.88879395 -123.98109436]
[-439.70495605 -112.12120819]
[-430.52108765 -100.26131439]
[-416.61117554 -94.93557739]
[-414.27951050 -79.28713226]
[-405.09567261 -67.42723846]
[-395.91183472 -55.56734848]
[-386.72799683 -43.70745468]
[-377.06365967 -32.23571777]
[-366.93524170 -21.17159081]
[-356.80679321 -10.10746384]
[-346.67837524 0.95666355]
[-336.54992676 12.02079010]
[-326.42150879 23.08491707]
[-323.35473633 8.40176773]
[-310.01782227 1.53689194]
[-296.28607178 7.57338953]
[-292.32717896 22.04153442]
[-301.07250977 34.22838211]
[-316.04647827 35.11021423]
[-306.58612061 46.75072479]
[-297.12576294 58.39123535]
[-287.66540527 70.03174591]
[-278.20501709 81.67225647]
[-265.78829956 105.37351227]
[-250.88191223 107.04671478]
[-235.97552490 108.71992493]
[-221.06913757 110.39312744]
[-206.16275024 112.06632996]
[-191.25636292 113.73953247]
[-181.93423462 109.42208099]
[-171.40583801 114.20674896]
[-156.43724060 113.23670959]
[-141.46862793 112.26667023]
[-126.50003052 111.29663086]
[-111.53143311 110.32659149]
[-96.56282806 109.35655212]
[-85.29907990 94.89487457]
[-66.71935272 93.26560974]
[-52.63468933 105.97532654]
[-37.69305801 104.65334320]
[-22.75142670 103.33135223]
[-7.80979443 102.00936127]
[7.13183689 100.68737793]
[22.07346916 99.36538696]
[34.06930923 90.53651428]
[48.49768829 97.02745819]
[63.43931961 95.70547485]
[69.84937286 73.32278442]
[89.65296173 57.53784561]
[116.98044586 56.01277542]
[141.90304565 71.64129639]
[155.31192017 64.91806793]
[168.72080994 58.19484711]
[182.12969971 51.47162247]
[195.53858948 44.74839783]
[208.94747925 38.02517319]
[222.35636902 31.30195045]
[235.76524353 24.57872772]
[249.17413330 17.85550308]
[262.58303833 11.13227844]
[271.45138550 -1.96973693]
[286.29660034 -0.75771779]
[299.70547485 -7.48094177]
[313.11437988 -14.20416546]
[326.44320679 -21.08469391]
[339.69018555 -28.12157249]
[344.41131592 -42.96572495]
[357.94586182 -49.91341400]
[372.06838989 -45.32108307]
[380.30059814 -59.50428009]
[396.69683838 -59.19601822]
[404.39010620 -44.71341324]
[395.46618652 -30.95492363]
[379.10528564 -32.07410812]
[375.00405884 -17.80120468]
[361.67001343 -10.47610188]
[346.72708130 -14.87459660]
[333.48010254 -7.83771849]
[331.25720215 -3.64565086]
[326.39413452 -0.78854507]
[319.83758545 -0.79527849]
[306.42871094 5.92794561]
[293.01980591 12.65116978]
[285.11056519 25.27229500]
[269.30624390 24.54116631]
[255.89736938 31.26439095]
[242.48847961 37.98761368]
[229.07958984 44.71083832]
[215.67070007 51.43406296]
[202.26181030 58.15728760]
[188.85292053 64.88050842]
[175.44403076 71.60373688]
[162.03515625 78.32695770]
[148.62626648 85.05017853]
[150.03613281 99.98377991]
[164.46635437 104.07873535]
[178.89657593 108.17369080]
[193.32679749 112.26865387]
[207.80419922 116.19354248]
[222.32678223 119.94781494]
[236.84936523 123.70209503]
[253.69767761 121.81249237]
[260.17752075 137.47927856]
[246.91679382 148.04287720]
[233.09509277 138.22467041]
[218.57250977 134.47039795]
[204.04992676 130.71612549]
[199.57968140 132.30725098]
[194.06344604 131.13099670]
[189.23184204 126.69887543]
[174.80162048 122.60391998]
[160.37139893 118.50895691]
[145.94117737 114.41400146]
[139.45564270 127.93945312]
[151.68357849 136.62722778]
[167.22245789 133.74295044]
[180.20210266 142.75984192]
[182.92193604 158.32833862]
[173.76832581 171.21192932]
[158.17193604 173.76701355]
[145.38584900 164.47769165]
[142.99580383 148.85517883]
[130.76786804 140.16738892]
[117.93749237 145.19869995]
[104.74784851 146.41642761]
[92.26640320 144.01504517]
[81.42636108 138.47099304]
[72.95691681 130.48423767]
[67.33493805 120.90424347]
[64.76130676 110.64710236]
[49.81967545 111.96909332]
[36.75511169 120.89252472]
[23.39545631 114.30702209]
[8.45382404 115.62900543]
[-6.48780727 116.95099640]
[-21.42943764 118.27297974]
[-36.37107086 119.59497070]
[-51.31270218 120.91696167]
[-57.00239944 131.30915833]
[-66.89209747 137.61340332]
[-78.47599792 138.36894226]
[-88.88398743 133.50399780]
[-95.59278870 124.32515717]
[-110.56139374 125.29519653]
[-125.52999115 126.26523590]
[-140.49859619 127.23527527]
[-155.46719360 128.20530701]
[-170.43579102 129.17535400]
[-156.92535400 135.69210815]
[-146.35581970 146.33563232]
[-139.93347168 159.89120483]
[-138.39131165 174.81172180]
[-141.90533447 189.39430237]
[-150.07449341 201.97463989]
[-161.96643066 211.11694336]
[-176.22393799 215.77780151]
[-191.21980286 215.42527771]
[-205.24253845 210.09959412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 137]
[7 136]
[8 135]
[9 134]
[10 133]
[11 132]
[12 60]
[13 59]
[14 58]
[15 57]
[18 34]
[19 33]
[21 32]
[22 31]
[23 30]
[24 29]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[96 115]
[97 114]
[98 113]
[99 112]
[101 110]
[102 109]
[103 108]
[139 256]
[140 255]
[141 254]
[142 253]
[143 252]
[144 251]
[147 246]
[148 245]
[149 244]
[150 243]
[151 242]
[152 241]
[154 239]
[155 238]
[159 202]
[160 201]
[161 200]
[162 199]
[163 198]
[164 197]
[165 196]
[166 195]
[167 194]
[168 193]
[170 191]
[171 190]
[172 189]
[173 186]
[174 185]
[177 182]
[203 221]
[204 220]
[205 219]
[206 218]
[207 215]
[208 214]
[209 213]
[222 231]
[223 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
