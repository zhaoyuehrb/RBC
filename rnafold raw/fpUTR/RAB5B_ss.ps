%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGAGCUAUUGGCUGGAGCCCCGCCCCAGGGCGAGGAGGAGAAGGAGGGGCAGGAGGGUUUGGUUGAGCUGCAGCUGUUUGUCUGUUCGACACAGGCUUGGGGCCGACGGGGGAGACGGAGCCCCAGGAGUGUUGAAGCCUGGAAAUCCCCUCCCCUUCCCCCUCCCCCCUUUACAGUAUCCCCCUCCCUCCACCCUUUCCCAUUCUGAUAAUCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[36.38325500 729.48022461]
[38.60273361 744.54650879]
[34.49605179 759.21130371]
[24.77471924 770.93371582]
[11.12301636 777.68286133]
[-4.09381771 778.28936768]
[-18.23937416 772.64819336]
[-28.86285019 761.73663330]
[-34.12366486 747.44525146]
[-33.11034775 732.25006104]
[-25.99846458 718.78381348]
[-14.02019119 709.37951660]
[0.74916363 705.66650391]
[3.28417587 690.88232422]
[5.81918812 676.09808350]
[8.35420036 661.31384277]
[10.88921261 646.52960205]
[13.42422485 631.74536133]
[15.95923710 616.96112061]
[2.78222036 611.16644287]
[-8.62935066 602.37658691]
[-17.60746765 591.10052490]
[-23.62520409 577.99261475]
[-26.32763481 563.81518555]
[-25.55276489 549.39385986]
[-21.34124374 535.56951904]
[-13.93424129 523.14941406]
[-3.75965977 512.85992432]
[8.59259510 505.30401611]
[22.40481186 500.92605591]
[36.87317276 499.98559570]
[39.61714172 485.23870850]
[42.36110687 470.49182129]
[37.08258438 456.56390381]
[47.21380615 444.41198730]
[49.95777512 429.66510010]
[52.70174026 414.91821289]
[55.44570923 400.17135620]
[48.71851349 383.95925903]
[60.81355667 370.06939697]
[63.34856796 355.28515625]
[65.88358307 340.50091553]
[68.41859436 325.71667480]
[66.44601440 321.37521362]
[67.17413330 315.74920654]
[71.24021912 310.55242920]
[74.19259644 295.84585571]
[77.14496613 281.13925171]
[80.09734344 266.43267822]
[83.04971313 251.72610474]
[86.00209045 237.01951599]
[88.95446014 222.31294250]
[85.77986145 216.62437439]
[86.23841095 209.29481506]
[91.04609680 202.67965698]
[91.25836182 187.68116760]
[91.47062683 172.68266296]
[91.68288422 157.68417358]
[91.89514923 142.68566895]
[92.10741425 127.68717194]
[79.93147278 122.24163055]
[71.09974670 111.55417633]
[67.80193329 97.54644012]
[71.17311859 83.01523590]
[80.96726990 71.07446289]
[71.71006012 59.27174759]
[62.45285416 47.46903229]
[53.19564438 35.66631699]
[45.44369507 30.85024834]
[43.89236450 23.63045311]
[34.80310059 11.69792175]
[25.71383667 -0.23460948]
[11.19657230 -6.52425098]
[9.63950825 -21.33724594]
[0.55024552 -33.26977539]
[-8.62321949 -45.13769913]
[-17.88042831 -56.94041443]
[-27.13763618 -68.74312592]
[-40.60167313 -68.80839539]
[-51.41347122 -76.50181580]
[-55.75817490 -88.83396149]
[-52.26177216 -101.23090363]
[-61.35103226 -113.16343689]
[-70.44029999 -125.09596252]
[-79.52956390 -137.02850342]
[-95.17115021 -140.59503174]
[-102.00500488 -155.10978699]
[-94.78877258 -169.43827820]
[-79.05812836 -172.58891296]
[-66.88027954 -162.14479065]
[-67.59703064 -146.11775208]
[-58.50776672 -134.18522644]
[-49.41850281 -122.25270081]
[-40.32923889 -110.32016754]
[-23.57869148 -108.77747345]
[-12.91981888 -95.33011627]
[-15.33492184 -78.00033569]
[-6.07771301 -66.19762421]
[3.17949557 -54.39490509]
[9.77542877 -51.07440186]
[12.48277664 -42.35903931]
[21.57204056 -30.42650986]
[35.43917847 -24.99036217]
[37.64636612 -9.32387257]
[46.73563004 2.60865831]
[55.82489395 14.54118919]
[64.99835968 26.40910912]
[74.25556946 38.21182632]
[83.51277924 50.01454163]
[92.76998138 61.81725693]
[107.76960754 61.92338943]
[117.19290924 50.25285339]
[126.61621094 38.58231735]
[136.03950500 26.91178131]
[145.46281433 15.24124432]
[154.88610840 3.57070827]
[164.30940247 -8.09982777]
[163.72073364 -20.97928238]
[171.80299377 -30.50461388]
[183.81069946 -31.92559624]
[193.39820862 -43.46161652]
[202.98571777 -54.99763489]
[199.31604004 -69.95890808]
[205.09217834 -84.04754639]
[217.90509033 -91.94014740]
[232.73112488 -90.78836060]
[242.31863403 -102.32437897]
[251.90614319 -113.86039734]
[261.49365234 -125.39641571]
[271.08114624 -136.93243408]
[269.81842041 -152.45800781]
[279.70584106 -164.02059937]
[294.51489258 -165.12873840]
[296.75155640 -181.37463379]
[312.03924561 -187.30915833]
[324.65130615 -176.82736206]
[321.61352539 -160.71202087]
[306.05090332 -155.54122925]
[307.67050171 -140.77937317]
[298.11175537 -128.94363403]
[282.61715698 -127.34493256]
[273.02966309 -115.80891418]
[263.44216919 -104.27289581]
[253.85466003 -92.73687744]
[244.26715088 -81.20085144]
[248.11164856 -66.83569336]
[242.69610596 -52.79518509]
[229.90184021 -44.53926849]
[214.52172852 -45.41012955]
[204.93423462 -33.87411118]
[195.34672546 -22.33809090]
[193.31311035 -4.90388680]
[175.97994995 1.32347202]
[166.55664062 12.99400806]
[157.13334656 24.66454506]
[147.71005249 36.33507919]
[138.28674316 48.00561905]
[128.86344910 59.67615509]
[119.44014740 71.34668732]
[130.54011536 87.06427765]
[131.23255920 105.46952057]
[122.18674469 120.56089783]
[107.10591125 127.89943695]
[106.89364624 142.89793396]
[106.68138885 157.89642334]
[106.46912384 172.89492798]
[106.25685883 187.89343262]
[106.04459381 202.89192200]
[113.96829987 190.15556335]
[125.86006927 181.01303101]
[140.20509338 176.62893677]
[155.17605591 177.56173706]
[168.86592102 183.69261169]
[179.53083801 194.24058533]
[185.81225586 207.86203003]
[186.91004944 222.82179260]
[182.68437195 237.21427917]
[173.67350769 249.20611572]
[161.02526855 257.26974487]
[146.35084534 260.37802124]
[131.51950073 258.13497925]
[118.42050171 250.82633972]
[108.72242737 239.38311768]
[103.66104126 225.26531982]
[100.70867157 239.97189331]
[97.75629425 254.67848206]
[94.80392456 269.38504028]
[91.85154724 284.09164429]
[88.89916992 298.79821777]
[85.94680023 313.50479126]
[83.20282745 328.25167847]
[80.66781616 343.03591919]
[78.13280487 357.82015991]
[75.59779358 372.60440063]
[82.39295959 383.56124878]
[79.98249054 395.81866455]
[70.19259644 402.91531372]
[67.44862366 417.66220093]
[64.70465851 432.40908813]
[61.96068954 447.15597534]
[67.04294586 462.13867188]
[57.10799408 473.23577881]
[54.36402512 487.98266602]
[51.62005997 502.72955322]
[65.76756287 509.43463135]
[77.69249725 519.56170654]
[86.58798981 532.41796875]
[91.85411835 547.12622070]
[93.13832092 562.68469238]
[90.35905457 578.03540039]
[83.71090698 592.13592529]
[73.65098572 604.03015137]
[60.86753464 612.91326904]
[46.23277664 618.18627930]
[30.74347687 619.49609375]
[28.20846367 634.28033447]
[25.67345238 649.06457520]
[23.13843918 663.84881592]
[20.60342598 678.63305664]
[18.06841469 693.41729736]
[15.53340244 708.20153809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 221]
[14 220]
[15 219]
[16 218]
[17 217]
[18 216]
[19 215]
[31 204]
[32 203]
[33 202]
[35 200]
[36 199]
[37 198]
[38 197]
[40 194]
[41 193]
[42 192]
[43 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[65 110]
[66 109]
[67 108]
[68 107]
[70 106]
[71 105]
[72 104]
[74 102]
[75 101]
[76 99]
[77 98]
[78 97]
[82 94]
[83 93]
[84 92]
[85 91]
[111 159]
[112 158]
[113 157]
[114 156]
[115 155]
[116 154]
[117 153]
[120 151]
[121 150]
[122 149]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
