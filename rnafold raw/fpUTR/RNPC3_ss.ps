%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCAGAAUCCUUAGCGCGAGGCGGAAAAAAUAUUUCUCCCAGCUUGUGUUGAUGCCGCGAUUUUGACUGAGACUUCUUCCCACGAUUUCUGUUUUUGCUUCUCCAAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[167.81753540 152.24932861]
[155.17880249 144.17080688]
[142.54006958 136.09228516]
[129.90133667 128.01377869]
[117.26260376 119.93524933]
[104.62387848 111.85673523]
[91.66748047 104.29817200]
[78.41480255 97.27204895]
[65.16211700 90.24591827]
[51.90943909 83.21979523]
[38.65675735 76.19366455]
[25.40407562 69.16754150]
[12.15139580 62.14141464]
[-1.19521046 55.29538727]
[-14.97440434 49.36800766]
[-29.05429268 44.19531250]
[-43.13417816 39.02261734]
[-57.21406555 33.84992218]
[-71.29395294 28.67722893]
[-85.37384033 23.50453568]
[-99.45372772 18.33184052]
[-113.53361511 13.15914631]
[-127.61350250 7.98645115]
[-141.69338989 2.81375670]
[-155.90054321 9.20081234]
[-170.10586548 3.75439072]
[-176.10739136 -9.82932281]
[-190.18728638 -15.00201702]
[-200.46481323 -3.80197644]
[-214.24818420 2.60794044]
[-229.43554688 3.25026798]
[-243.71092224 -1.97294438]
[-254.89743042 -12.26519394]
[-261.28921509 -26.05698776]
[-261.91156006 -41.24517822]
[-256.66958618 -55.51367569]
[-246.36262512 -66.68663788]
[-232.56242371 -73.06027222]
[-217.37342834 -73.66263580]
[-203.11184692 -68.40188599]
[-191.95245361 -58.08024216]
[-185.59696960 -44.27167892]
[-185.01458740 -29.08190346]
[-170.93470764 -23.90921021]
[-157.56665039 -30.37689400]
[-143.21395874 -25.33161926]
[-136.52069092 -11.26613045]
[-122.44081116 -6.09343624]
[-108.36092377 -0.92074162]
[-94.28103638 4.25195312]
[-80.20114899 9.42464733]
[-66.12126160 14.59734154]
[-52.04137421 19.77003670]
[-37.96148300 24.94273186]
[-23.88159752 30.11542511]
[-9.80171013 35.28812027]
[-7.11685610 34.11232376]
[-3.77510905 34.00297165]
[-0.20906788 35.22752380]
[3.05611539 37.88089371]
[5.46946526 41.85730362]
[12.95937157 42.01217270]
[19.17752266 48.88873291]
[32.43020248 55.91485977]
[45.68288422 62.94098663]
[58.93556595 69.96711731]
[72.18824768 76.99324036]
[85.44092560 84.01936340]
[98.69360352 91.04549408]
[102.64620209 90.38905334]
[106.86499786 91.54911041]
[110.49985504 94.59980774]
[112.70239258 99.21800232]
[125.34112549 107.29652405]
[137.97985840 115.37503815]
[150.61859131 123.45355988]
[163.25732422 131.53207397]
[175.89605713 139.61059570]
[191.14407349 136.42698669]
[203.84646606 144.79980469]
[206.78758240 159.35607910]
[219.42631531 167.43460083]
[232.06504822 175.51312256]
[244.70378113 183.59164429]
[259.09259033 178.08995056]
[273.79016113 182.06924438]
[283.21484375 193.80122375]
[283.91567993 208.65541077]
[296.55441284 216.73391724]
[307.62954712 210.61633301]
[320.18569946 209.84672546]
[331.79016113 214.51171875]
[340.22140503 223.65104675]
[343.89425659 235.45446777]
[342.15780640 247.62013245]
[354.34063721 256.37106323]
[370.70373535 257.45755005]
[377.70059204 272.28915405]
[368.13342285 285.60836792]
[351.84411621 283.71353149]
[345.58972168 268.55389404]
[333.40689087 259.80297852]
[317.03961182 266.14669800]
[299.96417236 261.45153809]
[288.94946289 247.38661194]
[288.47589111 229.37265015]
[275.83715820 221.29412842]
[262.06158447 226.89517212]
[247.45661926 223.26768494]
[237.67375183 211.59939575]
[236.62525940 196.23037720]
[223.98652649 188.15185547]
[211.34779358 180.07333374]
[198.70906067 171.99481201]
[184.26319885 175.43756104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[5 74]
[6 73]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[14 61]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[27 44]
[28 43]
[81 114]
[82 113]
[83 112]
[84 111]
[88 107]
[89 106]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
