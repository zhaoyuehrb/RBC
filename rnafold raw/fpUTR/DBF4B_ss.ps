%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGGCGGAUCUCGCAGCUACGGCGUUCUUUUAGGGGUGGAGCCGGCAGGAAAUUUAAACUGAAGCCGCGGCCGAAAACGCCAAGAGAUUGAUGCUGUAGCUGCCCUGAGAUAACCAGGACUGUGGAAUCGGGAAGAGCUCAUGGAGCUCGCGAAUGUAAUACGGAGGCCUCUGAGGAAGGAGUACGGAGGCCGAGAAGGAGCCGGCAUUUG\
) } def
/len { sequence length } bind def

/coor [
[70.71125793 316.65493774]
[69.61122131 301.69531250]
[60.66214752 293.55862427]
[59.62202072 281.10607910]
[67.59176636 270.96667480]
[66.71144867 255.99253845]
[65.83113861 241.01838684]
[51.73000717 232.61184692]
[45.35511780 217.30311584]
[49.40210342 201.05014038]
[62.46806335 190.30706787]
[61.36802673 175.34745789]
[60.26798630 160.38784790]
[59.16794968 145.42823792]
[49.20210648 134.21743774]
[34.47444153 131.37211609]
[19.74677467 128.52679443]
[5.01910830 125.68148041]
[-9.70855808 122.83615875]
[-24.43622398 119.99083710]
[-39.16389084 117.14551544]
[-53.89155579 114.30019379]
[-68.61922455 111.45487976]
[-83.34688568 108.60955811]
[-98.07455444 105.76423645]
[-112.80222321 102.91891479]
[-127.52988434 100.07359314]
[-142.25755310 97.22827148]
[-155.25511169 105.81320953]
[-170.15052795 102.71784973]
[-178.25485229 90.27375031]
[-192.98252869 87.42842865]
[-207.71018982 84.58310699]
[-219.05386353 95.00555420]
[-234.18264771 96.72985840]
[-247.27102661 89.30300140]
[-253.40306091 75.75544739]
[-268.13070679 72.91012573]
[-282.85839844 70.06480408]
[-297.58605957 67.21948242]
[-307.68484497 78.70693970]
[-322.08258057 83.56510162]
[-336.88058472 80.58414459]
[-348.12438965 70.66281128]
[-352.86056519 56.54069138]
[-367.58822632 53.69537354]
[-382.31588745 50.85005188]
[-397.04354858 48.00473022]
[-412.06085205 52.98382950]
[-423.08938599 42.97278976]
[-433.18817139 54.46024323]
[-447.58593750 59.31840897]
[-462.38391113 56.33745193]
[-473.62771606 46.41611481]
[-478.36389160 32.29399872]
[-493.09155273 29.44867706]
[-507.81921387 26.60335732]
[-522.54687500 23.75803566]
[-539.24536133 26.69010735]
[-546.68548584 11.45588589]
[-534.10620117 0.08931100]
[-519.70159912 9.03036976]
[-504.97390747 11.87569046]
[-490.24624634 14.72101116]
[-475.51858521 17.56633186]
[-465.86288452 6.22466183]
[-451.73266602 1.20547760]
[-436.88922119 3.95111489]
[-425.33718872 13.82266331]
[-420.24404907 28.24512482]
[-406.28018188 23.06251144]
[-394.19824219 33.27706528]
[-379.47058105 36.12238312]
[-364.74291992 38.96770477]
[-350.01522827 41.81302643]
[-340.35955811 30.47135544]
[-326.22930908 25.45217133]
[-311.38586426 28.19780922]
[-299.83386230 38.06935883]
[-294.74072266 52.49182129]
[-280.01306152 55.33713913]
[-265.28540039 58.18246078]
[-250.55773926 61.02778244]
[-239.82067871 50.73926163]
[-224.90776062 48.72212982]
[-211.50997925 55.95764542]
[-204.86486816 69.85544586]
[-190.13720703 72.70076752]
[-175.40953064 75.54608154]
[-163.25314331 67.01627350]
[-148.27665710 69.69203186]
[-139.41223145 82.50060272]
[-124.68456268 85.34592438]
[-109.95690155 88.19124603]
[-95.22923279 91.03656769]
[-80.50156403 93.88188934]
[-65.77390289 96.72721100]
[-51.04623413 99.57253265]
[-36.31856918 102.41785431]
[-21.59090233 105.26316833]
[-6.86323690 108.10848999]
[7.86442900 110.95381165]
[22.59209442 113.79913330]
[37.31976318 116.64445496]
[52.04742813 119.48977661]
[64.41139984 110.99670410]
[67.04021454 96.22885895]
[69.66902924 81.46101379]
[72.29784393 66.69316101]
[62.12763214 54.81457520]
[62.02389908 39.17733765]
[72.03562927 27.16487122]
[87.43558502 24.44909668]
[100.95237732 32.31232071]
[106.20378876 47.04177094]
[100.71027374 61.68264771]
[87.06568909 69.32197571]
[84.43687439 84.08982849]
[81.80805969 98.85767365]
[79.17924500 113.62551880]
[84.64046478 81.73500061]
[115.60427094 83.31251526]
[128.87823486 76.32667542]
[142.15219116 69.34083557]
[155.42614746 62.35499191]
[168.70010376 55.36915207]
[165.40231323 40.65318298]
[166.02571106 25.59672737]
[170.52182007 11.22588921]
[178.57839966 -1.48151684]
[189.64120483 -11.66248512]
[202.95204163 -18.62743187]
[217.60078430 -21.90690422]
[232.58755493 -21.28320885]
[246.89100647 -16.80486679]
[259.53793335 -8.78287792]
[269.66943359 2.23085022]
[282.94338989 -4.75499153]
[296.21734619 -11.74083328]
[309.49130249 -18.72667503]
[322.76525879 -25.71251678]
[336.03924561 -32.69835663]
[347.23983765 -45.42559433]
[362.57034302 -38.18595123]
[359.85751343 -21.45045280]
[343.02508545 -19.42439842]
[329.75109863 -12.43855667]
[316.47714233 -5.45271492]
[303.20318604 1.53312671]
[289.92922974 8.51896858]
[276.65527344 15.50481033]
[279.99700928 30.09187126]
[279.44848633 45.05836487]
[275.04116821 59.38386154]
[267.06967163 72.09006500]
[256.07232666 82.30765533]
[242.79470825 89.33573151]
[228.13908386 92.68989563]
[213.10314941 92.13565826]
[198.71205139 87.70480347]
[185.94857788 79.69361877]
[175.68595886 68.64311218]
[162.41198730 75.62895203]
[149.13803101 82.61479187]
[135.86407471 89.60063934]
[122.59011078 96.58647919]
[116.64904785 117.09779358]
[95.62931824 124.49603271]
[107.99329376 132.98910522]
[120.35726166 141.48217773]
[132.72123718 149.97523499]
[145.08520508 158.46830750]
[157.44917297 166.96138000]
[169.81315613 175.45445251]
[182.17712402 183.94750977]
[195.68348694 176.74775696]
[210.98875427 176.66101074]
[224.57586670 183.70719910]
[233.32261658 196.26716614]
[235.21907043 211.45472717]
[229.82942200 225.77989197]
[218.39218140 235.95083618]
[203.53555298 239.63035583]
[188.67346191 235.97293091]
[177.22111511 225.81898499]
[171.81018066 211.50184631]
[173.68405151 196.31149292]
[161.32008362 187.81842041]
[148.95611572 179.32534790]
[136.59213257 170.83227539]
[124.22816467 162.33921814]
[111.86419678 153.84614563]
[99.50022125 145.35307312]
[87.13625336 136.86000061]
[74.12756348 144.32820129]
[75.22760010 159.28781128]
[76.32763672 174.24742126]
[77.42767334 189.20703125]
[89.64990234 195.57666016]
[97.07039642 207.06230164]
[97.84106445 220.60633850]
[91.86738586 232.66557312]
[80.80528259 240.13807678]
[81.68559265 255.11222839]
[82.56591034 270.08636475]
[93.04699707 285.22793579]
[84.57083130 300.59527588]
[85.67086792 315.55490112]
[97.79788971 325.68954468]
[99.12348938 341.43814087]
[88.86120605 353.45733643]
[73.09947205 354.61636353]
[61.18944550 344.22756958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[5 205]
[6 204]
[7 203]
[11 198]
[12 197]
[13 196]
[14 195]
[15 105]
[16 104]
[17 103]
[18 102]
[19 101]
[20 100]
[21 99]
[22 98]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[31 89]
[32 88]
[33 87]
[37 83]
[38 82]
[39 81]
[40 80]
[45 75]
[46 74]
[47 73]
[48 72]
[50 70]
[55 65]
[56 64]
[57 63]
[58 62]
[106 120]
[107 119]
[108 118]
[109 117]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[168 194]
[169 193]
[170 192]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
