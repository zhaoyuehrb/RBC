%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGCGCGAGCCAUCUGGCGCUGUAAAGCGCUUAGAGGCUGGAAUAACGACCUGCCUUACGCUUUGCGGCUGUCGUCGGAGAGGCAUCUGGGUUCGGACUGGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[93.56723785 225.72189331]
[93.14275360 210.72790527]
[92.71826935 195.73391724]
[89.33376312 189.03913879]
[92.50000000 180.31092834]
[92.50000000 165.31092834]
[84.76270294 152.58366394]
[92.50000000 138.78347778]
[84.76270294 126.05621338]
[92.50000000 112.25604248]
[89.54762268 97.54946136]
[83.75838470 83.71166229]
[77.96913910 69.87386322]
[63.08420181 59.14943314]
[65.81661987 41.87808990]
[59.63810349 28.20966148]
[53.45958328 14.54123497]
[47.28106689 0.87280756]
[41.10254669 -12.79561996]
[34.92402649 -26.46404648]
[27.98211288 -39.76103210]
[20.29903984 -52.64398193]
[12.61596489 -65.52693176]
[4.93289137 -78.40988159]
[-2.75018287 -91.29283142]
[-10.43325710 -104.17578125]
[-18.11633110 -117.05872345]
[-25.79940414 -129.94168091]
[-33.48247910 -142.82463074]
[-41.16555405 -155.70758057]
[-48.84862518 -168.59051514]
[-58.47513962 -169.69886780]
[-66.34598541 -175.10925293]
[-70.70042419 -183.45338440]
[-70.63891602 -192.72612000]
[-66.30598450 -200.76686096]
[-72.86882782 -214.25497437]
[-79.43167114 -227.74307251]
[-85.99452209 -241.23118591]
[-92.55736542 -254.71929932]
[-105.55269623 -263.74325562]
[-104.16373444 -278.57296753]
[-110.72657776 -292.06106567]
[-126.02829742 -294.63729858]
[-136.86932373 -305.73919678]
[-139.08105469 -321.09783936]
[-131.81303406 -334.80752563]
[-117.85996246 -341.59658813]
[-102.58708954 -338.85452271]
[-91.86714172 -327.63568115]
[-89.82215118 -312.25393677]
[-97.23847198 -298.62390137]
[-90.67562103 -285.13580322]
[-78.14971161 -277.07659912]
[-79.06925964 -261.28213501]
[-72.50640869 -247.79402161]
[-65.94356537 -234.30592346]
[-59.38072205 -220.81781006]
[-52.81787491 -207.32969666]
[-34.72691345 -197.56785583]
[-35.96567917 -176.27359009]
[-28.28260422 -163.39064026]
[-20.59952927 -150.50770569]
[-12.91645527 -137.62475586]
[-5.23338175 -124.74179840]
[2.44969225 -111.85884857]
[10.13276672 -98.97589874]
[17.81583977 -86.09295654]
[25.49891472 -73.21000671]
[33.18198776 -60.32705688]
[40.86506271 -47.44410706]
[43.70603943 -46.67210007]
[46.38637161 -44.64429092]
[48.39295959 -41.42603302]
[49.25038147 -37.27944183]
[48.59245682 -32.64256668]
[54.77097321 -18.97413826]
[60.94949341 -5.30571127]
[67.12801361 8.36271667]
[73.30653381 22.03114319]
[79.48504639 35.69956970]
[90.76305389 40.32111740]
[95.98162079 51.77971649]
[91.80693817 64.08461761]
[97.59618378 77.92241669]
[103.38542175 91.76021576]
[119.43701172 81.64515686]
[142.11775208 85.45201111]
[154.66302490 93.67492676]
[167.20828247 101.89785004]
[179.75354004 110.12076569]
[196.14811707 110.50782776]
[203.77168274 125.02724457]
[194.78175354 138.74267578]
[178.42642212 137.54487610]
[171.53062439 122.66603088]
[158.98536682 114.44311523]
[146.44010925 106.22019196]
[133.89483643 97.99727631]
[120.69683838 105.12698364]
[107.50000000 112.25604248]
[115.23729706 126.05621338]
[107.50000000 138.78347778]
[115.23729706 152.58366394]
[107.50000000 165.31092834]
[107.50000000 180.31092834]
[107.71226501 195.30943298]
[108.13674927 210.30342102]
[108.56122589 225.29740906]
[111.29615784 244.48516846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[5 106]
[6 105]
[8 103]
[10 101]
[11 86]
[12 85]
[13 84]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 71]
[22 70]
[23 69]
[24 68]
[25 67]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[31 61]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[88 99]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
