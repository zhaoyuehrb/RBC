%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGAAAACCCUAGGACUUGAACCCAGGGAAAGCGUUAGGGGGUAAGGGGACUACACUUCCCGUGAAGCUCCGCGGCGGCUUCCCGUGAGGCCCCGCGGAGGCUUCCUGAGAGGUCCUGCGCGCUUUCCGCGCCAGCUUCAGUGUCAGCUCGCGAGCCCUGGCGUCGCGUAGGAGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[108.33702850 227.24241638]
[94.06623077 232.65602112]
[78.86055756 231.33308411]
[65.73909760 223.53627014]
[57.30713654 210.81365967]
[55.23884583 195.69132996]
[59.94487762 181.17182922]
[70.49085236 170.13801575]
[84.78285980 164.78065491]
[86.08299255 149.83709717]
[87.38312531 134.89355469]
[88.68325806 119.95000458]
[76.44178009 111.28131104]
[62.77770233 117.46945190]
[57.13057327 131.98660278]
[43.18510437 138.06759644]
[29.38002014 132.59446716]
[15.71594429 138.78259277]
[2.05186749 144.97073364]
[-3.59525919 159.48788452]
[-17.54072762 165.56889343]
[-31.34581375 160.09574890]
[-45.00988770 166.28388977]
[-58.67396545 172.47201538]
[-72.33804321 178.66015625]
[-75.57355499 193.72128296]
[-86.92446136 203.87068176]
[-101.89806366 205.37236023]
[-114.73110199 197.85896301]
[-128.39517212 204.04710388]
[-135.37191772 218.49371338]
[-151.04794312 221.90573120]
[-163.39794922 211.66574097]
[-162.94804382 195.62899780]
[-150.04339600 186.09751892]
[-134.58331299 190.38302612]
[-120.91923523 184.19488525]
[-118.10142517 169.59358215]
[-107.09590149 159.32994080]
[-91.98034668 157.49330139]
[-78.52617645 164.99607849]
[-64.86209869 158.80793762]
[-51.19802475 152.61981201]
[-37.53394699 146.43167114]
[-32.54148865 132.44557190]
[-18.77232361 125.97527313]
[-4.13626766 131.30665588]
[9.52780914 125.11852264]
[23.19188499 118.93038940]
[28.18434525 104.94429016]
[41.95351028 98.47399139]
[56.58956528 103.80537415]
[70.25363922 97.61724091]
[78.80142975 89.79949951]
[88.22277069 87.45287323]
[95.90735626 89.90617371]
[93.31687927 75.13154602]
[90.72640228 60.35692596]
[88.13592529 45.58230591]
[85.54544830 30.80768585]
[75.54113007 18.55108452]
[80.96419525 4.67882299]
[78.37371826 -10.09579754]
[68.36940765 -22.35239983]
[73.79247284 -36.22465897]
[71.20199585 -50.99928284]
[68.61151886 -65.77390289]
[66.02104187 -80.54852295]
[63.43056488 -95.32314301]
[60.71196365 -110.07472992]
[57.86544800 -124.80216217]
[55.01893616 -139.52960205]
[52.17242050 -154.25703430]
[49.32590485 -168.98446655]
[46.47938919 -183.71189880]
[43.63287354 -198.43934631]
[38.92004395 -206.29631042]
[40.86708832 -213.44696045]
[38.27661133 -228.22158813]
[35.68613434 -242.99620056]
[33.09565735 -257.77081299]
[30.50518036 -272.54544067]
[27.91470337 -287.32006836]
[16.97655678 -299.53845215]
[22.34531403 -315.03387451]
[38.49805832 -317.86599731]
[48.81823349 -305.12133789]
[42.68932343 -289.91055298]
[45.27980042 -275.13592529]
[47.87027740 -260.36129761]
[50.46075439 -245.58668518]
[53.05123520 -230.81205750]
[55.64171219 -216.03744507]
[58.36030960 -201.28585815]
[61.20682526 -186.55842590]
[64.05333710 -171.83097839]
[66.89985657 -157.10354614]
[69.74636841 -142.37611389]
[72.59288788 -127.64868164]
[75.43939972 -112.92124176]
[79.80757141 -106.93444061]
[78.20518494 -97.91362000]
[80.79566193 -83.13899994]
[83.38613892 -68.36437988]
[85.97661591 -53.58975983]
[88.56709290 -38.81513596]
[98.38611603 -27.61531639]
[93.14834595 -12.68627548]
[95.73882294 2.08834600]
[105.55784607 13.28816700]
[100.32006836 28.21720886]
[102.91054535 42.99182892]
[105.50102234 57.76644897]
[108.09149933 72.54106903]
[110.68197632 87.31568909]
[120.57624054 98.58971405]
[134.88958740 103.07615662]
[149.20292664 107.56259155]
[163.51628113 112.04903412]
[177.82962036 116.53547668]
[192.14297485 121.02191162]
[206.45631409 125.50835419]
[220.76965332 129.99479675]
[214.96366882 116.16401672]
[220.48889160 102.21869659]
[234.19203186 96.11757660]
[248.25257874 101.34262085]
[254.64602661 114.91184235]
[249.72357178 129.08116150]
[236.29370117 135.76405334]
[250.06312561 141.71409607]
[263.83255005 147.66413879]
[277.60195923 153.61419678]
[291.37139893 159.56423950]
[305.14080811 165.51429749]
[318.91021729 171.46434021]
[337.13305664 168.90472412]
[347.06484985 183.35891724]
[360.93548584 189.06907654]
[374.80609131 194.77925110]
[383.96035767 195.15628052]
[388.86651611 200.71078491]
[402.63592529 206.66082764]
[416.40533447 212.61088562]
[431.00253296 206.55302429]
[445.57574463 212.66838074]
[451.47891235 227.32879639]
[445.20983887 241.83653259]
[430.48782349 247.58438110]
[416.04718018 241.16226196]
[410.45529175 226.38029480]
[396.68588257 220.43025208]
[382.91644287 214.48019409]
[369.09591675 208.64987183]
[355.22531128 202.93969727]
[341.35467529 197.22952271]
[330.05465698 201.59358215]
[318.44207764 196.92848206]
[312.96017456 185.23376465]
[299.19076538 179.28370667]
[285.42132568 173.33366394]
[271.65191650 167.38360596]
[257.88250732 161.43356323]
[244.11308289 155.48352051]
[230.34365845 149.53346252]
[216.28321838 144.30813599]
[201.96987915 139.82170105]
[187.65652466 135.33525085]
[173.34318542 130.84881592]
[159.02983093 126.36238098]
[144.71649170 121.87593842]
[130.40315247 117.38949585]
[116.08979797 112.90306091]
[103.62680817 121.25013733]
[102.32667542 136.19367981]
[101.02654266 151.13723755]
[99.72640991 166.08078003]
[112.87847137 173.82585144]
[121.36046600 186.51516724]
[123.48829651 201.62922668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[12 174]
[13 53]
[14 52]
[17 49]
[18 48]
[19 47]
[22 44]
[23 43]
[24 42]
[25 41]
[29 37]
[30 36]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[62 109]
[63 108]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[116 173]
[117 172]
[118 171]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[130 165]
[131 164]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[138 156]
[139 155]
[140 154]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
