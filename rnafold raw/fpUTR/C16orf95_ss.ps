%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGCGGGACGGGCGGGCGCGCGGGCGUUGUUGGGCUCCUCUGAGCGGUUGAGGUUGGGGCUGGGGUUGAGCUCGGGUUGGGUUCCUCCUGGGGCAGGAGGGAAAGGCGGGAGCCAGGGCGUCAGGGCCUGCGGACGAUGUGUGUGUGAAAGGGCGCGUCAGCCAUAAGAAGCCAU\
) } def
/len { sequence length } bind def

/coor [
[165.90031433 684.03234863]
[164.91845703 668.94836426]
[168.42793274 654.24542236]
[176.11666870 641.23107910]
[187.30101013 631.06237793]
[200.98643494 624.64361572]
[198.88725281 609.79119873]
[189.40150452 602.25543213]
[187.54551697 589.87780762]
[194.85716248 579.22918701]
[193.01896667 564.34228516]
[191.18077087 549.45532227]
[189.34255981 534.56835938]
[180.10389709 522.88519287]
[186.09170532 508.24087524]
[184.25350952 493.35394287]
[168.43539429 485.55331421]
[160.37582397 469.68936157]
[163.45736694 452.00512695]
[176.63601685 439.58703613]
[174.27650452 424.77377319]
[171.91699219 409.96051025]
[169.55746460 395.14724731]
[167.19795227 380.33398438]
[164.83843994 365.52075195]
[155.19544983 354.16900635]
[160.66563416 339.32354736]
[158.30612183 324.51028442]
[155.94660950 309.69702148]
[153.58708191 294.88375854]
[151.22756958 280.07049561]
[148.86805725 265.25723267]
[146.50852966 250.44398499]
[144.14901733 235.63072205]
[134.50602722 224.27897644]
[139.97622681 209.43353271]
[130.45790100 180.86274719]
[123.84817505 167.39755249]
[117.23844910 153.93235779]
[110.62872314 140.46714783]
[104.01899719 127.00195312]
[97.40927887 113.53675842]
[85.78807068 104.05269623]
[71.27117920 100.27646637]
[55.96761703 104.29039764]
[45.59811020 93.59822083]
[31.08122063 89.82199097]
[16.56433105 86.04576111]
[3.92641711 95.25538635]
[-11.67100048 94.13530731]
[-22.86329842 83.21438599]
[-24.36581612 67.64915466]
[-15.46911144 54.78903580]
[-0.37393486 50.70618439]
[13.79223156 57.32839966]
[20.34055901 71.52887726]
[34.85744858 75.30509949]
[49.37434006 79.08132935]
[63.63955307 74.79730225]
[75.04740143 85.75957489]
[89.56429291 89.53580475]
[93.66930389 83.25894928]
[105.98433685 64.42839050]
[96.70568085 52.64252472]
[87.42703247 40.85666275]
[78.14837646 29.07079887]
[68.86972046 17.28493690]
[53.14855576 15.66612339]
[43.24164581 3.35236454]
[45.02658081 -12.35080528]
[57.44439316 -22.12697411]
[73.12781525 -20.17611504]
[82.77214813 -7.65563679]
[80.65558624 8.00628185]
[89.93423462 19.79214478]
[99.21289062 31.57800865]
[108.49154663 43.36387253]
[117.77020264 55.14973450]
[132.31967163 51.50104141]
[134.93879700 36.73147202]
[137.55792236 21.96190262]
[128.61448669 11.86741257]
[127.14860535 -1.34316492]
[133.47349548 -12.81156063]
[145.07836914 -18.44997406]
[147.95629883 -33.17130280]
[150.83421326 -47.89263153]
[153.71214294 -62.61396408]
[156.59007263 -77.33528900]
[159.46800232 -92.05661774]
[162.34591675 -106.77795410]
[165.22384644 -121.49928284]
[168.10177612 -136.22061157]
[165.20668030 -152.92553711]
[180.45735168 -160.33187866]
[191.79603577 -147.72749329]
[182.82310486 -133.34268188]
[179.94517517 -118.62135315]
[177.06724548 -103.90002441]
[174.18933105 -89.17869568]
[171.31140137 -74.45736694]
[168.43347168 -59.73603821]
[165.55554199 -45.01470566]
[162.67762756 -30.29337692]
[159.79969788 -15.57204819]
[169.77593994 -2.04901028]
[166.84111023 14.83999348]
[152.32748413 24.58102798]
[149.70835876 39.35059738]
[147.08923340 54.12016678]
[110.87447357 106.92703247]
[117.48419952 120.39223480]
[124.09392548 133.85743713]
[130.70364380 147.32263184]
[137.31336975 160.78782654]
[143.92309570 174.25302124]
[157.76866150 180.02366638]
[171.98490906 175.23844910]
[186.20115662 170.45321655]
[200.41740417 165.66799927]
[211.02819824 153.93251038]
[225.55877686 157.20535278]
[233.95050049 143.53207397]
[249.88984680 141.71090698]
[261.14953613 153.13890076]
[259.09207153 169.04948425]
[245.29579163 177.23741150]
[230.34399414 171.42160034]
[220.75004578 182.81480408]
[205.20262146 179.88424683]
[190.98637390 184.66946411]
[176.77012634 189.45468140]
[162.55387878 194.23991394]
[154.78948975 207.07400513]
[164.60124207 219.48529053]
[158.96228027 233.27120972]
[161.32179260 248.08445740]
[163.68132019 262.89773560]
[166.04083252 277.71099854]
[168.40034485 292.52423096]
[170.75987244 307.33749390]
[173.11938477 322.15075684]
[175.47889709 336.96401978]
[185.29066467 349.37530518]
[179.65170288 363.16122437]
[182.01121521 377.97448730]
[184.37072754 392.78775024]
[186.73025513 407.60101318]
[189.08976746 422.41427612]
[191.44927979 437.22750854]
[203.27223206 441.38885498]
[212.14437866 450.13967896]
[216.41815186 461.76855469]
[215.33692932 474.03805542]
[209.16809082 484.61535645]
[199.14045715 491.51574707]
[200.97865295 506.40267944]
[210.34880066 519.15063477]
[204.22950745 532.73016357]
[206.06770325 547.61712646]
[207.90589905 562.50408936]
[209.74411011 577.39099121]
[221.17559814 591.80999756]
[213.73963928 607.69201660]
[215.83882141 622.54443359]
[230.76707458 624.91900635]
[244.33143616 631.58984375]
[255.32579041 641.96362305]
[262.77249146 655.11798096]
[266.00942993 669.88330078]
[264.74874878 684.94653320]
[259.10256958 698.96838379]
[249.57292175 710.70196533]
[237.00718689 719.10400391]
[222.52270508 723.42730713]
[207.40742493 723.28753662]
[193.00537109 718.69702148]
[180.59718323 710.06408691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[10 162]
[11 161]
[12 160]
[13 159]
[15 157]
[16 156]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[34 136]
[36 134]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 61]
[44 60]
[46 58]
[47 57]
[48 56]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[79 110]
[80 109]
[81 108]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[117 133]
[118 132]
[119 131]
[120 130]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
