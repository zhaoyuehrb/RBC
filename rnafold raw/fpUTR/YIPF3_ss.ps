%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCGUCCACGUCCCCAGCUUCCGGAAGUUGCUUUUGUCCAAACAUCCGGGCUUCUCCUUUUUGUGUUCCGGCCGAUCCCACCUCUCCUCGACCCUGGACGUCUACCUUCCGGAGGCCCACAUCUUGCCCACUCCGCGCGCGGGGCUAGCGCGGGUUUCAGCGACGGGAGCCCUCAAGGGAC\
) } def
/len { sequence length } bind def

/coor [
[120.93560028 238.51858521]
[125.10522461 228.74098206]
[133.02574158 221.53132629]
[129.97390747 206.84507751]
[126.92206573 192.15881348]
[123.87022400 177.47254944]
[120.81838226 162.78628540]
[117.76654816 148.10002136]
[106.27213287 150.50952148]
[94.61823273 150.23110962]
[83.42042542 147.31921387]
[73.26113892 141.96633911]
[64.65937805 134.49082947]
[58.04418564 125.31819916]
[53.73337173 114.95699310]
[51.91835785 103.97072601]
[52.65599823 92.94718933]
[55.86763382 82.46707153]
[61.34533691 73.07332611]
[50.55919647 62.64935303]
[39.77305222 52.22538376]
[28.98690987 41.80141449]
[18.20076752 31.37744713]
[7.41462469 20.95347786]
[-3.37151790 10.52950954]
[-14.15766048 0.10554115]
[-24.94380379 -10.31842804]
[-35.72994614 -20.74239731]
[-46.51609039 -31.16636467]
[-58.57673645 -25.70552444]
[-71.74407959 -24.67815018]
[-84.44412994 -28.18522263]
[-95.16617584 -35.78698349]
[-102.64251709 -46.55796814]
[-105.99828339 -59.19960785]
[-104.85380554 -72.19680023]
[-99.36743164 -83.99947357]
[-109.79139709 -94.78561401]
[-120.21536255 -105.57175446]
[-130.63932800 -116.35790253]
[-141.06330872 -127.14404297]
[-151.48727417 -137.93019104]
[-165.92369080 -132.48883057]
[-181.28573608 -133.19024658]
[-195.07659912 -139.88101196]
[-205.07044983 -151.43753052]
[-209.67158508 -165.95440674]
[-208.16915894 -181.05865479]
[-221.36767578 -188.18600464]
[-234.56619263 -195.31335449]
[-247.76470947 -202.44071960]
[-260.96322632 -209.56806946]
[-274.90853882 -203.02328491]
[-289.85891724 -205.91113281]
[-300.12072754 -216.91836548]
[-301.91186523 -231.68081665]
[-315.84332275 -224.84751892]
[-331.12481689 -227.54112244]
[-341.88031006 -238.72590637]
[-343.97409058 -254.10107422]
[-336.60104370 -267.75457764]
[-322.59625244 -274.43634033]
[-307.34487915 -271.57711792]
[-296.71136475 -260.27630615]
[-294.78451538 -244.87933350]
[-281.45806885 -251.47810364]
[-266.62591553 -248.93429565]
[-256.01156616 -238.01690674]
[-253.83587646 -222.76658630]
[-240.63735962 -215.63923645]
[-227.43884277 -208.51187134]
[-214.24032593 -201.38452148]
[-201.04180908 -194.25717163]
[-195.92124939 -199.31092834]
[-189.93139648 -203.29615784]
[-194.22434998 -217.66871643]
[-198.51731873 -232.04127502]
[-213.59704590 -234.40013123]
[-226.15509033 -243.07530212]
[-233.69799805 -256.34432983]
[-234.72814941 -271.57266235]
[-229.04100037 -285.73666382]
[-217.76573181 -296.02407837]
[-203.14105225 -300.39233398]
[-188.07072449 -297.97412109]
[-175.54695129 -289.24957275]
[-168.05635071 -275.95092773]
[-167.08616638 -260.71868896]
[-172.82905579 -246.57717896]
[-184.14474487 -236.33424377]
[-179.85179138 -221.96168518]
[-175.55883789 -207.58912659]
[-158.78366089 -205.41807556]
[-144.59638977 -196.08538818]
[-135.89285278 -181.42620850]
[-134.47999573 -164.36976624]
[-140.70112610 -148.35415649]
[-130.27716064 -137.56800842]
[-119.85319519 -126.78186798]
[-109.42922211 -115.99572754]
[-99.00525665 -105.20957947]
[-88.58128357 -94.42343903]
[-72.72266388 -100.19277954]
[-55.88127899 -98.45589447]
[-41.43998718 -89.51317596]
[-32.32070160 -75.11727905]
[-30.39323807 -58.12979889]
[-36.09212112 -41.95250702]
[-25.30597687 -31.52853966]
[-14.51983452 -21.10457039]
[-3.73369193 -10.68060112]
[7.05245066 -0.25663280]
[17.83859444 10.16733551]
[28.62473679 20.59130478]
[39.41087723 31.01527405]
[50.19702148 41.43924332]
[60.98316574 51.86321259]
[71.76931000 62.28717804]
[82.33905792 55.87789536]
[94.31307983 52.39626694]
[106.88903046 52.13422394]
[119.20892334 55.16596222]
[130.41764832 61.33904266]
[139.72236633 70.28108978]
[146.44844055 81.42185974]
[150.08821106 94.02944946]
[150.33897400 107.25830841]
[147.12730408 120.20592499]
[161.63806152 124.00569153]
[171.56445312 112.46324158]
[185.46133423 106.39995575]
[200.55093384 106.96934509]
[213.84233093 114.00495911]
[222.72430420 126.06398010]
[225.47828674 140.72279358]
[239.98904419 144.52256775]
[249.10807800 143.66932678]
[254.71400452 148.51304626]
[269.15777588 152.55999756]
[283.60153198 156.60694885]
[298.04528809 160.65390015]
[312.48904419 164.70085144]
[325.29690552 155.72909546]
[340.87066650 157.14056396]
[351.85684204 168.26881409]
[353.06811523 183.85942078]
[343.93255615 196.55096436]
[328.76370239 200.35090637]
[314.72381592 193.46502686]
[308.44210815 179.14462280]
[293.99832153 175.09767151]
[279.55456543 171.05072021]
[265.11080933 167.00376892]
[250.66705322 162.95681763]
[236.18927002 159.03330994]
[221.67852783 155.23355103]
[212.09355164 166.66130066]
[198.44123840 172.81953430]
[183.40742493 172.43794250]
[169.97535706 165.53869629]
[160.83366394 153.44256592]
[157.83828735 138.51643372]
[143.32754517 134.71667480]
[132.45280457 145.04818726]
[135.50465393 159.73445129]
[138.55648804 174.42071533]
[141.60832214 189.10696411]
[144.66017151 203.79322815]
[147.71200562 218.47949219]
[165.06684875 228.55909729]
[169.38517761 247.84690857]
[158.33068848 263.86343384]
[162.13044739 278.37417603]
[165.93022156 292.88491821]
[177.83848572 304.15991211]
[173.76553345 320.04522705]
[157.90127563 324.19943237]
[146.56549072 312.34902954]
[151.41946411 296.68469238]
[147.61970520 282.17395020]
[143.81994629 267.66320801]
[133.85206604 265.04501343]
[125.81563568 258.46450806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[19 118]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[28 109]
[29 108]
[37 102]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[56 65]
[75 92]
[76 91]
[77 90]
[128 163]
[129 162]
[135 156]
[136 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
