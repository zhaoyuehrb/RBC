%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCGCAGCCACCCCUCCUGCGUCUCCACAAAUGGUCCGACCCGCAAGCAAGGGGGCGGGUCCGGCUUUGAAAAGCCGGCGGGUCGGGCCUUGAGGUGGAAGGCGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[-26.18799210 531.68170166]
[-30.90410805 546.04309082]
[-39.64515305 558.37536621]
[-51.63388062 567.58203125]
[-65.80426025 572.84429932]
[-80.89627075 573.69433594]
[-95.56794739 570.05657959]
[-108.51467896 562.25445557]
[-118.58527374 550.98168945]
[-124.88423920 537.24072266]
[-126.85148621 522.25335693]
[-124.31208801 507.35223389]
[-117.49184418 493.86239624]
[-106.99721527 482.98333740]
[-93.76136017 475.68240356]
[-78.96121216 472.60879517]
[-63.91278839 474.03582764]
[-58.17253876 460.17764282]
[-52.43228531 446.31942749]
[-46.69203568 432.46124268]
[-40.95178223 418.60305786]
[-35.21153259 404.74484253]
[-37.48934937 390.02545166]
[-25.05991936 380.23669434]
[-25.41274452 372.74545288]
[-18.95943260 366.07394409]
[-12.83276939 352.38220215]
[-6.70610571 338.69046021]
[-0.57944191 324.99871826]
[5.54722214 311.30694580]
[-4.22229862 298.51919556]
[-6.26256990 282.46234131]
[0.07101993 267.46557617]
[13.15256405 257.61978149]
[29.50185585 255.66166687]
[35.24210739 241.80346680]
[40.98236084 227.94528198]
[46.72261047 214.08708191]
[52.46286392 200.22889709]
[58.20311356 186.37069702]
[63.94336700 172.51251221]
[69.68361664 158.65431213]
[75.42386627 144.79612732]
[81.16412354 130.93792725]
[86.90437317 117.07973480]
[92.64462280 103.22154236]
[80.10927582 101.78057098]
[68.96099091 92.59287262]
[62.79583359 76.78896332]
[60.69897842 61.93624878]
[47.92206573 52.63431168]
[45.54745102 37.00943756]
[54.98395157 24.33158112]
[70.63305664 22.12229538]
[83.21043396 31.69230652]
[85.25415039 47.36389923]
[75.55169678 59.83939362]
[77.64855194 74.69210815]
[84.65541840 77.36676788]
[85.41246796 62.38588715]
[99.89408112 58.47656250]
[108.08712006 71.04135895]
[98.66915131 82.71609497]
[105.67601776 85.39075470]
[117.13658142 75.71317291]
[128.59713745 66.03559875]
[140.05770874 56.35801697]
[151.51826477 46.68043518]
[162.97882080 37.00285721]
[168.02755737 21.40021706]
[184.11859131 18.23628807]
[194.69886780 30.76585007]
[188.88429260 46.09956360]
[172.65640259 48.46341705]
[161.19584656 58.14099884]
[149.73527527 67.81858063]
[138.27471924 77.49615479]
[126.81416321 87.17373657]
[115.35359955 96.85131836]
[106.50281525 108.96179199]
[100.76256561 122.81998444]
[95.02231598 136.67817688]
[89.28205872 150.53637695]
[83.54180908 164.39456177]
[77.80155945 178.25276184]
[72.06130981 192.11094666]
[66.32105255 205.96914673]
[60.58080292 219.82733154]
[54.84055328 233.68553162]
[49.10029984 247.54371643]
[43.36005020 261.40191650]
[52.48067474 272.11001587]
[56.05030823 285.64672852]
[53.42102814 299.32940674]
[45.16753387 310.47213745]
[32.96274567 316.91308594]
[19.23897171 317.43362427]
[13.11230755 331.12536621]
[6.98564339 344.81710815]
[0.85897934 358.50888062]
[-5.26768446 372.20062256]
[-11.20172596 385.97695923]
[-9.33448982 401.68759155]
[-21.35333824 410.48510742]
[-27.09358978 424.34329224]
[-32.83384323 438.20150757]
[-38.57409286 452.05969238]
[-44.31434631 465.91787720]
[-50.05459595 479.77606201]
[-38.40469742 489.40786743]
[-30.11278152 502.04650879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 104]
[24 102]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[49 58]
[50 57]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
