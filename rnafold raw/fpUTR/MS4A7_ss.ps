%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCACAUCCUGUGUAAUCAUAAAUACUGCUCUAAGAAAGGGACAGGAAGUCUCAGAGGCUGGAGAGCAGAGCACCAAGAUCGUUCUGGCAGGAACAGCCAGUGGGAGGUUCCAGCUGAGCGCUCCCCAGAGGUGAGCUGAUCCCCAGCCACAGCACACAGGACCAGGCUGCGAGAACAGCAUCAUCAGCAUC\
) } def
/len { sequence length } bind def

/coor [
[143.99201965 317.31784058]
[138.98265076 309.20971680]
[136.03732300 300.13070679]
[135.33085632 290.59799194]
[136.91027832 281.15628052]
[140.69186401 272.34664917]
[146.46545410 264.67559814]
[153.90618896 258.58584595]
[148.44761658 244.61430359]
[142.98904419 230.64276123]
[137.53047180 216.67121887]
[132.07189941 202.69967651]
[126.61331940 188.72813416]
[121.15474701 174.75659180]
[115.69617462 160.78504944]
[108.95381927 162.13711548]
[102.10402679 162.74365234]
[95.22899628 162.59736633]
[88.41120911 161.70002747]
[81.73246765 160.06237793]
[75.27290344 157.70410156]
[69.11002350 154.65347290]
[63.31776810 150.94709778]
[57.96563721 146.62944031]
[53.11784363 141.75231934]
[48.83255386 136.37423706]
[45.16118622 130.55972290]
[31.27986717 136.24383545]
[17.39854813 141.92793274]
[3.56370759 147.72424316]
[-10.22374725 153.63237000]
[-24.01120377 159.54051208]
[-37.79866028 165.44865417]
[-45.06862640 179.74993896]
[-60.81098557 182.84150696]
[-72.94953918 172.35174561]
[-72.17263794 156.32751465]
[-59.07624054 147.06123352]
[-43.70679474 151.66119385]
[-29.91934013 145.75305176]
[-16.13188362 139.84492493]
[-2.34442878 133.93678284]
[2.57243347 128.40458679]
[11.71444798 128.04661560]
[25.59576607 122.36251068]
[39.47708511 116.67841339]
[37.57794952 106.68434906]
[37.31789780 96.51476288]
[38.70375443 86.43669891]
[41.69913483 76.71477509]
[46.22537994 67.60427856]
[52.16363907 59.34443283]
[59.35799026 52.15211868]
[67.61952209 46.21619797]
[76.73130035 41.69253540]
[86.45407104 38.69991302]
[96.53253174 37.31691360]
[106.70203400 37.57984924]
[110.07366943 22.96368980]
[113.44531250 8.34753227]
[116.81694794 -6.26862574]
[120.18858337 -20.88478279]
[123.56021881 -35.50094223]
[119.12285614 -50.68713379]
[129.52294922 -61.34956360]
[132.89457703 -75.96572113]
[128.45721436 -91.15190887]
[138.85729980 -101.81433868]
[142.22894287 -116.43049622]
[145.60057068 -131.04666138]
[137.48725891 -144.34371948]
[141.11479187 -159.11856079]
[153.84152222 -166.77140808]
[157.21315002 -181.38757324]
[160.58479309 -196.00372314]
[163.95642090 -210.61988831]
[151.66651917 -227.66571045]
[155.86334229 -247.95744324]
[173.40338135 -258.42898560]
[175.82183838 -273.23272705]
[170.41078186 -288.09985352]
[180.09889221 -299.41311646]
[182.51734924 -314.21685791]
[184.93580627 -329.02059937]
[187.35427856 -343.82437134]
[189.77273560 -358.62811279]
[188.06665039 -367.61663818]
[192.35209656 -373.65118408]
[195.00994873 -388.41384888]
[197.66781616 -403.17648315]
[192.49821472 -418.12927246]
[202.36824036 -429.28417969]
[205.02610779 -444.04681396]
[207.68397522 -458.80947876]
[210.34184265 -473.57211304]
[212.99971008 -488.33477783]
[204.25022888 -501.22213745]
[207.15599060 -516.15570068]
[219.49604797 -524.41754150]
[222.15391541 -539.18023682]
[216.09446716 -554.41882324]
[226.47268677 -567.11627197]
[242.61235046 -564.21044922]
[247.91033936 -548.69067383]
[236.91656494 -536.52233887]
[234.25869751 -521.75970459]
[242.94235229 -509.71273804]
[240.45719910 -494.70346069]
[227.76234436 -485.67691040]
[225.10449219 -470.91424561]
[222.44662476 -456.15161133]
[219.78875732 -441.38897705]
[217.13088989 -426.62631226]
[222.49060059 -412.72946167]
[212.43046570 -400.51861572]
[209.77259827 -385.75598145]
[207.11473083 -370.99334717]
[204.57649231 -356.20965576]
[202.15802002 -341.40591431]
[199.73956299 -326.60214233]
[197.32110596 -311.79840088]
[194.90263367 -296.99465942]
[200.48667908 -283.18640137]
[190.62559509 -270.81427002]
[188.20712280 -256.01052856]
[195.76580811 -250.44546509]
[200.80264282 -242.45637512]
[202.58682251 -233.12310791]
[200.83061218 -223.72557068]
[195.73475647 -215.56825256]
[187.96652222 -209.79913330]
[178.57258606 -207.24824524]
[175.20094299 -192.63209534]
[171.82931519 -178.01593018]
[168.45767212 -163.39978027]
[176.54606628 -150.94531250]
[173.33496094 -136.07441711]
[160.21673584 -127.67501831]
[156.84509277 -113.05886078]
[153.47346497 -98.44270325]
[158.15199280 -84.30196381]
[147.51074219 -72.59408569]
[144.13909912 -57.97792816]
[148.81762695 -43.83718109]
[138.17637634 -32.12930679]
[134.80473328 -17.51314735]
[131.43310547 -2.89698982]
[128.06146240 11.71916771]
[124.68983459 26.33532524]
[121.31819153 40.95148468]
[141.87869263 53.23070145]
[156.34510803 72.31568146]
[162.61230469 95.42922211]
[159.76829529 119.20789337]
[148.22694397 140.19146729]
[129.66770935 155.32647705]
[135.12628174 169.29801941]
[140.58486938 183.26956177]
[146.04344177 197.24110413]
[151.50201416 211.21264648]
[156.96058655 225.18418884]
[162.41915894 239.15573120]
[167.87773132 253.12727356]
[188.83752441 254.94477844]
[205.94276428 267.06597900]
[214.54335022 286.10412598]
[212.34748840 306.80480957]
[200.03196716 323.49606323]
[207.03588867 336.76049805]
[214.03981018 350.02493286]
[221.04371643 363.28936768]
[236.85243225 372.71929932]
[235.52244568 390.21173096]
[242.74023438 403.36099243]
[258.15008545 405.18212891]
[269.52359009 415.73779297]
[272.48745728 430.96917725]
[265.90197754 445.01950073]
[252.29942322 452.48608398]
[236.91024780 450.49792480]
[225.65190125 439.81948853]
[222.85345459 424.55682373]
[229.59095764 410.57879639]
[222.37316895 397.42950439]
[210.84294128 393.74212646]
[204.72503662 382.83419800]
[207.77928162 370.29327393]
[200.77537537 357.02883911]
[193.77145386 343.76440430]
[186.76754761 330.49996948]
[177.46200562 332.20520020]
[168.00366211 331.65142822]
[158.93385315 328.86358643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[27 46]
[28 45]
[29 44]
[30 42]
[31 41]
[32 40]
[33 39]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[65 143]
[66 142]
[68 140]
[69 139]
[70 138]
[73 135]
[74 134]
[75 133]
[76 132]
[79 125]
[80 124]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[88 117]
[89 116]
[90 115]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[99 106]
[100 105]
[168 190]
[169 189]
[170 188]
[171 187]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
