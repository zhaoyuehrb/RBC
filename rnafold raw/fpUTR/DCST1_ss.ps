%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGUCUUGGAAUCCUUGACCCAGUUCCGAGGACUGGAGAGGGGAUAGAACCUUGUGUCCAAGGAGGUCCUUCAGGAGACCUGGGAUGAGUGGUGCUUCCCCAAAACAGACUC\
) } def
/len { sequence length } bind def

/coor [
[97.65784454 147.04220581]
[89.71326447 146.25093079]
[81.96994781 144.11972046]
[74.65356445 140.69416809]
[67.98007965 136.05778503]
[58.19946671 147.43054199]
[48.41885376 158.80329895]
[49.41967773 174.34794617]
[39.33873367 185.74220276]
[24.51312065 186.60054016]
[14.73250675 197.97329712]
[8.98898220 213.92472839]
[-7.92902994 212.82147217]
[-11.55224895 196.25920105]
[3.35974979 188.19268799]
[13.14036274 176.81993103]
[11.76984882 162.03286743]
[21.52677155 150.35993958]
[37.04609680 149.02268982]
[46.82670975 137.64993286]
[56.60732269 126.27716827]
[50.81978226 112.43865967]
[35.85475159 111.41502380]
[20.88972092 110.39138794]
[5.92468882 109.36775208]
[-9.04034233 108.34411621]
[-24.00537491 107.32048035]
[-38.97040558 106.29683685]
[-55.18523026 111.24818420]
[-64.43178558 97.03771210]
[-53.33636093 84.21866608]
[-37.94676971 91.33181000]
[-22.98173714 92.35544586]
[-8.01670647 93.37908173]
[6.94832516 94.40271759]
[21.91335678 95.42635345]
[36.87838745 96.44998932]
[51.84341812 97.47362518]
[61.01314926 73.69642639]
[80.63552856 58.45331573]
[104.67745972 55.60031128]
[126.16120148 65.30492401]
[137.12373352 55.06662750]
[148.08627319 44.82833099]
[159.04881287 34.59003448]
[170.01135254 24.35173607]
[174.22308350 16.08960152]
[181.41596985 13.98856163]
[192.65408325 4.05352402]
[197.86857605 -10.88366508]
[212.52862549 -13.51655293]
[223.76673889 -23.45158958]
[235.00483704 -33.38662720]
[233.66510010 -48.73300552]
[241.52677917 -61.77322388]
[255.39550781 -67.61466217]
[269.87127686 -64.21027374]
[281.10937500 -74.14530945]
[292.34750366 -84.08034515]
[303.58560181 -94.01538849]
[314.82369995 -103.95042419]
[320.03820801 -118.88761139]
[334.69824219 -121.52050018]
[345.93637085 -131.45553589]
[357.17446899 -141.39057922]
[356.46023560 -154.92189026]
[363.60302734 -166.20590210]
[375.77725220 -171.20143127]
[388.40652466 -168.27496338]
[399.91180420 -177.89932251]
[411.41708374 -187.52368164]
[416.53805542 -203.10276794]
[432.64358521 -206.19207764]
[443.16567993 -193.61363220]
[437.28012085 -178.30702209]
[421.04144287 -176.01840210]
[409.53616333 -166.39402771]
[398.03088379 -156.76966858]
[397.29992676 -140.02934265]
[384.47918701 -128.72570801]
[367.10949707 -130.15246582]
[355.87139893 -120.21743011]
[344.63330078 -110.28239441]
[340.22262573 -96.05582428]
[324.75875854 -92.71231842]
[313.52062988 -82.77727509]
[302.28253174 -72.84223938]
[291.04443359 -62.90720367]
[279.80630493 -52.97216797]
[281.40997314 -38.18817520]
[273.91198730 -25.14040184]
[260.00616455 -18.93707275]
[244.93988037 -22.14852142]
[233.70176697 -12.21348476]
[222.46366882 -2.27844691]
[218.05299377 11.94812202]
[202.58911133 15.29162979]
[191.35101318 25.22666740]
[180.24964905 35.31427765]
[169.28710938 45.55257416]
[158.32456970 55.79087067]
[147.36203003 66.02916718]
[136.39949036 76.26746368]
[140.13189697 82.62040710]
[142.75697327 89.55580902]
[144.18470764 96.88089752]
[144.35862732 104.38917542]
[143.25781250 111.86622620]
[140.89797974 119.09584045]
[137.33146667 125.86627197]
[132.64620972 131.97644043]
[126.96356201 137.24186707]
[120.43521118 141.50027466]
[113.23916626 144.61650085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 21]
[6 20]
[7 19]
[10 16]
[11 15]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[48 98]
[49 97]
[51 95]
[52 94]
[53 93]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[63 83]
[64 82]
[65 81]
[69 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
