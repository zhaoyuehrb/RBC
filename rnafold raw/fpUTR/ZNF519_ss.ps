%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGCGCGCAGCCAGGGAGGAAGGGGCGGCUUCCGGAAUCUGGCGCGGCCUUUGUCUCACUUCAGCCAGAGCGCGGGGUUAGGGCUUCAUUGCCUUGUGUCCUCUGCUCCGGGAGACUUCGGUGAUUCUGCCACUCACUCCGUCGCUCUGUGACCUGCUGGCAUUGAAUGAUUUAUAGCUAAGACUCCAGGACACCCCUGAAGCCGAGAA\
) } def
/len { sequence length } bind def

/coor [
[-21.49468994 255.21398926]
[-30.00126266 262.66113281]
[-40.62359238 266.38006592]
[-51.81518936 265.86987305]
[-61.96175003 261.24249268]
[-73.38926697 270.95907593]
[-84.81678009 280.67565918]
[-96.24429321 290.39224243]
[-100.75357819 298.33337402]
[-107.91162109 300.16607666]
[-119.48053741 309.71386719]
[-131.04945374 319.26165771]
[-135.67483521 327.13574219]
[-142.85900879 328.86315918]
[-154.56683350 338.24008179]
[-166.27467346 347.61700439]
[-177.98249817 356.99392700]
[-189.69033813 366.37084961]
[-201.39816284 375.74777222]
[-202.76153564 394.64544678]
[-217.25788879 406.34298706]
[-235.38430786 403.77221680]
[-246.81182861 413.48880005]
[-258.23934937 423.20538330]
[-269.66683960 432.92193604]
[-281.09436035 442.63851929]
[-282.11907959 458.40957642]
[-294.05041504 468.77386475]
[-309.80972290 467.58248901]
[-320.04730225 455.54223633]
[-318.68936157 439.79638672]
[-306.54156494 429.68667603]
[-290.81094360 431.21102905]
[-279.38342285 421.49444580]
[-267.95593262 411.77786255]
[-256.52841187 402.06127930]
[-245.10089111 392.34469604]
[-246.66734314 381.04638672]
[-242.54353333 370.28311157]
[-233.64559937 362.76925659]
[-222.10867310 360.45916748]
[-210.77508545 364.03994751]
[-199.06726074 354.66302490]
[-187.35942078 345.28610229]
[-175.65159607 335.90917969]
[-163.94375610 326.53225708]
[-152.23593140 317.15533447]
[-140.59724426 307.69271851]
[-129.02832031 298.14495850]
[-117.45939636 288.59716797]
[-105.96086884 278.96472168]
[-94.53335571 269.24813843]
[-83.10584259 259.53155518]
[-71.67832947 249.81498718]
[-74.17832947 231.29127502]
[-64.93263245 214.87382507]
[-47.52112579 207.28839111]
[-28.91023064 211.76748657]
[-17.92158890 201.55720520]
[-6.93294525 191.34693909]
[4.05569792 181.13665771]
[8.30658531 164.10929871]
[26.29141808 160.15127563]
[37.12899399 149.78077698]
[47.96656799 139.41029358]
[58.80414200 129.03981018]
[69.64171600 118.66932678]
[80.47928619 108.29883575]
[78.69806671 91.14609528]
[90.73167419 76.86138153]
[110.79640961 75.48946381]
[112.77249908 60.62019730]
[114.74858093 45.75093079]
[116.72466278 30.88166428]
[118.70075226 16.01239777]
[120.67683411 1.14313138]
[122.54372406 -13.74023914]
[124.30132294 -28.63691139]
[126.05891418 -43.53358459]
[127.81650543 -58.43025970]
[129.57409668 -73.32692719]
[131.33169556 -88.22360229]
[125.26470184 -102.83531952]
[134.43998718 -114.56831360]
[136.19758606 -129.46498108]
[137.84579468 -144.37416077]
[139.38452148 -159.29502869]
[140.92323303 -174.21589661]
[129.54331970 -184.59875488]
[126.49484253 -199.51719666]
[132.74154663 -213.20817566]
[145.69715881 -220.50817871]
[147.23588562 -235.42904663]
[148.77461243 -250.34991455]
[150.31333923 -265.27078247]
[151.85205078 -280.19165039]
[153.39077759 -295.11251831]
[142.10832214 -308.48275757]
[143.95124817 -325.54016113]
[157.29335022 -335.78036499]
[158.61286926 -350.72222900]
[152.11953735 -365.14953613]
[160.94644165 -377.14682007]
[162.26596069 -392.08868408]
[163.58547974 -407.03051758]
[164.90499878 -421.97238159]
[153.72927856 -432.91024780]
[152.25038147 -448.47775269]
[161.16658020 -461.32437134]
[176.26792908 -465.38430786]
[190.42402649 -458.74063110]
[196.95080566 -444.53024292]
[192.76652527 -429.46286011]
[179.84684753 -420.65286255]
[178.52732849 -405.71099854]
[177.20780945 -390.76916504]
[175.88829041 -375.82730103]
[182.47599792 -362.46875000]
[173.55471802 -349.40270996]
[172.23519897 -334.46084595]
[181.80943298 -325.83941650]
[184.71392822 -313.08749390]
[179.67004395 -300.81011963]
[168.31164551 -293.57379150]
[166.77291870 -278.65292358]
[165.23420715 -263.73205566]
[163.69548035 -248.81118774]
[162.15675354 -233.89031982]
[160.61802673 -218.96945190]
[171.81118774 -209.17909241]
[175.13235474 -194.50141907]
[169.10346985 -180.51908875]
[155.84410095 -172.67716980]
[154.30538940 -157.75630188]
[152.76666260 -142.83543396]
[155.20681763 -135.86105347]
[151.09425354 -127.70738983]
[149.33666992 -112.81072235]
[155.52937317 -99.26451874]
[146.22836304 -86.46601105]
[144.47077942 -71.56933594]
[142.71318054 -56.67266464]
[140.95558167 -41.77598953]
[139.19799805 -26.87931824]
[137.44039917 -11.98264503]
[139.77790833 -4.97318983]
[135.54609680 3.11921620]
[133.57002258 17.98848343]
[131.59393311 32.85774994]
[129.61784363 47.72701645]
[127.64176178 62.59628296]
[125.66567993 77.46554565]
[132.84562683 90.63552856]
[146.41427612 97.03018951]
[159.98292542 103.42484283]
[175.76473999 102.30902100]
[183.97904968 114.73377228]
[197.54769897 121.12843323]
[211.11634827 127.52308655]
[224.68499756 133.91775513]
[238.43553162 139.91131592]
[252.35609436 145.49864197]
[266.31729126 150.98364258]
[280.31835938 156.36601257]
[294.31942749 161.74838257]
[308.62036133 155.57420349]
[322.74276733 161.23213196]
[328.54080200 174.90396118]
[342.54187012 180.28633118]
[356.54293823 185.66870117]
[370.54400635 191.05107117]
[387.49792480 191.09085083]
[392.15298462 207.39320374]
[377.77639771 216.37930298]
[365.16165161 205.05213928]
[351.16058350 199.66976929]
[337.15948486 194.28739929]
[323.15841675 188.90502930]
[309.69528198 195.17236328]
[295.41952515 189.91333008]
[288.93704224 175.74946594]
[274.93597412 170.36708069]
[260.93490601 164.98471069]
[253.56527710 165.51858521]
[246.76876831 159.41920471]
[232.84820557 153.83187866]
[230.22190857 154.80583191]
[227.05200195 154.79936218]
[223.70951843 153.60037231]
[220.63534546 151.13471985]
[218.29034424 147.48640442]
[204.72169495 141.09173584]
[191.15304565 134.69708252]
[177.58438110 128.30242920]
[162.77310181 129.87564087]
[153.58827209 116.99349976]
[140.01962280 110.59883881]
[126.45096588 104.20417786]
[117.76641846 117.48290253]
[103.98712921 122.72150421]
[90.84977722 119.13641357]
[80.01219940 129.50689697]
[69.17462921 139.87738037]
[58.33705521 150.24786377]
[47.49947739 160.61836243]
[36.66190338 170.98884583]
[35.59860992 183.84161377]
[26.36038971 192.25604248]
[14.26597309 192.12530518]
[3.27733016 202.33557129]
[-7.71131277 212.54585266]
[-18.69995689 222.75613403]
[-15.36537838 233.71997070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 54]
[6 53]
[7 52]
[8 51]
[10 50]
[11 49]
[12 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[58 212]
[59 211]
[60 210]
[61 209]
[63 206]
[64 205]
[65 204]
[66 203]
[67 202]
[68 201]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[84 138]
[85 137]
[86 135]
[87 134]
[88 133]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[100 120]
[101 119]
[103 117]
[104 116]
[105 115]
[106 114]
[153 198]
[154 197]
[155 196]
[157 194]
[158 193]
[159 192]
[160 191]
[161 186]
[162 185]
[163 183]
[164 182]
[165 181]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
