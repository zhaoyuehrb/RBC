%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGCCUAUGGGAAAGCACUGGGAAAGGAACUCCAGGCGGGUACCAGGCUCCCUGCGGAGCGGCAGGGGCCGGUCUAGUUGCUAAGAAGCUGAGUCUCCACCAAUCAUCUGCCCAGCACCCAGUGGGCGGGGCGCGGCUCGCCGCGUCUGUGGUAACCCGGGCGGCGGCGAAGGAGGAGGCAAGAGGCGAGAGAGAGAGAGAGAGAAA\
) } def
/len { sequence length } bind def

/coor [
[69.16560364 243.02708435]
[75.04756927 229.15267944]
[83.97113037 217.00909424]
[95.45504761 207.25120544]
[108.88001251 200.40525818]
[105.32380676 185.83290100]
[101.76760101 171.26055908]
[98.21139526 156.68820190]
[91.04460144 154.47753906]
[87.17910767 168.97091675]
[90.08345032 183.68705750]
[78.93824768 193.72619629]
[64.60457611 189.30514526]
[61.05068588 174.73222351]
[71.74041748 164.20870972]
[76.71100616 150.05621338]
[69.54421234 147.84555054]
[58.39703751 157.88250732]
[54.11317444 165.95101929]
[47.00722504 167.98471069]
[35.71115112 177.85379028]
[24.41508102 187.72286987]
[13.11900902 197.59194946]
[1.82293701 207.46102905]
[3.34794784 222.90298462]
[-4.52387714 236.27511597]
[-18.76566124 242.43557739]
[-33.90114594 239.01553345]
[-44.11043167 227.33006287]
[-45.46783829 211.87248230]
[-37.45141220 198.58651733]
[-23.14363861 192.58091736]
[-8.04614353 196.16496277]
[3.24992800 186.29588318]
[14.54600048 176.42678833]
[25.84207153 166.55770874]
[37.13814545 156.68862915]
[48.36008072 146.73533630]
[59.50725174 136.69837952]
[52.27348328 117.47701263]
[53.02412033 98.39130402]
[38.30689240 95.49246979]
[29.28145409 96.90447235]
[23.39192581 92.43861389]
[8.71971226 89.31993866]
[-5.95250225 86.20126343]
[-14.99805355 87.47809601]
[-20.82011604 82.92463684]
[-35.44403458 79.58682251]
[-50.06795502 76.24900818]
[-59.13159561 77.39037323]
[-64.88488770 72.75032806]
[-79.45723724 69.19412231]
[-94.02958679 65.63791656]
[-108.60194397 62.08171463]
[-123.17429352 58.52550888]
[-137.74664307 54.96930313]
[-151.12095642 63.38972092]
[-166.51341248 59.80537415]
[-174.79196167 46.34278870]
[-171.04507446 30.98907852]
[-157.49571228 22.85332870]
[-142.18247986 26.76233482]
[-134.19042969 40.39695358]
[-119.61808777 43.95315933]
[-105.04573822 47.50936508]
[-90.47338104 51.06557083]
[-75.90103149 54.62177658]
[-61.32868195 58.17798233]
[-46.73014069 61.62508774]
[-32.10622025 64.96289825]
[-17.48230362 68.30071259]
[-2.83382654 71.52905273]
[11.83838749 74.64772797]
[26.51060104 77.76640320]
[41.20573425 80.77524567]
[55.92295837 83.67407990]
[57.78254318 79.33583832]
[60.06784058 75.20597076]
[62.75580978 71.32611847]
[65.81933594 67.73541260]
[69.22753906 64.47005463]
[61.34228516 51.70985413]
[53.45702744 38.94964981]
[38.76747131 31.65931702]
[38.00649261 15.27783585]
[51.95692062 6.65707016]
[66.26775360 14.66532516]
[66.21723175 31.06439400]
[74.10248566 43.82459641]
[81.98773956 56.58479691]
[96.03594971 53.16403580]
[110.45924377 54.17505646]
[123.89285278 59.52219391]
[135.06562805 68.69947815]
[147.70645142 60.62421799]
[160.34725952 52.54896164]
[172.98808289 44.47370148]
[185.62889099 36.39844131]
[198.26969910 28.32318306]
[205.73402405 14.37346649]
[220.62493896 14.04211617]
[233.26574707 5.96685743]
[230.41267395 -2.78508091]
[230.72576904 -12.60286999]
[234.57312012 -22.31002235]
[241.87997437 -30.61532021]
[252.09829712 -36.27965546]
[264.23858643 -38.28847504]
[270.94830322 -51.70413589]
[277.65798950 -65.11979675]
[284.36770630 -78.53545380]
[291.07739258 -91.95111847]
[297.78707886 -105.36678314]
[304.49679565 -118.78244019]
[311.20648193 -132.19810486]
[303.93939209 -145.90827942]
[306.15219116 -161.26676941]
[316.99395752 -172.36791992]
[332.29586792 -174.94309998]
[346.17398071 -168.00210571]
[353.29190063 -154.21389771]
[350.91265869 -138.88031006]
[339.95108032 -127.89743805]
[324.62213135 -125.48840332]
[317.91244507 -112.07274628]
[311.20275879 -98.65708160]
[304.49304199 -85.24142456]
[297.78335571 -71.82575989]
[291.07366943 -58.41009903]
[284.36395264 -44.99443817]
[277.65426636 -31.57877731]
[281.73904419 -25.28874779]
[294.05917358 -33.84529877]
[303.81072998 -45.24299240]
[317.76525879 -39.74110031]
[317.11447144 -24.75522423]
[302.73648071 -20.48341942]
[289.90863037 -12.70868969]
[293.99343872 -6.41866016]
[308.97833252 -7.09163237]
[323.96322632 -7.76460505]
[338.94812012 -8.43757725]
[353.93301392 -9.11054993]
[368.91790771 -9.78352261]
[383.90280151 -10.45649433]
[398.88226318 -11.24153423]
[413.85540771 -12.13859653]
[428.82855225 -13.03565884]
[443.80169678 -13.93272114]
[458.77487183 -14.82978344]
[467.15475464 -18.46705055]
[473.97839355 -15.62656689]
[488.96328735 -16.29953957]
[504.51519775 -23.05041122]
[515.30743408 -9.97509670]
[505.73071289 4.01498842]
[489.63626099 -1.31464314]
[474.65136719 -0.64167064]
[459.67193604 0.14336868]
[444.69876099 1.04043102]
[429.72561646 1.93749332]
[414.75247192 2.83455563]
[399.77932739 3.73161793]
[393.28997803 7.26980543]
[384.57577515 4.52840137]
[369.59088135 5.20137358]
[354.60598755 5.87434626]
[339.62109375 6.54731846]
[324.63619995 7.22029114]
[309.65130615 7.89326382]
[294.66641235 8.56623650]
[267.77584839 29.23875046]
[241.34101868 18.60767174]
[228.70019531 26.68293190]
[222.14004517 40.05504990]
[206.34497070 40.96399689]
[193.70414734 49.03925705]
[181.06333923 57.11451721]
[168.42251587 65.18977356]
[155.78170776 73.26503754]
[143.14089966 81.34029388]
[148.89613342 101.34484100]
[145.46961975 122.71079254]
[132.82511902 141.27600098]
[112.78374481 153.13200378]
[116.33995056 167.70434570]
[119.89615631 182.27670288]
[123.45236206 196.84904480]
[138.52171326 196.74130249]
[153.20956421 200.11228943]
[166.72384644 206.78019714]
[178.33573914 216.38543701]
[187.41902161 228.41003418]
[193.48384094 242.20547485]
[196.20315552 257.02783203]
[195.43028259 272.07772827]
[191.20693970 286.54354858]
[183.76084900 299.64517212]
[173.49357605 310.67605591]
[160.95884705 319.04129028]
[146.83262634 324.28973389]
[131.87670898 326.13842773]
[116.89768219 324.48757935]
[102.70332336 319.42626953]
[90.05911255 311.22744751]
[79.64694977 300.33325195]
[72.02834320 287.33117676]
[67.61415863 272.92245483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 186]
[17 39]
[18 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[41 77]
[42 76]
[44 75]
[45 74]
[46 73]
[48 72]
[49 71]
[50 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[82 91]
[83 90]
[84 89]
[95 182]
[96 181]
[97 180]
[98 179]
[99 178]
[100 177]
[102 175]
[103 174]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
