%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUGGGCGGGGCGCUGACUCACCCGGGCCCGGGCUGGCCGGUUCUUAAGCGGCAGCGCGCUGCGGGCGCCGAGUGUCGGGCGCGGCAGGAGGACGAGGCAGGGCGGGCGGGCGCUCUAAGGGUUCUGCUCUGACUCCAGGUUGGGACAGCGUCUUCGCUGCUGCUGGAUAGUCGUGUUUUCGGGGAUCGAGGAUACUCACCAGAAACCGAAA\
) } def
/len { sequence length } bind def

/coor [
[81.91915894 108.14361572]
[79.34022522 96.03084564]
[66.13720703 103.14984894]
[52.93418503 110.26885223]
[39.73116302 117.38786316]
[26.52814293 124.50686646]
[22.08935928 136.61456299]
[10.94905472 142.27293396]
[-0.67559475 138.93571472]
[-13.98075676 145.86195374]
[-27.28591919 152.78817749]
[-40.59108353 159.71441650]
[-49.25929642 172.94969177]
[-64.12121582 171.96342468]
[-77.42637634 178.88964844]
[-90.73153687 185.81587219]
[-104.03669739 192.74211121]
[-117.34186554 199.66833496]
[-130.64701843 206.59455872]
[-136.81114197 213.33036804]
[-144.19644165 213.52317810]
[-157.60093689 220.25517273]
[-157.42945862 235.47792053]
[-163.85820007 249.20957947]
[-175.56350708 258.74926758]
[-190.18991089 262.24636841]
[-204.82385254 259.05932617]
[-216.57417297 249.87265015]
[-229.97866821 256.60464478]
[-243.38314819 263.33660889]
[-252.24295044 276.44442749]
[-267.08895874 275.24212646]
[-280.49343872 281.97409058]
[-293.89791870 288.70608521]
[-307.30239868 295.43807983]
[-313.69323730 310.15325928]
[-329.21957397 314.19219971]
[-341.97091675 304.45654297]
[-342.16552734 288.41467285]
[-329.65414429 278.37252808]
[-314.03439331 282.03359985]
[-300.62991333 275.30160522]
[-287.22543335 268.56961060]
[-273.82092285 261.83761597]
[-265.91992188 249.21133423]
[-250.11514282 249.93212891]
[-236.71064758 243.20013428]
[-223.30616760 236.46815491]
[-223.65820312 221.55703735]
[-217.47581482 207.91564941]
[-205.93643188 198.27180481]
[-191.29449463 194.57940674]
[-176.44104004 197.62274170]
[-164.33291626 206.85067749]
[-150.92843628 200.11869812]
[-137.57325745 193.28939819]
[-124.26808929 186.36317444]
[-110.96292877 179.43695068]
[-97.65776825 172.51071167]
[-84.35260773 165.58448792]
[-71.04743958 158.65826416]
[-63.33090210 145.91838074]
[-47.51731110 146.40924072]
[-34.21215057 139.48301697]
[-20.90698624 132.55679321]
[-7.60182381 125.63056183]
[1.01832736 110.34278107]
[19.40913582 111.30384064]
[32.61215591 104.18483734]
[45.81517792 97.06583405]
[59.01819992 89.94683075]
[72.22122192 82.82781982]
[82.82781982 72.22122192]
[89.94683075 59.01819992]
[97.06583405 45.81517792]
[96.80501556 29.99612236]
[109.65576935 22.46568489]
[116.77477264 9.26266384]
[123.89377594 -3.94035673]
[131.01278687 -17.14337730]
[130.75196838 -32.96243286]
[143.60272217 -40.49287033]
[150.72172546 -53.69589233]
[157.84072876 -66.89891052]
[164.86354065 -80.15335846]
[171.78976440 -93.45851898]
[178.71598816 -106.76367950]
[185.64222717 -120.06884003]
[192.56845093 -133.37400818]
[192.66192627 -139.97874451]
[195.62928772 -144.82002258]
[199.89453125 -146.96107483]
[207.20480347 -160.05915833]
[214.51509094 -173.15724182]
[221.82536316 -186.25532532]
[229.13563538 -199.35342407]
[236.44590759 -212.45150757]
[218.16448975 -253.58453369]
[222.67507935 -267.89028931]
[227.18565369 -282.19604492]
[223.95625305 -297.68417358]
[235.16261292 -307.49572754]
[239.67320251 -321.80148315]
[244.18379211 -336.10723877]
[248.69438171 -350.41299438]
[253.20495605 -364.71875000]
[257.71554565 -379.02450562]
[262.22613525 -393.33026123]
[266.73672485 -407.63601685]
[271.24731445 -421.94174194]
[270.11779785 -427.03027344]
[270.96591187 -431.58847046]
[273.25927734 -434.95242310]
[276.27926636 -436.76541138]
[281.40957642 -450.86080933]
[278.85882568 -466.47503662]
[290.48248291 -475.78845215]
[295.61279297 -489.88385010]
[295.34838867 -506.83572388]
[311.56460571 -511.78253174]
[320.80718994 -497.56948853]
[309.70819092 -484.75354004]
[304.57788086 -470.65814209]
[307.49557495 -456.05212402]
[295.50497437 -445.73049927]
[290.37466431 -431.63513184]
[285.55307007 -417.43118286]
[281.04248047 -403.12542725]
[276.53189087 -388.81967163]
[272.02130127 -374.51391602]
[267.51071167 -360.20816040]
[263.00012207 -345.90240479]
[258.48953247 -331.59664917]
[253.97895813 -317.29089355]
[249.46836853 -302.98513794]
[253.02040100 -288.52026367]
[241.49140930 -277.68545532]
[236.98081970 -263.37969971]
[232.47024536 -249.07395935]
[238.03651428 -244.04737854]
[252.30900574 -248.66217041]
[249.16908264 -233.99421692]
[254.73536682 -228.96763611]
[268.50860596 -234.90882874]
[282.28186035 -240.85002136]
[296.05508423 -246.79121399]
[308.20401001 -258.61663818]
[322.93041992 -250.21609497]
[318.93487549 -233.73968506]
[301.99627686 -233.01797485]
[288.22305298 -227.07678223]
[274.44979858 -221.13558960]
[260.67657471 -215.19439697]
[249.54399109 -205.14123535]
[242.23371887 -192.04313660]
[234.92344666 -178.94505310]
[227.61317444 -165.84696960]
[220.30288696 -152.74888611]
[212.99261475 -139.65080261]
[205.87361145 -126.44777679]
[198.94738770 -113.14261627]
[192.02114868 -99.83744812]
[185.09492493 -86.53228760]
[178.16870117 -73.22712708]
[177.86849976 -65.84540558]
[171.04374695 -59.77990723]
[163.92474365 -46.57688522]
[156.80574036 -33.37386703]
[157.57575989 -18.49917793]
[144.21580505 -10.02437210]
[137.09680176 3.17864895]
[129.97779846 16.38167000]
[122.85878754 29.58469009]
[123.62879944 44.45937729]
[110.26885223 52.93418503]
[103.14984894 66.13720703]
[96.03084564 79.34022522]
[107.85531616 81.46376038]
[116.08943176 89.47450256]
[118.31968689 100.20761871]
[114.35398102 109.86181641]
[121.85398102 122.85219574]
[129.35397339 135.84257507]
[136.85397339 148.83296204]
[144.35397339 161.82334900]
[151.85397339 174.81372070]
[159.82125854 187.52287292]
[168.24528503 199.93397522]
[179.02406311 201.35649109]
[187.07615662 208.33102417]
[189.90281677 218.37399292]
[186.80360413 228.10610962]
[194.86309814 240.75697327]
[202.92259216 253.40785217]
[217.71073914 260.49606323]
[218.69627380 276.86557007]
[204.86538696 285.67681885]
[190.44607544 277.86557007]
[190.27171326 261.46734619]
[182.21221924 248.81646729]
[174.15272522 236.16560364]
[156.39378357 228.51113892]
[155.83418274 208.35801697]
[147.41014099 195.94689941]
[142.09051514 209.97193909]
[127.85498810 214.69950867]
[115.20217133 206.64306641]
[113.46340942 191.74418640]
[123.92102814 180.99066162]
[138.86360168 182.31372070]
[131.36360168 169.32334900]
[123.86359406 156.33296204]
[116.36359406 143.34257507]
[108.86359406 130.35220337]
[101.36359406 117.36181641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[9 66]
[10 65]
[11 64]
[12 63]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[21 55]
[22 54]
[28 48]
[29 47]
[30 46]
[32 44]
[33 43]
[34 42]
[35 41]
[73 177]
[74 176]
[75 175]
[77 173]
[78 172]
[79 171]
[80 170]
[82 168]
[83 167]
[84 166]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[92 159]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
[98 139]
[99 138]
[100 137]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[114 126]
[115 125]
[117 123]
[118 122]
[143 153]
[144 152]
[145 151]
[146 150]
[181 215]
[182 214]
[183 213]
[184 212]
[185 211]
[186 210]
[187 204]
[188 203]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
