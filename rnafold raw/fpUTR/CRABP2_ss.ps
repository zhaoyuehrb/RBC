%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGGGAGGCGGGGCCACUUCAAUCCUGGGCAGGGGCGGUUCCGUACAGGGUAUAAAAGCUGUCCGCGCGGGAGCCCAGGCCAGCUUUGGGGUUGUCCCUGGACUUGUCUUGGUUCCAGAACCUGACGACCCGGCGACGGCGACGUCUCUUUUGACUAAAAGACAGUGUCCAGUGCUCCAGCCUAGGAGUCUACGGGGACCGCCUCCCGCGCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[138.87416077 710.23474121]
[137.60206604 695.28881836]
[128.81329346 683.26354980]
[135.35238647 668.85693359]
[134.08029175 653.91094971]
[132.80819702 638.96496582]
[131.53611755 624.01904297]
[130.26402283 609.07305908]
[128.99194336 594.12713623]
[127.71984863 579.18115234]
[126.44776154 564.23516846]
[125.17566681 549.28924561]
[123.90357971 534.34326172]
[122.63149261 519.39727783]
[111.11409760 510.02258301]
[109.61110687 494.88336182]
[119.52225494 482.86642456]
[118.25016785 467.92047119]
[103.80873108 464.08248901]
[91.52873230 455.51913452]
[82.90333557 443.24816895]
[78.98935699 428.73947144]
[80.27783203 413.73913574]
[86.63246918 400.05926514]
[97.30381012 389.35906982]
[111.01757050 382.94360352]
[109.74548340 367.99765015]
[108.47339630 353.05166626]
[107.20130157 338.10571289]
[105.92921448 323.15975952]
[104.65712738 308.21377563]
[103.38504028 293.26782227]
[102.11294556 278.32186890]
[93.32417297 266.29660034]
[99.86326599 251.88998413]
[98.59117889 236.94401550]
[97.31908417 221.99806213]
[96.04699707 207.05209351]
[94.77490997 192.10614014]
[93.50282288 177.16017151]
[84.71404266 165.13491821]
[91.25313568 150.72830200]
[79.19317627 141.80879211]
[64.52984619 144.96897888]
[49.86651993 148.12918091]
[39.99386215 160.77473450]
[23.95082474 160.79626465]
[14.04425144 148.17726135]
[17.87361908 132.59793091]
[32.50136185 126.00941467]
[46.70633316 133.46585083]
[61.36965942 130.30566406]
[76.03298950 127.14546967]
[77.19576263 119.73615265]
[62.37717056 117.41035461]
[64.70320892 102.59180450]
[79.52130890 104.91751862]
[80.68408966 97.50820923]
[67.69370270 90.00820923]
[54.70332336 82.50820923]
[41.71294403 75.00820923]
[28.72256279 67.50820923]
[15.73218155 60.00820541]
[2.74180079 52.50820541]
[-13.07814884 52.30881882]
[-20.23163986 39.24448395]
[-33.22201920 31.74448395]
[-50.03793716 36.57965851]
[-64.85421753 27.92396927]
[-68.74400330 11.55844784]
[-81.83921814 4.24302387]
[-98.22013855 5.01599026]
[-106.85110474 -8.92812538]
[-98.85332489 -23.24481201]
[-82.45422363 -23.20629120]
[-74.52378845 -8.85218811]
[-61.42858124 -1.53676343]
[-49.64870071 -6.74669600]
[-36.82704163 -4.18476915]
[-27.68562317 5.43386221]
[-25.72202110 18.75410271]
[-12.73163986 26.25410271]
[2.15915108 25.91703987]
[10.24180126 39.51782608]
[23.23218155 47.01782608]
[36.22256470 54.51782608]
[49.21294403 62.01782608]
[62.20332336 69.51782227]
[75.19370270 77.01782227]
[88.18408966 84.51782227]
[99.37377167 74.52828217]
[93.38928986 60.77379227]
[87.40480804 47.01930237]
[81.42032623 33.26481247]
[67.92089081 23.95367432]
[69.50438690 7.63115597]
[84.54184723 1.08846462]
[97.56402588 11.05615902]
[95.17481995 27.28033066]
[101.15930176 41.03482056]
[107.14377594 54.78931046]
[113.12825775 68.54380035]
[127.89418793 71.18335724]
[138.27326965 60.35401535]
[148.65235901 49.52467346]
[159.03144836 38.69533157]
[169.33363342 27.79282379]
[179.55844116 16.81769371]
[189.78323364 5.84256411]
[200.00804138 -5.13256550]
[210.23283386 -16.10769463]
[220.45764160 -27.08282471]
[230.68243408 -38.05795670]
[225.22532654 -52.26996994]
[226.47483826 -67.38041687]
[234.12976074 -80.39665222]
[246.62562561 -88.76412964]
[261.45413208 -90.86770630]
[275.66659546 -86.34319305]
[285.89138794 -97.31832123]
[296.11618042 -108.29344940]
[306.34097290 -119.26858521]
[316.56579590 -130.24371338]
[314.54284668 -143.55506897]
[320.46701050 -155.42890930]
[331.97647095 -161.63301086]
[344.76556396 -160.10086060]
[355.14465332 -170.93020630]
[365.52374268 -181.75953674]
[375.90283203 -192.58888245]
[379.86572266 -207.90574646]
[394.25820923 -211.74052429]
[404.56039429 -222.64303589]
[414.78518677 -233.61816406]
[425.01000977 -244.59330750]
[428.16217041 -260.68664551]
[443.76113892 -265.74676514]
[455.75997925 -254.56822205]
[451.81533813 -238.65055847]
[435.98513794 -234.36849976]
[425.76031494 -223.39337158]
[415.53552246 -212.41824341]
[413.27777100 -205.38726807]
[405.08752441 -201.36145020]
[401.86703491 -186.81918335]
[386.73217773 -182.20979309]
[376.35308838 -171.38046265]
[365.97399902 -160.55111694]
[355.59490967 -149.72177124]
[356.66781616 -132.93458557]
[345.03558350 -120.31976318]
[327.54092407 -120.01891327]
[317.31610107 -109.04378510]
[307.09130859 -98.06864929]
[296.86651611 -87.09352112]
[286.64172363 -76.11839294]
[292.15969849 -62.26136017]
[291.10971069 -47.32124710]
[283.64660645 -34.26510239]
[271.20413208 -25.70911598]
[256.21981812 -23.39445686]
[241.65756226 -27.83315659]
[231.43276978 -16.85802650]
[221.20796204 -5.88289595]
[210.98316956 5.09223366]
[200.75836182 16.06736374]
[190.53356934 27.04249382]
[180.30877686 38.01762390]
[178.05102539 45.04860306]
[169.86077881 49.07441711]
[159.48170471 59.90375519]
[149.10261536 70.73310089]
[138.72352600 81.56243896]
[106.19909668 149.45620728]
[115.07885742 162.55049133]
[108.44878387 175.88809204]
[109.72087097 190.83404541]
[110.99295807 205.78001404]
[112.26504517 220.72596741]
[113.53713989 235.67193604]
[114.80922699 250.61788940]
[123.68898773 263.71218872]
[117.05891418 277.04977417]
[118.33100128 291.99572754]
[119.60308838 306.94171143]
[120.87517548 321.88766479]
[122.14726257 336.83361816]
[123.41935730 351.77957153]
[124.69144440 366.72555542]
[125.96353149 381.67150879]
[140.56425476 385.67706299]
[152.89044189 394.41989136]
[161.46557617 406.82904053]
[165.27058411 421.39584351]
[163.86489868 436.35733032]
[157.43736267 449.90948486]
[146.78121948 460.42498779]
[133.19613647 466.64837646]
[134.46821594 481.59436035]
[146.26768494 491.76342773]
[147.34484863 506.93890381]
[137.57745361 518.12518311]
[138.84954834 533.07116699]
[140.12162781 548.01715088]
[141.39372253 562.96307373]
[142.66580200 577.90905762]
[143.93789673 592.85504150]
[145.20999146 607.80096436]
[146.48207092 622.74694824]
[147.75416565 637.69293213]
[149.02626038 652.63885498]
[150.29833984 667.58483887]
[159.17810059 680.67913818]
[152.54801941 694.01672363]
[153.82011414 708.96264648]
[166.71176147 717.81365967]
[170.84820557 732.89422607]
[164.27635193 747.08380127]
[150.09922791 753.68255615]
[135.01083374 749.57470703]
[126.13545227 736.69982910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 215]
[2 214]
[4 212]
[5 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[17 199]
[18 198]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 176]
[42 174]
[43 53]
[44 52]
[45 51]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[66 82]
[67 81]
[70 77]
[71 76]
[91 102]
[92 101]
[93 100]
[94 99]
[103 173]
[104 172]
[105 171]
[106 170]
[107 168]
[108 167]
[109 166]
[110 165]
[111 164]
[112 163]
[113 162]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[127 149]
[128 148]
[129 147]
[130 146]
[132 144]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
