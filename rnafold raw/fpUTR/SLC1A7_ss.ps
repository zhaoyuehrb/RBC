%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUUGUGGCUUCCCUCUAAGGCGGCCACACGGGCAUGGCCGUGGGGCUGGCGACUGGUGUUUAGCAACUCCGACCACCUGCCUGCUGAGGGGCUAGAGCCCUCAGCCCAGACCCUGUGCCCCCGGCCGGGCUCUCAUGCGUGGAAUGGUGCUGUGCCCCUUGCCAGCAGGCCAGGCUCACC\
) } def
/len { sequence length } bind def

/coor [
[167.06654358 450.58370972]
[157.50247192 439.02825928]
[157.03546143 424.03552246]
[165.86102295 411.90777588]
[167.83131409 397.03775024]
[160.37745667 397.86840820]
[151.51928711 409.97348022]
[142.66111755 422.07855225]
[133.80296326 434.18362427]
[124.94479370 446.28869629]
[116.08662415 458.39376831]
[107.22846222 470.49887085]
[105.32288361 486.20489502]
[91.56282806 491.90664673]
[82.70465851 504.01171875]
[85.37104797 519.58947754]
[76.17327881 532.44158936]
[60.56822586 534.94311523]
[47.81408310 525.60998535]
[45.47766113 509.97933960]
[54.94512177 497.32458496]
[70.59957886 495.15356445]
[79.45774841 483.04846191]
[80.72972870 468.20828247]
[95.12338257 461.64068604]
[103.98155212 449.53561401]
[112.83971405 437.43054199]
[121.69788361 425.32546997]
[130.55604553 413.22039795]
[139.41421509 401.11529541]
[148.27238464 389.01022339]
[139.01698303 357.97924805]
[156.88919067 336.46899414]
[152.84223938 322.02523804]
[148.79528809 307.58148193]
[144.74833679 293.13772583]
[133.86418152 282.96990967]
[137.59132385 267.59399414]
[133.54437256 253.15023804]
[129.49742126 238.70648193]
[125.45046234 224.26271057]
[121.40351105 209.81895447]
[117.35655975 195.37519836]
[112.51284027 189.76925659]
[113.36607361 180.65022278]
[109.56631470 166.13948059]
[105.76654816 151.62873840]
[101.96678925 137.11798096]
[98.16702271 122.60723877]
[80.62055206 111.78490448]
[79.08408356 91.22667694]
[67.94834137 81.17703247]
[56.81259918 71.12739563]
[45.67686081 61.07775116]
[30.11273003 61.70675278]
[18.96266747 51.35635376]
[18.45892715 36.51446152]
[7.32318735 26.46481895]
[-3.81255341 16.41517830]
[-14.94829369 6.36553717]
[-28.66080856 12.92567158]
[-43.84024429 13.73390102]
[-58.17184067 8.66697693]
[-69.47013855 -1.50243247]
[-76.01222992 -15.22356510]
[-76.80049133 -30.40404892]
[-71.71472168 -44.72896957]
[-61.53045654 -56.01388168]
[-47.80072784 -62.53791809]
[-32.61922073 -63.30620575]
[-18.30100250 -58.20159531]
[-7.02949858 -48.00249481]
[-0.52352965 -34.26419830]
[0.22478993 -19.08169365]
[-4.89865303 -4.77020311]
[6.23708773 5.27943754]
[17.37282753 15.32907867]
[28.50856781 25.37871933]
[43.32416534 24.36202431]
[54.76055145 34.39515686]
[55.72650146 49.94201279]
[66.86224365 59.99165344]
[77.99797821 70.04129028]
[89.13372040 80.09093475]
[86.30277252 73.42639923]
[83.78321075 66.62021637]
[86.33186340 51.83832550]
[88.88052368 37.05643082]
[91.42917633 22.27453995]
[93.97782898 7.49264669]
[96.52648926 -7.28924608]
[99.07514191 -22.07113838]
[101.62380219 -36.85303116]
[91.38928986 -48.67626572]
[91.20072937 -64.31271362]
[101.14713287 -76.37931824]
[116.53212738 -79.17860413]
[130.09138489 -71.38882446]
[135.42263794 -56.68808746]
[130.00862122 -42.01762009]
[116.40569305 -34.30437469]
[113.85703278 -19.52248383]
[111.30838013 -4.74059057]
[108.75972748 10.04130268]
[106.21106720 24.82319450]
[103.66241455 39.60508728]
[101.11375427 54.38698196]
[98.56510162 69.16887665]
[105.28218079 72.50516510]
[125.43341827 82.51404572]
[135.67170715 71.55150604]
[145.91001892 60.58896637]
[152.30218506 44.88621140]
[169.16079712 46.68161392]
[172.10247803 63.37840271]
[156.87254333 70.82726288]
[146.63424683 81.78980255]
[136.39595032 92.75234222]
[127.64472961 111.38153076]
[112.67777252 118.80747223]
[116.47753143 133.31822205]
[120.27729797 147.82896423]
[124.07705688 162.33972168]
[127.87682343 176.85046387]
[131.80032349 191.32824707]
[135.84727478 205.77200317]
[139.89422607 220.21575928]
[143.94117737 234.65951538]
[147.98812866 249.10328674]
[152.03507996 263.54702759]
[163.20869446 274.74795532]
[159.19209290 289.09078979]
[163.23904419 303.53454590]
[167.28599548 317.97830200]
[171.33294678 332.42205811]
[184.10260010 333.46026611]
[195.82087708 340.48577881]
[203.68849182 352.68362427]
[205.46549988 367.94863892]
[200.05094910 383.24014282]
[211.35664368 393.09817505]
[226.84300232 396.33599854]
[231.35072327 410.53210449]
[242.65641785 420.39016724]
[253.96211243 430.24822998]
[264.12841797 426.87774658]
[274.69473267 428.03536987]
[283.75122070 433.44409180]
[289.68905640 442.06478882]
[291.48629761 452.29501343]
[288.88308716 462.26681519]
[299.66925049 472.69076538]
[310.45538330 483.11474609]
[321.24151611 493.53869629]
[332.02767944 503.96267700]
[340.39456177 507.68829346]
[342.90707397 514.65789795]
[353.51367188 525.26446533]
[369.49215698 526.70233154]
[378.20980835 540.17016602]
[372.97915649 555.33660889]
[357.81274414 560.56719971]
[344.34494019 551.84954834]
[342.90707397 535.87109375]
[332.30047607 525.26446533]
[321.60369873 514.74884033]
[310.81756592 504.32485962]
[300.03140259 493.90087891]
[289.24526978 483.47692871]
[278.45913696 473.05294800]
[259.08023071 474.83883667]
[244.38427734 461.62158203]
[244.10406494 441.55392456]
[232.79837036 431.69586182]
[221.49267578 421.83779907]
[206.81498718 419.30511475]
[201.49859619 404.40386963]
[190.19290161 394.54583740]
[182.73904419 395.37646484]
[187.93450928 409.44796753]
[199.21388245 419.33615112]
[202.05824280 434.06399536]
[195.27207947 447.44113159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[14 23]
[15 22]
[33 135]
[34 134]
[35 133]
[36 132]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[51 84]
[52 83]
[53 82]
[54 81]
[57 78]
[58 77]
[59 76]
[60 75]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[110 118]
[111 117]
[112 116]
[140 178]
[141 177]
[143 175]
[144 174]
[145 173]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
