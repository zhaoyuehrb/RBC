%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGCGGGGGCGGAGGAGGAGCGAGCCGGGCCGGGGGGCAGCUGCACAGUCUCCGGGAUCCCCAGGCCUGGAGGGGGGUCUGUGCGCGGCCGGCUGGCUCUGCCCCGCGUCCGGUCCCGAGCGGGCCUCCCUCGGGCCAGCCCGAUGUGACCGAGCCCAGCGGAGCCUGAGCAAGGAGCGGGUCCGUCGCGGAGCCGGAGGGCGGGAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[207.91056824 165.10490417]
[201.80476379 154.29476929]
[198.46670532 142.32513428]
[198.09634399 129.89321899]
[183.53019714 126.31167603]
[168.96405029 122.73012543]
[154.34713745 119.36179352]
[139.68255615 116.20739746]
[125.01798248 113.05300140]
[110.35340881 109.89859772]
[96.98777008 114.00363922]
[86.49219513 104.76597595]
[71.82761383 101.61157990]
[57.16304016 98.45717621]
[42.49846649 95.30278015]
[33.45373917 96.55744171]
[27.64339256 91.99367523]
[13.02647305 88.62533569]
[-2.15871477 93.06613159]
[-12.82349491 82.66845703]
[-27.44041443 79.30011749]
[-42.05733490 75.93178558]
[-56.67425156 72.56345367]
[-71.29117584 69.19512177]
[-86.47635651 73.63591766]
[-97.14113617 63.23823547]
[-111.75805664 59.86990356]
[-126.37497711 56.50157166]
[-140.99189758 53.13323593]
[-155.60881042 49.76490402]
[-170.22573853 46.39657211]
[-179.28782654 47.51893616]
[-185.03086853 42.87075806]
[-199.59701538 39.28921127]
[-214.16316223 35.70766068]
[-229.41160583 39.92610168]
[-239.92332458 29.37370491]
[-251.33955383 35.37216568]
[-263.39654541 32.09131622]
[-269.77560425 21.81568527]
[-284.28784180 18.02168465]
[-298.80010986 14.22768307]
[-313.31234741 10.43368244]
[-327.85192871 6.74580908]
[-342.41809082 3.16425991]
[-357.66653442 7.38270140]
[-368.17825317 -3.16969681]
[-372.29617310 -1.81424677]
[-376.23550415 -1.83568573]
[-379.58578491 -3.00916934]
[-382.05154419 -4.99976444]
[-383.47830200 -7.40942812]
[-397.81033325 -11.83574200]
[-412.14239502 -16.26205635]
[-426.47445679 -20.68836975]
[-440.80648804 -25.11468506]
[-455.13854980 -29.54099846]
[-469.47061157 -33.96731186]
[-483.80267334 -38.39362717]
[-492.92251587 -37.93574524]
[-498.31094360 -42.99073792]
[-512.57678223 -47.62599182]
[-528.49633789 -43.68901443]
[-539.66906738 -55.69324493]
[-534.60150146 -71.28975677]
[-518.50659180 -74.43420410]
[-507.94152832 -61.89184189]
[-493.67568970 -57.25658417]
[-479.37634277 -52.72568130]
[-465.04428101 -48.29936600]
[-450.71224976 -43.87305069]
[-436.38018799 -39.44673920]
[-422.04812622 -35.02042389]
[-407.71609497 -30.59410858]
[-393.38403320 -26.16779518]
[-379.05197144 -21.74148178]
[-364.59671021 -17.73583984]
[-350.39010620 -22.21045685]
[-338.83654785 -11.40188217]
[-324.27038574 -7.82033300]
[-317.02670288 -9.27530861]
[-309.51834106 -4.07857275]
[-295.00610352 -0.28457201]
[-280.49383545 3.50942874]
[-265.98159790 7.30342960]
[-249.33175659 1.75408328]
[-236.34178162 14.80756187]
[-222.13519287 10.33294392]
[-210.58160400 21.14151764]
[-196.01547241 24.72306824]
[-181.44932556 28.30461693]
[-166.85740662 31.77965164]
[-152.24047852 35.14798355]
[-137.62356567 38.51631927]
[-123.00664520 41.88465118]
[-108.38972473 45.25298309]
[-93.77280426 48.62131882]
[-79.63311768 43.93959808]
[-67.92283630 54.57820129]
[-53.30591965 57.94653702]
[-38.68899918 61.31486893]
[-24.07208061 64.68320465]
[-9.45516205 68.05153656]
[4.68452597 63.36981583]
[16.39480591 74.00842285]
[31.01172447 77.37675476]
[45.65286255 80.63820648]
[60.31744003 83.79260254]
[74.98201752 86.94699860]
[89.64659119 90.10140228]
[103.01222992 85.99636078]
[113.50780487 95.23402405]
[128.17237854 98.38842010]
[142.83695984 101.54282379]
[157.50154114 104.69721985]
[163.89625549 103.03751373]
[169.35137939 104.61719513]
[172.54560852 108.16398621]
[187.11174011 111.74553680]
[201.67788696 115.32708740]
[211.24296570 100.25048828]
[225.36448669 89.36344147]
[242.33309937 83.96321869]
[260.10186768 84.68417358]
[276.53317261 91.42330933]
[289.65579224 103.35457611]
[297.90148926 119.03012085]
[300.29235840 136.55596924]
[315.04284668 139.28051758]
[330.01882935 134.17854309]
[341.12902832 144.09887695]
[355.87951660 146.82342529]
[370.63000488 149.54798889]
[385.38049316 152.27253723]
[400.13098145 154.99708557]
[415.10696411 149.89511108]
[426.21713257 159.81544495]
[440.96762085 162.54000854]
[455.71810913 165.26455688]
[464.30380249 158.59284973]
[474.92507935 157.76306152]
[484.05825806 162.80838013]
[488.80593872 171.85255432]
[503.47052002 175.00694275]
[518.15777588 178.05412292]
[532.86682129 180.99391174]
[547.57592773 183.93370056]
[562.28503418 186.87348938]
[576.99414062 189.81327820]
[586.01959229 188.42660522]
[591.89599609 192.90498352]
[606.56054688 196.05938721]
[621.22515869 199.21377563]
[635.88970947 202.36817932]
[647.12579346 196.03869629]
[659.27349854 198.96583557]
[665.95007324 209.05068970]
[680.56701660 212.41902161]
[695.20812988 215.68046570]
[709.87274170 218.83486938]
[727.26538086 212.78279114]
[739.80743408 225.05914307]
[754.51654053 227.99893188]
[765.16485596 216.83572388]
[780.16345215 213.22377014]
[794.72631836 218.31561279]
[804.20648193 230.48646545]
[805.57885742 245.85267639]
[798.40557861 259.51089478]
[784.97558594 267.10290527]
[769.57427979 266.20605469]
[757.11627197 257.10656738]
[751.57678223 242.70802307]
[736.86767578 239.76823425]
[726.63494873 246.21583557]
[714.35803223 243.88917542]
[706.71832275 233.49945068]
[692.05371094 230.34504700]
[684.85565186 232.01106262]
[677.19866943 227.03593445]
[662.58172607 223.66760254]
[646.10119629 229.70109558]
[632.73529053 217.03274536]
[618.07073975 213.87835693]
[603.40618896 210.72395325]
[588.74157715 207.56954956]
[574.05438232 204.52238464]
[559.34527588 201.58259583]
[544.63616943 198.64280701]
[529.92706299 195.70301819]
[515.21795654 192.76322937]
[508.04498291 194.53424072]
[500.31613159 189.67152405]
[485.65155029 186.51712036]
[467.72753906 193.77555847]
[452.99356079 180.01504517]
[438.24307251 177.29049683]
[423.49258423 174.56593323]
[409.57165527 179.86279297]
[397.40640259 169.74757385]
[382.65591431 167.02302551]
[367.90545654 164.29847717]
[353.15496826 161.57391357]
[338.40447998 158.84936523]
[324.48352051 164.14622498]
[312.31829834 154.03100586]
[297.56781006 151.30645752]
[292.23547363 162.40808105]
[284.38931274 171.91543579]
[274.48312378 179.27021790]
[263.09201050 184.03889465]
[250.87876892 185.93821716]
[238.55541992 184.85212708]
[226.84173584 180.83871460]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 120]
[5 119]
[6 118]
[7 115]
[8 114]
[9 113]
[10 112]
[12 110]
[13 109]
[14 108]
[15 107]
[17 106]
[18 105]
[20 103]
[21 102]
[22 101]
[23 100]
[24 99]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[33 91]
[34 90]
[35 89]
[37 87]
[40 85]
[41 84]
[42 83]
[43 82]
[44 80]
[45 79]
[47 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[61 68]
[62 67]
[128 207]
[129 206]
[131 204]
[132 203]
[133 202]
[134 201]
[135 200]
[137 198]
[138 197]
[139 196]
[143 194]
[144 193]
[145 191]
[146 190]
[147 189]
[148 188]
[149 187]
[151 186]
[152 185]
[153 184]
[154 183]
[157 181]
[158 180]
[159 178]
[160 177]
[162 174]
[163 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
