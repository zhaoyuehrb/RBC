%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACGCCCCCGCAGGGCUGGGCUGAAAGCCGCCCCAAUGGGAUUCGGUGCGGGGCAGCGACUGCGCCCCGUCCCGGCGCCGCGCUCGUCCGCAGAGGAGGCGGCCCGGCCCGGGCAGCUGCGGCUCGGGAUCCGUCGAGGGGAGGCCGAGCUUGCCAAGCUGGCGCCCAGCGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[102.70626068 308.54022217]
[88.79000092 315.03890991]
[73.49020386 313.69284058]
[60.92245102 304.86407471]
[54.46739960 290.92752075]
[55.86142731 275.63201904]
[64.72954559 263.09201050]
[78.68627167 256.68066406]
[80.00089264 241.73837280]
[81.31551361 226.79609680]
[82.63013458 211.85382080]
[83.94475555 196.91152954]
[85.25937653 181.96925354]
[78.66728973 168.61285400]
[87.58428192 155.54388428]
[88.89890289 140.60160828]
[90.21352386 125.65932465]
[91.52814484 110.71704102]
[86.12396240 96.72437286]
[75.10688782 86.54477692]
[64.08982086 76.36518097]
[53.07275009 66.18558502]
[42.05567932 56.00599289]
[31.03860664 45.82639694]
[20.02153587 35.64680481]
[9.15928936 36.70425034]
[-0.28976163 31.69729233]
[-5.30355930 22.50161552]
[-4.43098783 12.28503227]
[-15.08402538 1.72507083]
[-25.73706436 -8.83489037]
[-36.39010239 -19.39485168]
[-47.04314041 -29.95481300]
[-57.69617844 -40.51477432]
[-68.44147491 -50.98084641]
[-79.27819824 -61.35221863]
[-94.85407257 -61.17919159]
[-105.69630432 -71.85161591]
[-105.76527405 -86.70189667]
[-116.60199738 -97.07326508]
[-127.52931213 -107.34915161]
[-138.54638672 -117.52873993]
[-149.56346130 -127.70833588]
[-160.58052063 -137.88793945]
[-183.95347595 -135.99545288]
[-198.84497070 -159.16201782]
[-211.47023010 -167.26156616]
[-224.09550476 -175.36111450]
[-239.88879395 -176.30041504]
[-246.42324829 -189.68511963]
[-259.04852295 -197.78466797]
[-271.67376709 -205.88420105]
[-284.29904175 -213.98374939]
[-296.92431641 -222.08329773]
[-309.54959106 -230.18283081]
[-322.17486572 -238.28237915]
[-331.11605835 -240.29173279]
[-334.94888306 -246.63648987]
[-347.43005371 -254.95635986]
[-363.82116699 -255.47042847]
[-371.33200073 -270.04846191]
[-362.23608398 -283.69384766]
[-345.89050293 -282.36935425]
[-339.11019897 -267.43753052]
[-326.62902832 -259.11767578]
[-314.07531738 -250.90765381]
[-301.45004272 -242.80810547]
[-288.82476807 -234.70855713]
[-276.19949341 -226.60902405]
[-263.57424927 -218.50947571]
[-250.94897461 -210.40992737]
[-238.32369995 -202.31039429]
[-223.43344116 -201.95040894]
[-215.99595642 -187.98637390]
[-203.37069702 -179.88684082]
[-190.74542236 -171.78729248]
[-178.79853821 -180.85768127]
[-183.20788574 -195.19496155]
[-187.61723328 -209.53224182]
[-198.05244446 -222.89422607]
[-188.10140991 -236.62059021]
[-172.15675354 -230.85829163]
[-173.27995300 -213.94158936]
[-168.87060547 -199.60430908]
[-164.46125793 -185.26702881]
[-151.39828491 -175.52415466]
[-146.69769287 -161.55709839]
[-150.40093994 -148.90499878]
[-139.38386536 -138.72540283]
[-128.36679077 -128.54582214]
[-117.34971619 -118.36621857]
[-110.28256989 -116.12974548]
[-106.23062134 -107.90998840]
[-95.39389801 -97.53862000]
[-80.55488586 -98.12109375]
[-69.41716003 -87.75741577]
[-68.90682220 -72.18894196]
[-58.07009888 -61.81756973]
[-51.04328537 -59.45740891]
[-47.13621521 -51.16781235]
[-36.48317719 -40.60784912]
[-25.83014107 -30.04788971]
[-15.17710304 -19.48792839]
[-4.52406454 -8.92796707]
[6.12897348 1.63199389]
[25.12711525 5.13999891]
[30.20112991 24.62973404]
[41.21820068 34.80932617]
[52.23527145 44.98892212]
[63.25234222 55.16851807]
[74.26941681 65.34811401]
[85.28648376 75.52770233]
[96.30355835 85.70729828]
[121.16594696 88.21526337]
[136.15025330 83.13774109]
[147.24421692 93.07620239]
[161.99023438 95.82483673]
[176.73625183 98.57346344]
[191.48226929 101.32209778]
[206.22828674 104.07073212]
[221.02027893 106.56014252]
[235.85366821 108.78958130]
[250.68707275 111.01902008]
[265.53945923 113.11820221]
[280.40969849 115.08696747]
[295.27993774 117.05573273]
[310.15017700 119.02450562]
[325.02041626 120.99327087]
[339.89062500 122.96203613]
[352.35739136 113.62297058]
[367.40985107 115.83141327]
[376.23641968 127.77409363]
[391.10665894 129.74285889]
[405.97689819 131.71162415]
[417.39093018 121.02268219]
[433.00805664 120.22291565]
[445.45431519 129.68994141]
[448.85296631 144.95372009]
[441.59930420 158.80717468]
[427.11822510 164.70912170]
[412.24731445 159.87283325]
[404.00811768 146.58186340]
[389.13787842 144.61309814]
[374.26763916 142.64433289]
[362.63732910 151.87860107]
[347.52874756 150.09381104]
[337.92187500 137.83227539]
[323.05163574 135.86351013]
[308.18139648 133.89474487]
[293.31115723 131.92597961]
[278.44091797 129.95719910]
[263.57067871 127.98843384]
[256.50643921 130.23410034]
[248.45762634 125.85240936]
[233.62423706 123.62297821]
[218.79083252 121.39353943]
[214.46461487 123.47829437]
[208.77987671 122.84702301]
[203.47966003 118.81674957]
[188.73364258 116.06811523]
[173.98762512 113.31948090]
[159.24160767 110.57085419]
[144.49559021 107.82221985]
[130.56602478 113.09634399]
[118.41731262 102.96128082]
[106.47042847 112.03166199]
[105.15580750 126.97394562]
[103.84118652 141.91622925]
[102.52656555 156.85850525]
[109.02462769 171.28369141]
[100.20166016 183.28387451]
[98.88703918 198.22615051]
[97.57241821 213.16844177]
[96.25779724 228.11071777]
[94.94317627 243.05299377]
[93.62855530 257.99526978]
[106.25141144 266.74508667]
[112.79370117 280.64089966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[15 169]
[16 168]
[17 167]
[18 166]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[35 98]
[36 97]
[39 94]
[40 93]
[41 91]
[42 90]
[43 89]
[44 88]
[46 76]
[47 75]
[48 74]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[58 65]
[59 64]
[77 85]
[78 84]
[79 83]
[114 165]
[116 163]
[117 162]
[118 161]
[119 160]
[120 159]
[121 156]
[122 155]
[123 154]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[129 147]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
