%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACUUCCGGCCUCGCUGGCGUGGACGUUUGUGGUGGGGCGUGUUGGUCCGCGCUCUCAGAACUGUGCUGGGAAGGAUGGUAGGGCGACUGGGGCUCACCUCCGCACCGUUGUAGGACCCGGGGUAGGGUUUUGAGCCCGUGGGAGCUGCCCCACGCGGCCUCGUCCUGCCAACGGUCGG\
) } def
/len { sequence length } bind def

/coor [
[-30.40283394 986.82751465]
[-36.88062286 1000.92779541]
[-50.42565536 1008.49822998]
[-65.82959747 1006.62786865]
[-77.16931152 996.03588867]
[-80.08444977 980.79510498]
[-73.45407867 966.76593018]
[-59.82771683 959.34283447]
[-58.01966476 944.45220947]
[-56.21161652 929.56158447]
[-54.40356445 914.67095947]
[-52.59551620 899.78033447]
[-50.78746414 884.88970947]
[-59.62369156 877.62481689]
[-63.88883209 866.88116455]
[-62.41116714 855.29571533]
[-55.44414520 845.77282715]
[-44.63183212 840.75622559]
[-42.31089020 825.93688965]
[-39.98995209 811.11755371]
[-37.66901016 796.29821777]
[-35.34807205 781.47882080]
[-37.42479706 774.36560059]
[-32.85704803 766.42462158]
[-30.28066254 751.64752197]
[-27.70427704 736.87042236]
[-25.12789154 722.09338379]
[-22.55150604 707.31628418]
[-34.06729889 697.86895752]
[-39.34321976 683.83251953]
[-36.86861420 668.94152832]
[-27.20928001 657.21148682]
[-12.88205433 651.85632324]
[-10.30566788 637.07922363]
[-7.85691404 622.28045654]
[-5.53597403 607.46105957]
[-3.21503401 592.64172363]
[-0.89409387 577.82238770]
[1.42684615 563.00305176]
[3.74778605 548.18365479]
[6.06872606 533.36431885]
[8.38966656 518.54498291]
[6.31294203 511.43173218]
[10.88068867 503.49075317]
[13.45707512 488.71365356]
[16.03346062 473.93658447]
[14.05256271 469.56500244]
[14.81511497 463.90039062]
[18.96225739 458.69766235]
[22.04715538 444.01831055]
[25.13205338 429.33895874]
[28.21695137 414.65960693]
[31.30185127 399.98025513]
[34.38674927 385.30090332]
[26.05612946 373.00714111]
[28.97554207 358.07623291]
[41.92684555 349.42166138]
[45.01174545 334.74230957]
[48.09664154 320.06295776]
[51.18154144 305.38360596]
[54.26644135 290.70425415]
[57.35133743 276.02490234]
[60.43623734 261.34555054]
[63.52113724 246.66619873]
[66.60603333 231.98684692]
[61.65161896 217.94039917]
[72.06166840 206.02647400]
[75.14656067 191.34712219]
[78.23146057 176.66777039]
[81.31636047 161.98841858]
[84.14742279 147.25799561]
[86.72380829 132.48091125]
[89.30019379 117.70383453]
[76.00714874 109.02137756]
[70.85812378 90.73360443]
[80.07485199 70.58711243]
[79.55710602 55.59605026]
[79.03936768 40.60498810]
[75.60820007 32.11084747]
[78.64432526 25.35118294]
[78.38541412 10.35341835]
[78.12650299 -4.64434719]
[74.84246826 -13.19644547]
[77.99481201 -19.90269852]
[77.99481201 -34.90269852]
[77.99481201 -49.90269852]
[77.99481201 -64.90269470]
[65.90022278 -74.81507111]
[63.05760574 -90.19211578]
[70.80915070 -103.77326202]
[85.49481201 -109.14591217]
[100.18046570 -103.77326202]
[107.93200684 -90.19211578]
[105.08939362 -74.81507111]
[92.99481201 -64.90269470]
[92.99481201 -49.90269852]
[92.99481201 -34.90269852]
[92.99481201 -19.90269852]
[93.12426758 -4.90325689]
[93.38317871 10.09450817]
[93.64208984 25.09227371]
[94.03042603 40.08724594]
[94.54817200 55.07830811]
[95.06591034 70.06937408]
[102.10122681 72.66828156]
[113.63796997 63.08165359]
[116.17185211 77.86611176]
[123.20716858 80.46502686]
[133.34632874 69.41072845]
[132.41419983 53.63394928]
[142.97328186 41.87463379]
[158.75903320 41.10937119]
[170.40605164 51.79217911]
[171.00437927 67.58513641]
[160.19902039 79.11856842]
[144.40061951 79.54988098]
[134.26147461 90.60417938]
[123.92640686 114.74746704]
[104.07727814 120.28022003]
[101.50089264 135.05729675]
[98.92450714 149.83438110]
[100.84758759 156.20376587]
[99.45599365 161.74746704]
[95.99571228 165.07331848]
[92.91081238 179.75267029]
[89.82592010 194.43202209]
[86.74102020 209.11137390]
[91.47477722 224.20779419]
[81.28538513 235.07174683]
[78.20048523 249.75109863]
[75.11559296 264.43045044]
[72.03069305 279.10980225]
[68.94579315 293.78915405]
[65.86089325 308.46850586]
[62.77599716 323.14785767]
[59.69109726 337.82720947]
[56.60619736 352.50656128]
[64.97822571 365.64227295]
[61.64058685 380.48529053]
[49.06610107 388.38580322]
[45.98120499 403.06515503]
[42.89630508 417.74450684]
[39.81140518 432.42385864]
[36.72650909 447.10321045]
[33.64160919 461.78256226]
[30.81054497 476.51296997]
[28.23415947 491.29003906]
[25.65777397 506.06713867]
[23.20902061 520.86590576]
[20.88808060 535.68524170]
[18.56714058 550.50463867]
[16.24620056 565.32397461]
[13.92525959 580.14331055]
[11.60431957 594.96264648]
[9.28337955 609.78204346]
[6.96243954 624.60137939]
[8.72877121 633.59045410]
[4.47141695 639.65557861]
[1.89503098 654.43267822]
[13.56465816 664.32043457]
[18.68446541 678.62719727]
[15.97374725 693.47705078]
[6.25901461 704.89984131]
[-7.77442122 709.89263916]
[-10.35080719 724.66973877]
[-12.92719269 739.44683838]
[-15.50357819 754.22393799]
[-18.07996368 769.00097656]
[-20.52871895 783.79980469]
[-22.84965897 798.61914062]
[-25.17059898 813.43847656]
[-27.49153900 828.25781250]
[-29.81247902 843.07720947]
[-18.07369614 857.92138672]
[-20.83853722 876.32092285]
[-35.89683151 886.69775391]
[-37.70488358 901.58837891]
[-39.51293182 916.47900391]
[-41.32098389 931.36962891]
[-43.12903214 946.26025391]
[-44.93708420 961.15087891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[33 159]
[34 158]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[44 148]
[45 147]
[46 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[67 127]
[68 126]
[69 125]
[70 124]
[71 121]
[72 120]
[73 119]
[76 104]
[77 103]
[78 102]
[80 101]
[81 100]
[82 99]
[84 98]
[85 97]
[86 96]
[87 95]
[108 117]
[109 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
