%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUGCCGUGCGUGAGCGUGCGCGGGCGCGUCGGCCGGCGAGGGAGCAGCAAACGGCCGGCGGCGGGUGCCGCGCGGGGGGCGGGCGGCGCGGAGUAGGUGGCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[168.37094116 311.95901489]
[177.34063721 293.09655762]
[165.11134338 284.59399414]
[166.59588623 268.84259033]
[160.52023315 255.12812805]
[154.44459534 241.41365051]
[148.36895752 227.69918823]
[142.29331970 213.98472595]
[136.21768188 200.27026367]
[130.14202881 186.55578613]
[124.06639099 172.84132385]
[111.83711243 164.33874512]
[113.32164764 148.58734131]
[107.24600220 134.87287903]
[101.17036438 121.15840912]
[88.81195068 117.99654388]
[80.50790405 108.31301880]
[79.26747894 95.61698914]
[85.54019165 84.50928497]
[73.14485931 74.67739105]
[75.47381592 59.96599579]
[69.78175354 46.08793640]
[64.08969879 32.20988083]
[58.39764404 18.33182144]
[52.70558548 4.45376348]
[47.01353073 -9.42429447]
[41.32147217 -23.30235291]
[35.43705750 -37.09994888]
[29.36141586 -50.81441498]
[16.69755936 -60.29794312]
[18.61666679 -75.06839752]
[12.54102516 -88.78285980]
[6.46538448 -102.49732971]
[0.38974321 -116.21179199]
[-5.68589783 -129.92625427]
[-12.11260033 -136.61952209]
[-11.73390675 -144.10743713]
[-17.42596436 -157.98550415]
[-23.11802101 -171.86355591]
[-28.81007767 -185.74160767]
[-34.50213242 -199.61967468]
[-49.64725494 -198.98629761]
[-64.09469604 -203.57400513]
[-76.09986877 -212.82882690]
[-84.21308899 -225.63317871]
[-87.45463562 -240.44088745]
[-85.43308258 -255.46385193]
[-78.39254761 -268.88793945]
[-67.18319702 -279.09219360]
[-53.15863037 -284.84432983]
[-38.01236725 -285.44979858]
[-23.57340240 -280.83547974]
[-11.58530712 -271.55853271]
[-3.49570179 -258.73925781]
[-0.28144702 -243.92559814]
[-2.33067942 -228.90640259]
[-9.39594364 -215.49528503]
[-20.62407684 -205.31172180]
[-14.93201923 -191.43367004]
[-9.23996258 -177.55561829]
[-3.54790568 -163.67755127]
[2.14415097 -149.79949951]
[8.02856827 -136.00190735]
[14.10420990 -122.28743744]
[20.17984962 -108.57296753]
[26.25549126 -94.85850525]
[32.33113098 -81.14403534]
[44.56041718 -72.64145660]
[43.07588196 -56.89005661]
[49.15152359 -43.17558670]
[54.81765747 -38.26567841]
[55.19953156 -28.99440956]
[60.89158630 -15.11635113]
[66.58364105 -1.23829329]
[72.27570343 12.63976479]
[77.96775818 26.51782227]
[83.65981293 40.39588165]
[89.35187531 54.27393723]
[101.34007263 63.11318207]
[99.41825104 78.81723022]
[114.74091339 84.77654266]
[121.19051361 99.89936829]
[114.88482666 115.08277130]
[120.96047211 128.79724121]
[127.03610992 142.51170349]
[139.69996643 151.99522400]
[137.78085327 166.76568604]
[143.85650635 180.48014832]
[149.93214417 194.19461060]
[156.00778198 207.90908813]
[162.08341980 221.62355042]
[168.15907288 235.33801270]
[174.23471069 249.05249023]
[180.31034851 262.76693726]
[192.97419739 272.25048828]
[191.05509949 287.02093506]
[201.04635620 287.77389526]
[209.98820496 292.16317749]
[216.61679077 299.51992798]
[220.01333618 308.75936890]
[219.73132324 318.54074097]
[215.85476685 327.46179199]
[208.97981262 334.25973511]
[213.49592590 348.56375122]
[218.01202393 362.86776733]
[230.46583557 373.53710938]
[227.18727112 389.60516357]
[211.54902649 394.54254150]
[199.63839722 383.27005005]
[203.70802307 367.38388062]
[199.19190979 353.07986450]
[194.67579651 338.77584839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 96]
[4 94]
[5 93]
[6 92]
[7 91]
[8 90]
[9 89]
[10 88]
[11 87]
[13 85]
[14 84]
[15 83]
[19 80]
[21 78]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 70]
[29 69]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[103 112]
[104 111]
[105 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
