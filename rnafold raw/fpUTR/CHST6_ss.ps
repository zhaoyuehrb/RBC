%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGACGUUUGGGAGCCUUUGCUGAGUCCAGGGAGAGAGGCGUCCCCCACCGUGCCGCUGCAGCUCGGGCAGAGCCGCCAAGCUUUGGGGUGCUGAGGAACCUCUAAUCAUCUCCCAUGGAUUUGUGAUCAGCGUUGCAGCUCUCCCAGCAGCCCUGGACAGUGGCCCCCAGCAGUCAGC\
) } def
/len { sequence length } bind def

/coor [
[70.76385498 515.15106201]
[63.01231384 501.56988525]
[65.85493469 486.19284058]
[77.94951630 476.28048706]
[77.94951630 461.28048706]
[77.94951630 446.28048706]
[67.26864624 435.96279907]
[67.05496216 420.75067139]
[77.94951630 409.61752319]
[77.94951630 394.61752319]
[77.94951630 379.61752319]
[77.94951630 364.61752319]
[77.94951630 349.61752319]
[70.21221924 336.89025879]
[77.94951630 323.09008789]
[77.94951630 308.09008789]
[77.94951630 293.09008789]
[75.70322418 290.33935547]
[74.69210052 286.35485840]
[75.48545837 281.73574829]
[78.36033630 277.31445312]
[79.14103699 262.33480835]
[79.92174530 247.35513306]
[77.42881012 243.25279236]
[77.50506592 237.53630066]
[80.99844360 231.87184143]
[82.29856873 216.92828369]
[83.59870148 201.98474121]
[84.89883423 187.04119873]
[86.19896698 172.09764099]
[87.49909973 157.15409851]
[88.79923248 142.21054077]
[90.09935760 127.26699829]
[81.43072510 122.28662872]
[74.96762848 114.65919495]
[71.47771454 105.29063416]
[56.52344131 104.12023926]
[42.16162872 110.75717163]
[30.07687378 102.05039215]
[15.12260437 100.87999725]
[0.16833472 99.70960236]
[-14.78593445 98.53919983]
[-23.61294556 100.99414062]
[-29.98885345 97.21650696]
[-41.00892258 108.31119537]
[-56.58690643 109.67516327]
[-69.36735535 100.66439056]
[-73.31574249 85.53348541]
[-66.56774902 71.42679596]
[-52.30957413 65.00507355]
[-37.27349472 69.30046082]
[-28.55908585 82.28479767]
[-13.61553669 83.58493042]
[1.33873224 84.75533295]
[16.29300117 85.92572784]
[31.24727058 87.09612274]
[44.53945541 80.37548065]
[57.69384003 89.16596985]
[72.64810944 90.33636475]
[78.20803070 80.85263062]
[86.89760590 74.11875153]
[97.46889496 71.10181427]
[108.40367889 72.23509979]
[116.31317902 59.48990631]
[124.22267914 46.74472046]
[126.09720612 37.77650070]
[132.38168335 33.84864044]
[140.51119995 21.24264717]
[148.64071655 8.63665676]
[150.67060852 -0.29767880]
[157.02230835 -4.11587429]
[165.36938477 -16.57887077]
[173.71646118 -29.04186821]
[182.06355286 -41.50486374]
[190.41062927 -53.96786118]
[191.66137695 -69.73954773]
[205.17240906 -76.00862122]
[213.51948547 -88.47161865]
[208.32688904 -102.97483826]
[212.61973572 -117.58390045]
[224.55067444 -126.75543213]
[239.41645813 -127.13830566]
[247.76353455 -139.60130310]
[256.11059570 -152.06430054]
[247.46145630 -164.07102966]
[247.84790039 -181.45864868]
[260.06787109 -197.30760193]
[262.65835571 -212.08221436]
[265.24884033 -226.85684204]
[267.83932495 -241.63145447]
[270.42977905 -256.40609741]
[259.54357910 -267.46368408]
[257.26925659 -282.81317139]
[264.48132324 -296.55236816]
[278.40658569 -303.39828491]
[293.69052124 -300.71850586]
[304.45611572 -289.54348755]
[306.56381226 -274.17022705]
[299.20312500 -260.51004028]
[285.20440674 -253.81561279]
[282.61392212 -239.04098511]
[280.02346802 -224.26635742]
[277.43298340 -209.49174500]
[274.84249878 -194.71711731]
[281.18054199 -190.70721436]
[293.85659790 -182.68740845]
[300.19464111 -178.67750549]
[312.43612671 -187.34619141]
[324.67758179 -196.01489258]
[336.91906738 -204.68357849]
[349.16055298 -213.35226440]
[356.71594238 -232.02223206]
[376.00976562 -233.03768921]
[387.94299316 -242.12600708]
[399.87625122 -251.21434021]
[408.81365967 -265.62124634]
[425.13165283 -261.02136230]
[425.22879028 -244.06768799]
[408.96456909 -239.28109741]
[397.03134155 -230.19276428]
[385.09808350 -221.10444641]
[384.63806152 -210.86357117]
[378.47616577 -202.39746094]
[368.46075439 -198.65730286]
[357.82925415 -201.11079407]
[345.58776855 -192.44209290]
[333.34628296 -183.77340698]
[321.10479736 -175.10472107]
[308.86331177 -166.43601990]
[291.76803589 -142.82452393]
[268.57360840 -143.71722412]
[260.22653198 -131.25422668]
[251.87944031 -118.79122925]
[257.18447876 -104.89897919]
[253.24533081 -90.37495422]
[241.37040710 -80.84397125]
[225.98248291 -80.12454224]
[217.63539124 -67.66154480]
[216.98168945 -52.78129196]
[202.87362671 -45.62078094]
[194.52655029 -33.15778732]
[186.17945862 -20.69478989]
[177.83238220 -8.23179245]
[169.48530579 4.23120403]
[161.24670410 16.76617050]
[153.11718750 29.37216187]
[144.98767090 41.97815323]
[136.96786499 54.65422058]
[129.05836487 67.39940643]
[121.14886475 80.14459229]
[128.98872375 98.92053986]
[122.56697083 118.22754669]
[105.04290771 128.56712341]
[103.74278259 143.51068115]
[102.44264984 158.45422363]
[101.14251709 173.39778137]
[99.84238434 188.34132385]
[98.54225159 203.28486633]
[97.24211884 218.22842407]
[95.94199371 233.17196655]
[94.90141296 248.13583374]
[94.12070465 263.11550903]
[93.34000397 278.09518433]
[92.94951630 293.09008789]
[92.94951630 308.09008789]
[92.94951630 323.09008789]
[100.68682098 336.89025879]
[92.94951630 349.61752319]
[92.94951630 364.61752319]
[92.94951630 379.61752319]
[92.94951630 394.61752319]
[92.94951630 409.61752319]
[103.84407043 420.75067139]
[103.63038635 435.96279907]
[92.94951630 446.28048706]
[92.94951630 461.28048706]
[92.94951630 476.28048706]
[105.04409790 486.19284058]
[107.88671875 501.56988525]
[100.13517761 515.15106201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[5 176]
[6 175]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[15 166]
[16 165]
[17 164]
[21 163]
[22 162]
[23 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 153]
[36 59]
[37 58]
[39 56]
[40 55]
[41 54]
[42 53]
[44 52]
[63 150]
[64 149]
[65 148]
[67 147]
[68 146]
[69 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[77 138]
[78 137]
[82 133]
[83 132]
[84 131]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
