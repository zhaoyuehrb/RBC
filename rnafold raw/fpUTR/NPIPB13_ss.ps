%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUCCUGGGUUCAAGCAGUUCUCCUGUCUCAGCCUCCCGAGUAGCUGAGAUUACAGGUUUCAGGCACAGAACUGUAUAUCCAAUAAUAGUGAAAUGGAUCCCACUAAUUAUGACAGAAAUGAUGAUACAUUUAAAUGACUUGGAUGUUUUAUAGGUUGGCACUCAUCAUGAGCCCCUGUUCUCAUUCUGCAA\
) } def
/len { sequence length } bind def

/coor [
[89.71829224 168.97610474]
[89.23255920 153.98396301]
[88.74683380 138.99183655]
[75.35895538 130.38168335]
[66.75766754 117.68328857]
[63.95336914 103.19509125]
[66.95420837 89.33915710]
[52.05047607 91.03586578]
[37.14674759 92.73257446]
[22.24301529 94.42928314]
[7.33928585 96.12598419]
[1.88079488 106.70642853]
[-7.91091776 113.26549530]
[-19.53347969 114.26642609]
[-30.08318710 109.57546997]
[-36.98043823 100.46647644]
[-51.93129730 101.67967987]
[-66.88215637 102.89288330]
[-81.83300781 104.10609436]
[-96.78386688 105.31929779]
[-111.73472595 106.53250885]
[-126.68558502 107.74571228]
[-141.63644409 108.95892334]
[-156.55342102 110.53489685]
[-171.42771912 112.47271729]
[-186.30201721 114.41054535]
[-201.17633057 116.34836578]
[-215.84516907 119.48287964]
[-230.21241760 123.79354858]
[-244.57968140 128.10421753]
[-258.94692993 132.41487122]
[-273.31420898 136.72554016]
[-287.68145752 141.03620911]
[-302.04873657 145.34687805]
[-309.58135986 158.98127747]
[-324.21322632 163.14823914]
[-337.16513062 155.88299561]
[-348.01181030 168.18263245]
[-364.03128052 164.67413330]
[-368.74401855 148.96673584]
[-357.30200195 137.21887207]
[-341.47579956 141.51573181]
[-334.66278076 128.32032776]
[-320.15374756 123.74403381]
[-306.35937500 130.97961426]
[-291.99212646 126.66895294]
[-277.62487793 122.35828400]
[-263.25759888 118.04761505]
[-248.89035034 113.73695374]
[-234.52308655 109.42628479]
[-220.15582275 105.11561584]
[-234.25207520 99.98765564]
[-243.97781372 88.56793976]
[-246.79626465 73.83510590]
[-241.97227478 59.63196945]
[-230.76409912 49.66317368]
[-216.09521484 46.52891159]
[-201.79173279 51.04670334]
[-191.58447266 62.03815842]
[-188.13584900 76.63634491]
[-192.34535217 91.03356934]
[-203.11415100 101.47406006]
[-188.23983765 99.53623962]
[-173.36553955 97.59841919]
[-158.49124146 95.66059875]
[-156.05801392 93.09024811]
[-152.25320435 91.57766724]
[-147.59078979 91.75717926]
[-142.84963989 94.00806427]
[-127.89878845 92.79485321]
[-112.94792938 91.58164978]
[-97.99707794 90.36844635]
[-83.04621887 89.15523529]
[-68.09535980 87.94203186]
[-53.14450455 86.72882080]
[-38.19364548 85.51561737]
[-27.21361732 70.88079834]
[-8.70758438 68.87045288]
[5.64257812 81.22225952]
[20.54630852 79.52555084]
[35.45003891 77.82884216]
[50.35377121 76.13213348]
[65.25749969 74.43542480]
[75.42612457 63.40822983]
[75.91185760 48.41609955]
[76.39758301 33.42396545]
[76.88330841 18.43183136]
[77.36904144 3.43969750]
[77.73336029 -11.55587769]
[77.97625732 -26.55391121]
[78.21915436 -41.55194473]
[78.46205139 -56.54997635]
[65.24590302 -64.37487030]
[57.72681046 -77.76735687]
[57.92737961 -93.12493896]
[65.79365540 -106.31650543]
[79.20965576 -113.79357910]
[94.56652832 -113.54486847]
[107.73336792 -105.63728333]
[115.16835785 -92.19791412]
[114.87151337 -76.84188843]
[106.92269135 -63.69990158]
[93.46008301 -56.30708313]
[93.21718597 -41.30904770]
[92.97429657 -26.31101418]
[92.73139954 -11.31298161]
[95.77087402 -4.56447887]
[92.36117554 3.92542577]
[91.87544250 18.91755867]
[91.38971710 33.90969467]
[90.90399170 48.90182495]
[90.41825867 63.89395905]
[97.07861328 67.34210205]
[99.52123260 52.54232025]
[114.35150146 50.29218674]
[121.07414246 63.70136642]
[110.39932251 74.23838806]
[117.05967712 77.68653107]
[129.02131653 68.63561249]
[140.98295593 59.58469772]
[152.94459534 50.53377914]
[164.90623474 41.48286057]
[166.82626343 25.79563522]
[179.32774353 16.12669945]
[194.99380493 18.21246338]
[204.53001404 30.81547928]
[202.27874756 46.45860291]
[189.57560730 55.86104584]
[173.95715332 53.44450378]
[161.99551392 62.49542236]
[150.03387451 71.54634094]
[138.07223511 80.59725952]
[126.11058807 89.64817810]
[126.11058807 97.14817810]
[140.94715881 94.93996429]
[153.54689026 86.80075073]
[167.94526672 91.00634003]
[174.18313599 104.64778137]
[167.94586182 118.28949738]
[153.54766846 122.49571228]
[140.94715881 114.35638428]
[126.11058807 112.14817810]
[126.11058807 119.64817810]
[138.07223511 128.69909668]
[150.03387451 137.75001526]
[161.99551392 146.80093384]
[173.95715332 155.85185242]
[186.82009888 150.87612915]
[200.35404968 152.89361572]
[211.03608704 161.27095032]
[216.13929749 173.73348999]
[214.42837524 186.98208618]
[226.24189758 196.22550964]
[238.05540466 205.46893311]
[249.86891174 214.71237183]
[261.68243408 223.95579529]
[268.18713379 225.26161194]
[272.41275024 229.08854675]
[273.72241211 233.69482422]
[285.23040771 243.31594849]
[296.73840332 252.93707275]
[303.19741821 254.45285034]
[307.29690552 258.41458130]
[308.45669556 263.06085205]
[319.64709473 273.04959106]
[330.83752441 283.03833008]
[346.68029785 289.07510376]
[345.26513672 305.96987915]
[328.63885498 309.28698730]
[320.84878540 294.22872925]
[309.65838623 284.23999023]
[298.46795654 274.25128174]
[287.11727905 264.44506836]
[275.60928345 254.82394409]
[264.10128784 245.20281982]
[252.43899536 235.76930237]
[240.62548828 226.52587891]
[228.81198120 217.28245544]
[216.99845886 208.03903198]
[205.18495178 198.79559326]
[189.56166077 203.81318665]
[173.86729431 198.48124695]
[164.34483337 184.71174622]
[164.90623474 167.81349182]
[152.94459534 158.76257324]
[140.98295593 149.71165466]
[129.02131653 140.66073608]
[117.05967712 131.60981750]
[103.73896790 138.50610352]
[104.22469330 153.49822998]
[104.71042633 168.49037170]
[111.26649475 184.12541199]
[98.05738068 194.75346375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[7 83]
[8 82]
[9 81]
[10 80]
[11 79]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[21 71]
[22 70]
[23 69]
[24 65]
[25 64]
[26 63]
[27 62]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[37 42]
[84 112]
[85 111]
[86 110]
[87 109]
[88 108]
[89 106]
[90 105]
[91 104]
[92 103]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[143 188]
[144 187]
[145 186]
[146 185]
[147 184]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[159 175]
[160 174]
[161 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
