%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCAGCAGAUGAGCUUGAACCUCAGGAGGGUUGUGGCACAAUGAGGAAGGAAACGUGGGUGGAAAGGCACGCUGGCCUGCUCUGCUGGCUGGGCCAGUAACUGGGGAUGGGGCUGGGGCAGGGCCCACUAAGCCACUGGUGACUGGGGGAGGGGCUGGGGAACUGGGUAGCAGACACAGGCUGAGGAUCGGCACGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[318.91940308 555.17852783]
[330.73556519 544.13958740]
[323.57473755 530.95916748]
[316.41394043 517.77880859]
[309.25314331 504.59838867]
[302.09234619 491.41796875]
[287.19927979 491.16845703]
[274.34524536 483.44647217]
[267.03390503 470.23999023]
[267.31643677 455.04733276]
[275.21710205 441.95053101]
[262.34255981 434.46084595]
[262.55328369 418.64102173]
[255.39247131 405.46063232]
[248.23167419 392.28024292]
[241.07087708 379.09982300]
[233.91007996 365.91943359]
[219.14314270 364.16571045]
[208.10990906 353.93185425]
[205.18415833 338.98886108]
[211.69355774 325.02697754]
[204.53276062 311.84658813]
[197.37196350 298.66616821]
[190.21116638 285.48577881]
[183.05036926 272.30538940]
[175.88957214 259.12496948]
[161.57884216 255.15780640]
[154.12901306 241.89300537]
[158.38717651 226.90948486]
[145.04196167 226.40509033]
[133.59782410 219.31394958]
[127.10192108 207.39830017]
[127.34580231 193.72093201]
[134.37272644 181.85810852]
[127.41777039 168.56794739]
[120.46281433 155.27777100]
[113.50786591 141.98760986]
[106.55290985 128.69743347]
[99.73785400 130.16302490]
[92.60050964 129.99296570]
[85.53701782 128.11877441]
[78.95718384 124.56861877]
[73.26083374 119.46968079]
[68.81381989 113.04482269]
[65.92506409 105.60343170]
[64.82619476 97.52670288]
[55.81477356 110.15895844]
[41.08868027 115.04995728]
[26.31039810 110.31900024]
[17.16247368 97.78524017]
[17.16247368 82.26816559]
[26.31039810 69.73440552]
[41.08868027 65.00344849]
[55.81477356 69.89443970]
[64.82619476 82.52670288]
[73.94218445 70.61457825]
[70.02235413 56.13580322]
[66.10252380 41.65702820]
[62.18269730 27.17825127]
[58.26286697 12.69947529]
[54.34303665 -1.77930021]
[43.07176590 -3.93690705]
[33.46487045 -10.11985493]
[26.89169502 -19.40125084]
[24.27207947 -30.41594505]
[25.94777489 -41.56126404]
[31.63840103 -51.23019791]
[40.48749542 -58.04311371]
[37.24722672 -72.68895721]
[32.33457565 -80.39863586]
[34.07232666 -87.58771515]
[29.28016472 -95.37286377]
[31.12950897 -102.53404236]
[28.34629250 -117.27357483]
[25.56307602 -132.01310730]
[22.77986145 -146.75262451]
[19.99664497 -161.49215698]
[17.21342850 -176.23168945]
[14.43021202 -190.97122192]
[0.60826457 -205.63838196]
[7.76953173 -223.59503174]
[4.52926445 -238.24087524]
[1.28899693 -252.88671875]
[-1.95127046 -267.53256226]
[-5.64545393 -282.07055664]
[-9.78997993 -296.48660278]
[-13.93450642 -310.90267944]
[-18.07903290 -325.31872559]
[-22.22355843 -339.73480225]
[-26.36808395 -354.15087891]
[-36.55542374 -367.70278931]
[-26.35326004 -381.24353027]
[-10.51743793 -375.18853760]
[-11.95201969 -358.29537964]
[-7.80749369 -343.87933350]
[-3.66296792 -329.46325684]
[0.48155808 -315.04721069]
[4.62608385 -300.63113403]
[8.77060986 -286.21505737]
[11.16316414 -284.74114990]
[13.11382675 -282.22729492]
[14.22229195 -278.83779907]
[14.15538597 -274.87927246]
[12.69457054 -270.77282715]
[15.93483829 -256.12698364]
[19.17510605 -241.48114014]
[22.41537285 -226.83529663]
[31.49754715 -222.13337708]
[36.59603882 -213.01524353]
[35.81430435 -202.37748718]
[29.16974068 -193.75442505]
[31.95295715 -179.01490784]
[34.73617172 -164.27537537]
[37.51939011 -149.53584290]
[40.30260468 -134.79631042]
[43.08582306 -120.05678558]
[45.86903763 -105.31726074]
[48.76678848 -90.59981537]
[51.89307022 -75.92922211]
[55.13333511 -61.28338242]
[72.66766357 -54.83589554]
[82.86173248 -39.00137711]
[81.44995117 -20.07174873]
[68.82181549 -5.69912910]
[72.74164581 8.77964687]
[76.66146851 23.25842285]
[80.58129883 37.73719788]
[84.50112915 52.21597290]
[88.42095947 66.69474792]
[111.57609558 68.23934174]
[127.79237366 83.44701385]
[130.55935669 104.52278900]
[119.84307861 121.74248505]
[126.79803467 135.03265381]
[133.75299072 148.32281494]
[140.70794678 161.61299133]
[147.66288757 174.90316772]
[164.42558289 177.13729858]
[176.43626404 188.80480957]
[179.10179138 205.16773987]
[171.56758118 219.74868774]
[186.45535278 224.33038330]
[193.52966309 237.79919434]
[189.06997681 251.96417236]
[196.23077393 265.14459229]
[203.39157104 278.32498169]
[210.55236816 291.50537109]
[217.71316528 304.68579102]
[224.87396240 317.86618042]
[240.12976074 320.00320435]
[251.07403564 330.58981323]
[253.65544128 345.41549683]
[247.09048462 358.75863647]
[254.25128174 371.93902588]
[261.41207886 385.11941528]
[268.57287598 398.29983521]
[275.73367310 411.48022461]
[289.12039185 419.91265869]
[288.39752197 434.78973389]
[303.68469238 435.28878784]
[316.58438110 443.31964111]
[323.68515015 456.64053345]
[323.16830444 471.62683105]
[315.27276611 484.25717163]
[322.43356323 497.43759155]
[329.59436035 510.61798096]
[336.75515747 523.79840088]
[343.91595459 536.97875977]
[357.42984009 533.35968018]
[371.40289307 532.85272217]
[385.12808228 535.47991943]
[397.91177368 541.10498047]
[409.10867310 549.44018555]
[418.15438843 560.06097412]
[424.59402466 572.42779541]
[428.10488892 585.91339111]
[428.51278687 599.83471680]
[425.80059814 613.48736572]
[420.10897827 626.18139648]
[411.72900391 637.27600098]
[401.08746338 646.21209717]
[407.83486938 659.60882568]
[414.58230591 673.00555420]
[421.32974243 686.40222168]
[428.07714844 699.79895020]
[440.60211182 711.22534180]
[433.08956909 726.42395020]
[416.40524292 723.41241455]
[414.68041992 706.54638672]
[407.93301392 693.14965820]
[401.18557739 679.75292969]
[394.43814087 666.35620117]
[387.69073486 652.95947266]
[372.00445557 656.41833496]
[355.94601440 655.71630859]
[340.60101318 650.89520264]
[327.00830078 642.27569580]
[316.08963013 630.43572998]
[308.58706665 616.17181396]
[305.01260376 600.44549561]
[305.61322021 584.31854248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[11 159]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[29 141]
[34 137]
[35 136]
[36 135]
[37 134]
[38 133]
[46 55]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[68 120]
[69 119]
[71 118]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[81 107]
[82 106]
[83 105]
[84 104]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
