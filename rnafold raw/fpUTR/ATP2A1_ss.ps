%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGCUGCUCAAGUGGGACGGGGGUCAGAGCUUUGUGGAGGGAAGAAAAACCUGGAGGGGGCAGGAGAGUAAAAAGAAGAAACCCAGGCAGACAGGCAGUUGGACACACUGAGGAAGACCCCCCACGAGUGGGAACCCCCUGGAAGGAACACACCGGCCCCGGCCCCCAGGAAGGGAGCACA\
) } def
/len { sequence length } bind def

/coor [
[127.60462189 214.32151794]
[123.33422089 199.94223022]
[119.06381226 185.56295776]
[114.79341125 171.18368530]
[110.52300262 156.80439758]
[106.25259399 142.42512512]
[91.28718567 141.40701294]
[85.10867310 155.07543945]
[78.93015289 168.74386597]
[72.75163269 182.41229248]
[74.91101074 198.66865540]
[61.74908829 208.45108032]
[46.80571747 201.69624329]
[45.45336151 185.35295105]
[59.08320618 176.23377991]
[65.26172638 162.56535339]
[71.44024658 148.89692688]
[77.61875916 135.22850037]
[67.11869049 118.90479279]
[65.90549469 101.32237244]
[72.63059235 86.97238159]
[84.09765625 78.79750824]
[78.86111450 64.74124146]
[73.62458038 50.68497467]
[68.38803864 36.62870407]
[63.15150070 22.57243729]
[57.91496277 8.51616955]
[42.84978867 5.87272978]
[31.20735359 -3.89202905]
[26.05002785 -18.07893753]
[28.66876793 -32.84369659]
[38.26167297 -44.23851013]
[33.02513504 -58.29477692]
[27.78859711 -72.35104370]
[22.55205917 -86.40731049]
[16.61030960 -93.37592316]
[17.34816360 -100.74697876]
[12.35106659 -114.89013672]
[7.35396957 -129.03329468]
[2.35687256 -143.17646790]
[-3.46568871 -150.24496460]
[-2.60277438 -157.60243225]
[-7.35898924 -171.82839966]
[-12.11520386 -186.05438232]
[-28.96382713 -184.77310181]
[-45.56813049 -187.84541321]
[-60.82271194 -195.06095886]
[-73.71350098 -205.93380737]
[-83.38517761 -219.73506165]
[-89.19793701 -235.54179382]
[-90.76977539 -252.29876709]
[-88.00163269 -268.88882446]
[-81.08357239 -284.20739746]
[-70.48178101 -297.23605347]
[-79.50334930 -309.21984863]
[-88.52492523 -321.20364380]
[-103.92912292 -321.07351685]
[-116.31150818 -329.93521118]
[-121.04548645 -344.21994019]
[-116.51453400 -358.38357544]
[-125.53610229 -370.36737061]
[-134.55767822 -382.35116577]
[-148.54614258 -376.69561768]
[-163.52185059 -374.85421753]
[-178.46371460 -376.95251465]
[-192.35299683 -382.84744263]
[-204.24269104 -392.13711548]
[-213.32212830 -404.18807983]
[-218.97229004 -418.17874146]
[-220.80789185 -433.15515137]
[-218.70382690 -448.09622192]
[-212.80351257 -461.98321533]
[-203.50927734 -473.86932373]
[-191.45478821 -482.94409180]
[-177.46195984 -488.58883667]
[-162.48484802 -490.41867065]
[-147.54460144 -488.30883789]
[-133.65988159 -482.40316772]
[-121.77735901 -473.10433960]
[-112.70722198 -461.04635620]
[-107.06787872 -447.05136108]
[-105.24382782 -432.07351685]
[-107.35944366 -417.13409424]
[-113.27046967 -403.25164795]
[-122.57389069 -391.37274170]
[-113.55231476 -379.38894653]
[-104.53073883 -367.40515137]
[-89.66646576 -367.84252930]
[-77.24797821 -359.34280396]
[-72.15613556 -344.99267578]
[-76.54113770 -330.22521973]
[-67.51956177 -318.24142456]
[-58.49798965 -306.25762939]
[-50.01519775 -310.42898560]
[-41.01739883 -313.32684326]
[-31.69460106 -314.88998413]
[-22.24368668 -315.08538818]
[-12.86424351 -313.90896606]
[-3.75434494 -311.38552856]
[2.88474441 -324.83627319]
[9.52383423 -338.28701782]
[16.16292381 -351.73776245]
[17.15995598 -360.84115601]
[23.03065491 -365.35910034]
[21.70189476 -381.70431519]
[35.34489059 -390.80380249]
[49.92490005 -383.29678345]
[50.44325638 -366.90585327]
[36.36672211 -358.49255371]
[29.61366653 -345.09866333]
[22.97457695 -331.64794922]
[16.33548737 -318.19720459]
[9.69639778 -304.74645996]
[21.55371284 -294.97409058]
[30.79588127 -282.68487549]
[36.90335846 -268.56082153]
[39.53075027 -253.38731384]
[38.52634048 -238.00947571]
[33.94083405 -223.28504944]
[26.02484703 -210.03660583]
[15.21518707 -199.00553894]
[2.11077332 -190.81059265]
[6.86698818 -176.58462524]
[11.62320232 -162.35864258]
[16.50003433 -148.17355347]
[21.49713135 -134.03039551]
[26.49422836 -119.88723755]
[31.49132538 -105.74407196]
[36.60832596 -91.64385223]
[41.84486389 -77.58758545]
[47.08140182 -63.53131485]
[52.31793976 -49.47504807]
[67.02799225 -47.13408661]
[78.66867065 -37.68154526]
[84.05059052 -23.57830811]
[81.63479614 -8.57628250]
[71.97122955 3.27963161]
[77.20777130 17.33589935]
[82.44430542 31.39216805]
[87.68084717 45.44843674]
[92.91738129 59.50470352]
[98.15392303 73.56097412]
[127.47650909 79.77069092]
[138.89376831 115.14071655]
[152.28765869 121.89376831]
[167.13348389 117.17791748]
[180.62059021 124.21727753]
[185.02494812 138.39956665]
[198.41883850 145.15261841]
[213.34838867 139.96765137]
[227.53488159 146.93319702]
[232.56172180 161.91673279]
[225.44657898 176.02879333]
[210.41072083 180.89694214]
[196.37467957 173.63298035]
[191.66577148 158.54650879]
[178.27189636 151.79345703]
[164.25039673 156.68562317]
[150.57089233 150.02786255]
[145.53460693 135.28765869]
[132.14071655 128.53460693]
[120.63187408 138.15472412]
[124.90228271 152.53399658]
[129.17268372 166.91326904]
[133.44308472 181.29255676]
[137.71350098 195.67182922]
[141.98390198 210.05110168]
[147.10090637 224.15133667]
[153.04643250 237.92269897]
[158.99195862 251.69407654]
[173.31292725 258.92520142]
[176.44720459 274.65911865]
[165.99041748 286.82611084]
[149.96414185 286.09268188]
[140.66235352 273.02148438]
[145.22058105 257.63961792]
[139.27505493 243.86822510]
[133.32952881 230.09686279]
[127.71822357 244.00776672]
[114.54580688 251.18324280]
[99.81517792 248.35331726]
[90.23931885 236.80761719]
[90.18212128 221.80772400]
[99.66963959 210.18933105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 163]
[6 162]
[7 18]
[8 17]
[9 16]
[10 15]
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[32 132]
[33 131]
[34 130]
[35 129]
[37 128]
[38 127]
[39 126]
[40 125]
[42 124]
[43 123]
[44 122]
[54 93]
[55 92]
[56 91]
[60 87]
[61 86]
[62 85]
[99 113]
[100 112]
[101 111]
[102 110]
[104 109]
[144 161]
[145 160]
[148 157]
[149 156]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
