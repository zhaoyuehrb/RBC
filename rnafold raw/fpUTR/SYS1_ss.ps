%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUACGCCUGCGCAACCUCAGCCCCGCCCCUCCGCUGCUUUCCCCGGAAACGUUUCUUUCCUACGCAGCCGCUCCUGCCGCCGUGGUCGCUGGAGCUUUGCCUCUCUAGGCCGGCAGCGCCUCUCCUCCAUGGUCCUGUCUGUCAGCGCUGUUUUGGGAGCCCGCCGGUGAGGCCGGGCCACGCUCAGACACUUCGAUCGUCGAGUCUGUCACUGGGC\
) } def
/len { sequence length } bind def

/coor [
[109.20146942 351.13827515]
[100.31615448 364.00625610]
[85.22460175 368.10247803]
[71.05257416 361.49279785]
[64.49167633 347.29812622]
[68.63976288 332.22076416]
[81.53823090 323.37973022]
[82.82185364 308.43475342]
[84.10547638 293.48977661]
[85.38910675 278.54479980]
[77.09761047 291.04486084]
[63.15757751 285.50631714]
[52.99142075 274.47683716]
[48.60491562 260.13256836]
[50.86352921 245.30357361]
[59.32162857 232.91566467]
[72.31043243 225.41293335]
[87.26726532 224.27569580]
[101.24112701 229.72830200]
[111.47435760 240.69387817]
[120.97187805 252.30409241]
[118.20325470 237.56182861]
[115.43462372 222.81954956]
[101.91917419 216.61708069]
[94.56053925 203.49021912]
[96.36356354 188.37062073]
[106.84490967 177.08134460]
[104.07627869 162.33908081]
[101.30765533 147.59680176]
[98.53902435 132.85452271]
[90.61434174 131.51925659]
[83.25010681 128.30186462]
[76.88607788 123.39445496]
[71.90225983 117.09008026]
[68.59626007 109.76519775]
[53.63447571 110.83528900]
[38.67269516 111.90537262]
[23.71091270 112.97546387]
[8.74913120 114.04554749]
[5.12506723 124.00107574]
[-1.57767963 132.15652466]
[-10.57734585 137.60069275]
[-20.83746529 139.73628235]
[-31.18621826 138.34532166]
[-40.45026016 133.61111450]
[-47.58776093 126.09462738]
[-51.80554199 116.66799927]
[-66.80401611 116.88218689]
[-81.80248260 117.09638214]
[-96.80095673 117.31056976]
[-111.79942322 117.52476501]
[-122.63290405 129.03176880]
[-138.43231201 129.42451477]
[-149.82414246 118.46997833]
[-150.04981995 102.66730499]
[-138.97544861 91.39192963]
[-123.17127228 91.33334351]
[-112.01361847 102.52629852]
[-97.01514435 102.31210327]
[-82.01667786 102.09790802]
[-67.01820374 101.88372040]
[-52.01973343 101.66952515]
[-41.84017181 84.95793915]
[-23.49478531 77.74517059]
[-4.38126421 83.12743378]
[7.67904282 99.08377075]
[22.64082527 98.01367950]
[37.60260773 96.94358826]
[52.56438828 95.87350464]
[67.52616882 94.80341339]
[69.52729797 87.63195038]
[73.09028625 81.09440613]
[63.10650253 69.89958191]
[53.12271881 58.70476151]
[43.13893509 47.50993729]
[33.15514755 36.31511688]
[18.19543839 31.16558838]
[15.49886131 16.51711655]
[5.51507616 5.32229424]
[-9.44463348 0.17276569]
[-12.14121056 -14.47570705]
[-22.12499619 -25.67052841]
[-37.85838699 -30.29572487]
[-41.45604706 -46.29537582]
[-29.21701050 -57.21041489]
[-13.73175049 -51.81238174]
[-10.93017387 -35.65431213]
[-0.94638896 -24.45949173]
[13.29921436 -20.11069298]
[16.70989799 -4.66149139]
[26.69368362 6.53333044]
[40.93928528 10.88213062]
[44.34997177 26.33133125]
[54.33375549 37.52615356]
[64.31754303 48.72097397]
[74.30132294 59.91579819]
[84.28511047 71.11061859]
[92.46248627 67.98844147]
[101.17381287 67.13396454]
[109.80199432 68.60771942]
[117.73579407 72.30531311]
[128.49276733 61.85124969]
[139.24975586 51.39718628]
[150.00672913 40.94312286]
[160.76370239 30.48905754]
[146.02420044 27.70568466]
[138.88114929 14.51565647]
[144.60469055 0.65054834]
[158.97198486 -3.65999079]
[171.38288879 4.76434612]
[172.68098450 19.70722008]
[184.15634155 10.04718685]
[195.63169861 0.38715291]
[207.10704041 -9.27288055]
[218.58239746 -18.93291473]
[230.05775452 -28.59294891]
[235.63237000 -43.39950943]
[250.35188293 -45.67668152]
[254.89768982 -53.59179688]
[262.06076050 -55.39130783]
[273.67288208 -64.88649750]
[278.33126831 -72.73588562]
[285.51928711 -74.43292999]
[297.26580811 -83.76133728]
[302.03579712 -91.54341125]
[309.24731445 -93.13764191]
[321.12585449 -102.29735565]
[320.81738281 -117.69901276]
[329.53515625 -130.18316650]
[343.76409912 -135.08222961]
[357.97924805 -130.71556091]
[369.85778809 -139.87527466]
[381.73629761 -149.03498840]
[393.61483765 -158.19471741]
[405.49337769 -167.35443115]
[411.69699097 -181.90866089]
[426.50051880 -183.55335999]
[438.37905884 -192.71307373]
[450.25759888 -201.87278748]
[453.73150635 -217.53521729]
[468.20556641 -224.45484924]
[482.57650757 -217.32353210]
[485.82015991 -201.61181641]
[475.44830322 -189.37237549]
[459.41729736 -189.99426270]
[447.53875732 -180.83454895]
[435.66024780 -171.67481995]
[430.30624390 -157.77575684]
[414.65310669 -155.47589111]
[402.77456665 -146.31617737]
[390.89602661 -137.15646362]
[379.01748657 -127.99674225]
[367.13894653 -118.83702087]
[367.74841309 -103.97881317]
[359.39303589 -91.46274567]
[345.10281372 -86.20510101]
[330.28558350 -90.41882324]
[318.40704346 -81.25910187]
[306.59420776 -72.01480865]
[294.84768677 -62.68640518]
[283.16806030 -53.27436829]
[271.55593872 -43.77918243]
[260.01190186 -34.20132828]
[255.25808716 -20.08572006]
[239.71778870 -17.11759377]
[228.24243164 -7.45756102]
[216.76707458 2.20247293]
[205.29173279 11.86250687]
[193.81637573 21.52254105]
[182.34101868 31.18257523]
[171.21777344 41.24603653]
[160.46078491 51.70009995]
[149.70381165 62.15416336]
[138.94683838 72.60822296]
[128.18986511 83.06228638]
[131.34915161 109.93906403]
[113.28130341 130.08589172]
[116.04992676 144.82817078]
[118.81855774 159.57044983]
[121.58718109 174.31272888]
[135.45021057 181.03007507]
[142.61589050 194.46534729]
[140.52116394 209.36755371]
[130.17691040 220.05091858]
[132.94552612 234.79319763]
[135.71415710 249.53547668]
[141.55320740 263.35232544]
[150.19580078 275.61224365]
[158.83839417 287.87216187]
[167.48098755 300.13208008]
[176.12358093 312.39199829]
[180.84980774 314.57644653]
[183.95861816 318.00979614]
[185.24520874 321.86859131]
[184.86050415 325.36718750]
[192.97010803 337.98599243]
[201.07972717 350.60479736]
[209.18933105 363.22360229]
[222.83912659 373.27941895]
[216.95491028 389.17950439]
[200.04731750 387.92681885]
[196.57054138 371.33322144]
[188.46092224 358.71441650]
[180.35130310 346.09561157]
[172.24169922 333.47680664]
[163.86367798 321.03457642]
[155.22106934 308.77465820]
[146.57847595 296.51473999]
[137.93588257 284.25482178]
[129.29328918 271.99493408]
[122.05348969 273.95330811]
[130.25283813 286.51397705]
[120.84050751 298.19335938]
[106.82424927 292.85067749]
[107.57388306 277.87005615]
[100.33407593 279.82843018]
[99.05045319 294.77340698]
[97.76683044 309.71838379]
[96.48320770 324.66336060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 219]
[8 218]
[9 217]
[10 216]
[21 186]
[22 185]
[23 184]
[27 180]
[28 179]
[29 178]
[30 177]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[78 91]
[79 90]
[81 88]
[82 87]
[101 175]
[102 174]
[103 173]
[104 172]
[105 171]
[111 170]
[112 169]
[113 168]
[114 167]
[115 166]
[116 165]
[118 163]
[120 162]
[121 161]
[123 160]
[124 159]
[126 158]
[127 157]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[139 145]
[187 210]
[188 209]
[189 208]
[190 207]
[191 206]
[195 205]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
