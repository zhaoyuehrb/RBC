%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAUAAGCAACAAAGCGAAGCGCCCUCCCCCUAGCGUCCCAGACAGCGGAGGGAGUCGCCGCCGCUACCGCCGCCGCCGCCGCAGGGCCCGCCGCUGGGAUGCCGAGCGCCCGCGCCGCCGCUGCCUCUGUCCUCCGCGCGCUGCUCAGCUGAAGGCGCACAGGAUUCAAUUACUGGACUUGUCAACUCUGCCAGUGUACGUGCCAUUUCUCUUCCACU\
) } def
/len { sequence length } bind def

/coor [
[326.52478027 631.04650879]
[328.85635376 616.23016357]
[327.09173584 601.33435059]
[325.32711792 586.43847656]
[323.56250000 571.54266357]
[321.79788208 556.64678955]
[320.03326416 541.75097656]
[318.26864624 526.85510254]
[311.14562988 529.20300293]
[305.55276489 543.12133789]
[311.98516846 557.55743408]
[306.24783325 572.28350830]
[291.74456787 578.56292725]
[277.07992554 572.67022705]
[270.95419312 558.10137939]
[277.00164795 543.49987793]
[291.63442993 537.52850342]
[297.22729492 523.61016846]
[283.06765747 510.48117065]
[277.22079468 493.20645142]
[280.14620972 476.29162598]
[290.13955688 463.67416382]
[282.27493286 450.90124512]
[274.41033936 438.12829590]
[266.54571533 425.35534668]
[258.68112183 412.58242798]
[245.41957092 405.80151367]
[244.77256775 389.99353027]
[236.90795898 377.22058105]
[230.99353027 391.00534058]
[216.56779480 395.11602783]
[204.27565002 386.51934814]
[203.18763733 371.55883789]
[214.10661316 361.27410889]
[228.97601318 363.25479126]
[222.03410339 349.95779419]
[215.09219360 336.66079712]
[200.20529175 336.16510010]
[187.48065186 328.23165894]
[180.38865662 314.90612793]
[180.92233276 299.72021484]
[189.03843689 286.75579834]
[182.09652710 273.45880127]
[175.15461731 260.16183472]
[160.41868591 258.16421509]
[149.55615234 247.74935913]
[146.87785339 232.76002502]
[153.61718750 218.90766907]
[146.67527771 205.61068726]
[139.73335266 192.31370544]
[132.79144287 179.01672363]
[125.84952545 165.71972656]
[118.90761566 152.42274475]
[111.96569824 139.12576294]
[105.02378082 125.82877350]
[82.20045471 119.37886047]
[73.83822632 97.18474579]
[60.00042725 91.39550781]
[44.28328705 93.20714569]
[35.52833176 81.15724945]
[21.69053459 75.36800385]
[5.97339344 77.17964935]
[-2.78156042 65.12975311]
[-16.61935806 59.34050751]
[-32.33649826 61.15214920]
[-41.09145355 49.10225296]
[-54.92925262 43.31300735]
[-71.11798859 45.93156052]
[-81.26895905 33.05173874]
[-74.93972015 17.92320061]
[-58.64124298 16.10888672]
[-49.14000702 29.47521019]
[-35.30221176 35.26445389]
[-20.57484055 33.03872681]
[-10.83011532 45.50270844]
[3.00768280 51.29195404]
[17.73505211 49.06622314]
[27.47977829 61.53020859]
[41.31757736 67.31945038]
[56.04494476 65.09371948]
[65.78967285 77.55770874]
[79.62747192 83.34694672]
[83.76112366 79.29582214]
[88.68045807 76.24642944]
[86.35491180 61.42779922]
[84.02935791 46.60916901]
[81.70381165 31.79053688]
[79.27346802 16.98873138]
[76.73845673 2.20449352]
[74.20344543 -12.57974529]
[62.10840607 -26.46961212]
[68.83560181 -42.68170166]
[66.09163666 -57.42858887]
[63.34766388 -72.17547607]
[60.29130554 -86.86079407]
[56.92393494 -101.47793579]
[53.55656433 -116.09507751]
[50.18919373 -130.71221924]
[39.55136108 -142.42320251]
[44.23400879 -156.56257629]
[40.86663818 -171.17971802]
[31.41887665 -185.25721741]
[42.33082581 -198.23280334]
[57.82004547 -191.33929443]
[55.48377991 -174.54708862]
[58.85115051 -159.92994690]
[69.24813080 -149.26448059]
[64.80633545 -134.07958984]
[68.17370605 -119.46244812]
[71.54107666 -104.84530640]
[74.90844727 -90.22816467]
[77.67966461 -88.06038666]
[79.54212952 -84.44621277]
[79.82903290 -79.82570648]
[78.09455109 -74.91944122]
[80.83851624 -60.17255783]
[83.58248901 -45.42567062]
[93.37238312 -38.32903290]
[95.78285217 -26.07160950]
[88.98768616 -15.11475754]
[91.52269745 -0.33051884]
[94.05770874 14.45372009]
[98.28278351 20.51018906]
[96.52244568 29.46498871]
[98.84799194 44.28361893]
[101.17353821 59.10224915]
[103.49909210 73.92088318]
[112.76212311 76.98930359]
[120.27001190 83.22232056]
[124.99022675 91.76272583]
[126.27359772 101.43598175]
[123.94363403 110.91175842]
[118.32077026 118.88686371]
[125.26268005 132.18385315]
[132.20460510 145.48083496]
[139.14651489 158.77781677]
[146.08842468 172.07479858]
[153.03034973 185.37178040]
[159.97225952 198.66877747]
[166.91416931 211.96575928]
[182.13255310 214.35470581]
[192.90029907 225.12081909]
[195.23625183 239.98713684]
[188.45159912 253.21990967]
[195.39350891 266.51690674]
[202.33541870 279.81387329]
[217.61227417 280.56561279]
[230.37742615 288.80862427]
[237.25697327 302.24508667]
[236.49244690 317.22079468]
[228.38917542 329.71890259]
[235.33108521 343.01586914]
[242.27301025 356.31286621]
[249.68090820 369.35598755]
[257.54550171 382.12893677]
[271.36956787 389.82345581]
[271.45404053 404.71780396]
[279.31866455 417.49075317]
[287.18325806 430.26370239]
[295.04788208 443.03662109]
[302.91247559 455.80957031]
[322.53381348 453.49017334]
[341.07336426 463.52313232]
[351.05667114 483.57913208]
[347.50231934 507.03851318]
[360.27523804 514.90313721]
[371.56289673 506.22433472]
[385.10617065 501.92752075]
[399.27294922 502.50906372]
[412.36322021 507.87881470]
[422.81317139 517.37329102]
[429.38186646 529.83740234]
[431.29879761 543.76538086]
[428.35391235 557.48223877]
[441.01428223 565.52679443]
[453.67465210 573.57135010]
[466.33502197 581.61590576]
[478.99539185 589.66052246]
[491.65576172 597.70507812]
[500.56933594 599.66357422]
[504.43722534 605.95410156]
[517.78430176 598.46313477]
[533.08404541 598.04443359]
[546.82080078 604.79431152]
[555.83789062 617.16162109]
[558.06329346 632.30450439]
[552.98559570 646.74316406]
[541.77166748 657.15979004]
[526.99829102 661.16064453]
[512.06036377 657.82641602]
[500.39050293 647.92321777]
[494.67034912 633.72680664]
[496.21432495 618.49938965]
[483.61120605 610.36541748]
[470.95083618 602.32086182]
[458.29046631 594.27630615]
[445.63009644 586.23175049]
[432.96972656 578.18713379]
[420.30935669 570.14257812]
[407.47698975 579.44708252]
[392.01864624 583.12213135]
[376.29571533 580.57586670]
[362.72180176 572.16918945]
[353.39208984 559.16491699]
[349.75991821 543.53808594]
[352.41064453 527.67608643]
[339.63769531 519.81146240]
[332.51467896 522.15936279]
[339.95349121 535.18487549]
[347.39230347 548.21038818]
[354.83111572 561.23590088]
[362.26992798 574.26141357]
[369.70874023 587.28692627]
[377.14755249 600.31243896]
[387.83312988 610.83947754]
[392.81231689 624.98895264]
[391.07409668 639.88787842]
[382.97140503 652.51110840]
[370.14944458 660.29559326]
[355.21170044 661.66064453]
[341.19116211 656.32910156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 18]
[10 17]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[28 155]
[29 154]
[35 153]
[36 152]
[37 151]
[42 146]
[43 145]
[44 144]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[54 134]
[55 133]
[57 82]
[58 81]
[60 79]
[61 78]
[63 76]
[64 75]
[66 73]
[67 72]
[84 127]
[85 126]
[86 125]
[87 124]
[88 122]
[89 121]
[90 120]
[92 117]
[93 116]
[94 115]
[95 111]
[96 110]
[97 109]
[98 108]
[100 106]
[101 105]
[165 207]
[166 206]
[174 199]
[175 198]
[176 197]
[177 196]
[178 195]
[179 194]
[181 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
