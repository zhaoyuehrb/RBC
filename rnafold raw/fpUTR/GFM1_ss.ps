%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUACAACAUUGGCUGCCGGCGUGACUUUGACCGCUUCCCGGUGCGUUACCGGCAGCUGAACCCACCCGGCGCCACGGGACUUUGACGCGUGCUCUGCGCUUGCC\
) } def
/len { sequence length } bind def

/coor [
[99.74171448 163.40147400]
[88.11235809 162.27758789]
[76.88667297 159.03886414]
[66.44587708 153.79530334]
[57.14451599 146.72494507]
[49.29844666 138.06790161]
[43.17410278 128.11814880]
[38.97945786 117.21356201]
[36.85695648 105.72442627]
[36.87866974 94.04090118]
[39.04386520 82.55973816]
[43.27901459 71.67081451]
[30.74669647 63.42817688]
[18.21437836 55.18554306]
[5.68206215 46.94290924]
[-6.85025501 38.70027161]
[-19.38257217 30.45763779]
[-31.91489029 22.21500397]
[-44.44720840 13.97236919]
[-56.97952271 5.72973442]
[-69.51184082 -2.51290011]
[-82.04415894 -10.75553513]
[-88.86251831 -11.54877758]
[-93.47142029 -15.20034122]
[-95.04618073 -19.85964966]
[-107.07803345 -28.81702995]
[-119.10987854 -37.77440643]
[-131.14172363 -46.73178864]
[-142.52450562 -42.70822144]
[-154.30407715 -44.73180771]
[-163.50350952 -52.17147064]
[-167.85650635 -63.04273605]
[-166.36506653 -74.53588867]
[-177.85574341 -84.17769623]
[-189.34640503 -93.81951141]
[-200.83706665 -103.46132660]
[-216.88008118 -103.50110626]
[-226.73834229 -116.15789032]
[-222.84945679 -131.72247314]
[-208.19664001 -138.25503540]
[-194.02027893 -130.74435425]
[-191.19525146 -114.95199585]
[-179.70458984 -105.31018066]
[-168.21392822 -95.66836548]
[-156.72325134 -86.02655029]
[-138.74444580 -88.80334473]
[-124.09935760 -77.48815155]
[-122.18434906 -58.76363373]
[-110.15249634 -49.80625534]
[-98.12065125 -40.84887695]
[-86.08880615 -31.89149857]
[-73.80152130 -23.28785133]
[-61.26920700 -15.04521751]
[-48.73688889 -6.80258274]
[-36.20457077 1.44005215]
[-23.67225456 9.68268681]
[-11.13993740 17.92532158]
[1.39237952 26.16795540]
[13.92469692 34.41059113]
[26.45701408 42.65322495]
[38.98933029 50.89585876]
[51.52164841 59.13849640]
[65.59487915 46.74494553]
[82.67789459 39.01018143]
[101.27625275 36.61085129]
[119.76296997 39.75683975]
[136.52081299 48.17294312]
[150.08378601 61.12290955]
[159.26539612 77.47386932]
[163.26242065 95.79543304]
[161.72521973 114.48480988]
[175.82061768 119.61511230]
[189.91600037 124.74541473]
[204.01139832 129.87571716]
[218.10678101 135.00602722]
[232.47662354 139.30807495]
[247.07229614 142.76730347]
[261.66796875 146.22654724]
[276.26364136 149.68577576]
[291.47616577 145.33958435]
[302.07604980 155.80343628]
[314.51043701 146.32081604]
[330.12854004 147.10099792]
[341.55596924 157.77563477]
[343.39706421 173.30445862]
[334.78247070 186.35523987]
[319.77978516 190.76580811]
[305.47277832 184.45362854]
[298.61679077 170.39910889]
[284.44824219 174.99273682]
[272.80441284 164.28144836]
[258.20874023 160.82221985]
[243.61306763 157.36297607]
[229.01737976 153.90374756]
[226.48034668 155.41369629]
[223.14749146 155.92776489]
[219.42738342 155.11958313]
[215.84513855 152.82939148]
[212.97648621 149.10140991]
[198.88108826 143.97109985]
[184.78570557 138.84080505]
[170.69030762 133.71051025]
[156.59492493 128.58020020]
[150.38972473 138.47972107]
[142.47337341 147.07255554]
[133.11471558 154.06689453]
[122.63154602 159.22521973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[25 51]
[26 50]
[27 49]
[28 48]
[33 45]
[34 44]
[35 43]
[36 42]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 94]
[77 93]
[78 92]
[79 91]
[81 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
