%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGCCAUGGCAACCCCGGGGUUCGUUCCACUUCCCCACCCAGCCGAUCUCCCCCCUCCUCCCUGCACUGCAGCCAACCGGCUUGUGCGCGUCCCAGGAGCGCGCUAUAAAACCUGUGCUGGGCGUGAUCGGCAAGCACCGGACCAGGGGGAAGGCGAGCAGUGCCAAUCUACAGCGAAGAAAGUCUCGUUUGGUAAAAGCGAGAGGGGAAAGCCUGAGC\
) } def
/len { sequence length } bind def

/coor [
[113.32657623 377.69284058]
[98.52931213 383.89129639]
[84.52700043 376.06091309]
[82.06101990 360.20849609]
[93.02305603 348.49468994]
[93.87168121 333.51870728]
[94.61432648 318.53710938]
[95.25093842 303.55062866]
[92.39666748 296.73995972]
[96.00408936 288.35702515]
[96.85271454 273.38104248]
[97.70133972 258.40505981]
[85.97455597 246.34507751]
[86.61498260 229.19769287]
[99.71443939 217.59777832]
[100.35105896 202.61129761]
[100.98767853 187.62481689]
[101.62429047 172.63832092]
[87.95586395 166.45980835]
[77.12652588 176.83888245]
[66.29718018 187.21797180]
[55.46784210 197.59706116]
[60.25096130 212.09135437]
[58.26304626 227.22445679]
[49.89880753 239.99168396]
[36.81896591 247.85810852]
[21.62053490 249.26182556]
[7.32117176 243.92413330]
[-3.23997259 232.90483093]
[-7.96597528 218.39181519]
[-5.91848612 203.26664734]
[2.49596572 190.53245544]
[15.60668373 182.71760559]
[30.81052589 181.37374878]
[45.08875656 186.76771545]
[55.91809845 176.38862610]
[66.74744415 166.00955200]
[77.57678223 155.63046265]
[60.48023224 140.63262939]
[51.06007385 121.32440948]
[49.92659760 101.12983704]
[56.30729294 83.26393127]
[68.30211639 70.22299194]
[83.30792236 63.43732071]
[79.73404694 48.86929703]
[76.05718231 34.32692337]
[72.27751160 19.81092834]
[67.09068298 12.30199718]
[68.54860687 5.06276131]
[64.97473145 -9.50526524]
[61.40085220 -24.07329178]
[50.59836197 -35.63256454]
[55.08045959 -49.83679199]
[51.50658035 -64.40481567]
[47.93270111 -78.97284698]
[44.35882568 -93.54087067]
[40.78494644 -108.10889435]
[37.21106720 -122.67692566]
[23.97769356 -130.89370728]
[20.56080055 -145.71867371]
[28.47580528 -158.28402710]
[24.90192604 -172.85206604]
[21.32804871 -187.42008972]
[2.18797898 -180.68858337]
[-22.08704185 -187.88795471]
[-41.87230301 -211.30268860]
[-55.79063797 -216.89553833]
[-72.74201202 -217.19093323]
[-77.15077209 -233.56161499]
[-62.64033127 -242.32994080]
[-50.19779205 -230.81387329]
[-36.27945709 -225.22102356]
[-28.87155724 -238.26416016]
[-40.80408859 -247.35342407]
[-52.73662186 -256.44268799]
[-64.66915131 -265.53195190]
[-80.99534607 -267.07708740]
[-87.57334137 -282.09915161]
[-77.63626099 -295.14468384]
[-61.40652466 -292.79360962]
[-55.57988739 -277.46447754]
[-43.64735794 -268.37521362]
[-31.71482658 -259.28594971]
[-19.78229523 -250.19668579]
[-13.91383553 -254.86692810]
[3.69154429 -268.87765503]
[-2.48697448 -282.54608154]
[-8.66549301 -296.21450806]
[-14.84401226 -309.88293457]
[-21.02253151 -323.55136108]
[-27.20104980 -337.21978760]
[-33.58228683 -343.74414062]
[-33.36876297 -351.12564087]
[-39.35324478 -364.88012695]
[-52.85268021 -374.19125366]
[-51.26918411 -390.51379395]
[-36.23172379 -397.05648804]
[-23.20954895 -387.08877563]
[-25.59875488 -370.86459351]
[-19.61427307 -357.11010742]
[-13.53262234 -343.39831543]
[-7.35410309 -329.72988892]
[-1.17558444 -316.06146240]
[5.00293446 -302.39303589]
[11.18145275 -288.72460938]
[17.35997200 -275.05618286]
[24.85527802 -274.79089355]
[25.38584328 -289.78152466]
[25.91640663 -304.77212524]
[26.44696999 -319.76272583]
[26.97778320 -334.75335693]
[41.96837997 -334.22229004]
[41.43758392 -319.23217773]
[40.90702057 -304.24154663]
[40.37645721 -289.25094604]
[39.84589386 -274.26034546]
[47.34119797 -273.99505615]
[54.47058105 -287.19247437]
[61.59996414 -300.38989258]
[68.72934723 -313.58731079]
[75.85873413 -326.78472900]
[75.61035156 -342.60397339]
[88.46701813 -350.12432861]
[88.21864319 -365.94357300]
[101.07530975 -373.46389771]
[108.20468903 -386.66131592]
[107.19999695 -403.02966309]
[121.02058411 -411.85708618]
[135.44900513 -404.06271362]
[135.64256287 -387.66470337]
[121.40211487 -379.53195190]
[114.27272797 -366.33453369]
[115.03105164 -351.45922852]
[101.66444397 -342.99493408]
[102.42276001 -328.11965942]
[89.05615234 -319.65533447]
[81.92677307 -306.45791626]
[74.79738617 -293.26049805]
[67.66799927 -280.06307983]
[60.53862000 -266.86566162]
[68.18092346 -212.43289185]
[35.89607620 -190.99397278]
[39.46995163 -176.42593384]
[43.04383087 -161.85791016]
[55.87538910 -154.38217163]
[59.70734024 -139.65902710]
[51.77909088 -126.25080109]
[55.35297012 -111.68277740]
[58.92684937 -97.11474609]
[62.50072861 -82.54672241]
[66.07460785 -67.97869873]
[69.64848328 -53.41067123]
[80.19535065 -42.89339828]
[75.96887970 -27.64717102]
[79.54275513 -13.07914352]
[83.11663818 1.48888242]
[86.79350281 16.03125572]
[90.57317352 30.54725075]
[95.29665375 36.22359085]
[94.30207062 45.29541779]
[97.87595367 59.86344528]
[125.72087097 60.91566467]
[150.07662964 81.50196838]
[157.62603760 116.63695526]
[172.50454712 118.54222107]
[187.38305664 120.44748688]
[197.22567749 108.56782532]
[211.93534851 103.91712952]
[226.81828308 107.97940826]
[237.12536621 119.45841217]
[239.56765747 134.69123840]
[233.36582947 148.81712341]
[220.49887085 157.32858276]
[205.07257080 157.50961304]
[192.00939941 149.30245972]
[185.47778320 135.32598877]
[170.59928894 133.42073059]
[155.72077942 131.51545715]
[152.24981689 138.16395569]
[165.54679871 145.10586548]
[180.33815002 147.59904480]
[182.53775024 162.43690491]
[169.10581970 169.11396790]
[158.60488892 158.40284729]
[145.30790710 151.46093750]
[141.83694458 158.10943604]
[151.90541077 169.22814941]
[161.97389221 180.34687805]
[172.04235840 191.46559143]
[182.11082458 202.58432007]
[192.17929077 213.70303345]
[202.24775696 224.82176208]
[212.31622314 235.94047546]
[228.20393372 238.16766357]
[236.24409485 252.05058289]
[230.26901245 266.93942261]
[214.86222839 271.41275024]
[201.84252930 262.03903198]
[201.19750977 246.00894165]
[191.12904358 234.89022827]
[181.06056213 223.77149963]
[170.99209595 212.65278625]
[160.92362976 201.53405762]
[150.85516357 190.41534424]
[140.78669739 179.29661560]
[130.71823120 168.17790222]
[116.61077881 173.27494812]
[115.97415924 188.26142883]
[115.33753967 203.24790955]
[114.70092010 218.23439026]
[124.89044189 227.03543091]
[128.10621643 239.90953064]
[123.39223480 252.10530090]
[112.67731476 259.25369263]
[111.82868958 274.22967529]
[110.98006439 289.20565796]
[110.23742676 304.18725586]
[109.60080719 319.17373657]
[112.36149597 327.87234497]
[108.84765625 334.36734009]
[107.99903107 349.34332275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 221]
[6 220]
[7 218]
[8 217]
[10 216]
[11 215]
[12 214]
[15 210]
[16 209]
[17 208]
[18 207]
[19 38]
[20 37]
[21 36]
[22 35]
[44 161]
[45 160]
[46 158]
[47 157]
[49 156]
[50 155]
[51 154]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[61 144]
[62 143]
[63 142]
[66 72]
[67 71]
[73 84]
[74 83]
[75 82]
[76 81]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[93 100]
[94 99]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[123 134]
[125 132]
[126 131]
[164 178]
[165 177]
[166 176]
[186 206]
[187 205]
[188 204]
[189 203]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
