%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCACCCUGGCAACCGCGGCGUGACUACGGCGCGCGCGGUCUGGGCGCGGACGGGUGGGGCCGGGCGGUGCCGGUGCGGGCUGGGGCAGUGCAGUGAGUAGCGGUCUUGGGGUGUGCGAUCUCGCUGAGCCUCCUCACACGGUUCGUCGUCUCGGGUUCGAGCCCAGUGGGCUUAGCCACUCGCC\
) } def
/len { sequence length } bind def

/coor [
[86.70300293 174.92295837]
[86.03553772 190.21391296]
[78.32843781 203.43734741]
[65.35275269 211.55462646]
[50.09019852 212.70045471]
[36.04799271 206.61152649]
[26.45293236 194.68704224]
[23.50989342 179.66714478]
[27.89516640 165.00331116]
[38.60104752 154.06518555]
[53.16740036 149.36625671]
[55.66233826 134.57519531]
[58.15727997 119.78414154]
[51.80208969 115.80148315]
[32.73651886 103.85351562]
[20.51347733 112.54817963]
[8.29043293 121.24284363]
[-3.93261051 129.93751526]
[-16.15565491 138.63217163]
[-28.37869835 147.32684326]
[-40.52866745 156.12332153]
[-52.60472107 165.02102661]
[-64.68077087 173.91871643]
[-76.75682068 182.81642151]
[-77.56271362 198.43321228]
[-88.25612640 209.84307861]
[-103.78796387 211.65861511]
[-116.82455444 203.02256775]
[-121.21043396 188.01263428]
[-114.87471771 173.71603394]
[-100.80892944 166.88319397]
[-85.65451813 170.74035645]
[-73.57846832 161.84266663]
[-61.50241470 152.94497681]
[-49.42636490 144.04727173]
[-45.89931107 137.53546143]
[-37.07336426 135.10379028]
[-24.85031891 126.40912628]
[-12.62727547 117.71446228]
[-0.40423217 109.01979828]
[11.81881142 100.32513428]
[24.04185486 91.63047028]
[95.77305603 88.64952087]
[90.68853760 73.66759491]
[100.62182617 62.56898117]
[103.36357117 47.82168198]
[106.10531616 33.07438278]
[108.84706879 18.32708549]
[111.58881378 3.57978606]
[114.20725250 -11.18990517]
[116.70219421 -25.98095894]
[119.19712830 -40.77201462]
[121.69207001 -55.56306839]
[124.18701172 -70.35411835]
[118.85286713 -85.24900055]
[128.59930420 -96.51204681]
[130.97058105 -111.32342529]
[133.21801758 -126.15410614]
[135.46545410 -140.98478699]
[137.71289062 -155.81546021]
[139.96031189 -170.64614868]
[142.20774841 -185.47682190]
[140.14669800 -191.79266357]
[141.40922546 -197.35937500]
[144.78607178 -200.76219177]
[147.52781677 -215.50949097]
[150.26957703 -230.25679016]
[153.01132202 -245.00408936]
[137.12910461 -257.55380249]
[136.97204590 -282.96890259]
[129.98413086 -296.24179077]
[116.70875549 -304.84848022]
[117.62602997 -319.71481323]
[110.63811493 -332.98767090]
[103.65019989 -346.26052856]
[96.66228485 -359.53341675]
[89.67436981 -372.80627441]
[75.52166748 -381.09078979]
[75.89046478 -397.48577881]
[90.40138245 -405.12551880]
[104.12682343 -396.15084839]
[102.94723511 -379.79418945]
[109.93515015 -366.52133179]
[116.92306519 -353.24844360]
[123.91098022 -339.97558594]
[130.89889526 -326.70272827]
[143.67445374 -319.04541016]
[143.25700378 -303.22970581]
[150.24491882 -289.95681763]
[157.73548889 -289.58099365]
[158.48739624 -304.56213379]
[173.46853638 -303.80996704]
[172.71664429 -288.82934570]
[180.20721436 -288.45349121]
[188.48860168 -300.96026611]
[196.76997375 -313.46701050]
[205.05134583 -325.97375488]
[213.33273315 -338.48049927]
[221.61410522 -350.98724365]
[229.89547729 -363.49401855]
[226.09431458 -380.55969238]
[235.61590576 -394.81933594]
[252.17051697 -397.73171997]
[260.24176025 -410.37509155]
[268.31298828 -423.01849365]
[265.12060547 -438.26467896]
[273.48608398 -450.97189331]
[288.04067993 -453.92138672]
[296.11190796 -466.56475830]
[299.53823853 -483.16888428]
[316.44195557 -484.47293091]
[322.37445068 -468.59078979]
[308.75527954 -458.49353027]
[300.68405151 -445.85015869]
[304.13510132 -431.40628052]
[296.12985229 -418.46911621]
[280.95635986 -414.94723511]
[272.88513184 -402.30386353]
[264.81390381 -389.66046143]
[269.32568359 -377.57864380]
[265.99935913 -364.91674805]
[255.83412170 -356.36154175]
[242.40223694 -355.21261597]
[234.12084961 -342.70587158]
[225.83947754 -330.19912720]
[217.55810547 -317.69238281]
[209.27671814 -305.18563843]
[200.99534607 -292.67886353]
[192.71397400 -280.17211914]
[188.77398682 -251.48497009]
[167.75862122 -242.26232910]
[165.01687622 -227.51502991]
[162.27511597 -212.76773071]
[159.53337097 -198.02043152]
[157.03843689 -183.22938538]
[154.79100037 -168.39871216]
[152.54356384 -153.56802368]
[150.29612732 -138.73735046]
[148.04869080 -123.90666962]
[145.80125427 -109.07598877]
[147.91178894 -101.97743988]
[143.39035034 -94.01710510]
[148.90295410 -80.18018341]
[138.97805786 -67.85918427]
[136.48312378 -53.06812668]
[133.98818970 -38.27707291]
[131.49324036 -23.48601913]
[128.99830627 -8.69496536]
[130.98992920 -1.56214023]
[126.33611298 6.32153416]
[123.59436798 21.06883240]
[120.85261536 35.81613159]
[118.11087036 50.56343079]
[115.36912537 65.31072998]
[120.64974213 79.23783875]
[110.52034760 91.39127350]
[113.99765015 105.98265076]
[123.09589386 117.90834045]
[132.19413757 129.83403015]
[141.29237366 141.75970459]
[149.00161743 146.69711304]
[150.44102478 153.96154785]
[159.33872986 166.03759766]
[168.23641968 178.11364746]
[177.13412476 190.18969727]
[186.03181458 202.26574707]
[194.92950439 214.34179688]
[209.19268799 223.50683594]
[204.33425903 239.74974060]
[187.38117981 239.57766724]
[182.85345459 223.23948669]
[173.95576477 211.16343689]
[165.05805969 199.08738708]
[156.16036987 187.01133728]
[147.26268005 174.93528748]
[138.36497498 162.85923767]
[129.36669922 150.85795593]
[120.26845551 138.93226624]
[111.17021179 127.00657654]
[102.07196808 115.08089447]
[94.79106140 116.88043976]
[98.38993073 131.44232178]
[83.82800293 135.04095459]
[80.22924042 120.47953796]
[72.94833374 122.27908325]
[70.45339203 137.07014465]
[67.95845032 151.86119080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 187]
[12 186]
[13 185]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 35]
[22 34]
[23 33]
[24 32]
[43 156]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[56 142]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[65 134]
[66 133]
[67 132]
[68 131]
[70 89]
[71 88]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
[103 119]
[104 118]
[105 117]
[108 114]
[109 113]
[157 180]
[158 179]
[159 178]
[160 177]
[162 176]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
