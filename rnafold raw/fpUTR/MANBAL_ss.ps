%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAACUACUUCCGGGGGAGCGGCGCGGCGGCGCGGGAGGAUCUCUCACCCCGUCACUCAGGGUGGCGCAAUCACGACUCAUUGGCUCACUGCAGCCUAGACCUCCCAGCUGGAGCAAUUCUCCUGCCUCAGCCUUCUGAGUAGCUGGGACUACAGUUGGUUCUAAAGAGUGGUGAGUCAGAAGAGACGUCAGGCAGCAAGCGACUUGGGCC\
) } def
/len { sequence length } bind def

/coor [
[82.68588257 163.55444336]
[75.19322205 163.88618469]
[71.90164185 178.52058411]
[68.61006165 193.15498352]
[65.31848907 207.78936768]
[70.71560669 223.27494812]
[59.79984283 235.51335144]
[43.80040359 231.91473389]
[39.17613602 216.18107605]
[50.68409348 204.49780273]
[53.97566986 189.86340332]
[57.26724625 175.22900391]
[60.55882645 160.59460449]
[48.15634918 152.15786743]
[35.75387192 160.59460449]
[23.35139465 169.03135681]
[10.94891834 177.46809387]
[13.05223370 185.53048706]
[12.18559551 194.27536011]
[8.14881516 202.59107971]
[1.16076362 209.31877136]
[-8.13591766 213.41014099]
[-18.72907448 214.08132935]
[-29.90580559 224.08535767]
[-41.08253860 234.08940125]
[-52.25926971 244.09342957]
[-56.85597610 259.83517456]
[-72.84909058 263.46179199]
[-83.78626251 251.24252319]
[-78.41627502 235.74751282]
[-62.26330185 232.91670227]
[-51.08657074 222.91265869]
[-39.90983963 212.90863037]
[-28.73310661 202.90460205]
[-36.51864624 190.08331299]
[-50.54991531 195.38647461]
[-64.58118439 200.68962097]
[-78.61245728 205.99278259]
[-92.64372253 211.29594421]
[-105.32228851 222.55162048]
[-119.64786530 213.48442078]
[-114.90073395 197.20864868]
[-97.94688416 197.26467896]
[-83.91561127 191.96151733]
[-69.88433838 186.65835571]
[-55.85307312 181.35519409]
[-41.82180405 176.05204773]
[-20.56895065 157.93829346]
[2.51217866 165.06561279]
[14.91465569 156.62887573]
[27.31713295 148.19213867]
[39.71960831 139.75540161]
[36.75257874 125.05176544]
[22.04895020 122.08473969]
[7.34531975 119.11770630]
[-7.35831022 116.15068054]
[-22.06194115 113.18364716]
[-36.76557159 110.21662140]
[-53.48773193 113.01048279]
[-60.80156708 97.71525574]
[-48.12874603 86.45310211]
[-33.79854202 95.51299286]
[-19.09491158 98.48001862]
[-4.39128160 101.44705200]
[10.31234837 104.41407776]
[25.01597977 107.38110352]
[39.71960831 110.34813690]
[42.62279129 90.79611969]
[51.37075424 74.17906952]
[64.41222382 62.07474136]
[79.83444977 55.38969803]
[95.62352753 54.30414581]
[109.91902924 58.31023788]
[121.23148346 66.33356476]
[131.48033142 55.38087845]
[141.72915649 44.42819214]
[145.50859070 29.06504059]
[159.85418701 25.05840874]
[170.10302734 14.10572243]
[180.35186768 3.15303659]
[184.10845947 -14.87459373]
[201.08677673 -19.31607437]
[211.17295837 -30.41872597]
[221.25914001 -41.52137756]
[231.34532166 -52.62403107]
[241.43151855 -63.72668076]
[251.51770020 -74.82933044]
[261.60388184 -85.93198395]
[271.69006348 -97.03463745]
[281.77624512 -108.13729095]
[291.86242676 -119.23994446]
[301.94860840 -130.34259033]
[312.03479004 -141.44525146]
[307.47058105 -156.04371643]
[310.80429077 -170.86880493]
[321.04290771 -181.96101379]
[335.36312866 -186.40933228]
[349.88934326 -183.11468506]
[359.97552490 -194.21734619]
[370.06170654 -205.31999207]
[380.14788818 -216.42265320]
[390.15191650 -227.59938049]
[400.07327271 -238.84957886]
[409.31399536 -250.66520691]
[417.84194946 -263.00512695]
[426.36993408 -275.34503174]
[434.89791870 -287.68496704]
[443.42587280 -300.02490234]
[451.95385742 -312.36480713]
[460.48181152 -324.70474243]
[469.00979614 -337.04464722]
[475.82949829 -350.40472412]
[480.82098389 -364.54986572]
[485.81243896 -378.69503784]
[490.80389404 -392.84017944]
[485.20614624 -407.87496948]
[493.59384155 -421.55072021]
[509.53265381 -423.37658691]
[520.79571533 -411.95187378]
[518.74291992 -396.04071045]
[504.94903564 -387.84872437]
[499.95758057 -373.70358276]
[494.96612549 -359.55841064]
[489.97467041 -345.41326904]
[496.23745728 -341.28680420]
[509.64743042 -348.00784302]
[508.76300049 -333.03390503]
[515.02575684 -328.90747070]
[526.05377197 -339.07525635]
[537.08172607 -349.24304199]
[548.10968018 -359.41082764]
[559.13763428 -369.57861328]
[563.50170898 -385.38644409]
[579.43957520 -389.24853516]
[590.55578613 -377.19192505]
[585.41491699 -361.61938477]
[569.30541992 -358.55065918]
[558.27746582 -348.38287354]
[547.24951172 -338.21508789]
[536.22155762 -328.04727173]
[525.19354248 -317.87948608]
[497.35305786 -314.67568970]
[481.34973145 -328.51669312]
[472.82174683 -316.17675781]
[464.29376221 -303.83685303]
[455.76580811 -291.49691772]
[447.23782349 -279.15698242]
[438.70986938 -266.81707764]
[430.18188477 -254.47714233]
[421.65390015 -242.13722229]
[436.19384766 -245.82371521]
[450.16571045 -240.36596680]
[458.35708618 -227.80007935]
[457.71203613 -212.81394958]
[448.47122192 -200.99839783]
[434.08206177 -196.76139832]
[419.91265869 -201.68362427]
[411.24914551 -213.92877197]
[411.32345581 -228.92823792]
[401.40213013 -217.67803955]
[399.33593750 -210.58326721]
[391.25054932 -206.33645630]
[381.16436768 -195.23381042]
[371.07815552 -184.13116455]
[360.99197388 -173.02850342]
[365.66198730 -158.88436890]
[362.60488892 -144.20410156]
[352.54367065 -132.95072937]
[338.10577393 -128.21322632]
[323.13745117 -131.35905457]
[313.05126953 -120.25640869]
[302.96508789 -109.15375519]
[292.87890625 -98.05110931]
[282.79272461 -86.94845581]
[272.70654297 -75.84580231]
[262.62036133 -64.74314880]
[252.53416443 -53.64049911]
[242.44798279 -42.53784561]
[232.36180115 -31.43519402]
[222.27560425 -20.33254051]
[212.18942261 -9.22988892]
[212.45590210 2.86276937]
[204.14512634 12.19499493]
[191.30455017 13.40187359]
[181.05570984 24.35456085]
[170.80688477 35.30724716]
[167.76051331 49.88698959]
[152.68185425 54.67703247]
[142.43301392 65.62971497]
[132.18417358 76.58240509]
[146.92179871 99.83000946]
[143.92799377 131.47830200]
[119.45007324 157.98710632]
[124.02216339 172.27331543]
[128.59425354 186.55953979]
[139.68142700 193.14826965]
[143.19595337 205.14024353]
[137.77729797 215.95419312]
[142.13818359 230.30628967]
[146.49906921 244.65838623]
[150.85995483 259.01049805]
[161.24998474 272.40765381]
[151.25263977 286.10031128]
[135.32752991 280.28417969]
[136.50785828 263.37136841]
[132.14697266 249.01927185]
[127.78609467 234.66717529]
[123.42520905 220.31507874]
[109.98377228 209.03157043]
[114.30802917 191.13162231]
[109.73594666 176.84541321]
[105.16385651 162.55918884]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[14 52]
[15 51]
[16 50]
[17 49]
[23 34]
[24 33]
[25 32]
[26 31]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[74 190]
[75 189]
[76 188]
[78 186]
[79 185]
[80 184]
[82 181]
[83 180]
[84 179]
[85 178]
[86 177]
[87 176]
[88 175]
[89 174]
[90 173]
[91 172]
[92 171]
[93 170]
[98 165]
[99 164]
[100 163]
[101 162]
[102 160]
[103 159]
[104 150]
[105 149]
[106 148]
[107 147]
[108 146]
[109 145]
[110 144]
[111 143]
[112 124]
[113 123]
[114 122]
[115 121]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[193 212]
[194 211]
[195 210]
[198 208]
[199 207]
[200 206]
[201 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
