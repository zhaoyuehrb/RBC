%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUUUCCAUGGUGACCAGGCUGCGCGUCCUCCUUGCGGCAGCGCGUGGAGUGCGGCGUCCUGGAGCUGCGGAUGAGUGGACUUUUUUCUCUCUUUUGGGGACAGGAUAAAAA\
) } def
/len { sequence length } bind def

/coor [
[108.62560272 256.98495483]
[120.13768768 246.71484375]
[117.69004822 231.91587830]
[115.04049683 217.15174866]
[112.18953705 202.42517090]
[109.33857727 187.69859314]
[106.48761749 172.97201538]
[103.63665771 158.24543762]
[100.78569031 143.51885986]
[97.93473053 128.79229736]
[75.54325867 115.33392334]
[73.18375397 89.31588745]
[61.17005539 80.33418274]
[49.15636063 71.35247040]
[36.21263123 72.40915680]
[26.36949539 64.56868744]
[24.62142372 52.51328278]
[12.85754204 43.20677567]
[1.09366024 33.90026855]
[-10.67022133 24.59375954]
[-22.43410301 15.28725147]
[-38.05749130 12.79320240]
[-43.23848343 -1.17127383]
[-55.00236511 -10.47778225]
[-66.76624298 -19.78429031]
[-75.56573486 -22.71184731]
[-78.71977234 -29.50920486]
[-90.22505951 -39.13356781]
[-101.73034668 -48.75793076]
[-117.27977753 -51.67779922]
[-122.07740021 -65.77858734]
[-133.58268738 -75.40294647]
[-145.08796692 -85.02731323]
[-156.59326172 -94.65167236]
[-172.14270020 -97.57154083]
[-176.94032288 -111.67232513]
[-188.44560242 -121.29669189]
[-199.95088196 -130.92105103]
[-211.45617676 -140.54542542]
[-227.69483948 -142.83404541]
[-233.58041382 -158.14064026]
[-223.05831909 -170.71910095]
[-206.95278931 -167.62977600]
[-201.83181763 -152.05070496]
[-190.32652283 -142.42634583]
[-178.82124329 -132.80197144]
[-167.31594849 -123.17761230]
[-152.58944702 -120.94614410]
[-146.96890259 -106.15695953]
[-135.46360779 -96.53260040]
[-123.95832062 -86.90823364]
[-112.45303345 -77.28386688]
[-97.72653198 -75.05239868]
[-92.10597992 -60.26321793]
[-80.60069275 -50.63885498]
[-69.09540558 -41.01449203]
[-57.45973587 -31.54817200]
[-45.69585419 -22.24166298]
[-33.93197250 -12.93515491]
[-19.15001678 -11.10676956]
[-13.12759399 3.52337027]
[-1.36371267 12.82987881]
[10.40016842 22.13638687]
[22.16404915 31.44289589]
[33.92793274 40.74940491]
[51.35083771 42.28904343]
[58.13806534 59.33877563]
[70.15176392 68.32048035]
[82.16545868 77.30219269]
[88.92538452 73.34265137]
[96.50101471 71.34658051]
[104.33435822 71.46099854]
[111.84845734 73.67747498]
[118.48985291 77.83275604]
[123.76936340 83.62078094]
[127.29811859 90.61523438]
[142.26315308 89.59159851]
[157.22817993 88.56796265]
[170.46817017 79.90693665]
[183.69378662 86.75765991]
[198.65881348 85.73402405]
[213.62385559 84.71038818]
[225.20870972 73.61216736]
[241.08885193 75.89266968]
[249.08238220 89.80248260]
[243.05735779 104.67119598]
[227.63565063 109.09280396]
[214.64749146 99.67542267]
[199.68244934 100.69905853]
[184.71742249 101.72269440]
[172.54783630 110.31049347]
[158.25181580 103.53298950]
[143.28678894 104.55662537]
[128.32176208 105.58026123]
[126.29724121 111.90447235]
[122.88113403 117.59872437]
[118.25420380 122.36169434]
[112.66130829 125.94132996]
[115.51226807 140.66790771]
[118.36322784 155.39448547]
[121.21418762 170.12104797]
[124.06514740 184.84762573]
[126.91611481 199.57420349]
[129.76707458 214.30078125]
[134.52981567 222.25802612]
[132.48899841 229.46824646]
[134.93664551 244.26719666]
[149.14244080 250.28376770]
[157.82142639 263.03833008]
[158.20417786 278.46093750]
[150.16854858 291.63031006]
[136.27870178 298.34414673]
[120.96681976 296.46005249]
[109.11886597 286.57928467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[4 104]
[5 103]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[12 69]
[13 68]
[14 67]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[23 59]
[24 58]
[25 57]
[27 56]
[28 55]
[29 54]
[31 52]
[32 51]
[33 50]
[34 49]
[36 47]
[37 46]
[38 45]
[39 44]
[76 94]
[77 93]
[78 92]
[80 90]
[81 89]
[82 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
