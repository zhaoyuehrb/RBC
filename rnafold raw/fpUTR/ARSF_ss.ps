%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGAGACAGGCUCUCACCAUGUUGACCAGGCUGGUCUCGAACUCCCGACCUCAAGUGAUCCGCCGGCCUCGGCCUCCCAAAGUGCUGGGAUUACAGGCGUGAACCACCACUCCUGGCCCUUCUGUUACUUUUCCACUGCUGUUGAGAUAGAAGUCACUGUUGGGAUCCAACCUUUUUGUUUGUAUAAACUGACAACAAGAAGGUAUUCCAAGCUGCACA\
) } def
/len { sequence length } bind def

/coor [
[145.00794983 423.86856079]
[151.05427551 408.02944946]
[151.05427551 393.02944946]
[151.05427551 378.02944946]
[136.80824280 373.33364868]
[127.88874054 385.39361572]
[118.96924591 397.45358276]
[110.04975128 409.51351929]
[101.13024902 421.57348633]
[99.14498138 437.26965332]
[85.35615540 442.90148926]
[76.43665314 454.96142578]
[67.51715851 467.02139282]
[58.59766006 479.08135986]
[57.21826172 499.19778442]
[39.15793228 506.11810303]
[30.58329201 518.42565918]
[22.00864792 530.73321533]
[25.03610802 546.24481201]
[16.13930511 559.30706787]
[0.59655368 562.17034912]
[-12.37090588 553.13592529]
[-15.06971073 537.56378174]
[-5.89870739 524.69256592]
[9.70110989 522.15856934]
[18.27575302 509.85101318]
[26.85039520 497.54348755]
[24.15608406 487.69702148]
[27.39016151 477.78332520]
[35.71553040 471.14596558]
[46.53770447 470.16186523]
[55.45719910 458.10189819]
[64.37670135 446.04193115]
[73.29619598 433.98199463]
[74.64348602 419.14843750]
[89.07029724 412.65399170]
[97.98979187 400.59402466]
[106.90928650 388.53408813]
[115.82878876 376.47412109]
[124.74828339 364.41415405]
[110.63925934 344.68725586]
[106.70948029 322.07247925]
[112.64378357 301.24597168]
[126.19301605 286.05078125]
[143.81927490 278.78878784]
[141.70365906 263.93875122]
[139.58804321 249.08868408]
[137.47242737 234.23863220]
[135.35679626 219.38856506]
[133.24118042 204.53851318]
[131.12556458 189.68846130]
[128.97592163 187.90115356]
[127.40178680 185.15806580]
[126.76947784 181.67309570]
[127.36157990 177.78820801]
[129.33511353 173.94094849]
[128.06303406 158.99499512]
[126.79093933 144.04902649]
[125.51885223 129.10305786]
[124.24676514 114.15710449]
[120.85498047 136.15277100]
[100.22936249 155.39575195]
[65.99076080 160.10047913]
[28.91698074 142.29679871]
[15.07918358 136.50755310]
[1.24138498 130.71830750]
[-12.59641361 124.92906189]
[-28.78515053 127.54761505]
[-38.93612289 114.66779327]
[-32.60688019 99.53925323]
[-16.30840302 97.72494507]
[-6.80716991 111.09126282]
[7.03062820 116.88050842]
[20.86842728 122.66975403]
[34.70622635 128.45899963]
[38.99354553 122.30522919]
[51.85551071 103.84391785]
[41.63071060 92.86878967]
[31.40591049 81.89366150]
[21.18111229 70.91853333]
[10.95631218 59.94340134]
[-4.84496641 59.63493347]
[-15.73966694 48.18587112]
[-15.26415825 32.38873672]
[-3.70054984 21.61569214]
[12.09067345 22.25819206]
[22.74085999 33.93505096]
[21.93144226 49.71860123]
[32.15624237 60.69372940]
[42.38104248 71.66886139]
[52.60583878 82.64398956]
[62.83063889 93.61911774]
[69.62045288 90.43345642]
[70.89250946 75.48749542]
[83.20008087 84.06214142]
[89.98989105 80.87648010]
[88.08462524 65.99797058]
[86.17935944 51.11946869]
[84.27409363 36.24095917]
[74.84659576 23.53533936]
[80.90463257 9.92837715]
[78.99936676 -4.95012951]
[77.09410095 -19.82863617]
[64.43812561 -29.29446030]
[62.26507187 -44.94864273]
[71.86417389 -57.50382996]
[87.54045868 -59.51125717]
[99.99345398 -49.77994919]
[101.83502960 -34.08332062]
[91.97260284 -21.73390388]
[93.87787628 -6.85539675]
[95.78314209 8.02310944]
[105.07436371 19.66452217]
[99.15260315 34.33569336]
[101.05786896 49.21419907]
[102.96313477 64.09270477]
[104.86840057 78.97121429]
[111.99142456 81.31909943]
[123.18090057 71.32932281]
[126.23746490 86.01487732]
[133.36048889 88.36277008]
[143.73956299 77.53342438]
[154.11865234 66.70408630]
[164.49772644 55.87474442]
[174.87681580 45.04540253]
[185.25590515 34.21606064]
[195.63497925 23.38671875]
[206.01406860 12.55737686]
[191.18379211 10.30724621]
[183.57077026 -2.61722398]
[188.79273987 -16.67891121]
[202.99633789 -21.50152969]
[215.70057678 -13.52641106]
[217.53056335 1.36229253]
[228.64929199 -8.70617580]
[233.68511963 -23.70454025]
[248.31269836 -26.51222420]
[259.43142700 -36.58069229]
[263.93707275 -52.34873581]
[279.90896606 -56.06773376]
[290.91656494 -43.91189575]
[285.63623047 -28.38611031]
[269.49990845 -25.46197319]
[258.38116455 -15.39350414]
[254.14062500 -1.11530304]
[238.71775818 2.41254473]
[227.59904480 12.48101330]
[216.84339905 22.93646049]
[206.46432495 33.76580048]
[196.08523560 44.59514236]
[185.70616150 55.42448425]
[175.32707214 66.25382233]
[164.94798279 77.08316803]
[154.56890869 87.91250610]
[144.18981934 98.74185181]
[139.19273376 112.88500977]
[140.46481323 127.83097076]
[141.73690796 142.77693176]
[143.00898743 157.72290039]
[144.28108215 172.66885376]
[145.97561646 187.57284546]
[148.09123230 202.42289734]
[150.20684814 217.27294922]
[152.32247925 232.12300110]
[154.43809509 246.97306824]
[156.55371094 261.82312012]
[158.66934204 276.67318726]
[177.42607117 278.62176514]
[194.58961487 289.15527344]
[206.23175049 307.13540649]
[209.17195129 329.64804077]
[201.76155090 352.46337891]
[213.82151794 361.38287354]
[225.88146973 370.30236816]
[237.94142151 379.22186279]
[250.00138855 388.14135742]
[262.06134033 397.06085205]
[274.12130737 405.98034668]
[286.18124390 414.89984131]
[298.24121094 423.81933594]
[310.30117798 432.73886108]
[322.36111450 441.65835571]
[331.11392212 444.24209595]
[334.52743530 450.79037476]
[346.45996094 459.87963867]
[361.28308105 455.29113770]
[375.96142578 460.32360840]
[384.85086060 473.04202271]
[384.53320312 488.55584717]
[375.13061523 500.89971924]
[360.25860596 505.32714844]
[345.63571167 500.13571167]
[336.88476562 487.32162476]
[337.37069702 471.81216431]
[325.43817139 462.72290039]
[313.44161987 453.71829224]
[301.38168335 444.79879761]
[289.32171631 435.87930298]
[277.26174927 426.95980835]
[265.20181274 418.04031372]
[253.14184570 409.12081909]
[241.08187866 400.20132446]
[229.02192688 391.28182983]
[216.96197510 382.36233521]
[204.90200806 373.44281006]
[192.84205627 364.52331543]
[186.14511108 367.89984131]
[192.89816284 381.29373169]
[199.65122986 394.68762207]
[206.40428162 408.08151245]
[216.96562195 418.73318481]
[210.09875488 432.06909180]
[195.29362488 429.65911865]
[193.01039124 414.83456421]
[186.25733948 401.44067383]
[179.50428772 388.04678345]
[172.75122070 374.65292358]
[166.05427551 378.02944946]
[166.05427551 393.02944946]
[166.05427551 408.02944946]
[172.10061646 423.86856079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 220]
[3 219]
[4 218]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[11 34]
[12 33]
[13 32]
[14 31]
[16 27]
[17 26]
[18 25]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[64 75]
[65 74]
[66 73]
[67 72]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[96 117]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[121 155]
[122 154]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[134 147]
[135 146]
[137 144]
[138 143]
[172 206]
[173 205]
[174 204]
[175 203]
[176 202]
[177 201]
[178 200]
[179 199]
[180 198]
[181 197]
[182 196]
[184 195]
[185 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
