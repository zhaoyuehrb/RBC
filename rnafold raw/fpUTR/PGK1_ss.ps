%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGCAGCGGCCGGGAAGGGGCGGUGCGGGAGGCGGGGUGUGGGGCGGUAGUGUGGGCCCUGUUCCUGCCCGCGCGGUGUUCCGCAUUCUGCAAGCCUCCGGAGCGCACGUCGGCAGUCGGCUCCCUCGUUGACCGAAUCACCGACCUCUCUCCCCAGCUGUAUUUCCAAA\
) } def
/len { sequence length } bind def

/coor [
[122.18256378 482.09255981]
[121.09395599 467.13211060]
[120.00534058 452.17166138]
[118.91673279 437.21121216]
[117.69232941 422.26129150]
[116.33223724 407.32305908]
[114.97214508 392.38485718]
[113.61205292 377.44665527]
[112.25196075 362.50842285]
[102.07743073 357.25509644]
[95.64939880 347.63409424]
[94.67024994 335.98428345]
[99.50037384 325.20611572]
[109.03923798 318.03945923]
[108.22246552 303.06170654]
[107.40569305 288.08395386]
[106.58892059 273.10623169]
[105.63618469 258.13650513]
[104.54757690 243.17605591]
[103.45896149 228.21560669]
[102.37035370 213.25517273]
[101.28173828 198.29472351]
[100.05733490 183.34477234]
[98.69724274 168.40657043]
[97.33715820 153.46835327]
[95.97706604 138.53015137]
[94.61697388 123.59193420]
[77.69078064 113.35123444]
[73.19150543 92.64146423]
[85.91952515 73.96239471]
[75.55639648 63.11778259]
[65.19326782 52.27317047]
[54.83014297 41.42855835]
[44.46701813 30.58394814]
[34.10388947 19.73933601]
[23.35381889 9.27817249]
[12.23098183 -0.78574777]
[1.10814452 -10.84966755]
[-10.01469326 -20.91358757]
[-21.13753128 -30.97750664]
[-32.26036835 -41.04142761]
[-43.38320541 -51.10534668]
[-54.50604248 -61.16926575]
[-65.62888336 -71.23318481]
[-76.75171661 -81.29710388]
[-87.87455750 -91.36103058]
[-98.99739075 -101.42494965]
[-110.12023163 -111.48886871]
[-123.42741394 -109.27301025]
[-135.40136719 -115.05204773]
[-141.75645447 -126.50820160]
[-140.36259460 -139.33868408]
[-151.30084229 -149.60292053]
[-162.23910522 -159.86715698]
[-173.17736816 -170.13139343]
[-184.11561584 -180.39561462]
[-195.05387878 -190.65985107]
[-205.99214172 -200.92408752]
[-216.93038940 -211.18832397]
[-231.86801147 -207.33203125]
[-246.51203918 -212.18548584]
[-256.18960571 -224.19998169]
[-257.81265259 -239.54173279]
[-250.86326599 -253.31523132]
[-237.55897522 -261.12542725]
[-222.14511108 -260.48010254]
[-209.54019165 -251.58515930]
[-203.76641846 -237.27897644]
[-206.66616821 -222.12658691]
[-195.72790527 -211.86235046]
[-184.78964233 -201.59811401]
[-173.85137939 -191.33387756]
[-162.91313171 -181.06964111]
[-151.97486877 -170.80540466]
[-141.03660583 -160.54116821]
[-130.09835815 -150.27694702]
[-113.34407806 -151.53848267]
[-100.59889984 -140.07960510]
[-100.05631256 -122.61170197]
[-88.93347168 -112.54778290]
[-77.81063843 -102.48386383]
[-66.68779755 -92.41994476]
[-55.56496048 -82.35602570]
[-44.44212341 -72.29210663]
[-33.31928635 -62.22818375]
[-22.19644928 -52.16426468]
[-11.07361031 -42.10034561]
[0.04922684 -32.03642654]
[11.17206478 -21.97250557]
[22.29490280 -11.90858555]
[33.41773987 -1.84466541]
[36.25483322 -1.87026370]
[39.27270126 -0.75321680]
[42.02857208 1.58100450]
[44.06103897 5.04266930]
[44.94850159 9.37621021]
[55.31163025 20.22082138]
[65.67475891 31.06543350]
[76.03787994 41.91004562]
[86.40100861 52.75465775]
[96.76413727 63.59926987]
[111.65975952 65.36570740]
[124.27186584 57.24568558]
[136.88397217 49.12565994]
[149.49607849 41.00563431]
[162.10818481 32.88560867]
[165.57138062 17.69864273]
[178.47752380 9.64344597]
[192.93463135 13.03867531]
[205.54673767 4.91865015]
[207.33390808 -10.61647224]
[218.72422791 -21.33069992]
[234.33953857 -22.16510201]
[246.80676270 -12.72570038]
[250.23925781 2.53051019]
[243.01631165 16.40001106]
[228.54838562 22.33405113]
[213.66676331 17.53075409]
[201.05465698 25.65077972]
[198.16140747 40.21665573]
[185.48661804 48.63117981]
[170.22821045 45.49771500]
[157.61610413 53.61774063]
[145.00399780 61.73776627]
[132.39189148 69.85778809]
[119.77978516 77.97781372]
[123.37013245 86.67986298]
[123.72979736 95.26151276]
[138.62542725 97.02796173]
[153.52104187 98.79440308]
[166.96139526 90.03444672]
[182.14418030 95.21736145]
[187.42247009 110.36725616]
[178.74722290 123.86241913]
[162.77333069 125.35052490]
[151.75460815 113.69002533]
[136.85897827 111.92358398]
[121.96334839 110.15714264]
[118.86045837 115.16045380]
[114.64115143 119.26637268]
[109.55518341 122.23184204]
[110.91527557 137.17005920]
[112.27536774 152.10826111]
[113.63545990 167.04647827]
[114.99555206 181.98468018]
[118.90237427 190.28192139]
[116.24218750 197.20611572]
[117.33079529 212.16654968]
[118.41941071 227.12699890]
[119.50801849 242.08744812]
[120.59663391 257.04788208]
[124.35214996 265.41470337]
[121.56666565 272.28945923]
[122.38343811 287.26718140]
[123.20021057 302.24493408]
[124.01698303 317.22268677]
[138.58845520 329.28631592]
[139.73280334 347.84979248]
[127.19017029 361.14834595]
[128.55026245 376.08654785]
[129.91035461 391.02474976]
[131.27044678 405.96298218]
[132.63053894 420.90118408]
[136.53736877 429.19842529]
[133.87716675 436.12261963]
[134.96578979 451.08306885]
[136.05439758 466.04348755]
[137.14300537 481.00393677]
[148.29142761 492.54049683]
[146.07991028 508.43038940]
[132.20494080 516.48425293]
[117.31020355 510.52386475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[14 156]
[15 155]
[16 154]
[17 153]
[18 151]
[19 150]
[20 149]
[21 148]
[22 147]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[109 119]
[110 118]
[128 138]
[129 137]
[130 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
