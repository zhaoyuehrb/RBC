%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUAAUACCAGCUGUAAUCCCAGCUACUUGGGAGGCUGAGGCAGAAGAAUCGCUUGAACCCGGGAGGCGGAGGUUGAGCAACUACACUGCGCUGCAUCGGACUCGACGCCCGCUGGUGACGCACACGCUGCGCCGGAAGUGUGAACUGUCUGCCUCCAGGCUUUGUC\
) } def
/len { sequence length } bind def

/coor [
[175.60246277 116.02973175]
[178.06921387 130.82551575]
[174.80894470 145.46690369]
[166.29724121 157.81805420]
[153.77578735 166.07717896]
[139.07119751 169.03945923]
[124.32855225 166.27273560]
[111.69851685 158.18063354]
[103.02352142 145.94361877]
[99.56893921 131.34330750]
[87.71832275 140.53912354]
[75.86770630 149.73493958]
[64.01708984 158.93074036]
[52.16647720 168.12655640]
[50.64607620 172.29200745]
[48.11761093 175.42160034]
[45.03871155 177.32377625]
[41.88191223 177.97830200]
[39.07646561 177.52590942]
[26.57544899 185.81594849]
[14.07443428 194.10597229]
[1.57341909 202.39601135]
[-10.92759609 210.68603516]
[-23.42860985 218.97607422]
[-30.24456406 233.89166260]
[-46.59325409 235.17709351]
[-55.65655136 221.51002502]
[-48.11091232 206.94996643]
[-31.71864319 206.47505188]
[-19.21762657 198.18502808]
[-6.71661282 189.89498901]
[5.78440237 181.60496521]
[18.28541756 173.31492615]
[30.78643227 165.02490234]
[42.97066879 156.27593994]
[54.82128525 147.08012390]
[66.67189789 137.88432312]
[78.52251434 128.68850708]
[90.37313080 119.49269867]
[87.05474091 104.86435699]
[72.39618683 101.68207550]
[57.73764038 98.49978638]
[43.07909012 95.31749725]
[33.98729324 96.55643463]
[28.17882729 91.93742371]
[13.58196449 88.48320770]
[-1.96271074 93.70767975]
[-14.07888222 82.65641785]
[-10.30247211 66.69801331]
[5.48167276 62.24909973]
[17.03617668 73.88634491]
[31.63304138 77.34056091]
[46.26137924 80.65895081]
[60.91992569 83.84123993]
[75.57847595 87.02352142]
[90.23702240 90.20581055]
[104.97859955 87.43344879]
[117.47961426 79.14341736]
[129.98062134 70.85338593]
[137.20553589 56.77818680]
[152.08862305 56.19249344]
[164.58964539 47.90246201]
[171.81455994 33.82726288]
[186.69764709 33.24157333]
[199.19865417 24.95153999]
[211.69967651 16.66150856]
[224.20068359 8.37147713]
[236.70170593 0.08144501]
[249.20271301 -8.20858669]
[261.70373535 -16.49861908]
[274.20474243 -24.78865051]
[286.70574951 -33.07868195]
[299.12918091 -41.48454666]
[311.47393799 -50.00551605]
[323.81869507 -58.52648926]
[336.16345215 -67.04746246]
[321.44943237 -69.96252441]
[311.93014526 -81.55488586]
[311.93286133 -96.55488586]
[321.45635986 -108.14379883]
[336.17144775 -111.05351257]
[349.38888550 -103.96133423]
[355.10031128 -90.09123230]
[350.70996094 -75.74908447]
[364.05603027 -82.59618378]
[377.40209961 -89.44328308]
[390.74813843 -96.29038239]
[404.09420776 -103.13748169]
[417.44024658 -109.98458099]
[427.03997803 -125.67657471]
[444.50698853 -124.17105103]
[457.72344971 -131.26504517]
[466.22354126 -144.60893250]
[481.09674072 -143.81074524]
[494.31323242 -150.90473938]
[507.52969360 -157.99873352]
[520.74615479 -165.09274292]
[529.24627686 -178.43661499]
[544.11944580 -177.63844299]
[557.33593750 -184.73243713]
[557.91235352 -200.01690674]
[566.00842285 -212.87577820]
[579.36505127 -219.90901184]
[594.34857178 -219.31631470]
[606.93878174 -211.35696411]
[620.15527344 -218.45095825]
[628.65533447 -231.79483032]
[643.52856445 -230.99665833]
[656.74499512 -238.09065247]
[669.96148682 -245.18464661]
[683.17797852 -252.27864075]
[691.34887695 -266.49725342]
[707.74627686 -266.25976562]
[715.50201416 -251.81050110]
[706.63757324 -238.01361084]
[690.27197266 -239.06216431]
[677.05548096 -231.96817017]
[663.83905029 -224.87417603]
[650.62255859 -217.78018188]
[643.06781006 -204.94371033]
[627.24926758 -205.23448181]
[614.03277588 -198.14048767]
[613.70788574 -183.24887085]
[605.92095947 -170.43406677]
[592.67761230 -163.18966675]
[577.48657227 -163.54910278]
[564.42993164 -171.51596069]
[551.21343994 -164.42196655]
[543.65869141 -151.58549500]
[527.84014893 -151.87626648]
[514.62371826 -144.78227234]
[501.40722656 -137.68826294]
[488.19073486 -130.59426880]
[480.63598633 -117.75780487]
[464.81744385 -118.04856873]
[451.60098267 -110.95457458]
[447.79595947 -99.44537354]
[436.80886841 -93.43585205]
[424.28735352 -96.63851929]
[410.94131470 -89.79141998]
[397.59524536 -82.94432068]
[384.24917603 -76.09722900]
[370.90313721 -69.25012970]
[357.55706787 -62.40303040]
[344.68441772 -54.70270157]
[332.33966064 -46.18173218]
[319.99490356 -37.66075897]
[307.65014648 -29.13978767]
[303.91653442 -22.72624397]
[294.99578857 -20.57766724]
[282.49478149 -12.28763485]
[269.99377441 -3.99760342]
[257.49273682 4.29242802]
[244.99172974 12.58246040]
[232.49072266 20.87249184]
[219.98970032 29.16252327]
[207.48869324 37.45255661]
[194.98767090 45.74258804]
[188.65692139 59.22482681]
[172.87966919 60.40347672]
[160.37866211 68.69351196]
[154.04789734 82.17575073]
[138.27066040 83.35440063]
[125.76964569 91.64443207]
[113.26863098 99.93446350]
[126.31628418 92.53454590]
[141.18655396 90.56608582]
[155.71020508 94.31625366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[40 56]
[41 55]
[42 54]
[43 53]
[45 52]
[46 51]
[57 165]
[58 164]
[59 163]
[61 161]
[62 160]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[73 148]
[74 147]
[75 146]
[76 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[91 136]
[92 135]
[94 133]
[95 132]
[96 131]
[97 130]
[99 128]
[100 127]
[105 122]
[106 121]
[108 119]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
