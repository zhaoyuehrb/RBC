%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACACUUAUUCUAUUUUACAGAAUAAGGUGUUGCCCGAUUCUAUUUUUUGUUUGUUUCCUCAGAGACCCCGUUCUGAGUGUUGCCCGAUAAUGGAACCACAAAGUCAAUCAAGAUCGAGUUGUAAAAAAUUACAACUAAAUUUAUUGUAAUUUUUUUGCCUUUUGCCAAUAGAAAUCCCUUUUUCAUUAAGUAUUCCUCCCUAGAGUAAGCGACCACG\
) } def
/len { sequence length } bind def

/coor [
[27.74318504 392.69754028]
[30.22341156 407.49108887]
[23.63332558 420.96591187]
[10.43350792 428.09085083]
[-4.44755220 426.20562744]
[-15.45362854 416.01416016]
[-18.47517014 401.32025146]
[-25.82076073 414.39855957]
[-33.16635132 427.47689819]
[-40.51194382 440.55520630]
[-47.85753632 453.63351440]
[-55.20312881 466.71182251]
[-62.54871750 479.79013062]
[-69.89431000 492.86843872]
[-64.20334625 507.43371582]
[-69.25513458 522.23284912]
[-82.66437531 530.27807617]
[-98.09963989 527.77075195]
[-108.27286530 515.89477539]
[-108.38056946 500.25753784]
[-98.37188721 488.24255371]
[-82.97262573 485.52285767]
[-75.62702942 472.44454956]
[-68.28144073 459.36624146]
[-60.93584824 446.28793335]
[-53.59025955 433.20959473]
[-46.24466705 420.13128662]
[-38.89907455 407.05297852]
[-31.55348206 393.97467041]
[-24.96301270 380.50003052]
[-19.14896965 366.67263794]
[-13.33492470 352.84524536]
[-7.61930752 338.97686768]
[-2.00240517 325.06823730]
[3.61449695 311.15957642]
[9.23139858 297.25094604]
[2.58635044 286.21630859]
[3.52184319 273.17431641]
[11.91990662 262.89971924]
[24.88973427 259.28317261]
[30.70377731 245.45578003]
[36.51782227 231.62838745]
[42.33186722 217.80097961]
[48.14591217 203.97358704]
[53.95995331 190.14619446]
[42.34262848 183.19645691]
[31.75656700 174.75865173]
[22.39111328 164.98370361]
[14.41377926 154.04646301]
[7.96724606 142.14254761]
[3.16681838 129.48486328]
[0.09835661 116.29979706]
[-1.18325639 102.82320404]
[-0.65509742 89.29611206]
[1.67338657 75.96047211]
[5.76054811 63.05480194]
[-7.76058626 56.56027222]
[-22.51308441 61.56042480]
[-36.13291931 54.78143311]
[-40.80888748 40.68636703]
[-54.37584305 34.28810501]
[-67.98793030 27.98643112]
[-81.60001373 21.68475914]
[-95.21210480 15.38308620]
[-108.82418823 9.08141327]
[-122.43627930 2.77973986]
[-136.04837036 -3.52193308]
[-150.79631042 2.15907669]
[-165.20765686 -4.32848454]
[-170.73242188 -19.13566208]
[-164.09286499 -33.47761917]
[-149.22810364 -38.84552765]
[-134.95713806 -32.05470276]
[-129.74668884 -17.13401985]
[-116.13460541 -10.83234692]
[-102.52251434 -4.53067446]
[-88.91043091 1.77099860]
[-75.29833984 8.07267189]
[-61.68625641 14.37434483]
[-48.07416916 20.67601776]
[-40.68917847 20.63362122]
[-34.31435776 27.16523361]
[-20.38942337 22.00463295]
[-6.58455372 28.39839554]
[-1.26605582 43.03913879]
[12.25507832 49.53366852]
[24.78239250 32.26276398]
[40.65152740 18.00133705]
[59.15744019 7.38300800]
[54.13861465 -6.75245762]
[49.11978912 -20.88792229]
[35.12813568 -27.73419189]
[30.23969650 -42.14105988]
[36.85279465 -55.43777084]
[31.83396721 -69.57323456]
[17.45769501 -76.13816833]
[12.01259613 -90.97482300]
[18.72915268 -105.28088379]
[33.62255096 -110.56881714]
[47.85680389 -103.70138550]
[52.98697662 -88.75291443]
[45.96943283 -74.59206390]
[50.98825836 -60.45659637]
[64.50570679 -54.30727768]
[69.79687500 -40.04339981]
[63.25525284 -25.90674973]
[68.27407837 -11.77128410]
[73.29290771 2.36418176]
[85.39060974 -0.16280574]
[97.70610809 -1.19663978]
[110.05579376 -0.72190857]
[122.25557709 1.25431073]
[134.12359619 4.70255804]
[145.48291016 9.57143021]
[153.19731140 -3.29278612]
[160.91171265 -16.15700150]
[168.62611389 -29.02121735]
[165.00848389 -44.17214203]
[173.01522827 -57.10839081]
[187.48161316 -60.46388245]
[195.19601440 -73.32810211]
[202.91041565 -86.19231415]
[210.62481689 -99.05653381]
[218.33920288 -111.92074585]
[226.05360413 -124.78496552]
[233.76800537 -137.64918518]
[241.48240662 -150.51339722]
[241.21321106 -166.91033936]
[255.41596985 -175.10870361]
[269.48013306 -166.67474365]
[268.93765259 -150.28456116]
[254.34661865 -142.79899597]
[246.63221741 -129.93478394]
[238.91781616 -117.07056427]
[231.20343018 -104.20634460]
[223.48902893 -91.34213257]
[215.77462769 -78.47791290]
[208.06022644 -65.61370087]
[200.34582520 -52.74948502]
[204.19958496 -38.40779114]
[196.55934143 -25.25175285]
[181.49032593 -21.30681992]
[173.77592468 -8.44260311]
[166.06152344 4.42161274]
[158.34713745 17.28582954]
[173.19163513 28.61021042]
[185.83802795 42.59854126]
[195.80859375 58.82398987]
[202.70857239 76.77422333]
[217.01342773 72.26081848]
[231.31829834 67.74740601]
[245.62315369 63.23399353]
[254.27394104 49.72312546]
[270.24511719 48.20607758]
[281.28494263 59.84659195]
[278.92462158 75.71506500]
[264.97479248 83.63856506]
[250.13656616 77.53885651]
[235.83171082 82.05226898]
[221.52684021 86.56568146]
[207.22198486 91.07908630]
[206.79574585 98.56697083]
[221.77149963 99.41943359]
[236.74726868 100.27188873]
[251.72302246 101.12435150]
[266.69879150 101.97681427]
[281.67453003 102.82950592]
[280.82159424 117.80523682]
[265.84631348 116.95257568]
[250.87055969 116.10011292]
[235.89480591 115.24765015]
[220.91905212 114.39518738]
[205.94328308 113.54272461]
[205.51705933 121.03060150]
[219.21734619 127.13814545]
[232.91763306 133.24568176]
[246.61791992 139.35322571]
[261.28363037 133.46315002]
[275.78573608 139.74520874]
[281.52041626 154.47235107]
[275.08538818 168.90724182]
[260.29846191 174.48590088]
[245.93240356 167.89863586]
[240.51037598 153.05352783]
[226.81008911 146.94598389]
[213.10980225 140.83843994]
[199.40951538 134.73089600]
[195.59405518 143.58653259]
[190.99391174 152.03608704]
[185.65129089 160.01045227]
[179.61448669 167.44477844]
[172.93737793 174.27911377]
[165.67900085 180.45877075]
[157.90301514 185.93486023]
[149.67712402 190.66459656]
[141.07250977 194.61172485]
[132.16322327 197.74668884]
[123.02553558 200.04692078]
[113.73725891 201.49699402]
[104.37713623 202.08866882]
[95.02415466 201.82099915]
[85.75684357 200.70025635]
[76.65267181 198.73985291]
[67.78735352 195.96023560]
[61.97330856 209.78762817]
[56.15926361 223.61503601]
[50.34521866 237.44242859]
[44.53117371 251.26982117]
[38.71712875 265.09722900]
[45.62029648 281.17480469]
[38.88895798 296.95837402]
[23.14004326 302.86782837]
[17.52314186 316.77648926]
[11.90623951 330.68511963]
[6.28933764 344.59378052]
[5.97860670 353.71539307]
[0.49247140 358.65927124]
[-5.32157278 372.48669434]
[-11.13561726 386.31408691]
[2.31689024 379.67855835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[30 219]
[31 218]
[32 217]
[33 215]
[34 214]
[35 213]
[36 212]
[40 209]
[41 208]
[42 207]
[43 206]
[44 205]
[45 204]
[56 86]
[57 85]
[60 82]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[89 108]
[90 107]
[91 106]
[94 103]
[95 102]
[114 145]
[115 144]
[116 143]
[117 142]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[149 161]
[150 160]
[151 159]
[152 158]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
