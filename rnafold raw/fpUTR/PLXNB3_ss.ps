%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGAGUCGGACUGGGCACGAUUGCAUUGUGGGGAGGGAGGCUGGGGCUCUGUGAGACGUGCUCCUGGCACCGCCAGCUGCUACUUGGCCCUCGCCGGUGGCCCACCAGGACAAUGCCCCCCCGCAGCCAUCUCAUGCCCAUCGCCACUGCCCUGGGGCAGCUGAACUGAGCGUAUGUGCCACGCCGCCCAGGAGACCCCUCUGCUGCACCACUUCAUGCACCCCCGCUGCCUUGCCCCAGUGCUUCCUCGCCCU\
GGAGCUGGGCGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[76.89706421 130.59999084]
[70.87549591 124.18408203]
[66.54481506 116.65324402]
[64.09234619 108.43595886]
[63.60025787 99.98661804]
[48.92325592 96.89054108]
[34.24625778 93.79446411]
[25.24095345 95.08370972]
[19.41807365 90.57694244]
[4.77781248 87.31156158]
[-9.83394814 96.96166229]
[-26.57033539 93.11614990]
[-35.15895844 78.63768768]
[-49.83596039 75.54161072]
[-64.51295471 72.44553375]
[-79.18995667 69.34945679]
[-93.86695862 66.25337982]
[-108.54395294 63.15730286]
[-127.43917847 70.24855042]
[-141.20582581 56.64067078]
[-155.95042419 53.88442993]
[-170.69500732 51.12818527]
[-185.68193054 56.19796753]
[-196.77078247 46.25378036]
[-211.51538086 43.49753571]
[-217.81112671 45.31468201]
[-223.27185059 43.91482162]
[-226.56698608 40.50358582]
[-241.24398804 37.40750885]
[-255.92098999 34.31143188]
[-270.59799194 31.21535683]
[-285.27499390 28.11927986]
[-299.95199585 25.02320290]
[-314.62899780 21.92712593]
[-323.63427734 23.21636772]
[-329.45715332 18.70960426]
[-344.09744263 15.44421959]
[-358.73770142 12.17883396]
[-369.66699219 25.53079033]
[-391.53857422 26.16846466]
[-406.53857422 26.16846466]
[-421.53857422 26.16846466]
[-435.33874512 33.90576553]
[-448.06600952 26.16846466]
[-463.06600952 26.16846466]
[-478.06600952 26.16846466]
[-493.06600952 26.16846466]
[-508.06600952 26.16846466]
[-523.06597900 26.16846466]
[-534.19915771 37.06301880]
[-549.41125488 36.84933853]
[-559.72894287 26.16846466]
[-574.72894287 26.16846466]
[-589.72894287 26.16846466]
[-579.73352051 37.35287857]
[-580.46710205 52.33493042]
[-591.50738525 62.48934174]
[-606.49841309 61.97014999]
[-616.80969238 51.07625198]
[-616.50500488 36.07934570]
[-605.75860596 25.61281586]
[-620.72259521 24.57415009]
[-632.58337402 34.67164612]
[-647.74420166 33.40512466]
[-657.29754639 22.03544807]
[-672.26153564 20.99678230]
[-687.22552490 19.95811653]
[-702.18951416 18.91945076]
[-717.15350342 17.88078499]
[-733.37329102 22.81583977]
[-742.60559082 8.59608650]
[-731.49731445 -4.21180916]
[-716.11486816 2.91678858]
[-701.15087891 3.95545435]
[-686.18688965 4.99412012]
[-671.22290039 6.03278589]
[-656.25885010 7.07145166]
[-645.22637939 -2.86934233]
[-630.03594971 -2.02915525]
[-619.68395996 9.61015415]
[-604.71997070 10.64881992]
[-589.72894287 11.16846466]
[-574.72894287 11.16846466]
[-559.72894287 11.16846466]
[-549.41125488 0.48759234]
[-534.19915771 0.27391163]
[-523.06597900 11.16846466]
[-508.06600952 11.16846466]
[-493.06600952 11.16846466]
[-478.06600952 11.16846466]
[-463.06600952 11.16846466]
[-448.06600952 11.16846466]
[-435.33874512 3.43116450]
[-421.53857422 11.16846466]
[-406.53857422 11.16846466]
[-391.53857422 11.16846466]
[-385.79830933 -2.68972826]
[-396.40490723 -13.29632950]
[-407.01150513 -23.90293121]
[-417.61810303 -34.50953293]
[-433.09347534 -41.43408203]
[-430.72354126 -58.22157288]
[-413.93606567 -60.59149933]
[-407.01150513 -45.11613464]
[-396.40490723 -34.50953293]
[-385.79830933 -23.90293121]
[-375.19171143 -13.29632950]
[-380.75643921 -27.22593117]
[-378.29089355 -42.02191544]
[-368.50994873 -53.39438248]
[-354.24945068 -58.04603577]
[-339.64401245 -54.62818909]
[-328.92834473 -44.13180542]
[-325.20925903 -29.60017014]
[-329.56509399 -15.24653721]
[-340.73291016 -5.23255301]
[-355.47229004 -2.46142721]
[-340.83203125 0.80395800]
[-326.19177246 4.06934309]
[-311.53289795 7.25012732]
[-296.85589600 10.34620380]
[-282.17889404 13.44227982]
[-267.50192261 16.53835678]
[-252.82490540 19.63443375]
[-238.14790344 22.73050880]
[-223.47091675 25.82658577]
[-208.75912476 28.75294113]
[-194.01454163 31.50918388]
[-180.08224487 26.24225616]
[-167.93876648 36.38359070]
[-153.19416809 39.13983154]
[-138.44958496 41.89607620]
[-130.61138916 35.41016388]
[-120.28177643 34.26586151]
[-110.82333374 39.07735062]
[-105.44787598 48.48030472]
[-90.77088165 51.57638168]
[-76.09387970 54.67245865]
[-61.41688156 57.76853561]
[-46.73988342 60.86461258]
[-32.06288147 63.96068573]
[-22.37688637 55.49515152]
[-9.39082527 54.12236404]
[2.19091105 60.56440353]
[8.04319763 72.67129517]
[22.68345833 75.93668365]
[37.34233475 79.11746979]
[52.01933289 82.21354675]
[66.69633484 85.30961609]
[75.30052185 72.17115021]
[88.89486694 63.63982010]
[105.15074158 61.51566696]
[121.13907623 66.47074890]
[133.85804749 77.87509918]
[140.79609680 93.86211395]
[155.07260132 89.25982666]
[169.34912109 84.65753937]
[183.62564087 80.05525208]
[190.87913513 66.27030945]
[205.42311096 61.80630493]
[218.52024841 68.80635071]
[232.79676819 64.20406342]
[247.04646301 59.51940536]
[261.26889038 54.75253677]
[275.49127197 49.98566437]
[289.71368408 45.21879196]
[300.33963013 33.49701309]
[314.86596680 36.78859711]
[329.08837891 32.02172852]
[332.26519775 11.38262367]
[355.85031128 -1.26419210]
[368.22528076 -9.74123859]
[380.60025024 -18.21828461]
[392.97518921 -26.69533157]
[394.31781006 -42.27517319]
[405.39733887 -53.31045532]
[420.98245239 -54.59065628]
[433.71426392 -45.51130295]
[437.58123779 -30.35938835]
[430.75750732 -16.28918457]
[416.46502686 -9.94421005]
[401.45223999 -14.32036877]
[389.07730103 -5.84332228]
[376.70233154 2.63372374]
[364.32736206 11.11077023]
[367.07702637 18.08854866]
[375.32598877 39.02188492]
[390.15722656 36.77809525]
[397.36221313 23.16214943]
[411.04327393 16.47769356]
[425.86178589 19.09986305]
[436.17138672 29.81668854]
[451.00262451 27.57289696]
[465.83386230 25.32910538]
[480.66506958 23.08531380]
[493.13626099 12.43628120]
[508.50170898 18.16642189]
[510.95480347 34.38105774]
[497.97198486 44.39996338]
[482.90887451 37.91654587]
[468.07763672 40.16033554]
[453.24639893 42.40412903]
[438.41519165 44.64791870]
[431.73706055 57.93478394]
[418.35736084 64.82301331]
[403.31124878 62.48464203]
[392.40100098 51.60932541]
[377.56976318 53.85311508]
[359.22998047 61.58047867]
[342.67599487 57.45054245]
[333.85525513 46.24413681]
[319.63284302 51.01100922]
[310.02420044 62.39183044]
[294.48056030 59.44120407]
[280.25814819 64.20807648]
[266.03573608 68.97494507]
[251.81333923 73.74181366]
[246.48951721 78.82844543]
[237.39904785 78.48058319]
[223.12254333 83.08287048]
[216.57958984 96.41424561]
[202.16673279 101.28499603]
[188.22793579 94.33176422]
[173.95141602 98.93405151]
[159.67489624 103.53634644]
[145.39837646 108.13863373]
[140.38583374 122.27632141]
[148.57478333 134.84378052]
[155.85412598 140.29986572]
[156.78475952 147.60403442]
[164.82801819 160.26522827]
[172.87126160 172.92643738]
[180.91452026 185.58764648]
[194.84530640 193.08721924]
[195.13897705 207.97892761]
[203.18223572 220.64013672]
[217.11302185 228.13972473]
[217.40669250 243.03143311]
[225.44995117 255.69264221]
[233.49319458 268.35385132]
[241.53645325 281.01504517]
[255.46723938 288.51461792]
[255.76091003 303.40634155]
[263.80416870 316.06753540]
[279.28204346 319.26296997]
[287.89712524 332.51269531]
[284.53826904 347.95593262]
[271.19818115 356.43045044]
[255.79130554 352.90850830]
[247.45829773 339.47955322]
[251.14295959 324.11077881]
[243.09970093 311.44958496]
[229.74423218 304.85562134]
[228.87524414 289.05828857]
[220.83198547 276.39709473]
[212.78874207 263.73590088]
[204.74548340 251.07467651]
[191.39001465 244.48071289]
[190.52102661 228.68339539]
[182.47776794 216.02218628]
[169.12229919 209.42822266]
[168.25331116 193.63088989]
[160.21005249 180.96969604]
[152.16680908 168.30848694]
[144.12355042 155.64727783]
[136.00732422 143.03273010]
[127.81836700 130.46527100]
[119.86358643 135.60345459]
[111.04674530 138.73991394]
[101.85638428 139.75526428]
[92.78950500 138.64613342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 149]
[6 148]
[7 147]
[9 146]
[10 145]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[20 132]
[21 131]
[22 130]
[24 128]
[25 127]
[28 126]
[29 125]
[30 124]
[31 123]
[32 122]
[33 121]
[34 120]
[36 119]
[37 118]
[38 117]
[40 96]
[41 95]
[42 94]
[44 92]
[45 91]
[46 90]
[47 89]
[48 88]
[49 87]
[52 84]
[53 83]
[54 82]
[61 81]
[62 80]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[97 107]
[98 106]
[99 105]
[100 104]
[155 226]
[156 225]
[157 224]
[158 223]
[161 220]
[162 219]
[163 217]
[164 216]
[165 215]
[166 214]
[168 212]
[169 211]
[171 185]
[172 184]
[173 183]
[174 182]
[187 208]
[188 207]
[192 203]
[193 202]
[194 201]
[195 200]
[227 267]
[228 266]
[230 265]
[231 264]
[232 263]
[233 262]
[235 260]
[236 259]
[238 257]
[239 256]
[240 255]
[241 254]
[243 252]
[244 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
