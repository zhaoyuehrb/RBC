%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUCAUUAACUUAAUUUGACUAUCUGGUUUGUGGAUGCGUUUACUCUCAUGUAAGUCAACAACAUCCUGGGAUUGGGACCCACUUUCUGGGCACUGCUGGCCAGUCCCAAA\
) } def
/len { sequence length } bind def

/coor [
[89.92759705 117.81851959]
[78.27478027 127.26372528]
[66.62197113 136.70893860]
[54.96915436 146.15414429]
[43.31634140 155.59934998]
[31.66352654 165.04455566]
[37.31226349 179.06536865]
[38.57567596 194.12840271]
[35.34142685 208.89428711]
[27.89709854 222.05001831]
[16.90463638 232.42581177]
[3.34148240 239.09906006]
[-11.58633518 241.47639465]
[-26.55144501 239.34640503]
[-40.22316360 232.89848328]
[-51.38580322 222.70599365]
[-59.04679871 209.67524719]
[-62.52493286 194.96490479]
[-61.51093674 179.88302612]
[-56.09497070 165.77066040]
[-46.75861740 153.88269043]
[-34.33206558 145.27616882]
[-19.92027092 140.71638489]
[-4.80472183 140.60879517]
[9.67051792 144.96298218]
[22.21831894 153.39173889]
[33.87113571 143.94653320]
[45.52394867 134.50132751]
[57.17676163 125.05612183]
[68.82957458 115.61091614]
[80.48239136 106.16571045]
[79.42208099 92.09230804]
[88.03708649 79.63158417]
[103.56158447 75.05462646]
[99.04547882 60.75061798]
[94.52936554 46.44660568]
[90.01325226 32.14259720]
[85.49714661 17.83858490]
[71.64096069 5.81048441]
[75.92832184 -11.14436150]
[71.01633453 -25.31730652]
[66.10433960 -39.49024963]
[54.27456665 -49.99581909]
[57.41750717 -64.55505371]
[52.50551605 -78.72799683]
[47.59352493 -92.90093994]
[32.70684052 -97.27886200]
[23.26322365 -109.59136200]
[22.89394569 -125.10404205]
[31.74099541 -137.85195923]
[46.40250397 -142.93327332]
[61.24082565 -138.39411926]
[70.55031586 -125.97989655]
[70.75128937 -110.46411896]
[61.76646805 -97.81292725]
[66.67845917 -83.63998413]
[71.59044647 -69.46704102]
[83.06888580 -59.97521591]
[80.27728271 -44.40224075]
[85.18927765 -30.22929573]
[90.10126495 -16.05635262]
[100.91049957 -10.43235683]
[105.06909943 1.44834733]
[99.80115509 13.32247353]
[104.31726837 27.62648582]
[108.83338165 41.93049622]
[113.34948730 56.23450851]
[117.86560059 70.53852081]
[128.69104004 80.92166901]
[143.17089844 84.83751678]
[157.65074158 88.75335693]
[172.13059998 92.66919708]
[186.61045837 96.58504486]
[201.09031677 100.50088501]
[215.57015991 104.41673279]
[230.05001831 108.33257294]
[244.52987671 112.24841309]
[263.07171631 98.66784668]
[285.45162964 102.63428497]
[297.91442871 121.33621979]
[312.87823486 122.37794495]
[327.84201050 123.41967010]
[342.80578613 124.46139526]
[355.80532837 115.05972290]
[371.22167969 119.49996185]
[377.22872925 134.37594604]
[369.21838379 148.27609253]
[353.33551025 150.53738403]
[341.76406860 139.42517090]
[326.80029297 138.38345337]
[311.83648682 137.34172058]
[296.87271118 136.30000305]
[293.29336548 143.43659973]
[287.85568237 149.31964111]
[280.97570801 153.47677612]
[273.18600464 155.56851196]
[265.09454346 155.41595459]
[257.33718872 153.01596069]
[250.52772522 148.54260254]
[245.20932007 142.33464050]
[241.81118774 134.86982727]
[240.61402893 126.72827148]
[226.13417053 122.81242371]
[211.65432739 118.89658356]
[197.17446899 114.98074341]
[182.69461060 111.06489563]
[168.21475220 107.14905548]
[153.73490906 103.23320770]
[139.25505066 99.31736755]
[124.77519989 95.40152740]
[122.26969910 108.99005890]
[113.26529694 118.58476257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 27]
[6 26]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[40 61]
[41 60]
[42 59]
[44 57]
[45 56]
[46 55]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[80 92]
[81 91]
[82 90]
[83 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
