%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGUCUCCAGUUGAAGUAGGGAGUCUCAGUCAAUGUAGGCAGAGUACAAGACCCUACAGCCUGCUCUCUCACCUGCCAUCGUACAGACCAGCUUUUAGGGGAGCCAAGUUGGGAUACUCAAUCCCAACUUUUUUCCUUCUCUUCCAUCUCACAUACAGGAAACCUUACGAGAGAGGAUUAGGGGCCUGAAAAAGCUGACAAGACGGCAAAU\
) } def
/len { sequence length } bind def

/coor [
[-240.27386475 293.06063843]
[-252.76118469 301.37127686]
[-265.24850464 309.68191528]
[-277.73580933 317.99258423]
[-290.22314453 326.30322266]
[-295.63183594 333.66128540]
[-302.95532227 334.64266968]
[-315.56329346 342.76910400]
[-300.63265991 344.21005249]
[-288.78652954 353.41165161]
[-283.69671631 367.52169800]
[-286.94088745 382.16668701]
[-297.51348877 392.80718994]
[-312.13739014 396.14511108]
[-326.27975464 391.14575195]
[-335.55700684 379.35879517]
[-337.09356689 364.43771362]
[-330.41198730 351.00622559]
[-343.98065186 357.40087891]
[-357.54931641 363.79553223]
[-371.11795044 370.19018555]
[-384.68661499 376.58483887]
[-398.25527954 382.97949219]
[-409.38555908 401.29321289]
[-429.86160278 398.69580078]
[-443.13555908 405.68164062]
[-456.35787964 412.76470947]
[-469.52786255 419.94467163]
[-482.69784546 427.12460327]
[-491.11080933 440.52359009]
[-505.98889160 439.82232666]
[-519.15887451 447.00225830]
[-532.32885742 454.18222046]
[-536.55053711 469.41220093]
[-550.34594727 477.12344360]
[-565.53045654 472.74093628]
[-573.09539795 458.86480713]
[-568.55261230 443.72747803]
[-554.59722900 436.30966187]
[-539.50878906 441.01223755]
[-526.33880615 433.83230591]
[-513.16882324 426.65234375]
[-505.69787598 413.76693726]
[-489.87777710 413.95462036]
[-476.70779419 406.77468872]
[-463.53784180 399.59472656]
[-459.17071533 393.63446045]
[-450.12139893 392.40765381]
[-436.84744263 385.42181396]
[-435.63262939 376.63052368]
[-430.43048096 369.27114868]
[-422.30389404 365.06646729]
[-413.01641846 365.07122803]
[-404.64993286 369.41085815]
[-391.08126831 363.01620483]
[-377.51260376 356.62152100]
[-363.94396973 350.22686768]
[-350.37530518 343.83221436]
[-336.80667114 337.43756104]
[-323.68972778 330.16113281]
[-311.08175659 322.03469849]
[-298.53378296 313.81591797]
[-286.04647827 305.50527954]
[-273.55914307 297.19461060]
[-261.07183838 288.88397217]
[-248.58451843 280.57330322]
[-251.16500854 270.48068237]
[-250.84228516 260.04733276]
[-247.63003540 250.09346008]
[-241.76957703 241.40478516]
[-233.71171570 234.67053223]
[-224.08213806 230.42880249]
[-213.63276672 229.02359009]
[-203.18312073 230.57685852]
[-193.55599976 234.97810364]
[-185.51272583 241.89210510]
[-172.44956970 234.51959229]
[-159.38639832 227.14709473]
[-146.32324219 219.77458191]
[-139.04223633 206.78088379]
[-123.22109985 206.73632812]
[-110.15793610 199.36383057]
[-111.87317657 188.45442200]
[-110.18299866 177.51419067]
[-105.23174286 167.58346558]
[-97.47463226 159.61148071]
[-87.63593292 154.36581421]
[-76.64135742 152.35832214]
[-65.53097534 153.79537964]
[-55.36082840 158.55670166]
[-47.10255051 166.20527649]
[-33.62923050 159.61212158]
[-20.15591240 153.01896667]
[-6.68259335 146.42581177]
[6.79072523 139.83265686]
[20.26404381 133.23950195]
[33.63912582 126.44927216]
[46.91308594 119.46343231]
[60.18704605 112.47758484]
[73.46100616 105.49174500]
[86.73496246 98.50590515]
[96.78282928 87.36856079]
[102.37015533 73.44800568]
[107.95747375 59.52745438]
[113.54479980 45.60689926]
[107.58121490 31.21685600]
[113.44586182 17.17902946]
[127.20131683 11.58234024]
[132.78863525 -2.33821321]
[138.37596130 -16.25876617]
[143.96328735 -30.17931938]
[149.55061340 -44.09987259]
[155.13793945 -58.02042770]
[160.72526550 -71.94097900]
[166.31259155 -85.86153412]
[171.89991760 -99.78208923]
[177.48724365 -113.70263672]
[172.53265381 -128.96145630]
[181.49322510 -142.26889038]
[197.49517822 -143.41661072]
[208.26316833 -131.52418518]
[205.53692627 -115.71446228]
[191.40779114 -108.11531830]
[185.82046509 -94.19476318]
[180.23313904 -80.27420807]
[174.64581299 -66.35365295]
[169.05848694 -52.43310165]
[163.47117615 -38.51255035]
[157.88385010 -24.59199524]
[152.29652405 -10.67144203]
[146.70919800 3.24911118]
[141.12187195 17.16966438]
[147.19090271 30.72335434]
[141.72285461 44.92036819]
[127.46535492 51.19422531]
[121.87802887 65.11477661]
[116.29070282 79.03533173]
[110.70338440 92.95588684]
[110.10448456 93.35778809]
[109.50515747 93.75904083]
[124.46475983 94.85907745]
[139.42437744 95.95911407]
[154.38398743 97.05915070]
[169.34359741 98.15918732]
[184.31773376 99.03950500]
[199.30319214 99.69990540]
[214.28865051 100.36030579]
[222.99745178 97.61222839]
[229.48876953 101.14199829]
[244.46290588 102.02230835]
[259.43704224 102.90262604]
[274.41119385 103.78293610]
[288.64166260 96.86887360]
[300.89291382 105.33976746]
[315.12338257 98.42570496]
[327.37463379 106.89660645]
[342.34878540 107.77691650]
[351.09698486 105.15697479]
[357.53579712 108.78165436]
[372.49539185 109.88169098]
[387.45501709 110.98172760]
[403.69491577 106.11325073]
[412.86877441 120.37075043]
[401.70803833 133.13298035]
[386.35498047 125.94133759]
[371.39535522 124.84130096]
[356.43576050 123.74126434]
[341.46847534 122.75106049]
[326.49432373 121.87075043]
[313.33489990 128.84777832]
[300.01260376 120.31391907]
[286.85317993 127.29094696]
[273.53088379 118.75708771]
[258.55673218 117.87677002]
[243.58259583 116.99645233]
[228.60844421 116.11614227]
[213.62825012 115.34576416]
[198.64279175 114.68536377]
[183.65733337 114.02495575]
[179.59391785 116.53054047]
[173.91377258 116.51166534]
[168.24356079 113.11879730]
[153.28395081 112.01876068]
[138.32434082 110.91872406]
[123.36472321 109.81868744]
[108.40511322 108.71865082]
[93.72080994 111.77986145]
[80.44684601 118.76570892]
[67.17288971 125.75154877]
[53.89892578 132.73739624]
[40.62496567 139.72323608]
[36.78276062 145.09913635]
[31.58329773 147.38606262]
[26.85719872 146.71281433]
[13.38387966 153.30596924]
[-0.08943877 159.89912415]
[-13.56275749 166.49227905]
[-27.03607559 173.08543396]
[-40.50939560 179.67858887]
[-41.00337219 198.90766907]
[-51.15812302 215.14773560]
[-68.08462524 223.93544006]
[-87.04654694 222.90554810]
[-102.78543091 212.42698669]
[-115.84858704 219.79948425]
[-124.06395721 233.32052612]
[-138.95074463 232.83773804]
[-152.01390076 240.21025085]
[-165.07705688 247.58276367]
[-178.14021301 254.95526123]
[-177.33050537 274.85311890]
[-186.70831299 292.33157349]
[-203.60011292 302.57748413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[4 63]
[5 62]
[7 61]
[8 60]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 54]
[25 49]
[26 48]
[27 46]
[28 45]
[29 44]
[31 42]
[32 41]
[33 40]
[76 210]
[77 209]
[78 208]
[79 207]
[81 205]
[82 204]
[91 199]
[92 198]
[93 197]
[94 196]
[95 195]
[96 194]
[97 191]
[98 190]
[99 189]
[100 188]
[101 187]
[102 138]
[103 137]
[104 136]
[105 135]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[140 186]
[141 185]
[142 184]
[143 183]
[144 182]
[145 179]
[146 178]
[147 177]
[149 176]
[150 175]
[151 174]
[152 173]
[154 171]
[156 169]
[157 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
