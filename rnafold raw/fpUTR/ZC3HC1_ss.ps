%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCAAGAGGCGGAUAUUAACCUCCCAGGACGGAAGUUCCGGAGCCUUCAAACUCUCGGGGAAGCAACUCGGCAGCGGACCAAGAUGGCGGCGCCCUGUGAGGGACAAGCGUUUGCCGUAGGGGUUGAAAAGAAUUGGGGUGCAGUAGUUCGCUCCCCAGAAGGGACCCCCCAGAAAAUCCGGCAGCUGAUAG\
) } def
/len { sequence length } bind def

/coor [
[-112.37366486 246.90460205]
[-126.19847870 237.21154785]
[-139.06634521 244.91984558]
[-151.93421936 252.62814331]
[-164.80207825 260.33645630]
[-172.66458130 274.06567383]
[-187.55886841 273.96856689]
[-200.42674255 281.67684937]
[-213.29460144 289.38516235]
[-226.16247559 297.09347534]
[-227.65658569 312.42556763]
[-237.77397156 323.80502319]
[-252.47808838 327.00711060]
[-266.08529663 321.00860596]
[-278.95315552 328.71691895]
[-277.68933105 339.28079224]
[-280.01052856 349.62451172]
[-285.62640381 358.57058716]
[-293.87298584 365.10946655]
[-303.79135132 368.51324463]
[-314.23876953 368.41674805]
[-324.02066040 364.85656738]
[-332.02691650 358.26379395]
[-345.36450195 365.12744141]
[-358.70205688 371.99105835]
[-372.03961182 378.85470581]
[-376.71673584 390.88433838]
[-387.97781372 396.32363892]
[-399.54162598 392.74496460]
[-412.98803711 399.39285278]
[-426.43444824 406.04071045]
[-439.88082886 412.68859863]
[-448.52282715 426.62588501]
[-464.90313721 425.83996582]
[-472.17111206 411.13931274]
[-462.85006714 397.64672852]
[-446.52871704 399.24218750]
[-433.08230591 392.59429932]
[-419.63589478 385.94644165]
[-406.18951416 379.29855347]
[-397.26376343 364.19561768]
[-378.90325928 365.51712036]
[-365.56567383 358.65350342]
[-352.22811890 351.78985596]
[-338.89056396 344.92623901]
[-337.23229980 325.45095825]
[-324.06716919 310.80978394]
[-304.59420776 307.04434204]
[-286.66146851 315.84906006]
[-273.79357910 308.14074707]
[-272.66192627 293.31317139]
[-262.90069580 281.85964966]
[-248.09384155 278.30859375]
[-233.87077332 284.22558594]
[-221.00291443 276.51730347]
[-208.13504028 268.80899048]
[-195.26716614 261.10067749]
[-188.32507324 247.92280579]
[-172.51039124 247.46858215]
[-159.64251709 239.76028442]
[-146.77464294 232.05197144]
[-133.90678406 224.34367371]
[-136.13847351 211.53227234]
[-133.87408447 198.69415283]
[-127.36220551 187.36390686]
[-117.36045837 178.90338135]
[-105.04740906 174.33802795]
[-91.88371277 174.23257446]
[-79.43882751 178.62133789]
[-69.20390320 187.00151062]
[-56.09438705 179.71174622]
[-42.98486710 172.42199707]
[-29.87534523 165.13224792]
[-16.76582336 157.84249878]
[-9.40279484 144.89511108]
[6.41831398 144.95060730]
[19.52783394 137.66085815]
[32.57820892 130.26573181]
[45.56858826 122.76573181]
[58.55897141 115.26573181]
[55.85818100 101.37895966]
[57.68692398 87.35068512]
[63.85754013 74.62039948]
[73.73684692 64.49438477]
[86.31110382 58.01171875]
[100.29001617 55.83760071]
[102.93439484 41.07253265]
[105.57877350 26.30746269]
[108.22315216 11.54239368]
[110.86753082 -3.22267509]
[113.51190186 -17.98774338]
[116.15628052 -32.75281143]
[118.68164062 -47.53870392]
[121.08780670 -62.34445953]
[123.49398041 -77.15021515]
[125.42192078 -92.02579498]
[126.86962891 -106.95577240]
[128.31733704 -121.88574982]
[121.03791809 -136.58071899]
[130.34843445 -150.08058167]
[146.67102051 -148.49783325]
[153.21440125 -133.46067810]
[143.24731445 -120.43804169]
[141.79960632 -105.50806427]
[140.35189819 -90.57808685]
[142.04093933 -88.32499695]
[142.93316650 -85.26271057]
[142.71418762 -81.69359589]
[141.18566895 -78.02870178]
[138.29972839 -74.74404144]
[135.89355469 -59.93828964]
[133.48739624 -45.13253403]
[135.52027893 -38.01649857]
[130.92135620 -30.10843468]
[128.27697754 -15.34336567]
[125.63259888 -0.57829690]
[122.98822021 14.18677235]
[120.34384155 28.95184135]
[117.69946289 43.71691132]
[115.05508423 58.48197937]
[133.98304749 71.79443359]
[143.58085632 92.85082245]
[158.58036804 92.97165680]
[173.57987976 93.09248352]
[188.57939148 93.21331024]
[203.57890320 93.33413696]
[218.57841492 93.45497131]
[222.73269653 82.95660400]
[229.87388611 74.24586487]
[239.30903625 68.14239502]
[250.13040161 65.21406555]
[261.30270386 65.72420502]
[271.76226807 69.60800171]
[280.51818848 76.48018646]
[286.74621582 85.67324829]
[289.86648560 96.30220032]
[304.82708740 97.38872528]
[319.78768921 98.47524261]
[334.74826050 99.56176758]
[349.70886230 100.64828491]
[364.66946411 101.73480988]
[378.99383545 95.01744843]
[391.12722778 103.65631866]
[406.08782959 104.74284363]
[415.99060059 92.79650879]
[431.03228760 88.98503876]
[445.42904663 94.77403259]
[453.64505005 107.93749237]
[452.52108765 123.41381073]
[442.48931885 135.25201416]
[427.40716553 138.90008545]
[413.07403564 132.95526123]
[405.00131226 119.70343781]
[390.04071045 118.61692047]
[376.78640747 125.41199493]
[363.58294678 116.69540405]
[348.62234497 115.60888672]
[333.66174316 114.52236176]
[318.70114136 113.43584442]
[303.74057007 112.34931946]
[288.77996826 111.26279449]
[279.04678345 127.45001221]
[262.37548828 136.50083923]
[243.33558655 135.84025574]
[227.19392395 125.56811523]
[218.45759583 108.45448303]
[203.45808411 108.33365631]
[188.45857239 108.21282196]
[173.45904541 108.09199524]
[158.45953369 107.97116852]
[143.46002197 107.85033417]
[140.12864685 118.44160461]
[134.26098633 127.86729431]
[126.22790527 135.53166199]
[116.53710938 140.95028687]
[105.80110931 143.78068542]
[94.69844818 143.84397888]
[83.93087006 141.13616943]
[74.17892456 135.82838440]
[66.05896759 128.25611877]
[53.06858826 135.75611877]
[40.07820892 143.25611877]
[34.20114136 150.26664734]
[26.81758499 150.77037048]
[13.70806503 158.06011963]
[5.40735531 171.52893066]
[-9.47607327 170.95202637]
[-22.58559418 178.24177551]
[-35.69511414 185.53152466]
[-48.80463409 192.82127380]
[-61.91415405 200.11102295]
[-60.58237839 217.22010803]
[-66.83666992 233.14125061]
[-79.37594604 244.69448853]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[5 59]
[7 57]
[8 56]
[9 55]
[10 54]
[14 50]
[15 49]
[23 45]
[24 44]
[25 43]
[26 42]
[29 40]
[30 39]
[31 38]
[32 37]
[70 191]
[71 190]
[72 189]
[73 188]
[74 187]
[76 185]
[77 184]
[78 182]
[79 181]
[80 180]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 112]
[94 111]
[95 110]
[96 105]
[97 104]
[98 103]
[122 171]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[141 156]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
