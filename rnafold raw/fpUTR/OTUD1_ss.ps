%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUUUGGCCGGGACCCGGGCGCUAUUCGCGGCUGCUGACUCGCGGCGGCCGGCUGCCUUUCGCUCAUCUCUAUUCUGGGGCCGUUGGGUCACCGCGCUCCGCCGGCCCCCUCCCCCGGGCCCGGAGGGUGUGUCCCCCGCUCCGGGGCUCGCCGCGCCUAUAAGGGGCCGAGCGGCGGGCAGGGAC\
) } def
/len { sequence length } bind def

/coor [
[-77.17033386 290.87445068]
[-84.77446747 292.02655029]
[-92.35839844 290.99157715]
[-100.14294434 303.81347656]
[-107.92749023 316.63534546]
[-115.71202850 329.45724487]
[-115.68292999 347.86309814]
[-131.37202454 355.70849609]
[-138.94351196 368.65734863]
[-139.23008728 384.47598267]
[-152.33364868 391.55734253]
[-159.90513611 404.50619507]
[-167.47660828 417.45504761]
[-175.04809570 430.40390015]
[-177.82360840 447.12911987]
[-194.66352844 449.09207153]
[-201.21153259 433.45364380]
[-187.99694824 422.83239746]
[-180.42546082 409.88354492]
[-172.85397339 396.93472290]
[-165.28250122 383.98587036]
[-165.53747559 369.09344482]
[-151.89236450 361.08587646]
[-144.32087708 348.13702393]
[-147.08238220 336.34832764]
[-140.86538696 325.49383545]
[-128.53392029 321.67269897]
[-120.74937439 308.85079956]
[-112.96483612 296.02893066]
[-105.18029022 283.20703125]
[-107.72908020 279.95138550]
[-109.74662781 276.34234619]
[-124.58084869 278.56631470]
[-139.41506958 280.79025269]
[-154.24928284 283.01422119]
[-169.08349609 285.23815918]
[-183.91772461 287.46212769]
[-198.75193787 289.68606567]
[-213.58615112 291.91003418]
[-228.42037964 294.13397217]
[-239.07507324 306.12802124]
[-255.08718872 305.13214111]
[-264.17358398 291.91030884]
[-259.36398315 276.60516357]
[-244.34785461 270.95751953]
[-230.64433289 279.29977417]
[-215.81010437 277.07580566]
[-200.97589111 274.85186768]
[-186.14167786 272.62789917]
[-171.30746460 270.40396118]
[-156.47323608 268.17999268]
[-141.63902283 265.95602417]
[-126.80480194 263.73208618]
[-111.97058868 261.50811768]
[-96.87322998 240.32022095]
[-70.39714813 241.69154358]
[-59.19482803 231.71618652]
[-47.99250412 221.74081421]
[-36.79018402 211.76544189]
[-25.58786011 201.79006958]
[-14.38553810 191.81471252]
[-10.02603245 177.57237244]
[5.42572689 174.17330933]
[16.62804985 164.19793701]
[27.83037186 154.22256470]
[39.03269196 144.24719238]
[50.23501587 134.27183533]
[61.43733597 124.29646301]
[57.93985367 117.55963898]
[55.60891724 110.33579254]
[54.50918198 102.82528687]
[54.67114639 95.23641205]
[56.09031677 87.77966309]
[58.72733688 80.66184998]
[62.50906372 74.08038330]
[67.33061218 68.21780396]
[73.05825806 63.23670959]
[79.53314209 59.27526093]
[86.57567596 56.44332123]
[93.99053955 54.81943893]
[94.48648834 39.82764053]
[94.98243713 24.83584023]
[95.47838593 9.84404087]
[95.97433472 -5.14775801]
[96.47029114 -20.13955688]
[96.96623993 -35.13135529]
[89.68945312 -49.17980576]
[97.84332275 -61.64429474]
[98.33927917 -76.63609314]
[98.83522797 -91.62789154]
[99.20722198 -106.62328339]
[99.45523071 -121.62123108]
[88.28746033 -132.80409241]
[88.38168335 -148.60810852]
[99.68199921 -159.65701294]
[115.48412323 -159.39570618]
[126.41294861 -147.97921753]
[125.98458099 -132.18072510]
[114.45317841 -121.37322235]
[114.20516968 -106.37527466]
[117.24357605 -99.62320709]
[113.82702637 -91.13194275]
[113.33107758 -76.14014435]
[112.83512115 -61.14834595]
[120.14738464 -48.17221069]
[111.95803833 -34.63540649]
[111.46208954 -19.64360619]
[110.96614075 -4.65180731]
[110.47018433 10.33999157]
[109.97423553 25.33179092]
[109.47828674 40.32358932]
[108.98233795 55.31538773]
[118.65219879 58.41283417]
[127.39636230 63.57423401]
[134.78085327 70.54343414]
[140.43917847 78.97454834]
[154.70503235 74.33929443]
[168.97087097 69.70404053]
[183.23672485 65.06877899]
[197.50256348 60.43352890]
[211.76841736 55.79827118]
[226.03427124 51.16301727]
[232.58259583 40.03712463]
[244.57391357 36.47624207]
[255.41459656 41.86870575]
[269.75512695 37.46995544]
[284.09567261 33.07120514]
[291.39816284 27.55322266]
[298.70980835 28.72039223]
[313.12109375 24.55934906]
[327.53240967 20.39830589]
[336.51211548 7.10377884]
[352.51568604 5.97908115]
[363.26657104 17.88698387]
[360.51760864 33.69276428]
[346.37753296 41.27157974]
[331.69345093 34.80961227]
[317.28213501 38.97065353]
[302.87084961 43.13169861]
[288.49441528 47.41174316]
[274.15390015 51.81049347]
[259.81335449 56.20924377]
[248.57772827 69.67993164]
[230.66952515 65.42886353]
[216.40367126 70.06411743]
[202.13783264 74.69937897]
[187.87197876 79.33463287]
[173.60612488 83.96988678]
[159.34028625 88.60514069]
[145.07443237 93.24039459]
[145.57498169 100.56420898]
[144.89328003 107.87338257]
[143.04702759 114.97831726]
[140.08412170 121.69470978]
[151.92121887 130.90789795]
[163.75833130 140.12109375]
[179.40095520 142.49151611]
[184.69221497 156.41458130]
[199.56237793 151.98088074]
[214.18745422 157.16615295]
[222.94377136 169.97656250]
[222.46438599 185.48622131]
[212.93359375 197.73136902]
[198.01620483 202.00350952]
[183.44824219 196.65988159]
[174.83140564 183.75524902]
[175.47901917 168.25169373]
[160.68307495 166.54025269]
[154.54513550 151.95820618]
[142.70803833 142.74501038]
[130.87092590 133.53181458]
[101.50698090 145.55354309]
[71.41270447 135.49877930]
[60.21038437 145.47415161]
[49.00806046 155.44952393]
[37.80574036 165.42488098]
[26.60341835 175.40025330]
[15.40109539 185.37562561]
[10.24032497 200.33146667]
[-4.41016960 203.01702881]
[-15.61249161 212.99240112]
[-26.81481361 222.96775818]
[-38.01713562 232.94313049]
[-49.21945953 242.91850281]
[-60.42177963 252.89387512]
[-58.11771011 260.46188354]
[-58.04258347 268.33581543]
[-60.18181610 275.87582397]
[-64.34172058 282.47506714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[8 24]
[9 23]
[11 21]
[12 20]
[13 19]
[14 18]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[61 180]
[63 178]
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[88 104]
[89 103]
[90 102]
[91 100]
[92 99]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[125 142]
[126 141]
[127 140]
[129 139]
[130 138]
[131 137]
[154 171]
[155 170]
[156 169]
[158 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
