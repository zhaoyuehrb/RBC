%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGCAGUGCGCAGGCGCAUCAAUGAGGUACUGCAAUGUCCCGGACCGUAUAGUUUCCAGGACGUCUCGCCGCGCGCAUGCGCAGAAACACUGGGCACAGGGGGAGGUAACUGCAGUAAGUCCCGCUUGGCCCUGGAGUCCACGCGGAUUUUCGAAGCUGGGGCUGGCAAGAGGCCGCUGGACACCACGCUCCAGUCGUCAGCCCACUUCCUAGCUGAACAGCGCGAGGCGGCGGCAGCGAGCCGGGUCCCACC\
) } def
/len { sequence length } bind def

/coor [
[-128.88433838 612.92150879]
[-135.28553772 613.14910889]
[-142.05419922 626.53509521]
[-148.82286072 639.92108154]
[-155.59152222 653.30712891]
[-162.36018372 666.69311523]
[-169.12884521 680.07916260]
[-175.89750671 693.46514893]
[-182.66616821 706.85113525]
[-189.43482971 720.23718262]
[-187.99905396 738.60821533]
[-203.07740784 747.60980225]
[-209.68064880 761.07818604]
[-201.05172729 773.78399658]
[-199.94776917 789.10314941]
[-206.66574097 802.91491699]
[-219.39852905 811.50396729]
[-234.72108459 812.55987549]
[-248.51170349 805.79864502]
[-257.06079102 793.03900146]
[-258.06869507 777.71325684]
[-251.26428223 763.94384766]
[-238.47789001 755.43481445]
[-223.14901733 754.47497559]
[-216.54579163 741.00659180]
[-220.16197205 729.48162842]
[-214.79380798 718.21588135]
[-202.82083130 713.46850586]
[-196.05216980 700.08251953]
[-189.28352356 686.69647217]
[-182.51486206 673.31048584]
[-175.74620056 659.92443848]
[-168.97753906 646.53845215]
[-162.20887756 633.15246582]
[-155.44021606 619.76641846]
[-148.67155457 606.38043213]
[-152.51220703 583.59063721]
[-132.37197876 570.82690430]
[-134.62712097 556.10400391]
[-122.18262482 546.33441162]
[-116.42104340 532.48504639]
[-110.65945435 518.63574219]
[-104.89786530 504.78637695]
[-99.13628387 490.93704224]
[-105.03473663 477.30825806]
[-99.38895416 463.18099976]
[-85.05383301 457.08654785]
[-79.29225159 443.23721313]
[-73.53066254 429.38787842]
[-78.12381744 423.45889282]
[-92.98624420 425.48577881]
[-87.31011963 411.60089111]
[-91.90326691 405.67190552]
[-106.75297546 407.79000854]
[-121.60267639 409.90811157]
[-136.45237732 412.02618408]
[-151.27902222 420.24853516]
[-163.28445435 408.27749634]
[-155.10467529 393.42730713]
[-138.57046509 397.17648315]
[-123.72077179 395.05838013]
[-108.87106323 392.94030762]
[-94.02136230 390.82220459]
[-81.46652985 382.61392212]
[-73.57004547 369.86065674]
[-65.67356110 357.10739136]
[-57.85578918 344.30575562]
[-50.11701965 331.45617676]
[-42.37825394 318.60659790]
[-34.63948441 305.75701904]
[-26.90071869 292.90747070]
[-26.96255875 278.01296997]
[-13.21473694 270.18304443]
[-5.47596979 257.33346558]
[2.26279783 244.48390198]
[10.00156498 231.63432312]
[17.74033165 218.78475952]
[18.49682999 211.45416260]
[25.65442085 205.82537842]
[33.55090332 193.07212830]
[29.90140152 178.67710876]
[37.72788239 165.63099670]
[52.85145187 161.90066528]
[60.74793625 149.14741516]
[68.64441681 136.39414978]
[60.90476227 127.91539764]
[55.39780807 117.84240723]
[52.43805695 106.75045776]
[52.19453812 95.27298737]
[54.68115234 84.06547546]
[59.75589752 73.76797485]
[67.12895203 64.96856689]
[76.37925720 58.16977692]
[71.13336182 44.11700058]
[65.88745880 30.06422234]
[60.64156342 16.01144600]
[54.72494888 9.08989429]
[55.41876984 1.75309670]
[50.34639359 -12.36324215]
[45.27402115 -26.47957993]
[40.20164490 -40.59592056]
[35.04241180 -54.68074417]
[29.79651451 -68.73352051]
[24.55061722 -82.78630066]
[19.30471802 -96.83908081]
[5.80147028 -99.52520752]
[-4.53398228 -108.45632935]
[-9.07725239 -121.22357178]
[-6.74459553 -134.46301270]
[1.75077999 -144.74194336]
[-3.32159400 -158.85829163]
[-16.18336105 -169.03211975]
[-13.53605080 -185.21618652]
[1.89701092 -190.76168823]
[14.23961258 -179.96389771]
[10.79474449 -163.93066406]
[15.86711884 -149.81431580]
[31.77807808 -145.72288513]
[42.21174240 -132.81817627]
[42.89412689 -116.07071686]
[33.35749817 -102.08497620]
[38.60339355 -88.03219604]
[43.84929276 -73.97942352]
[49.09518814 -59.92664337]
[54.36389160 -54.77389908]
[54.31798553 -45.66829300]
[59.39035797 -31.55195427]
[64.46273041 -17.43561554]
[69.53511047 -3.31927729]
[74.69434357 10.76554775]
[79.94023895 24.81832504]
[85.18613434 38.87110138]
[90.43203735 52.92388153]
[100.88770294 51.96960449]
[111.30096436 53.30958176]
[117.06255341 39.46024323]
[122.82413483 25.61090851]
[128.58572388 11.76157188]
[134.34730530 -2.08776474]
[140.10890198 -15.93710136]
[145.87048340 -29.78643799]
[143.21958923 -45.96991348]
[156.07911682 -56.14659500]
[171.22026062 -49.84758759]
[173.06713867 -33.55276871]
[159.71981812 -24.02485085]
[153.95823669 -10.17551517]
[148.19664001 3.67382145]
[142.43505859 17.52315712]
[136.67347717 31.37249374]
[130.91188049 45.22183228]
[125.15029907 59.07116699]
[136.67257690 68.97052002]
[144.52777100 81.97267914]
[159.13984680 78.58341217]
[173.75193787 75.19414520]
[188.36401367 71.80487061]
[193.55596924 62.28729248]
[202.92803955 57.28733826]
[213.28793335 58.23550797]
[221.25355530 64.58077240]
[235.94470215 61.55253220]
[250.63584900 58.52429581]
[265.32699585 55.49605942]
[280.01815796 52.46782303]
[294.70928955 49.43958664]
[309.40045166 46.41135406]
[324.09158325 43.38311768]
[336.04559326 33.01911545]
[350.07281494 38.02769089]
[358.77728271 25.10987854]
[373.71932983 22.24809647]
[385.98086548 30.62608910]
[400.67199707 27.59785271]
[408.38824463 17.28527832]
[420.66644287 15.05362892]
[430.84277344 21.56084442]
[445.57009888 18.71382904]
[460.27963257 15.77614594]
[474.97076416 12.74790955]
[489.66192627 9.71967411]
[503.95425415 0.60018754]
[516.67388916 11.80946350]
[509.42379761 27.13502312]
[492.69015503 24.41082001]
[477.99899292 27.43905640]
[463.30786133 30.46729279]
[457.40792847 34.88325500]
[448.41711426 33.44116592]
[433.68978882 36.28818130]
[421.05474854 48.48411179]
[403.70025635 42.28899765]
[389.00909424 45.31723404]
[381.06015015 57.86114502]
[366.20437622 61.14148712]
[353.10104370 52.71883774]
[342.19787598 62.86623764]
[327.11981201 58.07426071]
[312.42868042 61.10249710]
[297.73751831 64.13073730]
[283.04638672 67.15897369]
[268.35522461 70.18721008]
[253.66409302 73.21544647]
[238.97294617 76.24368286]
[224.28179932 79.27191925]
[210.77874756 93.13471222]
[191.75328064 86.41695404]
[177.14120483 89.80622101]
[162.52912903 93.19548798]
[147.91703796 96.58476257]
[145.34024048 115.87356567]
[135.32302856 132.55749512]
[119.50926208 143.89869690]
[100.49400330 148.03605652]
[81.39767456 144.29063416]
[73.50119019 157.04389954]
[65.60471344 169.79714966]
[69.00660706 184.99797058]
[60.81678009 197.81909180]
[46.30416107 200.96861267]
[38.40767670 213.72186279]
[30.58990288 226.52352905]
[22.85113716 239.37309265]
[15.11236858 252.22267151]
[7.37360144 265.07223511]
[-0.36516583 277.92181396]
[-0.85685468 293.73538208]
[-14.05114746 300.64624023]
[-21.78991508 313.49578857]
[-29.52868271 326.34536743]
[-37.26744843 339.19494629]
[-45.00621796 352.04452515]
[-46.74449158 360.98278809]
[-52.92030334 365.00387573]
[-60.81678772 377.75714111]
[-68.71327209 390.51040649]
[-54.04390335 405.96984863]
[-59.68132782 435.14947510]
[-65.44291687 448.99880981]
[-71.20449829 462.84814453]
[-65.42197418 477.31188965]
[-71.46233368 491.27502441]
[-85.28694916 496.69863892]
[-91.04853058 510.54797363]
[-96.81011963 524.39733887]
[-102.57170105 538.24664307]
[-108.33329010 552.09600830]
[-106.49024963 567.80944824]
[-118.52263641 576.58850098]
[-114.44615173 581.98730469]
[-112.23872375 588.32763672]
[-112.08333588 594.98803711]
[-113.96348572 601.32586670]
[-117.66774750 606.73919678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 36]
[3 35]
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[12 25]
[13 24]
[38 249]
[40 247]
[41 246]
[42 245]
[43 244]
[44 243]
[47 240]
[48 239]
[49 238]
[53 63]
[54 62]
[55 61]
[56 60]
[64 236]
[65 235]
[66 234]
[67 232]
[68 231]
[69 230]
[70 229]
[71 228]
[73 226]
[74 225]
[75 224]
[76 223]
[77 222]
[79 221]
[80 220]
[83 217]
[84 216]
[85 215]
[93 133]
[94 132]
[95 131]
[96 130]
[98 129]
[99 128]
[100 127]
[101 126]
[102 124]
[103 123]
[104 122]
[105 121]
[110 117]
[111 116]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[154 210]
[155 209]
[156 208]
[157 207]
[161 205]
[162 204]
[163 203]
[164 202]
[165 201]
[166 200]
[167 199]
[168 198]
[170 196]
[173 193]
[174 192]
[177 190]
[178 189]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
