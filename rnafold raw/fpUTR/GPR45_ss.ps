%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAGGUCCACAGACAUCCAGGAAGAUGCAGCCAGCAGACAAAGAAUGGCAGCCACCCAAGUGCUGAGGGGAGCCCUCCCGGCCAUUUCUGUCCCAGCUCCAAGGGUCUCUCCACG\
) } def
/len { sequence length } bind def

/coor [
[-64.84454346 517.61627197]
[-74.14180756 520.39538574]
[-83.74799347 519.52819824]
[-91.76498413 532.20605469]
[-92.60121155 548.00512695]
[-105.94299316 554.62677002]
[-113.95998383 567.30462646]
[-121.97696686 579.98248291]
[-122.09629059 596.38116455]
[-136.48928833 604.24078369]
[-150.34968567 595.47601318]
[-149.41909790 579.10327148]
[-134.65481567 571.96551514]
[-126.63783264 559.28765869]
[-118.62084198 546.60980225]
[-118.35803986 531.71752930]
[-104.44283295 524.18908691]
[-96.42584229 511.51119995]
[-102.73883057 492.19186401]
[-92.85034180 474.10778809]
[-72.62435913 468.85278320]
[-66.01261139 455.38858032]
[-59.40087128 441.92434692]
[-52.97048187 428.37261963]
[-46.72260666 414.73574829]
[-40.47473526 401.09887695]
[-34.22686005 387.46200562]
[-35.95980453 372.66854858]
[-23.17751884 363.34527588]
[-31.91371918 351.28109741]
[-33.44852066 336.36465454]
[-27.27011681 322.59170532]
[-14.94643974 313.70217896]
[0.27142036 312.16464233]
[6.51929426 298.52780151]
[12.76716805 284.89093018]
[9.42551422 265.92413330]
[25.76560402 254.26808167]
[31.27248955 240.31552124]
[36.77937698 226.36294556]
[42.28626251 212.41036987]
[37.75033569 201.10832214]
[42.32721329 189.38951111]
[54.04879379 183.80606079]
[59.92829514 170.00636292]
[65.80779266 156.20668030]
[71.68729401 142.40698242]
[77.56678772 128.60729980]
[83.44628906 114.80760193]
[89.32579041 101.00791168]
[92.12859344 86.27209473]
[91.72587585 71.27750397]
[91.32315826 56.28290939]
[87.92813110 47.65863419]
[91.11637115 40.88154221]
[91.11637115 25.88154030]
[82.45266724 11.95773792]
[90.41679382 -2.37769651]
[106.81594086 -2.37769651]
[114.78007507 11.95773792]
[106.11637115 25.88154030]
[106.11637115 40.88154221]
[106.31774902 55.88018799]
[106.72046661 70.87477875]
[107.12319183 85.86937714]
[121.21857452 90.99967957]
[131.16542053 79.77201843]
[141.11225891 68.54435730]
[151.05909729 57.31669235]
[161.00593567 46.08903122]
[166.98347473 30.22380638]
[183.88342285 31.57580757]
[187.26263428 48.18957520]
[172.23359680 56.03587341]
[162.28675842 67.26353455]
[152.33992004 78.49119568]
[142.39308167 89.71885681]
[132.44624329 100.94651794]
[125.00070953 107.95525360]
[116.66213989 111.08341980]
[108.93389130 110.50154114]
[103.12548065 106.88741302]
[97.24597931 120.68710327]
[91.36648560 134.48680115]
[85.48698425 148.28648376]
[79.60748291 162.08618164]
[73.72798157 175.88586426]
[67.84848785 189.68556213]
[70.53814697 207.84082031]
[56.23883057 217.91726685]
[50.73194504 231.86982727]
[45.22505951 245.82240295]
[39.71817398 259.77496338]
[44.67992401 269.63873291]
[43.34631348 280.37643433]
[36.41164780 288.39193726]
[26.40403175 291.13879395]
[20.15615845 304.77566528]
[13.90828514 318.41253662]
[22.68132401 330.94174194]
[23.99640846 346.08001709]
[17.60011482 359.75311279]
[5.30096102 368.33139038]
[-9.54065514 369.59313965]
[-8.25460243 385.36199951]
[-20.58999634 393.70989990]
[-26.83786964 407.34674072]
[-33.08574295 420.98361206]
[-39.33361816 434.62048340]
[-40.08763123 443.85821533]
[-45.93666458 448.53610229]
[-52.54840851 462.00030518]
[-59.16015244 475.46450806]
[-53.33480453 483.58789062]
[-50.95686722 493.23690796]
[-52.32429504 503.02102661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[6 15]
[7 14]
[8 13]
[21 113]
[22 112]
[23 111]
[24 109]
[25 108]
[26 107]
[27 106]
[29 104]
[34 99]
[35 98]
[36 97]
[38 93]
[39 92]
[40 91]
[41 90]
[44 88]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 65]
[52 64]
[53 63]
[55 62]
[56 61]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
