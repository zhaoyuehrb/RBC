%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGGGCGGUGGGGUGGGCGGUGGGUUGGGGGGUUUCGUUGUGCGCGCAAAGCCGCGCGGGGCUGAGGGUCUUGUUCUGCCGGCGCCUGUCCGGACCCGGGCCCCUCUCCGCUUUCGGCCGGCCUCGGGCACCGGGCUUCUGGAGCUCCCGGAGCCCUGCCUGUUCCCUGUCCAUCCAGGCCAGCAGCUGAAGGAGCCUCACCUGCCUCCCUUCUCUGAGUAGCACGGAUUUGAGGAGAAGCAGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[522.48071289 483.93798828]
[527.29217529 469.54611206]
[516.01202393 459.65887451]
[504.73181152 449.77163696]
[493.45166016 439.88439941]
[482.17147827 429.99713135]
[470.89129639 420.10989380]
[456.22021484 417.53924561]
[450.94235229 402.62432861]
[439.66217041 392.73709106]
[428.32034302 382.92062378]
[416.91729736 373.17535400]
[405.51425171 363.43005371]
[394.11123657 353.68475342]
[382.70819092 343.93948364]
[363.47793579 341.78073120]
[357.10845947 322.63732910]
[345.46505737 313.18051147]
[333.82165527 303.72369385]
[322.17825317 294.26687622]
[310.53488159 284.81005859]
[298.89147949 275.35324097]
[291.73669434 273.58044434]
[287.16250610 265.70446777]
[275.63839722 256.10266113]
[260.90756226 253.90005493]
[255.25802612 239.12190247]
[243.73391724 229.52009583]
[229.00306702 227.31748962]
[223.35354614 212.53933716]
[211.82942200 202.93753052]
[200.30531311 193.33572388]
[188.78118896 183.73391724]
[177.25706482 174.13212585]
[165.73295593 164.53031921]
[154.20883179 154.92851257]
[142.68470764 145.32670593]
[131.16059875 135.72489929]
[119.63647461 126.12309265]
[103.71874237 134.69323730]
[84.49824524 133.71009827]
[67.59573364 122.26312256]
[53.29547501 126.79111481]
[38.99522018 131.31910706]
[24.69496727 135.84709167]
[10.39471149 140.37509155]
[3.18072701 145.93499756]
[-4.11293650 144.86904907]
[-18.46874428 149.21771240]
[-31.87474823 159.59631348]
[-45.55890274 149.58729553]
[-39.72919846 133.66716003]
[-22.81739807 134.86189270]
[-8.46159172 130.51324463]
[5.86671972 126.07483673]
[20.16697502 121.54684448]
[34.46722794 117.01885223]
[48.76748276 112.49085999]
[63.06773758 107.96286774]
[62.88000107 92.96404266]
[48.47089005 88.79540253]
[33.06407547 92.39271545]
[22.98843193 81.42318726]
[8.57932091 77.25454712]
[-5.82978916 73.08590698]
[-20.23889923 68.91726685]
[-38.02379227 73.73590088]
[-49.66688156 60.59088516]
[-64.12703705 56.60291672]
[-78.58719635 52.61494827]
[-92.20598602 60.63393402]
[-107.48505402 56.59344864]
[-115.35960388 42.89064026]
[-111.15780640 27.65514183]
[-97.37251282 19.92590523]
[-82.18228912 24.28854752]
[-74.59922791 38.15479279]
[-60.13907242 42.14276123]
[-45.67891693 46.13072586]
[-35.02433395 40.43744278]
[-22.95679283 43.62232971]
[-16.07026100 54.50815964]
[-1.66115117 58.67679596]
[12.74795914 62.84543610]
[27.15707016 67.01407623]
[41.53324890 63.11859131]
[52.63952637 74.38629150]
[67.04863739 78.55493164]
[75.28808594 73.82441711]
[83.77781677 71.63016510]
[79.51908112 57.24742126]
[75.26035309 42.86468124]
[71.00162506 28.48194313]
[66.74289703 14.09920216]
[62.48416519 -0.28353834]
[48.83634567 -12.66330624]
[53.62874603 -29.55667496]
[49.19033813 -43.88498688]
[44.75192642 -58.21329880]
[40.31351471 -72.54161072]
[35.78552246 -86.84186554]
[31.16812897 -101.11350250]
[26.55073357 -115.38513947]
[21.93333626 -129.65678406]
[11.56645584 -131.97816467]
[3.15430260 -138.33351135]
[-1.83466506 -147.52980042]
[-2.56433296 -157.88589478]
[1.02961874 -167.53976440]
[8.24009895 -174.78327942]
[4.16171694 -189.21820068]
[0.08333440 -203.65312195]
[-12.03975964 -214.69679260]
[-8.27334976 -230.65756226]
[7.50800419 -235.11636353]
[19.06979942 -223.48635864]
[14.51825047 -207.73150635]
[18.59663200 -193.29658508]
[22.67501450 -178.86166382]
[40.33605576 -170.58869934]
[46.27149582 -151.68971252]
[36.20497513 -134.27416992]
[40.82237244 -120.00253296]
[45.43976593 -105.73089600]
[50.05716324 -91.45925903]
[55.09325790 -86.07674408]
[54.64182663 -76.98001862]
[59.08023834 -62.65170670]
[63.51865005 -48.32339478]
[67.95706177 -33.99508667]
[78.49679565 -28.09190369]
[82.32143402 -16.21162033]
[76.86690521 -4.54226828]
[81.12563324 9.84047222]
[85.38436127 24.22321129]
[89.64309692 38.60595322]
[93.90182495 52.98869324]
[98.16055298 67.37142944]
[114.69072723 70.80771637]
[127.29988861 82.03551483]
[132.62263489 98.05809021]
[129.23828125 114.59896851]
[140.76240540 124.20077515]
[152.28651428 133.80258179]
[163.81063843 143.40438843]
[175.33476257 153.00619507]
[186.85887146 162.60800171]
[198.38299561 172.20980835]
[209.90711975 181.81161499]
[221.43122864 191.41342163]
[232.95535278 201.01522827]
[248.51048279 203.90461731]
[253.33570862 217.99598694]
[264.85983276 227.59779358]
[280.41494751 230.48718262]
[285.24020386 244.57853699]
[296.76431274 254.18034363]
[308.34829712 263.70983887]
[319.99169922 273.16665649]
[331.63507080 282.62347412]
[343.27847290 292.08029175]
[354.92187500 301.53710938]
[366.56527710 310.99392700]
[377.26876831 309.25204468]
[386.96994019 313.58557129]
[392.57846069 322.35058594]
[392.45346069 332.53643799]
[403.85650635 342.28170776]
[415.25955200 352.02700806]
[426.66259766 361.77230835]
[438.06564331 371.51757812]
[446.59866333 374.70214844]
[449.54940796 381.45690918]
[460.82958984 391.34414673]
[476.30752563 394.62200928]
[480.77853394 408.82971191]
[492.05871582 418.71694946]
[503.33889771 428.60421753]
[514.61907959 438.49145508]
[525.89923096 448.37869263]
[537.17944336 458.26596069]
[550.81665039 451.61001587]
[565.92254639 450.68481445]
[580.19323730 455.60025024]
[591.46423340 465.57781982]
[598.03869629 479.07379150]
[598.94274902 494.01794434]
[594.06970215 508.13116455]
[605.34991455 518.01843262]
[616.63006592 527.90563965]
[627.91027832 537.79290771]
[640.68096924 531.77062988]
[654.73962402 531.06787109]
[667.96569824 535.75769043]
[678.37677002 545.10217285]
[684.42584229 557.66839600]
[685.23083496 571.54815674]
[680.70330811 584.64764404]
[691.85888672 594.67529297]
[703.01440430 604.70294189]
[714.16998291 614.73059082]
[725.32550049 624.75823975]
[736.66735840 634.57470703]
[748.19146729 644.17651367]
[759.77545166 653.70599365]
[771.41882324 663.16284180]
[783.06225586 672.61962891]
[794.82305908 681.92999268]
[806.69952393 691.09240723]
[818.57598877 700.25482178]
[833.42700195 695.75750732]
[848.07415771 700.88006592]
[856.88525391 713.65289307]
[856.47229004 729.16448975]
[846.99401855 741.45031738]
[832.09503174 745.78625488]
[817.50433350 740.50506592]
[808.83233643 727.63745117]
[809.41357422 712.13128662]
[797.53710938 702.96887207]
[785.66064453 693.80645752]
[780.91729736 693.51318359]
[776.30139160 690.25408936]
[773.60540771 684.26300049]
[761.96203613 674.80621338]
[750.31860352 665.34936523]
[743.16381836 663.57659912]
[738.58966064 655.70062256]
[727.06555176 646.09881592]
[723.56439209 646.04193115]
[719.91473389 644.30236816]
[716.89990234 640.82763672]
[715.29785156 635.91375732]
[704.14233398 625.88610840]
[692.98675537 615.85845947]
[681.83123779 605.83081055]
[670.67565918 595.80316162]
[656.00134277 602.15887451]
[639.96630859 601.47015381]
[625.78839111 593.82440186]
[616.33508301 580.71014404]
[613.54327393 564.72753906]
[618.02301025 549.07305908]
[606.74285889 539.18585205]
[595.46264648 529.29858398]
[584.18249512 519.41131592]
[570.82952881 526.09179688]
[555.89575195 527.15386963]
[541.65466309 522.40466309]
[530.28613281 512.53833008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[9 174]
[10 173]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[24 157]
[25 156]
[27 154]
[28 153]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[48 54]
[49 53]
[60 88]
[61 87]
[63 85]
[64 84]
[65 83]
[66 82]
[68 79]
[69 78]
[70 77]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[97 130]
[98 129]
[99 128]
[100 127]
[101 125]
[102 124]
[103 123]
[104 122]
[110 119]
[111 118]
[112 117]
[188 246]
[189 245]
[190 244]
[191 243]
[198 237]
[199 236]
[200 235]
[201 234]
[202 233]
[203 229]
[204 228]
[205 226]
[206 225]
[207 224]
[208 221]
[209 220]
[210 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
