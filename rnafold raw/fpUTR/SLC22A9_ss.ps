%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUUCAUUGUAAACGACUGGGAGUAUCUGAGCAAAUUAUUUCUUACGUGACUUUAGAGAAAACGGCUACCUAUCUGACCCCAAAACGACUUGAGGAAACUGUUUCCACGGUCCUGCUGCAGAGGGGAAGCACAGUCGUCAAGAAGAGAGUGGGGUCAGGAUCAAAACACAUUUAGUGUGACUUAGGGAAAGAAAACAUUUUCCCUCUUUGAACCUCUCUGGAUACAGUCAUUUUGCCUCUACUUGAGGAUCAA\
CUGUUCAACCUCA\
) } def
/len { sequence length } bind def

/coor [
[7.54086828 666.81475830]
[5.27224445 681.64221191]
[3.00362086 696.46966553]
[12.56102848 709.05664062]
[10.33606720 724.70355225]
[-2.35123372 734.12731934]
[-17.97372246 731.73706055]
[-27.26285553 718.95086670]
[-24.70755386 703.35449219]
[-11.82383156 694.20104980]
[-9.55520821 679.37359619]
[-7.28658438 664.54614258]
[-12.34784222 660.65356445]
[-16.00361252 655.35614014]
[-17.87699699 649.14477539]
[-17.75802994 642.60675049]
[-15.62671566 636.37042236]
[-11.65795994 631.04473877]
[-6.20762300 627.15985107]
[0.21923210 625.11431885]
[3.52043796 610.48211670]
[6.82164383 595.84985352]
[10.12284946 581.21765137]
[8.53496265 574.02661133]
[13.54899311 566.43426514]
[17.02085686 551.84161377]
[15.52122021 548.68688965]
[15.45453262 544.65606689]
[17.21308899 540.42114258]
[20.87838364 536.80297852]
[24.85928535 522.34088135]
[28.84018707 507.87875366]
[32.82109070 493.41665649]
[36.80199051 478.95455933]
[40.78289413 464.49246216]
[30.55021095 458.95892334]
[21.69619179 451.56649780]
[14.54855251 442.63980103]
[9.36156845 432.55902100]
[6.30715036 421.74377441]
[5.46936893 410.63574219]
[6.84259415 399.68057251]
[10.33326435 389.31005859]
[15.76514721 379.92510986]
[22.88783646 371.88027954]
[31.38806725 365.47036743]
[40.90336990 360.91964722]
[51.03743744 358.37432861]
[61.37662888 357.89794922]
[63.64525223 343.07049561]
[65.91387177 328.24304199]
[68.18249512 313.41558838]
[70.45111847 298.58813477]
[72.71974182 283.76068115]
[74.64144897 268.88430786]
[76.21517944 253.96708679]
[77.78891754 239.04986572]
[79.36264801 224.13265991]
[80.93638611 209.21543884]
[82.51011658 194.29821777]
[84.08385468 179.38099670]
[63.90646744 172.47015381]
[46.23393250 160.52996826]
[32.29270172 144.38906860]
[23.05028343 125.16761017]
[19.14809227 104.19954681]
[4.16062164 103.58657837]
[-11.91236019 108.98061371]
[-21.54503632 95.02898407]
[-10.80523491 81.91056824]
[4.77358675 88.59911346]
[19.76105690 89.21207428]
[24.61765289 70.46749115]
[33.78633881 53.41225433]
[46.74263763 39.02196884]
[62.74541092 28.11980247]
[57.10646439 14.22008038]
[51.46751785 0.32035753]
[45.82857513 -13.57936573]
[40.18962860 -27.47908783]
[34.55068207 -41.37881088]
[28.91173744 -55.27853394]
[23.27279282 -69.17826080]
[17.63384819 -83.07798004]
[1.14763403 -86.93359375]
[-9.67443085 -99.73734283]
[-10.70903492 -116.30327606]
[-1.74566007 -130.07502747]
[-16.09802628 -136.12873840]
[-21.78389740 -150.23991394]
[-15.92416954 -163.88540649]
[-21.72505760 -177.71832275]
[-27.52594757 -191.55123901]
[-33.32683563 -205.38415527]
[-39.12772369 -219.21708679]
[-51.59990692 -228.95130920]
[-49.38657379 -243.68055725]
[-55.18746185 -257.51345825]
[-70.15150452 -261.17184448]
[-79.97723389 -272.80404663]
[-81.05664825 -287.81402588]
[-73.18482971 -300.43035889]
[-78.98571777 -314.26330566]
[-84.78661346 -328.09622192]
[-90.58750153 -341.92913818]
[-96.38838959 -355.76205444]
[-102.18927765 -369.59497070]
[-107.99016571 -383.42788696]
[-115.82710266 -370.63796997]
[-130.69767761 -368.67169189]
[-141.58946228 -378.98522949]
[-140.43655396 -393.94085693]
[-128.09272766 -402.46319580]
[-113.69972992 -398.24145508]
[-118.68342590 -412.38934326]
[-123.66712952 -426.53723145]
[-138.36799622 -431.86810303]
[-146.15811157 -445.42718506]
[-143.35920715 -460.81222534]
[-131.29286194 -470.75894165]
[-115.65640259 -470.57077026]
[-103.83291626 -460.33654785]
[-101.40507507 -444.88858032]
[-109.51924133 -431.52093506]
[-104.53553772 -417.37304688]
[-99.55184174 -403.22515869]
[-94.15724182 -389.22879028]
[-88.35635376 -375.39587402]
[-82.55546570 -361.56295776]
[-76.75457764 -347.73001099]
[-70.95368958 -333.89709473]
[-65.15280151 -320.06417847]
[-59.35191345 -306.23126221]
[-44.83575439 -303.00338745]
[-34.88610077 -291.71319580]
[-33.47586441 -276.55191040]
[-41.35454178 -263.31436157]
[-35.55365372 -249.48144531]
[-23.49639130 -240.73663330]
[-25.29480362 -225.01797485]
[-19.49391556 -211.18504333]
[-13.69302654 -197.35212708]
[-7.89213753 -183.51921082]
[-2.09124851 -169.68629456]
[11.74871063 -164.30194092]
[17.82869148 -150.35603333]
[12.08726025 -135.87591553]
[25.29182816 -134.04180908]
[35.95679474 -125.86392975]
[41.23849869 -113.38831329]
[39.66255569 -99.82382965]
[31.53357124 -88.71692657]
[37.17251587 -74.81719971]
[42.81146240 -60.91748047]
[48.45040512 -47.01775742]
[54.08935165 -33.11803436]
[59.72829819 -19.21831131]
[65.36724091 -5.31858778]
[71.00618744 8.58113480]
[76.64513397 22.48085785]
[86.67691803 20.14286041]
[96.92436981 19.09754181]
[107.22160339 19.36182213]
[117.40193939 20.93142509]
[127.30058289 23.78093910]
[136.75730896 27.86424255]
[145.61901855 33.11523438]
[153.74227905 39.44891357]
[160.99560547 46.76276016]
[173.16166687 37.98855209]
[185.32774353 29.21434593]
[197.49382019 20.44013786]
[209.65988159 11.66593075]
[218.96977234 -2.50313783]
[235.16233826 2.52051830]
[234.81755066 19.47096062]
[218.43409729 23.83200264]
[206.26802063 32.60620880]
[194.10194397 41.38041687]
[181.93588257 50.15462494]
[169.76980591 58.92882919]
[172.22921753 63.42669296]
[174.39904785 68.07118225]
[176.27058411 72.84368896]
[177.83633423 77.72506714]
[179.09001160 82.69575500]
[193.97737122 80.86095428]
[208.86473083 79.02615356]
[223.75209045 77.19135284]
[238.63945007 75.35655212]
[253.52680969 73.52175140]
[268.41418457 71.68694305]
[275.81274414 58.04726791]
[289.82998657 51.39170456]
[305.07598877 54.27945328]
[315.68835449 65.60012054]
[317.58639526 81.00067139]
[310.04031372 94.55928802]
[295.95169067 101.06240082]
[280.73791504 98.00942993]
[270.24899292 86.57431030]
[255.36161804 88.40911102]
[240.47425842 90.24391174]
[225.58689880 92.07871246]
[210.69953918 93.91351318]
[195.81217957 95.74831390]
[180.92481995 97.58311462]
[180.26252747 110.61106873]
[177.51652527 123.36354828]
[172.75811768 135.50947571]
[166.11083984 146.73355103]
[157.74723816 156.74436951]
[147.88446045 165.28204346]
[136.77856445 172.12492371]
[124.71784210 177.09536743]
[112.01541901 180.06433105]
[99.00106812 180.95474243]
[97.42733765 195.87194824]
[95.85359955 210.78916931]
[94.27986908 225.70639038]
[92.70613098 240.62361145]
[91.13240051 255.54081726]
[89.55866241 270.45803833]
[91.42330933 274.29202271]
[91.94040680 278.13568115]
[91.26891327 281.57003784]
[89.68599701 284.26895142]
[87.54719543 286.02932739]
[85.27857208 300.85678101]
[83.00994873 315.68423462]
[80.74132538 330.51168823]
[78.47270203 345.33914185]
[76.20407867 360.16659546]
[96.52832031 370.11392212]
[111.11572266 388.18762207]
[116.83800507 411.31442261]
[112.13284302 435.27929688]
[97.38735962 455.49328613]
[105.65708160 468.00775146]
[113.92680359 480.52221680]
[122.19651794 493.03668213]
[137.56413269 497.64276123]
[143.41058350 512.58258057]
[135.25094604 526.39562988]
[119.34461975 528.48565674]
[107.89356995 517.24945068]
[109.68206024 501.30639648]
[101.41233826 488.79193115]
[93.14262390 476.27746582]
[84.87290192 463.76303101]
[77.46592712 464.94061279]
[79.82109070 479.75454712]
[82.17603302 494.56854248]
[67.36200714 496.92324829]
[65.00714111 482.10971069]
[62.65197372 467.29577637]
[55.24499512 468.47335815]
[51.26409531 482.93545532]
[47.28319168 497.39755249]
[43.30229187 511.85964966]
[39.32138824 526.32177734]
[35.34048462 540.78387451]
[31.61353111 555.31347656]
[28.14166832 569.90618896]
[24.75507545 584.51885986]
[21.45387077 599.15106201]
[18.15266418 613.78332520]
[14.85145855 628.41552734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[20 268]
[21 267]
[22 266]
[23 265]
[25 264]
[26 263]
[30 262]
[31 261]
[32 260]
[33 259]
[34 258]
[35 257]
[49 233]
[50 232]
[51 231]
[52 230]
[53 229]
[54 228]
[55 223]
[56 222]
[57 221]
[58 220]
[59 219]
[60 218]
[61 217]
[66 72]
[67 71]
[76 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[88 147]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[97 138]
[98 137]
[102 133]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[114 126]
[115 125]
[116 124]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
[186 207]
[187 206]
[188 205]
[189 204]
[190 203]
[191 202]
[192 201]
[238 250]
[239 249]
[240 248]
[241 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
