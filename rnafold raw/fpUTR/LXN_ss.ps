%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCAGUCAGCCCAGGGCUCUCGGAUGCAGGGAGCCUGGGCCCAAACAGCAGCUUCCGGAGUCGGAAGGAGCUGAGGAAGAAGACUGACUGAAGGAGCUUGCGACUUUUCCGCCUCGGCAACCGGACCCAGCAGCAAGCAGGACGGGCGGCGCUCUGCUACUGGUCCCGUUAAGCCAGAGUAGCCCAAGCCCUGAAGUCACUGCUCAUCCGGA\
) } def
/len { sequence length } bind def

/coor [
[74.92521667 227.24174500]
[77.26536560 212.15910339]
[85.92495728 199.59031677]
[99.18462372 192.03096008]
[98.09475708 177.07060242]
[97.00489044 162.11024475]
[95.91501617 147.14988708]
[94.82514954 132.18954468]
[93.73528290 117.22918701]
[86.72563934 114.56180573]
[72.70635223 109.22704315]
[65.69670868 106.55966187]
[54.93696976 117.01087952]
[44.17723083 127.46209717]
[33.41748810 137.91331482]
[22.65774727 148.36453247]
[11.89800549 158.81575012]
[1.13826442 169.26696777]
[-2.83504462 177.48770142]
[-9.85478878 179.79052734]
[-20.76539421 190.08415222]
[-31.67599869 200.37777710]
[-42.58660126 210.67140198]
[-53.49720764 220.96502686]
[-52.40739822 236.56459045]
[-61.64153290 249.18461609]
[-76.83953094 252.86628723]
[-90.82537079 245.87126160]
[-96.99535370 231.50236511]
[-92.43621826 216.54414368]
[-79.30063629 208.05943298]
[-63.79083252 210.05442810]
[-52.88022614 199.76080322]
[-41.96962357 189.46717834]
[-31.05901718 179.17355347]
[-20.14841270 168.87992859]
[-9.31295395 158.50723267]
[1.44678712 148.05601501]
[12.20652866 137.60479736]
[22.96627045 127.15357971]
[33.72600937 116.70236206]
[44.48575211 106.25113678]
[55.24549484 95.79991913]
[51.15289307 81.36903381]
[36.50845337 78.12243652]
[27.69207191 84.48458862]
[17.04898262 84.93716431]
[8.10103607 79.57194519]
[3.67674279 70.36625671]
[-10.86707592 66.69510651]
[-25.41089439 63.02396011]
[-39.95471191 59.35280991]
[-53.41562653 67.19127655]
[-68.11283112 63.26102829]
[-75.50265503 50.37979889]
[-90.04647064 46.70864868]
[-104.59029388 43.03749847]
[-119.13410950 39.36634827]
[-133.67793274 35.69519806]
[-148.22174072 32.02404785]
[-163.84248352 37.01651001]
[-175.79278564 25.78608513]
[-171.77919006 9.88567066]
[-155.93055725 5.67224979]
[-144.55059814 17.48022842]
[-130.00677490 21.15137863]
[-115.46295929 24.82252884]
[-100.91914368 28.49367905]
[-86.37532043 32.16482925]
[-71.83150482 35.83597946]
[-59.21353149 28.00511932]
[-44.41173553 31.52100563]
[-36.28356171 44.80899048]
[-21.73974419 48.48014069]
[-7.19592524 52.15129089]
[7.34789324 55.82244110]
[25.51809502 49.20317459]
[39.75504684 63.47799683]
[54.39948654 66.72458649]
[55.00066376 51.73664093]
[61.78546906 38.35881042]
[73.52269745 29.01870537]
[88.08244324 25.41124153]
[102.82260895 28.19104385]
[115.06838226 36.85367584]
[122.59755707 49.82717133]
[124.04385376 64.75727844]
[119.14482117 78.93470764]
[108.79145813 89.78539276]
[121.99447632 82.66638947]
[135.19749451 75.54738617]
[148.40052795 68.42837524]
[153.02935791 53.55519104]
[166.52050781 46.52359009]
[180.67129517 51.02813339]
[193.87431335 43.90912628]
[207.07733154 36.79012299]
[213.14283752 29.96537590]
[220.52455139 29.66517639]
[233.82971191 22.73894691]
[247.13487244 15.81271839]
[260.44003296 8.88648891]
[273.74520874 1.96025991]
[282.41342163 -11.27501965]
[297.27532959 -10.28875065]
[303.43945312 -17.02455711]
[310.82476807 -17.21736717]
[324.22924805 -23.94935417]
[311.01855469 -31.05411530]
[308.18954468 -45.78491974]
[317.82858276 -57.27791977]
[332.82693481 -57.05710983]
[342.12347412 -45.28533936]
[338.86132812 -30.64330292]
[352.71954346 -36.38355255]
[366.53561401 -42.22443390]
[380.30886841 -48.16563034]
[386.94607544 -54.43576050]
[394.32586670 -54.09145737]
[408.18408203 -59.83171082]
[422.04226685 -65.57196045]
[435.81552124 -71.51316071]
[449.50088501 -77.65404510]
[463.18624878 -83.79492950]
[472.60937500 -96.50379944]
[487.38879395 -94.65505981]
[501.07418823 -100.79594421]
[514.75958252 -106.93682861]
[528.44494629 -113.07771301]
[542.13031006 -119.21859741]
[553.18652344 -136.07746887]
[572.31988525 -133.26928711]
[585.82086182 -139.80561829]
[599.32183838 -146.34193420]
[612.82281494 -152.87825012]
[626.32379150 -159.41458130]
[629.17218018 -174.55369568]
[640.25927734 -184.99069214]
[655.18945312 -186.87565613]
[668.21081543 -179.69364929]
[681.71179199 -186.22996521]
[690.76129150 -199.20753479]
[705.58825684 -197.78942871]
[710.53967285 -212.79804993]
[724.69097900 -219.83485413]
[739.64642334 -214.72502136]
[746.53320312 -200.50013733]
[741.26556396 -185.59954834]
[726.96862793 -178.86354065]
[712.12457275 -184.28845215]
[704.04077148 -171.77839661]
[688.24816895 -172.72898865]
[674.74713135 -166.19265747]
[672.30450439 -151.52394104]
[661.56567383 -140.98158264]
[646.50213623 -138.75813293]
[632.86010742 -145.91360474]
[619.35913086 -139.37727356]
[605.85815430 -132.84095764]
[592.35717773 -126.30463409]
[578.85620117 -119.76831055]
[576.38482666 -109.85813904]
[568.70672607 -102.79432678]
[558.19195557 -101.08533478]
[548.27117920 -105.53321838]
[534.58581543 -99.39233398]
[520.90045166 -93.25144958]
[507.21505737 -87.11056519]
[493.52969360 -80.96968079]
[485.08544922 -68.70004272]
[469.32714844 -70.10955048]
[455.64178467 -63.96866608]
[441.95639038 -57.82778168]
[439.45175171 -53.76537704]
[434.37026978 -51.23124313]
[427.78253174 -51.71376801]
[413.92431641 -45.97351837]
[400.06613159 -40.23326492]
[386.25006104 -34.39238739]
[372.47680664 -28.45119095]
[367.58193970 -22.91765594]
[358.45977783 -22.52536011]
[344.60159302 -16.78510857]
[330.96124268 -10.54486465]
[317.55673218 -3.81287718]
[304.20156860 3.01641178]
[296.48501587 15.75628090]
[280.67141724 15.26542282]
[267.36627197 22.19165230]
[254.06111145 29.11787987]
[240.75595093 36.04410934]
[227.45077515 42.97034073]
[214.19633484 49.99314117]
[200.99331665 57.11214828]
[187.79029846 64.23115540]
[183.77780151 78.52925110]
[170.48947144 85.93701172]
[155.51953125 81.63140106]
[142.31651306 88.75040436]
[129.11347961 95.86940765]
[115.91046143 102.98841095]
[108.69563293 116.13931274]
[109.78549957 131.09967041]
[110.87537384 146.06002808]
[111.96524048 161.02037048]
[113.05511475 175.98072815]
[114.14498138 190.94108582]
[128.36024475 196.49888611]
[138.75001526 207.67991638]
[143.25141907 222.26414490]
[140.97068787 237.35591125]
[132.36065674 249.95869446]
[119.13085175 257.57022095]
[103.90808105 258.67919922]
[89.71481323 253.06546021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[12 43]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[44 79]
[45 78]
[49 76]
[50 75]
[51 74]
[52 73]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[89 201]
[90 200]
[91 199]
[92 198]
[95 195]
[96 194]
[97 193]
[99 192]
[100 191]
[101 190]
[102 189]
[103 188]
[105 186]
[107 185]
[108 184]
[114 183]
[115 182]
[116 180]
[117 179]
[119 178]
[120 177]
[121 176]
[122 173]
[123 172]
[124 171]
[126 169]
[127 168]
[128 167]
[129 166]
[130 165]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[140 153]
[141 152]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
