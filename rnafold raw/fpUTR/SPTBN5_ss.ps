%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACAAUGCCGCCUGUGUGCCGUCACCCCAGCACGCUGGCUCAAGGGGAGGGCUGUGGUGCAGCCCUGCUCCAGCCUUGGCCUCUCCUGAUGUCCCUCUCCCUCCCUCCACAGCCCCUGCUAUCUGCCAUCUCCAUCCGUCCAGCUGGGCCGCCUCUGUGGAACCCAGGCAUCACCAAGGUUUAGGGAGCCAUCCAGCAGCUCCUCAUCCCCAAAGUCUGCAGGGCUG\
) } def
/len { sequence length } bind def

/coor [
[175.21423340 86.83747864]
[160.69473267 90.60369873]
[146.17524719 94.36991119]
[131.65576172 98.13612366]
[117.13626099 101.90233612]
[130.28002930 109.13016510]
[133.80882263 123.70917511]
[125.42522430 136.14764404]
[110.58740997 138.34742737]
[98.95559692 128.87637329]
[98.10258484 113.90104675]
[88.44326782 125.37700653]
[78.78395081 136.85296631]
[75.81679535 152.39344788]
[61.70148087 157.14814758]
[52.04216385 168.62409973]
[42.38284302 180.10005188]
[32.72352600 191.57601929]
[23.06420708 203.05197144]
[13.40488911 214.52792358]
[10.43773365 230.06840515]
[-3.67757893 234.82312012]
[-2.07460308 250.54589844]
[-12.12344170 262.74411011]
[-27.86229706 264.18075562]
[-39.95358658 254.00352478]
[-41.22375870 238.25036621]
[-30.91924858 226.26734924]
[-15.15353489 225.16380310]
[-12.87727833 210.44415283]
[1.92893314 204.86860657]
[11.58825111 193.39265442]
[21.24757004 181.91670227]
[30.90688705 170.44073486]
[40.56620407 158.96478271]
[50.22552490 147.48883057]
[52.50178146 132.76918030]
[67.30799103 127.19364166]
[76.96730804 115.71768951]
[86.62663269 104.24172974]
[81.87410736 90.01451874]
[67.25675964 86.64804840]
[52.63940811 83.28158569]
[43.58749390 84.40489960]
[37.84528732 79.76737213]
[23.27549553 76.20069885]
[8.70570374 72.63401794]
[-5.86408758 69.06734467]
[-20.43387794 65.50066376]
[-35.00366974 61.93399048]
[-49.57345963 58.36731339]
[-64.81759644 62.60131836]
[-75.34008026 52.05965805]
[-91.95889282 63.37194061]
[-111.23661041 58.86447144]
[-120.81590271 41.88898468]
[-135.52011108 38.92479706]
[-150.22430420 35.96060944]
[-165.28132629 40.81824493]
[-176.22863770 30.71845245]
[-190.93284607 27.75426483]
[-205.63703918 24.79007721]
[-220.99832153 30.53141594]
[-233.47726440 19.89147568]
[-230.23658752 3.81571698]
[-214.61003113 -1.15849984]
[-202.67285156 10.08587456]
[-187.96865845 13.05006218]
[-173.26445007 16.01424980]
[-159.25917053 10.94459534]
[-147.26011658 21.25640488]
[-132.55592346 24.22059250]
[-117.85171509 27.18478012]
[-111.16393280 19.42626762]
[-101.78852081 15.10397816]
[-91.38417053 15.05623055]
[-81.82231903 19.35848236]
[-74.85057831 27.29773903]
[-71.77340698 37.48986816]
[-57.57139587 33.00074768]
[-46.00678635 43.79752350]
[-31.43699455 47.36419678]
[-16.86720276 50.93087387]
[-2.29741120 54.49755096]
[12.27237988 58.06422806]
[26.84217072 61.63090515]
[41.41196442 65.19757843]
[56.00587463 68.66423798]
[70.62322235 72.03070068]
[85.24057770 75.39717102]
[113.37004852 87.38284302]
[127.88954163 83.61663055]
[142.40902710 79.85041809]
[156.92852783 76.08420563]
[171.44801331 72.31799316]
[157.08570862 67.99085999]
[145.15774536 58.89559555]
[137.18356323 46.19078064]
[134.17892456 31.49478912]
[136.52656555 16.67964172]
[143.92744446 3.63253689]
[155.43881226 -5.98454857]
[169.59432983 -10.94656086]
[184.59080505 -10.62142563]
[198.51794434 -5.05055809]
[209.60168457 5.05640745]
[216.43014526 18.41201591]
[218.13346863 33.31499100]
[214.49470520 47.86694717]
[205.97737122 60.21421432]
[193.66857910 68.78297424]
[208.64001465 67.85754395]
[223.61143494 66.93211365]
[238.58285522 66.00669098]
[253.55429077 65.08126068]
[268.52572632 64.15583801]
[276.88540649 60.50694275]
[283.70861816 63.32183838]
[298.69131470 62.60187912]
[313.67404175 61.88192368]
[322.22973633 49.07153320]
[336.52102661 43.81678391]
[350.99496460 47.93613434]
[360.15817261 59.64823914]
[375.14089966 58.92828369]
[377.58209229 44.07502365]
[383.05618286 30.05942345]
[391.32162476 17.49322891]
[402.01510620 6.92438269]
[414.66748047 -1.18687618]
[428.72439575 -6.48804569]
[443.57055664 -8.74968338]
[458.55667114 -7.87533569]
[473.02783203 -3.90564919]
[486.35211182 2.98351264]
[497.94821167 12.48886013]
[507.31085205 24.19302750]
[514.03265381 37.58289719]
[517.82189941 52.07209778]
[532.80462646 51.35213852]
[539.62908936 42.90317154]
[549.76580811 39.66464233]
[559.80212402 42.47381973]
[566.49652100 50.17311859]
[581.49334717 49.86446762]
[596.49017334 49.55582047]
[611.48699951 49.24716949]
[626.48382568 48.93851852]
[641.48065186 48.62987137]
[652.38720703 37.50854111]
[667.60052490 37.40916061]
[678.13580322 47.87546921]
[693.13262939 47.56681824]
[708.12701416 47.15530777]
[723.11816406 46.64095688]
[738.10937500 46.12660217]
[753.10052490 45.61225128]
[757.50708008 42.86191940]
[762.07214355 42.14029694]
[765.99920654 43.16983032]
[768.71636963 45.39801025]
[783.71600342 45.50089645]
[798.71563721 45.60378647]
[813.71533203 45.70667648]
[828.71496582 45.80956650]
[839.92254639 34.99163818]
[855.13287354 35.30965805]
[865.37701416 46.06105042]
[880.37664795 46.16394043]
[892.76214600 35.96688843]
[908.42620850 39.43329620]
[915.35278320 53.90403366]
[908.22833252 68.27838898]
[892.51818848 71.52958679]
[880.27380371 61.16358566]
[865.27410889 61.06069565]
[854.88342285 71.67054749]
[839.67016602 71.77987671]
[828.61206055 60.80921555]
[813.61242676 60.70632553]
[798.61279297 60.60343552]
[783.61309814 60.50054550]
[768.61346436 60.39765549]
[753.61486816 60.60343170]
[738.62371826 61.11778259]
[723.63250732 61.63213348]
[708.64135742 62.14648819]
[702.07269287 65.51284790]
[693.44128418 62.56364441]
[678.44445801 62.87229156]
[668.34875488 73.76320648]
[653.14422607 74.28985596]
[641.78930664 63.62669373]
[626.79248047 63.93534470]
[611.79565430 64.24399567]
[596.79882812 64.55264282]
[581.80200195 64.86128998]
[566.80517578 65.16994476]
[551.02471924 76.35695648]
[533.52459717 66.33485413]
[518.54187012 67.05480957]
[516.15930176 81.84058380]
[510.75238037 95.81327057]
[502.55514526 108.36122894]
[491.92385864 118.93466187]
[479.32153320 127.06966400]
[465.29766846 132.40859985]
[450.46444702 134.71585083]
[435.46984863 133.88813782]
[420.96939087 129.95922852]
[407.59756470 123.09848785]
[395.94000244 113.60366821]
[386.50772095 101.88789368]
[379.71499634 88.46174622]
[375.86083984 73.91099548]
[360.87814331 74.63095093]
[352.88012695 87.16770172]
[338.86785889 92.65588379]
[324.13858032 88.79564667]
[314.39398193 76.86463165]
[299.41128540 77.58459473]
[284.42855835 78.30455017]
[269.45114136 79.12725830]
[254.47972107 80.05268860]
[239.50828552 80.97811890]
[224.53686523 81.90354156]
[209.56542969 82.82897186]
[194.59400940 83.75439453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[5 91]
[11 40]
[12 39]
[13 38]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[22 29]
[41 90]
[42 89]
[43 88]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[53 79]
[56 73]
[57 72]
[58 71]
[60 69]
[61 68]
[62 67]
[111 228]
[112 227]
[113 226]
[114 225]
[115 224]
[116 223]
[118 222]
[119 221]
[120 220]
[124 216]
[125 215]
[139 201]
[140 200]
[144 198]
[145 197]
[146 196]
[147 195]
[148 194]
[149 193]
[152 190]
[153 189]
[154 187]
[155 186]
[156 185]
[157 184]
[161 183]
[162 182]
[163 181]
[164 180]
[165 179]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
