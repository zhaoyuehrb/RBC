%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACUGGCAGCGACAGCUGCAGACGGGCUGAACCAGCUUUGUUCCCAGGGUGGCGCCUGCUCUCCAUCCAGGCCCCAUUCCGGCUCCCACCCGACGCUGCUUUUGUUCCCACGUUUCGGGGGGCAGCUGGCACUGUGAUUCCUGCCCCAUGAGUGCCUAGAGGCACGGAGCCACCAGGGAUCACCCCACGUGGGACACAGGGCUUGGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-43.97843933 412.23797607]
[-50.34529114 425.81970215]
[-56.71214294 439.40142822]
[-51.57321930 454.10617065]
[-58.22358704 467.78927612]
[-72.27397156 472.59783936]
[-78.64082336 486.17956543]
[-85.00767517 499.76129150]
[-85.81610107 508.85675049]
[-91.56806183 513.49389648]
[-98.13268280 526.98114014]
[-104.69730377 540.46838379]
[-111.26192474 553.95562744]
[-109.56558990 570.26678467]
[-123.00031281 579.67108154]
[-137.74560547 572.49414062]
[-138.63276672 556.11901855]
[-124.74916840 547.39099121]
[-118.18454742 533.90374756]
[-111.61992645 520.41650391]
[-105.05530548 506.92926025]
[-98.58939362 493.39443970]
[-92.22254944 479.81271362]
[-85.85569763 466.23098755]
[-91.14726257 452.35528564]
[-84.88385010 438.49078369]
[-70.29386902 433.03457642]
[-63.92701340 419.45285034]
[-57.56016541 405.87112427]
[-51.39244461 392.19784546]
[-45.42517090 378.43588257]
[-51.78940964 367.23406982]
[-50.52177811 354.21759033]
[-41.86200714 344.15917969]
[-28.80106735 340.87625122]
[-22.63334656 327.20297241]
[-16.46562576 313.52966309]
[-10.39796638 299.81164551]
[-4.43069220 286.04968262]
[1.53658211 272.28771973]
[7.50385666 258.52575684]
[13.47113132 244.76380920]
[19.43840599 231.00184631]
[25.40567970 217.23988342]
[31.27225113 203.43467712]
[37.03780365 189.58700562]
[42.80335999 175.73931885]
[48.56891251 161.89163208]
[54.33446503 148.04394531]
[52.08353806 133.32040405]
[64.53083038 123.55436707]
[58.56355286 109.79239655]
[44.51453781 104.53643799]
[30.46552086 99.28047943]
[16.41650391 94.02451324]
[0.78011680 96.43572998]
[-8.42912960 84.72936249]
[-22.47814560 79.47340393]
[-36.52716064 74.21743774]
[-50.57617950 68.96147919]
[-64.62519836 63.70551682]
[-76.92282867 73.02066040]
[-92.30613708 74.18566895]
[-105.86637115 66.82879639]
[-113.27651215 53.29759216]
[-112.17199707 37.90981674]
[-102.90528870 25.57565308]
[-88.43334961 20.23088646]
[-73.37413025 23.58101273]
[-62.53296280 34.55701828]
[-59.36923218 49.65650177]
[-45.32021713 54.91246414]
[-31.27120018 60.16842270]
[-17.22218323 65.42438507]
[-3.17316771 70.68035126]
[11.45833969 67.89318848]
[21.67246628 79.97549438]
[35.72148132 85.23146057]
[49.77050018 90.48741913]
[63.81951523 95.74338531]
[74.38519287 77.69449615]
[92.05375671 69.51776886]
[91.83458710 54.51936722]
[91.61540985 39.52096939]
[91.39624023 24.52257156]
[91.17707062 9.52417278]
[90.95789337 -5.47422600]
[90.62915039 -20.47062302]
[90.19084930 -35.46421814]
[89.75254822 -50.45781326]
[86.37457275 -58.94135666]
[89.41899872 -65.67333984]
[89.19982910 -80.67173767]
[88.98065186 -95.67013550]
[88.76148224 -110.66853333]
[88.54231262 -125.66693115]
[80.60419464 -139.35256958]
[88.15470123 -152.19154358]
[87.93553162 -167.18994141]
[87.60678101 -182.18634033]
[87.16848755 -197.17993164]
[73.61069489 -204.39671326]
[65.49131012 -217.43400574]
[64.99440002 -232.78486633]
[72.25363922 -246.31996155]
[85.31632233 -254.39845276]
[100.66866302 -254.84722900]
[114.18093872 -247.54560852]
[122.21843719 -234.45765686]
[122.61910248 -219.10398865]
[115.27515411 -205.61466980]
[102.16207886 -197.61824036]
[102.60037994 -182.62463379]
[105.93689728 -176.03254700]
[102.93392944 -167.40911865]
[103.15309906 -152.41072083]
[111.07553864 -139.79785156]
[103.54071045 -125.88610840]
[103.75988007 -110.88770294]
[103.97905731 -95.88930511]
[104.19822693 -80.89090729]
[104.41739655 -65.89250946]
[104.74614716 -50.89611435]
[105.18444824 -35.90251923]
[105.62274170 -20.90892220]
[108.95925903 -14.31682396]
[105.95629120 -5.69339943]
[106.17546844 9.30499935]
[106.39463806 24.30339813]
[106.61381531 39.30179596]
[106.83298492 54.30019379]
[107.05215454 69.29859161]
[113.64986420 71.61003113]
[119.57529449 75.31970215]
[124.53662109 80.24491119]
[128.28948975 86.14308167]
[130.64906311 92.72372437]
[145.64866638 92.83331299]
[160.64826965 92.94290924]
[175.64785767 93.05249786]
[190.64746094 93.16208649]
[205.64706421 93.27167511]
[220.64666748 93.38126373]
[235.64625549 93.49085236]
[250.64585876 93.60044098]
[265.64544678 93.71002960]
[270.46426392 79.38394928]
[279.46298218 67.26515198]
[291.75027466 58.53295135]
[306.11547852 54.03227615]
[321.14801025 54.19187927]
[335.37582397 58.98354340]
[347.40957642 67.92608643]
[356.07824707 80.13362885]
[360.54315186 94.40336609]
[375.54275513 94.51296234]
[390.54235840 94.62255096]
[405.54196167 94.73213959]
[420.54156494 94.84172821]
[434.52828979 86.27998352]
[448.80514526 94.34863281]
[448.68533325 110.74734497]
[434.29211426 118.60652924]
[420.43197632 109.84132385]
[405.43237305 109.73173523]
[390.43276978 109.62214661]
[375.43316650 109.51255798]
[360.43356323 109.40296936]
[355.76062012 123.60594940]
[346.91452026 135.68553162]
[334.75137329 144.45127869]
[320.45507812 149.03454590]
[305.42181396 148.97448730]
[291.12390137 144.26438904]
[278.96551514 135.35359192]
[270.14483643 123.10459137]
[265.53585815 108.70963287]
[250.53627014 108.60004425]
[235.53666687 108.49045563]
[220.53707886 108.38086700]
[205.53747559 108.27127075]
[190.53787231 108.16168213]
[175.53826904 108.05209351]
[160.53868103 107.94250488]
[145.53907776 107.83291626]
[130.53947449 107.72332764]
[126.06905365 119.38539886]
[117.20061493 128.71501160]
[105.08095551 134.08172607]
[91.44717407 134.39682007]
[78.37850952 129.31991577]
[80.21704865 145.03393555]
[68.18215179 153.80949402]
[62.41659927 167.65718079]
[56.65104294 181.50486755]
[50.88549042 195.35255432]
[45.11993790 209.20024109]
[44.71086884 218.32240295]
[39.16764450 223.20715332]
[33.20037079 236.96911621]
[27.23309517 250.73107910]
[21.26581955 264.49304199]
[15.29854584 278.25500488]
[9.33127117 292.01696777]
[3.36399651 305.77893066]
[2.82168365 314.89413452]
[-2.79232335 319.69738770]
[-8.96004391 333.37066650]
[-15.12776470 347.04397583]
[-8.63998413 363.29141235]
[-15.77112865 378.89620972]
[-31.66320610 384.40313721]
[-37.63048172 398.16510010]
[-37.25623703 404.76107788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[6 24]
[7 23]
[8 22]
[10 21]
[11 20]
[12 19]
[13 18]
[30 213]
[31 212]
[35 209]
[36 208]
[37 207]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[51 191]
[52 80]
[53 79]
[54 78]
[55 77]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 125]
[89 124]
[90 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[98 116]
[99 115]
[100 113]
[101 112]
[137 186]
[138 185]
[139 184]
[140 183]
[141 182]
[142 181]
[143 180]
[144 179]
[145 178]
[146 177]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
