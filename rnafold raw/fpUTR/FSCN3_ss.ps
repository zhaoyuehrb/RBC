%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCCCCACUGUGGUGUGAUAAGAGGCUGCCCUCACAGUCACAAUGCUCCCGGGUCACAGAGGUGCUGGGCCCCAGGCCAGCCUCUGCCUGGGAAGUUCUCUCUGGGAACAUCUGGUGGGUACUACAGGCCCUAUUCCAGGCCCUAUGGCCUGUGGAACCUCACCACGGGGGGGAGGGCUGGGCCAGACGGAGACAUCACCUGUGGUGUCAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[144.76794434 337.10153198]
[136.65863037 324.48254395]
[139.71807861 309.79785156]
[152.19209290 301.46725464]
[166.92765808 304.26672363]
[159.36590576 291.31219482]
[151.80415344 278.35763550]
[144.24241638 265.40310669]
[136.68066406 252.44857788]
[129.11891174 239.49404907]
[123.03634644 235.30476379]
[121.54319000 226.30009460]
[114.16719818 213.23890686]
[106.79120636 200.17771912]
[99.41521454 187.11651611]
[92.03921509 174.05532837]
[84.66322327 160.99414062]
[77.28723145 147.93295288]
[62.58599091 144.95408630]
[50.70745850 154.11381531]
[38.82892227 163.27352905]
[26.95038986 172.43324280]
[15.07185650 181.59295654]
[13.14565563 198.98320007]
[-0.49519530 209.39222717]
[-17.10947800 206.76446533]
[-28.85600471 216.09286499]
[-40.60253143 225.42127991]
[-52.34905624 234.74967957]
[-57.86491013 250.19335938]
[-74.04385376 252.87174988]
[-84.24237823 240.02955627]
[-77.96911621 224.87771606]
[-61.67745972 223.00315857]
[-49.93093491 213.67474365]
[-38.18440628 204.34634399]
[-26.43788147 195.01794434]
[-26.77539635 182.14097595]
[-19.52813911 171.25717163]
[-7.15423155 166.46217346]
[5.91213846 169.71443176]
[17.79067230 160.55471802]
[29.66920662 151.39498901]
[41.54774094 142.23527527]
[53.42627335 133.07556152]
[52.99810791 125.58779144]
[39.02013779 131.02987671]
[29.52498817 119.41772461]
[37.63466263 106.79896545]
[52.14177322 110.61225128]
[51.71360779 103.12448120]
[38.86837387 95.37852478]
[26.02313805 87.63256073]
[13.17790222 79.88659668]
[0.33266696 72.14063263]
[-12.51256847 64.39467621]
[-25.35780334 56.64871216]
[-30.56350708 56.55066299]
[-34.79106140 54.65847397]
[-37.52161789 51.64355469]
[-38.57720184 48.28588486]
[-51.07891464 39.99690628]
[-63.58063126 31.70793343]
[-76.08234406 23.41895676]
[-88.58406067 15.12998199]
[-101.08577728 6.84100628]
[-113.58749390 -1.44796896]
[-122.48606110 1.63415766]
[-131.66938782 0.30011696]
[-139.09962463 -5.02641487]
[-143.18673706 -13.05017471]
[-143.12811279 -21.91721535]
[-155.26336670 -30.73399544]
[-167.39862061 -39.55077362]
[-179.53387451 -48.36755371]
[-195.90194702 -52.78596878]
[-196.18734741 -69.73751831]
[-179.97727966 -74.70440674]
[-170.71710205 -60.50280762]
[-158.58183289 -51.68602753]
[-146.44657898 -42.86925125]
[-134.31132507 -34.05247116]
[-113.67229462 -33.67973328]
[-105.29851532 -13.94968414]
[-92.79679871 -5.66070890]
[-80.29508972 2.62826633]
[-67.79337311 10.91724205]
[-55.29165649 19.20621681]
[-42.78993988 27.49519348]
[-30.28822517 35.78416824]
[-17.61184120 43.80347443]
[-4.76660633 51.54943848]
[8.07862854 59.29539871]
[20.92386436 67.04135895]
[33.76910019 74.78732300]
[46.61433411 82.53328705]
[59.45957184 90.27925110]
[69.22560120 72.65650940]
[85.93840027 61.86526871]
[84.22853088 46.96304321]
[82.51866150 32.06081772]
[80.80878448 17.15859222]
[79.09891510 2.25636625]
[77.38904572 -12.64585972]
[69.57659149 -27.69251823]
[81.87252045 -39.36498642]
[96.49267578 -30.78085136]
[92.29126740 -14.35573101]
[94.00114441 0.54649508]
[95.71101379 15.44872093]
[97.42088318 30.35094643]
[99.13075256 45.25317383]
[100.84062958 60.15539932]
[107.72803497 63.12417603]
[113.37198639 49.22648621]
[115.03756714 34.31924438]
[129.69151306 31.11580849]
[137.42550659 43.96824646]
[127.73132324 55.41599655]
[121.50284576 69.06172943]
[128.39024353 72.03050995]
[140.39837646 63.04134369]
[152.40649414 54.05217743]
[164.41461182 45.06301117]
[170.82542419 30.59884834]
[185.65092468 29.16570663]
[197.65904236 20.17654228]
[209.66716003 11.18737698]
[221.67527771 2.19821239]
[233.68339539 -6.79095268]
[245.69151306 -15.78011799]
[257.69964600 -24.76928329]
[269.70776367 -33.75844574]
[281.71588135 -42.74761200]
[288.12667847 -57.21177673]
[302.95217896 -58.64491653]
[314.96029663 -67.63407898]
[313.05725098 -82.87461853]
[319.04421997 -97.01858521]
[331.31076050 -106.26132202]
[346.55718994 -108.11657715]
[360.68231201 -102.08530426]
[369.88653564 -89.78987885]
[371.69400024 -74.53770447]
[365.61846924 -60.43155289]
[353.29428101 -51.26589584]
[338.03649902 -49.50625610]
[323.94946289 -55.62596512]
[311.94134521 -46.63679886]
[306.38943481 -32.81560135]
[290.70504761 -30.73949432]
[278.69692993 -21.75032806]
[266.68878174 -12.76116371]
[254.68067932 -3.77199912]
[242.67256165 5.21716595]
[230.66444397 14.20633125]
[218.65632629 23.19549561]
[206.64820862 32.18466187]
[194.64009094 41.17382431]
[189.08816528 54.99502563]
[173.40377808 57.07113266]
[161.39566040 66.06029510]
[149.38752747 75.04946136]
[137.37940979 84.03862762]
[131.47499084 126.53402710]
[90.34841919 140.55694580]
[97.72441101 153.61814880]
[105.10041046 166.67933655]
[112.47640228 179.74052429]
[119.85239410 192.80171204]
[127.22839355 205.86291504]
[134.60438538 218.92410278]
[142.07344055 231.93229675]
[149.63519287 244.88682556]
[157.19694519 257.84136963]
[164.75869751 270.79589844]
[172.32043457 283.75042725]
[179.88218689 296.70495605]
[187.99180603 309.32376099]
[196.63439941 321.58367920]
[205.27699280 333.84359741]
[213.91958618 346.10351562]
[222.56217957 358.36343384]
[231.20477295 370.62335205]
[239.84736633 382.88327026]
[248.57728577 395.08117676]
[257.39407349 407.21643066]
[266.21084595 419.35168457]
[275.02761841 431.48693848]
[289.39877319 438.10363770]
[290.62005615 452.94808960]
[298.19070435 458.04696655]
[299.47463989 465.32015991]
[308.11721802 477.58007812]
[323.63406372 477.66699219]
[336.11636353 486.88497925]
[340.76449585 501.68954468]
[335.79107666 516.38800049]
[323.10855103 525.32849121]
[307.59356689 525.07330322]
[295.21197510 515.72039795]
[290.72473145 500.86633301]
[295.85729980 486.22268677]
[287.21472168 473.96276855]
[278.48480225 461.76486206]
[264.74429321 456.01614380]
[262.89236450 440.30371094]
[254.07557678 428.16845703]
[245.25880432 416.03320312]
[236.44203186 403.89794922]
[229.97175598 400.33657837]
[227.58744812 391.52584839]
[218.94485474 379.26596069]
[210.30226135 367.00604248]
[201.65966797 354.74612427]
[193.01707458 342.48620605]
[184.37448120 330.22628784]
[175.73188782 317.96636963]
[172.15643311 332.53399658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 178]
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[18 166]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[26 37]
[27 36]
[28 35]
[29 34]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[72 82]
[73 81]
[74 80]
[75 79]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[121 164]
[122 163]
[123 162]
[124 161]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[131 154]
[132 153]
[133 152]
[134 151]
[136 149]
[137 148]
[179 218]
[180 217]
[181 216]
[182 215]
[183 214]
[184 213]
[185 212]
[186 210]
[187 209]
[188 208]
[189 207]
[191 205]
[193 204]
[194 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
