%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCAUUUUCCGCAAGGAAUCCAUGGCCGCCUGCACAGCCAGCGGAGCGCCCACGGGAGCUCCCCGCAGCCGCAAGCUGUUGCCGCGCGGUCUCACUACCCCUUGGCGCAGGCUAGAGCGCCCUAUAGCAGAAACCAUAGAUAAGCGGCCGGCUAGAGAGGACCUGCUCGAGGAAACGUUUGGAAUCCGGAGCGCUUGGAUCUCAGAAUCACCACC\
) } def
/len { sequence length } bind def

/coor [
[191.91070557 264.05978394]
[177.10554504 266.46966553]
[162.15011597 265.31420898]
[147.89082336 260.65884399]
[135.13467407 252.76704407]
[124.60361481 242.08543396]
[116.89366150 229.21855164]
[112.44116974 214.89460754]
[111.49839783 199.91943359]
[105.78323364 213.78799438]
[100.06807709 227.65655518]
[102.77315521 243.83105469]
[89.94779968 254.05075073]
[74.78562927 247.80250549]
[72.88419342 231.51396179]
[86.19951630 221.94139099]
[91.91468048 208.07283020]
[97.62984467 194.20426941]
[100.86170959 179.55657959]
[101.51298523 164.57072449]
[102.16426849 149.58486938]
[102.81554413 134.59901428]
[77.13825989 129.36187744]
[60.83708191 106.58009338]
[64.60668182 76.99805450]
[49.72011185 75.15684509]
[34.83354187 73.31562805]
[19.94697380 71.47441864]
[5.06040525 69.63320923]
[-9.82616425 67.79199982]
[-24.72567177 66.05859375]
[-39.28304291 72.25484467]
[-51.09689331 63.18388748]
[-66.00856018 61.55838013]
[-80.92021942 59.93287277]
[-95.84326172 58.41534805]
[-110.77689362 57.00588608]
[-125.71052551 55.59642410]
[-140.64416504 54.18696213]
[-152.75172424 63.98719788]
[-167.87648010 62.34506607]
[-177.14488220 50.74195862]
[-192.07852173 49.33249283]
[-207.01216125 47.92303085]
[-221.94578552 46.51356888]
[-238.50775146 54.56708908]
[-252.40489197 43.84776688]
[-267.35736084 42.65464401]
[-282.30984497 41.46152115]
[-274.69326782 54.38389969]
[-279.90826416 68.44817352]
[-294.10842896 73.28095245]
[-306.82009888 65.31773376]
[-308.66757202 50.43193817]
[-298.28762817 39.60266876]
[-313.11465454 37.33125305]
[-327.94168091 35.05983353]
[-343.01684570 41.51517868]
[-355.98098755 31.47210693]
[-353.49768066 15.26206970]
[-338.12158203 9.56056309]
[-325.67025757 20.23280907]
[-310.84323120 22.50422668]
[-296.01620483 24.77564240]
[-281.11669922 26.50904846]
[-266.16424561 27.70217133]
[-251.21176147 28.89529228]
[-241.80734253 21.29165459]
[-229.34310913 22.16041183]
[-220.53633118 31.57993507]
[-205.60269165 32.98939896]
[-190.66906738 34.39886093]
[-175.73542786 35.80832291]
[-164.45977783 26.14419937]
[-149.29487610 27.36086082]
[-139.23469543 39.25332642]
[-124.30106354 40.66278839]
[-109.36743164 42.07225037]
[-94.43379974 43.48171616]
[-87.48236084 40.98187256]
[-79.29471588 45.02120972]
[-64.38304901 46.64671707]
[-49.47138596 48.27222443]
[-35.98059464 41.95970917]
[-23.10016251 51.14692688]
[-16.11326218 48.74798203]
[-7.98495245 52.90542603]
[6.90161657 54.74663925]
[21.78818512 56.58785248]
[36.67475510 58.42906189]
[51.56132507 60.27027512]
[66.44789124 62.11148453]
[54.26642227 53.35866928]
[42.08495331 44.60585022]
[28.16006470 39.02933884]
[18.93270111 27.20327759]
[16.90957069 12.34033966]
[22.64027977 -1.52180231]
[34.56801987 -10.61735153]
[49.45249557 -12.47540569]
[63.25018311 -6.59120607]
[72.21279907 5.43674326]
[73.90550232 20.34121895]
[79.12253571 34.40473557]
[84.33957672 48.46825409]
[86.50360107 33.62517548]
[88.66763306 18.78209686]
[90.83166504 3.93901920]
[92.99569702 -10.90405941]
[81.79565430 -21.64364433]
[79.08033752 -36.92129898]
[85.89384460 -50.86244965]
[99.61624146 -58.10644531]
[114.97098541 -55.86781693]
[126.05386353 -45.00736618]
[128.60328674 -29.70115471]
[121.63894653 -15.83473587]
[107.83877563 -8.74002934]
[105.67474365 6.10304880]
[103.51071167 20.94612694]
[101.34667969 35.78920746]
[99.18265533 50.63228226]
[112.96701813 56.54762268]
[122.23423004 44.75275803]
[131.50144958 32.95789719]
[140.76864624 21.16303253]
[143.21057129 5.53140974]
[157.15768433 0.30386063]
[155.02590942 -15.35599613]
[164.65809631 -27.88582802]
[180.33961487 -29.85190964]
[192.76690674 -20.08779716]
[194.56709290 -4.38636684]
[184.67213440 7.93700123]
[168.95254517 9.57107162]
[167.17347717 24.35904694]
[152.56352234 30.43024254]
[143.29631042 42.22510529]
[134.02909851 54.01996994]
[124.76188660 65.81483459]
[134.50680542 80.34518433]
[137.05659485 96.59592438]
[132.78878784 111.39799500]
[147.45950317 114.52375031]
[162.13020325 117.64950562]
[176.80091858 120.77526093]
[191.47161865 123.90101624]
[208.85330200 117.81536102]
[221.41859436 130.06881714]
[236.13301086 132.98185730]
[250.84742737 135.89491272]
[265.56185913 138.80795288]
[280.33605957 141.40078735]
[295.16308594 143.67221069]
[309.99011230 145.94361877]
[324.81713867 148.21504211]
[339.64416504 150.48645020]
[348.31747437 137.97506714]
[361.50912476 130.50059509]
[376.57620239 129.49897766]
[390.52670288 135.11543274]
[400.61361694 146.18627930]
[404.87585449 160.47958374]
[419.70288086 162.75100708]
[434.52990723 165.02241516]
[448.26007080 156.72407532]
[463.25802612 162.41975403]
[468.01864624 177.74020386]
[458.88998413 190.93289185]
[442.87475586 191.87751770]
[432.25848389 179.84944153]
[417.43145752 177.57801819]
[402.60443115 175.30661011]
[394.25878906 187.66845703]
[381.32025146 195.21192932]
[366.32818604 196.39454651]
[352.25192261 190.92832947]
[341.90283203 179.84756470]
[337.37274170 165.31347656]
[322.54571533 163.04206848]
[307.71868896 160.77064514]
[292.89166260 158.49923706]
[278.06463623 156.22781372]
[275.02423096 158.00502014]
[270.97311401 158.40046692]
[266.56884766 156.95559692]
[262.64880371 153.52236938]
[247.93438721 150.60932922]
[233.21997070 147.69628906]
[218.50555420 144.78324890]
[208.28546143 151.24916077]
[196.00512695 148.94586182]
[188.34587097 138.57171631]
[173.67515564 135.44596863]
[159.00445557 132.32020569]
[144.33374023 129.19445801]
[129.66304016 126.06870270]
[117.80139923 135.25028992]
[117.15012360 150.23614502]
[116.49884033 165.22200012]
[115.84756470 180.20785522]
[123.00148010 167.02371216]
[133.06716919 155.90248108]
[145.47496033 147.47357178]
[159.52264404 142.21401978]
[174.41514587 140.42149353]
[189.30964661 142.19744873]
[203.36315918 147.44137573]
[215.78031921 155.85649109]
[225.85836792 166.96652222]
[233.02693176 180.14270020]
[236.88031006 194.63931274]
[237.20039368 209.63589478]
[233.96910095 224.28370667]
[227.36926270 237.75376892]
[217.77444458 249.28370667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 18]
[10 17]
[11 16]
[19 201]
[20 200]
[21 199]
[22 198]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[30 87]
[31 85]
[33 83]
[34 82]
[35 81]
[36 79]
[37 78]
[38 77]
[39 76]
[42 73]
[43 72]
[44 71]
[45 70]
[47 67]
[48 66]
[49 65]
[55 64]
[56 63]
[57 62]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[123 140]
[124 139]
[125 138]
[126 137]
[128 135]
[143 197]
[144 196]
[145 195]
[146 194]
[147 193]
[149 190]
[150 189]
[151 188]
[152 187]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
