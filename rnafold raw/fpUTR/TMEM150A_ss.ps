%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAACCUUUCAGGGCUGCUCCGAGGGCCGCAGCUAGAGUCGGCGCCACGAGGGGGCCGAGCAGGGUGCGGCGGCGGCGGGGCGCUCCGGGGAGGCCAGGACAGCUGAUGGUUGUGGCAGAAACAUCUCAAGGUAGCUGGUCCGCCCCCACUUCCCCAUCUACCUCUUGUCCUCCCCCCAACACCACCACCACCCUGGCUCCCCUCCCUC\
) } def
/len { sequence length } bind def

/coor [
[-28.20182419 253.47541809]
[-41.08076859 261.16522217]
[-55.67928314 264.61242676]
[-70.63768005 263.49600220]
[-84.56274414 257.91995239]
[-96.15750885 248.40356445]
[-104.34204865 235.83323669]
[-108.35406494 221.37973022]
[-107.81987762 206.38923645]
[-102.78924561 192.25798035]
[-93.73070526 180.30209351]
[-81.48729706 171.63482666]
[-96.40512085 173.20275879]
[-111.32295227 174.77069092]
[-126.24077606 176.33860779]
[-134.44905090 180.34817505]
[-141.39324951 177.81669617]
[-156.33287048 179.16128540]
[-171.27249146 180.50587463]
[-186.21209717 181.85046387]
[-201.15171814 183.19505310]
[-216.09132385 184.53964233]
[-224.92218018 200.37475586]
[-241.34645081 207.67547607]
[-258.71182251 203.69137573]
[-270.10803223 190.20152283]
[-285.00073242 191.99243164]
[-299.89343262 193.78334045]
[-314.78613281 195.57424927]
[-329.67883301 197.36517334]
[-344.57153320 199.15608215]
[-357.34921265 208.48570251]
[-370.90924072 202.32330322]
[-385.80194092 204.11421204]
[-391.60034180 216.61947632]
[-402.73242188 224.56347656]
[-416.22821045 225.95819092]
[-428.55139160 220.54570007]
[-436.52593994 209.83775330]
[-451.44375610 211.40568542]
[-466.36157227 212.97360229]
[-481.27941895 214.54153442]
[-496.19723511 216.10946655]
[-509.11303711 225.24688721]
[-522.57934570 218.88233948]
[-537.49719238 220.45025635]
[-548.67022705 231.96299744]
[-564.62286377 230.26229858]
[-573.11761475 216.65280151]
[-567.63806152 201.57455444]
[-552.38763428 196.59428406]
[-539.06512451 205.53242493]
[-524.14727783 203.96450806]
[-512.29852295 194.93922424]
[-497.76516724 201.19163513]
[-482.84735107 199.62370300]
[-467.92950439 198.05577087]
[-453.01168823 196.48785400]
[-438.09384155 194.91992188]
[-430.34585571 180.44807434]
[-415.34848022 173.37500000]
[-398.92742920 176.66720581]
[-387.59286499 189.22151184]
[-372.70013428 187.43060303]
[-360.98770142 178.22908020]
[-346.36245728 184.26338196]
[-331.46975708 182.47245789]
[-316.57705688 180.68154907]
[-301.68435669 178.89064026]
[-286.79162598 177.09973145]
[-271.89892578 175.30880737]
[-267.62387085 163.94570923]
[-258.87121582 155.42834473]
[-247.25942993 151.41725159]
[-234.97230530 152.73173523]
[-224.34840393 159.18333435]
[-217.43591309 169.60003662]
[-202.49630737 168.25544739]
[-187.55668640 166.91085815]
[-172.61708069 165.56626892]
[-157.67745972 164.22166443]
[-142.73783875 162.87707520]
[-127.80870819 161.42077637]
[-112.89087677 159.85285950]
[-97.97305298 158.28492737]
[-83.05522156 156.71699524]
[-75.50904846 150.86444092]
[-64.86009979 152.42065430]
[-50.81657791 147.15002441]
[-36.77305603 141.87940979]
[-22.72953224 136.60877991]
[-8.68600941 131.33816528]
[5.35751343 126.06753540]
[10.51565933 120.77377319]
[19.65073967 120.82482910]
[33.77153778 115.76488495]
[47.89233398 110.70493317]
[62.01313019 105.64498138]
[76.13392639 100.58502960]
[80.31146240 86.49839783]
[91.94683838 77.52605438]
[106.63268280 77.06663513]
[118.80612183 85.29417419]
[125.82978058 79.45289612]
[133.17617798 80.26586914]
[147.37109375 75.41772461]
[157.92979431 63.63535690]
[172.47473145 66.84380341]
[186.66964722 61.99565506]
[200.86456299 57.14751053]
[215.05946350 52.29936600]
[229.18026733 47.23941422]
[243.22378540 41.96879196]
[250.15928650 36.02310181]
[257.51702881 36.72608948]
[271.63781738 31.66613770]
[278.44332886 17.65461731]
[292.83590698 12.72426414]
[306.15179443 19.29862976]
[320.27261353 14.23867989]
[331.84951782 -0.08065314]
[348.98095703 3.72315860]
[363.02447510 -1.54746366]
[377.06802368 -6.81808615]
[378.91897583 -17.32649040]
[384.91943359 -26.05175018]
[393.93124390 -31.45719910]
[404.29354858 -32.62478638]
[414.12875366 -29.41040230]
[421.68258667 -22.45788574]
[435.94845581 -27.09313965]
[450.21429443 -31.72839546]
[464.48013306 -36.36365128]
[478.74600220 -40.99890518]
[493.01184082 -45.63415909]
[503.74563599 -57.25725937]
[518.24096680 -53.83159256]
[532.50677490 -58.46684647]
[546.77264404 -63.10210037]
[547.58435059 -78.25814056]
[553.81982422 -92.09588623]
[564.63574219 -102.74390411]
[578.56939697 -108.76213074]
[593.73626709 -109.33665466]
[608.08520508 -104.38977051]
[619.67565918 -94.59050751]
[626.94012451 -81.26413727]
[628.89611816 -66.21293640]
[625.27911377 -51.47246170]
[616.57824707 -39.03623962]
[603.97027588 -30.58616638]
[589.16033936 -27.26504517]
[574.15130615 -29.52202988]
[560.97308350 -37.05188370]
[551.40789795 -48.83625412]
[537.14202881 -44.20099640]
[522.87622070 -39.56574249]
[513.16278076 -28.27419090]
[497.64709473 -31.36831284]
[483.38125610 -26.73305702]
[469.11538696 -22.09780312]
[454.84954834 -17.46254730]
[440.58370972 -12.82729244]
[426.31784058 -8.19203758]
[418.77236938 9.76776314]
[400.16458130 16.49291039]
[382.33862305 7.22543716]
[368.29510498 12.49605942]
[354.25158691 17.76668167]
[348.96481323 28.64731979]
[337.30743408 33.15304184]
[325.33255005 28.35947609]
[311.21176147 33.41942596]
[305.10180664 46.95471954]
[290.85339355 52.28738403]
[276.69775391 45.78693390]
[262.57696533 50.84688568]
[248.49441528 56.01231766]
[234.45088196 61.28293991]
[231.69497681 65.18431091]
[226.45864868 67.39541626]
[219.90760803 66.49427795]
[205.71270752 71.34242249]
[191.51779175 76.19056702]
[177.32287598 81.03871155]
[167.77947998 92.47430420]
[152.21923828 89.61264038]
[138.02432251 94.46078491]
[123.86607361 99.41497040]
[119.68853760 113.50160217]
[108.05316162 122.47394562]
[93.36731720 122.93336487]
[81.19387817 114.70582581]
[67.07308197 119.76577759]
[52.95228195 124.82572937]
[38.83148575 129.88568115]
[24.71068954 134.94563293]
[10.62813568 140.11105347]
[-3.41538739 145.38168335]
[-17.45890999 150.65229797]
[-31.50243378 155.92292786]
[-45.54595566 161.19354248]
[-59.58948135 166.46417236]
[-44.76299286 168.73910522]
[-31.31312180 175.37995911]
[-20.49257278 185.76821899]
[-13.30916119 198.93629456]
[-10.43194485 213.65777588]
[-12.12890434 228.56147766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 86]
[13 85]
[14 84]
[15 83]
[17 82]
[18 81]
[19 80]
[20 79]
[21 78]
[22 77]
[26 71]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[33 64]
[34 63]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 53]
[46 52]
[88 203]
[89 202]
[90 201]
[91 200]
[92 199]
[93 198]
[95 197]
[96 196]
[97 195]
[98 194]
[99 193]
[103 189]
[105 188]
[106 187]
[108 185]
[109 184]
[110 183]
[111 182]
[112 179]
[113 178]
[115 177]
[116 176]
[119 173]
[120 172]
[122 169]
[123 168]
[124 167]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[137 157]
[138 156]
[139 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
