%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACGAGGAGGGCGACGACGAGGAGACGGGCAGCGGCGAGGAGGAGGAAGAGGAGGCGGAGGCGGCGGCCGGGUGGGAGCGCAGCGAGGACGCGCGGCUGCUGCGCGCAGGGCUGCCUCCUGCCGCUGUCCCCGCCGCGGCCGCCCGCGACAGGAGCGGCCGCCGCCCGCCGAGGCCGCCGCCCGGCCGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[36.57383728 578.72814941]
[22.97097397 585.46063232]
[7.85427141 586.82067871]
[-6.73186064 582.62438965]
[-18.81476784 573.43914795]
[-26.76033592 560.50732422]
[-29.49399376 545.57775879]
[-26.64603424 530.66961670]
[-18.60162163 517.79901123]
[-6.44869566 508.70669556]
[8.16915894 504.62222290]
[9.59499931 489.69015503]
[11.02083969 474.75808716]
[12.44668007 459.82598877]
[13.87252140 444.89392090]
[8.11273670 442.13339233]
[3.06325603 438.19699097]
[-1.03887093 433.26113892]
[-3.99929547 427.54940796]
[-5.67557049 421.32235718]
[-5.98399305 414.86553955]
[-4.90376043 408.47668457]
[-2.47823262 402.45159912]
[1.18676972 397.07086182]
[5.92756605 392.58636475]
[11.52991867 389.20989990]
[17.73870850 387.10287476]
[24.26955414 386.36871338]
[28.03677368 371.84948730]
[31.80399323 357.33026123]
[35.57121277 342.81103516]
[39.33843231 328.29180908]
[35.04555130 314.02923584]
[46.00074768 302.61459351]
[49.76796722 288.09536743]
[53.53518677 273.57614136]
[57.30240631 259.05691528]
[61.06962585 244.53767395]
[51.93370438 230.42343140]
[55.90573120 213.73905945]
[71.00435638 204.91453552]
[74.54074097 190.33735657]
[70.02210999 176.14471436]
[80.79482269 164.55767822]
[84.33120728 149.98051453]
[76.38389587 137.43556213]
[79.76263428 122.60185242]
[92.97482300 114.35104370]
[89.06241608 111.64794922]
[86.11880493 107.91314697]
[84.40471649 103.47743988]
[84.07197571 98.73371887]
[85.15005493 94.10216522]
[87.54345703 89.99300385]
[91.04019928 86.77021027]
[95.33055115 84.71923828]
[94.14179993 69.76641846]
[92.95305634 54.81359482]
[91.76430511 39.86077118]
[90.57555389 24.90795135]
[81.76892853 11.76436329]
[88.47325897 -1.53605902]
[87.28450775 -16.48888016]
[86.09575653 -31.44170189]
[84.90700531 -46.39452362]
[83.71826172 -61.34734726]
[82.52951050 -76.30017090]
[81.34075928 -91.25299072]
[80.15200806 -106.20581055]
[78.96325684 -121.15863037]
[67.35377502 -111.66021729]
[52.65580368 -114.65514374]
[45.68850708 -127.93885040]
[51.58050919 -141.73320007]
[65.99471283 -145.88420105]
[78.32124329 -137.33558655]
[78.32124329 -152.33558655]
[78.32124329 -167.33558655]
[78.32124329 -182.33558655]
[78.32124329 -197.33558655]
[75.18914032 -205.92788696]
[78.44212341 -212.57310486]
[78.68011475 -227.57121277]
[78.91810608 -242.56932068]
[79.15609741 -257.56744385]
[79.39408112 -272.56555176]
[67.15600586 -281.92160034]
[62.82431793 -296.51919556]
[67.85926819 -310.70065308]
[80.13245392 -319.09747314]
[77.13706970 -327.73840332]
[80.49507904 -334.33114624]
[80.97100067 -349.32360840]
[81.44691467 -364.31604004]
[81.92283630 -379.30850220]
[82.39875793 -394.30096436]
[82.87467194 -409.29339600]
[83.35059357 -424.28585815]
[77.80984497 -440.30883789]
[91.67282104 -450.06866455]
[104.88887787 -439.44924927]
[98.34304047 -423.80993652]
[97.86712646 -408.81747437]
[97.39120483 -393.82504272]
[96.91528320 -378.83258057]
[96.43936920 -363.84014893]
[95.96344757 -348.84768677]
[95.48752594 -333.85522461]
[95.13056183 -318.85949707]
[107.13115692 -310.07748413]
[111.71362305 -295.74340820]
[106.92095947 -281.29061890]
[94.39219666 -272.32754517]
[94.15420532 -257.32943726]
[93.91621399 -242.33132935]
[93.67823029 -227.33322144]
[93.44023895 -212.33511353]
[93.32124329 -197.33558655]
[93.32124329 -182.33558655]
[93.32124329 -167.33558655]
[93.32124329 -152.33558655]
[93.32124329 -137.33558655]
[93.91608429 -122.34738159]
[95.10482788 -107.39456177]
[96.29357910 -92.44174194]
[97.48233032 -77.48891449]
[98.67108154 -62.53609467]
[99.85983276 -47.58327484]
[101.04857635 -32.63045120]
[102.23732758 -17.67762947]
[103.42607880 -2.72480822]
[112.14767456 9.34925270]
[105.52837372 23.71920204]
[106.71712494 38.67202377]
[107.90587616 53.62484360]
[109.09462738 68.57766724]
[110.28337097 83.53048706]
[120.88997650 94.13709259]
[135.84280396 95.32583618]
[150.79562378 96.51458740]
[165.74844360 97.70333862]
[180.70126343 98.89208984]
[195.65408325 100.08083344]
[210.60690308 101.26958466]
[225.55972290 102.45833588]
[240.52151489 103.52841949]
[255.49130249 104.47978210]
[267.18579102 93.84895325]
[282.96798706 94.68450928]
[293.47457886 106.49073029]
[292.47219849 122.26320648]
[280.55554199 132.64439392]
[264.79455566 131.47532654]
[254.53994751 119.44958496]
[239.57014465 118.49822235]
[232.68803406 121.21434021]
[224.37097168 117.41115570]
[209.41815186 116.22240448]
[194.46533203 115.03366089]
[179.51251221 113.84490967]
[164.55969238 112.65615845]
[149.60687256 111.46740723]
[134.65405273 110.27866364]
[119.70122528 109.08991241]
[107.55199432 117.88742065]
[115.51471710 131.27520752]
[111.72066498 146.00816345]
[98.90837860 153.51689148]
[95.37199402 168.09407043]
[99.63768005 183.32937622]
[89.11791229 193.87374878]
[85.58152771 208.45091248]
[93.87200165 219.07423401]
[94.51746368 232.33930969]
[87.50601959 243.38854980]
[75.58885956 248.30488586]
[71.82164001 262.82412720]
[68.05442047 277.34335327]
[64.28719330 291.86257935]
[60.51997757 306.38180542]
[64.54340363 321.68289185]
[53.85766220 332.05902100]
[50.09044266 346.57824707]
[46.32322311 361.09747314]
[42.55600357 375.61669922]
[38.78878403 390.13595581]
[53.50184631 409.70971680]
[49.10764694 433.54525757]
[28.80459976 446.31976318]
[27.37875938 461.25183105]
[25.95291901 476.18389893]
[24.52707863 491.11599731]
[23.10123825 506.04806519]
[36.68193817 512.82513428]
[46.89450836 524.05316162]
[52.35777283 538.21356201]
[52.33287811 553.39129639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[41 172]
[42 171]
[44 169]
[45 168]
[48 165]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[90 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
