%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCGCCUGCGCAGGGAGCCCAAGGCAAGAGCCGCUAGGCUGCCCUGCCCGAAGGGCUCAACUGUCAGUGAGCCUGCGCAGGAGGCCAAUAGGCUGCCAAUACUCCUUGGACUCCCCGCCAGGGCCCUGCUGUCAGUGCGCCUGCGCGCGGGUCCGGCGCCGAGGUUCUUGACUGCUGUGCCGGACGCCAGGUGUAGCC\
) } def
/len { sequence length } bind def

/coor [
[75.72750092 310.45837402]
[84.17253113 296.40084839]
[83.93808746 281.40267944]
[83.70365143 266.40454102]
[83.46921539 251.40635681]
[83.23477936 236.40818787]
[83.00034332 221.41001892]
[82.76589966 206.41184998]
[82.53146362 191.41368103]
[82.29702759 176.41551208]
[79.04652405 169.77125549]
[82.17797089 161.18153381]
[82.17797089 146.18153381]
[73.51484680 113.77809906]
[90.09200287 97.54267883]
[76.87355804 90.45235443]
[63.65511322 83.36202240]
[50.43667221 76.27169800]
[37.21822739 69.18136597]
[21.39977455 69.47652435]
[13.84145832 56.64215088]
[0.62301499 49.55182266]
[-12.59542847 42.46149445]
[-25.81387329 35.37117004]
[-39.03231812 28.28083992]
[-52.25075912 21.19051361]
[-68.60741425 32.52361298]
[-88.37404633 33.98280334]
[-106.07621002 25.24416924]
[-116.85192871 8.79702568]
[-117.78694916 -10.76459503]
[-131.51858521 -16.80132484]
[-145.25022888 -22.83805466]
[-158.98185730 -28.87478256]
[-171.37422180 -19.90947723]
[-186.49040222 -18.36098480]
[-200.26057434 -24.54555511]
[-209.02758789 -36.71089172]
[-210.51817322 -51.53127670]
[-224.24981689 -57.56800461]
[-237.98144531 -63.60473251]
[-251.71308899 -69.64146423]
[-263.99920654 -65.69802856]
[-275.31484985 -71.01493073]
[-279.82180786 -82.24599457]
[-293.45739746 -88.49660492]
[-307.09301758 -94.74720764]
[-320.72863770 -100.99781036]
[-334.36425781 -107.24842072]
[-343.13555908 -101.15015411]
[-353.56814575 -99.26164246]
[-363.76403809 -101.85826111]
[-371.89654541 -108.40553284]
[-376.53756714 -117.66754150]
[-376.90808105 -127.93978882]
[-390.23574829 -134.82264709]
[-403.56338501 -141.70552063]
[-416.89102173 -148.58839417]
[-430.21868896 -155.47125244]
[-443.54632568 -162.35412598]
[-456.87396240 -169.23699951]
[-470.67712402 -162.14807129]
[-486.00564575 -164.55955505]
[-496.96545410 -175.54418945]
[-499.34228516 -190.87815857]
[-492.22213745 -204.66522217]
[-478.34289551 -211.60398865]
[-463.04141235 -209.02636719]
[-452.20141602 -197.92347717]
[-449.99108887 -182.56463623]
[-436.66345215 -175.68177795]
[-423.33581543 -168.79890442]
[-410.00814819 -161.91603088]
[-396.68051147 -155.03317261]
[-383.35287476 -148.15029907]
[-370.02523804 -141.26742554]
[-351.95898438 -148.53797913]
[-334.08935547 -140.05873108]
[-328.11364746 -120.88403320]
[-314.47802734 -114.63342285]
[-300.84240723 -108.38282013]
[-287.20678711 -102.13221741]
[-273.57119751 -95.88160706]
[-256.21722412 -98.46728516]
[-245.67636108 -83.37310028]
[-231.94471741 -77.33637238]
[-218.21308899 -71.29964447]
[-204.48144531 -65.26291656]
[-192.55349731 -74.18421173]
[-177.66250610 -75.94896698]
[-163.79588318 -69.98380280]
[-154.71726990 -57.79874802]
[-152.94512939 -42.60642242]
[-139.21350098 -36.56969070]
[-125.48185730 -30.53296280]
[-111.75021362 -24.49623299]
[-104.62125397 -32.13048935]
[-95.63272095 -37.49239349]
[-85.48742676 -40.14907074]
[-74.98248291 -39.87969208]
[-64.94657898 -36.69380951]
[-56.17468262 -30.83150482]
[-49.36503983 -22.74534988]
[-45.06359863 -13.06546879]
[-43.62025833 -2.55045938]
[-45.16043091 7.97206926]
[-31.94198799 15.06239700]
[-18.72354507 22.15272522]
[-5.50510120 29.24305153]
[7.71334267 36.33337784]
[20.93178558 43.42370605]
[35.80476761 42.62140274]
[44.30855560 55.96292496]
[57.52700043 63.05325317]
[70.74544525 70.14357758]
[83.96388245 77.23390961]
[97.18232727 84.32423401]
[112.17820740 83.97259521]
[125.04978180 76.27048492]
[137.92135620 68.56837463]
[150.73234558 60.76590347]
[163.48197937 52.86355972]
[176.23159790 44.96121597]
[188.98123169 37.05887222]
[201.66870117 29.05713272]
[214.29327393 20.95648766]
[221.72953796 6.99179888]
[236.61976624 6.63052607]
[249.24432373 -1.47011924]
[261.86889648 -9.57076454]
[268.90890503 -24.38191414]
[285.27511597 -25.42075539]
[294.13134766 -11.61861992]
[286.36709595 2.82604051]
[269.96951294 3.05379677]
[257.34497070 11.15444183]
[244.72039795 19.25508690]
[238.18713379 32.64036179]
[222.39392090 33.58104706]
[209.76934814 41.68169403]
[205.83433533 47.94488907]
[196.88357544 49.80849838]
[184.13394165 57.71084213]
[171.38432312 65.61318207]
[158.63468933 73.51553345]
[154.60226440 79.71646118]
[145.62347412 81.43994904]
[132.75189209 89.14205933]
[119.88031769 96.84416962]
[119.64591217 104.34050751]
[132.39555359 112.24282837]
[119.17709351 119.33318329]
[118.94268799 126.82951355]
[131.30789185 135.32078552]
[143.67311096 143.81204224]
[156.03831482 152.30329895]
[168.40353394 160.79457092]
[180.76873779 169.28582764]
[193.13395691 177.77708435]
[205.49916077 186.26835632]
[217.86437988 194.75961304]
[233.62048340 196.19345093]
[239.73220825 209.77638245]
[255.48831177 211.21022034]
[261.60003662 224.79315186]
[273.96524048 233.28440857]
[286.33047485 241.77568054]
[298.69567871 250.26693726]
[315.17535400 254.24893188]
[315.91101074 271.18692017]
[299.83862305 276.58270264]
[290.20440674 262.63214111]
[277.83920288 254.14088440]
[265.47399902 245.64962769]
[253.10877991 237.15835571]
[238.23712158 236.33187866]
[231.24095154 222.14160156]
[216.36929321 221.31510925]
[209.37310791 207.12483215]
[197.00790405 198.63356018]
[184.64268494 190.14230347]
[172.27748108 181.65104675]
[159.91226196 173.15977478]
[147.54705811 164.66851807]
[135.18183899 156.17724609]
[122.81663513 147.68598938]
[110.45142365 139.19473267]
[97.17797089 146.18153381]
[97.17797089 161.18153381]
[97.29519653 176.18107605]
[97.52963257 191.17924500]
[97.76406860 206.17741394]
[97.99850464 221.17558289]
[98.23294830 236.17375183]
[98.46738434 251.17192078]
[98.70182037 266.17007446]
[98.93625641 281.16824341]
[99.17069244 296.16641235]
[108.05095673 309.95312500]
[100.31185150 324.41128540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[10 190]
[12 189]
[13 188]
[15 117]
[16 116]
[17 115]
[18 114]
[19 113]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[31 96]
[32 95]
[33 94]
[34 93]
[39 88]
[40 87]
[41 86]
[42 85]
[45 83]
[46 82]
[47 81]
[48 80]
[49 79]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[118 149]
[119 148]
[120 147]
[121 145]
[122 144]
[123 143]
[124 142]
[125 140]
[126 139]
[128 137]
[129 136]
[130 135]
[153 187]
[154 186]
[155 185]
[156 184]
[157 183]
[158 182]
[159 181]
[160 180]
[161 179]
[163 177]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
