%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAACGCACAGGCACACACGCGCGCGCGCGUAAGCACACACUCACAAAGCGGGGAGGGUAACGUGAAUGACCUUGCAAAGGUAUCUUGCUCACUGGGGACAGGAUUAGCAAACCUGACACCUCUGCAAAUAAUUGUCUUCCUCCCGUAUUCCUCCUGAAACGGUUCGCUCCUUUCGCUGUCUCUCCCAGACCCAUCUGGUUUUCACAUCGCCAUACAAAGCCCAACCCGCCCAUCUCCUCUCUGCAAGCCCAG\
AGAACUUGAUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[60.65333176 470.75375366]
[65.03984070 456.40954590]
[64.77902222 441.41180420]
[64.51820374 426.41409302]
[64.25738525 411.41635132]
[56.75851440 411.54675293]
[50.20553207 425.03967285]
[43.65254974 438.53256226]
[37.09956741 452.02548218]
[38.03065872 467.81924438]
[25.51064301 475.88760376]
[30.44690704 490.66162109]
[23.60903931 504.25198364]
[9.49386787 508.86691284]
[2.94088554 522.35980225]
[3.87197542 538.15362549]
[-8.64803982 546.22198486]
[-6.93763638 562.53167725]
[-20.36424065 571.94750977]
[-35.11571503 564.78332520]
[-36.01700592 548.40893555]
[-22.14094162 539.66900635]
[-23.54074478 524.84027100]
[-10.55201721 515.80682373]
[-3.99903417 502.31393433]
[-9.09932613 488.36679077]
[-2.64588141 474.58972168]
[12.01774025 469.33462524]
[10.61793709 454.50595093]
[23.60666466 445.47247314]
[30.15964890 431.97958374]
[36.71263123 418.48669434]
[43.26561356 404.99377441]
[33.60754395 416.47079468]
[20.81317902 424.30047607]
[6.19830322 427.67767334]
[-8.73408127 426.25503540]
[-22.44831848 420.17889404]
[-33.53403091 410.07406616]
[-40.85115051 396.97982788]
[-43.64718628 382.24270630]
[-41.63458633 367.37835693]
[-35.02033234 353.91537476]
[-24.48464012 343.23834229]
[-11.11100101 336.44525146]
[3.72522879 334.23477173]
[18.49828148 336.83416748]
[31.68888855 343.97616577]
[41.94051743 354.92623901]
[48.19888687 368.55828857]
[49.82041550 383.46972656]
[51.90035629 368.61462402]
[53.98030090 353.75955200]
[56.06024551 338.90444946]
[58.14018631 324.04934692]
[48.99317551 312.35031128]
[50.89091873 297.25549316]
[63.22397614 287.74060059]
[65.30391693 272.88549805]
[67.38386536 258.03039551]
[69.46380615 243.17530823]
[60.81050110 235.80448914]
[56.73231888 225.06617737]
[58.34442139 213.57241821]
[65.36257935 204.17868042]
[76.14527130 199.27455139]
[78.56903839 184.47166443]
[72.98995209 170.66140747]
[82.85546875 158.29281616]
[85.27924347 143.48992920]
[87.70301056 128.68705750]
[70.42508698 120.87186432]
[58.89763641 102.60488129]
[59.21757889 78.35291290]
[74.06958771 55.90054703]
[63.68033218 45.08096695]
[53.29107666 34.26138687]
[42.90181732 23.44180679]
[32.51256180 12.62222481]
[17.37336922 8.02707386]
[14.13919735 -6.51216316]
[3.74994040 -17.33174515]
[-6.63931704 -28.15132523]
[-17.02857399 -38.97090530]
[-32.16776657 -43.56605911]
[-35.40193558 -58.10529327]
[-45.79119492 -68.92487335]
[-56.42848969 -79.50069427]
[-67.30811310 -89.82706451]
[-78.18772888 -100.15343475]
[-89.06734467 -110.47980499]
[-99.94696045 -120.80617523]
[-118.88220978 -119.61177063]
[-132.41877747 -132.44433594]
[-132.24238586 -150.77546692]
[-143.35847473 -160.84684753]
[-154.47457886 -170.91821289]
[-170.61015320 -173.84655762]
[-175.88642883 -189.37373352]
[-164.87564087 -201.52668762]
[-148.90472412 -197.80352783]
[-144.40319824 -182.03430176]
[-133.28710938 -171.96293640]
[-122.17102051 -161.89155579]
[-111.21052551 -164.90425110]
[-100.03710938 -162.24012756]
[-91.43788147 -154.44532776]
[-87.61458588 -143.36024475]
[-89.62059021 -131.68579102]
[-78.74097443 -121.35942078]
[-67.86135864 -111.03305054]
[-56.98173904 -100.70668030]
[-46.10212326 -90.38031006]
[-43.33410645 -90.29953003]
[-40.43038559 -89.13729095]
[-37.79588699 -86.83625031]
[-35.84896851 -83.48410034]
[-34.97161484 -79.31413269]
[-24.58235741 -68.49455261]
[-10.18627262 -64.67328644]
[-6.20899343 -49.36016464]
[4.18026400 -38.54058075]
[14.56952095 -27.72100258]
[24.95877838 -16.90142059]
[39.35486221 -13.08015823]
[43.33214188 2.23296785]
[53.72139740 13.05254841]
[64.11065674 23.87212944]
[74.49991608 34.69171143]
[84.88916779 45.51129150]
[92.30416107 44.38528824]
[88.37391663 29.90933609]
[84.44367218 15.43338585]
[80.51342010 0.95743471]
[76.58317566 -13.51851654]
[69.09899139 -26.51801872]
[72.87676239 -41.03450775]
[85.74832916 -48.73663712]
[100.32640076 -45.20397186]
[108.24429321 -32.46399307]
[104.95684814 -17.82720375]
[105.50117493 -2.83708262]
[106.04550171 12.15303802]
[106.58982086 27.14315796]
[107.13414764 42.13327789]
[114.54914093 41.00727463]
[121.25809479 27.59124374]
[127.96705627 14.17521191]
[134.67601013 0.75918001]
[135.70738220 -8.27976894]
[141.54129028 -12.77281189]
[148.40531921 -26.11016846]
[155.26934814 -39.44752502]
[151.76271057 -55.10265350]
[161.92791748 -67.51427460]
[177.96708679 -67.16124725]
[187.57633972 -54.31438828]
[183.38429260 -38.82871246]
[168.60670471 -32.58349609]
[161.74267578 -19.24613953]
[154.87864685 -5.90878248]
[148.09204102 7.46813679]
[141.38308716 20.88416862]
[134.67413330 34.30020142]
[127.96517181 47.71623230]
[132.53375244 53.66417694]
[144.42964172 44.52700806]
[156.32553101 35.38983917]
[168.22142029 26.25267029]
[176.71156311 13.88668823]
[191.09590149 18.14001846]
[191.49572754 33.13468933]
[177.35859680 38.14855576]
[165.46270752 47.28572464]
[153.56681824 56.42289352]
[141.67092896 65.56006622]
[146.23951721 71.50801086]
[160.93190002 68.48577881]
[172.89013672 58.12667465]
[186.91531372 63.14098740]
[201.60771179 60.11876297]
[216.30009460 57.09653854]
[220.08547974 42.35095596]
[229.85787964 30.75840950]
[243.63804626 24.58368874]
[258.67086792 25.00263405]
[271.97613525 31.87860870]
[280.93945312 43.80021667]
[295.63183594 40.77799225]
[310.32421875 37.75576782]
[325.01660156 34.73354340]
[339.70898438 31.71131706]
[351.60165405 20.41989708]
[367.24774170 25.33237267]
[370.55184937 41.39521027]
[358.11505127 52.08433914]
[342.73120117 46.40370178]
[328.03881836 49.42592621]
[313.34643555 52.44815063]
[298.65405273 55.47037506]
[283.96166992 58.49260330]
[280.43154907 72.98410797]
[270.92047119 84.55341339]
[257.27352905 90.87178802]
[242.17500305 90.63741302]
[228.62043762 83.84322357]
[219.32231140 71.78892517]
[204.62992859 74.81114960]
[189.93754578 77.83337402]
[179.03021240 87.97631073]
[163.95411682 83.17816925]
[149.26173401 86.20039368]
[133.78894043 123.54776764]
[102.50589752 131.11082458]
[100.08212280 145.91371155]
[97.65835571 160.71658325]
[103.06407928 175.58564758]
[93.37192535 186.89543152]
[90.94815063 201.69831848]
[102.58094025 216.68658447]
[99.57819366 235.09573364]
[84.31890106 245.25524902]
[82.23896027 260.11035156]
[80.15901184 274.96542358]
[78.07907104 289.82052612]
[87.32463074 302.35678101]
[85.00365448 317.39233398]
[72.99528503 326.12930298]
[70.91533661 340.98437500]
[68.83539581 355.83947754]
[66.75545502 370.69458008]
[64.67550659 385.54968262]
[76.61767578 384.69570923]
[89.56973267 390.76165771]
[100.01087189 404.00692749]
[107.02905273 417.26382446]
[114.04722595 430.52072144]
[130.83966064 432.68643188]
[142.90319824 444.32858276]
[145.61004639 460.70501709]
[138.08680725 475.31387329]
[145.25819397 488.48849487]
[152.42958069 501.66314697]
[159.60096741 514.83776855]
[166.77235413 528.01245117]
[173.94374084 541.18707275]
[189.17098999 545.41870117]
[196.87322998 559.21905518]
[192.48086548 574.40075684]
[178.59980774 581.95666504]
[163.46543884 577.40399170]
[156.05671692 563.44384766]
[160.76908875 548.35845947]
[153.59770203 535.18383789]
[146.42633057 522.00915527]
[139.25494385 508.83453369]
[132.08355713 495.65988159]
[124.91216278 482.48522949]
[111.59027863 481.99737549]
[100.15251923 474.94168091]
[93.63478851 463.06555176]
[93.82866669 449.41174316]
[100.79033661 437.53890991]
[93.77215576 424.28201294]
[86.75398254 411.02511597]
[79.25511169 411.15551758]
[79.51593781 426.15325928]
[79.77675629 441.15100098]
[80.03757477 456.14871216]
[84.92015839 470.33181763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 33]
[7 32]
[8 31]
[9 30]
[11 28]
[14 25]
[15 24]
[17 22]
[51 232]
[52 231]
[53 230]
[54 229]
[55 228]
[58 225]
[59 224]
[60 223]
[61 222]
[66 219]
[67 218]
[69 216]
[70 215]
[71 214]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[81 124]
[82 123]
[83 122]
[84 121]
[86 119]
[87 118]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[95 104]
[96 103]
[97 102]
[146 165]
[147 164]
[148 163]
[149 162]
[151 161]
[152 160]
[153 159]
[177 212]
[178 211]
[180 209]
[181 208]
[182 207]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
[235 265]
[236 264]
[237 263]
[241 258]
[242 257]
[243 256]
[244 255]
[245 254]
[246 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
