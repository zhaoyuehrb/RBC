%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGGCCGGCGCCGGCUCUUGCGGCCGAGCAGAGUUGCGGCGUGGGAAAGAGCCGCUAGGAGCAGACCGCGCCGCCGCCGGAGCCGCGCCUGCCCAGGCCCGGGGAGGGAGGAGGCGGGCGUCAGGGUGCUGCGCCCCGCUCGGCGUCCGAGCUUCCGGCCGGGCUGUGCCCCGCGCGGUCUUCGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[207.37510681 233.93449402]
[211.91433716 226.30062866]
[218.06103516 221.53405762]
[203.48269653 218.48097229]
[198.69961548 203.40010071]
[187.75164795 193.14620972]
[176.80368042 182.89233398]
[165.77220154 172.72834778]
[154.65794373 162.65496826]
[143.54367065 152.58158875]
[132.42939758 142.50820923]
[121.31513214 132.43481445]
[110.20086670 122.36143494]
[99.08660126 112.28804779]
[85.32418060 106.32182312]
[70.37435913 105.09600830]
[55.42452621 103.87018585]
[40.47469711 102.64437103]
[25.52486992 101.41855621]
[10.57504177 100.19274139]
[-3.81127310 106.77639771]
[-15.86367512 98.02488708]
[-30.81350327 96.79907227]
[-45.76333237 95.57325745]
[-60.71316147 94.34744263]
[-75.66298676 93.12162781]
[-74.86868286 99.13700867]
[-76.22292328 105.79732513]
[-79.93560791 112.41209412]
[-86.00988007 118.23919678]
[-99.56971741 124.65252686]
[-113.12955475 131.06585693]
[-122.01231384 144.85093689]
[-138.37649536 143.78063965]
[-145.38803101 128.95599365]
[-135.83406067 115.62731171]
[-119.54288483 117.50601196]
[-105.98303986 111.09268951]
[-92.42320251 104.67935944]
[-93.52667236 89.72000122]
[-107.88077545 85.36573029]
[-122.23487854 81.01146698]
[-136.58898926 76.65719604]
[-150.94308472 72.30292511]
[-165.29719543 67.94865417]
[-179.65130615 63.59438324]
[-189.99977112 72.71310425]
[-203.39720154 75.50148773]
[-216.31834412 71.33517456]
[-225.41712952 61.40556717]
[-228.39311218 48.38162231]
[-242.32522583 55.34826279]
[-256.74276733 50.49139023]
[-263.29852295 37.16632080]
[-277.57946777 32.57777405]
[-293.48605347 36.56682968]
[-304.69802856 24.59922600]
[-299.68148804 8.98620987]
[-283.59701538 5.78911209]
[-272.99093628 18.29683304]
[-258.70999146 22.88537979]
[-245.61959839 15.87272930]
[-231.07133484 20.32272911]
[-223.80458069 34.10068130]
[-210.88076782 23.99073982]
[-194.31170654 23.56612778]
[-180.61520386 33.19180679]
[-175.29702759 49.24027634]
[-160.94293213 53.59454727]
[-146.58882141 57.94881821]
[-132.23471069 62.30308914]
[-117.88060760 66.65735626]
[-103.52650452 71.01162720]
[-89.17240143 75.36589813]
[-74.43717194 78.17179871]
[-59.48734283 79.39761353]
[-44.53751755 80.62342834]
[-29.58768654 81.84924316]
[-14.63785839 83.07505798]
[-1.32085609 76.40372467]
[11.80085754 85.24291229]
[26.75068665 86.46872711]
[41.70051575 87.69454193]
[56.65034485 88.92036438]
[71.60017395 90.14617920]
[86.55000305 91.37199402]
[98.95344543 82.93668365]
[103.30771637 68.58258057]
[107.66198730 54.22847366]
[112.01625824 39.87436676]
[116.37052917 25.52026176]
[120.72480011 11.16615772]
[125.07907104 -3.18794727]
[129.43333435 -17.54205322]
[133.78761292 -31.89615822]
[123.40701294 -43.12961197]
[120.06501770 -57.95283127]
[124.56147766 -72.36283875]
[135.59320068 -82.51945496]
[150.12965393 -85.76865387]
[154.48391724 -100.12275696]
[158.83819580 -114.47686005]
[152.57408142 -129.24644470]
[160.34216309 -143.28340149]
[176.18344116 -145.81979370]
[187.94584656 -134.90991211]
[186.60626221 -118.92288971]
[173.19229126 -110.12258911]
[168.83802795 -95.76848602]
[164.48376465 -81.41438293]
[174.76521301 -70.63675690]
[178.29504395 -56.06293488]
[174.02793884 -41.58335876]
[163.01383972 -31.11501312]
[148.14170837 -27.54188728]
[143.78744507 -13.18778229]
[139.43318176 1.16632283]
[135.07890320 15.52042770]
[130.72463989 29.87453270]
[126.37036133 44.22863770]
[122.01609802 58.58274460]
[117.66182709 72.93685150]
[113.30755615 87.29095459]
[113.81800842 91.71827698]
[113.12759399 95.68641663]
[111.47451782 98.90647125]
[109.15998840 101.17378235]
[120.27425385 111.24716949]
[131.38851929 121.32054901]
[142.50279236 131.39393616]
[153.61705017 141.46731567]
[164.73132324 151.54071045]
[175.84558105 161.61408997]
[184.32037354 165.06620789]
[187.05757141 171.94436646]
[198.00553894 182.19825745]
[208.95349121 192.45213318]
[224.31489563 196.23864746]
[228.31492615 210.58609009]
[241.97787476 216.77670288]
[256.90563965 218.24696350]
[271.83343506 219.71720886]
[286.76119995 221.18746948]
[301.68896484 222.65773010]
[316.61672974 224.12799072]
[332.97222900 219.66326904]
[341.79013062 234.14363098]
[330.31668091 246.62548828]
[315.14648438 239.05575562]
[300.21871948 237.58549500]
[285.29092407 236.11523438]
[270.36315918 234.64498901]
[255.43539429 233.17472839]
[240.50761414 231.70446777]
[236.70460510 238.16876221]
[229.09858704 251.09735107]
[225.29557800 257.56164551]
[233.83207703 269.89566040]
[242.36857605 282.22970581]
[250.90507507 294.56372070]
[259.44158936 306.89773560]
[276.26202393 314.37304688]
[277.03067017 331.89834595]
[285.76782227 344.09106445]
[294.50500488 356.28375244]
[303.24215698 368.47644043]
[311.97930908 380.66915894]
[320.71649170 392.86184692]
[329.45364380 405.05456543]
[338.19082642 417.24725342]
[346.92797852 429.43994141]
[361.06866455 438.79287720]
[355.99578857 454.97009277]
[339.04647827 454.57376099]
[334.73529053 438.17712402]
[325.99810791 425.98440552]
[317.26095581 413.79171753]
[308.52377319 401.59902954]
[299.78662109 389.40631104]
[291.04946899 377.21362305]
[282.31228638 365.02090454]
[273.57513428 352.82821655]
[264.83795166 340.63552856]
[252.94869995 338.35165405]
[245.57151794 328.25122070]
[247.10755920 315.43423462]
[238.57106018 303.10021973]
[230.03454590 290.76620483]
[221.49804688 278.43215942]
[212.96154785 266.09814453]
[207.23231506 254.96070862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 139]
[5 137]
[6 136]
[7 135]
[8 133]
[9 132]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
[15 86]
[16 85]
[17 84]
[18 83]
[19 82]
[20 81]
[22 79]
[23 78]
[24 77]
[25 76]
[26 75]
[30 39]
[31 38]
[32 37]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[51 64]
[54 61]
[55 60]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[100 110]
[101 109]
[102 108]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
