%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUAGUCGCAGCAAGCGCGGAACUGGGGUUGCGGCGUCUAAGUGUUUCCGGUGGAUUCCCAGGGACUGUCGGAGGUGUGGACUCUGCCUGCCUACCUGGUCUGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[87.34502411 319.64178467]
[95.61122894 305.47839355]
[95.18675232 290.48440552]
[94.76226807 275.49038696]
[94.33778381 260.49639893]
[93.91329956 245.50241089]
[93.48881531 230.50842285]
[85.39444733 218.00520325]
[92.73812103 203.99160767]
[89.35361481 197.29682922]
[92.51985168 188.56861877]
[92.51985168 173.56861877]
[92.51985168 158.56861877]
[81.83898163 148.25093079]
[81.62529755 133.03880310]
[92.51985168 121.90567780]
[92.51985168 106.90567780]
[89.33238220 99.36288452]
[92.73812103 91.48269653]
[93.16260529 76.48870850]
[93.58708954 61.49471283]
[94.01157379 46.50072098]
[83.72680664 57.41967773]
[69.41514587 61.91148376]
[54.73554611 58.82775116]
[43.44104004 48.95687485]
[38.41921997 34.82247162]
[40.95397186 20.03818893]
[50.39725494 8.38381767]
[64.33477020 2.83894897]
[79.20321655 4.82120085]
[91.20127869 13.82378483]
[97.26166534 27.54610443]
[101.85652924 13.26719570]
[106.45138550 -1.01171422]
[111.04624939 -15.29062366]
[107.90822601 -30.79750633]
[119.17224121 -40.54282379]
[123.76709747 -54.82173157]
[128.36195374 -69.10063934]
[132.95681763 -83.37955475]
[137.55168152 -97.65846252]
[130.07521057 -107.12488556]
[128.18528748 -118.91637421]
[132.24577332 -130.01829529]
[141.11430359 -137.65028381]
[152.46066284 -139.96247864]
[157.85598755 -153.95857239]
[163.25132751 -167.95465088]
[168.64665222 -181.95072937]
[174.04197693 -195.94682312]
[179.43731689 -209.94290161]
[184.83264160 -223.93899536]
[190.22798157 -237.93507385]
[195.62330627 -251.93116760]
[201.01863098 -265.92724609]
[201.20375061 -275.21017456]
[206.76977539 -280.23950195]
[212.55902100 -294.07730103]
[218.34825134 -307.91510010]
[215.72970581 -324.10382080]
[228.60952759 -334.25479126]
[243.73806763 -327.92556763]
[245.55238342 -311.62707520]
[232.18605042 -302.12585449]
[226.39682007 -288.28805542]
[220.60757446 -274.45025635]
[215.01472473 -260.53192139]
[209.61938477 -246.53582764]
[204.22406006 -232.53974915]
[198.82873535 -218.54365540]
[193.43339539 -204.54757690]
[188.03807068 -190.55148315]
[182.64273071 -176.55540466]
[177.24740601 -162.55932617]
[171.85208130 -148.56323242]
[166.45674133 -134.56715393]
[174.91069031 -118.45151520]
[168.93901062 -100.92727661]
[151.83059692 -93.06359863]
[147.23573303 -78.78469086]
[142.64086914 -64.50578308]
[138.04600525 -50.22687149]
[133.45115662 -35.94796371]
[136.91783142 -21.46240425]
[125.32515717 -10.69576359]
[120.73029327 3.58314610]
[116.13543701 17.86205482]
[111.54057312 32.14096451]
[109.00556183 46.92520523]
[108.58107758 61.91919708]
[108.15659332 76.91319275]
[107.73211670 91.90718079]
[107.51985168 106.90567780]
[107.51985168 121.90567780]
[118.41440582 133.03880310]
[118.20072174 148.25093079]
[107.51985168 158.56861877]
[107.51985168 173.56861877]
[107.51985168 188.56861877]
[107.73211670 203.56712341]
[115.85684204 217.14280701]
[108.48281097 230.08393860]
[108.90729523 245.07792664]
[109.33177948 260.07192993]
[109.75625610 275.06591797]
[110.18074036 290.05990601]
[110.60522461 305.05389404]
[119.65948486 318.72695923]
[112.10422516 333.28201294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[9 101]
[11 100]
[12 99]
[13 98]
[16 95]
[17 94]
[19 93]
[20 92]
[21 91]
[22 90]
[33 89]
[34 88]
[35 87]
[36 86]
[38 84]
[39 83]
[40 82]
[41 81]
[42 80]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
