%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCUGCGCGCGCGUCCCGGAAGCAGAAGCCUGUGUGGCCUUCCCGGCGGCUGAUUCGAGGGCUUGUUUGGUCAGAAGGGGGGCGUCAGAGAAGCUGCCCCUUAGCCAACC\
) } def
/len { sequence length } bind def

/coor [
[79.23467255 121.48062897]
[72.51625061 134.89192200]
[71.44023132 144.10298157]
[65.42675781 148.57402039]
[58.34451675 161.79679871]
[51.26227570 175.01957703]
[44.18003464 188.24235535]
[42.03155518 205.05961609]
[25.27675819 207.65058899]
[18.14885712 192.26782227]
[30.95725441 181.16011047]
[38.03949738 167.93733215]
[45.12173843 154.71455383]
[52.20397949 141.49177551]
[59.10495758 128.17349243]
[65.82337952 114.76220703]
[62.77153778 100.07594299]
[51.26625061 90.45157623]
[39.76096344 80.82721710]
[28.25567818 71.20285034]
[16.62000847 61.73653030]
[4.85612726 52.43002319]
[-6.90775394 43.12351608]
[-18.67163467 33.81700897]
[-41.80660629 39.27016449]
[-61.64912033 20.74396324]
[-76.48012543 18.49868202]
[-91.31113434 16.25340080]
[-106.14213562 14.00811958]
[-121.20590210 20.49002457]
[-134.18771362 10.46981621]
[-131.73300171 -5.74457312]
[-116.36695862 -11.47317028]
[-103.89685822 -0.82288575]
[-89.06584930 1.42239535]
[-74.23484802 3.66767645]
[-59.40383911 5.91295719]
[-51.61008072 -6.90333366]
[-60.42686081 -19.03858948]
[-74.79800415 -25.65529060]
[-76.01930237 -40.49974060]
[-84.83607483 -52.63499832]
[-93.65285492 -64.77024841]
[-109.20969391 -68.69000244]
[-115.71317291 -83.35575867]
[-108.17439270 -97.51719666]
[-92.37645721 -100.31087494]
[-80.43818665 -89.59372711]
[-81.51760101 -73.58702850]
[-72.70082092 -61.45177460]
[-63.88404465 -49.31652069]
[-50.14353561 -43.56781387]
[-48.29160309 -27.85536766]
[-39.47482681 -15.72011280]
[-23.39839554 -13.77615929]
[-11.48845387 -4.30958557]
[-6.64769697 9.07719898]
[-9.36512661 22.05312538]
[2.39875436 31.35963440]
[14.16263580 40.66614151]
[25.92651749 49.97265244]
[33.22340775 51.67775726]
[37.88004303 59.69756317]
[49.38533020 69.32192993]
[60.89061356 78.94628906]
[72.39590454 88.57065582]
[82.94374847 76.74224854]
[97.57588959 72.29930878]
[111.84165955 75.98983765]
[121.70726013 86.17399597]
[124.69557190 99.46511078]
[139.08270264 103.70896912]
[153.46984863 107.95282745]
[167.85697937 112.19667816]
[182.24411011 116.44053650]
[191.63313293 110.61808014]
[202.45310974 110.99483490]
[211.05523682 117.19763947]
[214.67536926 126.93013000]
[228.80928040 131.95332336]
[242.94319153 136.97651672]
[257.07711792 141.99971008]
[271.21102905 147.02290344]
[285.34494019 152.04609680]
[299.54614258 156.87577820]
[313.81198120 161.51103210]
[328.07785034 166.14628601]
[339.95544434 156.30119324]
[355.27291870 154.46316528]
[369.14251709 161.21873474]
[377.13851929 174.41221619]
[376.70938110 189.83360291]
[367.99209595 202.56201172]
[353.76828003 208.53582764]
[338.57669067 205.84884644]
[327.26495361 195.35847473]
[323.44256592 180.41213989]
[309.17672729 175.77688599]
[294.91088867 171.14163208]
[287.47644043 172.08018494]
[280.32174683 166.18002319]
[266.18783569 161.15682983]
[252.05390930 156.13363647]
[237.91999817 151.11042786]
[223.78608704 146.08723450]
[209.65217590 141.06404114]
[191.05755615 146.06675720]
[178.00025940 130.82766724]
[163.61312866 126.58381653]
[149.22598267 122.33995819]
[134.83885193 118.09609985]
[120.45171356 113.85224915]
[113.35339355 122.30329132]
[102.81924438 127.14300537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[4 14]
[5 13]
[6 12]
[7 11]
[17 66]
[18 65]
[19 64]
[20 63]
[21 61]
[22 60]
[23 59]
[24 58]
[26 37]
[27 36]
[28 35]
[29 34]
[38 54]
[39 53]
[41 51]
[42 50]
[43 49]
[71 112]
[72 111]
[73 110]
[74 109]
[75 108]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 99]
[86 98]
[87 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
