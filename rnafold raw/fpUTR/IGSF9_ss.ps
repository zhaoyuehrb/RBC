%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGAGCCGAGCGGUGCGGAGCAGAUCUGGUGGUUCUCCGGAGAGCAGCUUCCUCGGGUGUUACAUGAGCCAAGCCCUCACUGUACAGAAGAGUGAGAGCUGAAACCUGUUCCCUGAGCUGAUCAGAAGGACAUCCCUUGGCCCCUCCAUCUGGGCUCCUGUGGAUAGGAGGGGCUGGGUGAGCAGGCCAGCUGGGCU\
) } def
/len { sequence length } bind def

/coor [
[99.03901672 316.61151123]
[84.20151520 322.71301270]
[70.25074005 314.79119873]
[67.88851929 298.92300415]
[78.92695618 287.28115845]
[79.87353516 272.31106567]
[80.82012177 257.34094238]
[81.76670837 242.37084961]
[74.84799194 229.18067932]
[83.44074249 215.89627075]
[84.38732147 200.92617798]
[85.33390808 185.95606995]
[86.16230011 170.97895813]
[86.87244415 155.99578857]
[87.58258820 141.01260376]
[88.05611420 126.02008057]
[88.29290771 111.02194977]
[80.72465515 98.07121277]
[67.54145813 90.91556549]
[54.35825729 83.75991821]
[41.17506027 76.60427094]
[27.99186134 69.44862366]
[14.80866337 62.29298019]
[1.62546563 55.13733292]
[-19.63276100 63.88809204]
[-40.26683807 54.65650558]
[-53.45003891 61.81215286]
[-66.63323212 68.96779633]
[-79.81643677 76.12344360]
[-92.99963379 83.27909088]
[-95.94178009 98.63740540]
[-108.10030365 108.47124481]
[-123.73432159 108.13735962]
[-135.46192932 97.79341888]
[-137.74571228 82.32350159]
[-129.50732422 69.03202820]
[-114.63669586 64.19483948]
[-100.15528107 70.09589386]
[-86.97208405 62.94024658]
[-73.78887939 55.78459930]
[-60.60568619 48.62895203]
[-47.42248535 41.47330475]
[-48.13858795 36.35593796]
[-47.91587067 31.19351196]
[-46.76170731 26.15682983]
[-44.71428299 21.41253662]
[-55.52811432 11.01729298]
[-66.34194183 0.62204993]
[-77.15577698 -9.77319336]
[-87.96960449 -20.16843796]
[-98.86515045 -30.47799873]
[-109.84173584 -40.70123672]
[-120.89867401 -50.83751678]
[-132.03527832 -60.88619995]
[-143.17187500 -70.93488312]
[-158.27000427 -67.87664795]
[-172.11209106 -74.22092438]
[-179.47714233 -87.34419250]
[-177.72340393 -102.11112213]
[-188.86000061 -112.15981293]
[-199.99661255 -122.20849609]
[-208.47331238 -125.63877106]
[-211.22810364 -132.50479126]
[-222.20468140 -142.72802734]
[-233.18125916 -152.95126343]
[-244.23820496 -163.08755493]
[-255.37480164 -173.13623047]
[-266.51141357 -183.18492126]
[-277.64801025 -193.23359680]
[-293.10964966 -190.89451599]
[-306.43051147 -199.08531189]
[-311.32083130 -213.93855286]
[-305.47161865 -228.44097900]
[-291.64462280 -235.74501038]
[-276.36859131 -232.40188599]
[-266.85635376 -219.99012756]
[-267.59933472 -204.37020874]
[-256.46270752 -194.32151794]
[-245.32612610 -184.27284241]
[-234.18951416 -174.22415161]
[-227.11047363 -172.07516479]
[-222.95802307 -163.92785645]
[-211.98144531 -153.70462036]
[-201.00485229 -143.48138428]
[-189.94792175 -133.34509277]
[-178.81130981 -123.29641724]
[-167.67471313 -113.24772644]
[-153.16510010 -116.50489044]
[-139.35643005 -110.52287292]
[-131.62762451 -97.40346527]
[-133.12318420 -82.07148743]
[-121.98658752 -72.02280426]
[-110.84998322 -61.97411728]
[-103.77093506 -59.82512665]
[-99.61849213 -51.67782211]
[-88.64191437 -41.45458221]
[-81.59766388 -39.19410706]
[-77.57435608 -30.98226738]
[-66.76052856 -20.58702278]
[-55.94670105 -10.19178009]
[-45.13286972 0.20346376]
[-34.31904221 10.59870720]
[-21.71759033 6.45857191]
[-8.51735973 8.48390865]
[2.41042089 16.31710625]
[8.65135574 28.32833862]
[8.78111267 41.95413208]
[21.96431160 49.10977936]
[35.14751053 56.26542664]
[48.33070755 63.42107391]
[61.51390457 70.57672119]
[74.69710541 77.73236847]
[87.88030243 84.88801575]
[102.54093170 81.71531677]
[111.58600616 69.74925232]
[120.63108063 57.78319550]
[129.67616272 45.81713486]
[128.90014648 29.79286194]
[141.03929138 19.30378532]
[156.78147888 22.39622879]
[164.05064392 36.69793320]
[157.27050781 51.23785782]
[141.64221191 54.86221313]
[132.59713745 66.82826996]
[123.55206299 78.79433441]
[114.50698853 90.76039124]
[117.05977631 97.81257629]
[128.89613342 88.59841919]
[141.31694031 97.00815582]
[137.15701294 111.41978455]
[122.16534424 111.91693878]
[124.71812439 118.96912384]
[139.32684326 122.37286377]
[153.93556213 125.77661133]
[168.54426575 129.18034363]
[183.15298462 132.58409119]
[188.16575623 131.05967712]
[192.79672241 131.56626892]
[196.33435059 133.61637878]
[198.36480713 136.51031494]
[212.79600525 140.60185242]
[227.22718811 144.69340515]
[241.65838623 148.78494263]
[256.08956909 152.87649536]
[270.52075195 156.96803284]
[284.95196533 161.05958557]
[299.38314819 165.15112305]
[313.81433105 169.24267578]
[328.27737427 173.22018433]
[342.77136230 177.08340454]
[357.26535034 180.94662476]
[371.75930786 184.80984497]
[386.25329590 188.67306519]
[398.21414185 178.78782654]
[413.70312500 177.85449219]
[426.76440430 186.23197937]
[432.37570190 200.69894409]
[428.37930298 215.69256592]
[416.31192017 225.44746399]
[400.81375122 226.21270752]
[387.84408569 217.69403076]
[382.39007568 203.16705322]
[367.89608765 199.30381775]
[353.40213013 195.44059753]
[338.90814209 191.57737732]
[324.41415405 187.71415710]
[317.13415527 189.03045654]
[309.72277832 183.67385864]
[295.29159546 179.58232117]
[280.86041260 175.49076843]
[266.42922974 171.39923096]
[251.99803162 167.30767822]
[237.56683350 163.21614075]
[223.13565063 159.12458801]
[208.70445251 155.03305054]
[194.27326965 150.94149780]
[179.74923706 147.19281006]
[165.14053345 143.78906250]
[150.53181458 140.38533020]
[135.92309570 136.98158264]
[121.31438446 133.57783508]
[110.61737061 123.45996857]
[103.29103851 111.25874329]
[103.05424500 126.25687408]
[105.93711853 132.22430420]
[105.44078827 137.89802551]
[102.56576538 141.72274780]
[101.85562134 156.70593262]
[101.14547729 171.68910217]
[103.86710358 180.41917419]
[100.30400848 186.90264893]
[99.35742950 201.87275696]
[98.41084290 216.84286499]
[105.26184845 231.10379028]
[96.73680878 243.31742859]
[95.79022980 258.28753662]
[94.84364319 273.25762939]
[93.89705658 288.22775269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[10 193]
[11 192]
[12 191]
[13 189]
[14 188]
[15 187]
[16 184]
[17 183]
[18 113]
[19 112]
[20 111]
[21 110]
[22 109]
[23 108]
[24 107]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[46 102]
[47 101]
[48 100]
[49 99]
[50 98]
[51 96]
[52 95]
[53 93]
[54 92]
[55 91]
[59 87]
[60 86]
[61 85]
[63 84]
[64 83]
[65 82]
[66 80]
[67 79]
[68 78]
[69 77]
[114 126]
[115 125]
[116 124]
[117 123]
[132 181]
[133 180]
[134 179]
[135 178]
[136 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[148 168]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
