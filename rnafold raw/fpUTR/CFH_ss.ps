%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCAUUAACAUUUAGUGGGAGUGCAGUGAGAAUUGGGUUUAACUUCUGGCAUUUCUGGGCUUGUGGCUUGUGGUUGAUUUUUUAUUUACUUUGCAAAAGUUUCUGAUAGGCGGAGCAUCUAGUUUCAACUUCCUUUUGCAGCAAGUUCUUUCCUGCACUAAUCACAAUUCUUGGAAGAGGAGAACUGGACGUUGUGAACAGAGUUAGCUGGUAAAUGUCCUCUUAAAAGAUCCAAAAA\
) } def
/len { sequence length } bind def

/coor [
[279.09170532 456.72164917]
[264.18783569 455.02630615]
[250.05509949 449.99978638]
[237.42785645 441.90332031]
[226.96223450 431.15759277]
[219.20204163 418.32095337]
[214.55049133 404.06039429]
[213.24928284 389.11694336]
[215.36605835 374.26705933]
[220.79078674 360.28234863]
[229.24160767 347.88946533]
[240.27941895 337.73236084]
[253.33068848 330.33880615]
[267.71725464 326.09298706]
[282.69155884 325.21551514]
[297.47555542 327.75198364]
[311.30004883 333.57003784]
[301.15219116 322.52374268]
[291.00433350 311.47741699]
[280.85647583 300.43112183]
[263.84817505 296.07373047]
[260.01245117 278.05395508]
[249.72146606 267.14086914]
[239.43048096 256.22778320]
[229.13948059 245.31469727]
[218.84849548 234.40159607]
[208.55751038 223.48851013]
[198.26651001 212.57542419]
[181.20286560 208.44012451]
[177.13258362 190.47187805]
[166.70021057 179.69386292]
[156.26783752 168.91584778]
[145.83546448 158.13781738]
[135.40309143 147.35980225]
[124.97072601 136.58178711]
[114.53835297 125.80377960]
[102.84196472 131.43650818]
[89.05289459 131.67343140]
[75.68224335 125.80677032]
[65.43356323 114.29631042]
[60.66526413 98.78955078]
[45.66558075 98.88732147]
[30.66589928 98.98508453]
[15.66621876 99.08285522]
[0.66653705 99.18061829]
[-14.33314419 99.27838898]
[-28.08259392 107.10546875]
[-40.86002350 99.45128632]
[-54.60947418 107.27836609]
[-67.38690948 99.62418365]
[-82.38658905 99.72195435]
[-97.38626862 99.81971741]
[-102.74931335 114.01838684]
[-112.88227081 125.31828308]
[-126.41473389 132.19119263]
[-141.51655579 133.70761108]
[-156.14532471 129.66244507]
[-168.32264709 120.60278320]
[-176.40161133 107.75386810]
[-179.28961182 92.85340118]
[-176.59608459 77.91655731]
[-168.68528748 64.96341705]
[-156.62710571 55.74578857]
[-142.05230713 51.51028061]
[-126.93200684 52.82970810]
[-113.31109619 59.52563477]
[-103.03170776 70.69248962]
[-97.48403168 84.82003784]
[-82.48435211 84.72227478]
[-67.48467255 84.62450409]
[-54.80810165 76.80441284]
[-40.95779037 84.45160675]
[-28.28121948 76.63151550]
[-14.43091106 84.27870178]
[0.56877035 84.18093872]
[15.56845188 84.08316803]
[30.56813240 83.98540497]
[45.56781387 83.88764191]
[60.56749725 83.78987122]
[65.67731476 78.29990387]
[52.46698761 71.19447327]
[39.25665665 64.08904266]
[24.42536736 61.84562683]
[13.65862942 51.40161896]
[10.96503162 36.64545059]
[17.34743309 23.07102776]
[30.42959023 15.73227978]
[45.34084702 17.36151505]
[56.52955627 27.35214806]
[59.82996750 41.98517990]
[67.86346436 54.65257645]
[75.89695740 67.31997681]
[81.00678253 61.83000946]
[80.02980042 46.86185837]
[79.05281830 31.89370918]
[78.07583618 16.92555809]
[77.09885406 1.95740914]
[76.12187195 -13.01074028]
[75.14488983 -27.97888947]
[74.16790771 -42.94704056]
[73.19092560 -57.91519165]
[61.56006622 -48.44296265]
[46.87475586 -51.49936676]
[39.98882675 -64.82543182]
[45.99163818 -78.57192993]
[60.44653702 -82.57889557]
[72.67032623 -73.88420868]
[72.67032623 -88.88420868]
[69.54601288 -97.44566345]
[72.76936340 -104.07941437]
[72.96489716 -119.07814026]
[62.21639252 -130.35234070]
[62.62834930 -145.56039429]
[73.44281006 -155.73796082]
[73.63833618 -170.73669434]
[73.83386230 -185.73541260]
[74.02939606 -200.73414612]
[74.22492218 -215.73286438]
[64.10456085 -228.18107605]
[67.66764832 -243.82345581]
[82.18089294 -250.66050720]
[96.51097107 -243.44743347]
[99.66507721 -227.71749878]
[89.22364807 -215.53733826]
[89.02812195 -200.53862000]
[88.83258820 -185.53988647]
[88.63706207 -170.54116821]
[88.44153595 -155.54243469]
[98.98700714 -145.08641052]
[99.00237274 -129.87277222]
[87.96362305 -118.88261414]
[87.76808929 -103.88388824]
[87.67032623 -88.88420868]
[87.67032623 -73.88420868]
[88.15907288 -58.89216995]
[89.13605499 -43.92402267]
[90.11303711 -28.95587158]
[91.09001923 -13.98772240]
[92.06700134 0.98042715]
[93.04398346 15.94857693]
[94.02096558 30.91672707]
[94.99794769 45.88487625]
[95.97492981 60.85302734]
[121.48196411 70.97726440]
[132.24653625 93.66558075]
[125.31636810 115.37140656]
[135.74873352 126.14942169]
[146.18110657 136.92744446]
[156.61347961 147.70545959]
[167.04585266 158.48347473]
[177.47822571 169.26148987]
[187.91059875 180.03950500]
[200.75770569 181.02587891]
[209.22430420 190.20065308]
[209.17959595 202.28443909]
[219.47059631 213.19752502]
[229.76158142 224.11061096]
[240.05258179 235.02369690]
[250.34356689 245.93679810]
[260.63455200 256.84988403]
[270.92553711 267.76296997]
[283.75869751 268.91674805]
[292.10498047 278.20108032]
[291.90277100 290.28326416]
[302.05062866 301.32955933]
[312.19848633 312.37588501]
[322.34637451 323.42218018]
[327.95977783 324.27935791]
[332.45852661 326.94174194]
[335.35025024 330.74655151]
[336.45806885 334.93615723]
[349.31613159 342.66079712]
[362.17419434 350.38543701]
[375.03225708 358.11007690]
[390.18606567 354.50451660]
[403.11593628 362.52157593]
[406.45989990 376.99063110]
[419.31796265 384.71527100]
[432.17605591 392.43991089]
[445.03411865 400.16455078]
[457.89218140 407.88919067]
[470.75024414 415.61383057]
[483.60830688 423.33847046]
[499.42242432 423.81277466]
[506.34777832 436.99945068]
[519.35443115 444.47122192]
[532.50463867 451.68725586]
[545.65490723 458.90325928]
[558.80517578 466.11929321]
[571.95538330 473.33529663]
[585.24420166 480.29284668]
[598.66656494 486.98919678]
[614.46936035 486.22644043]
[622.40386963 498.83169556]
[635.82617188 505.52807617]
[649.24847412 512.22442627]
[665.57550049 510.68789673]
[674.84777832 524.21405029]
[667.52679443 538.88836670]
[651.14373779 539.61517334]
[642.55212402 525.64678955]
[629.12982178 518.95037842]
[615.70751953 512.25402832]
[600.86474609 513.49578857]
[591.97015381 500.41152954]
[578.54785156 493.71514893]
[575.12268066 494.46789551]
[571.16400146 493.61154175]
[567.42626953 490.91378784]
[564.73937988 486.48556519]
[551.58911133 479.26953125]
[538.43890381 472.05352783]
[525.28863525 464.83749390]
[512.13836670 457.62145996]
[508.68640137 458.23971558]
[504.76419067 457.22924805]
[501.13485718 454.38742065]
[498.62313843 449.85754395]
[483.72872925 449.93572998]
[475.88366699 436.19653320]
[463.02560425 428.47189331]
[450.16754150 420.74725342]
[437.30947876 413.02261353]
[424.45141602 405.29797363]
[411.59332275 397.57333374]
[398.73526001 389.84869385]
[384.39050293 393.69104004]
[371.24057007 386.04031372]
[367.30761719 370.96817017]
[354.44955444 363.24353027]
[341.59149170 355.51889038]
[328.73342896 347.79425049]
[337.20794678 360.17092896]
[342.65945435 374.14523315]
[344.80462646 388.99105835]
[343.53204346 403.93695068]
[338.90777588 418.20639038]
[331.17218018 431.05786133]
[320.72714233 441.82360840]
[308.11541748 449.94421387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 167]
[18 166]
[19 165]
[20 164]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[41 79]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[48 72]
[50 70]
[51 69]
[52 68]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[107 134]
[108 133]
[110 132]
[111 131]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[171 232]
[172 231]
[173 230]
[174 229]
[177 226]
[178 225]
[179 224]
[180 223]
[181 222]
[182 221]
[183 220]
[185 218]
[186 214]
[187 213]
[188 212]
[189 211]
[190 210]
[191 206]
[192 205]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
