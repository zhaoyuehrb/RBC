%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGGGCACCGGACGGCUCGGGUACUUUCGUUCUUAAUUAGGUCAUGCCCGUGUGAGCCAGGAAAGGGCUGUGUUUAUGGGAAGCCAGUAACACUGUGGCCUACUAUCUCUUCCGUGGUGCCAUCUACAUUUUUGGGACUCGGGAAUUAUGAGGUAGAGGUGGAGGCGGAGCCGGAUGUCAGAGGUCCUGAAAUAGUCACC\
) } def
/len { sequence length } bind def

/coor [
[84.56275940 270.33959961]
[77.15328217 271.50131226]
[73.91300964 286.14715576]
[70.67274475 300.79299927]
[67.43247986 315.43884277]
[69.91452026 332.21011353]
[54.48577118 339.23791504]
[43.46151733 326.35763550]
[52.78663635 312.19857788]
[56.02690125 297.55273438]
[59.26716995 282.90689087]
[62.50743866 268.26104736]
[56.94475555 237.63027954]
[75.19372559 219.80569458]
[71.95346069 205.15985107]
[68.71318817 190.51400757]
[65.47292328 175.86816406]
[62.23265457 161.22232056]
[58.99238586 146.57647705]
[45.39229965 140.24896240]
[32.10212708 147.20391846]
[18.81195831 154.15885925]
[5.52178764 161.11381531]
[-7.76838303 168.06877136]
[-10.14241028 183.28948975]
[-20.89794540 194.06779480]
[-35.76196289 196.41831970]
[-49.00139236 189.64665222]
[-62.29156113 196.60159302]
[-62.24608994 211.90704346]
[-69.32890320 225.47509766]
[-81.91242218 234.18794250]
[-97.10504150 236.04342651]
[-111.41561890 230.61515808]
[-121.55567932 219.15052795]
[-125.19511414 204.28402710]
[-121.49760437 189.43185425]
[-111.31282043 178.00692749]
[-96.98114014 172.63464355]
[-81.79588318 174.54946899]
[-69.24651337 183.31143188]
[-55.95634460 176.35647583]
[-53.97319794 161.61859131]
[-43.56898499 150.74586487]
[-28.58228683 148.05285645]
[-14.72333622 154.77859497]
[-1.43316555 147.82365417]
[11.85700512 140.86869812]
[25.14717484 133.91374207]
[38.43734741 126.95878601]
[38.08754349 119.46694946]
[24.05340195 124.76250458]
[14.68026257 113.05164337]
[22.92151451 100.51841736]
[37.38793564 104.48327637]
[37.03813553 96.99143219]
[23.15772629 91.30510712]
[9.27731991 85.61878204]
[-4.60308695 79.93245697]
[-18.36051941 87.36663818]
[-33.66743088 84.16783142]
[-43.29637146 71.84640503]
[-42.70084763 56.22016525]
[-32.16204453 44.66734314]
[-16.65606689 42.64282990]
[-3.50436068 51.10253906]
[1.08323932 66.05204773]
[14.96364594 71.73838043]
[28.84405327 77.42470551]
[42.72446060 83.11103058]
[52.29660034 71.56225586]
[44.13353729 58.97796631]
[35.97047424 46.39367294]
[27.80741310 33.80937958]
[19.64435005 21.22509003]
[4.44564056 17.81378365]
[-3.65359759 4.93523645]
[-0.30777526 -9.53338718]
[-8.47083759 -22.11767960]
[-16.63390160 -34.70196915]
[-31.47973061 -41.66856003]
[-32.59960556 -58.02942657]
[-18.84149551 -66.95391083]
[-4.35856295 -59.26126862]
[-4.04960871 -42.86503220]
[4.11345387 -30.28074074]
[12.27651691 -17.69644928]
[26.85219002 -14.85297680]
[35.30996323 -2.20700121]
[32.22864151 13.06202602]
[40.39170456 25.64631844]
[48.55476761 38.23060989]
[56.71783066 50.81490326]
[64.88088989 63.39919281]
[79.16713715 58.13229752]
[93.23581696 57.73341751]
[105.58715820 61.55951309]
[115.09053802 68.54852295]
[121.08797455 77.38112640]
[133.67227173 69.21806335]
[146.25656128 61.05500412]
[158.84085083 52.89194107]
[164.34248352 45.59088135]
[171.68493652 44.70155334]
[184.39465332 36.73518753]
[197.10438538 28.76881981]
[209.81410217 20.80245399]
[222.52381897 12.83608627]
[235.23353577 4.86971903]
[247.94326782 -3.09664774]
[260.65298462 -11.06301498]
[272.70544434 -19.99264717]
[284.02777100 -29.83157730]
[295.35012817 -39.67050552]
[296.60760498 -55.19649887]
[308.23022461 -65.01328278]
[323.02413940 -63.71877670]
[334.34649658 -73.55770874]
[345.66885376 -83.39663696]
[351.01040649 -98.28885651]
[365.69235229 -100.79674530]
[377.01470947 -110.63567352]
[388.33703613 -120.47460175]
[385.33032227 -135.53631592]
[390.27246094 -150.07835388]
[401.83407593 -160.18898010]
[416.90512085 -163.14848328]
[431.43161011 -158.16078186]
[441.50595093 -146.56753540]
[444.41818237 -131.48727417]
[439.38497925 -116.97650909]
[427.76022339 -106.93856049]
[412.67089844 -104.07358551]
[398.17599487 -109.15225983]
[386.85363770 -99.31333160]
[375.53128052 -89.47440338]
[370.99957275 -75.28592682]
[355.50778198 -72.07428741]
[344.18542480 -62.23536301]
[332.86306763 -52.39643097]
[332.08093262 -37.56660080]
[320.73864746 -27.42723846]
[305.18905640 -28.34816170]
[293.86669922 -18.50923347]
[282.54437256 -8.67030334]
[297.49682617 -9.86354828]
[311.08666992 -3.51401877]
[319.76538086 8.72034645]
[321.26687622 23.64500618]
[315.19909668 37.36295319]
[303.14642334 46.29226303]
[288.25592041 48.10138321]
[274.41567993 42.31793594]
[265.23959351 30.45204544]
[263.12362671 15.60204029]
[268.61935425 1.64670575]
[255.90962219 9.61307240]
[243.19990540 17.57943916]
[230.49018860 25.54580688]
[217.78047180 33.51217270]
[205.07073975 41.47854233]
[192.36102295 49.44490814]
[179.65130615 57.41127396]
[167.00392151 65.47623444]
[154.41961670 73.63929749]
[141.83532715 81.80236053]
[129.25103760 89.96542358]
[125.58685303 131.81108093]
[73.63822937 143.33621216]
[76.87849426 157.98205566]
[80.11876678 172.62789917]
[83.35903168 187.27374268]
[86.59929657 201.91958618]
[89.83956909 216.56542969]
[100.30194092 217.13082886]
[110.49817657 222.36344910]
[118.32337952 232.04383850]
[121.85041809 245.01077271]
[119.74251556 259.28713989]
[127.30976105 272.23846436]
[134.87699890 285.18978882]
[142.44424438 298.14111328]
[157.53457642 303.58737183]
[162.54850769 318.82678223]
[153.63980103 332.16900635]
[137.64244080 333.37899780]
[126.82823944 321.52856445]
[129.49291992 305.70834351]
[121.92567444 292.75701904]
[114.35843658 279.80569458]
[106.79119110 266.85437012]
[99.38171387 268.01611328]
[101.70518494 282.83508301]
[104.02865601 297.65402222]
[106.35213470 312.47299194]
[108.67560577 327.29193115]
[110.99883270 342.11093140]
[96.17979431 344.43392944]
[93.85665131 329.61541748]
[91.53317261 314.79644775]
[89.20970154 299.97750854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[28 42]
[29 41]
[56 70]
[57 69]
[58 68]
[59 67]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[78 87]
[79 86]
[80 85]
[99 167]
[100 166]
[101 165]
[102 164]
[104 163]
[105 162]
[106 161]
[107 160]
[108 159]
[109 158]
[110 157]
[111 156]
[112 145]
[113 144]
[114 143]
[117 140]
[118 139]
[119 138]
[121 136]
[122 135]
[123 134]
[179 191]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
