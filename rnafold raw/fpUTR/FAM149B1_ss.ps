%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCCCCCGCGGCAAAGCAGGGAGGUCGGAGGACUGGAGAGGUGGGGACCCUGGGGAGGUGGCUGCUCGGAGUCUAGGUGACGGGGCGAGACGGGGCCGGUAGGUGGCGGGAGGGGCCGGGCCGGAGCCGGCGGGAGGGCCAGGCCCGGAGGCCCCCACCCUGGCGUGCCUGCCCCGGCCGCGGCUGAGGAGGAGGAGGAGGAGGAGGAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[156.17668152 342.64102173]
[169.24588013 335.06658936]
[165.67201233 320.49853516]
[162.09812927 305.93051147]
[158.52424622 291.36248779]
[154.95037842 276.79446411]
[144.40350342 266.27719116]
[148.62997437 251.03097534]
[145.05610657 236.46293640]
[134.50924683 225.94567871]
[138.73571777 210.69944763]
[135.16183472 196.13140869]
[124.61496735 185.61415100]
[128.84144592 170.36791992]
[125.26756287 155.79989624]
[121.69367981 141.23185730]
[118.11980438 126.66383362]
[111.10285187 124.01575470]
[99.49929810 133.52142334]
[97.06893921 118.71958923]
[90.05198669 116.07151031]
[77.74444580 124.64614868]
[80.46054840 140.69233704]
[75.92145538 156.26033020]
[65.08513641 168.24597168]
[50.15985107 174.28250122]
[34.15428925 173.20783997]
[20.27108574 165.28788757]
[8.08611774 174.03582764]
[-4.09884977 182.78378296]
[-16.28381729 191.53172302]
[-22.54191780 206.68983459]
[-38.83168793 208.58068848]
[-48.39561081 195.25915527]
[-41.39514160 180.42927551]
[-25.03176308 179.34675598]
[-12.84679604 170.59881592]
[-0.66182774 161.85086060]
[11.52313995 153.10292053]
[8.45435047 139.57759094]
[10.77826309 125.86065674]
[18.17674065 114.02747345]
[29.56135368 105.88113403]
[43.23339844 102.67773438]
[57.13733292 104.93280029]
[69.16979980 112.33860779]
[81.47734070 103.76396942]
[80.15756226 96.38100433]
[77.51800537 81.61506653]
[76.19822693 74.23210144]
[61.68223572 70.45243073]
[47.16624069 66.67276001]
[32.65024567 62.89309311]
[17.34573364 66.90338898]
[6.97876358 56.20875931]
[-7.53723049 52.42908859]
[-22.05322456 48.64941406]
[-36.56921768 44.86974335]
[-51.08521271 41.09007263]
[-66.38972473 45.10037231]
[-76.75669861 34.40573883]
[-91.27268982 30.62606812]
[-106.93027496 35.50172806]
[-118.79636383 24.18236160]
[-114.66413879 8.31236649]
[-98.78447723 4.21743155]
[-87.49301910 16.11007500]
[-72.97702026 19.88974571]
[-58.71079254 15.60909843]
[-47.30554199 26.57407951]
[-32.78954697 30.35375023]
[-18.27355385 34.13342285]
[-3.75755954 37.91309357]
[10.75843430 41.69276428]
[25.02466583 37.41211700]
[36.42991638 48.37709808]
[50.94591141 52.15676880]
[65.46190643 55.93643951]
[79.97789764 59.71611023]
[67.94151306 50.76483154]
[65.01476288 36.05313110]
[72.70874023 23.17669106]
[87.05102539 18.78364563]
[100.63666534 25.14213371]
[106.45136261 38.96925354]
[101.49165344 53.12759781]
[111.40177155 41.86751175]
[114.71102142 26.39626694]
[128.92778015 21.95409584]
[138.83790588 10.69401073]
[148.74803162 -0.56607366]
[149.44902039 -4.83279371]
[151.28303528 -8.30831146]
[153.86370850 -10.73423290]
[156.76043701 -12.00363255]
[159.55152893 -12.16237068]
[170.08280945 -22.84375572]
[180.61410522 -33.52513885]
[191.14538574 -44.20652390]
[201.67668152 -54.88790894]
[212.20796204 -65.56929016]
[216.38720703 -80.82853699]
[230.83250427 -84.45928192]
[241.36380005 -95.14066315]
[251.89508057 -105.82205200]
[262.42636108 -116.50343323]
[266.60562134 -131.76268005]
[281.05090332 -135.39341736]
[291.58221436 -146.07479858]
[295.76144409 -161.33404541]
[310.20675659 -164.96479797]
[314.38598633 -180.22404480]
[328.83129883 -183.85478210]
[339.36257935 -194.53616333]
[339.42105103 -210.11288452]
[350.25344849 -220.79531860]
[365.10311890 -220.64356995]
[375.63439941 -231.32495117]
[386.16567993 -242.00633240]
[396.69699097 -252.68771362]
[407.22827148 -263.36911011]
[417.75955200 -274.05047607]
[417.05395508 -284.89437866]
[422.32031250 -294.14810181]
[431.61273193 -298.88006592]
[441.75784302 -297.74490356]
[452.58718872 -308.12399292]
[463.41653442 -318.50308228]
[474.24588013 -328.88214111]
[478.27166748 -337.07238770]
[485.30267334 -339.33013916]
[496.27780151 -349.55493164]
[507.25292969 -359.77972412]
[518.15545654 -370.08193970]
[528.98480225 -380.46102905]
[539.81408691 -390.84008789]
[539.89892578 -406.64416504]
[551.19268799 -417.69979858]
[566.99499512 -417.44787598]
[577.93060303 -406.03787231]
[577.51159668 -390.23913574]
[565.98663330 -379.42477417]
[550.19317627 -380.01077271]
[539.36383057 -369.63168335]
[528.53448486 -359.25259399]
[525.88262939 -352.36059570]
[517.47772217 -348.80459595]
[506.50259399 -338.57980347]
[495.52746582 -328.35501099]
[484.62493896 -318.05279541]
[473.79562378 -307.67373657]
[462.96627808 -297.29464722]
[452.13693237 -286.91555786]
[448.10028076 -268.00070190]
[428.44094849 -263.51919556]
[417.90963745 -252.83781433]
[407.37835693 -242.15643311]
[396.84707642 -231.47503662]
[386.31579590 -220.79365540]
[375.78448486 -210.11227417]
[376.14636230 -195.26625061]
[365.61831665 -184.28378296]
[350.04397583 -184.00488281]
[339.51266479 -173.32350159]
[336.08670044 -158.82824707]
[320.88812256 -154.43350220]
[317.46215820 -139.93826294]
[302.26358032 -135.54351807]
[291.73229980 -124.86213684]
[288.30633545 -110.36688995]
[273.10775757 -105.97214508]
[262.57647705 -95.29076385]
[252.04518127 -84.60937500]
[241.51390076 -73.92799377]
[238.08792114 -59.43275070]
[222.88934326 -55.03800583]
[212.35806274 -44.35662079]
[201.82676697 -33.67523575]
[191.29548645 -22.99385071]
[180.76419067 -12.31246662]
[170.23291016 -1.63108265]
[160.00810242 9.34404755]
[150.09799194 20.60413170]
[140.18786621 31.86421585]
[137.58746338 46.53006744]
[122.66185760 51.77763367]
[112.75173187 63.03771973]
[132.68783569 123.08995819]
[136.26170349 137.65798950]
[139.83558655 152.22601318]
[143.40946960 166.79403687]
[154.21195984 178.35331726]
[149.72985840 192.55754089]
[153.30374146 207.12556458]
[164.10623169 218.68482971]
[159.62413025 232.88906860]
[163.19801331 247.45709229]
[174.00050354 259.01635742]
[169.51840210 273.22058105]
[173.09226990 287.78860474]
[176.66615295 302.35662842]
[180.24003601 316.92468262]
[183.81391907 331.49270630]
[198.90473938 332.15884399]
[213.19615173 337.05087280]
[225.52963257 345.77224731]
[234.90533447 357.61593628]
[240.56321716 371.62182617]
[242.04464722 386.65451050]
[239.22950745 401.49539185]
[232.34600830 414.94137573]
[221.95216370 425.90243530]
[208.89057922 433.49002075]
[194.22006226 437.08901978]
[179.12992859 436.40771484]
[164.84342957 431.50134277]
[152.51872253 422.76757812]
[143.15492249 410.91448975]
[137.51110840 396.90292358]
[136.04478455 381.86874390]
[138.87483215 367.03070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[8 197]
[9 196]
[11 194]
[12 193]
[14 191]
[15 190]
[16 189]
[17 188]
[21 47]
[22 46]
[28 39]
[29 38]
[30 37]
[31 36]
[50 79]
[51 78]
[52 77]
[53 76]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[61 68]
[62 67]
[86 187]
[87 186]
[89 184]
[90 183]
[91 182]
[96 181]
[97 180]
[98 179]
[99 178]
[100 177]
[101 176]
[103 174]
[104 173]
[105 172]
[106 171]
[108 169]
[109 168]
[111 166]
[113 164]
[114 163]
[117 160]
[118 159]
[119 158]
[120 157]
[121 156]
[122 155]
[126 153]
[127 152]
[128 151]
[129 150]
[131 149]
[132 148]
[133 147]
[134 145]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
