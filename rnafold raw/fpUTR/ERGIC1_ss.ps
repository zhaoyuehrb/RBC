%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGCGCCCAAUGGGCUGCGCGGAGCGUCACUUCCCGGCAGCGGGAGGCGAGUGGCGAGUGGCGAGUGGCGAGUGUCAGGGGGGCGGCCGGCGGGGGCGGGGCGGCCGGAGGAGGCGUUGGCAGCGGGCUCGGACCCACGCGGCGCCGCGGCCCGCCUGGCCUGCAGCGCUCCCACCCCCGGCGGCGGCACG\
) } def
/len { sequence length } bind def

/coor [
[-51.63982010 161.86758423]
[-61.87346268 149.60272217]
[-76.34659576 153.54331970]
[-90.81973267 157.48393250]
[-105.29286194 161.42454529]
[-117.94582367 174.79455566]
[-134.72654724 169.67839050]
[-149.13432312 173.85163879]
[-163.54208374 178.02490234]
[-177.94985962 182.19816589]
[-182.81326294 186.70863342]
[-188.38781738 187.89715576]
[-192.88932800 186.26574707]
[-207.42405701 189.97268677]
[-215.51950073 203.28063965]
[-230.31260681 206.83294678]
[-242.94981384 199.03315735]
[-257.48455811 202.74009705]
[-272.01928711 206.44703674]
[-286.55401611 210.15397644]
[-301.08877563 213.86091614]
[-312.54876709 224.76864624]
[-326.79339600 220.41661072]
[-341.32812500 224.12355042]
[-349.42358398 237.43150330]
[-364.21667480 240.98381042]
[-376.85388184 233.18403625]
[-391.38861084 236.89096069]
[-398.94277954 242.05062866]
[-406.18737793 240.53852844]
[-420.77993774 244.01083374]
[-432.41421509 254.73252869]
[-446.58685303 250.15158081]
[-461.17944336 253.62388611]
[-475.77200317 257.09619141]
[-490.36456299 260.56848145]
[-504.95715332 264.04077148]
[-519.54974365 267.51309204]
[-534.14227295 270.98538208]
[-545.68237305 282.63693237]
[-561.47198486 278.20758057]
[-565.26818848 262.25387573]
[-553.16571045 251.18760681]
[-537.61456299 256.39282227]
[-523.02203369 252.92051697]
[-508.42944336 249.44821167]
[-493.83688354 245.97590637]
[-479.24429321 242.50361633]
[-464.65173340 239.03131104]
[-450.05917358 235.55900574]
[-439.46865845 225.08567810]
[-424.25225830 229.41825867]
[-409.65966797 225.94596863]
[-395.09555054 222.35623169]
[-380.56082153 218.64929199]
[-373.20272827 205.74990845]
[-358.51522827 201.78349304]
[-345.03506470 209.58880615]
[-330.50033569 205.88188171]
[-320.07992554 195.23928833]
[-304.79568481 199.32617188]
[-290.26095581 195.61923218]
[-275.72622681 191.91229248]
[-261.19149780 188.20536804]
[-246.65673828 184.49842834]
[-239.29864502 171.59904480]
[-224.61116028 167.63262939]
[-211.13099670 175.43794250]
[-196.59625244 171.73100281]
[-182.12312317 167.79039001]
[-167.71534729 163.61714172]
[-153.30758667 159.44387817]
[-138.89981079 155.27061462]
[-132.78477478 144.82382202]
[-120.80509949 141.23428345]
[-109.23347473 146.95141602]
[-94.76033783 143.01080322]
[-80.28720856 139.07019043]
[-65.81407166 135.12957764]
[-63.96177673 121.37349701]
[-56.98222733 109.32561493]
[-45.90154266 100.82311249]
[-32.37406158 97.17704773]
[-18.43538666 98.97031403]
[-6.19606543 105.96469116]
[2.47796893 117.13191986]
[17.01270676 113.42498779]
[27.43309975 102.78239441]
[42.71733856 106.86927795]
[57.25207520 103.16234589]
[71.78681183 99.45540619]
[86.32155609 95.74847412]
[96.46013641 86.12034607]
[109.97151184 89.71678925]
[124.50624847 86.00985718]
[139.04098511 82.30291748]
[153.57572937 78.59597778]
[168.11045837 74.88904572]
[182.64520264 71.18210602]
[194.10520935 60.27437592]
[208.34983826 64.62640381]
[222.88456726 60.91946793]
[237.41931152 57.21253204]
[251.92372131 53.38863373]
[266.39685059 49.44802094]
[280.86999512 45.50741196]
[288.34005737 40.22671890]
[295.60806274 41.62191010]
[307.06808472 30.71417618]
[321.31268311 35.06620407]
[332.77270508 24.15847206]
[347.01733398 28.51050186]
[361.55206299 24.80356598]
[376.08679199 21.09662819]
[390.55993652 17.15601730]
[404.96771240 12.98275661]
[419.37548828 8.80949402]
[433.78326416 4.63623238]
[448.19100952 0.46297029]
[453.05441284 -4.04749823]
[458.62896729 -5.23602343]
[463.13049316 -3.60460711]
[477.66522217 -7.31154394]
[492.19995117 -11.01848030]
[503.65997314 -21.92621422]
[517.90460205 -17.57418442]
[532.43933105 -21.28112030]
[546.97406006 -24.98805809]
[561.50878906 -28.69499397]
[576.01318359 -32.51889038]
[590.48632812 -36.45950317]
[604.95947266 -40.40011215]
[619.40039062 -44.45718002]
[633.80816650 -48.63044357]
[641.21258545 -62.59288788]
[656.34558105 -67.15016937]
[670.22894287 -59.59852600]
[674.62597656 -44.41822052]
[666.92797852 -30.61545563]
[651.70202637 -26.37916756]
[637.98144531 -34.22267151]
[623.57366943 -30.04940987]
[618.01617432 -25.16220665]
[608.90008545 -25.92697906]
[594.42694092 -21.98636818]
[579.95379639 -18.04575729]
[574.31829834 -13.24872208]
[565.21575928 -14.16025543]
[550.68103027 -10.45331860]
[536.14624023 -6.74638224]
[521.61151123 -3.03944540]
[511.19113159 7.60314274]
[495.90689087 3.51625800]
[481.37216187 7.22319460]
[466.83740234 10.93013096]
[452.36428833 14.87074184]
[437.95651245 19.04400444]
[423.54873657 23.21726608]
[409.14096069 27.39052773]
[394.73318481 31.56378937]
[391.68011475 35.25210190]
[386.27246094 37.05370331]
[379.79373169 35.63136673]
[365.25900269 39.33830261]
[350.72427368 43.04524231]
[340.30386353 53.68782806]
[325.01962280 49.60094452]
[314.59924316 60.24353409]
[299.31500244 56.15664673]
[284.81060791 59.98054504]
[270.33746338 63.92115784]
[255.86433411 67.86176300]
[250.22880554 72.65880585]
[241.12625122 71.74726868]
[226.59150696 75.45420837]
[212.05676270 79.16114044]
[201.63638306 89.80373383]
[186.35214233 85.71684265]
[171.81739807 89.42378235]
[157.28266907 93.13072205]
[142.74792480 96.83765411]
[128.21318054 100.54459381]
[113.67844391 104.25152588]
[103.53986359 113.87965393]
[90.02848816 110.28321075]
[75.49375153 113.99014282]
[60.95901489 117.69708252]
[46.42427444 121.40402222]
[34.96426010 132.31175232]
[20.71964455 127.95972443]
[6.18490553 131.66665649]
[3.09823585 147.63545227]
[-6.60598516 160.61502075]
[-20.94603539 168.03945923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[7 73]
[8 72]
[9 71]
[10 70]
[13 69]
[14 68]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[23 59]
[24 58]
[27 55]
[28 54]
[30 53]
[31 52]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[86 191]
[87 190]
[89 188]
[90 187]
[91 186]
[92 185]
[94 183]
[95 182]
[96 181]
[97 180]
[98 179]
[99 178]
[101 176]
[102 175]
[103 174]
[104 172]
[105 171]
[106 170]
[108 169]
[110 167]
[112 165]
[113 164]
[114 163]
[115 160]
[116 159]
[117 158]
[118 157]
[119 156]
[122 155]
[123 154]
[124 153]
[126 151]
[127 150]
[128 149]
[129 148]
[130 146]
[131 145]
[132 144]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
