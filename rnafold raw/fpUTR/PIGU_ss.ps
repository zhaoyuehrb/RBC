%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAGCUUGAGGCGCCCGCUUUCCGUCGCUCCGGCCCGCCUCGCCGCAAGGCUUUCUGGGAGCCGUAGUCCCCACGUCUGGCCUCUCCGGCGCCAGCGGCAGCGCGCGCCCACCCGCGGAACUACAGAGCGUGGCGCACAGCGCGCGAGGCUCCUCCGCCUCGCCUUCCCUCCCCGCCCGCGCGCCCGCCCCAGUUAUC\
) } def
/len { sequence length } bind def

/coor [
[95.68687439 377.62316895]
[83.29762268 368.28045654]
[78.79821014 353.43005371]
[83.91876984 338.78219604]
[96.69032288 329.96929932]
[96.92476654 314.97113037]
[97.15920258 299.97296143]
[97.39363861 284.97479248]
[89.85620117 272.12814331]
[97.80824280 258.45059204]
[94.76699066 251.70799255]
[98.16537476 243.22033691]
[98.63419342 228.22766113]
[99.10301208 213.23500061]
[99.57183075 198.24232483]
[89.21865082 187.59585571]
[89.48052216 172.38447571]
[100.71771240 161.59729004]
[101.18653107 146.60461426]
[101.65534973 131.61195374]
[76.76729584 116.62152100]
[76.35042572 90.52413177]
[64.68585968 81.09343719]
[53.02129745 71.66274261]
[41.35673523 62.23204803]
[29.69217110 52.80135727]
[21.04370308 49.83602142]
[17.92050743 43.13097382]
[6.40476322 33.51912689]
[-7.98951912 38.69134903]
[-22.94133568 35.98210526]
[-34.45304489 26.21753311]
[-39.49779892 12.09639835]
[-36.81505966 -2.55517077]
[-48.33080292 -12.16701984]
[-59.84654617 -21.77886772]
[-75.39914703 -24.68182755]
[-80.21209717 -38.77738571]
[-91.72784424 -48.38923645]
[-103.24358368 -58.00108337]
[-114.83409119 -67.52264404]
[-126.49865723 -76.95333862]
[-135.14712524 -79.91867065]
[-138.27032471 -86.62371826]
[-149.78607178 -96.23556519]
[-161.30180359 -105.84741974]
[-172.81755066 -115.45926666]
[-184.33329773 -125.07111359]
[-197.23124695 -124.69383240]
[-206.62582397 -132.94337463]
[-207.83738708 -144.98420715]
[-219.20150757 -154.77485657]
[-230.56561279 -164.56552124]
[-241.35807800 -163.13264465]
[-250.95791626 -167.78439331]
[-256.29653931 -176.76525879]
[-255.81646729 -186.98214722]
[-266.86901855 -197.12319946]
[-277.92156982 -207.26425171]
[-288.97412109 -217.40530396]
[-300.10562134 -227.45967102]
[-311.31530762 -237.42674255]
[-322.52502441 -247.39381409]
[-333.81225586 -257.27297974]
[-345.17639160 -267.06362915]
[-356.54049683 -276.85427856]
[-373.95495605 -275.23559570]
[-386.89999390 -286.48782349]
[-387.68972778 -303.28344727]
[-399.20547485 -312.89529419]
[-415.44662476 -315.16625977]
[-421.34881592 -330.46643066]
[-410.84042358 -343.05633545]
[-394.73153687 -339.98452759]
[-389.59362793 -324.41104126]
[-378.07788086 -314.79919434]
[-365.52783203 -317.73977661]
[-353.39544678 -312.83963013]
[-346.19677734 -301.68090820]
[-346.74984741 -288.21841431]
[-335.38571167 -278.42773438]
[-324.02160645 -268.63708496]
[-316.89639282 -266.65130615]
[-312.55795288 -258.60351562]
[-301.34823608 -248.63644409]
[-290.13854980 -238.66937256]
[-283.04522705 -236.57247925]
[-278.83306885 -228.45785522]
[-267.78051758 -218.31680298]
[-256.72796631 -208.17575073]
[-245.67541504 -198.03469849]
[-226.54722595 -195.23844910]
[-220.77496338 -175.92962646]
[-209.41084290 -166.13897705]
[-198.04673767 -156.34831238]
[-180.65713501 -154.01417542]
[-174.72145081 -136.58685303]
[-163.20570374 -126.97500610]
[-151.68995667 -117.36315918]
[-140.17420959 -107.75131226]
[-128.65847778 -98.13946533]
[-117.06796265 -88.61790466]
[-105.40340424 -79.18721008]
[-98.21960449 -77.42509460]
[-93.63173676 -69.51683044]
[-82.11599731 -59.90497971]
[-70.60025024 -50.29313278]
[-55.87133026 -48.07767487]
[-50.23469925 -33.29461288]
[-38.71895599 -23.68276405]
[-27.20321083 -14.07091522]
[-13.26729393 -19.32979393]
[1.52822828 -16.89083862]
[13.19351673 -7.31026411]
[18.53214645 6.91632462]
[16.01661110 22.00338364]
[27.53235626 31.61523056]
[39.12286377 41.13679123]
[50.78742599 50.56748581]
[62.45198822 59.99818039]
[74.11655426 69.42887115]
[85.78111267 78.85956573]
[92.47447968 74.85229492]
[100.28511047 72.97968292]
[108.52839661 73.54672241]
[116.43945312 76.63811493]
[123.24401093 82.09844208]
[128.23373413 89.53504181]
[130.83860779 98.34445190]
[130.68919373 107.76074982]
[145.48764038 110.21141052]
[160.28610229 112.66207123]
[169.27200317 110.97606659]
[175.29594421 115.26841736]
[190.05427551 117.95006561]
[204.81262207 120.63171387]
[219.57096863 123.31336212]
[230.79824829 112.76563263]
[245.90695190 110.87348175]
[259.07696533 118.15457916]
[265.35900879 131.63322449]
[280.11737061 134.31488037]
[295.07846069 129.16937256]
[306.21743774 139.05735779]
[324.86181641 131.40638733]
[339.06240845 144.52314758]
[353.89736938 146.74221802]
[368.73229980 148.96128845]
[383.56726074 151.18035889]
[398.40222168 153.39942932]
[413.23715210 155.61851501]
[428.07211304 157.83758545]
[440.62707520 148.23817444]
[456.28131104 150.41084290]
[465.74743652 163.06658936]
[463.40936279 178.69697571]
[450.65426636 188.02877808]
[435.04946899 185.52560425]
[425.85302734 172.67253113]
[411.01809692 170.45346069]
[396.18313599 168.23439026]
[381.34817505 166.01530457]
[366.51324463 163.79623413]
[351.67828369 161.57716370]
[336.84335327 159.35809326]
[329.20013428 166.15489197]
[318.85983276 167.64976501]
[309.20690918 163.10920715]
[303.53579712 153.81570435]
[289.63031006 159.15301514]
[277.43572998 149.07322693]
[262.67736816 146.39157104]
[252.05519104 156.79866028]
[237.16558838 158.98121643]
[223.68830872 151.89488220]
[216.88932800 138.07170105]
[202.13098145 135.39006042]
[187.37263489 132.70840454]
[172.61428833 130.02676392]
[157.83543396 127.46052551]
[143.03698730 125.00986481]
[128.23852539 122.55920410]
[116.64801788 132.08076477]
[116.17919922 147.07344055]
[115.71038055 162.06611633]
[126.25165558 173.53430176]
[125.56262970 188.73233032]
[114.56449890 198.71113586]
[114.09568024 213.70381165]
[113.62686157 228.69648743]
[113.15805054 243.68914795]
[112.80641174 258.68502808]
[120.32707977 272.60446167]
[112.39180756 285.20922852]
[112.15737152 300.20739746]
[111.92292786 315.20556641]
[111.68849182 330.20373535]
[124.17836761 339.41149902]
[128.83860779 354.21221924]
[123.87725830 368.91476440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[8 194]
[10 192]
[12 191]
[13 190]
[14 189]
[15 188]
[18 185]
[19 184]
[20 183]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[28 117]
[29 116]
[34 111]
[35 110]
[36 109]
[38 107]
[39 106]
[40 105]
[41 103]
[42 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[51 95]
[52 94]
[53 93]
[57 91]
[58 90]
[59 89]
[60 88]
[61 86]
[62 85]
[63 84]
[64 82]
[65 81]
[66 80]
[69 76]
[70 75]
[130 182]
[131 181]
[132 180]
[134 179]
[135 178]
[136 177]
[137 176]
[141 172]
[142 171]
[144 169]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
