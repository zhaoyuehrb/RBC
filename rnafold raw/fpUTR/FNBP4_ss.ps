%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGAGCCGAAGGGUCCGAGGCGCUUGCGCAAGCGCGUGCUCCGCUGGUUGAAAGCGGAUCCGGGCUGGAGGCGGUGUCACGGUGUAUGAAUAUUGAUUACGCGUCGCAGCGCCCAGGGCCCAGCGCCCAGCCUCCAGUGCCCGCCCCUCUCGGCCGCCCGACGCUCUCUGCUCGCGCUUGGGCUCGCG\
) } def
/len { sequence length } bind def

/coor [
[104.95337677 273.64285278]
[103.18602753 258.74731445]
[107.83005524 244.48432922]
[118.02876282 233.48495483]
[131.90080261 227.77824402]
[146.88720703 228.41693115]
[160.22106934 235.28123474]
[153.55447388 221.84410095]
[146.88789368 208.40695190]
[140.22131348 194.96981812]
[133.55473328 181.53268433]
[126.77787781 168.15081787]
[119.89118958 154.82514954]
[113.00450897 141.49946594]
[106.11782074 128.17379761]
[102.00380707 131.18867493]
[97.12400818 133.55255127]
[91.58869934 135.10453796]
[85.53887939 135.70330811]
[79.14276123 135.23260498]
[72.12685394 149.41313171]
[57.25406265 150.21893311]
[44.87704849 158.69297791]
[32.50003815 167.16703796]
[20.12302399 175.64108276]
[7.74601269 184.11514282]
[-4.63099957 192.58918762]
[-11.22556019 207.60397339]
[-27.55344772 209.13111877]
[-36.81792831 195.59962463]
[-29.48850250 180.92953491]
[-13.10505199 180.21217346]
[-0.72804022 171.73812866]
[11.64897156 163.26406860]
[24.02598381 154.79002380]
[36.40299606 146.31596375]
[48.78001022 137.84191895]
[54.91062927 124.26750183]
[70.66870880 122.85558319]
[68.83701324 115.58270264]
[65.17361450 101.03692627]
[63.34191513 93.76403809]
[48.42755890 92.16339874]
[33.51320648 90.56275940]
[18.59885216 88.96212006]
[3.68449855 87.36148071]
[-11.22985554 85.76084137]
[-22.37623405 96.72863007]
[-37.96881485 97.91413879]
[-50.64525604 88.75762939]
[-54.42013550 73.58250427]
[-47.51106262 59.55400467]
[-33.18029785 53.29595947]
[-18.19438553 57.76322174]
[-9.62921619 70.84648895]
[5.28513765 72.44712830]
[20.19949150 74.04776764]
[35.11384583 75.64840698]
[50.02819824 77.24904633]
[64.94255066 78.84968567]
[76.79917908 71.29888916]
[89.29697418 68.92342377]
[100.47419739 71.17352295]
[104.61402893 56.75610733]
[108.75386047 42.33869553]
[112.89369202 27.92128181]
[117.03352356 13.50386906]
[120.93566132 -0.97968292]
[124.59906006 -15.52545643]
[128.26245117 -30.07122993]
[131.92585754 -44.61700439]
[135.58924866 -59.16277695]
[139.25265503 -73.70854950]
[142.91604614 -88.25432587]
[144.63928223 -103.15500641]
[144.39257812 -118.15297699]
[144.14585876 -133.15095520]
[143.89915466 -148.14892578]
[143.65243530 -163.14689636]
[132.57624817 -174.09931946]
[132.53970337 -189.31291199]
[143.04943848 -199.80487061]
[142.80271912 -214.80284119]
[142.30937195 -229.79472351]
[141.56950378 -244.77647400]
[140.82963562 -259.75820923]
[140.08976746 -274.73995972]
[139.34989929 -289.72171021]
[125.43651581 -296.09948730]
[116.08989716 -308.21969604]
[113.45784760 -323.29718018]
[118.14517975 -337.86727905]
[129.07478333 -348.58184814]
[143.73512268 -352.97879028]
[158.75735474 -350.04769897]
[170.68946838 -340.46212769]
[176.78958130 -326.42477417]
[175.65589905 -311.16131592]
[167.54895020 -298.17916870]
[154.33164978 -290.46154785]
[155.07151794 -275.47982788]
[155.81138611 -260.49807739]
[156.55123901 -245.51634216]
[157.29110718 -230.53459167]
[160.17912292 -226.71142578]
[160.68472290 -221.02938843]
[157.80068970 -215.04956055]
[158.04740906 -200.05158997]
[168.89653015 -189.91096497]
[169.36038208 -174.70440674]
[158.65042114 -163.39360046]
[158.89712524 -148.39562988]
[159.14382935 -133.39765930]
[159.39054871 -118.39968872]
[159.63725281 -103.40171814]
[166.35581970 -100.06842804]
[179.79296875 -93.40184784]
[186.51153564 -90.06855774]
[198.60313416 -98.94510651]
[210.69473267 -107.82166290]
[222.78634644 -116.69821167]
[226.62928772 -132.27420044]
[241.26275635 -138.84997559]
[255.46122742 -131.38116455]
[258.33282471 -115.59719849]
[247.67472839 -103.60619354]
[231.66288757 -104.60661316]
[219.57128906 -95.73005676]
[207.47969055 -86.85350800]
[195.38809204 -77.97695923]
[173.09408569 -75.17020416]
[157.46182251 -84.59092712]
[153.79841614 -70.04515076]
[150.13502502 -55.49937820]
[146.47163391 -40.95360565]
[142.80822754 -26.40783310]
[139.14483643 -11.86205864]
[135.48143005 2.68371439]
[137.12834167 7.18314409]
[135.95416260 12.76547813]
[131.45092773 17.64369965]
[127.31110382 32.06111145]
[123.17127228 46.47852707]
[119.03144073 60.89593887]
[114.89160919 75.31335449]
[128.69009399 97.15937805]
[119.44349670 121.28711700]
[126.33017731 134.61279297]
[133.21685791 147.93846130]
[140.10354614 161.26412964]
[146.83520508 167.46426392]
[146.99188232 174.86608887]
[153.65846252 188.30323792]
[160.32504272 201.74037170]
[166.99162292 215.17750549]
[173.65820312 228.61465454]
[183.04440308 235.29104614]
[184.01913452 245.47543335]
[192.99482727 257.49362183]
[201.97052002 269.51181030]
[210.94621277 281.52999878]
[219.92190552 293.54818726]
[228.89759827 305.56637573]
[237.97181702 317.51034546]
[247.14396667 329.37930298]
[256.31610107 341.24822998]
[271.67623901 339.80953979]
[285.36529541 346.92382812]
[293.01516724 360.32095337]
[292.18478394 375.72595215]
[283.13912964 388.22314453]
[268.76464844 393.82470703]
[253.64816284 390.74322510]
[242.61331177 379.96197510]
[239.18125916 364.92120361]
[244.44717407 350.42037964]
[235.27502441 338.55145264]
[226.10287476 326.68249512]
[219.51388550 323.30654907]
[216.87939453 314.54208374]
[207.90370178 302.52389526]
[198.92800903 290.50570679]
[189.95231628 278.48751831]
[180.97662354 266.46929932]
[172.00093079 254.45112610]
[172.09999084 269.45080566]
[165.89785767 283.10852051]
[154.53865051 292.90487671]
[140.11779785 297.03271484]
[125.29551697 294.73056030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 150]
[13 149]
[14 148]
[15 147]
[20 39]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[82 108]
[83 107]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[118 130]
[119 129]
[120 128]
[121 127]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 178]
[165 177]
[166 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
