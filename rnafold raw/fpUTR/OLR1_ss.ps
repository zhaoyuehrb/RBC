%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUCUAUUAGAUAACAGUAGCUAUUUAAAUACUUCUGCAGAAGCUCACAUAUUUUUAGUUUGUUGAAGUUCGUGACUGCUUCACUCUCUCAUUCUUAGCUUGAAUUUGGAA\
) } def
/len { sequence length } bind def

/coor [
[102.23168182 144.19700623]
[94.62200165 143.92532349]
[87.17154694 142.35311890]
[80.45312500 155.76441956]
[73.73470306 169.17570496]
[78.95824432 184.09181213]
[72.02937317 198.29626465]
[57.05887604 203.36180115]
[42.92847824 196.28315735]
[38.02149582 181.25993347]
[45.24915314 167.20516968]
[60.32341003 162.45729065]
[67.04183197 149.04598999]
[73.76025391 135.63470459]
[67.35689545 129.87948608]
[62.18910599 122.99331665]
[58.45249176 115.23682404]
[56.28848648 106.90360260]
[41.28988266 106.69872284]
[26.29128265 106.49384308]
[12.38671684 114.04193115]
[-0.23368634 106.13151550]
[-15.23228741 105.92663574]
[-23.99211311 108.97080231]
[-30.63629723 105.50571442]
[-45.62370682 104.89122772]
[-60.61111450 104.27674103]
[-74.87814331 112.36277008]
[-88.87528992 103.81806946]
[-88.20348358 87.43268585]
[-73.55382538 80.06250763]
[-59.99662781 89.28933716]
[-45.00922012 89.90382385]
[-30.02181053 90.51831055]
[-15.02740669 90.92803192]
[-0.02880624 91.13291168]
[12.80295944 83.57016754]
[26.49616432 91.49523926]
[41.49476242 91.70011902]
[56.49336624 91.90499878]
[66.37804413 71.22639465]
[85.28152466 58.26604843]
[108.13310242 56.50047302]
[113.34887695 42.43648529]
[118.56465149 28.37250137]
[123.78042603 14.30851555]
[128.99620056 0.24453081]
[133.82588196 -13.95667458]
[138.26585388 -28.28450394]
[142.70582581 -42.61233139]
[147.14578247 -56.94015884]
[140.03482056 -70.79915619]
[144.74168396 -85.26636505]
[157.99794006 -91.96018219]
[162.43791199 -106.28800964]
[166.87788391 -120.61583710]
[171.31785583 -134.94366455]
[175.75782776 -149.27149963]
[165.75141907 -161.01351929]
[163.70434570 -176.30447388]
[170.26983643 -190.26504517]
[183.35287476 -198.44049072]
[198.77868652 -198.22204590]
[211.62496948 -189.67941284]
[217.79251099 -175.53851318]
[215.31327820 -160.31166077]
[204.97839355 -148.85769653]
[190.08564758 -144.83152771]
[185.64569092 -130.50369263]
[181.20571899 -116.17586517]
[176.76574707 -101.84803772]
[172.32577515 -87.52021027]
[179.47401428 -74.50336456]
[175.17535400 -59.90965652]
[161.47361755 -52.50019073]
[157.03364563 -38.17236328]
[152.59367371 -23.84453392]
[148.15370178 -9.51670456]
[149.61767578 -4.84017897]
[148.06077576 0.80436939]
[143.06019592 5.46030712]
[137.84442139 19.52429199]
[132.62863159 33.58827591]
[127.41286469 47.65226364]
[122.19708252 61.71624756]
[133.74090576 71.36597443]
[141.38444519 84.32566833]
[144.24411011 99.09724426]
[141.98936462 113.97317505]
[134.88082886 127.23387146]
[144.96844482 138.33523560]
[155.05604553 149.43658447]
[172.67587280 154.56510925]
[175.87181091 171.76145935]
[186.25888062 182.58312988]
[196.64596558 193.40480042]
[207.03303528 204.22648621]
[222.62265015 203.00254822]
[235.32160950 212.12780762]
[239.13386536 227.29359436]
[232.25936890 241.33906555]
[217.94407654 247.63240051]
[202.94720459 243.20207214]
[194.34982300 230.13993835]
[196.21136475 214.61355591]
[185.82427979 203.79188538]
[175.43721008 192.97019958]
[165.05014038 182.14852905]
[152.88290405 181.55934143]
[144.13854980 172.50968933]
[143.95469666 159.52420044]
[133.86708069 148.42283630]
[123.77947235 137.32148743]
[117.02947998 140.84547424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[18 40]
[19 39]
[20 38]
[22 36]
[23 35]
[25 34]
[26 33]
[27 32]
[43 85]
[44 84]
[45 83]
[46 82]
[47 81]
[48 78]
[49 77]
[50 76]
[51 75]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[90 113]
[91 112]
[92 111]
[94 108]
[95 107]
[96 106]
[97 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
