%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGGGCAAGGAACUUCCUGUUCCAUUUUCCCAGAGCCCUUCCCCAGGCUGGCGGAGGCUGGCUUUGGCCCUGGAGUCCUCAGAAAACCCCCCAGCAUCUCUGCCUGUGUAGUGGGGACUCCGAGUGGUGUGGGAGGAGAGGAGAGAGACCCAAGAGCGGGGCUGGCGUUAGGGAGGCAUCCCCGCAGUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[84.41928101 120.06566620]
[76.94335175 120.66609955]
[68.55989075 133.10464478]
[60.17642212 145.54319763]
[51.79296112 157.98175049]
[43.40949631 170.42030334]
[35.02603149 182.85884094]
[33.72920227 198.62681580]
[20.19990921 204.85638428]
[11.81644440 217.29492188]
[3.53293514 229.80026245]
[-4.65008831 242.37158203]
[-12.83311176 254.94291687]
[-21.01613617 267.51422119]
[-29.19915962 280.08554077]
[-27.30051613 296.01586914]
[-38.67362976 307.33096313]
[-54.59402466 305.35092163]
[-62.84893036 291.59460449]
[-57.10589600 276.61471558]
[-41.77048111 271.90252686]
[-33.58745575 259.33120728]
[-25.40443420 246.75988770]
[-17.22141075 234.18856812]
[-9.03838634 221.61724854]
[-8.02292633 214.28720093]
[-0.62210572 208.91146851]
[7.76135778 196.47291565]
[8.45854568 181.59463501]
[22.58748245 174.47538757]
[30.97094536 162.03683472]
[39.35440826 149.59828186]
[47.73787308 137.15972900]
[56.12133789 124.72118378]
[64.50479889 112.28263092]
[71.29598999 98.43372345]
[81.98384857 91.47065735]
[92.49412537 91.79585266]
[88.92234802 77.22731018]
[85.23393250 62.68785858]
[81.42911530 48.17843628]
[77.62429047 33.66901398]
[73.81947327 19.15959167]
[69.89849854 4.68112659]
[65.86161041 -9.76544952]
[61.82472610 -24.21202469]
[57.78784180 -38.65859985]
[47.01260376 -49.09384155]
[32.44406128 -52.66561508]
[17.87551880 -56.23738861]
[3.30697584 -59.80916595]
[-11.26156616 -63.38093948]
[-25.83010864 -66.95271301]
[-40.39865112 -70.52449036]
[-55.98493958 -65.42550659]
[-68.01162720 -76.57408142]
[-64.10668945 -92.50152588]
[-48.28718948 -96.82304382]
[-36.82687378 -85.09303284]
[-22.25833321 -81.52125549]
[-7.68979120 -77.94948578]
[6.87875128 -74.37770844]
[21.44729233 -70.80593109]
[36.01583481 -67.23415375]
[50.58437729 -63.66238022]
[56.59497833 -68.14820862]
[54.83586884 -83.04470825]
[68.61618042 -77.11986542]
[74.62678528 -81.60569763]
[75.34779358 -96.58835602]
[76.06880188 -111.57102203]
[76.66970825 -126.55898285]
[77.15048218 -141.55126953]
[77.51108551 -156.54693604]
[77.75150299 -171.54501343]
[77.99192047 -186.54309082]
[78.23233795 -201.54115295]
[78.47276306 -216.53923035]
[78.71318054 -231.53730774]
[78.95359802 -246.53536987]
[79.19401550 -261.53344727]
[79.43443298 -276.53152466]
[79.67485046 -291.52960205]
[66.60603333 -299.47650146]
[59.31775665 -312.80984497]
[59.67951202 -327.90075684]
[67.49403381 -340.69876099]
[80.57716370 -347.81896973]
[80.81758118 -362.81704712]
[69.20684814 -370.25854492]
[62.84261703 -382.37078857]
[63.29394913 -395.93746948]
[70.33588409 -407.41534424]
[82.03617096 -413.85964966]
[82.51694489 -428.85195923]
[82.99771881 -443.84423828]
[73.11595154 -456.48269653]
[76.97592163 -472.05447388]
[91.61657715 -478.61422729]
[105.80686951 -471.12991333]
[108.66121674 -455.34283447]
[97.99001312 -443.36346436]
[97.50923920 -428.37118530]
[97.02846527 -413.37887573]
[110.30586243 -403.73516846]
[115.27286530 -387.92065430]
[109.78477478 -372.10336304]
[95.81565094 -362.57662964]
[95.57523346 -347.57855225]
[108.42342377 -340.04266357]
[115.82373810 -327.00076294]
[115.70162201 -311.90600586]
[107.98973846 -298.81311035]
[94.67292023 -291.28918457]
[94.43250275 -276.29110718]
[94.19208527 -261.29302979]
[93.95166779 -246.29495239]
[93.71125031 -231.29689026]
[93.47083282 -216.29881287]
[93.23041534 -201.30073547]
[92.98999786 -186.30267334]
[92.74958038 -171.30459595]
[92.50916290 -156.30651855]
[95.54916382 -149.55973816]
[92.14277649 -141.07049561]
[91.66200256 -126.07820892]
[94.59347534 -119.28356934]
[91.05146027 -110.85001373]
[90.33045197 -95.86735535]
[89.60945129 -80.88468933]
[88.43015289 -54.25352097]
[72.23442078 -42.69548798]
[76.27130127 -28.24891090]
[80.30818939 -13.80233383]
[84.34506989 0.64424187]
[89.17906952 6.24719477]
[88.32889557 15.35477257]
[92.13372040 29.86419487]
[95.93853760 44.37361908]
[99.74335480 58.88304138]
[104.48692322 64.56275177]
[103.49089050 73.65553284]
[107.06266022 88.22407532]
[106.77773285 73.22678375]
[112.08331299 59.19643021]
[122.22038269 48.14021683]
[135.73872375 41.63985825]
[150.70436096 40.62530136]
[164.97633362 45.24169540]
[176.51284790 54.82860947]
[183.66346741 68.01452637]
[185.40524292 82.91305542]
[181.48898315 97.39279938]
[172.47496033 109.38226318]
[159.65270996 117.16621399]
[144.85661316 119.63108826]
[130.20341492 116.42424011]
[117.78816986 108.00319672]
[128.04936218 118.94430542]
[138.31056213 129.88542175]
[148.57174683 140.82652283]
[158.83294678 151.76763916]
[169.09414673 162.70874023]
[184.17819214 167.48176575]
[187.24102783 182.05805969]
[197.50221252 192.99917603]
[212.58627319 197.77218628]
[215.64909363 212.34848022]
[231.02769470 210.28001404]
[244.66903687 217.67550659]
[251.32775879 231.69123840]
[248.44345093 246.93789673]
[237.12518311 257.55279541]
[221.72506714 259.45434570]
[208.16474915 251.91130066]
[201.65844727 237.82414246]
[204.70799255 222.60968018]
[190.35787964 218.61924744]
[186.56111145 203.26036072]
[176.29991150 192.31925964]
[161.94979858 188.32881165]
[158.15303040 172.96994019]
[147.89183044 162.02882385]
[137.63064575 151.08772278]
[127.36944580 140.14660645]
[117.10825348 129.20550537]
[106.84706116 118.26438904]
[99.37113190 118.86481476]
[103.13072968 133.38601685]
[106.89032745 147.90722656]
[111.97464752 162.01927185]
[103.84946442 174.62805176]
[88.89758301 175.82862854]
[78.86460114 164.67788696]
[81.63162994 149.93586731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[9 28]
[10 27]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[38 143]
[39 142]
[40 140]
[41 139]
[42 138]
[43 137]
[44 135]
[45 134]
[46 133]
[47 132]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[69 130]
[70 129]
[71 128]
[72 126]
[73 125]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[88 109]
[89 108]
[94 104]
[95 103]
[96 102]
[158 187]
[159 186]
[160 185]
[161 184]
[162 183]
[163 182]
[165 180]
[166 179]
[168 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
