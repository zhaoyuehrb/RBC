%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUCCCCUCAGUCUGUAGCCCUUUUGUGUGAGUGCCUGGCAAGGGUGACGUGGGGCUGUUUCUGCGGGCACAGCUGCAGCAAUUACCGGAGUGGAGGCAGGGCCCAGGCAGCACUGCCCUCCAAGAUCUUCCCUUGGGCUUUUCAGCAGUAAGGGGACAUGCACCCCAAGGGCCUCCACUUGGCCUGACCUUGCUGCGGGGGCUCUCUGUCCCCAGGAACAGUAGAG\
) } def
/len { sequence length } bind def

/coor [
[-260.72943115 633.17687988]
[-275.69378662 634.21002197]
[-289.45816040 628.24829102]
[-298.94122314 616.62628174]
[-302.02011108 601.94567871]
[-298.00445557 587.49090576]
[-309.37722778 597.27154541]
[-320.74996948 607.05212402]
[-332.12274170 616.83276367]
[-331.57962036 630.28277588]
[-338.77337646 641.42944336]
[-350.89239502 646.32897949]
[-363.43276978 643.40197754]
[-374.93804932 653.02636719]
[-386.44335938 662.65069580]
[-387.78137207 666.74963379]
[-390.11416626 669.89929199]
[-393.02368164 671.90417480]
[-396.07131958 672.72369385]
[-398.84988403 672.46563721]
[-410.86358643 681.44732666]
[-422.87728882 690.42901611]
[-434.89099121 699.41076660]
[-446.90466309 708.39245605]
[-448.46453857 712.41223145]
[-450.96585083 715.42974854]
[-453.98052979 717.27276611]
[-457.06835938 717.92462158]
[-459.82867432 717.51519775]
[-472.31494141 725.82745361]
[-484.80117798 734.13970947]
[-492.00106812 748.22772217]
[-506.88308716 748.83990479]
[-519.36932373 757.15216064]
[-529.20355225 770.96246338]
[-545.19653320 765.33569336]
[-544.21691895 748.41003418]
[-527.68157959 744.66589355]
[-515.19531250 736.35363770]
[-508.88854980 722.86016846]
[-493.11343384 721.65344238]
[-480.62719727 713.34118652]
[-468.14093018 705.02893066]
[-455.88638306 696.37872314]
[-443.87268066 687.39703369]
[-431.85897827 678.41534424]
[-419.84527588 669.43365479]
[-407.83160400 660.45190430]
[-396.06771851 651.14538574]
[-384.56243896 641.52105713]
[-373.05712891 631.89666748]
[-372.27877808 615.09082031]
[-359.32717896 603.83099365]
[-341.90335083 605.45996094]
[-330.53057861 595.67938232]
[-319.15783691 585.89874268]
[-307.78506470 576.11816406]
[-297.17846680 565.51153564]
[-287.39785767 554.13879395]
[-277.61724854 542.76605225]
[-267.83663940 531.39324951]
[-258.05603027 520.02050781]
[-248.27540588 508.64776611]
[-238.49479675 497.27499390]
[-228.71418762 485.90225220]
[-218.93357849 474.52947998]
[-216.95796204 467.41827393]
[-208.94087219 463.06936646]
[-199.00582886 451.83126831]
[-189.07078552 440.59317017]
[-186.99822998 433.50961304]
[-178.92248535 429.27059937]
[-168.83488464 418.16925049]
[-158.74726868 407.06787109]
[-148.65966797 395.96652222]
[-139.11408997 384.39578247]
[-130.13238525 372.38208008]
[-121.15068054 360.36837769]
[-112.16897583 348.35467529]
[-103.18726349 336.34097290]
[-94.20555878 324.32730103]
[-85.22385406 312.31359863]
[-76.24214172 300.29989624]
[-67.26043701 288.28619385]
[-58.44365692 276.15093994]
[-49.79344940 263.89639282]
[-41.14324570 251.64184570]
[-40.48492813 234.09950256]
[-23.69038582 226.53292847]
[-22.87501907 211.66064453]
[-8.68996906 204.65386963]
[-0.20795235 192.28231812]
[8.27406502 179.91076660]
[16.75608253 167.53919983]
[25.23809814 155.16764832]
[33.72011566 142.79609680]
[42.20213318 130.42454529]
[50.68415070 118.05298615]
[59.16616821 105.68142700]
[67.64818573 93.30986786]
[71.39837646 78.78623199]
[69.96635437 63.85474396]
[68.53433228 48.92325974]
[67.10231018 33.99177170]
[65.67028809 19.06028366]
[62.16194153 13.48201942]
[62.01000595 7.81788826]
[64.40879822 3.70224452]
[63.38516617 -11.26278687]
[51.31004715 -21.45921326]
[50.06488419 -37.21437454]
[60.38840485 -49.18101501]
[76.15584564 -50.25953674]
[88.01267242 -39.81007385]
[88.92443085 -24.03210640]
[78.35019684 -12.28642273]
[79.37383270 2.67860842]
[80.60177612 17.62826157]
[82.03379822 32.55974960]
[83.46582031 47.49123764]
[84.89784241 62.42272568]
[86.32986450 77.35420990]
[101.11175537 79.90287018]
[107.46134186 66.31306458]
[113.81092834 52.72326279]
[120.16051483 39.13346100]
[126.51010895 25.54365730]
[119.74854279 11.44347286]
[123.68235779 -3.69122529]
[136.45413208 -12.71429539]
[152.03341675 -11.36531830]
[163.06416321 -0.28124154]
[164.33798218 15.30437374]
[155.25340271 28.03247643]
[140.09991455 31.89324570]
[133.75032043 45.48304749]
[127.40073395 59.07284927]
[121.05114746 72.66265106]
[114.70155334 86.25245667]
[126.89674377 94.98615265]
[137.71841431 84.59907532]
[148.54010010 74.21199799]
[152.58598328 58.31977463]
[168.44314575 54.13857269]
[179.79908752 65.96965790]
[174.97180176 81.64221954]
[158.92716980 85.03367615]
[148.10549927 95.42075348]
[137.28381348 105.80782318]
[141.04859924 112.29446411]
[154.02186584 104.76490784]
[169.02183533 104.73073578]
[161.55142212 117.73818207]
[148.57815552 125.26773834]
[152.34292603 131.75437927]
[166.73005676 127.51052094]
[181.11720276 123.26666260]
[195.50433350 119.02280426]
[201.58985901 104.61793518]
[215.53439331 97.54092407]
[230.75373840 101.13332367]
[240.06179810 113.69891357]
[239.06359863 129.30461121]
[228.23042297 140.58186340]
[212.67741394 142.20591736]
[199.74818420 133.40994263]
[185.36105347 137.65379333]
[170.97392273 141.89765930]
[156.58677673 146.14151001]
[125.06069183 157.17227173]
[96.86582184 151.73797607]
[79.00434113 135.49771118]
[74.08052063 116.36090088]
[80.01973724 101.79188538]
[71.53771973 114.16344452]
[63.05570602 126.53499603]
[54.57368851 138.90655518]
[46.09167099 151.27810669]
[37.60965347 163.64967346]
[29.12763786 176.02122498]
[20.64562035 188.39277649]
[12.16360283 200.76432800]
[3.68158627 213.13589478]
[2.25952911 228.89305115]
[-11.31882954 235.01493835]
[-9.72472286 247.80535889]
[-17.03312111 257.93237305]
[-28.88869858 260.29205322]
[-37.53890228 272.54660034]
[-46.18910599 284.80114746]
[-47.16639328 291.31808472]
[-50.74444199 295.71160889]
[-55.24673843 297.26791382]
[-64.22844696 309.28158569]
[-73.21015167 321.29528809]
[-82.19186401 333.30899048]
[-91.17356873 345.32269287]
[-100.15527344 357.33639526]
[-109.13698578 369.35009766]
[-118.11869049 381.36376953]
[-127.10040283 393.37747192]
[-112.28247070 391.04745483]
[-99.37451172 398.68844604]
[-94.28945160 412.80023193]
[-99.35665894 426.91842651]
[-112.25494385 434.57571411]
[-127.07580566 432.26446533]
[-137.03005981 421.04336548]
[-137.55830383 406.05413818]
[-147.64590454 417.15548706]
[-157.73352051 428.25683594]
[-167.82112122 439.35821533]
[-177.83268738 450.52819824]
[-187.76771545 461.76629639]
[-197.70275879 473.00439453]
[-207.56082153 484.31011963]
[-217.34143066 495.68286133]
[-227.12203979 507.05563354]
[-236.90264893 518.42840576]
[-246.68327332 529.80114746]
[-256.46386719 541.17388916]
[-266.24450684 552.54663086]
[-276.02511597 563.91943359]
[-285.80572510 575.29217529]
[-271.35321045 571.27661133]
[-256.67236328 574.35443115]
[-245.04966736 583.83666992]
[-239.08697510 597.60064697]
[-240.11909485 612.56506348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[8 55]
[9 54]
[13 51]
[14 50]
[15 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[29 43]
[30 42]
[31 41]
[33 39]
[34 38]
[58 224]
[59 223]
[60 222]
[61 221]
[62 220]
[63 219]
[64 218]
[65 217]
[66 216]
[68 215]
[69 214]
[70 213]
[72 212]
[73 211]
[74 210]
[75 209]
[76 201]
[77 200]
[78 199]
[79 198]
[80 197]
[81 196]
[82 195]
[83 194]
[84 193]
[85 190]
[86 189]
[87 188]
[89 185]
[91 183]
[92 182]
[93 181]
[94 180]
[95 179]
[96 178]
[97 177]
[98 176]
[99 175]
[100 174]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[108 117]
[109 116]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[140 149]
[141 148]
[142 147]
[155 169]
[156 168]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
