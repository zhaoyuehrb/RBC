%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCCAAACUGUGGUUCUUUGGUAGAAUUUCCUGGUUUUAAAAAAAAAAAAAGUGGGCUCUAGUCUUGCCGGGGACUCGUGGGGUAACUUGUUCUUGGGAGCCAGCGGU\
) } def
/len { sequence length } bind def

/coor [
[89.38603210 279.30706787]
[83.87178802 293.71527100]
[71.42971802 302.83657837]
[56.03003693 303.76043701]
[42.58673477 296.19198608]
[35.38951874 282.54635620]
[36.73499298 267.17776489]
[46.19382095 254.99031067]
[60.74772644 249.87295532]
[64.11509705 235.25581360]
[67.48246765 220.63867188]
[70.84983826 206.02153015]
[74.01003265 191.35820007]
[76.96240234 176.65161133]
[79.91477966 161.94503784]
[82.86714935 147.23846436]
[85.81952667 132.53187561]
[88.77189636 117.82530212]
[80.90728760 105.05236053]
[66.44623566 101.06765747]
[51.98517990 97.08294678]
[38.35795975 104.62858582]
[23.74915504 100.38152313]
[16.63952637 87.34354401]
[2.17847204 83.35884094]
[-12.28258324 79.37413788]
[-26.74363899 75.38942719]
[-41.20469284 71.40472412]
[-55.66574860 67.42002106]
[-70.12680054 63.43531036]
[-85.85181427 68.08891296]
[-97.55653381 56.60276413]
[-93.20014954 40.79283524]
[-77.26413727 36.92301941]
[-66.14209747 48.97425461]
[-51.68104172 52.95896149]
[-37.21998596 56.94366837]
[-22.75893211 60.92837524]
[-8.29787731 64.91307831]
[6.16317797 68.89778900]
[20.62423325 72.88249207]
[33.40854645 65.32624054]
[48.13087845 69.16130066]
[55.96988678 82.62189484]
[70.43093872 86.60659790]
[84.89199829 90.59130859]
[74.11159515 80.16139984]
[61.09893036 72.70013428]
[54.72618866 59.12117004]
[57.30213928 44.34400940]
[67.89354706 33.72223663]
[82.66326904 31.10398483]
[96.26042175 37.43782043]
[103.75891876 50.42907333]
[102.44224548 65.37091064]
[104.83747101 80.17843628]
[109.83457184 66.03527069]
[114.83166504 51.89211273]
[119.82876587 37.74895096]
[116.29853058 21.73428535]
[128.58343506 10.87089634]
[144.04582214 16.33410454]
[146.77931213 32.50382996]
[133.97192383 42.74604797]
[128.97482300 56.88920975]
[123.97772980 71.03237152]
[118.98063660 85.17552948]
[118.92510986 89.47735596]
[118.04615784 93.37515259]
[116.47147369 96.72594452]
[131.43394470 97.78640747]
[146.39640808 98.84687042]
[161.35887146 99.90733337]
[176.32133484 100.96779633]
[191.28381348 102.02825928]
[206.24627686 103.08872223]
[221.20874023 104.14918518]
[233.08422852 94.06897736]
[248.24319458 95.35758972]
[257.77993774 106.74116516]
[272.74240112 107.80162811]
[284.51406860 97.25633240]
[300.28976440 98.20692444]
[310.71002197 110.08943176]
[309.59268188 125.85417175]
[297.60067749 136.14820862]
[281.84863281 134.86427307]
[271.68194580 122.76409912]
[256.71948242 121.70363617]
[245.67250061 131.62834167]
[230.48332214 130.76603699]
[220.14828491 119.11165619]
[205.18580627 118.05119324]
[190.22334290 116.99073029]
[175.26087952 115.93026733]
[160.29841614 114.86980438]
[145.33593750 113.80933380]
[130.37347412 112.74887085]
[115.41101074 111.68840790]
[103.47847748 120.77767181]
[100.52610779 135.48425293]
[97.57373047 150.19082642]
[94.62136078 164.89741516]
[91.66898346 179.60398865]
[88.71660614 194.31057739]
[90.10297394 203.49124146]
[85.46697998 209.38890076]
[82.09960938 224.00604248]
[78.73223877 238.62318420]
[75.36486816 253.24032593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 110]
[10 109]
[11 108]
[12 107]
[13 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 46]
[20 45]
[21 44]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[56 67]
[57 66]
[58 65]
[59 64]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[80 89]
[81 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
