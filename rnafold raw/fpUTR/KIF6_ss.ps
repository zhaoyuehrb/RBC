%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUGUCCCUAGCUACUGUUGCUAAGACUGUGGGUCGCCGGAGGUGGUGGGAGUUAGUUUUGGCAGCCCGGGCCUGAGAGAGGUCAAGGGUCAUUGCAGAGCCAGGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[78.32611847 367.04971313]
[63.95872879 360.87622070]
[56.96711349 346.88867188]
[60.65250397 331.69155884]
[73.27477264 322.46051025]
[66.25033569 309.32632446]
[74.73610687 295.97335815]
[75.56242371 280.99612427]
[76.38874054 266.01889038]
[77.21505737 251.04167175]
[78.04137421 236.06445312]
[71.01693726 222.93028259]
[79.50270844 209.57728577]
[80.32902527 194.60006714]
[81.15534210 179.62284851]
[78.34291840 172.67503357]
[82.21640015 164.24606323]
[83.45509338 149.29728699]
[84.69377899 134.34852600]
[85.93247223 119.39974976]
[84.25366974 95.17246246]
[74.09444427 84.13660431]
[63.93522263 73.10074615]
[53.77600098 62.06488800]
[43.61677551 51.02902985]
[33.45755386 39.99317169]
[23.29832840 28.95731354]
[13.13910484 17.92145348]
[2.97988129 6.88559580]
[-7.17934227 -4.15026331]
[-17.33856583 -15.18612194]
[-32.28581619 -11.94159031]
[-46.75465775 -16.58372307]
[-56.88990021 -27.77046585]
[-60.04379654 -42.43023682]
[-55.46722031 -56.60488129]
[-65.62644196 -67.64073944]
[-75.78566742 -78.67659760]
[-85.94489288 -89.71245575]
[-96.10411835 -100.74831390]
[-106.26333618 -111.78417206]
[-122.06776428 -116.16048431]
[-125.91749573 -132.10136414]
[-113.85224915 -143.20820618]
[-98.28372192 -138.05523682]
[-95.22747803 -121.94339752]
[-85.06825256 -110.90753937]
[-74.90903473 -99.87168121]
[-64.74980927 -88.83582306]
[-54.59058380 -77.79996490]
[-44.43136215 -66.76410675]
[-29.92720032 -70.15451813]
[-15.57794666 -65.80079651]
[-5.26637268 -54.77637863]
[-1.83492315 -39.97360992]
[-6.30270720 -25.34534454]
[3.85651636 -14.30948639]
[14.01574039 -3.27362800]
[24.17496300 7.76223087]
[34.33418655 18.79808998]
[44.49341202 29.83394814]
[54.65263367 40.86980820]
[64.81185913 51.90566635]
[74.97108459 62.94152451]
[85.13030243 73.97737885]
[95.28952789 85.01324463]
[109.83053589 88.69552612]
[124.01779175 83.82503510]
[138.20504761 78.95453644]
[152.39230347 74.08404541]
[164.07371521 59.93273926]
[181.13041687 63.80025482]
[195.17808533 58.54069138]
[209.22575378 53.28112793]
[223.27342224 48.02156448]
[237.32109070 42.76200104]
[245.24926758 28.81483078]
[261.11853027 26.45983696]
[272.75534058 37.50357056]
[271.23294067 53.47422791]
[257.71917725 62.12048340]
[242.58065796 56.80967331]
[228.53298950 62.06923676]
[214.48532104 67.32879639]
[200.43765259 72.58836365]
[186.38998413 77.84792328]
[181.03506470 88.79110718]
[169.26254272 93.24195099]
[157.26280212 88.27130890]
[143.07554626 93.14179993]
[128.88829041 98.01229095]
[114.70102692 102.88278198]
[128.91110229 107.68630219]
[133.22505188 122.05257416]
[124.01189423 133.88970947]
[109.02620697 133.23454285]
[100.88124084 120.63844299]
[99.64254761 135.58720398]
[98.40386200 150.53598022]
[97.16516876 165.48474121]
[96.13256836 180.44915771]
[95.30625153 195.42639160]
[94.47993469 210.40361023]
[101.44526672 224.60905457]
[93.01859283 236.89076233]
[92.19228363 251.86799622]
[91.36596680 266.84521484]
[90.53964996 281.82244873]
[89.71333313 296.79965210]
[96.67866516 311.00509644]
[88.25199127 323.28683472]
[99.78215790 333.85040283]
[101.77337646 349.36068726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 111]
[7 109]
[8 108]
[9 107]
[10 106]
[11 105]
[13 103]
[14 102]
[15 101]
[17 100]
[18 99]
[19 98]
[20 97]
[21 66]
[22 65]
[23 64]
[24 63]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[67 92]
[68 91]
[69 90]
[70 89]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
