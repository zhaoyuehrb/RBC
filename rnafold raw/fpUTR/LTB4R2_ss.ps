%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCUGCAAAUGUGAUAGGCACAGGACAGGAGUAGGCACCUCGCCUACUGCUGCUUAACCUUUCAGCUUCUCCAGGCCCCCAAUCCUGCUUGCUCCCAGCUUGGUGGGGUUUUGCCCCACCCCUGAACGCCCUCUGUGGCGCCUUCCACCCACCUGUAGGCCCAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[56.23897171 239.19566345]
[58.78116989 219.98141479]
[59.05513000 204.98391724]
[51.55157471 192.11746216]
[59.53963089 178.46090698]
[59.81359100 163.46340942]
[60.08755112 148.46591187]
[60.36151123 133.46841431]
[54.91492081 128.31237793]
[53.64456558 143.25848389]
[41.16725922 151.58415222]
[26.87846565 147.02012634]
[21.53771591 133.00311279]
[29.16661453 120.08801270]
[44.02174377 118.00032043]
[38.57515335 112.84428406]
[23.61516762 113.93921661]
[10.41659641 122.66322327]
[-2.84150910 115.87559509]
[-17.80149269 116.97052765]
[-32.76147842 118.06545258]
[-40.34886169 129.22077942]
[-52.79830551 133.89007568]
[-65.47321320 130.57421875]
[-73.79001617 120.70446014]
[-88.76750183 121.52597046]
[-103.74498749 122.34748840]
[-112.17861176 125.95348358]
[-119.00303650 123.04470062]
[-133.99302673 123.59252930]
[-148.98303223 124.14035797]
[-162.49140930 132.37651062]
[-175.49276733 125.10919952]
[-190.48275757 125.65702820]
[-205.47276306 126.20485687]
[-220.46275330 126.75268555]
[-235.45274353 127.30051422]
[-250.44273376 127.84835052]
[-265.43273926 128.39617920]
[-277.36422729 139.12086487]
[-293.16394043 136.33715820]
[-300.71163940 122.18048859]
[-294.21743774 107.51063538]
[-278.66308594 103.58105469]
[-265.98056030 113.40618896]
[-250.99057007 112.85835266]
[-236.00057983 112.31052399]
[-221.01057434 111.76269531]
[-206.02058411 111.21486664]
[-191.03059387 110.66703033]
[-176.04060364 110.11920166]
[-163.60440063 101.92224121]
[-149.53085327 109.15036774]
[-134.54086304 108.60253906]
[-119.55087280 108.05470276]
[-104.56650543 107.37000275]
[-89.58901978 106.54848480]
[-74.61153412 105.72696686]
[-63.95318985 92.73930359]
[-46.86440659 91.43523407]
[-33.85640717 103.10546875]
[-18.89642334 102.01054382]
[-3.93643880 100.91561127]
[8.19209385 92.26992035]
[22.52023697 98.97923279]
[37.48022079 97.88430023]
[46.75587082 86.09606934]
[44.30117416 71.29828644]
[41.84648132 56.50049973]
[29.98891068 52.41147232]
[21.05719566 43.70873260]
[16.71236229 32.09679413]
[17.72561646 19.81265831]
[23.84220886 9.19491673]
[33.84175110 2.23853993]
[31.92913818 -12.63902473]
[30.01652718 -27.51658821]
[28.10391617 -42.39415359]
[14.42574215 -49.72130966]
[7.69698334 -63.70356369]
[10.50498295 -78.96445465]
[21.77000809 -89.63585663]
[37.16042709 -91.61439514]
[50.75830841 -84.13928986]
[57.33499146 -70.08486176]
[54.36160660 -54.85533524]
[42.98147964 -44.30676270]
[44.89409256 -29.42920113]
[46.80670166 -14.55163574]
[48.71931458 0.32592803]
[64.57234955 8.04125881]
[72.71698761 23.85462189]
[69.74067688 41.55041504]
[56.64426804 54.04580307]
[59.09896088 68.84358978]
[61.55365753 83.64138031]
[78.26340485 60.57805252]
[107.72090912 52.36872482]
[137.83140564 65.07359314]
[150.34136963 56.79707336]
[162.85134888 48.52055740]
[164.41276550 37.70930862]
[171.53582764 29.72030830]
[181.67251587 27.04671860]
[191.39227295 30.34240341]
[204.19618225 22.52829742]
[217.00007629 14.71419239]
[229.80397034 6.90008783]
[242.60786438 -0.91401738]
[255.41175842 -8.72812271]
[268.21566772 -16.54222679]
[281.01956177 -24.35633278]
[291.38995361 -37.76868820]
[307.14895630 -31.51648712]
[305.50360107 -14.64256573]
[288.83364868 -11.55243683]
[276.02975464 -3.73833132]
[263.22586060 4.07577372]
[250.42196655 11.88987923]
[237.61807251 19.70398331]
[224.81417847 27.51808929]
[212.01028442 35.33219528]
[199.20639038 43.14630127]
[191.26017761 60.75076294]
[171.12785339 61.03052521]
[158.61788940 69.30704498]
[146.10792542 77.58355713]
[147.26765442 84.99335480]
[161.26162720 90.39414978]
[149.58709717 99.81293488]
[150.74682617 107.22273254]
[165.18737793 111.28115082]
[179.62791443 115.33956909]
[193.28562927 107.38707733]
[208.54483032 111.50200653]
[216.35247803 125.24304962]
[212.07644653 140.45788574]
[198.25363159 148.11981201]
[183.08485413 143.68316650]
[175.56948853 129.78010559]
[161.12895203 125.72169495]
[146.68841553 121.66326904]
[138.52648926 134.24830627]
[148.12158203 145.77801514]
[157.71667480 157.30770874]
[167.31176758 168.83741760]
[180.08456421 170.79730225]
[187.83776855 180.62898254]
[186.83142090 192.70678711]
[196.21434021 204.40980530]
[211.94924927 205.88899231]
[221.96508789 218.11431885]
[220.31962585 233.83271790]
[207.98908997 243.71875000]
[192.28897095 241.90718079]
[182.53385925 229.47282410]
[184.51130676 213.79272461]
[175.12838745 202.08969116]
[158.46591187 196.63281250]
[155.78205872 178.43252563]
[146.18696594 166.90281677]
[136.59187317 155.37310791]
[126.99678040 143.84339905]
[98.16236115 146.59899902]
[75.35900879 133.74237061]
[75.08505249 148.73986816]
[74.81108856 163.73736572]
[74.53712463 178.73486328]
[82.02108765 192.67405701]
[74.05262756 205.25788879]
[73.77867126 220.25538635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[5 168]
[6 167]
[7 166]
[8 165]
[16 66]
[17 65]
[19 63]
[20 62]
[21 61]
[25 58]
[26 57]
[27 56]
[29 55]
[30 54]
[31 53]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[67 96]
[68 95]
[69 94]
[75 90]
[76 89]
[77 88]
[78 87]
[99 127]
[100 126]
[101 125]
[105 123]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[131 142]
[132 141]
[133 140]
[143 163]
[144 162]
[145 161]
[146 160]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
