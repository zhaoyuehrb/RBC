%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGGGGCGAGCGGCCGACGGCGGGUGCACGCGUCGGUACACGUCUGGGCGGCGACCUGGUCGCAAGCCAUGGUCCCACGCGGGGUCCCAGGGCCGCCGCGGGACUUGGCCGAGGUCUCCCGACUUGUGCUGUGAGAUACGUUAACGCUUUCUCGACACCAGGGGUCUGGACUUAGUGACC\
) } def
/len { sequence length } bind def

/coor [
[11.13907242 165.82307434]
[6.35910845 165.41221619]
[-6.71579885 172.76387024]
[-19.79070663 180.11552429]
[-32.86561203 187.46717834]
[-41.10254669 200.97508240]
[-55.98853683 200.46855164]
[-68.93601990 208.04235840]
[-76.70697784 221.82360840]
[-91.60158539 221.82559204]
[-99.37254333 235.60684204]
[-114.26715088 235.60882568]
[-127.08344269 243.40258789]
[-139.83273315 251.30546570]
[-152.51408386 259.31689453]
[-164.98612976 267.65045166]
[-177.24067688 276.30065918]
[-189.49523926 284.95086670]
[-201.74978638 293.60107422]
[-214.00433350 302.25128174]
[-226.25888062 310.90148926]
[-238.51342773 319.55169678]
[-243.73570251 327.07583618]
[-251.05184937 328.24285889]
[-263.45230103 336.68258667]
[-266.15652466 352.25378418]
[-279.12713623 361.28369141]
[-294.66888428 358.41497803]
[-303.56115723 345.34963989]
[-300.52828979 329.83908081]
[-287.36965942 321.08544922]
[-271.89202881 324.28213501]
[-259.49157715 315.84240723]
[-247.16363525 307.29714966]
[-234.90908813 298.64694214]
[-222.65454102 289.99673462]
[-210.39997864 281.34652710]
[-198.14543152 272.69631958]
[-185.89088440 264.04611206]
[-173.63633728 255.39590454]
[-172.68395996 251.97763062]
[-170.01466370 248.85661316]
[-165.78909302 246.84107971]
[-160.52552795 246.63554382]
[-147.84416199 238.62411499]
[-143.85899353 232.37858582]
[-134.87719727 230.58628845]
[-122.06090546 222.79252625]
[-115.20665741 209.56874084]
[-99.39534760 209.00929260]
[-92.54109192 195.78550720]
[-76.72978210 195.22605896]
[-74.74520874 190.85818481]
[-69.98308563 187.70196533]
[-63.34019089 187.39363098]
[-56.03845978 174.41157532]
[-40.21726608 174.39227295]
[-27.14235878 167.04061890]
[-14.06745243 159.68896484]
[-0.99254501 152.33731079]
[11.95494080 144.76348877]
[24.77123260 136.96974182]
[37.58752441 129.17597961]
[50.40381622 121.38221741]
[63.22010422 113.58845520]
[76.03639984 105.79470062]
[76.08387756 94.01235962]
[81.59367371 83.59755707]
[91.30738068 76.92899323]
[90.53939056 61.94866943]
[89.77140808 46.96834183]
[89.00341797 31.98801613]
[85.43151855 23.55437088]
[88.35240936 16.74580574]
[87.84029388 1.75455117]
[87.32817841 -13.23670387]
[86.81606293 -28.22795868]
[86.30394745 -43.21921539]
[85.79183197 -58.21047211]
[82.60372925 -64.04649353]
[82.82614899 -69.75526428]
[85.52698517 -73.72039795]
[85.52698517 -88.72039795]
[85.52698517 -103.72039795]
[85.52698517 -118.72039795]
[85.39893341 -133.71984863]
[85.14283752 -148.71766663]
[84.88674164 -163.71548462]
[84.63064575 -178.71330261]
[75.73048401 -192.48715210]
[83.44870758 -206.95646667]
[99.84546661 -207.23645020]
[108.05318451 -193.03907776]
[99.62846375 -178.96939087]
[99.88455963 -163.97157288]
[100.14065552 -148.97377014]
[100.39675140 -133.97595215]
[103.66240692 -127.32586670]
[100.52698517 -118.72039795]
[100.52698517 -103.72039795]
[100.52698517 -88.72039795]
[100.52698517 -73.72039795]
[100.78308105 -58.72258759]
[101.29520416 -43.73133087]
[101.80731964 -28.74007607]
[102.31943512 -13.74882126]
[102.83155060 1.24243450]
[103.34366608 16.23369026]
[103.98374176 31.22002792]
[104.75173187 46.20035553]
[105.51972198 61.18067932]
[106.28771210 76.16101074]
[115.46128845 80.79631805]
[121.94771576 88.76920319]
[124.61965179 98.69399261]
[139.13040161 102.49375153]
[153.64114380 106.29351807]
[168.15190125 110.09327698]
[182.66264343 113.89304352]
[197.17338562 117.69280243]
[206.25529480 111.65272522]
[216.94239807 111.62226868]
[225.69087219 117.36930847]
[229.73295593 126.78584290]
[244.10551453 131.07879639]
[258.47805786 135.37176514]
[272.85061646 139.66471863]
[287.22317505 143.95768738]
[302.66049194 140.49360657]
[312.64102173 151.54977417]
[327.01358032 155.84272766]
[342.45089722 152.37864685]
[352.43139648 163.43481445]
[366.80395508 167.72778320]
[381.17651367 172.02073669]
[395.58520508 176.19084167]
[410.02896118 180.23779297]
[424.47271729 184.28474426]
[438.91647339 188.33169556]
[453.99200439 179.48020935]
[470.48358154 184.16661072]
[478.33587646 199.02656555]
[492.84664917 202.82632446]
[508.51095581 197.97235107]
[520.36138916 209.30813599]
[516.20715332 225.17239380]
[500.32186890 229.24533081]
[489.04687500 217.33706665]
[474.53613281 213.53730774]
[464.42080688 221.54148865]
[451.34677124 222.26145935]
[440.08352661 215.20983887]
[434.86950684 202.77545166]
[420.42575073 198.72850037]
[405.98199463 194.68154907]
[391.53823853 190.63459778]
[384.23168945 191.86042786]
[376.88354492 186.39329529]
[362.51098633 182.10034180]
[348.13842773 177.80737305]
[333.72912598 181.57852173]
[322.72061157 170.21528625]
[308.34805298 165.92233276]
[293.93875122 169.69346619]
[282.93023682 158.33024597]
[268.55767822 154.03727722]
[254.18510437 149.74432373]
[239.81254578 145.45137024]
[225.43998718 141.15840149]
[207.02618408 147.01371765]
[193.37362671 132.20355225]
[178.86288452 128.40379333]
[164.35212708 124.60402679]
[149.84138489 120.80426788]
[135.33064270 117.00450134]
[120.81988525 113.20474243]
[103.56547546 124.39508820]
[83.83015442 118.61099243]
[71.01386261 126.40474701]
[58.19757462 134.19850159]
[45.38128281 141.99226379]
[32.56499100 149.78602600]
[19.74870110 157.57978821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 60]
[3 59]
[4 58]
[5 57]
[7 55]
[8 52]
[10 50]
[12 48]
[13 47]
[14 45]
[15 44]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[24 33]
[25 32]
[61 183]
[62 182]
[63 181]
[64 180]
[65 179]
[66 178]
[69 112]
[70 111]
[71 110]
[72 109]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 97]
[87 96]
[88 95]
[89 94]
[115 176]
[116 175]
[117 174]
[118 173]
[119 172]
[120 171]
[124 169]
[125 168]
[126 167]
[127 166]
[128 165]
[130 163]
[131 162]
[133 160]
[134 159]
[135 158]
[136 156]
[137 155]
[138 154]
[139 153]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
