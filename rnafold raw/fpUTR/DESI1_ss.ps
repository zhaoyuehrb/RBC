%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUCCCUGUCCCCUCUCUGUCACCUCACAGUAGUCGUUGCCGGUAGCGGGUGUGGGGGCGCGAGCAGCGCAGGGCGGCCUCUCCCCCACCCCUCAGCCCGGGCCCGGGCUCGGUCCCCCCCUCUCCCUCCGCUUCGCACUCCCGUCGGGUACGGGAAGGUCCAAGCCGCUGCCGGGUGCCCGAGGGCCGUCGUGGCCGCCGUCGCCACGGGUCCCA\
) } def
/len { sequence length } bind def

/coor [
[153.84132385 214.08868408]
[147.77961731 200.36805725]
[141.71789551 186.64743042]
[135.65618896 172.92678833]
[129.59448242 159.20616150]
[123.53276825 145.48553467]
[116.13459778 144.25387573]
[106.60335541 155.83641052]
[101.33824921 141.79054260]
[93.94007111 140.55886841]
[83.76003265 151.57553101]
[84.20577240 167.14599609]
[73.72483063 178.17343140]
[58.87803268 178.50241089]
[59.32376480 194.07287598]
[48.84282684 205.10031128]
[33.99602890 205.42930603]
[23.81599426 216.44596863]
[13.71523666 227.53535461]
[3.69427919 238.69691467]
[-6.32667875 249.85847473]
[-16.34763718 261.02005005]
[-15.24770164 276.78601074]
[-25.68105125 288.65701294]
[-41.45776367 289.59020996]
[-53.21780014 279.03192139]
[-53.98413086 263.24621582]
[-43.30211258 251.59848022]
[-27.50919533 250.99908447]
[-17.48823738 239.83752441]
[-7.46727991 228.67596436]
[2.55367804 217.51440430]
[4.68197870 210.44149780]
[12.79933071 206.26593018]
[22.97936630 195.24926758]
[22.13715363 180.42272949]
[32.30422211 169.10523987]
[47.86137009 168.32238770]
[47.01915359 153.49583435]
[57.18622208 142.17835999]
[72.74337006 141.39549255]
[82.92340851 130.37882996]
[73.98326111 112.52642059]
[77.39599609 96.32300568]
[64.19580841 89.19874573]
[50.99562836 82.07447815]
[35.17646790 82.32898712]
[27.65115356 69.47524261]
[11.83199406 69.72975159]
[4.30667877 56.87599945]
[-8.89350414 49.75173569]
[-22.09368706 42.62746811]
[-31.12602997 41.30702209]
[-35.43104935 35.30515289]
[-48.52767944 27.99226761]
[-61.62430954 20.67938232]
[-74.72093964 13.36649704]
[-87.81756592 6.05361176]
[-100.91419983 -1.25927353]
[-114.01082611 -8.57215881]
[-129.83201599 -8.54459381]
[-137.17216492 -21.50497055]
[-152.99334717 -21.47740555]
[-160.33351135 -34.43778229]
[-169.34597778 -35.88765717]
[-173.56446838 -41.95066071]
[-186.55484009 -49.45066071]
[-202.37480164 -49.65005112]
[-209.52828979 -62.71438599]
[-222.51866150 -70.21438599]
[-238.32484436 -67.46772766]
[-250.23117065 -78.22034454]
[-249.10414124 -94.22376251]
[-235.80828857 -103.20152283]
[-220.54307556 -98.26665497]
[-215.01866150 -83.20476532]
[-202.02828979 -75.70476532]
[-187.13749695 -76.04182434]
[-179.05484009 -62.44104385]
[-166.06446838 -54.94104385]
[-153.02062988 -47.53440857]
[-138.13619995 -48.08504105]
[-129.85928345 -34.60160065]
[-114.97486115 -35.15222931]
[-106.69794464 -21.66878891]
[-93.60131073 -14.35590267]
[-80.50468445 -7.04301739]
[-67.40805817 0.26986784]
[-54.31142426 7.58275318]
[-41.21479416 14.89563847]
[-28.11816597 22.20852470]
[-14.96942139 29.42728615]
[-1.76923811 36.55155182]
[11.43094444 43.67581940]
[26.30593872 42.91173172]
[34.77542114 56.27505493]
[49.65041351 55.51096725]
[58.11989594 68.87429047]
[71.32007599 75.99855804]
[84.52026367 83.12282562]
[116.35080719 76.20014954]
[132.42315674 112.77587128]
[144.59623718 104.01139832]
[156.76931763 95.24692535]
[168.94241333 86.48245239]
[181.05232239 77.63088989]
[193.09843445 68.69270325]
[199.57049561 54.25584030]
[214.40193176 52.88554764]
[226.44804382 43.94735718]
[238.49414062 35.00916672]
[245.42387390 17.94571495]
[262.92556763 16.62438393]
[274.84222412 7.51431704]
[286.75888062 -1.59575081]
[298.67553711 -10.70581818]
[295.67272949 -25.63044548]
[299.43231201 -40.31895828]
[309.15673828 -51.87126160]
[322.87625122 -58.03051376]
[337.84768677 -57.62392807]
[351.10302734 -50.78569031]
[363.01968384 -59.89575577]
[374.93634033 -69.00582123]
[379.84957886 -76.69913483]
[387.08990479 -78.15963745]
[399.13601685 -87.09783173]
[411.18212891 -96.03601837]
[423.22824097 -104.97421265]
[435.07925415 -114.16951752]
[446.72964478 -123.61768341]
[458.38006592 -133.06584167]
[470.03048706 -142.51400757]
[470.53161621 -153.37194824]
[476.79397583 -161.98619080]
[486.55700684 -165.65748596]
[496.51547241 -163.40065002]
[508.43212891 -172.51071167]
[510.27441406 -188.20726013]
[522.72784424 -197.93800354]
[538.40405273 -195.92988586]
[548.00256348 -183.37426758]
[545.82885742 -167.72018433]
[533.17242432 -158.25492859]
[517.54223633 -160.59405518]
[505.62554932 -151.48399353]
[499.51248169 -133.13597107]
[479.47866821 -130.86360168]
[467.82824707 -121.41542816]
[456.17782593 -111.96726227]
[444.52740479 -102.51909637]
[443.79840088 -99.07505035]
[441.36853027 -95.81179810]
[437.34033203 -93.52332306]
[432.16641235 -92.92810059]
[420.12033081 -83.98990631]
[408.07421875 -75.05171967]
[396.02810669 -66.11353302]
[384.04641724 -57.08916855]
[372.12976074 -47.97910309]
[360.21310425 -38.86903381]
[363.33529663 -24.28420448]
[359.80093384 -9.73024940]
[350.25894165 1.89348984]
[336.56051636 8.24752426]
[321.40014648 8.02297974]
[307.78561401 1.21083641]
[295.86895752 10.32090378]
[283.95230103 19.43097115]
[272.03564453 28.54104042]
[270.12658691 40.48222351]
[260.27835083 48.16995621]
[247.43234253 47.05527878]
[235.38623047 55.99346924]
[223.34011841 64.93165588]
[217.72967529 78.72920227]
[202.03662109 80.73881531]
[189.99050903 89.67700195]
[186.49404907 96.18318176]
[177.70687866 98.65554047]
[165.53379822 107.42001343]
[153.36070251 116.18448639]
[141.18762207 124.94895935]
[137.25340271 139.42382812]
[143.31510925 153.14445496]
[149.37681580 166.86508179]
[155.43853760 180.58570862]
[161.50024414 194.30635071]
[167.56195068 208.02697754]
[188.43649292 214.37194824]
[197.66152954 233.82839966]
[189.57887268 253.47879028]
[196.60827637 266.72973633]
[203.63768005 279.98068237]
[210.66708374 293.23162842]
[217.69648743 306.48257446]
[224.72589111 319.73352051]
[231.75529480 332.98446655]
[247.08480835 336.07315063]
[256.80206299 348.32504272]
[256.31887817 363.95516968]
[245.86338806 375.58343506]
[230.37236023 377.71936035]
[217.16018677 369.35440063]
[212.46525574 354.43826294]
[218.50436401 340.01385498]
[211.47496033 326.76290894]
[204.44555664 313.51196289]
[197.41615295 300.26101685]
[190.38673401 287.01010132]
[183.35733032 273.75915527]
[176.32792664 260.50820923]
[167.73873901 260.90505981]
[159.44343567 258.48263550]
[152.34671021 253.47573853]
[147.23199463 246.40267944]
[144.67504883 238.01159668]
[144.97921753 229.20141602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[10 42]
[11 41]
[14 38]
[17 35]
[18 34]
[19 32]
[20 31]
[21 30]
[22 29]
[44 100]
[45 99]
[46 98]
[48 96]
[50 94]
[51 93]
[52 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[62 83]
[64 81]
[66 80]
[67 79]
[69 77]
[70 76]
[102 183]
[103 182]
[104 181]
[105 180]
[106 178]
[107 177]
[109 175]
[110 174]
[111 173]
[113 170]
[114 169]
[115 168]
[116 167]
[122 161]
[123 160]
[124 159]
[126 158]
[127 157]
[128 156]
[129 155]
[130 151]
[131 150]
[132 149]
[133 148]
[137 146]
[138 145]
[192 212]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
[198 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
