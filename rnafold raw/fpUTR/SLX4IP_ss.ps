%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAAAGUGCUUCCCUUAAGCUUCUGAAGGUUGGCUGCAGUUCCGGCUACCUGUGUAGUCCGAGUUUCCACAGCCAGGUACUACUCCGCCAGUGACCCUGGACAGUAACAAAACAUAUAAAGCCCGAGCCCAAACCCCGCCACCAUCAUAGGUCUGUAGUUACUGUGGAAUCAAUAAGCC\
) } def
/len { sequence length } bind def

/coor [
[163.83090210 146.39350891]
[159.46971130 132.04150391]
[159.87573242 117.04699707]
[165.00720215 102.95203400]
[174.33641052 91.20615387]
[186.90335083 83.01756287]
[171.91746521 83.66823578]
[156.93157959 84.31891632]
[141.94570923 84.96959686]
[126.95982361 85.62027740]
[111.97394562 86.27095032]
[117.18888092 100.63111877]
[109.71442413 112.94397736]
[96.29966736 114.70890808]
[85.92565918 125.54311371]
[75.55165863 136.37731934]
[65.17765808 147.21153259]
[61.22196198 162.53024292]
[46.83127594 166.37179565]
[36.45727539 177.20599365]
[29.87008095 192.82794189]
[13.03512955 190.82276917]
[10.30156517 174.09065247]
[25.62306404 166.83200073]
[35.99706650 155.99778748]
[39.21074677 141.45401001]
[54.34344864 136.83752441]
[64.71745300 126.00331879]
[75.09145355 115.16911316]
[85.46545410 104.33489990]
[84.70488739 93.31513214]
[91.96374512 83.65128326]
[77.65039825 79.16484070]
[63.33705139 74.67839813]
[49.02370453 70.19196320]
[34.71036148 65.70552063]
[20.39701462 61.21907806]
[9.38305187 73.17792511]
[-5.68714666 79.12129211]
[-21.78321838 77.90852356]
[-35.69217300 69.83250427]
[-44.65973663 56.55104446]
[-46.93572235 40.74679184]
[-61.36101151 36.63448334]
[-75.82144165 32.64751434]
[-90.28187561 28.66054916]
[-104.77635956 24.79922295]
[-119.30381012 21.06383133]
[-133.83126831 17.32843971]
[-148.35871887 13.59304905]
[-164.00135803 18.51642609]
[-175.90191650 7.23329592]
[-171.81809998 -8.64922523]
[-155.95098877 -12.79256153]
[-144.62332153 -0.93440259]
[-130.09587097 2.80098891]
[-115.56842041 6.53638077]
[-101.04096985 10.27177238]
[-93.76020050 8.88860130]
[-86.29490662 14.20011616]
[-71.83447266 18.18708420]
[-57.37404251 22.17405128]
[-50.07036591 20.91745377]
[-42.69837952 26.35773659]
[-33.89992523 15.61322594]
[-21.62977600 9.01727200]
[-7.72816849 7.59666109]
[5.70560169 11.59916592]
[16.63019753 20.45109177]
[23.37242317 32.83926010]
[24.88345528 46.90573502]
[39.19680023 51.39217377]
[53.51014709 55.87861633]
[67.82349396 60.36505508]
[82.13683319 64.85149384]
[96.45018005 69.33793640]
[111.32326508 71.28507233]
[126.30915070 70.63439178]
[141.29502869 69.98371887]
[156.28091431 69.33303833]
[171.26678467 68.68235779]
[186.25267029 68.03167725]
[192.20880127 63.37643433]
[198.96810913 62.45749283]
[204.57884216 64.81849670]
[218.89218140 60.33206177]
[233.20553589 55.84561920]
[228.36131287 48.72903824]
[226.62707520 39.03377914]
[228.96073914 24.21642494]
[231.29438782 9.39906883]
[233.62805176 -5.41828680]
[225.38745117 -19.18316841]
[231.14604187 -34.15708160]
[246.48634338 -38.85332108]
[259.64059448 -29.66933441]
[260.51794434 -13.65029049]
[248.44540405 -3.08462811]
[246.11175537 11.73272800]
[243.77809143 26.55008316]
[241.44442749 41.36743927]
[251.53288269 52.46803665]
[266.50521851 51.55736160]
[281.47753906 50.64668655]
[296.44985962 49.73601151]
[311.42221069 48.82533646]
[326.39453125 47.91466141]
[341.36685181 47.00398636]
[356.33920288 46.09331131]
[363.08966064 37.52129745]
[373.23959351 34.16317368]
[383.34591675 36.90282059]
[390.11935425 44.59747696]
[405.11425781 44.20699310]
[420.10919189 43.81650543]
[421.65518188 35.99847794]
[425.70822144 28.56892014]
[432.14788818 22.34154701]
[440.58944702 18.08437538]
[450.40298462 16.43449211]
[460.75955200 17.82093620]
[470.70135498 22.40411758]
[484.76181030 17.17879105]
[494.79541016 4.20733213]
[511.00726318 6.67878675]
[516.71997070 22.05073547]
[506.05682373 34.50983429]
[489.98712158 31.23923111]
[475.92669678 36.46455765]
[475.73144531 43.96201706]
[490.72637939 44.35250092]
[505.72128296 44.74298859]
[520.71618652 45.13347244]
[535.71112061 45.52395630]
[550.70605469 45.91467285]
[550.31506348 60.90958023]
[535.32061768 60.51887512]
[520.32574463 60.12838745]
[505.33081055 59.73790359]
[490.33587646 59.34741974]
[475.34097290 58.95693207]
[475.14572144 66.45439148]
[488.91513062 72.40444183]
[502.68457031 78.35449219]
[517.28173828 72.29663849]
[531.85498047 78.41199493]
[537.75811768 93.07241821]
[531.48907471 107.58013916]
[516.76702881 113.32799530]
[502.32638550 106.90586853]
[496.73452759 92.12390900]
[482.96508789 86.17385864]
[469.19567871 80.22380829]
[436.15246582 81.41230011]
[420.49966431 58.81142426]
[405.50476074 59.20190811]
[390.50982666 59.59239197]
[374.83407593 70.88637543]
[357.24987793 61.06564331]
[342.27752686 61.97631836]
[327.30520630 62.88699341]
[312.33288574 63.79766846]
[297.36053467 64.70834351]
[282.38821411 65.61901855]
[267.41589355 66.52969360]
[252.44355774 67.44036865]
[237.69197083 70.15896606]
[223.37863159 74.64540863]
[209.06527710 79.13184357]
[223.66902161 82.55687714]
[236.43766785 90.42843628]
[246.05810547 101.93700409]
[251.54095459 115.89904022]
[252.32234192 130.87867737]
[248.32192993 145.33538818]
[239.95111084 157.78245544]
[228.07075500 166.93980408]
[213.90263367 171.86567688]
[198.90380859 172.05351257]
[184.61677551 167.48399353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 82]
[7 81]
[8 80]
[9 79]
[10 78]
[11 77]
[14 30]
[15 29]
[16 28]
[17 27]
[19 25]
[20 24]
[32 76]
[33 75]
[34 74]
[35 73]
[36 72]
[37 71]
[43 64]
[44 62]
[45 61]
[46 60]
[47 58]
[48 57]
[49 56]
[50 55]
[85 169]
[86 168]
[87 167]
[89 101]
[90 100]
[91 99]
[92 98]
[102 166]
[103 165]
[104 164]
[105 163]
[106 162]
[107 161]
[108 160]
[109 159]
[113 157]
[114 156]
[115 155]
[122 129]
[123 128]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
