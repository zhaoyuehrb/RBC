%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUAGAGAGAAGCGAGCUGCUCUGUCUGACCAGCAGCUUGGGAUUGGCGGAGGGAAGCGGGCCAGGCCCUGUGAGGAGUCAAGGUUCUGAGCAGACAGGCCAACCGGAGGACAGGAUUCCCUGGAGGCCACAGAGGAGCACCAAGGAGAAGAUCUGCCUGUGGGUCCCCAUUGCCCAGCUUUUGCCUGCACUCUUGCCUGCUGCCCUGACCAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[-23.58605194 575.57501221]
[-30.33910942 588.96887207]
[-37.09216309 602.36279297]
[-43.84522247 615.75665283]
[-50.59827805 629.15057373]
[-57.35133362 642.54443359]
[-64.10439301 655.93829346]
[-63.40844345 671.74420166]
[-76.04714203 679.62536621]
[-82.80020142 693.01922607]
[-89.55325317 706.41314697]
[-90.62060547 715.47668457]
[-96.49781799 719.94775391]
[-103.43972778 733.24475098]
[-100.02471161 748.92010498]
[-110.26232910 761.27209473]
[-126.29915619 760.82525635]
[-135.83311462 747.92242432]
[-131.55056763 732.46148682]
[-116.73671722 726.30285645]
[-109.79479980 713.00585938]
[-102.94714355 699.66009521]
[-96.19409180 686.26617432]
[-89.44103241 672.87231445]
[-90.62000275 658.02441406]
[-77.49827576 649.18524170]
[-70.74522400 635.79138184]
[-63.99216461 622.39746094]
[-57.23910904 609.00360107]
[-50.48605347 595.60974121]
[-43.73299789 582.21582031]
[-36.97994232 568.82196045]
[-30.72413063 539.56451416]
[-8.48017311 531.72631836]
[-4.90629482 517.15826416]
[-1.33241570 502.59027100]
[2.24146318 488.02224731]
[5.81534195 473.45422363]
[-2.09966373 460.88885498]
[1.31723058 446.06387329]
[14.55060196 437.84710693]
[10.06850433 423.64288330]
[20.87099457 412.08358765]
[24.44487190 397.51556396]
[16.52986717 384.95022583]
[19.94676208 370.12524414]
[33.18013382 361.90844727]
[36.65084457 347.31552124]
[40.01821518 332.69836426]
[43.38558578 318.08123779]
[46.75296021 303.46408081]
[38.66093445 291.01199341]
[41.86770248 276.14016724]
[54.98347473 267.73693848]
[58.35084534 253.11979675]
[61.71821594 238.50265503]
[65.08558655 223.88551331]
[68.45295715 209.26837158]
[71.82032776 194.65122986]
[75.08419037 180.01062012]
[78.24437714 165.34729004]
[81.40457153 150.68395996]
[84.56475830 136.02064514]
[67.06272125 121.23366547]
[60.81998062 99.18817139]
[67.97055817 77.42018890]
[57.59147644 66.59084320]
[47.21239090 55.76150513]
[36.83330917 44.93216324]
[26.22670746 34.32556152]
[15.39736652 23.94647789]
[4.56802464 13.56739426]
[-6.26131678 3.18831158]
[-21.83730888 3.35025859]
[-32.67194748 -7.32987547]
[-32.73035049 -22.18020058]
[-43.55969238 -32.55928421]
[-54.38903046 -42.93836594]
[-65.21837616 -53.31745148]
[-81.01179504 -52.73146439]
[-92.53678131 -63.54582214]
[-92.95575714 -79.34455872]
[-82.02014923 -90.75455475]
[-66.21787262 -91.00647736]
[-54.92412567 -79.95085144]
[-54.83929062 -64.14678955]
[-44.00994873 -53.76770782]
[-33.18060684 -43.38862610]
[-22.35126686 -33.00954437]
[-7.51184225 -33.58145905]
[3.61850381 -23.20985985]
[4.11776638 -7.64102983]
[14.94710732 2.73805308]
[25.77644920 13.11713600]
[36.60578918 23.49621964]
[40.11186600 23.79007721]
[43.65081024 25.79180336]
[46.42370224 29.49888611]
[47.66265106 34.55307770]
[58.04173279 45.38241959]
[68.42081451 56.21176147]
[78.79989624 67.04110718]
[91.31209564 61.78673935]
[104.86612701 61.11486435]
[117.83662415 65.10604858]
[127.09383392 53.30333328]
[136.35104370 41.50061798]
[138.77970886 25.86692810]
[152.72238159 20.62755775]
[161.97958374 8.82484245]
[171.23680115 -2.97787309]
[174.06719971 -11.65404892]
[180.70945740 -14.88088417]
[190.13276672 -26.55142021]
[199.55606079 -38.22195816]
[208.97937012 -49.89249420]
[211.41520691 -68.14859009]
[228.02966309 -73.80958557]
[237.28688049 -85.61230469]
[246.54408264 -97.41501617]
[255.71754456 -109.28294373]
[264.80682373 -121.21546936]
[273.89608765 -133.14799500]
[282.90069580 -145.14454651]
[291.82019043 -157.20449829]
[290.68542480 -170.04736328]
[298.35610962 -179.90713501]
[310.29272461 -181.83645630]
[319.38198853 -193.76899719]
[328.38656616 -205.76553345]
[325.79928589 -221.35661316]
[335.06219482 -234.16186523]
[350.67974854 -236.58416748]
[363.38635254 -227.18640137]
[365.64340210 -211.54411316]
[356.11181641 -198.93757629]
[340.44653320 -196.84603882]
[338.99752808 -189.60501099]
[331.31451416 -184.67973328]
[322.22525024 -172.74719238]
[320.93338013 -155.24240112]
[303.88012695 -148.28500366]
[294.96063232 -136.22505188]
[293.51162720 -128.98402405]
[285.82861328 -124.05873871]
[276.73934937 -112.12620544]
[267.65008545 -100.19367981]
[266.09875488 -92.97387695]
[258.34680176 -88.15781403]
[249.08959961 -76.35509491]
[239.83238220 -64.55238342]
[240.97306824 -52.51480484]
[233.36430359 -42.60716629]
[220.64990234 -40.46919250]
[211.22659302 -28.79865646]
[201.80329895 -17.12812042]
[192.38000488 -5.45758438]
[183.03950500 6.27933550]
[173.78230286 18.08205032]
[164.52510071 29.88476562]
[162.75857544 44.67424393]
[148.15376282 50.75782394]
[138.89654541 62.56053925]
[129.63934326 74.36325836]
[134.70999146 81.80799103]
[137.94685364 90.21384430]
[139.17892456 99.13671875]
[138.34107971 108.10520172]
[135.47761536 116.64546967]
[130.73980713 124.30632782]
[124.37794495 130.68304443]
[116.72815704 135.43870544]
[108.19458771 138.32208252]
[99.22808838 139.18083191]
[96.06789398 153.84416199]
[92.90770721 168.50749207]
[89.74752045 183.17080688]
[90.99842072 192.21086121]
[86.43746948 198.01860046]
[83.07009888 212.63574219]
[79.70272827 227.25288391]
[76.33535767 241.87002563]
[72.96798706 256.48715210]
[69.60061646 271.10430908]
[77.71780396 284.39898682]
[74.09458160 299.17489624]
[61.37009811 306.83145142]
[58.00272751 321.44860840]
[54.63535690 336.06573486]
[51.26798630 350.68289185]
[52.39084244 359.73971558]
[47.74815750 365.48233032]
[55.67640686 378.89056396]
[51.84445572 393.61370850]
[39.01289749 401.08944702]
[35.43901825 415.65747070]
[39.66548920 430.90371704]
[29.11862946 441.42098999]
[37.04687500 454.82919312]
[33.21492767 469.55233765]
[20.38336754 477.02807617]
[16.80949020 491.59609985]
[13.23561096 506.16415405]
[9.66173172 520.73217773]
[6.08785295 535.30017090]
[17.72673988 542.39154053]
[24.18181801 557.12585449]
[20.78993034 575.39019775]
[24.36380768 589.95819092]
[27.93768692 604.52624512]
[31.51156616 619.09423828]
[43.24323654 630.55285645]
[38.92399979 646.37298584]
[22.99711800 650.28021240]
[11.84680271 638.25518799]
[16.94354057 622.66815186]
[13.36966133 608.10009766]
[9.79578209 593.53210449]
[6.22190332 578.96405029]
[-1.23008573 578.11682129]
[-10.14933300 590.17694092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[9 24]
[10 23]
[11 22]
[13 21]
[14 20]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[41 198]
[43 196]
[44 195]
[47 192]
[48 190]
[49 189]
[50 188]
[51 187]
[54 184]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 177]
[61 176]
[62 175]
[63 174]
[66 102]
[67 101]
[68 100]
[69 99]
[70 95]
[71 94]
[72 93]
[73 92]
[76 89]
[77 88]
[78 87]
[79 86]
[105 164]
[106 163]
[107 162]
[109 160]
[110 159]
[111 158]
[113 157]
[114 156]
[115 155]
[116 154]
[118 151]
[119 150]
[120 149]
[121 147]
[122 146]
[123 145]
[124 143]
[125 142]
[128 140]
[129 139]
[130 137]
[208 219]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
