%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGGCGGCGGGGGCGGGGCCUGGAGGAGCCUACACCGACUCUGGAGGAAGACUGGAGCCUUUGCGGCGGCGCUGCCCCUCCCCUGGUCCCCGCGAGCUCGGAGGGCCCGGCUGGUGCUGCGGGGGCCCCGGGAGCGUGCUUCUGUUCUUCAAGGUUGAAAACUAAGC\
) } def
/len { sequence length } bind def

/coor [
[145.89231873 199.88720703]
[138.71464539 186.71598816]
[131.53697205 173.54476929]
[124.35929871 160.37355042]
[111.47517395 152.90036011]
[111.66561127 137.08030701]
[104.48793793 123.90908051]
[84.11581421 118.42494202]
[75.69065094 99.08287048]
[61.60582352 93.92363739]
[47.52099609 88.76440430]
[33.43617249 83.60517120]
[19.35134506 78.44593048]
[5.26652050 73.28669739]
[-8.81830502 68.12746429]
[-22.90312958 62.96823120]
[-38.52256775 65.48691559]
[-47.81209183 53.84414673]
[-61.89691544 48.68491364]
[-75.98174286 43.52568054]
[-81.20053864 44.44084930]
[-85.77867126 43.34728622]
[-89.05184937 40.83425903]
[-90.69069672 37.67052460]
[-104.46800232 31.73875809]
[-118.24530792 25.80698967]
[-132.02261353 19.87522125]
[-145.79991150 13.94345379]
[-161.53491211 15.59276867]
[-170.16502380 3.45314384]
[-183.94233704 -2.47862411]
[-195.82252502 3.91734791]
[-209.02317810 2.31394172]
[-218.73776245 -6.47873831]
[-221.55976868 -19.07448387]
[-237.32257080 -17.71621513]
[-245.72686768 -30.01324272]
[-259.39221191 -36.19858551]
[-273.05755615 -42.38393021]
[-282.20581055 -43.07881927]
[-286.91662598 -48.81190872]
[-300.46533203 -55.24871826]
[-316.25051880 -54.18196106]
[-324.42617798 -66.63219452]
[-337.97488403 -73.06900024]
[-351.52359009 -79.50581360]
[-365.07229614 -85.94261932]
[-378.62100220 -92.37942505]
[-392.16970825 -98.81623840]
[-404.76824951 -90.03144836]
[-420.07263184 -88.73884583]
[-433.96612549 -95.28614807]
[-442.71136475 -107.91215515]
[-443.95599365 -123.22053528]
[-437.36517334 -137.09341431]
[-424.71182251 -145.79905701]
[-409.39959717 -146.99568176]
[-395.54745483 -140.36140442]
[-386.88153076 -127.68082428]
[-385.73291016 -112.36494446]
[-372.18420410 -105.92813873]
[-358.63549805 -99.49132538]
[-345.08676147 -93.05451965]
[-331.53805542 -86.61770630]
[-317.98934937 -80.18090057]
[-303.17324829 -81.70806122]
[-294.02853394 -68.79742432]
[-280.47979736 -62.36061859]
[-266.87219238 -56.04927063]
[-253.20686340 -49.86392593]
[-239.54153442 -43.67858124]
[-224.75616455 -45.47926712]
[-215.37442017 -32.73982239]
[-199.92544556 -39.34080124]
[-184.16473389 -32.61103058]
[-178.01055908 -16.25592804]
[-164.23326111 -10.32416058]
[-149.48370361 -12.39775562]
[-139.86814880 0.16614899]
[-126.09084320 6.09791708]
[-112.31353760 12.02968502]
[-98.53623199 17.96145248]
[-84.75892639 23.89322090]
[-70.82250977 29.44085312]
[-56.73768234 34.60008621]
[-42.65285873 39.75931931]
[-28.04086113 36.87161636]
[-17.74389648 48.88340759]
[-3.65907121 54.04264069]
[10.42575455 59.20187378]
[24.51058006 64.36110687]
[38.59540558 69.52033997]
[52.68022919 74.67957306]
[66.76505280 79.83880615]
[80.84988403 84.99804688]
[89.04804993 78.27811432]
[99.32575226 75.68270111]
[109.73148346 77.70462036]
[118.28941345 83.95995331]
[132.06672668 78.02819061]
[145.84402466 72.09642029]
[159.62133789 66.16464996]
[173.39863586 60.23288345]
[180.07530212 53.94038773]
[187.48576355 54.32140732]
[201.37033081 48.64524460]
[211.21640015 36.26116943]
[225.92512512 38.60696411]
[239.80969238 32.93079758]
[253.69425964 27.25463295]
[263.54034424 14.87055969]
[278.24905396 17.21635628]
[292.13363647 11.54018974]
[296.73217773 -3.40596175]
[309.89004517 -11.85604191]
[325.39456177 -9.82018089]
[335.92489624 1.74035037]
[336.50897217 17.36702156]
[326.87103271 29.68139648]
[311.56176758 32.86900330]
[297.80978394 25.42475510]
[283.92523193 31.10091972]
[275.07226562 43.07899857]
[259.37042236 41.13919830]
[245.48585510 46.81536484]
[231.60128784 52.49153137]
[222.74833679 64.46960449]
[207.04649353 62.52980804]
[193.16192627 68.20597076]
[179.33039856 74.01018524]
[165.55310059 79.94195557]
[151.77578735 85.87372589]
[137.99848938 91.80549622]
[124.22118378 97.73725891]
[122.99315643 107.94358826]
[117.65915680 116.73140717]
[124.83683014 129.90263367]
[138.23434448 138.31791687]
[137.53051758 153.19587708]
[144.70819092 166.36709595]
[151.88586426 179.53831482]
[159.06353760 192.70953369]
[178.09231567 194.33558655]
[192.21681213 206.96701050]
[195.89149475 225.40374756]
[187.81845093 242.21588135]
[195.71493530 254.96913147]
[203.61140442 267.72238159]
[210.81875610 273.39932251]
[211.53346252 280.78509521]
[219.19293213 293.68206787]
[226.85238647 306.57907104]
[234.51185608 319.47607422]
[249.07084656 327.02380371]
[249.54339600 343.41613770]
[235.44342041 351.79006958]
[221.27574158 343.53118896]
[221.61486816 327.13552856]
[213.95539856 314.23855591]
[206.29592896 301.34155273]
[198.63645935 288.44454956]
[190.85815430 275.61886597]
[182.96166992 262.86563110]
[175.06518555 250.11236572]
[163.91854858 251.40689087]
[153.04931641 248.41680908]
[144.05145264 241.54061890]
[138.25942993 231.74960327]
[136.55036926 220.45077515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[6 137]
[7 136]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[18 86]
[19 85]
[20 84]
[24 83]
[25 82]
[26 81]
[27 80]
[28 79]
[30 77]
[31 76]
[35 73]
[37 71]
[38 70]
[39 69]
[41 68]
[42 67]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[105 129]
[106 128]
[108 126]
[109 125]
[110 124]
[112 122]
[113 121]
[146 164]
[147 163]
[148 162]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
