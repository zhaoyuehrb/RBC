%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUGCAGGGAUGGCGAUCAGGGCGGGGAGGUCGGGCCCUGGCGCGGGGCGCACGCGUGAAGCAGCACCGCACGUGUGAAAGGAAUUCUUUUCAGAGCGGCCGGGAGCCCUGCUCCGGAGGAACGCACCCGGGUCGCCGCCGCGGCAGAGCGGGGUUAGGAAUCUGAAGCA\
) } def
/len { sequence length } bind def

/coor [
[239.84590149 685.92510986]
[240.96141052 672.27508545]
[248.74456787 660.87463379]
[242.66012573 647.16406250]
[236.57566833 633.45349121]
[230.49121094 619.74291992]
[224.40675354 606.03240967]
[220.31893921 603.50048828]
[217.79751587 598.35723877]
[218.36036682 591.71173096]
[212.77777100 577.78930664]
[207.35043335 572.73315430]
[207.22273254 563.56298828]
[201.89387512 549.54150391]
[196.56500244 535.51995850]
[191.23612976 521.49841309]
[185.90727234 507.47689819]
[180.57839966 493.45538330]
[175.24952698 479.43383789]
[169.92066956 465.41232300]
[167.38232422 464.14480591]
[165.20266724 461.77746582]
[163.80990601 458.44525146]
[163.57415771 454.43792725]
[164.75468445 450.17489624]
[160.45745850 435.80361938]
[156.16024780 421.43231201]
[151.86303711 407.06103516]
[142.43278503 403.01419067]
[136.68229675 394.25048828]
[136.72502136 383.54864502]
[142.78939819 374.46496582]
[138.04682922 368.76156616]
[139.08270264 359.64923096]
[135.57440186 345.06527710]
[122.77661133 337.53189087]
[119.01094055 322.79165649]
[126.99942780 309.41921997]
[123.49112701 294.83526611]
[119.85055542 280.28375244]
[116.07801056 265.76593018]
[112.30545807 251.24807739]
[108.53291321 236.73022461]
[97.84336853 226.35800171]
[101.86118317 211.05546570]
[98.08863831 196.53761292]
[94.31608582 182.01977539]
[90.54354095 167.50192261]
[86.77099609 152.98406982]
[82.99845123 138.46623230]
[79.22590637 123.94837952]
[70.54187012 111.71778107]
[58.07929230 103.37007904]
[45.27412033 105.10020447]
[35.05848312 97.86165619]
[32.60928345 85.99279022]
[20.30034256 77.42015839]
[4.31839800 78.81908417]
[-6.63506794 67.09725952]
[-4.15749264 51.24666977]
[9.85053921 43.42652893]
[24.64326668 49.63578033]
[28.87297249 65.11121368]
[41.18191528 73.68384552]
[58.70786285 74.20755005]
[66.42699432 90.90750122]
[78.88957214 99.25520325]
[84.15155029 89.60631561]
[92.77384186 84.85379028]
[93.04621887 69.85626221]
[93.31859589 54.85873795]
[82.62799835 43.52962112]
[83.11787415 28.32387543]
[93.98433685 18.20184326]
[94.25671387 3.20431590]
[94.52909088 -11.79321098]
[85.23673248 -27.67166519]
[94.82321167 -42.35269165]
[94.82321167 -57.35269165]
[94.82321167 -72.35269165]
[94.82321167 -87.35269165]
[94.82321167 -102.35269165]
[94.82321167 -117.35269165]
[94.82321167 -132.35269165]
[86.15950775 -146.27648926]
[94.12364197 -160.61192322]
[110.52278900 -160.61192322]
[118.48691559 -146.27648926]
[109.82321167 -132.35269165]
[109.82321167 -117.35269165]
[109.82321167 -102.35269165]
[109.82321167 -87.35269165]
[109.82321167 -72.35269165]
[109.82321167 -57.35269165]
[109.82321167 -42.35269165]
[118.16301727 -33.55973053]
[118.26461792 -21.03992653]
[109.52661896 -11.52083397]
[109.25424194 3.47669339]
[108.98186493 18.47422028]
[119.47362518 28.98414993]
[119.41104126 44.19765472]
[108.31612396 55.13111496]
[108.04374695 70.12863922]
[107.77136993 85.12616730]
[118.13351440 98.13683319]
[112.46768188 115.22210693]
[93.74375153 120.17583466]
[97.51629639 134.69367981]
[101.28884125 149.21153259]
[105.06139374 163.72937012]
[108.83393860 178.24722290]
[112.60648346 192.76507568]
[116.37902832 207.28291321]
[127.33840942 218.69354248]
[123.05076599 232.95767212]
[126.82331085 247.47552490]
[130.59585571 261.99337769]
[134.36839294 276.51123047]
[139.57319641 284.06222534]
[138.07508850 291.32696533]
[141.58338928 305.91091919]
[154.77966309 314.18716431]
[158.12982178 329.02734375]
[150.15835571 341.55697632]
[153.66667175 356.14093018]
[157.30723572 370.69244385]
[172.09413147 384.35870361]
[166.23432922 402.76382446]
[170.53153992 417.13510132]
[174.82875061 431.50640869]
[179.12597656 445.87768555]
[183.94218445 460.08346558]
[189.27105713 474.10498047]
[194.59992981 488.12649536]
[199.92878723 502.14804077]
[205.25765991 516.16955566]
[210.58653259 530.19110107]
[215.91539001 544.21258545]
[221.24426270 558.23413086]
[226.70022583 572.20672607]
[232.28282166 586.12915039]
[238.11730957 599.94793701]
[244.20176697 613.65850830]
[250.28622437 627.36901855]
[256.37066650 641.07958984]
[262.45513916 654.79016113]
[279.02691650 658.09100342]
[290.26422119 670.48699951]
[291.89538574 686.97186279]
[283.47573853 701.04492188]
[289.80816650 714.64276123]
[306.82000732 725.41381836]
[304.38049316 744.57458496]
[311.20248413 757.93347168]
[318.02447510 771.29235840]
[324.84646606 784.65130615]
[331.66845703 798.01019287]
[344.25692749 809.36657715]
[336.82919312 824.60681152]
[320.12835693 821.68829346]
[318.30953979 804.83215332]
[311.48757935 791.47326660]
[304.66558838 778.11437988]
[297.84359741 764.75543213]
[291.02160645 751.39654541]
[281.01556396 749.11932373]
[273.77691650 741.53826904]
[271.88619995 731.00463867]
[276.21035767 720.97515869]
[269.87792969 707.37731934]
[256.57409668 706.04425049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[10 142]
[11 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[25 132]
[26 131]
[27 130]
[28 129]
[32 127]
[34 126]
[35 125]
[38 122]
[39 121]
[40 119]
[41 118]
[42 117]
[43 116]
[45 114]
[46 113]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[52 67]
[53 66]
[56 64]
[57 63]
[69 105]
[70 104]
[71 103]
[74 100]
[75 99]
[76 98]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[151 171]
[152 170]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
