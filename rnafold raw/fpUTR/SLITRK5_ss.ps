%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGAACCCGCGGUCGCCACCGCGGCGGCGGCCCCAGGCUGGAGGCGUCCGGGCGCCUCUUUCCUCCAGCCUCUGGGACUGCGCUGCUCGCAGUCUCCUCGCCCUGCCUGGGCUUGAGAAACCUAGUGCAUACCCCAAAGAGGGUUUUUGUGUAUGUGUGUGUUUUUAAAGGGUGGCUAUGAUGACUGGGCCUUGGAGAUGUGAGACUGGGAGGUAAA\
) } def
/len { sequence length } bind def

/coor [
[107.64848328 206.19577026]
[106.15158081 191.27066040]
[104.65468597 176.34553528]
[103.15778351 161.42041016]
[101.66088104 146.49528503]
[94.32108307 144.95341492]
[79.64148712 141.86965942]
[72.30168915 140.32778931]
[65.01914215 153.44131470]
[57.83040619 166.60650635]
[50.64167404 179.77168274]
[43.45293808 192.93687439]
[36.26420212 206.10205078]
[29.07546806 219.26724243]
[21.88673401 232.43241882]
[22.81771469 248.80513000]
[8.95752335 257.57022095]
[-5.43566322 249.71095276]
[-5.55536938 233.31224060]
[8.72154903 225.24368286]
[15.91028404 212.07850647]
[23.09901810 198.91331482]
[30.28775406 185.74813843]
[37.47648621 172.58294678]
[44.66522217 159.41777039]
[51.85395813 146.25257874]
[52.30042648 138.88044739]
[59.24050140 132.95179749]
[51.86450577 119.89060974]
[36.87062454 119.46226501]
[21.87674141 119.03392792]
[6.88285875 118.60558319]
[-8.11369991 118.28430939]
[-23.11217117 118.07012177]
[-38.11064148 117.85592651]
[-53.97902679 127.20413208]
[-68.68607330 117.62452698]
[-83.68607330 117.62452698]
[-98.68607330 117.62452698]
[-113.68607330 117.62452698]
[-128.68608093 117.62452698]
[-143.68608093 117.62452698]
[-158.68608093 117.62452698]
[-173.68608093 117.62452698]
[-188.66734314 118.37390900]
[-203.59246826 119.87081146]
[-218.51759338 121.36771393]
[-233.44271851 122.86461639]
[-248.36782837 124.36151123]
[-261.35754395 134.37147522]
[-276.41619873 127.87767792]
[-278.05273438 111.56039429]
[-264.58361816 102.20543671]
[-249.86473083 109.43639374]
[-234.93960571 107.93949127]
[-220.01449585 106.44258881]
[-205.08937073 104.94568634]
[-190.16424561 103.44879150]
[-201.86289978 94.06042480]
[-204.90797424 79.37275696]
[-197.90594482 66.10733032]
[-184.06115723 60.33481979]
[-169.70942688 64.69690704]
[-161.41856384 77.19736481]
[-162.98271179 92.11559296]
[-173.68608093 102.62452698]
[-158.68608093 102.62452698]
[-143.68608093 102.62452698]
[-128.68608093 102.62452698]
[-113.68607330 102.62452698]
[-98.68607330 102.62452698]
[-83.68607330 102.62452698]
[-68.68607330 102.62452698]
[-59.91749954 94.29759216]
[-47.42505264 94.17089844]
[-37.89645004 102.85745239]
[-22.89797783 103.07164764]
[-7.89950800 103.28584290]
[-1.17099559 100.24037933]
[7.31119967 103.61170197]
[22.30508232 104.04004669]
[37.29896545 104.46838379]
[52.29284668 104.89672089]
[59.11102676 83.09239197]
[74.37510681 68.59126282]
[93.04680634 63.83773422]
[109.92528534 68.40884399]
[121.06726837 79.48946381]
[134.12846375 72.11347198]
[147.18965149 64.73747253]
[160.25083923 57.36148071]
[173.31202698 49.98548889]
[186.37322998 42.60949326]
[192.30186462 35.66941833]
[199.67401123 35.22294998]
[212.83918762 28.03421593]
[226.00437927 20.84547997]
[239.16955566 13.65674591]
[252.33474731 6.46801090]
[250.01060486 -17.16893196]
[265.70886230 -39.02122498]
[294.97894287 -45.92119980]
[294.12261963 -60.89673615]
[293.26626587 -75.87227631]
[292.40994263 -90.84780884]
[281.44189453 -102.55597687]
[283.89968872 -118.40963745]
[297.89797974 -126.24722290]
[312.69842529 -120.05641174]
[316.94741821 -104.58625793]
[307.38546753 -91.70413971]
[308.24182129 -76.72860718]
[309.09814453 -61.75306702]
[309.95446777 -46.77753067]
[323.55410767 -40.44904327]
[335.56222534 -49.43820953]
[347.57034302 -58.42737579]
[359.57846069 -67.41654205]
[371.58657837 -76.40570831]
[383.59469604 -85.39486694]
[395.60281372 -94.38403320]
[407.54644775 -103.45870972]
[419.42498779 -112.61842346]
[431.23782349 -121.86272430]
[433.18093872 -137.31788635]
[445.22647095 -146.61088562]
[459.94863892 -144.66316223]
[471.69515991 -153.99157715]
[483.44168091 -163.31997681]
[495.18820190 -172.64837646]
[506.93475342 -181.97677612]
[518.68127441 -191.30519104]
[530.15661621 -200.96522522]
[541.35144043 -210.94900513]
[552.54626465 -220.93278503]
[563.74108887 -230.91658020]
[564.39300537 -246.70741272]
[576.07623291 -257.35064697]
[591.85925293 -256.53182983]
[602.37835693 -244.73674011]
[601.39270020 -228.96321106]
[589.48712158 -218.56939697]
[573.72485352 -219.72175598]
[562.53002930 -209.73797607]
[551.33520508 -199.75418091]
[540.14038086 -189.77040100]
[539.84289551 -186.98933411]
[538.42950439 -184.15808105]
[535.87548828 -181.70089722]
[532.30957031 -180.04322815]
[528.00964355 -179.55865479]
[516.26312256 -170.23025513]
[504.51663208 -160.90185547]
[492.77008057 -151.57345581]
[481.02355957 -142.24504089]
[469.27703857 -132.91664124]
[467.83959961 -118.13593292]
[456.05984497 -108.50827026]
[440.56622314 -110.11619568]
[437.28521729 -103.49934387]
[428.58471680 -100.73989105]
[416.70617676 -91.58017731]
[413.33102417 -85.01084900]
[404.59197998 -82.37591553]
[392.58386230 -73.38674927]
[380.57574463 -64.39758301]
[368.56762695 -55.40842056]
[356.55950928 -46.41925812]
[344.55139160 -37.43009186]
[332.54327393 -28.44092560]
[332.86447144 -20.94780731]
[346.91873169 -26.18974686]
[356.24710083 -14.44319057]
[347.95806885 -1.94151545]
[333.50689697 -5.96156979]
[333.82809448 1.53154910]
[346.56140137 9.46014500]
[359.29470825 17.38874054]
[372.02804565 25.31733513]
[385.53970337 18.01457787]
[400.89208984 18.46208191]
[413.95544434 26.53946877]
[421.21582031 40.07396698]
[420.72018433 55.42486191]
[412.60189819 68.46283722]
[399.04470825 75.68074799]
[383.69543457 75.13700867]
[370.68298340 66.97788239]
[363.50759888 53.39813614]
[364.09945679 38.05065155]
[351.36611938 30.12205696]
[338.63281250 22.19346237]
[325.89947510 14.26486683]
[303.84307861 33.69598389]
[277.54556274 34.28085709]
[259.52346802 19.63319588]
[246.35829163 26.82192993]
[233.19311523 34.01066589]
[220.02792358 41.19939804]
[206.86274719 48.38813400]
[193.74922180 55.67068481]
[180.68803406 63.04668045]
[167.62683105 70.42267609]
[154.56564331 77.79866791]
[141.50445557 85.17465973]
[128.44326782 92.55065155]
[134.29565430 117.88755798]
[116.58600616 144.99838257]
[118.08290863 159.92350769]
[119.57980347 174.84863281]
[121.07670593 189.77375793]
[122.57360840 204.69888306]
[136.04208374 212.40469360]
[142.37823486 226.56918335]
[139.14567566 241.74581909]
[127.58737946 252.09886169]
[112.14775848 253.64736938]
[98.76366425 245.79589844]
[92.58155060 231.56349182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[3 210]
[4 209]
[5 208]
[8 28]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[29 83]
[30 82]
[31 81]
[32 80]
[33 78]
[34 77]
[35 76]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[88 206]
[89 205]
[90 204]
[91 203]
[92 202]
[93 201]
[95 200]
[96 199]
[97 198]
[98 197]
[99 196]
[102 114]
[103 113]
[104 112]
[105 111]
[115 170]
[116 169]
[117 168]
[118 167]
[119 166]
[120 165]
[121 164]
[122 162]
[123 161]
[124 159]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 146]
[134 145]
[135 144]
[136 143]
[176 193]
[177 192]
[178 191]
[179 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
