%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUUCCUCUUCGCCCGGGUGGCGUUGGGCCCGCGCGGGCGCUCGGGUGACUGCAGCUGCUCAGCUCCCCUCCCCCGCCCCGCGCCGCGCGGCCGCCCGUCGCUUCGCACAGGGCUGGAUGGUUGUAUUGGGCAGGGUGGCUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[185.97836304 341.56079102]
[186.31318665 332.15548706]
[191.04226685 323.85913086]
[185.19262695 310.04675293]
[171.33377075 304.71127319]
[165.20463562 290.78689575]
[170.89495850 276.28662109]
[165.04530334 262.47424316]
[159.05038452 248.72430420]
[152.91082764 235.03833008]
[146.77128601 221.35234070]
[135.54672241 216.73036194]
[130.33853149 205.32235718]
[134.45326233 193.05148315]
[128.60362244 179.23910522]
[122.75397491 165.42672729]
[116.90432739 151.61434937]
[110.62084198 137.99386597]
[98.00690460 130.07313538]
[98.75238800 114.26950836]
[87.18962860 106.40857697]
[87.83262634 92.44153595]
[81.12158203 79.02655029]
[74.41053772 65.61156464]
[67.69949341 52.19657516]
[54.60553741 43.31632233]
[55.83103561 28.47221947]
[49.11999130 15.05723095]
[42.40894699 1.64224386]
[35.69790268 -11.77274323]
[28.98685837 -25.18773079]
[21.99447823 -38.45824814]
[14.72387123 -51.57839584]
[7.45326376 -64.69853973]
[0.18265647 -77.81868744]
[-7.08795118 -90.93883514]
[-14.35855865 -104.05898285]
[-21.62916565 -117.17913055]
[-28.89977264 -130.29928589]
[-36.30828857 -143.34205627]
[-43.85389328 -156.30599976]
[-51.39949799 -169.26994324]
[-68.36463165 -173.40156555]
[-76.95327759 -188.21609497]
[-72.29559326 -204.34425354]
[-80.11283875 -217.14624023]
[-87.93008423 -229.94821167]
[-95.74732971 -242.75019836]
[-109.54280090 -250.49588013]
[-109.57209778 -265.39044189]
[-117.38933563 -278.19244385]
[-132.48948669 -282.01647949]
[-140.23490906 -295.11087036]
[-136.49621582 -309.48297119]
[-150.29168701 -317.22866821]
[-150.32098389 -332.12322998]
[-158.13822937 -344.92520142]
[-165.95547485 -357.72720337]
[-173.77272034 -370.52917480]
[-188.42326355 -377.89758301]
[-189.09706116 -394.28286743]
[-175.10096741 -402.82928467]
[-160.83294678 -394.74499512]
[-160.97073364 -378.34640503]
[-153.15348816 -365.54443359]
[-145.33624268 -352.74246216]
[-137.51899719 -339.94049072]
[-124.28266907 -333.11047363]
[-123.69423676 -317.30023193]
[-109.20142365 -314.06076050]
[-101.09125519 -301.18911743]
[-104.58735657 -286.00967407]
[-96.77011108 -273.20770264]
[-83.53378296 -266.37771606]
[-82.94535065 -250.56744385]
[-75.12810516 -237.76545715]
[-67.31085968 -224.96348572]
[-59.49361420 -212.16149902]
[-46.63057327 -210.90269470]
[-36.70695877 -202.32115173]
[-33.51160812 -189.39575195]
[-38.43555069 -176.81553650]
[-30.88994789 -163.85159302]
[-23.34434509 -150.88764954]
[-17.21986198 -146.66027832]
[-15.77962589 -137.56988525]
[-8.50901890 -124.44973755]
[-1.23841119 -111.32958984]
[6.03219652 -98.20944214]
[13.30280399 -85.08929443]
[20.57341194 -71.96914673]
[27.84401894 -58.84900284]
[35.11462784 -45.72885513]
[39.43967819 -43.56172180]
[42.41537094 -38.61994171]
[42.40184784 -31.89877510]
[49.11289215 -18.48378754]
[55.82393646 -5.06880045]
[62.53498077 8.34618664]
[69.24602509 21.76117516]
[81.85996246 29.68189621]
[81.11447906 45.48553085]
[87.82552338 58.90051651]
[94.53656769 72.31550598]
[101.24761200 85.73049164]
[112.81037140 93.59142303]
[112.16737366 107.55846405]
[125.26132965 116.43871307]
[124.03583527 131.28282166]
[128.51100159 134.22537231]
[131.10556030 138.20893860]
[131.74043274 142.32373047]
[130.71670532 145.76470947]
[136.56634521 159.57708740]
[142.41598511 173.38946533]
[148.26564026 187.20182800]
[163.20767212 197.90992737]
[160.45726013 215.21279907]
[166.59680176 228.89877319]
[172.73635864 242.58474731]
[179.14732361 249.18846130]
[178.85768127 256.62460327]
[184.70732117 270.43698120]
[199.08096313 276.44000244]
[204.81655884 290.53106689]
[199.00500488 304.19711304]
[204.85464478 318.00949097]
[222.73687744 329.73709106]
[219.60401917 350.09976196]
[226.31506348 363.51477051]
[233.02610779 376.92974854]
[239.73715210 390.34472656]
[246.58924866 403.68823242]
[253.58163452 416.95874023]
[268.75018311 421.39608765]
[276.26492310 435.29949951]
[271.66744995 450.42028809]
[257.68536377 457.78759766]
[242.61401367 453.03051758]
[235.39494324 438.97134399]
[240.31111145 423.95111084]
[233.31872559 410.68060303]
[227.37789917 406.19879150]
[226.32217407 397.05578613]
[219.61112976 383.64077759]
[212.90008545 370.22579956]
[206.18904114 356.81082153]
[197.30572510 355.38812256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 127]
[4 126]
[7 123]
[8 122]
[9 120]
[10 119]
[11 118]
[14 116]
[15 115]
[16 114]
[17 113]
[18 109]
[20 107]
[22 105]
[23 104]
[24 103]
[25 102]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 84]
[41 83]
[42 82]
[45 78]
[46 77]
[47 76]
[48 75]
[50 73]
[51 72]
[54 69]
[56 67]
[57 66]
[58 65]
[59 64]
[129 147]
[130 146]
[131 145]
[132 144]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
