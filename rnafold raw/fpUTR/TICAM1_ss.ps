%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCAGGGCGCGGGCCGCGGGGUGGAGCCAGCGCCCUCAGCGCGCUACGGUCCGCGGGCAACUCCGCAGAAGCCCCAGCCCCCAGGACCCCAGGACCCAGUGGCGCAGCCGGCAGCCCCGGAUCCCUGAUCUGCUUGGGCAGCUCCUGCAGAACCUGGAACAGUGAAUGGGUAGGGGACACUGGGCGUGCAGAAGGCGGGGGGCAGUGUGGAACAUGCCUUCACCACCUCCAGCUUCUGCUGCCGGAGGCUGCA\
CCCACCUGUGCCC\
) } def
/len { sequence length } bind def

/coor [
[44.50926971 377.10339355]
[35.82586288 390.10848999]
[20.80007362 394.43972778]
[6.52662134 388.05206299]
[-0.25500771 373.96151733]
[3.65726542 358.82122803]
[16.41618538 349.77999878]
[17.46641541 334.81680298]
[18.51664543 319.85360718]
[19.56687737 304.89041138]
[20.61710739 289.92724609]
[21.66733742 274.96405029]
[22.71756744 260.00085449]
[23.76779938 245.03767395]
[24.81802940 230.07447815]
[11.42520714 223.31930542]
[0.01627390 233.05769348]
[-11.39265919 242.79608154]
[-22.80159187 252.53448486]
[-34.21052551 262.27285767]
[-45.61946106 272.01126099]
[-57.02839279 281.74963379]
[-62.50148392 296.59402466]
[-77.20504761 298.97195435]
[-88.61398315 308.71035767]
[-94.08707428 323.55471802]
[-108.79064178 325.93264771]
[-120.19956970 335.67105103]
[-131.60850525 345.40942383]
[-134.15170288 351.45098877]
[-138.67388916 354.81976318]
[-143.39950562 355.23825073]
[-155.03277588 364.70751953]
[-166.66603088 374.17678833]
[-178.29930115 383.64605713]
[-181.35966492 399.39453125]
[-195.64653015 406.69281006]
[-210.20024109 399.94232178]
[-213.85643005 384.32144165]
[-203.81039429 371.81317139]
[-187.76856995 372.01281738]
[-176.13531494 362.54351807]
[-164.50204468 353.07424927]
[-152.86877441 343.60498047]
[-141.34689331 334.00048828]
[-129.93795776 324.26211548]
[-118.52902985 314.52371216]
[-113.87197876 300.37588501]
[-98.35237122 297.30142212]
[-86.94343567 287.56301880]
[-82.28639221 273.41519165]
[-66.76678467 270.34072876]
[-55.35784912 260.60232544]
[-43.94891739 250.86393738]
[-32.53998184 241.12554932]
[-21.13105011 231.38716125]
[-9.72211647 221.64875793]
[1.68681705 211.91036987]
[33.19483948 202.20372009]
[40.56805801 189.14096069]
[47.94128036 176.07820129]
[46.84071732 158.54885864]
[62.81087112 149.34936523]
[70.03103638 136.20138550]
[77.25119781 123.05341339]
[84.47136688 109.90544128]
[84.06653595 97.28570557]
[91.41278076 89.06076050]
[88.45422363 74.35542297]
[85.49565887 59.65008926]
[71.54714203 53.11212158]
[64.20874023 39.77040863]
[66.11106110 24.84240913]
[76.31665802 14.02650356]
[73.35809326 -0.67883217]
[70.39952850 -15.38416767]
[67.44097137 -30.08950424]
[57.13375092 -42.09249496]
[62.20875931 -56.09583664]
[59.25019836 -70.80117035]
[56.29163361 -85.50650787]
[53.33306885 -100.21184540]
[49.52133560 -114.71945190]
[44.86942291 -128.97987366]
[40.21751022 -143.24029541]
[35.56559753 -157.50073242]
[30.91368675 -171.76115417]
[14.68691540 -175.02185059]
[2.39604616 -185.96586609]
[-2.65965104 -201.52835083]
[0.81262970 -217.42257690]
[11.77024364 -229.32060242]
[6.95210791 -243.52572632]
[2.13397193 -257.73086548]
[-2.68416405 -271.93597412]
[-7.50229979 -286.14111328]
[-12.65088844 -300.22982788]
[-18.12712097 -314.19445801]
[-23.60335350 -328.15908813]
[-29.07958603 -342.12371826]
[-34.63726807 -356.05612183]
[-40.27621460 -369.95584106]
[-45.91516113 -383.85556030]
[-51.55410385 -397.75527954]
[-65.83479309 -403.97619629]
[-71.35548401 -418.15283203]
[-65.33679199 -431.72894287]
[-70.97573853 -445.62866211]
[-76.61468506 -459.52838135]
[-82.57672119 -473.29260254]
[-88.85861206 -486.91384888]
[-95.14049530 -500.53506470]
[-101.42237854 -514.15631104]
[-115.91658783 -521.03363037]
[-119.43624878 -536.68585205]
[-109.28137970 -549.10589600]
[-93.24192047 -548.76623535]
[-83.62197876 -535.92736816]
[-87.80114746 -520.43817139]
[-81.51926422 -506.81695557]
[-75.23738098 -493.19573975]
[-68.95549011 -479.57449341]
[-66.41318512 -478.47448730]
[-64.14542389 -476.31881714]
[-62.55007172 -473.20422363]
[-61.98369598 -469.36752319]
[-62.71495819 -465.16732788]
[-57.07601547 -451.26760864]
[-51.43706894 -437.36788940]
[-37.66093445 -431.82226562]
[-31.74423599 -417.80630493]
[-37.65438080 -403.39422607]
[-32.01543808 -389.49450684]
[-26.37649155 -375.59478760]
[-20.73754692 -361.69506836]
[-15.33002186 -356.69595337]
[-15.11495686 -347.59994507]
[-9.63872433 -333.63531494]
[-4.16249132 -319.67068481]
[1.31374097 -305.70605469]
[3.78752208 -304.45956421]
[5.92560768 -302.17517090]
[7.33647060 -298.97280884]
[7.67796850 -295.10958862]
[6.70282459 -290.95922852]
[11.52096081 -276.75411987]
[16.33909607 -262.54898071]
[21.15723228 -248.34385681]
[25.97536850 -234.13873291]
[39.49801254 -232.36566162]
[50.99675751 -224.90968323]
[58.20207214 -213.17459106]
[59.66274643 -199.41523743]
[55.03784943 -186.30426025]
[45.17411041 -176.41305542]
[49.82602310 -162.15263367]
[54.47793579 -147.89221191]
[59.12984848 -133.63179016]
[63.78176117 -119.37136078]
[68.10798645 -133.73394775]
[78.98253632 -144.06565857]
[93.54765320 -147.65138245]
[107.97571564 -143.54882812]
[118.47512817 -132.83610535]
[122.28672028 -118.32846069]
[118.40882111 -103.83839417]
[107.86052704 -93.17381287]
[93.41384888 -89.13727570]
[78.86528778 -92.78958130]
[68.03840637 -103.17041016]
[70.99697113 -88.46507263]
[73.95553589 -73.75973511]
[76.91409302 -59.05439758]
[87.00969696 -48.10322952]
[82.14630127 -33.04806900]
[85.10486603 -18.34273148]
[88.06343079 -3.63739538]
[91.02199554 11.06794071]
[104.61633301 17.09554100]
[112.14368439 30.12638855]
[110.53584290 45.26799393]
[100.20099640 56.69152832]
[103.15955353 71.39686584]
[106.11811829 86.10219574]
[116.12031555 97.28057861]
[130.40765381 101.84913635]
[144.69500732 106.41770172]
[158.98234558 110.98625946]
[168.07341003 110.61701965]
[173.40931702 115.69250488]
[187.64233398 120.42760468]
[201.87535095 125.16271210]
[216.10836792 129.89781189]
[230.34138489 134.63291931]
[244.57440186 139.36802673]
[258.80743408 144.10313416]
[272.81042480 137.28007507]
[287.17724609 142.28489685]
[293.59570312 155.67665100]
[307.82873535 160.41175842]
[322.06173706 165.14686584]
[336.29476929 169.88197327]
[350.52777100 174.61708069]
[361.77725220 167.24835205]
[375.02365112 167.68635559]
[385.45129395 175.54815674]
[389.39794922 187.79270935]
[403.57467651 192.69371033]
[417.75143433 197.59471130]
[435.76467896 193.69604492]
[446.71368408 207.42951965]
[460.94671631 212.16462708]
[474.96435547 204.86524963]
[490.01245117 209.69541931]
[497.16320801 223.78947449]
[492.17422485 238.78565979]
[478.00534058 245.78700256]
[463.06274414 240.63973999]
[456.21160889 226.39764404]
[441.97857666 221.66253662]
[431.04803467 226.79261780]
[419.16650391 222.99101257]
[412.85043335 211.77145386]
[398.67367554 206.87045288]
[384.49694824 201.96945190]
[369.68130493 209.96107483]
[353.35345459 204.64372253]
[345.79266357 188.85009766]
[331.55966187 184.11499023]
[317.32662964 179.37988281]
[303.09362793 174.64477539]
[288.86059570 169.90966797]
[275.69882202 176.78738403]
[261.19705200 172.18807983]
[254.07231140 158.33615112]
[239.83929443 153.60104370]
[225.60627747 148.86593628]
[211.37326050 144.13082886]
[197.14024353 139.39572144]
[182.90722656 134.66062927]
[168.67420959 129.92552185]
[154.41378784 125.27360535]
[140.12644958 120.70504761]
[125.83909607 116.13648224]
[111.55175018 111.56792450]
[97.61933899 117.12560272]
[90.39917755 130.27357483]
[83.17900848 143.42155457]
[75.95884705 156.56953430]
[78.80667114 169.12585449]
[72.55014038 179.91838074]
[61.00403595 183.45141602]
[53.63081741 196.51417542]
[46.25759506 209.57693481]
[60.91674805 206.39743042]
[73.15137482 215.07579041]
[74.99606323 229.96192932]
[65.24982452 241.36415100]
[50.25798798 241.85900879]
[39.78121948 231.12471008]
[38.73098755 246.08789062]
[37.68075562 261.05108643]
[36.63052750 276.01428223]
[35.58029556 290.97747803]
[34.53006363 305.94064331]
[33.47983551 320.90383911]
[32.42960358 335.86703491]
[31.37937355 350.83023071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 268]
[8 267]
[9 266]
[10 265]
[11 264]
[12 263]
[13 262]
[14 261]
[15 260]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[24 50]
[25 49]
[27 47]
[28 46]
[29 45]
[32 44]
[33 43]
[34 42]
[35 41]
[59 254]
[60 253]
[61 252]
[63 249]
[64 248]
[65 247]
[66 246]
[68 184]
[69 183]
[70 182]
[74 178]
[75 177]
[76 176]
[77 175]
[79 173]
[80 172]
[81 171]
[82 170]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[92 149]
[93 148]
[94 147]
[95 146]
[96 145]
[97 140]
[98 139]
[99 138]
[100 137]
[101 135]
[102 134]
[103 133]
[104 132]
[107 129]
[108 128]
[109 127]
[110 122]
[111 121]
[112 120]
[113 119]
[185 245]
[186 244]
[187 243]
[188 242]
[190 241]
[191 240]
[192 239]
[193 238]
[194 237]
[195 236]
[196 235]
[199 232]
[200 231]
[201 230]
[202 229]
[203 228]
[207 225]
[208 224]
[209 223]
[211 220]
[212 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
