%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCGCAGCCCCGCGCGUCCGGCCGCCGCCCGCGCCCAUCCAGCAGCCUCGCCGGAGCCACACCGCGGGACAGACGCGGCCGCGGCGCGUCCCGGCCCGGUCCAGCCCAGCCCAGCCCAGUCCCGGCACCGGGCGGCCCGGCGGCCGGCCCGCCCCCGAGGGCGCCGGGCGCGGCGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[100.83425903 289.51199341]
[92.45548248 277.19757080]
[99.47607422 263.01934814]
[98.70808411 248.03903198]
[97.94009399 233.05870056]
[97.17211151 218.07836914]
[96.40412140 203.09803772]
[95.63613129 188.11772156]
[92.14533997 181.58300781]
[94.98513031 172.87550354]
[94.47300720 157.88424683]
[93.96089172 142.89300537]
[93.44877625 127.90174103]
[77.61410522 117.89685822]
[71.34054565 100.24815369]
[56.82979965 96.44838715]
[42.31905365 92.64862823]
[27.80830383 88.84886169]
[13.29755688 85.04910278]
[-1.21319127 81.24933624]
[-15.72393894 77.44957733]
[-30.26659584 73.77382660]
[-44.84010315 70.22235870]
[-59.41360855 66.67089844]
[-73.98711395 63.11943054]
[-88.56062317 59.56796265]
[-103.13412476 56.01649475]
[-117.70763397 52.46503067]
[-134.88728333 64.55113220]
[-155.12503052 60.14181900]
[-165.42446899 42.50955963]
[-180.20635986 39.96090317]
[-194.98825073 37.41224670]
[-209.77014160 34.86359406]
[-224.55203247 32.31493759]
[-239.33392334 29.76628113]
[-250.62924194 44.33482361]
[-267.66915894 51.14257431]
[-285.72570801 48.39319611]
[-299.83547974 36.92938614]
[-306.16412354 19.97725677]
[-321.05712891 18.18876648]
[-335.95010376 16.40027428]
[-350.57437134 22.43694687]
[-362.28833008 13.23733330]
[-377.18130493 11.44884109]
[-389.45300293 21.40783882]
[-405.16357422 19.68945503]
[-414.99227905 7.31317759]
[-413.10787964 -8.37836838]
[-400.62838745 -18.07566643]
[-384.95764160 -16.02548218]
[-375.39282227 -3.44415355]
[-360.49984741 -1.65566182]
[-346.94082642 -7.82025862]
[-334.16162109 1.50727904]
[-319.26864624 3.29577065]
[-304.37564087 5.08426237]
[-298.67630005 -5.26590443]
[-289.78796387 -13.10337925]
[-278.74142456 -17.48799706]
[-266.82833862 -17.88183975]
[-255.45031738 -14.21512985]
[-245.95391846 -6.89718914]
[-239.47128296 3.22911096]
[-236.78527832 14.98438835]
[-222.00337219 17.53304482]
[-207.22148132 20.08169937]
[-192.43959045 22.63035583]
[-177.65769958 25.17901230]
[-162.87580872 27.72766685]
[-157.23094177 20.20168114]
[-149.17636108 15.22940922]
[-139.80456543 13.53509426]
[-130.40507507 15.39494896]
[-122.28701019 20.59315681]
[-116.59675598 28.44599724]
[-114.15616608 37.89152527]
[-99.58266449 41.44298935]
[-85.00915527 44.99445724]
[-70.43564606 48.54592133]
[-55.86214066 52.09738922]
[-41.28863525 55.64885330]
[-26.71512985 59.20032120]
[-19.45470047 57.72576523]
[-11.92417622 62.93882751]
[2.58657146 66.73859406]
[17.09731865 70.53835297]
[31.60806656 74.33811951]
[46.11881638 78.13787842]
[60.62956238 81.93764496]
[75.14031219 85.73740387]
[85.14691162 73.69574738]
[100.69401550 68.25196075]
[117.62654114 71.74390411]
[130.95797729 83.99447632]
[144.27626038 77.09349823]
[157.59452820 70.19252014]
[170.91281128 63.29154587]
[177.11097717 56.54858398]
[184.51791382 56.38863754]
[197.95207214 49.71605301]
[204.26445007 43.07989502]
[211.67303467 43.04643250]
[225.21914673 36.60417938]
[231.64392090 30.07675934]
[239.05198669 30.16978836]
[252.70611572 23.95974922]
[266.36026001 17.74971008]
[271.98410034 3.22352147]
[285.91979980 -2.87983298]
[299.73364258 2.57115841]
[313.38778687 -3.63888073]
[327.04190063 -9.84891987]
[331.21365356 -15.02769089]
[336.57299805 -17.00685501]
[341.26986694 -16.02899361]
[355.12805176 -21.76924515]
[368.98626709 -27.50949669]
[382.84445190 -33.24974823]
[392.63320923 -45.67918015]
[407.35260010 -43.40136337]
[421.21081543 -49.14161301]
[427.02651978 -63.83694839]
[441.56301880 -70.03902435]
[456.19604492 -64.06826019]
[462.24407959 -49.46699905]
[456.11895752 -34.89791489]
[441.45455933 -29.00458717]
[426.95104980 -35.28342056]
[413.09286499 -29.54316902]
[404.29531860 -17.52431870]
[388.58468628 -19.39155579]
[374.72650146 -13.65130424]
[360.86831665 -7.91105223]
[347.01013184 -2.17080092]
[333.25195312 3.80521560]
[319.59780884 10.01525497]
[305.94369507 16.22529411]
[300.97366333 30.21937943]
[287.21487427 36.71175003]
[272.57031250 31.40384674]
[258.91616821 37.61388397]
[245.26202393 43.82392502]
[231.66140747 50.15029907]
[218.11528015 56.59255219]
[204.62464905 63.15021133]
[191.19049072 69.82279968]
[177.81378174 76.60982513]
[164.49551392 83.51080322]
[151.17723083 90.41177368]
[137.85894775 97.31275177]
[135.94338989 112.18993378]
[147.07913208 122.23957825]
[158.21487427 132.28921509]
[169.35061646 142.33885193]
[180.48634338 152.38850403]
[196.62760925 155.28532410]
[201.93421936 170.80215454]
[190.94717407 182.97660828]
[174.96902466 179.28463745]
[170.43670654 163.52424622]
[159.30096436 153.47459412]
[148.16522217 143.42495728]
[137.02947998 133.37532043]
[125.89374542 123.32567596]
[120.05034637 125.94210052]
[114.14546204 127.27390289]
[108.44003296 127.38962555]
[108.95214844 142.38087463]
[109.46426392 157.37213135]
[109.97637939 172.36338806]
[110.61645508 187.34973145]
[111.38444519 202.33006287]
[112.15243530 217.31037903]
[112.92042542 232.29071045]
[113.68841553 247.27104187]
[114.45639801 262.25137329]
[122.89011383 275.63729858]
[115.81458282 288.74401855]
[125.17980957 302.20599365]
[117.96009064 316.93035889]
[101.58245087 317.76998901]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[10 172]
[11 171]
[12 170]
[13 169]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[22 84]
[23 83]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[41 58]
[42 57]
[43 56]
[45 54]
[46 53]
[96 152]
[97 151]
[98 150]
[99 149]
[101 148]
[102 147]
[104 146]
[105 145]
[107 144]
[108 143]
[109 142]
[112 139]
[113 138]
[114 137]
[117 136]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
