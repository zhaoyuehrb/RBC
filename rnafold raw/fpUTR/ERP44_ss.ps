%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGGACCCGGAAGUGAGGGUGUGAGAGGCCUCUCUGGAAGUUGUCCCGGGUGUUCGCCGCUGGAGCCCGGGUCGAGAGGACGAGGUGCCGCUGCCUGGAGAAUCCUCCGCUGCCGUCGGCUCCCGGAGCCCAGCCCUUUCCUAACCCAACCCAACCUAGCCCAGUCCCAGCCGCCAGCGCCUGUCCCUGUCACGGACCCCAGCGUUACC\
) } def
/len { sequence length } bind def

/coor [
[352.64181519 411.57263184]
[343.05661011 400.03472900]
[333.47140503 388.49679565]
[323.88619995 376.95886230]
[314.21615601 365.49191284]
[304.46182251 354.09661865]
[294.70751953 342.70132446]
[283.41354370 344.30514526]
[272.63601685 340.21621704]
[265.09283447 331.34197998]
[262.74557495 319.81164551]
[266.29058838 308.46588135]
[256.87658691 296.78784180]
[252.30931091 295.39651489]
[248.56697083 291.12216187]
[247.36328125 284.62368774]
[238.29780579 272.67306519]
[226.36123657 270.71817017]
[218.71072388 260.83743286]
[219.87828064 247.99320984]
[210.99005127 235.91017151]
[202.10183716 223.82714844]
[193.21362305 211.74412537]
[176.49395752 209.92347717]
[166.05940247 196.30513000]
[168.75529480 179.01995850]
[159.68983459 167.06933594]
[150.62437439 155.11871338]
[141.55889893 143.16809082]
[132.49343872 131.21746826]
[123.42797852 119.26684570]
[44.22934341 132.73857117]
[29.32102394 131.08267212]
[14.41270638 129.42675781]
[-0.49561247 127.77084351]
[-15.40393066 126.11493683]
[-30.31225014 124.45902252]
[-20.17126465 135.51164246]
[-18.35023117 150.40069580]
[-25.52851486 163.57157898]
[-39.02814102 170.11070251]
[-53.81286621 167.57852173]
[-64.36701202 156.91972351]
[-66.75319672 142.11074829]
[-60.08120728 128.67628479]
[-46.84049225 121.62836456]
[-62.03509140 126.03685760]
[-72.67773438 115.61651611]
[-87.28746033 112.21710968]
[-101.89717865 108.81769562]
[-116.50690460 105.41828918]
[-131.11662292 102.01887512]
[-145.72634888 98.61946869]
[-160.33607483 95.22005463]
[-169.40206909 96.32318115]
[-175.13543701 91.66127014]
[-189.69343567 88.04676056]
[-204.25143433 84.43224335]
[-217.65933228 92.79904938]
[-233.03733826 89.15310669]
[-241.26191711 75.65748596]
[-237.45359802 60.31890488]
[-223.87176514 52.23746109]
[-208.57431030 56.20774078]
[-200.63691711 69.87424469]
[-186.07891846 73.48876190]
[-171.52091980 77.10327911]
[-156.93666077 80.61033630]
[-142.32693481 84.00974274]
[-127.71721649 87.40915680]
[-113.10749054 90.80856323]
[-98.49777222 94.20797729]
[-83.88804626 97.60738373]
[-69.27832794 101.00679779]
[-55.12871170 96.35515594]
[-43.44108200 107.01863861]
[-28.65633965 109.55070496]
[-13.74802113 111.20661926]
[1.16029739 112.86252594]
[16.06861687 114.51844025]
[30.97693443 116.17434692]
[45.88525391 117.83025360]
[50.32936096 111.78874207]
[44.30923462 98.04981995]
[59.21758270 99.70571899]
[63.66169357 93.66419983]
[57.64159393 79.92526245]
[51.62149429 66.18632507]
[45.60139465 52.44738770]
[30.79114342 46.93086624]
[24.29556084 32.52312469]
[29.96835899 17.77202797]
[44.44396973 11.42913437]
[59.13426590 17.25757408]
[65.32376099 31.79943466]
[59.34033203 46.42728806]
[65.36042786 60.16622543]
[71.38053131 73.90516663]
[77.40062714 87.64410400]
[92.03502655 84.35252380]
[91.59261322 69.35904694]
[91.15019989 54.36557770]
[90.70778656 39.37210083]
[81.63717651 25.70988464]
[89.17502594 11.14579105]
[105.56703949 10.66211128]
[113.95051575 24.75641251]
[105.70125580 38.92968750]
[106.14366913 53.92316055]
[106.58608246 68.91663361]
[107.02849579 83.91011047]
[121.55944061 87.63188934]
[129.15504456 74.69716644]
[136.75062561 61.76245117]
[144.34622192 48.82773209]
[129.39431763 50.02794266]
[119.02360535 39.19058609]
[120.88030243 24.30594254]
[133.59548950 16.34830475]
[147.79438782 21.18476105]
[153.00828552 35.24943542]
[161.53627014 22.90951347]
[170.06423950 10.56959248]
[178.59220886 -1.77033019]
[187.12017822 -14.11025238]
[191.15113831 -30.57803154]
[208.09123230 -31.26334190]
[213.43923950 -15.17498875]
[199.46009827 -5.58227968]
[190.93212891 6.75764275]
[182.40415955 19.09756470]
[173.87619019 31.43748665]
[165.34822083 43.77740860]
[157.28094482 56.42332458]
[149.68534851 69.35804749]
[142.08975220 82.29276276]
[134.49415588 95.22747803]
[135.37860107 110.20138550]
[144.44406128 122.15200806]
[153.50952148 134.10263062]
[162.57499695 146.05325317]
[171.64045715 158.00387573]
[180.70591736 169.95449829]
[194.17103577 170.23796082]
[204.85867310 178.10948181]
[209.00033569 190.51535034]
[205.29664612 202.85589600]
[214.18486023 214.93893433]
[223.07308960 227.02195740]
[231.96130371 239.10498047]
[248.99473572 246.10279846]
[250.24844360 263.60760498]
[259.31390381 275.55822754]
[268.55462646 287.37384033]
[277.96862793 299.05187988]
[296.86999512 300.35479736]
[308.61404419 314.81277466]
[306.10281372 332.94699097]
[315.85714722 344.34228516]
[325.61148071 355.73757935]
[333.56811523 360.22103882]
[335.42413330 367.37365723]
[345.00933838 378.91159058]
[354.59454346 390.44952393]
[364.17974854 401.98742676]
[372.21762085 398.54467773]
[380.78353882 396.83883667]
[389.50711060 396.93942261]
[398.01196289 398.83798218]
[405.93194580 402.44857788]
[412.92709351 407.61163330]
[418.69793701 414.10107422]
[422.99859619 421.63409424]
[425.64703369 429.88360596]
[426.53295898 438.49240112]
[425.62219238 447.08853149]
[422.95816040 455.30154419]
[418.65972900 462.77828979]
[412.91598511 469.19821167]
[420.88977051 481.90328979]
[428.86355591 494.60836792]
[436.83734131 507.31341553]
[444.81112671 520.01849365]
[463.42770386 523.53741455]
[473.38809204 539.27734375]
[468.75955200 556.98986816]
[477.10461426 569.45422363]
[485.44964600 581.91857910]
[493.79470825 594.38293457]
[509.35937500 595.89105225]
[520.27630615 607.08721924]
[521.39080811 622.68505859]
[512.17663574 635.31970215]
[496.98446655 639.02539062]
[482.98757935 632.05249023]
[476.79486084 617.69342041]
[481.33035278 602.72796631]
[472.98529053 590.26361084]
[464.64025879 577.79925537]
[456.29519653 565.33489990]
[444.89096069 565.59808350]
[434.66973877 560.26879883]
[428.22366333 550.56829834]
[427.25009155 538.84179688]
[432.10607910 527.99224854]
[424.13229370 515.28723145]
[416.15850830 502.58215332]
[408.18469238 489.87707520]
[400.21090698 477.17202759]
[378.63778687 479.76678467]
[358.64443970 471.07971191]
[345.73690796 453.42547607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 162]
[5 160]
[6 159]
[7 158]
[12 155]
[13 154]
[16 153]
[17 152]
[20 150]
[21 149]
[22 148]
[23 147]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 82]
[33 81]
[34 80]
[35 79]
[36 78]
[37 77]
[46 76]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[56 67]
[57 66]
[58 65]
[86 99]
[87 98]
[88 97]
[89 96]
[100 111]
[101 110]
[102 109]
[103 108]
[112 137]
[113 136]
[114 135]
[115 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[179 209]
[180 208]
[181 207]
[182 206]
[183 205]
[186 200]
[187 199]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
