%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCUGGAGAGGCGCGGGGUCAAGACGUCCGGCCUCGGGGGCCCGGGCUGGGCCGCCGAGUCCCCUGGGCGGCGCUGAGCGGGCGGGAGGCGGGGGCCCGCGGCUCGGGGCAACCGAGGCCGGGUCGCGGGAUCGGCCGCCAUCGCCGCCGCCGCUGCACUGGGAGCCCGCGGGG\
) } def
/len { sequence length } bind def

/coor [
[103.62252045 193.24441528]
[98.91136932 207.48538208]
[94.20021820 221.72634888]
[89.48906708 235.96731567]
[84.77791595 250.20828247]
[80.06676483 264.44924927]
[85.96032715 279.37054443]
[77.84433746 293.20925903]
[61.94468689 295.34951782]
[50.45822906 284.14947510]
[52.19639206 268.20086670]
[65.82580566 259.73809814]
[70.53695679 245.49713135]
[75.24810791 231.25616455]
[79.95925903 217.01519775]
[84.67041016 202.77423096]
[89.38156128 188.53326416]
[93.19951630 174.02729797]
[96.10955048 159.31228638]
[99.01957703 144.59725952]
[101.92961121 129.88224792]
[97.56441498 123.78347778]
[87.95586395 135.30197144]
[83.28902435 149.55752563]
[70.26987457 157.00746155]
[55.61497879 153.80838013]
[46.88479614 141.61068726]
[48.58322144 126.70714569]
[59.83403397 116.78650665]
[74.83225250 116.96652985]
[88.83401489 111.58592987]
[84.46881104 105.48715973]
[69.60151672 103.49627686]
[54.89649963 109.33348846]
[43.30876541 99.97541046]
[28.44147491 97.98452759]
[13.57418156 95.99364471]
[-1.29311073 94.00276184]
[-16.16040230 92.01187897]
[-30.86541939 97.84909058]
[-42.45315552 88.49100494]
[-57.32044601 86.50012207]
[-72.18773651 84.50923920]
[-87.05503082 82.51835632]
[-101.92232513 80.52747345]
[-115.49324799 89.08373260]
[-130.59614563 83.67243958]
[-135.64535522 68.44467163]
[-126.76757050 55.08187103]
[-110.77305603 53.83483505]
[-99.93144226 65.66018677]
[-85.06414795 67.65106964]
[-70.19685364 69.64195251]
[-55.32956314 71.63283539]
[-40.46227264 73.62371826]
[-26.82066345 67.64410400]
[-14.16952038 77.14458466]
[0.69777220 79.13546753]
[15.56506443 81.12635040]
[30.43235779 83.11723328]
[45.29964828 85.10811615]
[58.94125748 79.12850189]
[71.59239960 88.62898254]
[86.45969391 90.61986542]
[100.99897766 86.93079376]
[113.11856079 78.09249115]
[125.23815155 69.25418854]
[137.35774231 60.41588211]
[149.47732544 51.57757950]
[161.51800537 42.63206863]
[173.47880554 33.58005524]
[185.43962097 24.52804375]
[197.40043640 15.47603130]
[209.36125183 6.42401886]
[221.32206726 -2.62799335]
[222.88679504 -6.75449276]
[225.43865967 -9.84191132]
[228.52348328 -11.70617580]
[231.67422485 -12.33192444]
[234.46788025 -11.86179352]
[247.04067993 -20.04253960]
[259.61349487 -28.22328758]
[272.18627930 -36.40403366]
[277.69442749 -43.73094559]
[285.05563354 -44.61609268]
[297.77163696 -52.57240677]
[310.48767090 -60.52872086]
[323.13256836 -68.59757233]
[335.70538330 -76.77831268]
[348.20507812 -85.07032013]
[360.63070679 -93.47291565]
[373.05633545 -101.87551880]
[385.48196411 -110.27812195]
[397.90759277 -118.68072510]
[405.55560303 -135.41566467]
[423.08114624 -136.01165771]
[435.35568237 -144.63346863]
[447.55322266 -153.36387634]
[459.67282104 -162.20217896]
[471.79238892 -171.04048157]
[483.91198730 -179.87878418]
[496.03158569 -188.71708679]
[508.15115356 -197.55538940]
[520.27075195 -206.39369202]
[532.39031982 -215.23199463]
[544.50994873 -224.07029724]
[556.62951660 -232.90859985]
[568.74908447 -241.74691772]
[580.86871338 -250.58522034]
[578.56726074 -265.71670532]
[583.57232666 -280.18072510]
[594.73382568 -290.65353394]
[609.48687744 -294.72854614]
[624.44140625 -291.46939087]
[636.16082764 -281.62496948]
[641.95227051 -267.45745850]
[640.48480225 -252.22247314]
[632.09564209 -239.42086792]
[618.71258545 -231.99438477]
[603.41101074 -231.64955139]
[589.70697021 -238.46562195]
[577.58740234 -229.62731934]
[565.46783447 -220.78901672]
[553.34820557 -211.95071411]
[541.22863770 -203.11241150]
[529.10906982 -194.27410889]
[516.98944092 -185.43580627]
[504.86987305 -176.59750366]
[492.75030518 -167.75920105]
[480.63070679 -158.92089844]
[468.51110840 -150.08259583]
[456.39154053 -141.24427795]
[452.82867432 -134.74223328]
[443.97750854 -132.35893250]
[431.70294189 -123.73711395]
[429.30261230 -111.86114502]
[419.11990356 -104.58126068]
[406.31021118 -106.25509644]
[393.88458252 -97.85249329]
[381.45895386 -89.44989014]
[369.03332520 -81.04728699]
[356.60769653 -72.64468384]
[352.81628418 -66.27318573]
[343.88610840 -64.20551300]
[331.31332397 -56.02476501]
[327.40942383 -49.72155380]
[318.44396973 -47.81270599]
[305.72796631 -39.85639191]
[293.01193237 -31.90007782]
[280.36703491 -23.83123016]
[267.79421997 -15.65048313]
[255.22142029 -7.46973705]
[242.64862061 0.71100956]
[230.37408447 9.33282089]
[218.41326904 18.38483238]
[206.45245361 27.43684578]
[194.49163818 36.48885727]
[182.53082275 45.54087067]
[170.57000732 54.59288406]
[167.12309265 61.15714264]
[158.31562805 63.69716644]
[146.19604492 72.53546906]
[134.07644653 81.37377167]
[121.95686340 90.21207428]
[109.83728027 99.05038452]
[120.44569397 111.23426819]
[116.64463043 132.79228210]
[113.73459625 147.50729370]
[110.82456207 162.22232056]
[107.91452789 176.93733215]
[120.45809174 168.71182251]
[135.37110901 170.32485962]
[145.86573792 181.04226685]
[147.16522217 195.98587036]
[138.67807007 208.35391235]
[124.26733398 212.51690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[18 170]
[19 169]
[20 168]
[21 167]
[32 64]
[33 63]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[70 159]
[71 158]
[72 157]
[73 156]
[74 155]
[75 154]
[80 153]
[81 152]
[82 151]
[83 150]
[85 149]
[86 148]
[87 147]
[88 145]
[89 144]
[90 142]
[91 141]
[92 140]
[93 139]
[94 138]
[96 135]
[97 134]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
