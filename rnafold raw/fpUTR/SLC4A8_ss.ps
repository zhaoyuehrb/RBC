%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUUGCGGCGGAUGCCUCGCGGGCCGGUGGCUAUGGAGGCGGCGGCGGUUGAUGGUUGACCGUUGGCUCCGGGGUGGGGGUCGCCGUUCGAGUGAUCUGCUCAGACCCGACCAGAGGGCGCGGGCUGCUGAUGCUUGGCUUGGAGCCCGUGGGGGAGACCUAGUUCGGCUCCGCC\
) } def
/len { sequence length } bind def

/coor [
[119.75639343 126.00202942]
[115.34704590 140.33930969]
[110.93769836 154.67658997]
[114.27651215 170.14149475]
[103.13978577 180.03202820]
[98.73043823 194.36930847]
[102.91838074 210.22468567]
[91.09212494 221.58566284]
[75.41751099 216.76502991]
[72.01924133 200.72184753]
[84.39315796 189.95996094]
[88.80250549 175.62268066]
[85.14831543 161.18328857]
[96.60041809 150.26724243]
[101.00976562 135.92996216]
[105.41911316 121.59268188]
[93.71512604 112.21096039]
[80.68109131 119.63483429]
[67.64705658 127.05871582]
[54.61301804 134.48258972]
[41.57898331 141.90646362]
[39.74855423 157.20207214]
[29.38371658 168.35659790]
[14.61284351 171.23503113]
[1.14063919 164.93917847]
[-11.89339638 172.36305237]
[-24.92743111 179.78692627]
[-37.96146774 187.21080017]
[-48.73217010 200.30386353]
[-64.29518127 193.57859802]
[-62.14101410 176.76206970]
[-45.38534164 174.17675781]
[-32.35130692 166.75288391]
[-19.31727028 159.32901001]
[-6.28323555 151.90513611]
[-4.82624340 137.10597229]
[5.18413353 125.86959076]
[20.06541061 122.64453888]
[34.15510941 128.87242126]
[47.18914413 121.44855499]
[60.22317886 114.02467346]
[73.25721741 106.60079956]
[86.29125214 99.17692566]
[98.07711792 89.89826965]
[108.35299683 78.97095490]
[118.62887573 68.04363251]
[128.90475464 57.11631775]
[139.18063354 46.18899918]
[142.79437256 37.76739120]
[149.73403931 35.16208649]
[160.20010376 24.41679192]
[170.66618347 13.67149639]
[181.13224792 2.92620206]
[191.59831238 -7.81909227]
[202.06439209 -18.56438637]
[206.01348877 -39.60747528]
[226.05584717 -44.46853638]
[235.94190979 -55.74975204]
[245.82797241 -67.03096008]
[255.71403503 -78.31217194]
[254.85797119 -93.86547089]
[265.04455566 -105.16539001]
[279.87750244 -105.88567352]
[289.76358032 -117.16688538]
[293.03979492 -132.64515686]
[307.24703979 -137.11766052]
[310.24438477 -157.03277588]
[328.76855469 -162.51823425]
[338.25262451 -174.13945007]
[347.73669434 -185.76066589]
[357.22076416 -197.38186646]
[366.70483398 -209.00308228]
[376.18887329 -220.62428284]
[385.67294312 -232.24549866]
[395.15701294 -243.86669922]
[404.64108276 -255.48791504]
[407.37207031 -271.07162476]
[421.41363525 -276.03997803]
[430.89767456 -287.66119385]
[440.38174438 -299.28237915]
[449.86581421 -310.90359497]
[452.59680176 -326.48730469]
[466.63836670 -331.45565796]
[476.12240601 -343.07687378]
[485.60647583 -354.69808960]
[494.98822021 -366.40206909]
[504.26687622 -378.18792725]
[506.72393799 -393.81716919]
[520.67614746 -399.03118896]
[529.95477295 -410.81704712]
[539.23345947 -422.60290527]
[548.51208496 -434.38879395]
[557.79077148 -446.17465210]
[560.24780273 -461.80389404]
[574.20001221 -467.01788330]
[583.47863770 -478.80377197]
[581.80523682 -494.29043579]
[591.38299561 -506.11080933]
[606.15753174 -507.61071777]
[615.43615723 -519.39660645]
[624.71484375 -531.18243408]
[633.99346924 -542.96832275]
[636.45056152 -558.59753418]
[650.40277100 -563.81158447]
[659.68139648 -575.59741211]
[657.56481934 -591.25933838]
[667.20916748 -603.77984619]
[682.89257812 -605.73071289]
[695.31042480 -595.95452881]
[697.09533691 -580.25134277]
[687.18841553 -567.93756104]
[671.46728516 -566.31878662]
[662.18859863 -554.53289795]
[660.39520264 -539.74664307]
[645.77935791 -533.68963623]
[636.50067139 -521.90380859]
[627.22204590 -510.11791992]
[617.94335938 -498.33206177]
[619.95330811 -483.61828613]
[610.71136475 -471.53353882]
[595.26452637 -469.52511597]
[585.98590088 -457.73925781]
[584.19244385 -442.95300293]
[569.57659912 -436.89599609]
[560.29797363 -425.11013794]
[551.01928711 -413.32424927]
[541.74066162 -401.53839111]
[532.46197510 -389.75253296]
[530.66857910 -374.96627808]
[516.05273438 -368.90927124]
[506.77407837 -357.12341309]
[505.10214233 -349.90185547]
[497.22769165 -345.21401978]
[487.74362183 -333.59280396]
[478.25955200 -321.97158813]
[476.20693970 -307.21911621]
[461.48703003 -301.41952515]
[452.00296021 -289.79833984]
[442.51889038 -278.17712402]
[433.03482056 -266.55590820]
[430.98220825 -251.80342102]
[416.26229858 -246.00384521]
[406.77822876 -234.38262939]
[397.29415894 -222.76142883]
[387.81008911 -211.14021301]
[378.32601929 -199.51901245]
[368.84194946 -187.89779663]
[359.35791016 -176.27659607]
[349.87384033 -164.65538025]
[340.38977051 -153.03417969]
[342.33135986 -142.96589661]
[338.31192017 -133.29415894]
[329.44146729 -127.32174683]
[318.52825928 -127.23160553]
[315.95916748 -112.56023407]
[301.04479980 -107.28082275]
[291.15872192 -95.99960327]
[292.39151001 -81.20042419]
[282.52636719 -69.61884308]
[266.99523926 -68.42610931]
[257.10919189 -57.14490128]
[247.22312927 -45.86368561]
[237.33706665 -34.58247375]
[239.36447144 -25.88633537]
[237.11245728 -17.10324860]
[230.96684265 -10.25016689]
[222.22201538 -6.96102953]
[212.80969238 -8.09831619]
[202.34361267 2.64697862]
[191.87754822 13.39227295]
[181.41146851 24.13756752]
[170.94540405 34.88286209]
[160.47932434 45.62815857]
[150.10795593 56.46488190]
[139.83207703 67.39219666]
[129.55619812 78.31951904]
[119.28031158 89.24683380]
[109.00443268 100.17415619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[5 12]
[6 11]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[25 35]
[26 34]
[27 33]
[28 32]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[57 163]
[58 162]
[59 161]
[60 160]
[63 157]
[64 156]
[66 154]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[78 140]
[79 139]
[80 138]
[81 137]
[83 135]
[84 134]
[85 133]
[86 131]
[87 130]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
[99 118]
[100 117]
[101 116]
[102 115]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
