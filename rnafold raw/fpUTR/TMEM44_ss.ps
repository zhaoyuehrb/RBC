%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACUUUUCCCCGGCGCCUUCGCCGCCGCCGCCCGCGCCCGGGAGCGCGCCCUUCUCUGCCCGCGGUCGGUGCGCUCGGCCGGAGGCGCCGCGGCGGAACGGAACCCAGAGAAGGGCACGCGGGGCGGCGGCGCUCGGGGCUUGCCCGCGGCGAGGGAGGCUGCGCCCAGGUCCCCGGCCCCGCGCCGCGCGCCCAGCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[55.58011246 210.05885315]
[52.63980484 224.76785278]
[49.69949722 239.47685242]
[46.75918579 254.18585205]
[52.52545929 269.53778076]
[41.90579987 282.03399658]
[25.82479668 278.81942749]
[20.82521439 263.20095825]
[32.05018997 251.24554443]
[34.99049759 236.53654480]
[37.93080902 221.82754517]
[40.87111664 207.11854553]
[53.81540298 192.49038696]
[69.22344971 187.10711670]
[82.45269775 190.31900024]
[81.76997375 175.33454895]
[81.08725739 160.35008240]
[80.40454102 145.36563110]
[79.72181702 130.38117981]
[76.85565948 120.16593170]
[77.62129974 110.84407806]
[81.28939819 103.51544952]
[86.83370209 98.94725037]
[93.05686951 97.50250244]
[82.90205383 86.46259308]
[72.74723816 75.42267609]
[62.59242630 64.38275909]
[52.43761063 53.34284210]
[42.28279495 42.30292892]
[32.12797928 31.26301384]
[21.97316360 20.22309685]
[11.81834888 9.18318272]
[-3.59939075 10.26392365]
[-16.19463348 1.97393548]
[-30.16958809 7.42376423]
[-44.14454269 12.87359333]
[-58.11949921 18.32342148]
[-67.94408417 31.45390320]
[-84.19343567 29.24238968]
[-90.15160370 13.96390057]
[-79.68933868 1.33563352]
[-63.56932831 4.34846735]
[-49.59437180 -1.10136151]
[-35.61941528 -6.55119038]
[-21.64446259 -12.00101948]
[-20.49514771 -20.30060959]
[-16.47945595 -27.65440750]
[-24.46681976 -40.35094452]
[-32.45418549 -53.04747772]
[-46.35177994 -60.60839462]
[-46.57980728 -75.50125122]
[-54.56717300 -88.19779205]
[-62.55453491 -100.89432526]
[-70.54190063 -113.59085846]
[-78.52926636 -126.28739929]
[-86.51663208 -138.98393250]
[-94.50399017 -151.68046570]
[-102.49135590 -164.37699890]
[-110.47872162 -177.07353210]
[-118.46608734 -189.77008057]
[-126.45345306 -202.46661377]
[-136.94920349 -208.56901550]
[-138.50700378 -219.27049255]
[-147.97332764 -230.90615845]
[-157.43963623 -242.54182434]
[-166.90596008 -254.17749023]
[-181.61698914 -259.99954224]
[-183.64710999 -274.75512695]
[-191.49299622 -279.43902588]
[-193.16719055 -286.63998413]
[-202.45582581 -298.41796875]
[-211.74447632 -310.19595337]
[-221.03311157 -321.97393799]
[-230.32176208 -333.75195312]
[-239.61041260 -345.52993774]
[-247.38430786 -350.33233643]
[-248.94902039 -357.55789185]
[-258.05783081 -369.47549438]
[-267.16668701 -381.39309692]
[-282.81408691 -384.93395996]
[-289.67175293 -399.43746948]
[-282.47903442 -413.77780151]
[-266.75360107 -416.95422363]
[-254.55862427 -406.53012085]
[-255.24906921 -390.50192261]
[-246.14024353 -378.58432007]
[-237.03141785 -366.66671753]
[-227.83241272 -354.81857300]
[-218.54376221 -343.04058838]
[-209.25512695 -331.26260376]
[-199.96647644 -319.48458862]
[-190.67784119 -307.70660400]
[-181.38919067 -295.92861938]
[-172.01144409 -284.22146606]
[-157.97750854 -279.23168945]
[-155.27029419 -263.64379883]
[-145.80397034 -252.00814819]
[-136.33766174 -240.37248230]
[-126.87133789 -228.73680115]
[-125.88117981 -243.70408630]
[-117.27288818 -255.98811340]
[-103.54232788 -262.02731323]
[-88.67049408 -260.07064819]
[-76.96926880 -250.68548584]
[-71.83127594 -236.59291077]
[-74.74620056 -221.87886047]
[-84.86891174 -210.80949402]
[-99.26445007 -206.59422302]
[-113.75691223 -210.45397949]
[-105.76954651 -197.75743103]
[-97.78218842 -185.06089783]
[-89.79482269 -172.36436462]
[-81.80745697 -159.66783142]
[-73.82009125 -146.97129822]
[-65.83273315 -134.27476501]
[-57.84536362 -121.57822418]
[-49.85800171 -108.88169098]
[-41.87063599 -96.18515015]
[-33.88327408 -83.48861694]
[-20.55698776 -76.83584595]
[-19.75764847 -61.03484344]
[-11.77028465 -48.33830643]
[-3.78292036 -35.64177322]
[13.74975777 -33.30081940]
[24.84237862 -19.14456558]
[22.85826492 -0.97163266]
[33.01308060 10.06828213]
[43.16789627 21.10819817]
[53.32270813 32.14811325]
[63.47752380 43.18803024]
[73.63233948 54.22794342]
[83.78715515 65.26786041]
[93.94197083 76.30777740]
[104.09678650 87.34768677]
[117.56870270 93.94371033]
[132.51647949 95.19434357]
[141.33235168 92.79080200]
[147.68103027 96.57906342]
[162.60810852 98.05640411]
[177.53517151 99.53373718]
[192.46224976 101.01107788]
[207.38932800 102.48841095]
[222.32717896 103.85243225]
[237.27494812 105.10306549]
[252.22271729 106.35369873]
[267.17050171 107.60432434]
[279.17318726 97.67593384]
[294.31454468 99.15718842]
[303.70578003 110.66110992]
[318.65356445 111.91174316]
[333.60131836 113.16237640]
[348.54910278 114.41300201]
[363.49688721 115.66363525]
[378.44464111 116.91426849]
[389.33090210 105.68824005]
[404.89141846 104.13758850]
[417.77899170 112.99446869]
[421.90850830 128.07695007]
[415.33013916 142.26353455]
[401.14999390 148.85574341]
[386.06347656 144.74095154]
[377.19400024 131.86204529]
[362.24624634 130.61140442]
[347.29846191 129.36077881]
[332.35070801 128.11015320]
[317.40292358 126.85951996]
[302.45513916 125.60888672]
[291.28286743 135.39233398]
[276.10589600 134.33694458]
[265.91986084 122.55210114]
[250.97209167 121.30146790]
[236.02432251 120.05084229]
[221.07653809 118.80020905]
[214.14672852 121.37597656]
[205.91198730 117.41548157]
[190.98490906 115.93814850]
[176.05784607 114.46080780]
[161.13076782 112.98347473]
[146.20368958 111.50613403]
[131.26583862 110.14211273]
[116.31806946 108.89148712]
[110.91512299 114.09322357]
[114.52188873 128.65315247]
[100.10922241 124.49671173]
[94.70627594 129.69845581]
[95.38899231 144.68290710]
[96.07170868 159.66737366]
[96.75443268 174.65182495]
[97.43714905 189.63627625]
[99.92970276 204.42773438]
[104.19538879 218.80841064]
[108.46107483 233.18908691]
[112.72676086 247.56977844]
[116.99244690 261.95043945]
[131.00215149 269.26507568]
[135.65649414 284.36846924]
[128.19415283 298.30004883]
[113.04240417 302.79446411]
[99.19049072 295.18524170]
[94.85652924 279.98681641]
[102.61177063 266.21612549]
[98.34608459 251.83546448]
[94.08039856 237.45477295]
[89.81471252 223.07409668]
[85.54902649 208.69342041]
[78.05679321 209.03477478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[31 127]
[32 126]
[34 45]
[35 44]
[36 43]
[37 42]
[47 123]
[48 122]
[49 121]
[51 119]
[52 118]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 110]
[61 109]
[63 99]
[64 98]
[65 97]
[66 96]
[68 94]
[70 93]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[77 87]
[78 86]
[79 85]
[135 181]
[136 180]
[138 179]
[139 178]
[140 177]
[141 176]
[142 175]
[143 173]
[144 172]
[145 171]
[146 170]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[190 205]
[191 204]
[192 203]
[193 202]
[194 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
