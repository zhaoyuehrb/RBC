%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUCAAACCUUGCAGAGCUUUGCUCUCAGAGAGUUUGUAAAAAGACACACUCCUCUUACAAGAGUUCAUGCUACCACAUAGCAAAGAACCUUAAAUUUUUGGAAGAACAAUAUAUUCAUUUUGGCAUUGUGCAGAGACCCUAACUCUACCUUUCUGCUUUAAAGCAAAGUAAACUCGGUGGCCUCUUCUUCUCCACCCCUCAAA\
) } def
/len { sequence length } bind def

/coor [
[139.00167847 319.40338135]
[131.57086182 320.41976929]
[127.54287720 334.86880493]
[123.51490021 349.31787109]
[133.85336304 360.76864624]
[136.33732605 375.99472046]
[130.17417908 390.13751221]
[117.33055878 398.68414307]
[101.90481567 398.90740967]
[88.81924438 390.73602295]
[82.24940491 376.77749634]
[84.29170990 361.48590088]
[94.29447174 349.74075317]
[109.06584167 345.28988647]
[113.09381866 330.84085083]
[117.12179565 316.39178467]
[102.03680420 297.36816406]
[99.23422241 274.50085449]
[108.26398468 254.66027832]
[125.30235291 243.15373230]
[121.93299103 228.53704834]
[118.56362915 213.92036438]
[115.19427490 199.30368042]
[111.82491302 184.68699646]
[108.45555115 170.07031250]
[105.08618927 155.45362854]
[101.71683502 140.83694458]
[94.71535492 140.52995300]
[87.86924744 139.03138733]
[81.37977600 136.38531494]
[75.43772888 132.66954041]
[70.21779633 127.99329376]
[65.87345123 122.49406433]
[62.53240967 116.33351135]
[47.91572571 119.70287323]
[33.29904175 123.07223511]
[18.68236160 126.44159698]
[6.97282839 137.08102417]
[-7.16718817 132.40029907]
[-21.78387070 135.76965332]
[-36.40055466 139.13902283]
[-44.56649017 152.67019653]
[-59.92851639 156.38284302]
[-73.37261200 148.07431030]
[-76.92263031 132.67388916]
[-68.47241974 119.31838989]
[-53.03532791 115.93138885]
[-39.76991272 124.52233124]
[-25.15323067 121.15297699]
[-10.53654861 117.78361511]
[0.12750149 107.38518524]
[15.31300068 111.82491302]
[29.92968369 108.45555115]
[44.54636765 105.08618927]
[59.16304779 101.71683502]
[64.21941376 71.79608154]
[90.32722473 50.69289017]
[81.43728638 38.61112213]
[72.54735565 26.52935600]
[57.17414474 24.01895905]
[48.33059692 11.63968849]
[50.81861877 -3.00084949]
[41.92868423 -15.08261681]
[33.03875351 -27.16438293]
[24.14881897 -39.24615097]
[15.25888634 -51.32791901]
[5.74298716 -62.92307281]
[-4.37229204 -73.99922180]
[-14.48757172 -85.07537842]
[-24.60285187 -96.15152740]
[-42.27913666 -101.30812836]
[-45.37959290 -118.58004761]
[-55.66100693 -129.50216675]
[-65.94241333 -140.42427063]
[-76.22383118 -151.34638977]
[-86.50524139 -162.26850891]
[-102.43300629 -164.18832397]
[-110.73990631 -177.91329956]
[-105.05359650 -192.91481018]
[-89.73612213 -197.68498230]
[-76.53774261 -188.56454468]
[-75.58312225 -172.54991150]
[-65.30171204 -161.62780762]
[-55.02030182 -150.70568848]
[-44.73889160 -139.78356934]
[-34.45748138 -128.86146545]
[-22.37853432 -128.18231201]
[-13.72350502 -119.16500854]
[-13.52670002 -106.26680756]
[-3.41142035 -95.19065857]
[6.70385885 -84.11450195]
[16.81913757 -73.03835297]
[17.42858505 -88.02597046]
[27.43473244 -99.20080566]
[42.26431656 -101.45545959]
[55.13953781 -93.75943756]
[60.17583847 -79.63018799]
[55.07139206 -65.52542114]
[42.15916824 -57.89164734]
[27.34065247 -60.21784973]
[36.23058701 -48.13608170]
[45.12051773 -36.05431747]
[54.01045227 -23.97254944]
[62.90038300 -11.89078236]
[77.61820221 -9.91054344]
[86.80596924 2.21544623]
[84.62911987 17.63942337]
[93.51905823 29.72119141]
[102.40898895 41.80295944]
[117.38803101 41.01037598]
[124.95333862 28.05792046]
[132.51864624 15.10546303]
[140.08395386 2.15300584]
[147.64926147 -10.79945087]
[147.31362915 -29.20947456]
[162.88108826 -37.30799484]
[170.24990845 -50.37323380]
[164.58483887 -64.94858551]
[169.66290283 -79.73869324]
[183.08642578 -87.76010895]
[198.51721191 -85.22537231]
[208.66932678 -73.33131409]
[208.74923706 -57.69393158]
[198.71922302 -45.69673157]
[183.31515503 -43.00441360]
[175.94633484 -29.93917465]
[178.89146423 -18.20510674]
[172.85734558 -7.25929451]
[160.60171509 -3.23414516]
[153.03640747 9.71831226]
[145.47109985 22.67076874]
[137.90579224 35.62322617]
[130.34048462 48.57568359]
[139.50184631 60.45295715]
[153.95089722 56.42498016]
[168.39996338 52.39700317]
[182.84902954 48.36902618]
[197.29809570 44.34104538]
[211.74714661 40.31306839]
[226.19621277 36.28509140]
[228.38520813 21.21431923]
[236.52029419 8.34029770]
[249.19198608 -0.10647136]
[264.20486450 -2.66253400]
[278.95785522 1.11496270]
[290.89489746 10.57154465]
[297.94781494 24.06880188]
[298.89468384 39.26825333]
[293.57144165 53.53650284]
[282.90036011 64.40148926]
[268.73028564 69.98078918]
[253.51623535 69.30774689]
[239.89418030 62.49898529]
[230.22419739 50.73415375]
[215.77513123 54.76213074]
[201.32606506 58.79010773]
[186.87699890 62.81808853]
[172.42794800 66.84606171]
[157.97888184 70.87404633]
[143.52981567 74.90202332]
[147.25941467 88.30645752]
[147.08847046 101.78506470]
[143.27084351 114.25994873]
[136.34275818 124.79915619]
[127.06236267 132.68618774]
[116.33351135 137.46759033]
[119.70287323 152.08427429]
[123.07223511 166.70095825]
[126.44159698 181.31764221]
[129.81095886 195.93432617]
[133.18031311 210.55101013]
[136.54968262 225.16769409]
[139.91903687 239.78436279]
[152.55789185 240.32513428]
[164.70285034 245.21450806]
[174.85580444 254.16387939]
[181.66387939 266.36987305]
[184.09526062 280.58187866]
[181.58491516 295.22912598]
[174.13082886 308.59420776]
[181.89089966 321.43093872]
[189.65097046 334.26763916]
[197.41104126 347.10437012]
[205.17109680 359.94107056]
[220.44470215 358.95330811]
[234.42312622 365.18725586]
[243.89424133 377.21041870]
[246.68164062 392.25997925]
[242.14482117 406.87762451]
[231.32629395 417.70434570]
[216.71208191 422.25225830]
[201.66043091 419.47625732]
[189.63008118 410.01425171]
[183.38554382 396.04055786]
[184.36175537 380.76620483]
[192.33438110 367.70114136]
[184.57431030 354.86444092]
[176.81425476 342.02770996]
[169.05418396 329.19097900]
[161.29411316 316.35427856]
[153.86329651 317.37063599]
[155.89604187 332.23226929]
[157.92878723 347.09390259]
[164.45449829 360.60000610]
[153.62597656 370.97994995]
[140.40788269 363.88894653]
[143.06715393 349.12664795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[34 55]
[35 54]
[36 53]
[37 52]
[39 50]
[40 49]
[41 48]
[57 109]
[58 108]
[59 107]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 92]
[68 91]
[69 90]
[70 89]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[116 126]
[117 125]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[180 200]
[181 199]
[182 198]
[183 197]
[184 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
