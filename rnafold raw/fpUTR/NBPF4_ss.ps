%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUAAUUCUGUUAUUGCAACUGCAGACCGUUACCUGGUACGCUGGCUGCUACCUCCCUCACUCUUGUCAGAGUCGGAGCUACAGGCAGUGCCUUCAGCUCUGAGCUCAGGCAUCCCGGUCCCUGUUUUUGCGGUUAAGGACUCUAAAGUGUUGUGUCGUGUUCAUCAACUUUUUCUCAACUUCCCUGGCUCUACCUCUUCUGCCACAAACGUCAGC\
) } def
/len { sequence length } bind def

/coor [
[298.73693848 346.81713867]
[299.35818481 331.83001709]
[304.08529663 317.59432983]
[312.55230713 305.21249390]
[324.10351562 295.64328003]
[337.84442139 289.62771606]
[352.71099854 287.63159180]
[367.55206299 289.80950928]
[381.21420288 295.99017334]
[368.79470825 287.57852173]
[356.37521362 279.16687012]
[342.45559692 284.39968872]
[327.95223999 280.38522339]
[318.48303223 268.46096802]
[317.84347534 253.06950378]
[305.42398071 244.65783691]
[293.00448608 236.24618530]
[280.58499146 227.83451843]
[268.16549683 219.42285156]
[255.74600220 211.01118469]
[243.32650757 202.59953308]
[228.79421997 205.65701294]
[216.07925415 197.30329895]
[212.97080994 182.03977966]
[200.55131531 173.62811279]
[188.13182068 165.21644592]
[175.59294128 156.98379517]
[162.93725586 148.93186951]
[150.28157043 140.87994385]
[137.62588501 132.82800293]
[124.97019196 124.77607727]
[117.16245270 132.20814514]
[107.13710022 137.13499451]
[95.71044922 138.89804077]
[83.89194489 137.10769653]
[72.79502106 131.69877625]
[63.53245926 122.95638275]
[57.10622025 111.50804901]
[42.52444458 115.02542114]
[27.94267273 118.54279327]
[13.36089993 122.06015778]
[5.75775671 127.11179352]
[-1.45525932 125.52180481]
[-16.08598709 128.82965088]
[-25.83067322 141.57408142]
[-41.87268066 141.75733948]
[-51.90595245 129.23883057]
[-48.23382187 113.62168884]
[-33.67323685 106.88605499]
[-19.39382553 114.19892120]
[-4.76309729 110.89108276]
[9.84352875 107.47838593]
[24.42530251 103.96101379]
[39.00707626 100.44364929]
[53.58884811 96.92627716]
[56.47139359 90.00233459]
[41.98836517 86.09824371]
[27.50533867 82.19415283]
[12.58555412 83.74334717]
[1.34832561 73.80731964]
[1.05897570 58.81010818]
[11.90458012 48.44802094]
[26.87302017 49.42055893]
[36.28699493 61.10042572]
[49.26174164 68.62744141]
[62.23648453 76.15445709]
[65.11903381 69.23052216]
[57.34126663 56.40451813]
[49.56349945 43.57851410]
[41.78573227 30.75251007]
[28.01419067 22.96436882]
[28.03078270 8.06977177]
[20.25301743 -4.75623083]
[12.47525120 -17.58223343]
[4.60569000 -30.35212135]
[-3.35526061 -43.06523514]
[-11.31621170 -55.77834702]
[-19.27716255 -68.49146271]
[-27.23811340 -81.20457458]
[-35.19906235 -93.91768646]
[-43.16001511 -106.63080597]
[-51.12096405 -119.34391785]
[-66.26322937 -122.99762726]
[-74.15566254 -136.00393677]
[-70.57908630 -150.41726685]
[-78.54003906 -163.13037109]
[-86.50099182 -175.84349060]
[-94.46193695 -188.55659485]
[-107.99276733 -198.77194214]
[-101.92234802 -214.60186768]
[-85.03060913 -213.15083313]
[-81.74882507 -196.51754761]
[-73.78787231 -183.80444336]
[-65.82692719 -171.09132385]
[-57.86597443 -158.37820435]
[-43.33759308 -155.30221558]
[-35.08295441 -142.52272034]
[-38.40785217 -127.30487061]
[-30.44689941 -114.59175110]
[-22.48595047 -101.87863922]
[-14.52499866 -89.16552734]
[-6.56404829 -76.45241547]
[1.39690256 -63.73929977]
[9.35785294 -51.02618408]
[17.31880379 -38.31307220]
[23.52916718 -34.31468964]
[25.30125427 -25.36000061]
[33.07902145 -12.53399754]
[40.85678482 0.29200602]
[54.07201004 7.16274738]
[54.61173630 22.97474480]
[62.38950348 35.80074692]
[70.16726685 48.62675095]
[77.94503784 61.45275497]
[103.82066345 58.07163239]
[125.67938232 69.60118103]
[136.23655701 90.40711212]
[133.02212524 112.12039185]
[145.67781067 120.17231750]
[158.33349609 128.22425842]
[170.98918152 136.27618408]
[183.64486694 144.32810974]
[190.21322632 144.99259949]
[194.77812195 148.36512756]
[196.54348755 152.79695129]
[208.96298218 161.20861816]
[221.38247681 169.62026978]
[236.70974731 166.84315491]
[249.18505859 175.55070496]
[251.73815918 190.18002319]
[264.15765381 198.59169006]
[276.57714844 207.00335693]
[288.99664307 215.41502380]
[301.41616821 223.82669067]
[313.83566284 232.23834229]
[326.25515747 240.65000916]
[340.78512573 235.53277588]
[355.37170410 239.90141296]
[364.48117065 251.87979126]
[364.78686523 266.74734497]
[377.20639038 275.15902710]
[389.62588501 283.57067871]
[391.74563599 277.12292480]
[396.11560059 270.98104858]
[402.65988159 265.81683350]
[411.11874390 262.27456665]
[421.05877686 260.92367554]
[436.01211548 259.74142456]
[450.96545410 258.55917358]
[465.91879272 257.37692261]
[479.06622314 248.57600403]
[492.36370850 255.28611755]
[507.31704712 254.10386658]
[522.27038574 252.92161560]
[537.22375488 251.73936462]
[552.16821289 250.44989014]
[567.10302734 249.05326843]
[575.84625244 236.08830261]
[590.89184570 231.82629395]
[605.13568115 238.27963257]
[611.85235596 252.40126038]
[607.87042236 267.52337646]
[595.07000732 276.50576782]
[579.49511719 275.10720825]
[568.49969482 263.98809814]
[553.56481934 265.38473511]
[547.20153809 269.13497925]
[538.40600586 266.69271851]
[523.45263672 267.87493896]
[508.49929810 269.05718994]
[493.54595947 270.23944092]
[481.46810913 278.95581055]
[467.10104370 272.33026123]
[452.14770508 273.51251221]
[437.19436646 274.69476318]
[422.24102783 275.87701416]
[419.06329346 282.67050171]
[432.75286865 288.80200195]
[446.44244385 294.93350220]
[460.13204956 301.06500244]
[474.92538452 303.54623413]
[477.55914307 318.31320190]
[464.53570557 325.75567627]
[453.15017700 315.99105835]
[439.66937256 309.41320801]
[426.18856812 302.83538818]
[412.70776367 296.25753784]
[409.52999878 303.05105591]
[418.20693970 315.28668213]
[426.88388062 327.52233887]
[435.56079102 339.75796509]
[450.60021973 337.15438843]
[465.27755737 341.34222412]
[476.67864990 351.49005127]
[482.53976440 365.58294678]
[481.69720459 380.82278442]
[474.31823730 394.18368530]
[461.86798096 403.01284790]
[446.81842041 405.55718994]
[432.15768433 401.31155396]
[420.79666138 391.11892700]
[414.99105835 377.00305176]
[415.89364624 361.76663208]
[423.32516479 348.43490601]
[414.64822388 336.19927979]
[405.97128296 323.96362305]
[397.29437256 311.72799683]
[403.76904297 325.25863647]
[406.26443481 340.04962158]
[404.58731079 354.95556641]
[398.86752319 368.82223511]
[389.54797363 380.57580566]
[377.35040283 389.30612183]
[363.21929932 394.33718872]
[348.24890137 395.27938843]
[333.59851074 392.05975342]
[320.40258789 384.92764282]
[309.68295288 374.43527222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 142]
[10 141]
[11 140]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 127]
[25 126]
[26 125]
[27 122]
[28 121]
[29 120]
[30 119]
[31 118]
[38 55]
[39 54]
[40 53]
[41 52]
[43 51]
[44 50]
[67 114]
[68 113]
[69 112]
[70 111]
[72 109]
[73 108]
[74 107]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
[147 176]
[148 175]
[149 174]
[150 173]
[152 171]
[153 170]
[154 169]
[155 168]
[156 166]
[157 165]
[188 207]
[189 206]
[190 205]
[191 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
