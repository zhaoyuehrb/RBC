%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCACAGCGGCCGCAACGUGUCGAGAGCCGUAAGUAAAGUGUCGCAAAGCAGAAGGAAGGCGGGAGUCCCGACUGCAAACAUUGAGGAAAGCCAGGCAGUAGAGGCCGCU\
) } def
/len { sequence length } bind def

/coor [
[67.41057587 378.53356934]
[59.91101456 392.11798096]
[45.84477997 398.66934204]
[30.62062263 395.66857910]
[20.09254456 384.26947021]
[18.30880547 368.85528564]
[25.95528984 355.35302734]
[40.09176636 348.95462036]
[42.99255371 334.23776245]
[45.89334106 319.52093506]
[48.79412842 304.80407715]
[51.69491577 290.08724976]
[54.59570312 275.37039185]
[57.49649048 260.65356445]
[52.36652374 246.67025757]
[62.62652206 234.62687683]
[57.49655533 220.64358521]
[67.75655365 208.60020447]
[70.65734100 193.88336182]
[68.83773804 186.61003113]
[73.84873962 178.80027771]
[77.15750885 164.16975403]
[80.46627045 149.53924561]
[83.77503967 134.90872192]
[77.56262970 124.42660522]
[80.30139923 112.14067078]
[91.04317474 104.83585358]
[89.82289886 96.74351501]
[95.06788635 89.95345306]
[99.18462372 75.52942657]
[87.69615936 67.94793701]
[78.84651947 57.42740631]
[73.35794830 44.84138870]
[71.67413330 31.23138618]
[73.92433167 17.72066307]
[79.91353607 5.42152500]
[89.13930511 -4.65623665]
[100.83393097 -11.68826103]
[114.02828217 -15.10304260]
[127.63213348 -14.62836838]
[132.54412842 -28.80131340]
[137.45611572 -42.97425842]
[142.36810303 -57.14720154]
[147.28009033 -71.32014465]
[140.48759460 -78.68589783]
[136.94287109 -87.99489594]
[137.11384583 -97.89593506]
[140.93246460 -106.96908569]
[147.81066895 -113.92934418]
[156.73052979 -117.80857849]
[166.39480591 -118.09009552]
[172.84933472 -131.63037109]
[179.30386353 -145.17065430]
[185.75839233 -158.71092224]
[180.71464539 -173.44857788]
[187.45333862 -187.08839417]
[201.53453064 -191.80601501]
[207.98905945 -205.34628296]
[207.84460449 -212.18597412]
[210.81538391 -217.23954773]
[215.19711304 -219.44442749]
[222.39416504 -232.60505676]
[229.59121704 -245.76570129]
[228.67059326 -262.13897705]
[242.53631592 -270.89532471]
[256.92453003 -263.02697754]
[257.03387451 -246.62818909]
[242.75186157 -238.56864929]
[235.55480957 -225.40800476]
[228.35775757 -212.24737549]
[221.52932739 -198.89175415]
[215.07479858 -185.35147095]
[220.27655029 -171.44186401]
[213.92361450 -157.61814880]
[199.29866028 -152.25639343]
[192.84413147 -138.71611023]
[186.38960266 -125.17584229]
[179.93507385 -111.63556671]
[188.50860596 -93.21849823]
[180.87840271 -74.08296204]
[161.45303345 -66.40815735]
[156.54104614 -52.23521042]
[151.62905884 -38.06226730]
[146.71707153 -23.88932228]
[141.80508423 -9.71637821]
[154.69752502 0.31576842]
[163.43362427 14.14943695]
[166.96180725 30.15174484]
[164.84642029 46.42688751]
[157.32145691 61.04074478]
[145.26484680 72.25072479]
[130.09596252 78.71353149]
[113.60865021 79.64616394]
[109.49190521 94.07019043]
[105.57606506 108.55004120]
[110.99618530 126.07976532]
[98.40555573 138.21749878]
[95.09679413 152.84800720]
[91.78802490 167.47853088]
[88.47925568 182.10903931]
[85.37418365 196.78414917]
[82.47339630 211.50099182]
[87.39588165 226.53692627]
[77.34336090 237.52766418]
[82.26584625 252.56361389]
[72.21333313 263.55435181]
[69.31254578 278.27117920]
[66.41175842 292.98803711]
[63.51097107 307.70486450]
[60.61018372 322.42172241]
[57.70939636 337.13854980]
[54.80860901 351.85540771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[13 107]
[14 106]
[16 104]
[18 102]
[19 101]
[21 100]
[22 99]
[23 98]
[24 97]
[27 95]
[29 94]
[30 93]
[40 85]
[41 84]
[42 83]
[43 82]
[44 81]
[51 78]
[52 77]
[53 76]
[54 75]
[57 72]
[58 71]
[61 70]
[62 69]
[63 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
