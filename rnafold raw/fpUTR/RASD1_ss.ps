%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAAGCGGCCUGUGCCCAGAUCCUGGGAGAACCCCAGCCGAGCCCAGCCUAGCCCGAGCCCAGCCCGAGCGGAGCCGGAGCCCCAAGCCCGAGCCGCGCCCAGCCCGAGCAGAGCCCUCCAGCCGCUCACCCCGCGUGCCACCCCAGCGACCCUCAGCCGCUCUCUGCCCUUCUCUCGGCCCCGCGCCCGCCCUCGCGGCCCCUCUGCCCA\
) } def
/len { sequence length } bind def

/coor [
[-4.61903572 254.12239075]
[0.77419579 240.12277222]
[-6.15588045 254.34545898]
[-21.02353096 255.24111938]
[-33.34910202 263.78982544]
[-36.28829193 279.08685303]
[-48.90995407 287.58087158]
[-63.47521591 284.68453979]
[-68.74125671 292.14440918]
[-76.04392242 293.26654053]
[-88.49308777 301.63424683]
[-100.94225311 310.00192261]
[-104.10464478 325.25436401]
[-116.84906769 333.56304932]
[-131.37045288 330.45419312]
[-136.74493408 337.83636475]
[-144.06321716 338.85165405]
[-156.63331604 347.03656006]
[-154.76522827 362.14523315]
[-159.62246704 376.50817871]
[-170.19087219 387.29376221]
[-184.33601379 392.40020752]
[-199.23410034 390.86508179]
[-211.93565369 383.04614258]
[-224.50575256 391.23101807]
[-236.95492554 399.59872437]
[-249.28048706 408.14743042]
[-261.60604858 416.69613647]
[-273.93164062 425.24481201]
[-286.25720215 433.79351807]
[-290.51696777 449.26071167]
[-305.32171631 455.44122314]
[-319.31454468 447.59387207]
[-321.76132202 431.73849487]
[-310.78509521 420.03799438]
[-294.80590820 421.46795654]
[-282.48034668 412.91925049]
[-270.15475464 404.37054443]
[-257.82919312 395.82183838]
[-245.50361633 387.27316284]
[-243.78718567 382.81930542]
[-239.25631714 379.39511108]
[-232.69065857 378.66091919]
[-220.12054443 370.47601318]
[-222.13333130 355.69717407]
[-217.51083374 341.45141602]
[-207.11894226 330.58084106]
[-192.98013306 325.27856445]
[-177.87992859 326.64642334]
[-164.81822205 334.46646118]
[-152.24810791 326.28155518]
[-139.73814392 318.00503540]
[-137.13333130 303.38482666]
[-124.62730408 294.72146606]
[-109.30994415 297.55276489]
[-96.86077881 289.18505859]
[-84.41161346 280.81738281]
[-72.02391815 272.35894775]
[-69.63300323 257.70223999]
[-57.25489807 248.85707092]
[-41.89780426 251.46424866]
[-29.57223320 242.91555786]
[-23.52376366 229.30433655]
[-7.77450514 227.79721069]
[-3.59000540 218.40257263]
[7.50097132 215.08485413]
[18.14624786 204.51707458]
[28.79152489 193.94929504]
[39.35931015 183.30401611]
[49.84904099 172.58181763]
[60.33876801 161.85960388]
[70.67070770 150.98529053]
[80.84265900 139.96115112]
[91.01460266 128.93702698]
[101.18655396 117.91288757]
[86.40740204 109.22547150]
[86.54405212 93.59358215]
[78.08563232 81.20587921]
[69.53693390 68.88031006]
[60.89840698 56.61752319]
[52.25988388 44.35473633]
[44.76171494 39.14333725]
[43.58627319 31.84906387]
[35.12784958 19.46136475]
[19.69219208 15.08871460]
[13.62001801 0.23919469]
[21.56937599 -13.69591331]
[37.44220352 -16.02678871]
[49.06222153 -4.96538067]
[47.51554871 11.00294304]
[55.97397232 23.39064217]
[64.52267456 35.71621323]
[73.16119385 47.97900009]
[81.79971313 60.24178696]
[88.21967316 63.89860153]
[90.47332764 72.74745941]
[98.93175507 85.13515472]
[112.97428894 89.92350006]
[117.03031158 105.67873383]
[130.26879883 98.62591553]
[143.50729370 91.57308960]
[156.74578857 84.52027130]
[159.00744629 69.28245544]
[169.68316650 58.42508316]
[184.52943420 55.96495056]
[197.81846619 62.63875198]
[211.05696106 55.58592987]
[224.29545593 48.53310776]
[230.39559937 41.73830032]
[237.77931213 41.47555542]
[251.11944580 34.61692047]
[264.09152222 27.08530617]
[276.66162109 18.90040779]
[289.23171997 10.71550941]
[301.80181885 2.53061175]
[314.37191772 -5.65428591]
[326.94201660 -13.83918381]
[312.52267456 -17.97227478]
[305.13113403 -31.02466965]
[309.00335693 -45.51625061]
[321.92025757 -53.14212036]
[336.47933960 -49.53201675]
[344.33703613 -36.75483322]
[340.99081421 -22.13376236]
[354.22930908 -29.18658447]
[367.46780396 -36.23940659]
[376.00936890 -49.55676270]
[390.88000488 -48.71229553]
[404.11849976 -55.76512146]
[417.35699463 -62.81794357]
[416.56460571 -79.07070160]
[422.91720581 -93.98828125]
[435.09603882 -104.60343933]
[450.62905884 -108.82885742]
[466.39257812 -105.86739349]
[479.23941040 -96.36195374]
[492.37344360 -103.60746002]
[505.50747681 -110.85296631]
[505.12545776 -126.15370941]
[511.90823364 -139.87423706]
[524.29711914 -148.86166382]
[539.44525146 -151.05075073]
[553.87176514 -145.93847656]
[564.26141357 -134.69958496]
[568.22686768 -119.91669464]
[564.85687256 -104.98680878]
[554.92578125 -93.34070587]
[540.71569824 -87.65457916]
[525.49200439 -89.23504639]
[512.75299072 -97.71894073]
[499.61895752 -90.47343445]
[486.48492432 -83.22792816]
[487.93246460 -69.43194580]
[484.00057983 -56.08397675]
[475.25112915 -45.20820236]
[462.97912598 -38.46700668]
[449.02108765 -36.90688705]
[435.48028564 -40.79615021]
[424.40982056 -49.57944870]
[411.17132568 -42.52662659]
[397.93283081 -35.47380447]
[390.33816528 -22.66091156]
[374.52059937 -23.00091362]
[361.28210449 -15.94809151]
[348.04364014 -8.89526939]
[335.12692261 -1.26908267]
[322.55682373 6.91581535]
[309.98672485 15.10071278]
[297.41662598 23.28561020]
[284.84652710 31.47050858]
[272.27642822 39.65540695]
[286.97482300 42.64816666]
[296.40698242 54.31153870]
[296.25872803 69.31080627]
[286.59780884 80.78543854]
[271.84310913 83.48703003]
[258.74325562 76.17990875]
[253.29003906 62.20627975]
[257.97808838 47.95705032]
[244.63793945 54.81568527]
[231.34826660 61.77159882]
[218.10978699 68.82442474]
[204.87129211 75.87724304]
[202.99693298 90.62935638]
[192.67323303 101.57855988]
[177.70680237 104.38207245]
[163.79861450 97.75876617]
[150.56011963 104.81158447]
[137.32162476 111.86441040]
[124.08312988 118.91722870]
[112.21068573 128.08483887]
[102.03873444 139.10896301]
[91.86679077 150.13310242]
[81.69483948 161.15722656]
[79.87288666 167.50762939]
[75.73914337 171.40197754]
[71.06096649 172.34933472]
[60.57123947 183.07153320]
[50.08151245 193.79374695]
[46.31874466 202.11376953]
[39.35931015 204.59455872]
[28.71403313 215.16235352]
[18.06875610 225.73013306]
[32.81251526 222.96942139]
[47.45127106 226.24154663]
[59.61638260 235.01708984]
[67.33946991 247.87608337]
[69.37088776 262.73788452]
[65.38193512 277.19778442]
[56.01805878 288.91604614]
[42.79438400 295.99661255]
[27.85058022 297.29379272]
[13.60464001 292.59771729]
[2.36164427 282.66821289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 64]
[4 62]
[5 61]
[8 58]
[10 57]
[11 56]
[12 55]
[15 52]
[17 51]
[18 50]
[24 44]
[25 43]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[66 203]
[67 202]
[68 201]
[69 199]
[70 198]
[71 197]
[72 194]
[73 193]
[74 192]
[75 191]
[77 97]
[78 96]
[79 94]
[80 93]
[81 92]
[83 91]
[84 90]
[99 190]
[100 189]
[101 188]
[102 187]
[106 183]
[107 182]
[108 181]
[110 180]
[111 179]
[112 171]
[113 170]
[114 169]
[115 168]
[116 167]
[117 166]
[124 165]
[125 164]
[126 163]
[128 161]
[129 160]
[130 159]
[136 152]
[137 151]
[138 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
