%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUGGAUUCCACGCUUUCCCUCCAGAGGAAAGAAGCCCUCCAUCUAAAUCAGCUGUCUUCUCCACAUCCCUCCUUUUUCUCUCCGCCAGACGCCACCCCUACCCCUUCUAUUGUGUUGUGCCUUUUCAUUUUAGCCCCGCUUCCUACGUAGAGCCCUAACCUCCUUUGUAGCGAGGGCACUUGAGAAUUUCUGAACCUCGAGUUGUA\
) } def
/len { sequence length } bind def

/coor [
[70.31658936 122.85585785]
[59.02051544 132.72494507]
[47.72444153 142.59402466]
[36.42837143 152.46310425]
[25.43259239 162.66569519]
[14.74695110 173.19265747]
[4.06130934 183.71963501]
[-6.62433195 194.24659729]
[-17.30997276 204.77355957]
[-12.46679211 219.20634460]
[-14.36256790 234.24937439]
[-22.56814384 246.92568970]
[-35.41102982 254.75009155]
[-50.31604004 256.21640015]
[-64.32160187 251.08711243]
[-75.00724030 261.61407471]
[-85.69288635 272.14105225]
[-96.37852478 282.66802979]
[-107.06417084 293.19497681]
[-111.54367828 312.84890747]
[-130.45063782 316.89819336]
[-140.81657410 327.74011230]
[-151.18251038 338.58203125]
[-154.54264832 354.63323975]
[-170.20576477 359.49111938]
[-182.05899048 348.15826416]
[-177.90873718 332.29299927]
[-162.02442932 328.21609497]
[-151.65849304 317.37417603]
[-141.29255676 306.53225708]
[-142.43975830 296.37762451]
[-137.70846558 287.07263184]
[-128.44590759 281.79949951]
[-117.59113312 282.50933838]
[-106.90549469 271.98236084]
[-96.21985626 261.45541382]
[-85.53421021 250.92843628]
[-74.84857178 240.40147400]
[-79.76777649 226.32073975]
[-78.07865143 211.43933105]
[-70.06300354 198.71493530]
[-57.26536560 190.69990540]
[-42.19564819 189.02937317]
[-27.83694267 194.08792114]
[-17.15130043 183.56095886]
[-6.46565914 173.03398132]
[4.21998215 162.50701904]
[14.90562344 151.98005676]
[15.06103420 149.18038940]
[16.33522606 146.27363586]
[18.77453613 143.68637085]
[22.27010155 141.85408020]
[26.55928993 141.16702271]
[37.85536194 131.29794312]
[49.15143204 121.42886353]
[60.44750595 111.55978394]
[45.80278015 114.80509186]
[31.15805435 118.05039978]
[17.05165672 123.15036011]
[2.23047423 125.45958710]
[-12.75881767 124.89292145]
[-27.36334419 121.47125244]
[-41.04442215 115.32079315]
[-53.29742813 106.66840363]
[-63.67041397 95.83322906]
[-71.78077698 83.21490479]
[-77.32936859 69.27886963]
[-80.11152649 54.53913879]
[-80.02463531 39.53939056]
[-77.07189941 24.83288383]
[-71.36223602 10.96206188]
[-63.10622787 -1.56145251]
[-52.60840988 -12.27573395]
[-40.25598907 -20.78558922]
[-26.50457382 -26.77713585]
[-11.86138725 -30.02937508]
[3.13346434 -30.42235184]
[17.92689896 -27.94157028]
[31.97326660 -22.67853355]
[44.75447083 -14.82736683]
[55.79907990 -4.67765713]
[64.69972229 7.39622498]
[71.12808990 20.94894028]
[74.84708405 35.48059845]
[75.71949768 50.45579910]
[82.91088104 63.61953735]
[90.10226440 76.78327942]
[90.10226440 61.78327560]
[79.20771027 50.65015030]
[79.42139435 35.43801880]
[90.10226440 25.12033653]
[90.10226440 10.12033653]
[90.10226440 -4.87966347]
[90.10226440 -19.87966347]
[90.10226440 -34.87966156]
[75.65323639 -39.32004929]
[63.15590286 -47.82346344]
[53.72151566 -59.63378525]
[48.18897629 -73.70085144]
[47.05023193 -88.77383423]
[50.40653992 -103.51244354]
[57.95945740 -116.60613251]
[69.03739166 -126.89063263]
[82.65528870 -133.45143127]
[97.60226440 -135.70516968]
[112.54924011 -133.45143127]
[126.16714478 -126.89063263]
[137.24507141 -116.60613251]
[144.79798889 -103.51244354]
[148.15429688 -88.77383423]
[147.01556396 -73.70085144]
[141.48301697 -59.63378525]
[132.04862976 -47.82346344]
[119.55129242 -39.32004929]
[105.10226440 -34.87966156]
[105.10226440 -19.87966347]
[105.10226440 -4.87966347]
[105.10226440 10.12033653]
[105.10226440 25.12033653]
[115.78314209 35.43801880]
[115.99681854 50.65015030]
[105.10226440 61.78327560]
[105.10226440 76.78327942]
[112.29364777 63.61953735]
[119.48503113 50.45579910]
[123.21770477 35.92764664]
[133.76185608 25.25895882]
[148.24517822 21.35596275]
[162.72230530 25.28186417]
[173.24955750 35.96722031]
[176.95924377 50.50125885]
[172.84080505 64.92479706]
[162.01614380 75.30875397]
[147.43240356 78.82442474]
[134.16256714 85.81808472]
[120.89271545 92.81173706]
[135.89103699 93.03613281]
[150.88935852 93.26052094]
[165.88768005 93.48490906]
[180.88726807 93.59710693]
[195.88726807 93.59710693]
[210.88726807 93.59710693]
[225.88726807 93.59710693]
[229.56936646 91.29248810]
[233.40731812 90.37246704]
[236.94654846 90.71594238]
[239.81857300 92.06659698]
[241.77761841 94.07269287]
[256.75076294 94.96974945]
[271.72390747 95.86681366]
[284.59606934 84.02139282]
[301.71557617 85.12826538]
[312.52087402 98.01517487]
[327.50576782 98.68814850]
[342.49066162 99.36112213]
[352.93566895 87.72343445]
[368.42477417 85.57356262]
[381.64447021 93.92662048]
[386.35284424 108.83853149]
[380.32675171 123.26836395]
[366.41149902 130.40278625]
[351.17745972 126.87313843]
[341.81768799 114.34601593]
[326.83279419 113.67304230]
[311.84790039 113.00007629]
[303.64654541 122.93882751]
[291.02987671 126.39048767]
[278.54525757 121.87870026]
[270.82684326 110.83996582]
[255.85369873 109.94290161]
[240.88055420 109.04584503]
[225.88726807 108.59710693]
[210.88726807 108.59710693]
[195.88726807 108.59710693]
[180.88726807 108.59710693]
[174.19793701 111.74087524]
[165.66329956 108.48323059]
[150.66497803 108.25884247]
[135.66665649 108.03445435]
[120.66832733 107.81005859]
[112.97483826 120.68679047]
[120.27967072 133.78791809]
[127.58450317 146.88903809]
[134.88934326 159.99015808]
[142.19416809 173.09127808]
[149.49900818 186.19241333]
[156.80383301 199.29353333]
[172.10269165 198.84233093]
[185.85374451 205.56295776]
[194.89712524 217.91107178]
[197.15470886 233.04916382]
[192.10772705 247.49861145]
[180.91593933 257.93905640]
[166.15113831 261.97131348]
[151.20616150 258.66882324]
[139.51525879 248.79051208]
[133.76492310 234.60627747]
[135.27651978 219.37561035]
[143.70271301 206.59835815]
[136.39787292 193.49723816]
[129.09304810 180.39611816]
[121.78821564 167.29499817]
[114.48338318 154.19386292]
[107.17855072 141.09274292]
[99.87371826 127.99162292]
[92.48443604 126.70767975]
[94.60887146 141.55647278]
[81.14323425 148.16529846]
[70.69689178 137.40083313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 48]
[6 47]
[7 46]
[8 45]
[9 44]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[21 30]
[22 29]
[23 28]
[87 123]
[88 122]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[136 180]
[137 179]
[138 178]
[139 177]
[140 175]
[141 174]
[142 173]
[143 172]
[148 171]
[149 170]
[150 169]
[153 165]
[154 164]
[155 163]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
