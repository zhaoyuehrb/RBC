%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUUCCAGGAGGCGGGAGGCGCCCGCUGUCGAGGCAGCUGAGCCCCGGCAACCGCUGCUCUCCGCCUCUCCCCUCGCGGGGCCGGCUCAUGGAGCGCAGGGACCGGGCUGGCUCUCGCCGAGCCCCGGGCCUCUUUUAGCCUCGUCCCCAGAGAGGGAGGAGCCGGUGCCCGGCACAGCCCCGCCGGCCCUAGAAGCUCCCCACGCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[401.35803223 17.94058228]
[387.09216309 22.57583618]
[372.82632446 27.21109200]
[358.56048584 31.84634590]
[355.63366699 35.61683655]
[350.30841064 37.59050369]
[343.80960083 36.40201187]
[329.41439819 40.61843872]
[322.51507568 53.76890945]
[307.97634888 58.25003052]
[294.22970581 50.92421722]
[279.83450317 55.14064407]
[265.43930054 59.35707474]
[251.04411316 63.57350159]
[241.00492859 74.57640839]
[225.58625793 71.03023529]
[211.19107056 75.24666595]
[196.79586792 79.46309662]
[182.40066528 83.67951965]
[168.00546265 87.89595032]
[153.61027527 92.11238098]
[139.21507263 96.32881165]
[124.81987000 100.54523468]
[124.73878479 113.63993073]
[117.49002075 126.40707397]
[103.61107635 134.91162109]
[85.75248718 135.79028320]
[73.30332184 144.15797424]
[60.85415268 152.52566528]
[48.40498734 160.89337158]
[35.95582199 169.26106262]
[29.23285294 184.21879578]
[12.89248085 185.60597229]
[3.74427962 171.99559021]
[11.19913387 157.38883972]
[27.58812904 156.81188965]
[40.03729630 148.44419861]
[52.48646164 140.07650757]
[64.93562317 131.70881653]
[77.38478851 123.34111786]
[75.01511383 116.22531891]
[67.90607452 94.87791443]
[52.92568970 95.64471436]
[37.94530106 96.41151428]
[22.96491432 97.17831421]
[12.40327358 108.62774658]
[-2.79989314 109.19198608]
[-13.65009022 99.05252075]
[-28.63047791 99.81932068]
[-43.61086655 100.58612061]
[-59.12020111 107.43424988]
[-69.99411011 94.42677307]
[-60.50517654 80.37699127]
[-44.37766266 85.60572815]
[-29.39727592 84.83892822]
[-14.41688824 84.07212830]
[-4.65870237 72.87778473]
[10.52261829 71.88674164]
[22.19811440 82.19792938]
[37.17850113 81.43112946]
[52.15888977 80.66432953]
[67.13928223 79.89752960]
[88.20121765 68.15921021]
[109.02330780 72.02817535]
[120.60344696 86.15003967]
[134.99864197 81.93360901]
[149.39384460 77.71717834]
[163.78904724 73.50075531]
[178.18423462 69.28432465]
[192.57943726 65.06789398]
[206.97463989 60.85146713]
[221.36982727 56.63504028]
[232.43865967 45.33054733]
[246.82768250 49.17830276]
[261.22290039 44.96187592]
[275.61807251 40.74544525]
[290.01327515 36.52901840]
[297.63510132 22.94426727]
[312.29394531 18.87327385]
[325.19796753 26.22324181]
[339.59317017 22.00681305]
[353.92523193 17.58049965]
[368.19107056 12.94524384]
[382.45690918 8.30998898]
[396.72274780 3.67473435]
[410.84707642 -1.37538886]
[424.81781006 -6.83606768]
[438.78851318 -12.29674625]
[448.82501221 -24.52700996]
[463.49566650 -21.95393562]
[470.43087769 -39.58646774]
[487.75610352 -46.43006516]
[504.29177856 -38.57087326]
[518.09698486 -44.43744659]
[531.90216064 -50.30401611]
[545.70733643 -56.17058563]
[559.51251221 -62.03715897]
[565.92956543 -79.86480713]
[583.04742432 -87.21172333]
[599.80566406 -79.83905792]
[613.43353271 -86.10651398]
[627.06140137 -92.37396240]
[640.68927002 -98.64141846]
[647.17596436 -105.06828308]
[654.56237793 -104.89926147]
[668.28039551 -110.96691895]
[681.99841309 -117.03458405]
[695.71636963 -123.10224152]
[699.08428955 -138.13432312]
[710.52404785 -148.18344116]
[725.51031494 -149.55331421]
[738.27673340 -141.92727661]
[751.99475098 -147.99493408]
[765.71276855 -154.06259155]
[779.43072510 -160.13024902]
[782.80902100 -173.16685486]
[792.93035889 -181.75291443]
[805.95581055 -182.92541504]
[817.11077881 -176.47949219]
[830.91601562 -182.34606934]
[844.72119141 -188.21264648]
[858.52636719 -194.07920837]
[868.20123291 -206.59751892]
[882.94079590 -204.45422363]
[896.74603271 -210.32078552]
[906.42083740 -222.83909607]
[921.16046143 -220.69580078]
[934.96563721 -226.56236267]
[948.77081299 -232.42893982]
[962.57598877 -238.29551697]
[973.30944824 -253.25967407]
[990.63281250 -250.44651794]
[1004.35083008 -256.51419067]
[1018.06878662 -262.58184814]
[1031.78674316 -268.64950562]
[1045.50476074 -274.71716309]
[1059.22277832 -280.78482056]
[1072.94079590 -286.85247803]
[1075.37170410 -290.44207764]
[1078.50280762 -292.83273315]
[1081.87170410 -293.95150757]
[1085.03991699 -293.88296509]
[1087.64196777 -292.84771729]
[1101.69091797 -298.10366821]
[1115.73999023 -303.35964966]
[1120.78601074 -318.16070557]
[1134.19213867 -326.21118164]
[1149.62829590 -323.70989990]
[1159.80615234 -311.83786011]
[1159.92004395 -296.20068359]
[1149.91601562 -284.18176270]
[1134.51782227 -281.45608521]
[1120.99597168 -289.31063843]
[1106.94689941 -284.05465698]
[1092.89794922 -278.79870605]
[1079.00842285 -273.13446045]
[1065.29040527 -267.06680298]
[1051.57250977 -260.99914551]
[1037.85449219 -254.93148804]
[1024.13647461 -248.86383057]
[1010.41845703 -242.79617310]
[996.70043945 -236.72851562]
[992.04815674 -225.56442261]
[980.67169189 -220.39624023]
[968.44256592 -224.49032593]
[954.63739014 -218.62374878]
[940.83221436 -212.75717163]
[927.02697754 -206.89060974]
[918.33959961 -194.79191589]
[902.61254883 -196.51559448]
[888.80737305 -190.64903259]
[880.11999512 -178.55033875]
[864.39294434 -180.27401733]
[850.58776855 -174.40744019]
[836.78259277 -168.54087830]
[822.97735596 -162.67430115]
[817.35449219 -146.82289124]
[801.69799805 -139.80593872]
[785.49841309 -146.41224670]
[771.78039551 -140.34458923]
[758.06237793 -134.27693176]
[744.34442139 -128.20927429]
[741.39819336 -113.63333130]
[730.30279541 -103.46691895]
[715.17169189 -101.76337433]
[701.78405762 -109.38423920]
[688.06604004 -103.31658173]
[674.34802246 -97.24892426]
[660.63006592 -91.18125916]
[646.95672607 -85.01354218]
[633.32885742 -78.74608612]
[619.70098877 -72.47863770]
[606.07312012 -66.21118164]
[604.52874756 -54.91071701]
[597.65093994 -45.66246414]
[587.05487061 -40.83193207]
[575.32366943 -41.72381973]
[565.37908936 -48.23196411]
[551.57391357 -42.36539459]
[537.76873779 -36.49882126]
[523.96350098 -30.63225174]
[510.15832520 -24.76568222]
[508.28442383 -13.51516533]
[501.13934326 -4.47182989]
[490.40664673 0.04702282]
[478.70654297 -1.18727028]
[468.95635986 -7.98321724]
[459.91912842 3.85646224]
[444.24920654 1.67397285]
[430.27847290 7.13465166]
[416.30776978 12.59533024]
[415.06072998 15.10271072]
[412.74682617 17.26798439]
[409.49114990 18.68289185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 85]
[2 84]
[3 83]
[4 82]
[7 81]
[8 80]
[11 77]
[12 76]
[13 75]
[14 74]
[16 72]
[17 71]
[18 70]
[19 69]
[20 68]
[21 67]
[22 66]
[23 65]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[42 62]
[43 61]
[44 60]
[45 59]
[48 56]
[49 55]
[50 54]
[86 211]
[87 210]
[88 209]
[90 207]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
[100 193]
[101 192]
[102 191]
[103 190]
[105 189]
[106 188]
[107 187]
[108 186]
[112 182]
[113 181]
[114 180]
[115 179]
[119 176]
[120 175]
[121 174]
[122 173]
[124 171]
[125 170]
[127 168]
[128 167]
[129 166]
[130 165]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[143 155]
[144 154]
[145 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
