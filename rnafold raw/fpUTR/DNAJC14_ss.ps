%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGUAGGCCCAGGUCGCCGGCGGCCGCGGGGACGGAAGGCGGAAGCAGAGCGUGAGCGGGAGGCGGAGCCGGGAGAGCGGCUCUCGUAGCUCACCCUGGCCCCAGGCCGGGCGGCUCGAGGGGGAGGAGUUACCGCCGUUCUUCGGCAUCAGAACACACCAUGAUGGCUGUGACCUAAGACCCUCAGGAAGCCCCGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[85.97666168 248.53349304]
[81.21066284 243.96281433]
[78.06796265 238.09657288]
[76.88492584 231.49514771]
[77.80898285 224.80047607]
[80.78108215 218.67358398]
[85.53836060 213.72938538]
[81.45292664 199.29646301]
[77.36749268 184.86354065]
[73.28206635 170.43061829]
[73.95498657 77.66454315]
[60.88866043 70.29765320]
[47.82233429 62.93075562]
[27.69815254 64.05088043]
[18.58249855 47.00137329]
[5.29655075 40.03835678]
[-7.98939610 33.07534027]
[-21.27534294 26.11232185]
[-34.56129074 19.14930344]
[-47.84723663 12.18628597]
[-61.13318253 5.22326803]
[-67.75138855 5.11133146]
[-72.59062958 2.12019944]
[-74.71474457 -2.16215014]
[-87.78106689 -9.52904415]
[-100.84739685 -16.89593697]
[-113.91371918 -24.26283264]
[-126.98004913 -31.62972641]
[-139.59407043 -28.92238235]
[-150.32666016 -35.33107758]
[-153.70164490 -46.95038223]
[-166.65353394 -54.51664352]
[-179.60543823 -62.08290482]
[-192.55734253 -69.64916229]
[-208.37606812 -69.92935944]
[-215.46272278 -83.03006744]
[-228.41462708 -90.59632874]
[-241.36653137 -98.16259003]
[-248.57711792 -90.63423157]
[-259.50216675 -86.49787903]
[-272.41445923 -87.48728180]
[-284.83035278 -94.43227386]
[-299.59802246 -91.80239868]
[-311.78720093 -80.83170319]
[-327.29687500 -86.15911865]
[-330.17205811 -102.30425262]
[-317.45498657 -112.65837860]
[-302.22790527 -106.57006073]
[-287.46023560 -109.19992828]
[-285.30715942 -116.38423920]
[-300.30322266 -116.03964996]
[-305.26480103 -130.19531250]
[-293.33505249 -139.28823853]
[-281.00103760 -130.75286865]
[-278.84799194 -137.93717957]
[-289.73519897 -148.25553894]
[-300.62240601 -158.57391357]
[-311.50961304 -168.89228821]
[-322.39682007 -179.21064758]
[-333.28399658 -189.52902222]
[-341.45297241 -187.75999451]
[-349.56329346 -189.34819031]
[-356.30648804 -193.96170044]
[-360.62472534 -200.78675842]
[-361.87643433 -208.67047119]
[-359.93081665 -216.31526184]
[-370.16546631 -227.28120422]
[-380.40011597 -238.24716187]
[-390.71847534 -249.13436890]
[-401.11996460 -259.94219971]
[-411.52145386 -270.75000000]
[-421.92294312 -281.55783081]
[-432.32443237 -292.36566162]
[-442.72592163 -303.17349243]
[-458.53012085 -303.22558594]
[-469.60910034 -314.49639893]
[-469.38992310 -330.29919434]
[-458.00259399 -341.25839233]
[-442.20300293 -340.87213135]
[-431.36480713 -329.36956787]
[-431.91809082 -313.57498169]
[-421.51660156 -302.76715088]
[-411.11511230 -291.95932007]
[-400.71362305 -281.15148926]
[-390.31213379 -270.34365845]
[-379.91064453 -259.53585815]
[-373.00405884 -256.89505005]
[-369.43417358 -248.48179626]
[-359.19952393 -237.51585388]
[-348.96487427 -226.54989624]
[-327.74301147 -222.30715942]
[-322.96563721 -200.41622925]
[-312.07843018 -190.09785461]
[-301.19122314 -179.77947998]
[-290.30401611 -169.46112061]
[-279.41680908 -159.14274597]
[-268.52960205 -148.82438660]
[-237.24943542 -137.70545959]
[-233.80026245 -111.11448669]
[-220.84835815 -103.54822540]
[-207.89646912 -95.98197174]
[-193.00415039 -96.24295807]
[-184.99107361 -82.60106659]
[-172.03918457 -75.03480530]
[-159.08728027 -67.46854401]
[-146.13537598 -59.90228271]
[-128.60942078 -60.76054001]
[-119.61315155 -44.69605255]
[-106.54682922 -37.32915878]
[-93.48049927 -29.96226311]
[-80.41417694 -22.59536934]
[-67.34784698 -15.22847652]
[-54.17016602 -8.06267929]
[-40.88422012 -1.09966099]
[-27.59827232 5.86335707]
[-14.31232452 12.82637501]
[-1.02637804 19.78939247]
[12.25956917 26.75241089]
[25.54551506 33.71542740]
[34.99150085 29.80324173]
[45.24638367 31.78021622]
[52.87553024 39.23024368]
[55.18922806 49.86442947]
[68.25555420 57.23132324]
[81.32187653 64.59822083]
[96.26863098 63.33541489]
[107.91375732 53.88072968]
[106.94742584 38.39377213]
[115.29705048 25.31465149]
[129.75202942 19.67255592]
[144.75411987 23.63698578]
[154.53472900 35.68353653]
[155.33299255 51.18006516]
[146.84197998 64.16783905]
[132.32664490 69.65279388]
[117.36843872 65.52585602]
[105.72331238 74.98053741]
[112.78792572 88.21274567]
[127.12313080 83.79664612]
[141.45834351 79.38054657]
[155.79354858 74.96445465]
[164.53593445 61.51268387]
[180.51704407 60.10420227]
[191.47752380 71.81947327]
[189.00942993 87.67153931]
[175.00607300 95.50005341]
[160.20964050 89.29965210]
[145.87443542 93.71575165]
[131.53923035 98.13185120]
[117.20402527 102.54795074]
[116.85933685 110.04002380]
[131.84349060 110.72940063]
[146.30729675 106.75469971]
[154.55700684 119.28236389]
[145.19177246 130.99954224]
[131.15411377 125.71354675]
[116.16996765 125.02416992]
[115.82527924 132.51625061]
[129.69444275 138.22993469]
[143.56359863 143.94363403]
[157.43276978 149.65733337]
[171.34530640 155.26458740]
[185.30039978 160.76507568]
[199.25549316 166.26556396]
[216.20845032 166.44860840]
[220.72560120 182.78971863]
[206.27359009 191.65400696]
[193.75500488 180.22065735]
[179.79991150 174.72016907]
[165.84481812 169.21968079]
[158.46565247 169.69175720]
[151.71907043 163.52648926]
[137.84991455 157.81280518]
[123.98074341 152.09910583]
[110.11157990 146.38540649]
[104.51243591 151.37535095]
[87.71498871 166.34518433]
[91.80041504 180.77810669]
[95.88584900 195.21102905]
[99.97128296 209.64395142]
[118.54891205 224.59971619]
[112.31398010 246.86784363]
[117.70737457 260.86468506]
[123.10077667 274.86151123]
[128.49417114 288.85833740]
[133.88757324 302.85516357]
[139.28097534 316.85198975]
[150.73507690 322.78887939]
[154.93766785 334.56164551]
[150.14874268 345.67312622]
[155.32701111 359.75097656]
[168.26484680 369.82791138]
[165.73918152 386.03140259]
[150.34822083 391.69268799]
[137.92485046 380.98791504]
[141.24917603 364.92922974]
[136.07090759 350.85140991]
[122.00375366 340.36279297]
[125.28414154 322.24539185]
[119.89073944 308.24856567]
[114.49734497 294.25173950]
[109.10394287 280.25491333]
[103.71054840 266.25808716]
[98.31714630 252.26124573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 180]
[8 179]
[9 178]
[10 177]
[11 125]
[12 124]
[13 123]
[15 119]
[16 118]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[24 112]
[25 111]
[26 110]
[27 109]
[28 108]
[31 106]
[32 105]
[33 104]
[34 103]
[36 101]
[37 100]
[38 99]
[42 49]
[43 48]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[60 92]
[66 90]
[67 89]
[68 88]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[126 137]
[127 136]
[138 150]
[139 149]
[140 148]
[141 147]
[158 175]
[159 174]
[160 173]
[161 172]
[162 170]
[163 169]
[164 168]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
