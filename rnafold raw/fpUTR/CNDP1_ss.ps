%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUGAGCUGAAUGAAUACCUCCGAAGCCGCUUUGUUCUCCAGAUGUGAAUAGCUCCACUAUACCAGCCUCGUCUUCCUUCCGGGGGACAACGUGGGUCAGGGCACAGAGAGAUAUUUAAUGUCACCCUCUUGGGGCUUUCAUGGGACUCCCUCUGCCACAUUUUUUGGAGGUUGGGAAAGUUGCUAGAGGCUUCAGAACUCCAGCCUA\
) } def
/len { sequence length } bind def

/coor [
[146.75189209 879.87396240]
[132.55093384 885.46820068]
[117.32969666 884.33831787]
[104.11035919 876.70867920]
[95.51762390 864.09405518]
[93.25759888 848.99920654]
[97.77900696 834.42114258]
[108.18411255 823.25439453]
[122.40699005 817.71612549]
[123.51737976 802.75726318]
[124.62777710 787.79840088]
[125.73817444 772.83959961]
[111.14103699 758.53082275]
[111.86357117 737.80877686]
[127.86935425 724.16998291]
[128.09162903 709.17163086]
[128.31390381 694.17327881]
[128.53617859 679.17492676]
[120.33835602 670.28051758]
[120.40032196 657.78381348]
[129.23425293 648.38641357]
[129.67875671 633.39300537]
[130.12324524 618.39959717]
[130.56774902 603.40618896]
[122.91976929 596.63104248]
[120.20611572 586.55310059]
[123.55578613 576.43682861]
[132.09219360 569.69757080]
[132.98080444 554.72393799]
[133.86941528 539.75024414]
[126.89967346 526.58697510]
[135.44091797 513.26940918]
[136.32952881 498.29574585]
[137.21813965 483.32208252]
[138.10673523 468.34844971]
[138.99534607 453.37478638]
[132.02560425 440.21148682]
[140.56684875 426.89392090]
[141.12243652 411.90420532]
[141.34471130 396.90585327]
[141.56698608 381.90750122]
[141.78926086 366.90914917]
[142.01153564 351.91079712]
[142.23381042 336.91244507]
[142.45608521 321.91409302]
[142.67835999 306.91574097]
[131.51333618 289.25006104]
[140.01667786 271.71469116]
[135.84889221 257.30532837]
[131.68110657 242.89598083]
[127.51331329 228.48661804]
[123.34552765 214.07727051]
[118.46769714 208.52568054]
[119.22444153 199.42344666]
[115.27062988 184.95390320]
[111.31682587 170.48437500]
[107.36302185 156.01484680]
[103.40921021 141.54530334]
[99.45540619 127.07577515]
[95.50159454 112.60623932]
[56.49224854 100.65240479]
[46.86936951 89.14588165]
[31.36995316 87.59477234]
[21.77489853 75.78843689]
[23.34915924 61.02167511]
[13.72627831 49.51514816]
[4.10339737 38.00862122]
[-10.68506050 32.38615799]
[-12.91463184 17.65937042]
[-22.53751373 6.15284348]
[-37.91487885 7.07092762]
[-50.73443222 -1.14566469]
[-56.19306183 -15.16947937]
[-52.39268875 -29.54637527]
[-62.01556778 -41.05290222]
[-71.63845062 -52.55942917]
[-81.26132965 -64.06595612]
[-90.88420868 -75.57247925]
[-100.50709534 -87.07901001]
[-110.12997437 -98.58553314]
[-125.70838928 -103.70852661]
[-128.79563904 -119.81445312]
[-116.21582031 -130.33493042]
[-100.90998077 -124.44738007]
[-98.62345123 -108.20841980]
[-89.00056458 -96.70188904]
[-79.37768555 -85.19536591]
[-69.75480652 -73.68883514]
[-60.13192368 -62.18231201]
[-50.50904083 -50.67578506]
[-40.88616180 -39.16925812]
[-26.06373024 -40.36656570]
[-13.22664165 -32.51334381]
[-7.40727425 -18.44250870]
[-11.03098679 -3.47003770]
[-1.40810561 8.03648853]
[12.69205952 12.83592701]
[15.60992432 28.38573837]
[25.23280525 39.89226532]
[34.85568619 51.39879227]
[49.66805649 52.46145248]
[59.59094238 63.99362564]
[58.37589264 79.52299500]
[67.99877930 91.02952576]
[75.43935394 90.08731842]
[73.55519104 75.20612335]
[88.43641663 73.32221222]
[90.32051849 88.20291138]
[97.76110077 87.26070404]
[104.21208191 73.71874237]
[110.66305542 60.17677307]
[117.11403656 46.63480377]
[114.61783600 26.63101387]
[131.01011658 16.37445641]
[137.05697632 2.64727139]
[143.10382080 -11.07991314]
[149.15068054 -24.80709648]
[155.19752502 -38.53428268]
[156.04937744 -55.46681595]
[172.55598450 -59.33565140]
[180.84312439 -44.54512024]
[168.92471313 -32.48743057]
[162.87785339 -18.76024628]
[156.83100891 -5.03306150]
[150.78416443 8.69412327]
[144.73730469 22.42130661]
[149.27833557 31.57406044]
[148.00549316 41.93303680]
[141.09939575 50.04880905]
[130.65600586 53.08578110]
[124.20502472 66.62774658]
[117.75404358 80.16971588]
[111.30307007 93.71168518]
[109.97113037 108.65243530]
[113.92493439 123.12196350]
[117.87874603 137.59150696]
[121.83255005 152.06103516]
[125.78636169 166.53056335]
[129.74017334 181.00010681]
[133.69396973 195.46963501]
[137.75488281 209.90946960]
[141.92266846 224.31883240]
[146.09045410 238.72819519]
[150.25823975 253.13754272]
[154.42602539 267.54690552]
[167.50804138 274.88592529]
[181.97756958 270.93209839]
[196.44711304 266.97830200]
[210.13235474 256.97079468]
[223.53721619 267.35086060]
[217.27363586 283.10534668]
[200.40090942 281.44784546]
[185.93138123 285.40164185]
[171.46185303 289.35543823]
[186.05561829 292.82272339]
[200.96801758 291.20401001]
[215.00891113 296.48165894]
[225.16300964 307.52221680]
[229.24969482 321.95480347]
[226.39138794 336.67993164]
[217.20188904 348.53543091]
[203.65463257 354.97534180]
[188.65892029 354.61663818]
[175.43508911 347.53637695]
[166.82293701 335.25503540]
[164.67224121 320.40689087]
[157.67671204 307.13803101]
[157.45443726 322.13638306]
[157.23216248 337.13473511]
[157.00988770 352.13308716]
[156.78761292 367.13143921]
[156.56533813 382.12979126]
[156.34306335 397.12814331]
[156.12078857 412.12649536]
[158.66416931 416.68307495]
[159.15669250 421.29815674]
[157.91937256 425.18093872]
[155.54051208 427.78253174]
[162.44668579 442.01684570]
[153.96900940 454.26339722]
[153.08039856 469.23706055]
[152.19178772 484.21069336]
[151.30317688 499.18435669]
[150.41456604 514.15802002]
[157.32075500 528.39233398]
[148.84306335 540.63885498]
[147.95445251 555.61254883]
[147.06584167 570.58618164]
[156.89703369 588.18536377]
[145.56115723 603.85064697]
[145.11666870 618.84405518]
[144.67216492 633.83746338]
[144.22766113 648.83093262]
[153.33192444 664.83734131]
[143.53453064 679.39721680]
[143.31225586 694.39556885]
[143.08998108 709.39392090]
[142.86770630 724.39227295]
[151.34945679 729.09936523]
[157.49768066 736.52746582]
[160.50047302 745.62951660]
[159.98547363 755.14221191]
[156.06549072 763.76147461]
[149.31727600 770.32098389]
[140.69702148 773.94995117]
[139.58662415 788.90881348]
[138.47622681 803.86767578]
[137.36582947 818.82647705]
[150.61511230 826.40405273]
[159.25744629 838.98468018]
[161.57690430 854.07055664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[15 198]
[16 197]
[17 196]
[18 195]
[21 193]
[22 192]
[23 191]
[24 190]
[28 188]
[29 187]
[30 186]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[38 178]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[48 145]
[49 144]
[50 143]
[51 142]
[52 141]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 104]
[62 103]
[65 100]
[66 99]
[67 98]
[69 96]
[70 95]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[109 133]
[110 132]
[111 131]
[112 130]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
