%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCUCUACUUCCUGCAAUGAAGCUCCCUGGAGGAGUCAUCAGAUUCUCAAUCUUGCUUGAAGACUGACAAGAUGUCCCUGUGGACUCCCAAACUCUACUCCAGAUGGGGAGGUGCCCUUAACACCAAGAUUUUAAAAGCUCCAAUUUCAGAGCAAGAGUCGAAAACUCACAGAUAAAGUUAUAGUUAUUUCAGGGUUCUGAAAAGACGCAGAAC\
) } def
/len { sequence length } bind def

/coor [
[178.57322693 270.40600586]
[170.56129456 283.25463867]
[158.80995178 292.80371094]
[144.59388733 298.01739502]
[129.45516968 298.33010864]
[115.03591919 293.70800781]
[102.90023041 284.65240479]
[94.36450195 272.14562988]
[90.35461426 257.54425049]
[91.30552673 242.43220520]
[97.11410522 228.44866943]
[107.15027618 217.11050415]
[120.32537842 209.64756775]
[135.21029663 206.86940002]
[137.37431335 192.02632141]
[139.53834534 177.18324280]
[141.70237732 162.34017944]
[120.42780304 168.41532898]
[99.37191772 167.79440308]
[80.49715424 161.16041565]
[65.38274384 149.72970581]
[55.09309387 135.08796692]
[50.10807800 118.99861908]
[50.31908417 103.20484924]
[55.08781052 89.24681091]
[41.26098633 83.43140411]
[27.43416023 77.61600494]
[13.60733509 71.80059814]
[-0.30222940 66.18597412]
[-14.29161930 60.77330780]
[-28.28100777 55.36063766]
[-42.27039719 49.94797134]
[-56.25978851 44.53530121]
[-70.24917603 39.12263489]
[-85.24917603 39.12263489]
[-99.23856354 44.53530121]
[-113.22795868 49.94797134]
[-127.21734619 55.36063766]
[-141.20674133 60.77330780]
[-151.06617737 73.87763214]
[-167.30960083 71.62294006]
[-173.22714233 56.32867050]
[-162.73135376 43.72825241]
[-146.61940002 46.78392029]
[-132.63002014 41.37125015]
[-118.64062500 35.95858002]
[-104.65123749 30.54591179]
[-90.66184235 25.13324356]
[-91.04171753 17.64286995]
[-104.39543152 10.81072521]
[-91.80145264 2.66212225]
[-92.18132019 -4.82825136]
[-106.64652252 -8.79786682]
[-121.11173248 -12.76748180]
[-135.57693481 -16.73709679]
[-150.04214478 -20.70671082]
[-164.50733948 -24.67632675]
[-179.00090027 -28.54113007]
[-190.25830078 -17.99245071]
[-205.43577576 -15.22702217]
[-219.69027710 -21.12728119]
[-228.47322083 -33.81047821]
[-228.98200989 -49.22945023]
[-221.05429077 -62.46405792]
[-207.21977234 -69.29119110]
[-191.89300537 -67.53232574]
[-179.96469116 -57.74872208]
[-175.24111938 -43.06228638]
[-167.98121643 -44.42814255]
[-160.53773499 -39.14153290]
[-146.07252502 -35.17191696]
[-131.60731506 -31.20230103]
[-117.14211273 -27.23268700]
[-102.67691040 -23.26307106]
[-88.21170807 -19.29345703]
[-80.64910126 -32.24749374]
[-91.21724701 -42.89241409]
[-101.78539276 -53.53733444]
[-112.35353088 -64.18225861]
[-128.31175232 -67.95949554]
[-132.75984192 -83.74386597]
[-121.12199402 -95.29776764]
[-105.37023163 -90.73553467]
[-101.70861053 -74.75039673]
[-91.14047241 -64.10547638]
[-80.57232666 -53.46055603]
[-70.00418091 -42.81563568]
[-74.17515564 -57.22407150]
[-60.54901886 -63.49530792]
[-45.60891342 -64.83445740]
[-31.08471107 -61.08645630]
[-18.65811729 -52.68527985]
[-9.76796818 -40.60367203]
[-5.44362640 -26.24052429]
[-6.18579388 -11.25889492]
[-11.90853596 2.60653734]
[-21.94923592 13.75033951]
[-35.14531326 20.88220787]
[-49.96469116 23.17643738]
[-64.83650970 25.13324356]
[-50.84711838 30.54591179]
[-36.85773087 35.95858002]
[-22.86833954 41.37125015]
[-8.87895012 46.78392029]
[5.11043930 52.19658661]
[9.75949764 51.12126541]
[15.13366508 52.95187378]
[19.42273903 57.97377777]
[33.24956512 63.78918076]
[47.07638931 69.60458374]
[60.90321350 75.41998291]
[91.77008057 39.96945572]
[150.40975952 44.46405029]
[155.31266785 30.28796005]
[160.21557617 16.11187172]
[165.11848450 1.93578446]
[156.92819214 -11.38536835]
[159.26786804 -26.84693146]
[171.03277588 -37.14842987]
[186.66789246 -37.42580795]
[198.79080200 -27.54809952]
[201.67742920 -12.17925453]
[193.96479797 1.42402840]
[179.29457092 6.83869457]
[174.39166260 21.01478195]
[169.48875427 35.19087219]
[164.58584595 49.36695862]
[170.16911316 54.37467194]
[180.18452454 43.20814514]
[190.19995117 32.04161835]
[200.21537781 20.87509155]
[210.23080444 9.70856571]
[220.24639893 -1.45780575]
[231.41261292 8.55796242]
[221.39732361 19.72398758]
[211.38189697 30.89051437]
[201.36648560 42.05704117]
[191.35105896 53.22356796]
[181.33563232 64.39009094]
[186.91889954 69.39780426]
[200.48019409 62.98754501]
[214.04147339 56.57728577]
[227.60276794 50.16702652]
[230.35145569 34.89534378]
[241.57495117 24.18025970]
[256.95755005 22.14194489]
[270.58438110 29.56416893]
[277.21560669 43.59294128]
[274.30142212 58.83390808]
[262.96234131 69.42660522]
[247.55853271 71.29792786]
[234.01303101 63.72831726]
[220.45173645 70.13857269]
[206.89044189 76.54883575]
[193.32916260 82.95909119]
[194.83889771 90.30557251]
[197.85836792 104.99851990]
[199.36811829 112.34499359]
[214.35829163 112.88777924]
[229.34846497 113.43055725]
[244.33863831 113.97334290]
[257.01785278 104.14394379]
[272.57351685 108.06828308]
[279.07269287 122.73595428]
[271.52972412 136.89517212]
[255.73097229 139.68418884]
[243.79585266 128.96351624]
[228.80567932 128.42073059]
[213.81550598 127.87795258]
[198.82533264 127.33516693]
[195.09101868 133.83938599]
[208.09945679 141.30802917]
[221.10789490 148.77665710]
[234.11633301 156.24528503]
[247.12477112 163.71392822]
[260.13320923 171.18255615]
[274.81286621 174.26600647]
[276.41641235 189.18005371]
[262.72775269 195.31362915]
[252.66458130 184.19099426]
[239.65614319 176.72236633]
[226.64770508 169.25372314]
[213.63925171 161.78509521]
[200.63081360 154.31646729]
[187.62237549 146.84782410]
[183.88806152 153.35205078]
[191.91445923 166.02394104]
[199.94085693 178.69584656]
[213.86164856 186.21395874]
[214.13551331 201.10603333]
[222.16191101 213.77793884]
[230.18830872 226.44982910]
[238.21470642 239.12173462]
[246.24110413 251.79362488]
[254.26750183 264.46551514]
[269.03707886 271.59237671]
[269.97982788 287.96438599]
[256.12594604 296.73947144]
[241.72709656 288.89053345]
[241.59559631 272.49191284]
[233.56919861 259.82000732]
[225.54281616 247.14813232]
[217.51641846 234.47622681]
[209.49002075 221.80433655]
[201.46362305 209.13243103]
[188.11692810 202.52070618]
[187.26896667 186.72224426]
[179.24256897 174.05033875]
[171.21617126 161.37844849]
[156.54545593 164.50419617]
[154.38142395 179.34727478]
[152.21739197 194.19035339]
[150.05337524 209.03343201]
[163.52545166 215.94587708]
[174.02131653 226.85987854]
[180.40243530 240.59159851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 213]
[15 212]
[16 211]
[17 210]
[25 111]
[26 110]
[27 109]
[28 108]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 68]
[76 87]
[77 86]
[78 85]
[79 84]
[113 127]
[114 126]
[115 125]
[116 124]
[140 155]
[141 154]
[142 153]
[143 152]
[158 170]
[159 169]
[160 168]
[161 167]
[186 209]
[187 208]
[188 207]
[190 205]
[191 204]
[192 203]
[193 202]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
