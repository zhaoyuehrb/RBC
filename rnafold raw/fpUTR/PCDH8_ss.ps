%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUCUGUAAGAGACGGAGAGGCGCAGAGUGAGGGCGGGUCCGCGCGUCCUCAGAGCCCGCUGGAGGCUCGGAGCUGCUACCCGCAGACUUCUCCCGCACAGGGCUCGCAAAGAGCGUGAUUCCGAGAGCCUGAGACUGACGCCCGACCUGGAAACCAGAGAAGACUUCCUUAGCCUUUCGGAUCGCACUUGAGGCUGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[111.68023682 183.84010315]
[107.66974640 186.44131470]
[101.84994507 200.26629639]
[96.03015137 214.09126282]
[90.21035767 227.91624451]
[84.39055634 241.74122620]
[78.57076263 255.56619263]
[80.34767914 271.28729248]
[68.27847290 280.01562500]
[75.57975769 293.84402466]
[72.23361969 309.11941528]
[59.81999207 318.62921143]
[44.20021439 317.88314819]
[32.74946976 307.23352051]
[30.87444687 291.70877075]
[39.46047592 278.63916016]
[54.45349503 274.19583130]
[52.26030350 259.46356201]
[64.74578094 249.74639893]
[70.56558228 235.92141724]
[76.38537598 222.09645081]
[82.20517731 208.27146912]
[88.02497101 194.44648743]
[93.84476471 180.62152100]
[99.45202637 166.70898438]
[104.84542084 152.71215820]
[99.81272125 147.15139771]
[88.69107056 157.21662903]
[78.62601471 146.09481812]
[89.74732971 136.02990723]
[84.71463013 130.46914673]
[70.25082397 134.44387817]
[55.78702164 138.41859436]
[41.32321930 142.39332581]
[26.85941696 146.36804199]
[12.39561462 150.34275818]
[-2.06818724 154.31748962]
[-16.53199005 158.29220581]
[-27.78861237 169.40971375]
[-42.11117172 165.32148743]
[-53.24152374 177.36505127]
[-69.17486572 173.48423767]
[-73.52033234 157.67129517]
[-61.80768967 146.19323730]
[-46.08589172 150.85768127]
[-35.86381912 140.02447510]
[-20.50671196 143.82839966]
[-6.04291010 139.85368347]
[8.42089272 135.87896729]
[22.88469505 131.90423584]
[37.34849930 127.92951965]
[51.81230164 123.95479584]
[66.27610016 119.98007202]
[80.73990631 116.00534821]
[81.42928314 101.02120209]
[67.39153290 95.73520660]
[53.35379028 90.44921875]
[39.31604385 85.16322327]
[25.27829933 79.87723541]
[11.20046234 74.69895935]
[-4.83226395 78.14623260]
[-15.63190556 65.80525208]
[-10.08871746 50.37136078]
[6.09494448 47.72161865]
[16.27071571 60.58185577]
[23.63194084 59.88386917]
[30.56429100 65.83948517]
[44.60203552 71.12548065]
[58.63978195 76.41146851]
[72.67752838 81.69746399]
[86.71527100 86.98345184]
[95.90019226 75.12355804]
[105.08431244 63.26472092]
[96.45453644 50.99578094]
[87.82475281 38.72684097]
[79.10121918 26.52438354]
[70.28443909 14.38912964]
[61.46766281 2.25387430]
[52.65088272 -9.88138008]
[37.09404755 -13.80113506]
[30.59056473 -28.46688652]
[38.12934494 -42.62832260]
[53.92728424 -45.42200470]
[65.86555481 -34.70485687]
[64.78614044 -18.69816017]
[73.60291290 -6.56290436]
[82.41969299 5.57235050]
[91.23647308 17.70760536]
[97.71440125 21.27289963]
[100.09369659 30.09706116]
[108.72347260 42.36600113]
[117.35325623 54.63494110]
[131.26579285 60.24219894]
[145.99140930 57.38632965]
[160.71704102 54.53046417]
[175.44267273 51.67459869]
[187.51730347 41.45139313]
[201.48487854 46.62400818]
[216.21051025 43.76814270]
[229.82603455 31.37386703]
[246.18075562 37.73143768]
[260.86090088 34.65024948]
[275.54101562 31.56905746]
[290.22116089 28.48786736]
[301.10836792 18.16949844]
[304.97213745 3.67566562]
[308.83590698 -10.81816769]
[312.69970703 -25.31200218]
[305.93710327 -39.86008835]
[313.22351074 -54.15301895]
[328.96942139 -57.22647858]
[341.09588623 -46.72277069]
[340.30056763 -30.69944572]
[327.19354248 -21.44822311]
[323.32974243 -6.95438862]
[319.46597290 7.53944492]
[315.60220337 22.03327751]
[324.87731934 33.82192230]
[339.87335205 33.47714233]
[354.86938477 33.13236618]
[369.86541748 32.78758621]
[384.86145020 32.44280624]
[393.37362671 29.11566734]
[400.08953857 32.20941925]
[415.08911133 32.09448624]
[430.08865356 31.97955132]
[445.08822632 31.86461449]
[460.08779907 31.74967957]
[475.08734131 31.63474464]
[490.08691406 31.51980972]
[503.82739258 23.67699432]
[516.61358643 31.31654739]
[531.61315918 31.20161247]
[546.61267090 31.08667755]
[561.61224365 30.97174263]
[576.61181641 30.85680580]
[581.11926270 28.20555496]
[585.73144531 27.61111259]
[589.64630127 28.76823425]
[592.29949951 31.09723663]
[607.28851318 31.67177773]
[614.98382568 20.23291779]
[627.22973633 14.13960648]
[640.77899170 14.88817978]
[652.09710693 22.17622375]
[658.28466797 34.00948715]
[669.98590088 23.72746086]
[685.16467285 24.75637627]
[694.89489746 35.97503281]
[709.87908936 36.66440582]
[724.86804199 37.23894882]
[739.85705566 37.81348801]
[754.84606934 38.38803101]
[770.90515137 32.95280838]
[780.57354736 46.87969589]
[769.86743164 60.02560806]
[754.27148438 53.37702179]
[739.28253174 52.80248260]
[724.29351807 52.22793961]
[709.30450439 51.65340042]
[702.49694824 54.53989029]
[694.09075928 50.95346069]
[683.21527100 61.06582642]
[668.01354980 60.46366119]
[657.48052979 48.98791504]
[647.54913330 62.05592346]
[631.62640381 66.67720795]
[615.93041992 60.84091187]
[606.71398926 46.66077042]
[591.72497559 46.08623123]
[576.72674561 45.85636520]
[561.72717285 45.97130203]
[546.72760010 46.08623505]
[531.72808838 46.20117188]
[516.72851562 46.31610870]
[504.06088257 54.15069962]
[490.20184326 46.51937103]
[475.20227051 46.63430405]
[460.20272827 46.74924088]
[445.20315552 46.86417389]
[430.20361328 46.97911072]
[415.20404053 47.09404373]
[400.20446777 47.20898056]
[385.20623779 47.43884277]
[370.21020508 47.78362274]
[355.21417236 48.12840271]
[340.21813965 48.47317886]
[325.22210693 48.81795883]
[306.54479980 53.38927841]
[293.30233765 43.16799927]
[278.62222290 46.24919128]
[263.94207764 49.33037949]
[249.26194763 52.41157150]
[242.38510132 62.36685944]
[230.17646790 65.05187225]
[219.06637573 58.49376678]
[204.34074402 61.34963226]
[193.31939697 71.36856079]
[178.29853821 66.40022278]
[163.57290649 69.25608826]
[148.84729004 72.11195374]
[134.12165833 74.96781921]
[118.84225464 158.10554504]
[113.44885254 172.10238647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[9 17]
[25 204]
[26 203]
[31 54]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[40 45]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 65]
[73 92]
[74 91]
[75 90]
[76 88]
[77 87]
[78 86]
[79 85]
[93 202]
[94 201]
[95 200]
[96 199]
[98 197]
[99 196]
[101 193]
[102 192]
[103 191]
[104 190]
[105 117]
[106 116]
[107 115]
[108 114]
[118 188]
[119 187]
[120 186]
[121 185]
[122 184]
[124 183]
[125 182]
[126 181]
[127 180]
[128 179]
[129 178]
[130 177]
[132 175]
[133 174]
[134 173]
[135 172]
[136 171]
[140 170]
[141 169]
[146 165]
[149 162]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
