%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGGCGGCGGUGACAUCACGGCCACGGCGGCGGGAGGGGCGGCGGCGCCCCGCGCACAUCACUUCCUCGGCGCCUCCCCGGGGGAGGACGGGCGAACGAGGCGCGGACGGACAGGCGGACAGCAGGGCGGACAGCAGGGAGGACAGCAGGGCGGGCAGGGGGCGGACGGCCACGGCGCGGGGGGCGCUCCCGGCUCCCGCUCCCGCGUCCCCGACCC\
) } def
/len { sequence length } bind def

/coor [
[16.63983345 338.30545044]
[3.92673898 340.37826538]
[-3.04410863 353.66012573]
[-10.01495647 366.94195557]
[-9.57717705 382.75711060]
[-22.34287453 390.43084717]
[-19.25794792 402.94970703]
[-25.33161163 413.86651611]
[-36.83352280 417.59759521]
[-43.99246597 430.77899170]
[-51.15140915 443.96041870]
[-50.93848419 459.78018188]
[-63.81197357 467.27169800]
[-70.97091675 480.45309448]
[-78.12985992 493.63449097]
[-77.16184998 510.00506592]
[-91.00218201 518.80151367]
[-105.41310883 510.97479248]
[-105.56990051 494.57638550]
[-91.31126404 486.47555542]
[-84.15232086 473.29415894]
[-76.99337769 460.11273193]
[-77.71836090 445.23577881]
[-64.33281708 436.80148315]
[-57.17387390 423.62005615]
[-50.01493073 410.43865967]
[-51.41367722 392.94235229]
[-35.62471390 383.45999146]
[-36.56109619 368.59484863]
[-23.29679680 359.97109985]
[-16.32594872 346.68927002]
[-9.35510159 333.40744019]
[-15.03899860 317.57571411]
[-7.35961437 302.23101807]
[9.36564255 297.09216309]
[16.14698601 283.71258545]
[11.28445721 269.68078613]
[17.97110748 256.01535034]
[32.72192001 251.01023865]
[39.50326157 237.63064575]
[46.28460693 224.25105286]
[53.06594849 210.87147522]
[48.20342255 196.83967590]
[54.89007187 183.17427063]
[69.64088440 178.16912842]
[76.42222595 164.78955078]
[83.20356750 151.40995789]
[89.98491669 138.03036499]
[67.63422394 86.10793304]
[59.55725098 73.46820831]
[51.48028183 60.82849121]
[43.40330887 48.18877029]
[35.32633972 35.54904938]
[21.37561226 28.08662224]
[21.04224777 13.19574833]
[12.96527672 0.55602735]
[-0.93968439 3.99794936]
[-15.20658112 2.97987413]
[-28.44215965 -2.38549995]
[-39.35798264 -11.56158161]
[-46.89584732 -23.64152527]
[-50.33037567 -37.43783569]
[-49.33878326 -51.59910583]
[-44.03118515 -64.74238586]
[-34.93852997 -75.58823395]
[-42.83501053 -88.34149170]
[-50.82194138 -101.03829956]
[-58.89891052 -113.67802429]
[-66.97588348 -126.31774139]
[-75.14248657 -138.89973450]
[-83.39831543 -151.42337036]
[-97.45370483 -158.68673706]
[-97.99871063 -173.57136536]
[-106.25453949 -186.09500122]
[-114.51036072 -198.61862183]
[-122.76618958 -211.14225769]
[-131.02201843 -223.66589355]
[-139.27784729 -236.18951416]
[-147.53367615 -248.71315002]
[-156.22926331 -260.93554688]
[-165.35363770 -272.84124756]
[-174.47799683 -284.74694824]
[-183.60237122 -296.65264893]
[-199.11033630 -296.12103271]
[-211.95014954 -304.83419800]
[-217.18461609 -319.44174194]
[-212.80101013 -334.32675171]
[-200.48489380 -343.76565552]
[-184.97207642 -344.12899780]
[-172.22753906 -335.27706909]
[-167.15184021 -320.61361694]
[-171.69667053 -305.77703857]
[-162.57229614 -293.87130737]
[-153.44792175 -281.96560669]
[-144.32354736 -270.05990601]
[-139.83941650 -284.37396240]
[-125.90576935 -289.92855835]
[-112.80387878 -282.62512207]
[-110.20126343 -267.85263062]
[-120.01832581 -256.51132202]
[-135.01004028 -256.96896362]
[-126.75421143 -244.44534302]
[-118.49838257 -231.92170715]
[-110.24256134 -219.39808655]
[-101.98673248 -206.87445068]
[-93.73090363 -194.35081482]
[-85.47508240 -181.82719421]
[-72.01020050 -175.45959473]
[-70.87467957 -159.67919922]
[-62.61885452 -147.15556335]
[-56.31769180 -143.30390930]
[-54.33615875 -134.39471436]
[-46.25918961 -121.75499725]
[-38.18222046 -109.11527252]
[-31.93644333 -105.17443848]
[-30.08175468 -96.23797607]
[-22.18527222 -83.48471832]
[-6.80975962 -86.88896942]
[8.82837582 -84.81769562]
[22.83506966 -77.50321198]
[33.50750732 -65.81401825]
[39.54112625 -51.15168762]
[40.18907928 -35.28282928]
[35.35461044 -20.12625122]
[25.60499763 -7.52094316]
[33.68196869 5.11877775]
[47.05497742 11.67712593]
[47.96606064 27.47207832]
[56.04302979 40.11179733]
[64.12000275 52.75151825]
[72.19697571 65.39124298]
[80.27394104 78.03096008]
[87.64624023 79.40908051]
[90.40272522 64.66453552]
[105.14723206 67.42126465]
[102.39083862 82.16532898]
[109.76313782 83.54344940]
[121.86067963 74.67499542]
[128.41603088 60.27576447]
[143.25514221 58.99117279]
[145.41287231 43.33487320]
[158.05957031 33.85666656]
[173.69218445 36.17980194]
[183.03616333 48.92600632]
[180.54788208 64.53318787]
[167.70359802 73.74187469]
[152.12359619 71.08872223]
[146.43353271 84.85362244]
[130.72912598 86.77254486]
[118.63158417 95.64099121]
[119.64135742 103.07270813]
[122.67065430 125.36784363]
[136.69590759 130.68692017]
[150.72114563 136.00599670]
[164.74638367 141.32507324]
[178.77163696 146.64413452]
[192.79687500 151.96321106]
[206.82211304 157.28228760]
[223.79614258 148.85533142]
[241.23754883 155.40629578]
[248.22276306 172.33308411]
[262.39355469 177.25131226]
[276.56433105 182.16954041]
[290.73510742 187.08778381]
[304.90588379 192.00601196]
[319.07666016 196.92424011]
[333.24743652 201.84246826]
[350.84725952 192.13687134]
[369.61703491 198.41819763]
[377.58010864 216.20423889]
[391.94769287 220.51385498]
[406.34555054 224.72123718]
[420.77291870 228.82618713]
[436.53613281 224.30364990]
[448.14483643 235.88682556]
[443.65698242 251.65994263]
[427.68933105 255.39697266]
[416.66796875 243.25357056]
[402.24060059 239.14862061]
[394.95230103 240.34059143]
[387.63809204 234.88143921]
[373.27050781 230.57182312]
[365.88751221 237.68542480]
[356.14297485 241.12304688]
[345.76992798 240.20236206]
[336.64276123 235.02252197]
[330.43862915 226.45835876]
[328.32922363 216.01324463]
[314.15844727 211.09501648]
[299.98767090 206.17678833]
[285.81686401 201.25856018]
[271.64608765 196.34033203]
[257.47531128 191.42210388]
[243.30453491 186.50387573]
[234.36802673 193.58264160]
[223.00700378 195.49153137]
[212.02157593 191.64288330]
[204.17594910 182.88265991]
[201.50305176 171.30752563]
[187.47779846 165.98844910]
[173.45256042 160.66938782]
[159.42732239 155.35031128]
[145.40206909 150.03123474]
[131.37683105 144.71215820]
[117.35158539 139.39309692]
[103.36450195 144.81172180]
[96.58316040 158.19129944]
[89.80181122 171.57089233]
[83.02046967 184.95048523]
[87.70494080 199.80622864]
[80.63710022 213.27844238]
[66.44554138 217.65281677]
[59.66419601 231.03240967]
[52.88285065 244.41198730]
[46.10150528 257.79156494]
[50.78598022 272.64733887]
[43.71813583 286.11953735]
[29.52657509 290.49392700]
[22.74522972 303.87350464]
[28.37932777 316.10269165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[6 28]
[9 26]
[10 25]
[11 24]
[13 22]
[14 21]
[15 20]
[35 219]
[36 218]
[39 215]
[40 214]
[41 213]
[42 212]
[45 209]
[46 208]
[47 207]
[48 206]
[49 132]
[50 131]
[51 130]
[52 129]
[53 128]
[55 126]
[56 125]
[65 117]
[66 116]
[67 114]
[68 113]
[69 112]
[70 110]
[71 109]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 95]
[81 94]
[82 93]
[83 92]
[137 150]
[138 149]
[140 147]
[152 205]
[153 204]
[154 203]
[155 202]
[156 201]
[157 200]
[158 199]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[170 182]
[171 181]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
