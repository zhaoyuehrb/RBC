%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGCCGGGAGCCGAGCGCGCUGGGCGCGGCCGUCCCGCUGCCGCCGCCAAGCCCGGAGUGCGCCAGCGGCCAUGGUUCCCGCGGCGGCGCCGGGCGCCUGAGCCCCGGGACGCAAGCGCUGGAGGCGGGCUGCCGGCUGUGCGGGCGCUCCGGAGAGACCGACAGAAGGUGAGCACUGUGGGCUAUGGG\
) } def
/len { sequence length } bind def

/coor [
[109.22088623 375.34683228]
[108.97546387 360.34881592]
[108.73003387 345.35083008]
[108.36191559 330.35534668]
[107.87113190 315.36337280]
[107.38034821 300.37142944]
[106.88955688 285.37945557]
[98.73997498 272.91213989]
[106.02160645 258.86621094]
[97.87202454 246.39891052]
[105.15365601 232.35296631]
[104.66286469 217.36099243]
[96.04615021 208.85670471]
[95.52375031 196.35997009]
[103.92165375 186.55641174]
[93.07339478 176.41487122]
[92.61084747 161.20826721]
[103.32178497 149.89839172]
[103.07636261 134.90039062]
[102.83093262 119.90239716]
[90.49691010 111.36589813]
[76.37374878 116.41924286]
[62.25058746 121.47259521]
[51.86373520 133.40673828]
[37.27383041 130.40942383]
[23.15067101 135.46276855]
[9.02750874 140.51611328]
[-5.09565163 145.56945801]
[-19.17699814 150.73818970]
[-33.21558762 156.02194214]
[-47.25417709 161.30569458]
[-61.29276657 166.58943176]
[-71.48296356 178.69194031]
[-86.11995697 175.93373108]
[-100.15854645 181.21748352]
[-112.85266113 192.45562744]
[-127.16568756 183.36862183]
[-122.39605713 167.09942627]
[-105.44229889 167.17889404]
[-91.40370941 161.89514160]
[-82.21764374 150.17057800]
[-66.57651520 152.55084229]
[-52.53792572 147.26710510]
[-38.49933624 141.98335266]
[-24.46074867 136.69960022]
[-19.29974747 131.39248657]
[-10.14899921 131.44630432]
[3.97416139 126.39295197]
[18.09732246 121.33960724]
[32.22048187 116.28626251]
[41.59715271 104.71356201]
[57.19724274 107.34943390]
[71.32040405 102.29608917]
[85.44356537 97.24273682]
[95.78667450 86.37902832]
[100.14093781 72.02492523]
[104.49520874 57.67082214]
[108.84947968 43.31671524]
[113.20375061 28.96261215]
[117.55802155 14.60850620]
[121.91229248 0.25440115]
[126.26656342 -14.09970379]
[130.62083435 -28.45380974]
[130.11807251 -37.59089661]
[135.16555786 -43.00608444]
[139.75410461 -57.28702545]
[135.44503784 -75.18226624]
[148.88085938 -86.46079254]
[153.23513794 -100.81489563]
[157.58940125 -115.16899872]
[161.94367981 -129.52310181]
[166.29794312 -143.87721252]
[170.65222168 -158.23130798]
[169.52073669 -164.77163696]
[171.56568909 -170.09571838]
[175.39091492 -172.97958374]
[180.21250916 -187.18353271]
[185.03410339 -201.38748169]
[181.01840210 -219.35083008]
[194.63697815 -230.40800476]
[199.22552490 -244.68894958]
[203.81407166 -258.96987915]
[208.40261841 -273.25082397]
[212.99116516 -287.53176880]
[204.71440125 -302.93453979]
[210.02595520 -319.23934937]
[225.17868042 -326.51873779]
[229.53294373 -340.87283325]
[233.88722229 -355.22695923]
[238.24148560 -369.58105469]
[242.59576416 -383.93515015]
[246.95002747 -398.28927612]
[239.27162170 -409.36700439]
[239.37898254 -422.65054321]
[247.00857544 -433.28625488]
[259.18927002 -437.51721191]
[263.77783203 -451.79812622]
[268.36636353 -466.07907104]
[272.83792114 -480.39709473]
[277.19219971 -494.75119019]
[281.54644775 -509.10528564]
[285.90072632 -523.45941162]
[279.63662720 -538.22894287]
[287.40469360 -552.26593018]
[303.24597168 -554.80230713]
[315.00839233 -543.89245605]
[313.66879272 -527.90539551]
[300.25482178 -519.10510254]
[295.90057373 -504.75100708]
[291.54629517 -490.39691162]
[287.19201660 -476.04281616]
[288.26062012 -468.71755981]
[282.64730835 -461.49053955]
[278.05874634 -447.20959473]
[273.47021484 -432.92864990]
[281.78710938 -418.31961060]
[276.87557983 -401.88989258]
[261.30413818 -393.93499756]
[256.94985962 -379.58087158]
[252.59559631 -365.22677612]
[248.24131775 -350.87268066]
[243.88705444 -336.51858521]
[239.53279114 -322.16445923]
[247.14076233 -311.75344849]
[247.36154175 -298.66604614]
[239.89015198 -287.68231201]
[227.27209473 -282.94323730]
[222.68354797 -268.66229248]
[218.09501648 -254.38134766]
[213.50646973 -240.10040283]
[208.91792297 -225.81945801]
[214.16592407 -214.90942383]
[210.44776917 -202.96719360]
[199.23805237 -196.56588745]
[194.41645813 -182.36193848]
[189.59486389 -168.15798950]
[185.00631714 -153.87704468]
[180.65205383 -139.52293396]
[176.29777527 -125.16883087]
[171.94351196 -110.81472778]
[167.58924866 -96.46062469]
[163.23497009 -82.10652161]
[168.66078186 -71.28379822]
[165.13851929 -59.28234100]
[154.03503418 -52.69848251]
[149.44648743 -38.41754150]
[144.97492981 -24.09953880]
[140.62066650 -9.74543381]
[136.26640320 4.60867119]
[131.91212463 18.96277618]
[127.55785370 33.31688309]
[123.20359039 47.67098618]
[118.84931946 62.02509308]
[114.49504852 76.37919617]
[110.14077759 90.73329926]
[120.84373474 80.22393799]
[131.16766357 69.34199524]
[144.62165833 62.70950317]
[159.54011536 61.14755630]
[174.07611084 64.84952545]
[186.43009949 73.35711670]
[195.07264709 85.61706543]
[198.93377686 100.11160278]
[197.53552246 115.04628754]
[191.05094910 128.57220459]
[180.28286743 139.01483154]
[166.56437683 145.08137512]
[151.59382629 146.02078247]
[137.22456360 141.71676636]
[125.23472595 132.70129395]
[117.82892609 119.65697479]
[118.07434845 134.65496826]
[118.31977844 149.65295410]
[129.39503479 160.60633850]
[129.43026733 175.81993103]
[118.91964722 186.31098938]
[128.75227356 201.87142944]
[119.65483856 216.87020874]
[120.14562225 231.86218262]
[128.33030701 245.40180969]
[121.01357269 258.37542725]
[129.19825745 271.91503906]
[121.88153076 284.88867188]
[122.37231445 299.88061523]
[122.86309814 314.87258911]
[123.35388947 329.86456299]
[126.76698303 338.35513306]
[123.72802734 345.10540771]
[123.97345734 360.10339355]
[124.21887970 375.10137939]
[126.72451782 394.32043457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 186]
[5 185]
[6 184]
[7 183]
[9 181]
[11 179]
[12 178]
[15 176]
[18 173]
[19 172]
[20 171]
[21 54]
[22 53]
[23 52]
[25 50]
[26 49]
[27 48]
[28 47]
[29 45]
[30 44]
[31 43]
[32 42]
[34 40]
[35 39]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[65 146]
[66 145]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[76 136]
[77 135]
[78 134]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[96 115]
[97 114]
[98 113]
[99 111]
[100 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
