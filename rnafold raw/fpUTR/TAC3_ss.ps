%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUAUCAGGGAGCUGGGACUGAGUGACUGCAGCCUUCCUAGAUCCCCUCCACUCGGUUUCUCUCUUUGCAGGAGCACCGGCAGCACCAGUGUGUGAGGGGAGCAGGCAGCGGUCCUAGCCAGUUCCUUGAUCCUGCCAGACCACCCAGCCCCCGGCACAGAGCUGCUCCACAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[372.06671143 451.49282837]
[366.79632568 444.36639404]
[364.12777710 435.86837769]
[364.38055420 426.92126465]
[367.55532837 418.50598145]
[357.32534790 407.53567505]
[347.09536743 396.56536865]
[336.86538696 385.59506226]
[326.63543701 374.62475586]
[316.40545654 363.65444946]
[306.17547607 352.68414307]
[295.94549561 341.71383667]
[285.71551514 330.74353027]
[275.48553467 319.77322388]
[265.25558472 308.80291748]
[255.02558899 297.83261108]
[244.79562378 286.86230469]
[234.77194214 289.28842163]
[224.56892395 287.30499268]
[216.05256653 281.20614624]
[210.80888367 272.04483032]
[209.84870911 261.45150757]
[213.41352844 251.34405518]
[203.77171326 239.85339355]
[197.04473877 236.74177551]
[194.06402588 228.07701111]
[184.62422180 216.41983032]
[175.18441772 204.76263428]
[165.74461365 193.10545349]
[156.30479431 181.44825745]
[146.86499023 169.79106140]
[132.84245300 164.76936340]
[130.17073059 149.17536926]
[120.73092651 137.51818848]
[111.29112244 125.86099243]
[101.85131836 114.20380402]
[88.86820221 109.01435089]
[86.49149323 95.23600006]
[82.19641876 109.60793304]
[68.34999084 115.37650299]
[55.12140274 108.30512238]
[52.22608948 93.58720398]
[61.79044724 82.03198242]
[76.79077911 82.12623596]
[68.40288544 69.69067383]
[60.01499176 57.25511169]
[51.62709808 44.81954575]
[43.23920441 32.38398361]
[34.85131073 19.94841957]
[26.46341705 7.51285601]
[17.96732330 -4.84903669]
[9.36367702 -17.13631821]
[0.76003039 -29.42359734]
[-13.49344826 -36.29010391]
[-14.45548630 -51.15361023]
[-23.16603088 -63.36534119]
[-31.98280907 -75.50059509]
[-40.79958725 -87.63584900]
[-53.41059875 -90.42832947]
[-60.50183487 -100.74077606]
[-58.71306992 -112.72209167]
[-67.31671906 -125.00936890]
[-81.57019806 -131.87586975]
[-82.53223419 -146.73937988]
[-91.13587952 -159.02665710]
[-106.44587708 -161.89752197]
[-114.99616241 -174.48114014]
[-112.16487885 -189.05918884]
[-120.76852417 -201.34646606]
[-129.37217712 -213.63374329]
[-144.45542908 -220.07015991]
[-146.15406799 -236.38110352]
[-132.72067261 -245.78726196]
[-117.97436523 -238.61239624]
[-117.08489227 -222.23739624]
[-108.48124695 -209.95010376]
[-99.87760162 -197.66282654]
[-85.21035767 -195.33737183]
[-76.31000519 -182.99888611]
[-78.84860229 -167.63031006]
[-70.24495697 -155.34303284]
[-56.60686493 -149.35539246]
[-55.02943802 -133.61302185]
[-46.42578888 -121.32573700]
[-30.15061188 -114.79372406]
[-28.66433334 -96.45262909]
[-19.84755516 -84.31737518]
[-11.03077602 -72.18212128]
[-4.53723288 -68.60882568]
[-2.16820598 -59.75725555]
[11.46988297 -53.76961899]
[13.04731083 -38.02724457]
[21.65095711 -25.73996353]
[30.25460434 -13.45268345]
[36.68479538 -9.76660633]
[38.89897919 -0.87503761]
[47.28687286 11.56052589]
[55.67476654 23.99608994]
[64.06266022 36.43165207]
[72.45055389 48.86721802]
[80.83844757 61.30278015]
[89.22634125 73.73834229]
[98.14868164 85.79619598]
[111.13179779 90.98564911]
[113.50850677 104.76399994]
[122.94831085 116.42118835]
[132.38812256 128.07836914]
[141.82792664 139.73556519]
[156.52566528 145.59107971]
[158.52218628 160.35125732]
[167.96199036 172.00845337]
[177.40179443 183.66563416]
[186.84159851 195.32283020]
[196.28140259 206.98002625]
[205.72120667 218.63720703]
[215.26239014 230.21157837]
[224.90420532 241.70223999]
[244.95919800 242.35842896]
[257.90130615 257.29238892]
[255.76593018 276.63232422]
[265.99591064 287.60263062]
[276.22586060 298.57293701]
[286.45584106 309.54324341]
[296.68582153 320.51354980]
[306.91580200 331.48385620]
[317.14578247 342.45416260]
[327.37576294 353.42446899]
[337.60571289 364.39477539]
[347.83569336 375.36508179]
[358.06567383 386.33538818]
[368.29565430 397.30569458]
[378.52563477 408.27600098]
[400.29360962 407.34637451]
[415.49343872 422.55978394]
[414.56884766 443.76266479]
[425.71603394 453.79962158]
[436.86318970 463.83657837]
[448.01037598 473.87353516]
[460.51623535 466.85131836]
[474.55923462 464.04290771]
[488.76129150 465.71032715]
[501.73287964 471.67712402]
[512.20904541 481.34680176]
[519.17266846 493.76245117]
[521.95324707 507.70153809]
[520.29150391 521.79620361]
[514.36328125 534.66735840]
[525.33361816 544.89733887]
[536.30389404 555.12731934]
[547.27423096 565.35729980]
[562.64385986 569.11029053]
[566.67517090 583.44897461]
[581.88085938 580.35607910]
[595.98651123 586.82220459]
[603.56811523 600.36096191]
[601.71051025 615.76647949]
[591.12786865 627.11492920]
[575.88952637 630.04266357]
[561.85485840 623.42388916]
[554.42053223 609.80371094]
[556.44519043 594.41925049]
[541.86022949 591.39801025]
[537.04425049 576.32757568]
[526.07391357 566.09765625]
[515.10363770 555.86767578]
[504.13330078 545.63769531]
[490.20874023 552.95825195]
[474.59332275 555.07678223]
[459.16925049 551.71936035]
[445.80191040 543.27331543]
[436.11441040 530.74243164]
[431.29046631 515.62786865]
[431.92974854 499.74819946]
[437.97341919 485.02072144]
[426.82623291 474.98376465]
[415.67907715 464.94677734]
[404.53189087 454.90982056]
[396.51504517 458.26196289]
[387.79968262 458.81637573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 132]
[6 131]
[7 130]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 122]
[16 121]
[17 120]
[23 117]
[24 116]
[26 115]
[27 114]
[28 113]
[29 112]
[30 111]
[31 110]
[33 108]
[34 107]
[35 106]
[36 105]
[38 103]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 94]
[52 93]
[53 92]
[55 90]
[56 88]
[57 87]
[58 86]
[61 84]
[62 83]
[64 81]
[65 80]
[68 77]
[69 76]
[70 75]
[135 177]
[136 176]
[137 175]
[138 174]
[147 166]
[148 165]
[149 164]
[150 163]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
