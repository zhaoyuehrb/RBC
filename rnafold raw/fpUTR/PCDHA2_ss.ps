%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCGGAGGAAUAAGAGAAGCAGCAGGACUUUAACAGAGACUAGAAUAUUUAAAUUUUUGCAAAACAUGCUCUUCUAAUUUGAUCAAAACAUUGAGGAUUGGUA\
) } def
/len { sequence length } bind def

/coor [
[108.21337128 213.45793152]
[93.76060486 217.47259521]
[78.95682526 215.05432129]
[66.53288269 206.64921570]
[58.78062439 193.80776978]
[57.13011169 178.89886475]
[61.88581085 164.67271423]
[72.17044067 153.75363159]
[86.08679199 148.15585327]
[101.06772614 148.91200256]
[114.34735870 155.88061523]
[108.76003265 141.96006775]
[103.17270660 128.03952026]
[97.58538055 114.11895752]
[86.70684814 105.33550262]
[88.49406433 91.46836090]
[82.90673828 77.54781342]
[77.31941223 63.62725830]
[71.73208618 49.70670319]
[59.41118622 39.78168869]
[61.85092545 25.08825684]
[56.26360321 11.16770458]
[50.67627716 -2.75284910]
[45.08895493 -16.67340279]
[38.29872513 -30.04848289]
[30.35823631 -42.77438736]
[22.41774940 -55.50029373]
[14.47726154 -68.22619629]
[6.53677416 -80.95210266]
[-1.40371358 -93.67800903]
[-15.27332973 -101.29012299]
[-15.44643593 -116.18372345]
[-23.38692284 -128.90962219]
[-31.32741165 -141.63552856]
[-39.26789856 -154.36143494]
[-47.20838547 -167.08734131]
[-62.11247635 -164.21810913]
[-77.04591370 -166.93045044]
[-89.98908234 -174.85755920]
[-99.19151306 -186.92733765]
[-103.40865326 -201.50746155]
[-102.07018280 -216.62609863]
[-95.35710144 -230.23855591]
[-84.17730713 -240.50387573]
[-70.04277802 -246.03373718]
[-54.86508942 -246.08030701]
[-40.69689941 -240.63725281]
[-29.45433807 -230.44071960]
[-22.65786934 -216.86970520]
[-21.22666359 -201.75958252]
[-25.35427475 -187.15385437]
[-34.48248291 -175.02783203]
[-26.54199409 -162.30192566]
[-18.60150719 -149.57601929]
[-10.66101837 -136.85011292]
[-2.72053123 -124.12421417]
[10.58112812 -117.42234039]
[11.32219124 -101.61849213]
[19.26267815 -88.89259338]
[27.20316696 -76.16668701]
[35.14365387 -63.44078064]
[43.08414078 -50.71487427]
[51.02462769 -37.98897171]
[56.44497299 -51.97538757]
[70.05612183 -58.27908325]
[84.22896576 -53.36680222]
[91.01955414 -39.99190521]
[86.62173462 -25.65108299]
[73.50049591 -18.38243866]
[59.00950623 -22.26072693]
[64.59683228 -8.34017372]
[70.18415833 5.58037996]
[75.77147675 19.50093269]
[87.69274139 28.43025780]
[85.65264130 44.11938095]
[91.23996735 58.03993225]
[96.82729340 71.96048737]
[102.41461945 85.88104248]
[113.29315186 94.66449738]
[111.50593567 108.53163910]
[117.09326172 122.45218658]
[122.68058777 136.37274170]
[128.26791382 150.29328918]
[136.14103699 156.56918335]
[137.40409851 165.42568970]
[147.12068176 176.85319519]
[156.83726501 188.28071594]
[166.55383301 199.70822144]
[176.27041626 211.13574219]
[191.78198242 212.56015015]
[201.47319031 224.28768921]
[200.01963806 239.06681824]
[215.83010864 241.78874207]
[223.43312073 255.91580200]
[216.99629211 270.61093140]
[201.45741272 274.60128784]
[188.73658752 264.82580566]
[188.59213257 248.78340149]
[173.77157593 247.84181213]
[163.75479126 236.39109802]
[164.84291077 220.85232544]
[155.12632751 209.42480469]
[145.40974426 197.99729919]
[135.69316101 186.56977844]
[125.97658539 175.14227295]
[125.95804596 190.14225769]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 83]
[12 82]
[13 81]
[14 80]
[16 78]
[17 77]
[18 76]
[19 75]
[21 73]
[22 72]
[23 71]
[24 70]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[92 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
