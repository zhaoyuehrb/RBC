%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUUCCCUCCCUCCCUCCCCCGCUGUCCUGGCCCGCCCUGCCCGGCCCGCCCUGCGAGUCAGUUCGCUGGUUCCCUCCCUCCCUGGGCGCGCUCGGGCCGCCGCCGCGCUCCCCGCCCUCGAGCCUCGGUGCCGGAGCCGCCCGCCGCCGGAGGAGGAGGUGGAGGGAGCCGGAGGGGCCCGCCGAGGCGGCGGCGGCGGCGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[15.22837830 554.19201660]
[14.80498505 569.24639893]
[11.15480042 583.85772705]
[4.44855165 597.34252930]
[-5.00009871 609.07012939]
[-16.74921989 618.49206543]
[-30.24928284 625.16754150]
[-44.86886597 628.78442383]
[-59.92418671 629.17352295]
[-74.71108246 626.31658936]
[-88.53793335 620.34735107]
[-100.75804138 611.54492188]
[-110.79985046 600.32098389]
[-118.19367981 587.20056152]
[-122.59371185 572.79730225]
[-123.79415131 557.78491211]
[-121.73884583 542.86541748]
[-116.52392578 528.73681641]
[-108.39331055 516.05975342]
[-97.72727203 505.42727661]
[-85.02469635 497.33663940]
[-70.87968445 492.16625977]
[-55.95384216 490.15795898]
[-40.94526672 491.40570068]
[-36.52394104 477.07211304]
[-32.10261154 462.73849487]
[-27.68128586 448.40490723]
[-23.25995827 434.07131958]
[-18.83863068 419.73773193]
[-20.15466118 416.46578979]
[-19.95081520 412.39373779]
[-17.86824608 408.24310303]
[-13.88400269 404.86831665]
[-8.82405281 390.74752808]
[-3.76410294 376.62673950]
[-4.46708775 369.26901245]
[1.47860169 362.33349609]
[6.74922419 348.28997803]
[12.01984596 334.24645996]
[17.18527794 320.16390991]
[22.24522591 306.04312134]
[27.30517578 291.92230225]
[32.36512756 277.80151367]
[37.42507553 263.68072510]
[42.37926102 249.52247620]
[47.22740555 235.32756042]
[52.07555008 221.13264465]
[56.92369843 206.93774414]
[50.15086746 193.72167969]
[54.86536407 179.25695801]
[68.77351379 172.24259949]
[73.62165833 158.04768372]
[78.46980286 143.85276794]
[83.31794739 129.65786743]
[88.16609192 115.46295166]
[81.35623169 102.09785461]
[67.02264404 97.67652893]
[52.68904877 93.25520325]
[38.35545731 88.83386993]
[24.50151443 96.43938446]
[9.35095787 91.94091797]
[1.89234674 78.00733185]
[6.55074263 62.90518570]
[20.56240082 55.59430695]
[35.61445618 60.41210938]
[42.77678680 74.50028229]
[57.11037827 78.92160797]
[71.44396973 83.34293365]
[85.77756500 87.76426697]
[99.69928741 82.17985535]
[107.00411987 69.07873535]
[114.30895233 55.97761154]
[121.61378479 42.87648773]
[128.91860962 29.77536583]
[136.22344971 16.67424393]
[143.52827454 3.57312059]
[150.83311462 -9.52800274]
[158.13793945 -22.62912560]
[165.44277954 -35.73024750]
[172.74760437 -48.83137131]
[179.95423889 -61.98676682]
[187.06227112 -75.19570160]
[186.78831482 -91.01453400]
[199.63279724 -98.55564880]
[206.74082947 -111.76457977]
[213.84886169 -124.97351837]
[202.75115967 -169.02850342]
[207.59930420 -183.22341919]
[212.44744873 -197.41831970]
[217.29559326 -211.61323547]
[222.14373779 -225.80815125]
[221.95602417 -234.94143677]
[227.17204285 -240.17820740]
[232.23199463 -254.29899597]
[237.29193115 -268.41979980]
[242.35188293 -282.54058838]
[239.72331238 -298.14190674]
[251.30038452 -307.51318359]
[256.36035156 -321.63397217]
[261.42028809 -335.75476074]
[261.36923218 -344.88983154]
[266.66299438 -350.04800415]
[271.93362427 -364.09152222]
[277.20425415 -378.13504028]
[282.47485352 -392.17855835]
[277.86096191 -404.22381592]
[282.54058838 -415.81246948]
[293.49908447 -420.93591309]
[293.72131348 -430.06842041]
[299.16702271 -435.06588745]
[304.85540771 -448.94546509]
[310.54379272 -462.82501221]
[316.23217773 -476.70458984]
[307.30221558 -489.28469849]
[306.61401367 -504.69671631]
[314.38717651 -518.02270508]
[328.14129639 -525.01037598]
[343.48748779 -523.42999268]
[355.52886963 -513.78588867]
[360.42303467 -499.15539551]
[356.60830688 -484.20712280]
[345.30194092 -473.71096802]
[330.11172485 -471.01620483]
[324.42337036 -457.13662720]
[318.73498535 -443.25708008]
[313.04660034 -429.37750244]
[307.46218872 -415.45578003]
[311.00930786 -398.26934814]
[296.51837158 -386.90792847]
[291.24777222 -372.86441040]
[285.97714233 -358.82089233]
[280.70651245 -344.77737427]
[275.54107666 -330.69482422]
[270.48114014 -316.57400513]
[265.42117310 -302.45321655]
[268.41168213 -287.86190796]
[256.47268677 -277.48065186]
[251.41273499 -263.35983276]
[246.35278320 -249.23904419]
[241.29283142 -235.11825562]
[236.33865356 -220.96000671]
[231.49050903 -206.76509094]
[226.64236450 -192.57017517]
[221.79421997 -178.37527466]
[216.94607544 -164.18035889]
[226.73081970 -152.81028748]
[236.51469421 -141.44120789]
[251.27363586 -144.11956787]
[260.06677246 -157.25181580]
[275.58639526 -160.23803711]
[288.62493896 -151.30653381]
[291.44689941 -135.75622559]
[282.37805176 -122.81282806]
[266.79879761 -120.15543365]
[253.95199585 -129.36061096]
[239.19303894 -126.68226624]
[227.05778503 -117.86548615]
[219.94976807 -104.65655518]
[212.84173584 -91.44761658]
[213.62411499 -76.57357788]
[200.27120972 -68.08766937]
[193.16317749 -54.87873840]
[192.76170349 -47.49840927]
[185.84873962 -41.52653885]
[178.54389954 -28.42541695]
[171.23907471 -15.32429314]
[163.93423462 -2.22317004]
[156.62940979 10.87795258]
[149.32456970 23.97907639]
[142.01974487 37.08020020]
[134.71490479 50.18132019]
[127.41007233 63.28244400]
[120.10523987 76.38356781]
[112.80040741 89.48468781]
[117.85345459 100.47422028]
[114.13395691 112.92669678]
[102.36100006 120.31109619]
[97.51285553 134.50601196]
[92.66471100 148.70091248]
[87.81656647 162.89582825]
[82.96842194 177.09074402]
[89.67990112 191.14755249]
[84.56098175 205.47413635]
[71.11860657 211.78588867]
[66.27046204 225.98078918]
[61.42231750 240.17570496]
[56.57417297 254.37062073]
[56.76188278 263.50390625]
[51.54587173 268.74066162]
[46.48592377 282.86148071]
[41.42597198 296.98226929]
[36.36602402 311.10305786]
[31.30607414 325.22384644]
[31.35713387 334.35894775]
[26.06336975 339.51708984]
[20.79274750 353.56060791]
[15.52212429 367.60412598]
[10.35669422 381.68667603]
[5.29674435 395.80749512]
[0.23679455 409.92828369]
[-4.50503778 424.15905762]
[-8.92636585 438.49264526]
[-13.34769344 452.82623291]
[-17.76902008 467.15982056]
[-22.19034767 481.49343872]
[-26.61167526 495.82702637]
[-13.50814247 503.25073242]
[-2.30714226 513.31811523]
[6.46743250 525.55822754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[33 200]
[34 199]
[35 198]
[37 197]
[38 196]
[39 195]
[40 193]
[41 192]
[42 191]
[43 190]
[44 189]
[45 187]
[46 186]
[47 185]
[48 184]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[56 69]
[57 68]
[58 67]
[59 66]
[70 174]
[71 173]
[72 172]
[73 171]
[74 170]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[80 164]
[81 162]
[82 161]
[84 159]
[85 158]
[86 157]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[93 140]
[94 139]
[95 138]
[96 137]
[98 135]
[99 134]
[100 133]
[102 132]
[103 131]
[104 130]
[105 129]
[108 127]
[110 126]
[111 125]
[112 124]
[113 123]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
