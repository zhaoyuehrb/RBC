%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUCACUUUGACUUGCCUUAGGGAUGGGCUGUGACACUUUACUUUUUUUCUUUUUUCUUUUUUUUCAGUCUUUUCUCCUUGCUCAGCUUCAAUGUGUUCCGGAGUGGGGACGGGGUGGCUGAACCUCGCAGGUGGCAGAGAGGCUCCCCUGGGGCUGUGGGGCUCUACGUGGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[225.04251099 277.86376953]
[216.05807495 265.85211182]
[207.07365417 253.84045410]
[198.08921814 241.82878113]
[184.27021790 236.27142334]
[182.20030212 220.58619690]
[173.21586609 208.57453918]
[164.23144531 196.56288147]
[155.24700928 184.55120850]
[146.26258850 172.53955078]
[137.27815247 160.52787781]
[128.18983459 148.59463501]
[118.99828339 136.74072266]
[109.80673218 124.88680267]
[102.84365845 130.55607605]
[93.46797943 134.00523376]
[82.45333862 134.34281921]
[70.87448120 130.95704651]
[59.43043518 140.65415955]
[47.98638916 150.35125732]
[36.54234314 160.04835510]
[36.79866028 175.68383789]
[26.90462875 187.79342651]
[11.53190994 190.65934753]
[-2.06097174 182.92840576]
[-7.45587158 168.25090027]
[-2.10548353 153.55711365]
[11.46390343 145.78500366]
[26.84523964 148.60430908]
[38.28928757 138.90721130]
[49.73333359 129.21009827]
[61.17737961 119.51300049]
[54.63533401 106.01405334]
[48.09388733 92.51629639]
[33.39170837 95.49051666]
[18.68953133 98.46472931]
[3.98735380 101.43894958]
[-7.94214582 112.69145966]
[-23.57209015 107.72790527]
[-26.82373238 91.65435791]
[-14.35206127 81.00591278]
[1.01313639 86.73677063]
[15.71531391 83.76255035]
[30.41749191 80.78833771]
[45.11967087 77.81411743]
[30.79137993 73.37564087]
[16.46308899 68.93716431]
[1.57288718 70.74876404]
[-13.20863533 68.19796753]
[-26.63047791 61.50064087]
[-37.55671310 51.22360992]
[-45.06262207 38.23664093]
[-48.51295853 23.63886070]
[-47.61571121 8.66571999]
[-42.44681931 -5.41556311]
[-33.44373703 -17.41324997]
[-21.36841965 -26.31194496]
[-7.24283886 -31.35852242]
[7.73752069 -32.12588120]
[22.30482864 -28.54907227]
[35.22621155 -20.93081665]
[45.40810013 -9.91586399]
[51.98876953 3.56355715]
[54.41128159 18.36664581]
[52.47052765 33.24086380]
[56.78449249 47.60713196]
[61.09845734 61.97340012]
[64.20015717 47.29758835]
[67.30184937 32.62177658]
[70.40354919 17.94596291]
[73.50524139 3.27014971]
[76.60693359 -11.40566349]
[79.70863342 -26.08147621]
[74.99214935 -41.18330765]
[85.19396973 -52.03559494]
[88.29566956 -66.71141052]
[91.39736176 -81.38722229]
[94.49905396 -96.06303406]
[97.47327423 -110.76521301]
[100.31979370 -125.49264526]
[103.16630554 -140.22007751]
[106.01281738 -154.94752502]
[108.85933685 -169.67495728]
[111.70584869 -184.40238953]
[114.55236816 -199.12982178]
[117.39888000 -213.85725403]
[120.24539948 -228.58470154]
[122.70755768 -243.38124084]
[124.78369141 -258.23687744]
[126.85983276 -273.09249878]
[115.59642029 -283.76559448]
[112.79072571 -299.02691650]
[119.52159882 -313.00814819]
[133.20088196 -320.33325195]
[148.56860352 -318.18554688]
[159.71557617 -307.39086914]
[162.35554504 -292.10000610]
[155.47340393 -278.19262695]
[141.71545410 -271.01635742]
[139.63932800 -256.16073608]
[137.56318665 -241.30509949]
[139.40711975 -238.26992798]
[139.85702515 -234.18383789]
[138.43199158 -229.71900940]
[134.97282410 -225.73817444]
[132.12631226 -211.01074219]
[129.27980042 -196.28330994]
[126.43328857 -181.55587769]
[123.58676910 -166.82844543]
[120.74025726 -152.10099792]
[117.89373779 -137.37356567]
[115.04722595 -122.64613342]
[112.20070648 -107.91870117]
[114.02336121 -100.73533630]
[109.17487335 -92.96134186]
[106.07317352 -78.28553009]
[102.97148132 -63.60971451]
[99.86978149 -48.93390274]
[104.80812073 -34.88177872]
[94.38444519 -22.97978020]
[91.28275299 -8.30396748]
[88.18105316 6.37184525]
[85.07936096 21.04765892]
[81.97766113 35.72347260]
[78.87596893 50.39928436]
[75.77426910 65.07509613]
[112.01198578 64.73696136]
[130.49783325 90.30731201]
[121.66065216 115.69525146]
[130.85220337 127.54917145]
[140.04374695 139.40309143]
[147.79722595 144.28433228]
[149.28982544 151.54345703]
[158.27424622 163.55511475]
[167.25868225 175.56678772]
[176.24310303 187.57844543]
[185.22753906 199.59011841]
[194.21195984 211.60177612]
[208.67359924 218.01829529]
[210.10089111 232.84436035]
[219.08531189 244.85601807]
[228.06974792 256.86767578]
[237.05416870 268.87933350]
[254.13526917 275.72470093]
[255.55995178 293.20422363]
[264.75149536 305.05816650]
[279.32232666 311.22271729]
[281.00671387 326.02175903]
[290.19827271 337.87570190]
[299.38983154 349.72961426]
[308.68389893 361.50332642]
[323.35952759 367.41406250]
[325.30050659 382.18164062]
[334.69641113 393.87426758]
[344.09231567 405.56686401]
[353.48822021 417.25946045]
[362.88412476 428.95208740]
[372.28002930 440.64468384]
[381.67590332 452.33728027]
[397.15112305 457.76409912]
[399.92263794 473.92736816]
[387.13937378 484.19967651]
[371.95166016 478.01379395]
[369.98330688 461.73318481]
[360.58740234 450.04058838]
[351.19149780 438.34799194]
[341.79559326 426.65536499]
[332.39971924 414.96276855]
[323.00381470 403.27017212]
[313.60791016 391.57754517]
[299.60433960 386.50314331]
[296.99130249 370.89923096]
[290.33255005 367.64593506]
[287.53588867 358.92117310]
[278.34436035 347.06723022]
[269.15280151 335.21331787]
[255.23942566 329.89663696]
[252.89758301 314.24969482]
[243.70603943 302.39578247]
[231.73254395 300.55978394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[3 141]
[4 140]
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 131]
[13 130]
[14 129]
[18 32]
[19 31]
[20 30]
[21 29]
[34 45]
[35 44]
[36 43]
[37 42]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[75 118]
[76 117]
[77 116]
[78 115]
[79 113]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 101]
[89 100]
[90 99]
[145 179]
[146 178]
[148 176]
[149 175]
[150 174]
[151 172]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
