%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGAUGCCUAUUUUAGUCAAAGCGGCUGCGGGCUUGGGGACCCGGCCCGGGCAGCGGAGCUUCCGGACCCGCCGACCCGCCGAGGAGCGCGCGUCGGGCUCCCGUCGAGCAGCUGAGCCCGUGUGCCCCGCGUCCCGCGCCCCGAAGCUGCCGCUCCGAACUUUGGUCGGCGCUGCCCAGGCUCCCCGCCAGGGACCAGCCGGGAAUUUUCAAA\
) } def
/len { sequence length } bind def

/coor [
[341.00900269 594.29174805]
[355.58856201 590.76513672]
[370.41921997 593.01287842]
[383.29711914 600.69940186]
[376.04809570 587.56732178]
[368.79907227 574.43524170]
[355.87460327 567.03204346]
[355.97918701 551.21118164]
[348.73016357 538.07910156]
[341.48114014 524.94702148]
[334.23211670 511.81494141]
[321.30764771 504.41174316]
[321.41226196 488.59088135]
[314.16323853 475.45880127]
[306.91418457 462.32672119]
[292.57717896 458.45559692]
[285.03857422 445.24105835]
[289.19616699 430.22933960]
[281.94714355 417.09725952]
[274.69812012 403.96517944]
[267.35464478 390.88565063]
[252.96333313 387.22155762]
[245.23507690 374.11700439]
[249.17591858 359.04693604]
[241.73840332 346.02066040]
[234.30088806 332.99441528]
[226.86337280 319.96813965]
[219.42585754 306.94189453]
[211.98835754 293.91564941]
[198.95852661 286.69946289]
[198.83514404 270.87875366]
[191.39762878 257.85247803]
[183.58781433 245.04597473]
[175.41218567 232.46984863]
[167.23655701 219.89370728]
[159.06092834 207.31758118]
[146.20895386 206.43545532]
[136.05912781 198.19027710]
[132.45675659 185.41722107]
[136.93202209 172.71673584]
[128.93846130 160.02409363]
[120.94491577 147.33145142]
[112.95136261 134.63880920]
[104.95781708 121.94616699]
[86.15378571 117.73404694]
[77.50665283 100.51311493]
[63.25422287 95.83676147]
[49.00179291 91.16041565]
[34.74936295 86.48406219]
[28.21925926 87.46279144]
[22.96211052 85.32156372]
[20.15702057 81.46212769]
[6.04527426 76.37699127]
[-8.06647205 71.29185486]
[-22.21449280 66.30853271]
[-37.78137970 69.13388824]
[-47.29806519 57.67605591]
[-61.48162842 52.79480362]
[-75.66518402 47.91355133]
[-89.84874725 43.03230286]
[-103.92117310 49.71096802]
[-118.23578644 44.55863190]
[-124.51615143 31.10156631]
[-138.69970703 26.22031593]
[-155.64430237 26.78323936]
[-160.87596130 10.65667248]
[-146.82789612 1.16519487]
[-133.81845093 12.03675556]
[-119.63489532 16.91800690]
[-106.40306854 10.17603302]
[-91.94938660 14.92426586]
[-84.96749878 28.84874153]
[-70.78393555 33.72999191]
[-56.60037613 38.61124420]
[-42.41681671 43.49249649]
[-27.86443329 40.31799698]
[-17.33324242 52.12496948]
[-9.98944950 51.32976151]
[-2.98133612 57.18010712]
[11.13041019 62.26524353]
[25.24215698 67.35037994]
[39.42571640 72.23162842]
[53.67814636 76.90798187]
[67.93057251 81.58433533]
[82.18300629 86.26068878]
[86.93318176 81.68409729]
[92.80645752 78.68177032]
[93.02261353 63.68332672]
[90.01844025 55.06270599]
[93.35150909 48.47071838]
[90.47187042 39.80770111]
[93.89958954 33.26443100]
[94.54788208 18.27844620]
[95.19617462 3.29246116]
[95.84446716 -11.69352245]
[96.49275970 -26.67950630]
[93.73825836 -35.38312149]
[97.25991058 -41.87631989]
[98.12409210 -56.85140610]
[98.98827362 -71.82649231]
[99.85245514 -86.80157471]
[100.71662903 -101.77666473]
[101.58081055 -116.75174713]
[102.44499207 -131.72683716]
[94.46520996 -141.85589600]
[95.49015808 -154.30778503]
[104.42724609 -162.45491028]
[105.50714111 -177.41600037]
[94.97713470 -189.20133972]
[95.94820404 -204.97576904]
[107.84422302 -215.38058472]
[123.60750580 -214.24279785]
[133.88597107 -202.23742676]
[132.58157349 -186.48706055]
[120.46821594 -176.33610535]
[119.38832855 -161.37503052]
[127.88457489 -146.01733398]
[117.42007446 -130.86265564]
[116.55590057 -115.88756561]
[115.69171906 -100.91248322]
[114.82753754 -85.93739319]
[113.96335602 -70.96231079]
[113.09917450 -55.98722458]
[112.23500061 -41.01213837]
[111.47874451 -26.03121567]
[110.83045197 -11.04523087]
[110.18215942 3.94075322]
[109.53386688 18.92673683]
[108.88557434 33.91271973]
[108.34528351 48.90298843]
[108.02105713 63.89948273]
[107.80490112 78.89792633]
[118.71986389 87.51878357]
[122.48081207 100.90948486]
[117.65045929 113.95261383]
[125.64400482 126.64525604]
[133.63755798 139.33789062]
[141.63110352 152.03053284]
[149.62466431 164.72317505]
[166.75370789 168.28718567]
[175.82464600 182.85139465]
[171.63705444 199.14195251]
[179.81268311 211.71807861]
[187.98831177 224.29421997]
[196.16394043 236.87034607]
[200.09031677 238.69660950]
[202.94679260 241.40330505]
[204.58808899 244.54699707]
[205.02754211 247.68257141]
[204.42388916 250.41497803]
[211.86138916 263.44122314]
[225.42320251 271.58911133]
[225.01460266 286.47811890]
[232.45211792 299.50439453]
[239.88963318 312.53063965]
[247.32714844 325.55691528]
[254.76466370 338.58316040]
[262.20217896 351.60940552]
[277.18338013 355.87573242]
[284.54049683 369.19213867]
[280.38092041 383.44815063]
[287.34988403 389.34506226]
[287.83020020 396.71615601]
[295.07922363 409.84823608]
[302.32824707 422.98031616]
[317.24639893 427.46206665]
[324.41088867 440.88311768]
[320.04629517 455.07769775]
[327.29531860 468.20977783]
[334.54434204 481.34185791]
[347.98730469 489.68432617]
[347.36419678 504.56591797]
[354.61322021 517.69799805]
[361.86227417 530.83007812]
[369.11129761 543.96215820]
[382.55426025 552.30462646]
[381.93115234 567.18621826]
[389.18017578 580.31829834]
[396.42919922 593.45037842]
[404.96386719 605.78564453]
[414.69735718 617.19879150]
[429.53939819 622.67822266]
[431.91101074 637.38281250]
[441.64453125 648.79589844]
[451.37802124 660.20904541]
[461.11151123 671.62213135]
[480.39553833 677.50659180]
[483.06420898 696.66070557]
[493.12255859 707.78857422]
[503.18090820 718.91644287]
[518.94488525 723.43640137]
[522.64935303 739.41168213]
[510.48352051 750.40826416]
[494.96252441 745.11383057]
[492.05303955 728.97479248]
[481.99468994 717.84692383]
[471.93634033 706.71905518]
[461.73251343 707.12457275]
[452.80081177 701.73583984]
[448.21234131 692.12396240]
[449.69842529 681.35565186]
[439.96490479 669.94250488]
[430.23141479 658.52941895]
[420.49792480 647.11633301]
[406.35208130 642.45318604]
[403.28424072 626.93225098]
[393.55075073 615.51916504]
[396.20388794 630.28265381]
[393.07806396 644.95336914]
[384.63732910 657.35308838]
[372.13488770 665.64099121]
[357.42691040 668.58648682]
[342.69711304 665.75225830]
[330.13235474 657.55914307]
[321.59811401 645.22357178]
[318.36145020 630.57690430]
[320.90289307 615.79382324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 179]
[5 178]
[6 177]
[8 175]
[9 174]
[10 173]
[11 172]
[13 170]
[14 169]
[15 168]
[18 165]
[19 164]
[20 163]
[21 161]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[31 151]
[32 150]
[33 145]
[34 144]
[35 143]
[36 142]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[46 85]
[47 84]
[48 83]
[49 82]
[52 81]
[53 80]
[54 79]
[55 77]
[57 75]
[58 74]
[59 73]
[60 72]
[63 69]
[64 68]
[87 132]
[88 131]
[90 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[107 116]
[108 115]
[180 207]
[181 206]
[183 204]
[184 203]
[185 202]
[186 201]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
