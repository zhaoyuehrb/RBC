%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAGGGAUCCGCCCCGCCGAGUCAGCCACGCCUUCGUCUCCCACGCGCUGCGCCCGGCCGCGCCGUCACCCAGCAGCGGCGCAGGGCACCAUGGGAAACGGACGGAAGCUCCAUUGAGCCAAAUAAGUUGGCCACGUGGGGCGGAACGGAAACCUCGCAGGGUCAGACCGUAGCGACGCGGGAAGUCCGGACGCAGUAGCUCCCUGAAGCGGAGGCGAAGGGGAGUUUAAGCCCCAGCGGCGGCA\
) } def
/len { sequence length } bind def

/coor [
[93.33004761 204.58421326]
[91.05217743 199.00561523]
[90.40360260 192.97441101]
[91.45716858 186.95977783]
[94.15244293 181.43582153]
[98.29870605 176.84414673]
[103.58832550 173.55868530]
[102.83163452 158.57777405]
[102.07495117 143.59687805]
[75.06239319 123.13257599]
[75.79991150 97.01755524]
[62.19863510 90.69258118]
[48.59735870 84.36760712]
[34.99608612 78.04262543]
[21.39481163 71.71765137]
[7.79353666 65.39266968]
[-5.80773735 59.06769562]
[-19.40901184 52.74271774]
[-33.01028824 46.41773987]
[-46.61156082 40.09276581]
[-60.14035797 47.46011353]
[-75.23672485 45.47185135]
[-86.13866425 35.09824753]
[-88.80977631 20.46940231]
[-102.41104889 14.14442539]
[-116.01232147 7.81944799]
[-129.61360168 1.49447095]
[-143.21487427 -4.83050585]
[-156.81614685 -11.15548325]
[-173.00559998 2.25131345]
[-193.62017822 5.99002647]
[-213.35594177 -0.83239484]
[-227.16882324 -16.40055466]
[-231.56369019 -36.67307281]
[-246.19955444 -39.95814896]
[-260.85583496 -43.15083313]
[-275.53198242 -46.25099182]
[-290.20809937 -49.35115433]
[-304.88424683 -52.45131683]
[-319.56039429 -55.55147552]
[-334.66174316 -50.83341599]
[-345.51507568 -61.03409958]
[-360.19122314 -64.13426208]
[-374.86737061 -67.23442078]
[-389.54348755 -70.33458710]
[-404.21963501 -73.43474579]
[-424.17950439 -65.59310913]
[-438.87484741 -80.10323334]
[-453.65777588 -82.64580536]
[-468.56976318 -77.35966492]
[-479.80136108 -87.14234161]
[-494.58428955 -89.68491364]
[-509.36721802 -92.22748566]
[-524.15014648 -94.77006531]
[-538.93310547 -97.31263733]
[-553.71606445 -99.85520935]
[-568.49896240 -102.39778137]
[-574.78570557 -100.48422241]
[-580.27850342 -101.81568146]
[-583.62084961 -105.19551849]
[-598.33496094 -108.11027527]
[-613.37554932 -103.20206451]
[-624.35675049 -113.26500702]
[-639.07080078 -116.17975616]
[-648.63177490 -104.22792053]
[-662.65655518 -98.09893036]
[-677.92230225 -99.20117188]
[-690.92114258 -107.28137207]
[-698.66595459 -120.48274994]
[-699.37707520 -135.77172852]
[-692.89111328 -149.63500977]
[-680.69842529 -158.88691711]
[-665.60089111 -161.40142822]
[-651.06774902 -156.60073853]
[-640.43865967 -145.58798218]
[-636.15606689 -130.89384460]
[-621.44195557 -127.97908783]
[-607.45379639 -133.09577942]
[-595.42016602 -122.82435608]
[-580.70611572 -119.90960693]
[-565.95642090 -117.18072510]
[-551.17346191 -114.63815308]
[-536.39056396 -112.09557343]
[-521.60760498 -109.55300140]
[-506.82464600 -107.01042938]
[-492.04171753 -104.46785736]
[-477.25878906 -101.92527771]
[-463.40417480 -107.39328003]
[-451.11520386 -97.42874908]
[-436.33224487 -94.88616943]
[-430.04461670 -101.09380341]
[-421.47888184 -103.76641083]
[-412.50631714 -102.18832397]
[-405.14794922 -96.58720398]
[-401.11947632 -88.11088562]
[-386.44332886 -85.01071930]
[-371.76718140 -81.91056061]
[-357.09106445 -78.81040192]
[-342.41491699 -75.71023560]
[-328.36331177 -80.65004730]
[-316.46023560 -70.22761536]
[-301.78408813 -67.12745667]
[-287.10794067 -64.02729034]
[-272.43182373 -60.92713165]
[-257.75567627 -57.82696915]
[-250.57965088 -59.51534653]
[-242.91447449 -54.59400558]
[-228.27862549 -51.30892944]
[-222.88052368 -60.41367340]
[-215.32553101 -67.82702637]
[-206.12025452 -73.05185699]
[-209.12777710 -87.74725342]
[-212.13529968 -102.44265747]
[-215.14280701 -117.13806152]
[-226.42231750 -129.04203796]
[-221.49418640 -144.68318176]
[-205.42805481 -147.97123718]
[-194.75137329 -135.52371216]
[-200.44740295 -120.14557648]
[-197.43989563 -105.45017242]
[-194.43237305 -90.75477600]
[-191.42486572 -76.05937195]
[-182.06149292 -75.22596741]
[-173.11686707 -72.27139282]
[-165.06593323 -67.34311676]
[-158.33833313 -60.69366455]
[-153.29548645 -52.66766739]
[-150.21116638 -43.68403244]
[-149.25663757 -34.21406555]
[-150.49116516 -24.75675774]
[-136.88989258 -18.43177986]
[-123.28862000 -12.10680389]
[-109.68734741 -5.78182650]
[-96.08607483 0.54315060]
[-82.48480225 6.86812735]
[-69.57699585 -0.51608503]
[-54.61921310 1.13581657]
[-43.37075424 11.39864159]
[-40.28658295 26.49148941]
[-26.68530846 32.81646729]
[-13.08403492 39.14144516]
[0.51723945 45.46641922]
[14.11851406 51.79139709]
[27.71978760 58.11637497]
[41.32106400 64.44135284]
[54.92233658 70.76632690]
[68.52361298 77.09130859]
[82.12488556 83.41628265]
[105.33705902 66.40660858]
[139.62130737 81.69303131]
[153.45219421 75.88727570]
[167.28306580 70.08152008]
[181.11395264 64.27577209]
[187.62864685 46.46561050]
[204.80790710 39.22156906]
[221.52406311 46.72749329]
[235.20405579 40.57461929]
[248.76515198 34.16396713]
[262.20251465 27.49782753]
[275.63986206 20.83169174]
[289.07723999 14.16555405]
[302.47225952 7.41478157]
[311.23074341 -5.76094961]
[326.08557129 -4.67313623]
[339.43774414 -11.50827503]
[352.78994751 -18.34341431]
[364.13391113 -30.94305038]
[379.38146973 -23.53033829]
[376.47937012 -6.82661629]
[359.62506104 -4.99122858]
[346.27288818 1.84391057]
[332.92071533 8.67904949]
[325.11727905 21.36588669]
[309.30740356 20.76696777]
[304.79681396 26.59794807]
[295.74337769 27.60291290]
[282.30599976 34.26905060]
[268.86865234 40.93518829]
[255.43128967 47.60132599]
[253.96562195 50.78254318]
[250.89942932 53.41995239]
[246.50125122 54.77485657]
[241.35691833 54.25460815]
[227.67692566 60.40748215]
[226.04483032 71.66990662]
[219.11587524 80.84783173]
[208.51280212 85.60042572]
[196.81243896 84.64630127]
[186.91970825 78.10665131]
[173.08882141 83.91239929]
[159.25794983 89.71815491]
[145.42706299 95.52391052]
[144.20242310 102.92325592]
[155.79403687 112.44348145]
[141.75315857 117.72193909]
[140.52853394 125.12128448]
[151.75135803 135.07356262]
[166.82255554 131.88526917]
[180.71884155 138.10993958]
[188.19676208 151.16921997]
[186.57041931 165.95072937]
[197.79324341 175.90301514]
[209.01608276 185.85530090]
[220.23892212 195.80758667]
[231.46174622 205.75987244]
[242.68458557 215.71217346]
[253.90740967 225.66445923]
[265.13024902 235.61674500]
[280.20144653 232.42843628]
[294.09771729 238.65312195]
[301.57565308 251.71238708]
[299.94931030 266.49389648]
[311.17214966 276.44619751]
[327.33801270 279.20236206]
[332.77954102 294.67239380]
[321.89892578 306.94204712]
[305.88925171 303.38934326]
[301.21984863 287.66903687]
[289.99700928 277.71673584]
[275.51602173 281.09887695]
[261.65628052 275.23614502]
[253.81463623 262.18386841]
[255.17796326 246.83956909]
[243.95512390 236.88728333]
[232.73229980 226.93499756]
[221.50946045 216.98271179]
[210.28663635 207.03042603]
[199.06379700 197.07814026]
[187.84095764 187.12585449]
[176.61813354 177.17356873]
[162.13714600 180.55570984]
[148.27740479 174.69297791]
[140.43576050 161.64070129]
[141.79907227 146.29640198]
[130.57624817 136.34411621]
[117.05584717 142.84019470]
[117.81253815 157.82109070]
[118.56922913 172.80198669]
[133.71978760 191.91741943]
[122.28988647 212.64942932]
[124.36499023 227.50520325]
[134.87161255 240.09658813]
[128.96722412 255.39595032]
[112.72575378 257.66461182]
[102.85504150 244.56877136]
[109.50921631 229.58030701]
[107.43411255 214.72453308]
[101.87010956 212.74684143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 238]
[8 237]
[9 236]
[11 148]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[24 135]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[34 108]
[35 107]
[36 105]
[37 104]
[38 103]
[39 102]
[40 101]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[48 90]
[49 89]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[60 80]
[61 79]
[63 77]
[64 76]
[111 122]
[112 121]
[113 120]
[114 119]
[150 192]
[151 191]
[152 190]
[153 189]
[156 184]
[157 183]
[158 179]
[159 178]
[160 177]
[161 176]
[162 174]
[164 172]
[165 171]
[166 170]
[196 235]
[197 234]
[201 230]
[202 229]
[203 228]
[204 227]
[205 226]
[206 225]
[207 224]
[208 223]
[212 219]
[213 218]
[240 247]
[241 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
