%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAACCAUCCAACUGCUGACUUCAAACUAGAAGGUCAGCAAAGGAAAGUGGAAGUUGGAUUCUGAAAGAUCGAGGUGCCCACAGGAAUUUUAUGGUCGUCGGAUUUUGAAGACUUGAACUAGACUGGGGGUUCUCCUUGCAUUUCUUGCCUGUUGCCUAUCUUUGUCCUCUCUCUUCCGGCUUCGAG\
) } def
/len { sequence length } bind def

/coor [
[-147.69410706 368.23568726]
[-153.32890320 370.74044800]
[-159.40008545 371.55813599]
[-165.41687012 370.64550781]
[-170.89921570 368.09832764]
[-182.78051758 377.25445557]
[-184.94879150 392.67962646]
[-197.12855530 401.79598999]
[-211.82075500 399.63381958]
[-223.70205688 408.78994751]
[-235.58335876 417.94607544]
[-235.76687622 431.42517090]
[-243.57116699 442.17700195]
[-255.96142578 446.40243530]
[-268.33520508 442.76895142]
[-280.36706543 451.72631836]
[-292.39889526 460.68371582]
[-304.43075562 469.64108276]
[-316.46258545 478.59844971]
[-328.49444580 487.55584717]
[-340.52630615 496.51321411]
[-352.48327637 505.57028198]
[-364.36459351 514.72644043]
[-376.24588013 523.88256836]
[-378.02737427 539.58612061]
[-390.44305420 549.36499023]
[-406.12689209 547.41754150]
[-415.77398682 534.89916992]
[-413.66082764 519.23681641]
[-401.04116821 509.72262573]
[-385.40200806 512.00122070]
[-373.52072144 502.84512329]
[-361.63940430 493.68899536]
[-358.25396729 487.10327148]
[-349.48367310 484.48138428]
[-337.45181274 475.52398682]
[-325.41998291 466.56661987]
[-313.38812256 457.60922241]
[-301.35629272 448.65185547]
[-289.32443237 439.69448853]
[-277.29257202 430.73709106]
[-275.57489014 414.01580811]
[-262.03414917 403.49621582]
[-244.73948669 406.06475830]
[-232.85818481 396.90863037]
[-220.97688293 387.75250244]
[-219.32408142 372.99432373]
[-207.40518188 363.53945923]
[-191.93664551 365.37313843]
[-180.05534363 356.21701050]
[-173.89750671 333.31872559]
[-149.73561096 329.79946899]
[-138.99761963 319.32589722]
[-128.25961304 308.85235596]
[-117.52160645 298.37881470]
[-106.78360748 287.90524292]
[-96.04560089 277.43170166]
[-85.30760193 266.95816040]
[-74.56959534 256.48458862]
[-63.83159256 246.01104736]
[-66.97351074 233.02452087]
[-63.25376892 220.07881165]
[-53.54237747 210.58956909]
[-40.30457306 207.11532593]
[-26.97557449 210.66835022]
[-16.06497002 200.37472534]
[-12.11714649 186.01283264]
[3.23039317 182.17048645]
[14.14099789 171.87686157]
[14.31614780 157.02745056]
[25.23441505 146.43283081]
[40.80865479 146.71722412]
[51.71925735 136.42359924]
[62.62986374 126.12997437]
[73.54046631 115.83634949]
[84.45107269 105.54272461]
[75.36265564 88.06820679]
[87.73991394 63.77671051]
[92.87021637 49.68132019]
[98.00051880 35.58593369]
[103.13082123 21.49054337]
[100.58007812 5.87631083]
[112.20374298 -3.43710041]
[117.33404541 -17.53248978]
[122.46434784 -31.62787819]
[110.33116913 -40.60930252]
[101.22959137 -52.63359070]
[95.89041138 -66.72111511]
[94.73833466 -81.72714233]
[97.85820770 -96.43490601]
[104.98883057 -109.65422821]
[115.54479218 -120.31782532]
[128.66453552 -127.56752014]
[143.28068542 -130.82325745]
[158.20681763 -129.82952881]
[163.33712769 -143.92491150]
[168.46742249 -158.02029419]
[173.59773254 -172.11569214]
[171.04698181 -187.72991943]
[182.67065430 -197.04333496]
[187.80094910 -211.13871765]
[192.93125916 -225.23411560]
[187.48161316 -240.32321167]
[196.00335693 -253.91583252]
[211.95936584 -255.58486938]
[223.10952759 -244.04998779]
[220.90040588 -228.15975952]
[207.02664185 -220.10380554]
[201.89634705 -206.00842285]
[196.76603699 -191.91302490]
[199.68374634 -177.30699158]
[187.69311523 -166.98538208]
[182.56282043 -152.88999939]
[177.43251038 -138.79460144]
[172.30221558 -124.69921875]
[184.37506104 -115.86612701]
[193.47892761 -103.97701263]
[198.86921692 -89.99021149]
[200.10113525 -75.03617859]
[197.06628418 -60.32612228]
[190.00228882 -47.05390167]
[179.47404480 -36.29915619]
[166.32872009 -28.93944740]
[151.62744141 -25.57868958]
[136.55973816 -26.49757767]
[131.42942810 -12.40218735]
[126.29913330 1.69320178]
[129.21682739 16.29923820]
[117.22621155 26.62084579]
[112.09590912 40.71623611]
[106.96560669 54.81162262]
[101.83530426 68.90701294]
[105.79912567 75.27397156]
[117.05907440 65.36370087]
[128.24284363 55.36753082]
[141.85932922 61.65968704]
[141.49444580 76.65525055]
[127.58921051 82.27793884]
[113.72675323 88.00788879]
[117.69057465 94.37484741]
[132.60310364 95.99235535]
[147.51564026 97.60987091]
[160.86778259 88.71605682]
[176.10159302 93.74700165]
[181.53100586 108.84339142]
[172.99104309 122.42456818]
[157.03282166 124.07221985]
[145.89813232 112.52239990]
[130.98559570 110.90489197]
[116.07305908 109.28737640]
[130.56497192 113.15834045]
[141.78424072 123.11464691]
[147.35031128 137.04371643]
[146.08213806 151.99000549]
[138.24879456 164.78215027]
[125.51242828 172.70584106]
[110.57548523 174.07980347]
[96.60736847 168.61248779]
[86.57189178 157.46397400]
[82.59843445 142.99983215]
[85.53010559 128.28910828]
[94.74469757 116.45333099]
[83.83409119 126.74695587]
[72.92348480 137.04057312]
[62.01288223 147.33419800]
[51.10227966 157.62782288]
[50.48063278 173.19224548]
[39.26909256 183.47602844]
[24.43462181 182.78746033]
[13.52401733 193.08108521]
[8.79579353 208.17924500]
[-5.77134609 211.28532410]
[-16.68195152 221.57894897]
[-14.29236603 238.31455994]
[-22.26351166 253.03405762]
[-37.28397751 260.03805542]
[-53.35803986 256.74905396]
[-64.09604645 267.22259521]
[-74.83404541 277.69613647]
[-85.57205200 288.16970825]
[-96.31005096 298.64324951]
[-107.04805756 309.11679077]
[-117.78605652 319.59036255]
[-128.52406311 330.06390381]
[-139.26206970 340.53747559]
[-137.56646729 346.67605591]
[-137.66075134 353.00341797]
[-139.51467896 359.01153564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 50]
[6 49]
[9 46]
[10 45]
[11 44]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 33]
[23 32]
[24 31]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[65 173]
[66 172]
[68 170]
[69 169]
[72 166]
[73 165]
[74 164]
[75 163]
[76 162]
[78 132]
[79 131]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[95 115]
[96 114]
[97 113]
[98 112]
[100 110]
[101 109]
[102 108]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
