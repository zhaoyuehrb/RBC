%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAGCCCCAGCCCGGCCCUGCUCGGGCCGCCGGGCGCGGGGCUGCGGCCGCGUCCCGGAGGCGCCGCCAGCACAGCCAGGUGCUGUUGGGAACACAGAGGAAGUGACUGGCUGGGGGUUCAGGGAAAGCUCCGUAGAAGAGGGAACACUUGAGCUGGGUCUUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[84.87708282 114.95252228]
[72.62944794 123.61251831]
[60.38180923 132.27250671]
[48.13417435 140.93249512]
[41.33320618 155.21736145]
[26.47427940 156.24766541]
[14.22664356 164.90765381]
[1.97900891 173.56764221]
[-10.26862621 182.22763062]
[-22.51626015 190.88761902]
[-34.76389694 199.54760742]
[-42.05718231 216.43670654]
[-59.56316757 217.40573120]
[-71.64964294 226.28926086]
[-83.73612213 235.17279053]
[-95.82259369 244.05632019]
[-107.90907288 252.93984985]
[-119.99555206 261.82339478]
[-132.08203125 270.70690918]
[-144.00326538 279.81097412]
[-155.75524902 289.13250732]
[-167.50721741 298.45404053]
[-173.03210449 313.89450073]
[-189.21261597 316.56344604]
[-199.40362549 303.71527100]
[-193.12150574 288.56710815]
[-176.82875061 286.70205688]
[-165.07678223 277.38052368]
[-153.32479858 268.05899048]
[-151.89622498 263.46548462]
[-147.54464722 259.73611450]
[-140.96556091 258.62042236]
[-128.87907410 249.73690796]
[-116.79260254 240.85337830]
[-104.70612335 231.96984863]
[-92.61965179 223.08631897]
[-80.53317261 214.20278931]
[-68.44669342 205.31925964]
[-66.30010223 193.39047241]
[-56.27023315 185.89416504]
[-43.42388535 187.29997253]
[-31.17625237 178.63998413]
[-18.92861748 169.97999573]
[-6.68098211 161.32000732]
[5.56665325 152.66001892]
[17.81428719 144.00003052]
[23.73922348 130.33457947]
[39.47418594 128.68486023]
[51.72182083 120.02487183]
[63.96945572 111.36488342]
[76.21708679 102.70488739]
[84.86911774 88.50685120]
[97.78214264 86.11029053]
[101.59784698 71.60372162]
[96.32872009 53.97788620]
[109.11620331 41.98294067]
[112.66476440 27.40872574]
[116.21331787 12.83450985]
[119.76187134 -1.73970497]
[115.50891113 -16.97856712]
[126.03748322 -27.51415062]
[129.58604431 -42.08836746]
[133.13459778 -56.66258240]
[128.88163757 -71.90144348]
[139.41020203 -82.43702698]
[135.15724182 -97.67588806]
[145.68580627 -108.21147156]
[149.23435974 -122.78569031]
[152.64889526 -137.39189148]
[155.92910767 -152.02882385]
[159.20933533 -166.66577148]
[162.48954773 -181.30271912]
[165.76976013 -195.93966675]
[168.91539001 -210.60612488]
[171.92616272 -225.30085754]
[174.93692017 -239.99560547]
[166.49870300 -253.08888245]
[169.76138306 -267.94854736]
[182.29583740 -275.91241455]
[185.30661011 -290.60714722]
[176.63198853 -300.94055176]
[175.52119446 -314.19107056]
[182.15708923 -325.48843384]
[193.91632080 -330.81002808]
[197.19654846 -345.44699097]
[196.01847839 -354.54440308]
[200.67379761 -360.32150269]
[204.22236633 -374.89572144]
[207.77091980 -389.46994019]
[211.31947327 -404.04415894]
[209.19183350 -420.86407471]
[224.76542664 -427.56478882]
[235.51547241 -414.45474243]
[225.89369202 -400.49560547]
[222.34512329 -385.92138672]
[218.79656982 -371.34716797]
[215.24801636 -356.77294922]
[211.83348083 -342.16674805]
[208.55326843 -327.52981567]
[218.15512085 -313.74334717]
[214.76647949 -296.94378662]
[200.00134277 -287.59637451]
[196.99057007 -272.90164185]
[205.38313293 -260.65008545]
[202.53912354 -245.70465088]
[189.63166809 -236.98483276]
[186.62089539 -222.29010010]
[183.61012268 -207.59535217]
[185.35466003 -200.38401794]
[180.40670776 -192.65945435]
[177.12649536 -178.02250671]
[173.84626770 -163.38555908]
[170.56605530 -148.74861145]
[167.28584290 -134.11166382]
[168.89761353 -126.86949158]
[163.80857849 -119.23712921]
[160.26002502 -104.66291809]
[164.76679993 -90.46649933]
[153.98442078 -78.88847351]
[158.49119568 -64.69205475]
[147.70881653 -53.11402512]
[144.16024780 -38.53981018]
[140.61169434 -23.96559525]
[145.11846924 -9.76917839]
[134.33609009 1.80885100]
[130.78753662 16.38306618]
[127.23897552 30.95728111]
[123.69042206 45.53149796]
[129.71371460 56.04927826]
[126.84892273 68.23886108]
[116.10440826 75.41941833]
[112.28871155 89.92598724]
[116.89775085 104.20032501]
[128.47650146 113.73618317]
[140.05525208 123.27203369]
[151.72109985 132.70112610]
[163.47308350 142.02265930]
[178.96575928 140.40568542]
[190.75114441 150.02645874]
[192.19721985 164.80632019]
[203.94920349 174.12786865]
[215.70117188 183.44940186]
[231.32136536 185.96340942]
[236.48449707 199.93449402]
[252.77725220 201.79953003]
[259.05935669 216.94770813]
[248.86836243 229.79586792]
[232.68785095 227.12693787]
[227.16296387 211.68647766]
[212.38336182 209.83920288]
[206.37963867 195.20137024]
[194.62765503 185.87983704]
[182.87568665 176.55830383]
[168.15466309 178.51461792]
[156.10369873 169.22866821]
[154.15155029 153.77464294]
[142.39956665 144.45310974]
[135.17749023 142.75352478]
[130.51939392 134.85078430]
[118.94064331 125.31493378]
[107.36189270 115.77907562]
[112.95146942 129.69873047]
[121.22251892 142.21231079]
[121.76473236 157.20249939]
[114.41938782 170.28096008]
[101.33681488 177.61895752]
[86.34692383 177.06831360]
[73.83798981 168.79023743]
[67.47198486 155.20812988]
[69.11254883 140.29811096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 29]
[21 28]
[22 27]
[53 132]
[54 131]
[56 128]
[57 127]
[58 126]
[59 125]
[61 123]
[62 122]
[63 121]
[65 119]
[67 117]
[68 116]
[69 114]
[70 113]
[71 112]
[72 111]
[73 110]
[74 108]
[75 107]
[76 106]
[79 103]
[80 102]
[84 99]
[85 98]
[87 97]
[88 96]
[89 95]
[90 94]
[133 161]
[134 160]
[135 159]
[136 157]
[137 156]
[140 153]
[141 152]
[142 151]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
