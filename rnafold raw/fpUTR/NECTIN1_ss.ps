%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGCGGAUCCCACCCAGCCCACCCCGCCCCGGCCGACGGCUGCAGCUGACCUGGAUCCUUCGAGCGCCCGCCGACCGCCAGCGAUCUUCCCUCAUCUUCCGGGCUGGUUUCUGCUGCGCGAGGAGCGCUGCCCUCGCCGCCCCUCUCGCCGGACCCCCGGCCCCCG\
) } def
/len { sequence length } bind def

/coor [
[117.21974182 181.69940186]
[110.39775085 168.34048462]
[103.57576752 154.98158264]
[96.75377655 141.62266541]
[89.93178558 128.26376343]
[82.17174530 109.70948792]
[89.68394470 97.57157135]
[79.51944733 86.54057312]
[69.35494995 75.50956726]
[59.19045639 64.47856903]
[49.02595901 53.44756317]
[38.86146164 42.41656113]
[25.62253380 47.71815872]
[11.39878082 48.17549133]
[-2.09654713 43.75391769]
[-13.24492359 35.00522614]
[-20.71665764 22.99887466]
[-23.62947464 9.19126320]
[-21.65265083 -4.75089693]
[-15.04443836 -17.15178490]
[-25.00695229 -28.36553955]
[-34.96946716 -39.57929611]
[-44.93198013 -50.79305267]
[-54.89449310 -62.00680923]
[-64.85700989 -73.22056580]
[-74.81951904 -84.43431854]
[-86.95970917 -79.42696381]
[-100.34278107 -79.03019714]
[-113.24372864 -83.47631836]
[-123.93584442 -92.36177063]
[-130.92149353 -104.67744446]
[-133.14048767 -118.92124176]
[-148.12503052 -118.24049377]
[-158.75224304 -106.85190582]
[-173.95840454 -106.37499237]
[-184.75018311 -116.57661438]
[-199.73474121 -115.89586639]
[-214.71928406 -115.21511841]
[-229.70382690 -114.53437042]
[-244.68836975 -113.85362244]
[-260.23678589 -107.09468079]
[-271.03579712 -120.16439819]
[-261.46633911 -134.15945435]
[-245.36911011 -128.83816528]
[-230.38456726 -129.51892090]
[-215.40002441 -130.19966125]
[-200.41548157 -130.88041687]
[-185.43093872 -131.56115723]
[-175.60861206 -142.69927979]
[-160.42185974 -143.60310364]
[-148.80577087 -133.22503662]
[-133.82122803 -133.90577698]
[-125.58702087 -146.44363403]
[-130.91589355 -160.46516418]
[-136.24476624 -174.48669434]
[-152.61221313 -178.68499756]
[-163.15785217 -191.67451477]
[-163.88897705 -208.22373962]
[-154.71554565 -221.81744385]
[-160.29814148 -235.73989868]
[-165.88075256 -249.66233826]
[-171.46334839 -263.58477783]
[-177.04594421 -277.50723267]
[-182.75473022 -291.37841797]
[-188.58921814 -305.19720459]
[-195.04483032 -318.73696899]
[-202.10827637 -331.96978760]
[-209.17172241 -345.20263672]
[-215.99822998 -351.32684326]
[-216.24079895 -358.74050903]
[-223.06278992 -372.09939575]
[-237.11116028 -380.55960083]
[-236.53810120 -396.94876099]
[-221.93312073 -404.40707397]
[-208.32057190 -395.26208496]
[-209.70387268 -378.92138672]
[-202.88188171 -365.56250000]
[-195.93888855 -352.26608276]
[-188.87544250 -339.03323364]
[-181.81199646 -325.80041504]
[-174.83537292 -339.07922363]
[-160.13992310 -342.08648682]
[-148.50781250 -332.61581421]
[-148.47360229 -317.61584473]
[-160.06239319 -308.09219360]
[-174.77043152 -311.03170776]
[-168.93594360 -297.21292114]
[-163.41767883 -292.25613403]
[-163.12348938 -283.08984375]
[-157.54089355 -269.16738892]
[-151.95829773 -255.24494934]
[-146.37570190 -241.32249451]
[-140.79309082 -227.40003967]
[-127.58158112 -225.34449768]
[-117.03200531 -216.95489502]
[-111.97372437 -204.34436035]
[-113.83084106 -190.77529907]
[-122.22323608 -179.81556702]
[-116.89436340 -165.79403687]
[-111.56549835 -151.77250671]
[-96.68428802 -155.60179138]
[-81.68636322 -153.59504700]
[-68.74280548 -146.22010803]
[-59.66058731 -134.70883179]
[-55.63085175 -120.85465240]
[-57.07462692 -106.73432159]
[-63.60576630 -94.39683533]
[-53.64325333 -83.18307495]
[-43.68074036 -71.96932220]
[-33.71822357 -60.75556564]
[-23.75571060 -49.54180908]
[-13.79319668 -38.32805252]
[-3.83068299 -27.11429787]
[11.04381275 -32.53236771]
[26.89743423 -31.83313560]
[41.30690002 -25.09394836]
[52.05835342 -13.31763363]
[57.48749161 1.71662188]
[56.73714066 17.72203827]
[49.89246368 32.25206375]
[60.05696106 43.28306580]
[70.22145844 54.31407166]
[80.38595581 65.34506989]
[90.55045319 76.37607574]
[100.71494293 87.40707397]
[114.01136017 94.35008240]
[128.87245178 96.38671112]
[143.73355103 98.42334747]
[158.59465027 100.45997620]
[167.55827332 98.52066040]
[173.70616150 102.67089081]
[188.52781677 104.97704315]
[205.10821533 101.43775940]
[213.09910583 116.39041901]
[200.94290161 128.20832825]
[186.22166443 119.79870605]
[171.40000916 117.49255371]
[156.55801392 115.32107544]
[141.69691467 113.28443909]
[126.83582306 111.24781036]
[111.97473145 109.21117401]
[103.29069519 121.44177246]
[110.11268616 134.80067444]
[116.93467712 148.15959167]
[123.75666046 161.51849365]
[130.57865906 174.87741089]
[144.75578308 173.33303833]
[158.57815552 176.71926880]
[170.38633728 184.60855103]
[178.76995850 196.03399658]
[182.73606873 209.60784912]
[181.82673645 223.69003296]
[176.17184448 236.58630371]
[166.47099304 246.75212097]
[173.04927063 260.23269653]
[179.62756348 273.71328735]
[186.20585632 287.19387817]
[192.78413391 300.67446899]
[206.67657471 309.38836670]
[205.80601501 325.76440430]
[191.06800842 332.95626831]
[177.62374878 323.56564331]
[179.30355835 307.25274658]
[172.72526550 293.77215576]
[166.14698792 280.29156494]
[159.56869507 266.81100464]
[152.99040222 253.33041382]
[137.20668030 254.54693604]
[122.12569427 249.60827637]
[110.06059265 239.24089050]
[102.87380219 225.00624084]
[101.68959808 209.06565857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[12 120]
[20 113]
[21 112]
[22 111]
[23 110]
[24 109]
[25 108]
[26 107]
[32 52]
[33 51]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[53 100]
[54 99]
[55 98]
[59 93]
[60 92]
[61 91]
[62 90]
[63 89]
[64 87]
[65 86]
[66 80]
[67 79]
[68 78]
[70 77]
[71 76]
[126 141]
[127 140]
[128 139]
[129 138]
[131 137]
[132 136]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
