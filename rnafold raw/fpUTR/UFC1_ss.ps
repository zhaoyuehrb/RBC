%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGUCACCCUUUGUGCCUUAUGCGGUGAUUUUAAUGAUAGGUGUCAUAUAUAGGACGGAGUAAUCUGUUUACAUUCUGUUCUUCUCGAUGCACUCACAAGCGGGUAACUAGGUGACAAGAAAACAAAGAUCUUAUUCAAAAGAGGUCUUACAGCAACCCAACGUCUCAUCUUCCCAUAGUAAAGAUGACGGCGCCUUGAGGUAAGCUACAGGCAACACCACUUCCGCGUUUCUCUUGCGCCCUGGUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[84.36923218 187.49873352]
[94.34446716 174.93392944]
[93.97489929 159.93849182]
[93.60533905 144.94303894]
[68.80241394 132.97695923]
[55.48034668 108.87519836]
[40.48746109 109.33712006]
[25.49457550 109.79904938]
[10.50168991 110.26097107]
[-4.49119568 110.72290039]
[-19.48408127 111.18482208]
[-25.44451332 123.82243347]
[-36.21317673 132.62178040]
[-49.65660858 135.91307068]
[-63.14283752 133.11050415]
[-74.05667114 124.81566620]
[-80.30678558 112.68949890]
[-95.30422211 112.96668243]
[-110.30166626 113.24386597]
[-125.29910278 113.52104950]
[-140.29653931 113.79823303]
[-144.72091675 116.46158600]
[-149.27107239 117.11520386]
[-153.16671753 116.04370880]
[-155.85090637 113.79823303]
[-170.84834290 113.52104950]
[-186.76899719 122.79956055]
[-201.42990112 113.13297272]
[-216.42961121 113.04057312]
[-231.42933655 112.94817352]
[-246.42904663 112.85577393]
[-233.70085144 120.79259491]
[-225.61622620 133.42742920]
[-223.74301147 148.30999756]
[-228.44447327 162.55416870]
[-238.80885315 173.39758301]
[-252.82621765 178.73738098]
[-267.77819824 177.53802490]
[-280.76516724 170.03211975]
[-289.26858521 157.67527771]
[-291.63940430 142.86381531]
[-287.41784668 128.47012329]
[-277.42257690 117.28553772]
[-263.58944702 111.47863007]
[-278.41192627 109.17774963]
[-293.23440552 106.87687683]
[-302.16580200 108.65020752]
[-308.22488403 104.45526886]
[-323.01788330 101.97196198]
[-337.81091309 99.48865509]
[-348.21456909 112.35700989]
[-363.60293579 118.18170166]
[-379.73458862 115.45875549]
[-392.21420288 105.02628326]
[-397.69021606 89.80977631]
[-412.51269531 87.50890350]
[-427.33517456 85.20803070]
[-442.15765381 82.90715027]
[-456.98013306 80.60627747]
[-471.80261230 78.30540466]
[-486.62509155 76.00453186]
[-501.44760132 73.70365143]
[-516.29730225 71.58556366]
[-531.17193604 69.65057373]
[-546.04663086 67.71558380]
[-560.92132568 65.78059387]
[-574.45996094 74.38780212]
[-589.58306885 69.03330994]
[-594.68951416 53.82462692]
[-585.86199951 40.42855453]
[-569.87231445 39.12141037]
[-558.98632812 50.90592575]
[-544.11163330 52.84091568]
[-529.23699951 54.77590179]
[-514.36230469 56.71089172]
[-510.11813354 54.57692337]
[-504.49160767 55.06702423]
[-499.14669800 58.88117218]
[-484.32421875 61.18204880]
[-469.50173950 63.48292160]
[-454.67926025 65.78379822]
[-439.85678101 68.08467102]
[-425.03430176 70.38554382]
[-410.21182251 72.68642426]
[-395.38934326 74.98729706]
[-387.55822754 63.81673813]
[-375.62377930 57.07247162]
[-361.88256836 56.11766052]
[-349.00704956 61.19504547]
[-339.52597046 71.36862183]
[-335.32760620 84.69564056]
[-320.53457642 87.17894745]
[-305.74157715 89.66226196]
[-290.93353271 92.05439758]
[-276.11105347 94.35527039]
[-261.28857422 96.65614319]
[-246.33665466 97.85605621]
[-231.33692932 97.94845581]
[-216.33721924 98.04085541]
[-201.33749390 98.13325500]
[-192.53016663 89.86695099]
[-180.05094910 89.80448151]
[-170.57116699 98.52361298]
[-155.57373047 98.80079651]
[-140.57373047 98.80079651]
[-125.57628632 98.52361298]
[-110.57884979 98.24642944]
[-95.58140564 97.96924591]
[-80.58396912 97.69206238]
[-73.10234833 83.35490417]
[-59.32765198 74.70415497]
[-42.97602844 74.18564606]
[-28.51570511 82.03598022]
[-19.94600677 96.19194031]
[-4.95312166 95.73001099]
[10.03976440 95.26808929]
[25.03264999 94.80615997]
[40.02553558 94.34423828]
[55.01842117 93.88230896]
[56.55438995 86.83765411]
[59.18634415 80.12503815]
[62.84789658 73.91380310]
[67.44667053 68.36063385]
[72.86666107 63.60562897]
[78.97113037 59.76873016]
[85.60609436 56.94673157]
[92.60416412 55.21082687]
[99.78881073 54.60480118]
[106.97878265 55.14395142]
[111.70182800 40.90692520]
[116.42487335 26.66990280]
[121.14791107 12.43287849]
[125.87095642 -1.80414593]
[130.59399414 -16.04117012]
[135.31704712 -30.27819443]
[140.04008484 -44.51521683]
[130.88778687 -57.04578400]
[130.88237000 -72.56285858]
[140.02592468 -85.09980774]
[154.80255127 -89.83592224]
[169.53034973 -84.95006561]
[178.54618835 -72.32095337]
[178.38327026 -56.80473709]
[169.10424805 -44.36771393]
[154.27711487 -39.79217529]
[149.55406189 -25.55515099]
[144.83102417 -11.31812668]
[140.10798645 2.91889787]
[135.38493347 17.15592194]
[130.66189575 31.39294624]
[125.93885040 45.62997055]
[121.21580505 59.86699295]
[129.95381165 65.88932800]
[137.05484009 73.77581787]
[142.13081360 83.09545898]
[156.78353882 79.88645935]
[171.43626404 76.67746735]
[184.77059937 63.95923996]
[201.27381897 69.96163940]
[215.88589478 66.57237244]
[230.49797058 63.18310165]
[245.08889771 59.70388794]
[259.65811157 56.13486099]
[274.22732544 52.56583405]
[288.75146484 48.81758881]
[303.22833252 44.89069366]
[317.70520020 40.96380234]
[332.18203735 37.03690720]
[346.63446045 33.02091217]
[361.06182861 28.91596985]
[375.48922729 24.81102371]
[389.91659546 20.70607948]
[404.34399414 16.60113525]
[418.77136230 12.49618912]
[433.19876099 8.39124489]
[437.57083130 -6.40364075]
[449.26248169 -16.46886826]
[464.54293823 -18.59266281]
[478.53631592 -12.09732723]
[486.77731323 0.94449949]
[486.63632202 16.37121773]
[478.15826416 29.26021957]
[464.04849243 35.49866867]
[448.80941772 33.09590149]
[437.30371094 22.81863022]
[422.87631226 26.92357445]
[408.44894409 31.02851868]
[394.02154541 35.13346481]
[379.59414673 39.23840714]
[365.16677856 43.34335327]
[350.73937988 47.44829941]
[345.18170166 52.28792572]
[336.10894775 51.51377106]
[321.63208008 55.44066238]
[307.15521240 59.36755753]
[292.67834473 63.29444885]
[289.57943726 66.89492035]
[284.19628906 68.60359955]
[277.79635620 67.13504791]
[263.22714233 70.70407867]
[248.65792847 74.27310181]
[242.92518616 78.90406036]
[233.88723755 77.79518127]
[219.27516174 81.18444824]
[204.66308594 84.57372284]
[198.01329041 94.65743256]
[185.88888550 97.61271667]
[174.64524841 91.33019257]
[159.99252319 94.53918457]
[145.33979797 97.74818420]
[142.43043518 116.13774872]
[132.38386536 131.81280518]
[141.20063782 143.94805908]
[150.01742554 156.08331299]
[158.83419800 168.21856689]
[157.33511353 153.29365540]
[161.97195435 139.02832031]
[171.95985413 127.83718109]
[185.60823059 121.61447906]
[200.60687256 121.41352081]
[214.41706848 127.26831055]
[224.70123291 138.18783569]
[229.71859741 152.32382202]
[228.61993408 167.28352356]
[221.59117126 180.53482056]
[209.82206726 189.83471680]
[195.30468750 193.60906982]
[180.49632263 191.21900940]
[167.90272522 183.06834412]
[174.67138672 196.45434570]
[181.44004822 209.84036255]
[188.20870972 223.22636414]
[203.47482300 226.61456299]
[212.95037842 239.05433655]
[212.16130066 254.67199707]
[201.48019409 266.09335327]
[185.95031738 267.92562866]
[172.90443420 259.30364990]
[168.50238037 244.29843140]
[174.82269287 229.99502563]
[168.05403137 216.60900879]
[161.28536987 203.22300720]
[154.51670837 189.83700562]
[146.69894409 177.03533936]
[137.88215637 164.90008545]
[129.06538391 152.76483154]
[120.24860382 140.62957764]
[114.55886078 142.99777222]
[108.60078430 144.57348633]
[108.97035217 159.56892395]
[109.33991241 174.56437683]
[119.92197418 186.62254333]
[116.95061493 202.38803101]
[102.70520020 209.76690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 251]
[3 250]
[4 249]
[6 119]
[7 118]
[8 117]
[9 116]
[10 115]
[11 114]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[25 104]
[26 103]
[28 100]
[29 99]
[30 98]
[31 97]
[44 96]
[45 95]
[46 94]
[48 93]
[49 92]
[50 91]
[55 85]
[56 84]
[57 83]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[63 75]
[64 74]
[65 73]
[66 72]
[129 152]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[155 210]
[156 209]
[157 208]
[159 205]
[160 204]
[161 203]
[162 201]
[163 200]
[164 199]
[165 196]
[166 195]
[167 194]
[168 193]
[169 191]
[170 190]
[171 189]
[172 188]
[173 187]
[174 186]
[175 185]
[212 247]
[213 246]
[214 245]
[215 244]
[229 243]
[230 242]
[231 241]
[232 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
