%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGGCUUCGGCUCGGGGCCUAUGAGAGCCGGGCUCCGGGGGGCGGGCCGGACUGUGGCGGCUGCCGGGGGCGGUGGCGGUGGUGGCGGCGGCGGCGGAGGCGGACUGGGGAGGCGGCGGCCUGGCUCGGCCUGGCCUGGCCUGUCAGGGCGCGGGCGGCGGCGGCUCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[111.66998291 115.08872223]
[112.01748657 122.09404755]
[110.35503387 129.45980835]
[106.59930420 136.71412659]
[99.48461914 149.91947937]
[92.36992645 163.12481689]
[85.25523376 176.33016968]
[78.14054871 189.53552246]
[71.02585602 202.74085999]
[63.91116714 215.94621277]
[56.79647827 229.15156555]
[49.68178940 242.35690308]
[47.49201965 259.16885376]
[30.73091316 261.71865845]
[23.64080620 246.31843567]
[36.47644043 235.24221802]
[43.59112930 222.03686523]
[50.70582199 208.83152771]
[57.82051086 195.62617493]
[64.93520355 182.42082214]
[72.04988861 169.21548462]
[79.16458130 156.01013184]
[86.27927399 142.80477905]
[93.39395905 129.59944153]
[90.80118561 122.56185913]
[79.01731873 131.84304810]
[66.54898071 123.50395203]
[70.62702942 109.06894684]
[85.61563873 108.48670197]
[83.02286530 101.44911957]
[69.04141998 96.01597595]
[55.05996704 90.58283234]
[41.07851791 85.14968872]
[22.96535683 88.38723755]
[12.50005531 74.31620026]
[-1.57510448 69.13066101]
[-15.65026379 63.94511032]
[-29.72542381 58.75956726]
[-43.80058289 53.57402039]
[-59.42469788 56.06350708]
[-68.69245148 44.40340042]
[-82.76760864 39.21785355]
[-98.39172363 41.70734406]
[-107.65947723 30.04723549]
[-121.73463440 24.86169052]
[-135.80979919 19.67614365]
[-147.84622192 24.36613464]
[-159.47454834 19.73486137]
[-164.64730835 8.77919579]
[-178.62875366 3.34605241]
[-192.61019897 -2.08709097]
[-206.59165955 -7.52023458]
[-221.79478455 -2.39732409]
[-235.20043945 -11.21028709]
[-236.52491760 -27.19857407]
[-224.75221252 -38.09733582]
[-208.91333008 -35.54597855]
[-201.15850830 -21.50168419]
[-187.17706299 -16.06854057]
[-173.19561768 -10.63539791]
[-159.21415710 -5.20225430]
[-142.05484009 -8.81809616]
[-130.62425232 5.60098505]
[-116.54908752 10.78653145]
[-102.47393036 15.97207737]
[-87.85656738 13.11168480]
[-77.58206177 25.14269638]
[-63.50690460 30.32824135]
[-48.88953781 27.46784973]
[-38.61503601 39.49885941]
[-24.53987694 44.68440628]
[-10.46471786 49.86995316]
[3.61044145 55.05549622]
[17.68560028 60.24104309]
[28.81592560 55.45566559]
[40.59670639 59.68412399]
[46.51166153 71.16824341]
[60.49311066 76.60138702]
[74.47456360 82.03453064]
[88.45600891 87.46766663]
[103.37198639 89.05314636]
[118.18314362 86.68048859]
[132.99430847 84.30782318]
[147.80546570 81.93516541]
[160.20803833 72.11239624]
[173.99894714 77.73912048]
[188.81010437 75.36646271]
[203.62127686 72.99379730]
[216.02384949 63.17102814]
[229.81475830 68.79775238]
[242.21733093 58.97498703]
[256.00823975 64.60171509]
[270.81939697 62.22904968]
[283.22195435 52.40628052]
[297.01287842 58.03300858]
[311.82403564 55.66034698]
[324.22662354 45.83757782]
[338.01751709 51.46430206]
[352.82867432 49.09164047]
[359.91503906 35.41356659]
[373.53747559 28.61040878]
[388.37820435 31.10363579]
[398.78057861 41.73041534]
[413.59176636 39.35775375]
[428.40292358 36.98509216]
[437.67260742 24.46668434]
[452.72702026 22.27145958]
[464.60427856 31.18584251]
[479.41546631 28.81318092]
[494.22662354 26.44051933]
[509.03778076 24.06785774]
[517.23468018 14.08374596]
[529.64111328 12.42624378]
[539.51678467 19.44443321]
[554.36749268 17.33353615]
[569.21820068 15.22263908]
[584.06896973 13.11174107]
[596.64294434 3.50938892]
[610.33239746 9.37862682]
[618.41699219 5.06094599]
[625.46362305 7.36392212]
[640.34930420 5.51544619]
[655.23492432 3.66697049]
[670.12060547 1.81849456]
[682.86212158 -7.56045055]
[696.44586182 -1.45052826]
[711.33154297 -3.29900408]
[726.21722412 -5.14748001]
[741.19049072 -13.09961796]
[752.97686768 -0.91284645]
[744.52917480 13.78655910]
[728.06567383 9.73818874]
[713.17999268 11.58666515]
[698.29431152 13.43514061]
[686.61755371 22.68186951]
[671.96911621 16.70416260]
[657.08343506 18.55263901]
[642.19775391 20.40111542]
[627.31207275 22.24959183]
[612.44329834 24.22935486]
[600.93151855 33.68072128]
[586.17987061 27.96246910]
[571.32910156 30.07336617]
[556.47839355 32.18426514]
[541.62768555 34.29516220]
[528.43829346 45.85184479]
[511.41043091 38.87901688]
[496.59927368 41.25167847]
[481.78811646 43.62434006]
[466.97695923 45.99700165]
[458.47863770 58.17543411]
[443.49182129 60.79264069]
[430.77557373 51.79625320]
[415.96441650 54.16891479]
[401.15325928 56.54157639]
[394.59091187 69.88600159]
[381.27160645 76.89030457]
[366.20574951 74.68284607]
[355.20135498 63.90280151]
[340.39019775 66.27546692]
[329.04699707 75.92852783]
[314.19668579 70.47150421]
[299.38552856 72.84416962]
[288.04235840 82.49723053]
[273.19204712 77.04021454]
[258.38088989 79.41287231]
[247.03771973 89.06593323]
[232.18740845 83.60891724]
[220.84423828 93.26197815]
[205.99392700 87.80496216]
[191.18276978 90.17761993]
[176.37161255 92.55028534]
[165.02842712 102.20333862]
[150.17813110 96.74632263]
[135.36697388 99.11898804]
[120.55580902 101.49164581]
[105.74464417 103.86431122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[30 80]
[31 79]
[32 78]
[33 77]
[35 74]
[36 73]
[37 72]
[38 71]
[39 70]
[41 68]
[42 67]
[44 65]
[45 64]
[46 63]
[49 61]
[50 60]
[51 59]
[52 58]
[81 177]
[82 176]
[83 175]
[84 174]
[86 172]
[87 171]
[88 170]
[90 168]
[92 166]
[93 165]
[95 163]
[96 162]
[98 160]
[99 159]
[103 155]
[104 154]
[105 153]
[108 150]
[109 149]
[110 148]
[111 147]
[114 145]
[115 144]
[116 143]
[117 142]
[119 140]
[121 139]
[122 138]
[123 137]
[124 136]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
