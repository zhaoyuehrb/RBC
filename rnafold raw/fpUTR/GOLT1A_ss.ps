%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGAAGCACCUGCGUGGUGUGCGGGGGUGGAGCGGGGGCUGGAGGGAGAGUUAAUGAUUUGCCACAGGCUCAUUUCGCAACUUAACCAAGGGUCAGCUUCCCGUGACCAUGUACCAGCUGCGUCCUCUGGGCCACGCUCCACUUGCCCGCUUCCACCCGGAAAGCCCCCCAGGCUGAGUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[226.41001892 725.75170898]
[211.33786011 728.41412354]
[196.75836182 723.75616455]
[186.02180481 712.84814453]
[181.59535217 698.19665527]
[184.49618530 683.16857910]
[194.05770874 671.21716309]
[208.08276367 665.08880615]
[209.08999634 650.12268066]
[210.09722900 635.15655518]
[211.10447693 620.19042969]
[209.97155762 605.23327637]
[206.72154236 590.58953857]
[203.47154236 575.94586182]
[193.16044617 565.19738770]
[197.72390747 550.04858398]
[194.47389221 535.40490723]
[191.22387695 520.76123047]
[187.97387695 506.11755371]
[176.23371887 500.77798462]
[169.61947632 489.47955322]
[170.74334717 476.24038696]
[179.41795349 465.92037964]
[176.41441345 451.22415161]
[173.41085815 436.52795410]
[170.40730286 421.83172607]
[167.40376282 407.13552856]
[164.15374756 392.49185181]
[160.65818787 377.90481567]
[157.16264343 363.31781006]
[153.66708374 348.73077393]
[150.17152405 334.14376831]
[146.67597961 319.55673218]
[143.18041992 304.96972656]
[139.68486023 290.38272095]
[136.18931580 275.79568481]
[125.69911194 265.22189331]
[130.00743103 249.99861145]
[126.51187897 235.41159058]
[116.02168274 224.83779907]
[120.33000946 209.61450195]
[116.83444977 195.02748108]
[113.33889771 180.44046021]
[109.84334564 165.85343933]
[106.34779358 151.26641846]
[102.85223389 136.67941284]
[99.35668182 122.09239197]
[95.86112976 107.50537109]
[80.91264343 114.99483490]
[61.42005920 110.46775818]
[48.22480011 103.33438110]
[35.02953720 96.20100403]
[21.83427620 89.06761932]
[8.63901615 81.93424225]
[-6.33561468 86.22355652]
[-19.61586761 78.80132294]
[-23.61278915 64.49887085]
[-36.80804825 57.36549377]
[-51.87979507 62.12133789]
[-65.86125946 54.75288391]
[-70.45749664 39.63169861]
[-62.94162750 25.72891808]
[-47.77269745 21.29281235]
[-33.95015335 28.95524597]
[-29.67467117 44.17023087]
[-16.47941017 51.30361176]
[-2.32373023 46.81447601]
[11.15975857 53.86076736]
[15.77239418 68.73898315]
[28.96765518 75.87236023]
[42.16291809 83.00573730]
[55.35817719 90.13911438]
[68.55343628 97.27249146]
[75.42705536 94.27192688]
[69.42613983 80.52460480]
[83.17356110 74.52389526]
[89.17428589 88.27079773]
[96.04790497 85.27023315]
[99.78801727 70.74399567]
[103.52812958 56.21776199]
[107.26824188 41.69152451]
[103.21626282 26.39799309]
[113.88261414 16.00192642]
[117.62271881 1.47568905]
[106.77395630 -9.30630875]
[102.80481720 -23.97405243]
[106.68460083 -38.56218338]
[117.27458191 -49.17860413]
[131.65975952 -53.04283524]
[135.39987183 -67.56907654]
[129.52194214 -79.06538391]
[132.95077515 -91.09705353]
[143.31967163 -97.35237885]
[147.30328369 -111.81373596]
[151.28689575 -126.27509308]
[155.27050781 -140.73645020]
[159.25411987 -155.19779968]
[149.46868896 -167.24043274]
[148.66418457 -182.73663330]
[157.14999390 -195.72781372]
[171.66311646 -201.21859741]
[186.62298584 -197.09767151]
[196.27720642 -184.94960022]
[196.91354370 -169.44557190]
[188.28732300 -156.54721069]
[173.71548462 -151.21418762]
[169.73187256 -136.75283813]
[165.74826050 -122.29148102]
[161.76464844 -107.83012390]
[157.78103638 -93.36876678]
[163.11962891 -76.66084290]
[149.92610168 -63.82896423]
[146.18598938 -49.30272675]
[156.91633606 -38.97193146]
[161.06254578 -24.56134605]
[157.41485596 -9.91345406]
[146.85572815 1.01365972]
[132.14895630 5.21579981]
[128.40884399 19.74203682]
[132.72834778 33.99655151]
[121.79447937 45.43163300]
[118.05436707 59.95787048]
[114.31425476 74.48410797]
[110.57414246 89.01034546]
[110.44814301 104.00981903]
[113.94370270 118.59683228]
[117.43925476 133.18385315]
[120.93480682 147.77087402]
[124.43035889 162.35789490]
[127.92591858 176.94490051]
[131.42147827 191.53192139]
[134.91702271 206.11894226]
[145.65725708 217.73609924]
[141.09890747 231.91603088]
[144.59445190 246.50305176]
[155.33468628 258.12020874]
[150.77632141 272.30014038]
[154.27188110 286.88714600]
[157.76744080 301.47418213]
[161.26298523 316.06118774]
[164.75854492 330.64822388]
[168.25410461 345.23522949]
[171.74964905 359.82223511]
[175.24520874 374.40927124]
[178.74076843 388.99627686]
[183.02696228 394.07440186]
[183.95039368 399.70855713]
[182.09997559 404.13195801]
[185.10351562 418.82818604]
[188.10707092 433.52438354]
[191.11062622 448.22061157]
[194.11416626 462.91680908]
[208.87907410 472.27993774]
[212.24806213 489.09161377]
[202.61755371 502.86752319]
[205.86756897 517.51123047]
[209.11756897 532.15490723]
[212.36758423 546.79858398]
[222.91113281 558.59448242]
[218.11521912 572.69586182]
[221.36523438 587.33953857]
[224.61523438 601.98321533]
[236.23106384 595.57037354]
[252.07463074 596.48718262]
[268.12875366 606.52539062]
[275.80990601 619.40954590]
[283.49102783 632.29364014]
[291.17214966 645.17773438]
[306.30987549 650.49078369]
[311.45797729 665.68536377]
[302.66723633 679.10559082]
[286.68118286 680.45660400]
[275.76290894 668.70196533]
[278.28802490 652.85888672]
[270.60690308 639.97473145]
[262.92578125 627.09063721]
[255.24465942 614.20654297]
[247.95114136 615.95428467]
[233.36413574 619.44989014]
[226.07061768 621.19763184]
[225.06338501 636.16375732]
[224.05613708 651.12994385]
[223.04890442 666.09606934]
[236.12629700 674.04846191]
[244.00016785 687.17327881]
[244.86114502 702.45452881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[11 180]
[12 162]
[13 161]
[14 160]
[16 158]
[17 157]
[18 156]
[19 155]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[38 135]
[39 134]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[47 126]
[48 125]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[57 66]
[58 65]
[78 124]
[79 123]
[80 122]
[81 121]
[83 119]
[84 118]
[89 113]
[90 112]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[165 177]
[166 176]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
