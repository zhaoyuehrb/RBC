%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUCACUGAACCUCCUGCUCCAGCCUCUGCCUCCUCCAUUUUGAUGUCUAGAAUCAGGGGAUCCAGGAUCAUCACCAAGGUCAUUUUCCCAGACAGAUGUGCUGAGGCUGUAGAAAGUGCUUUUUAUUUGGUUGGGAGCUUGUGCAUAAAUGCGAGAGGGGCUGCACAUCUGACGGACUAGAGGUGACUC\
) } def
/len { sequence length } bind def

/coor [
[88.51348114 341.11322021]
[73.86312103 336.27890015]
[64.16983032 324.27709961]
[62.52671432 308.93746948]
[69.45807648 295.15487671]
[82.75215149 287.32730103]
[83.23787689 272.33517456]
[83.72360992 257.34304810]
[84.20933533 242.35090637]
[84.69506073 227.35876465]
[71.42558289 220.54800415]
[62.39194489 208.60218811]
[59.42863083 193.85838318]
[63.17591858 179.23039246]
[72.94243622 167.63288879]
[86.83203125 161.40066528]
[87.31776428 146.40853882]
[87.80348969 131.41639709]
[74.24206543 107.09722900]
[84.44306946 87.85731506]
[77.01329803 74.82663727]
[69.58352661 61.79596329]
[62.15375519 48.76528549]
[54.72398758 35.73461151]
[47.18895340 22.76451874]
[39.54915237 9.85586166]
[31.90934944 -3.05279469]
[24.26954651 -15.96145153]
[7.49765396 -16.43332100]
[-6.14527225 -25.95864105]
[-12.26391029 -41.28197098]
[-8.98986530 -57.31140137]
[-20.01706123 -67.48002625]
[-31.04425621 -77.64865112]
[-42.07145309 -87.81727600]
[-53.09864807 -97.98590088]
[-68.66863251 -97.52404785]
[-79.70692444 -107.99356842]
[-80.05127716 -122.84001923]
[-91.16044617 -132.91902161]
[-102.35085297 -142.90776062]
[-113.54126740 -152.89648438]
[-124.73168182 -162.88520813]
[-129.04385376 -163.62062073]
[-132.54005432 -165.50698853]
[-134.95748901 -168.14379883]
[-136.19149780 -171.08628845]
[-136.29617310 -173.90110779]
[-146.81654358 -184.59323120]
[-157.33691406 -195.28536987]
[-167.85729980 -205.97750854]
[-178.37767029 -216.66963196]
[-178.51837158 -201.67030334]
[-188.16346741 -190.18238831]
[-202.91206360 -187.44763184]
[-216.03463745 -194.71385193]
[-221.54357910 -208.66561890]
[-216.92526245 -222.93695068]
[-204.28694153 -231.01611328]
[-189.39683533 -229.21751404]
[-198.64027405 -241.03102112]
[-207.88369751 -252.84452820]
[-217.12712097 -264.65805054]
[-226.37054443 -276.47155762]
[-238.71194458 -274.38226318]
[-250.69949341 -277.72454834]
[-260.07009888 -285.80358887]
[-265.08197021 -297.03649902]
[-264.83813477 -309.26211548]
[-259.44644165 -320.15679932]
[-268.30249023 -332.26342773]
[-277.15850830 -344.37008667]
[-286.01455688 -356.47671509]
[-301.53051758 -356.29177856]
[-314.17242432 -365.28970337]
[-319.07913208 -380.01055908]
[-314.36398315 -394.79388428]
[-301.84002686 -403.95520020]
[-286.32296753 -403.97180176]
[-273.77941895 -394.83728027]
[-269.03265381 -380.06405640]
[-273.90792847 -365.33273315]
[-265.05187988 -353.22610474]
[-256.19583130 -341.11947632]
[-247.33981323 -329.01284790]
[-229.71331787 -329.89743042]
[-214.94839478 -319.94546509]
[-209.05137634 -302.97817993]
[-214.55703735 -285.71499634]
[-205.31361389 -273.90145874]
[-196.07019043 -262.08795166]
[-186.82675171 -250.27444458]
[-177.58332825 -238.46093750]
[-167.68553162 -227.19001770]
[-157.16516113 -216.49787903]
[-146.64479065 -205.80574036]
[-136.12442017 -195.11361694]
[-125.60404205 -184.42147827]
[-114.74295044 -174.07562256]
[-103.55253601 -164.08689880]
[-92.36212921 -154.09815979]
[-81.17171478 -144.10943604]
[-74.07798767 -141.99763489]
[-69.88265228 -133.86721802]
[-55.05699158 -134.72477722]
[-43.72899246 -124.56942749]
[-42.93002319 -109.01309967]
[-31.90282631 -98.84447479]
[-20.87563133 -88.67584991]
[-9.84843540 -78.50722504]
[1.17876053 -68.33860016]
[15.78782558 -72.65863800]
[30.52911949 -68.81393433]
[41.22125244 -79.33430481]
[51.91338730 -89.85468292]
[62.60552216 -100.37505341]
[73.29765320 -110.89543152]
[83.98978424 -121.41580200]
[94.68192291 -131.93617249]
[98.53057098 -147.87731934]
[114.33470917 -152.25469971]
[125.83638000 -140.56523132]
[121.20366669 -124.83405304]
[105.20229340 -121.24404907]
[94.51016235 -110.72367096]
[83.81803131 -100.20329285]
[73.12589264 -89.68292236]
[62.43376160 -79.16254425]
[51.74162674 -68.64217377]
[41.04949570 -58.12179947]
[44.90063477 -46.55794907]
[43.56749725 -34.30379486]
[37.17820358 -23.60125351]
[44.81800461 -10.69259739]
[52.45780945 2.21605945]
[60.09761047 15.12471581]
[66.21865082 19.28568077]
[67.75466156 28.30484009]
[75.18443298 41.33551788]
[82.61420441 54.36619186]
[90.04397583 67.39686584]
[97.47373962 80.42754364]
[118.14494324 80.38871002]
[133.65747070 101.70880890]
[147.53878784 107.39291382]
[161.42010498 113.07701111]
[175.30142212 118.76110840]
[189.18273926 124.44521332]
[203.06405640 130.12931824]
[199.84394836 115.47902679]
[209.16049194 103.72308350]
[224.15899658 103.51097107]
[233.80424500 114.99875641]
[230.99972534 129.73423767]
[217.80804443 136.87579346]
[231.18415833 143.66400146]
[245.49679565 137.36457825]
[260.49554443 141.78854370]
[269.09848022 154.84701538]
[267.24353027 170.37419128]
[255.80656433 181.03860474]
[240.18775940 181.80485535]
[227.76185608 172.31114197]
[224.39595032 157.04010010]
[211.01985168 150.25189209]
[197.37995911 144.01063538]
[183.49864197 138.32652283]
[169.61732483 132.64242554]
[155.73600769 126.95832825]
[141.85469055 121.27423096]
[127.97336578 115.59012604]
[121.67893219 119.66812897]
[135.03671265 126.49232483]
[135.80575562 141.47259521]
[123.21704102 149.62882996]
[109.85913086 142.80488586]
[109.09005737 127.82412720]
[102.79562378 131.90213013]
[102.30989075 146.89425659]
[101.82416534 161.88639832]
[115.28121948 169.00460815]
[124.27655029 181.20997620]
[127.06911469 196.04985046]
[123.15765381 210.57092285]
[113.36970520 221.90695190]
[99.68719482 227.84449768]
[99.20146942 242.83662415]
[98.71574402 257.82876587]
[98.23001099 272.82089233]
[97.74428558 287.81301880]
[110.50379944 296.48474121]
[116.52848053 310.68707275]
[113.89588165 325.88815308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[16 180]
[17 179]
[18 178]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 136]
[26 135]
[27 134]
[28 133]
[32 111]
[33 110]
[34 109]
[35 108]
[36 107]
[39 104]
[40 102]
[41 101]
[42 100]
[43 99]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[70 85]
[71 84]
[72 83]
[73 82]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[149 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
