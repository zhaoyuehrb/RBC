%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUUGCCGGACGUUGUUGCAAAGGAGUAGAAACAAGCAGAGGAAAACAUCCCAAAGGGUAACCACUAGCGUUCCUGCUUCUUGCAACAUUCAUCCCAGGCUUCCAGCUCAGCCCGCCCCGGGCCAGGUGAUCGGCCGCCACAUCCCCUGCGACUGAAGCACCUGCUCCGCC\
) } def
/len { sequence length } bind def

/coor [
[65.26291656 146.43370056]
[56.96126556 138.49610901]
[50.41923141 129.11499023]
[45.87886047 118.67108917]
[43.50143814 107.58377075]
[43.36183548 96.29409790]
[45.44627380 85.24729919]
[31.61413193 79.44455719]
[17.78199005 73.64180756]
[3.84733963 68.08973694]
[-10.18527794 62.79014969]
[-24.21789551 57.49056244]
[-39.86169815 59.85318375]
[-49.03452682 48.11825562]
[-67.11362457 51.52984238]
[-77.71547699 37.56377411]
[-91.84148407 32.51839828]
[-105.96749878 27.47301865]
[-120.09350586 22.42764091]
[-134.21951294 17.38226128]
[-148.34552002 12.33688354]
[-162.47154236 7.29150534]
[-176.59754944 2.24612713]
[-185.76721191 2.30327415]
[-190.93164062 -3.01995993]
[-204.96426392 -8.31954861]
[-218.99687195 -13.61913776]
[-233.02949524 -18.91872787]
[-247.06211853 -24.21831703]
[-261.09472656 -29.51790619]
[-275.12734985 -34.81749344]
[-290.77114868 -32.45487213]
[-299.94396973 -44.18980026]
[-313.97659302 -49.48938751]
[-328.00921631 -54.78897858]
[-334.64007568 -54.09190369]
[-339.83236694 -56.50738144]
[-342.44702148 -60.54152679]
[-356.27917480 -66.34426880]
[-370.16311646 -72.02191162]
[-384.09777832 -77.57398224]
[-399.78167725 -75.49417877]
[-408.74114990 -87.39279938]
[-422.67581177 -92.94487762]
[-431.16491699 -86.38365936]
[-441.53704834 -83.97479248]
[-451.89025879 -86.09075928]
[-460.35476685 -92.28057861]
[-465.43069458 -101.36386108]
[-466.25354004 -111.65539551]
[-479.86718750 -117.95373535]
[-493.48080444 -124.25207520]
[-507.09442139 -130.55041504]
[-523.36914062 -128.53390503]
[-533.03558350 -141.78123474]
[-526.14971924 -156.66470337]
[-509.79519653 -157.87345886]
[-500.79611206 -144.16404724]
[-487.18246460 -137.86570740]
[-473.56884766 -131.56736755]
[-459.95520020 -125.26902771]
[-442.25399780 -133.33393860]
[-424.02703857 -125.71382141]
[-417.12374878 -106.87952423]
[-403.18908691 -101.32745361]
[-388.50186157 -103.80437469]
[-378.54571533 -91.50863647]
[-364.61105347 -85.95655823]
[-357.20776367 -86.40336609]
[-350.47640991 -80.17641449]
[-336.64428711 -74.37366486]
[-322.70962524 -68.82159424]
[-308.67700195 -63.52200317]
[-294.64437866 -58.22241592]
[-280.00430298 -60.96409988]
[-269.82775879 -48.85011292]
[-255.79513550 -43.55052185]
[-241.76252747 -38.25093460]
[-227.72990417 -32.95134354]
[-213.69729614 -27.65175629]
[-199.66467285 -22.35216713]
[-185.63204956 -17.05257797]
[-171.55216980 -11.87988281]
[-157.42616272 -6.83450460]
[-143.30014038 -1.78912616]
[-129.17413330 3.25625229]
[-115.04812622 8.30163097]
[-100.92211914 13.34700871]
[-86.79610443 18.39238739]
[-72.67009735 23.43776512]
[-61.58503723 18.54157829]
[-49.76100159 22.65615654]
[-43.73493958 34.08563995]
[-29.09484100 31.34395599]
[-18.91830635 43.45794296]
[-4.88568878 48.75753403]
[9.14692879 54.05712128]
[13.81943226 52.92644501]
[19.25012970 54.74354935]
[23.58473587 59.80966949]
[37.41687775 65.61241913]
[51.24901962 71.41516113]
[58.10643768 61.57204819]
[66.93438721 53.34493256]
[77.35748291 47.12445450]
[88.92378998 43.21508408]
[101.12438202 41.82034683]
[113.41576385 43.03241730]
[125.24405670 46.82666779]
[136.06993103 53.06145096]
[145.39326477 61.48316574]
[152.77613831 71.73648834]
[157.86343384 83.37928772]
[171.58856201 77.32775879]
[185.31367493 71.27622986]
[199.03880310 65.22470856]
[212.76393127 59.17317963]
[224.81755066 47.25066376]
[239.61091614 55.53275681]
[235.74769592 72.04068756]
[218.81546021 72.89830017]
[205.09033203 78.94982910]
[191.36520386 85.00135803]
[177.64009094 91.05288696]
[163.91496277 97.10440826]
[162.83259583 112.06530762]
[175.54373169 120.02940369]
[188.25488281 127.99349976]
[200.96603394 135.95759583]
[213.67716980 143.92169189]
[226.38832092 151.88578796]
[244.78514099 152.10832214]
[252.42303467 167.89163208]
[265.27587891 175.62493896]
[278.12875366 183.35826111]
[290.98159790 191.09156799]
[306.79537964 191.57653809]
[313.71182251 204.76788330]
[326.56469727 212.50119019]
[339.41754150 220.23449707]
[352.81619263 212.72634888]
[368.17358398 212.93946838]
[381.35873413 220.81651306]
[388.82482910 234.23860168]
[388.56359863 249.59527588]
[380.64526367 262.75564575]
[367.19982910 270.17965698]
[351.84405518 269.87026978]
[338.70855713 261.91073608]
[331.32672119 248.44209290]
[331.68423462 233.08735657]
[318.83139038 225.35404968]
[305.97851562 217.62074280]
[291.08407593 217.68891907]
[283.24829102 203.94441223]
[270.39544678 196.21110535]
[257.54257202 188.47779846]
[244.68972778 180.74449158]
[232.85653687 183.35731506]
[222.07675171 176.99069214]
[218.42422485 164.59692383]
[205.71307373 156.63282776]
[193.00193787 148.66874695]
[180.29078674 140.70465088]
[167.57965088 132.74055481]
[154.86849976 124.77645111]
[148.69590759 134.97962952]
[140.66236877 143.72642517]
[131.09870911 150.68511963]
[120.39319611 155.59706116]
[108.97582245 158.28616333]
[97.30099487 158.66517639]
[85.82949829 156.73844910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 102]
[8 101]
[9 100]
[10 97]
[11 96]
[12 95]
[14 93]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[30 77]
[31 76]
[33 74]
[34 73]
[35 72]
[38 71]
[39 70]
[40 68]
[41 67]
[43 65]
[44 64]
[50 61]
[51 60]
[52 59]
[53 58]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
[126 166]
[127 165]
[128 164]
[129 163]
[130 162]
[131 161]
[133 158]
[134 157]
[135 156]
[136 155]
[138 153]
[139 152]
[140 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
