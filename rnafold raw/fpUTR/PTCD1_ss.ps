%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCAGAAACCUGAAACCAGCCGCGUGAGUCGGCGACGCGGAUUGCGCCUGCGCGCUUGGGGAGAGGGGGACCCGAGGAAGAGACUGGUUCGCCGCGGGGACCGGGCAGGGCUCCCCGUCGGAGUGCACUGCGCCGGACACUUCAAGCCCUGGAGGGACAGGAAAGCCAGAA\
) } def
/len { sequence length } bind def

/coor [
[90.39644623 153.53071594]
[76.40079498 158.92716980]
[62.40514374 164.32363892]
[52.31259155 176.50767517]
[37.65389252 173.86726379]
[23.65824318 179.26373291]
[9.66259384 184.66018677]
[-4.33305502 190.05665588]
[4.49841833 197.42550659]
[10.43552017 208.91917419]
[12.06023502 223.44567871]
[8.34046936 239.48864746]
[-1.25365865 255.23562622]
[-10.07043743 267.37088013]
[-18.88721657 279.50613403]
[-20.06233978 295.86312866]
[-34.93161392 302.77954102]
[-48.19880295 293.14038086]
[-46.21575928 276.86157227]
[-31.02247047 270.68936157]
[-22.20569229 258.55410767]
[-13.38891315 246.41885376]
[-22.63562012 234.60791016]
[-36.53214264 240.25473022]
[-50.42866516 245.90156555]
[-64.32518768 251.54840088]
[-78.22171021 257.19522095]
[-92.11823273 262.84204102]
[-94.85842133 278.02410889]
[-105.38836670 289.29904175]
[-120.34799957 293.06903076]
[-134.96376038 288.13110352]
[-144.57180786 276.06091309]
[-146.10624695 260.71005249]
[-139.07745361 246.97691345]
[-125.72827911 239.24366760]
[-110.31840515 239.97798157]
[-97.76506042 248.94552612]
[-83.86853790 243.29870605]
[-69.97201538 237.65187073]
[-56.07549286 232.00505066]
[-42.17897034 226.35821533]
[-28.28244781 220.71138000]
[-28.55167007 213.21621704]
[-41.80304718 206.18763733]
[-29.09011269 198.22589111]
[-29.35933495 190.73071289]
[-43.62518311 186.09545898]
[-57.89102936 181.46020508]
[-72.15687561 176.82495117]
[-88.07643127 180.76193237]
[-99.24919128 168.75770569]
[-94.18157196 153.16119385]
[-78.08671570 150.01673889]
[-67.52162170 162.55911255]
[-53.25577545 167.19436646]
[-38.98992920 171.82962036]
[-24.72407913 176.46487427]
[-9.72951794 176.06100464]
[4.26613092 170.66453552]
[18.26177979 165.26808167]
[32.25742722 159.87161255]
[41.34892273 148.07356262]
[57.00868225 150.32798767]
[71.00433350 144.93153381]
[84.99997711 139.53506470]
[61.38333511 99.74089813]
[88.04154968 67.15943909]
[85.09869385 52.45095444]
[74.80429077 40.43696594]
[79.89425659 26.43905258]
[76.95139313 11.73056507]
[74.00853729 -2.97792125]
[71.06567383 -17.68640709]
[68.12281799 -32.39489365]
[64.01860046 -37.64708328]
[63.31460190 -43.32884598]
[65.34830475 -47.68371201]
[62.93532181 -62.48835754]
[49.40369415 -70.32603455]
[44.12445831 -85.04553223]
[49.59030533 -99.69676208]
[63.22043228 -107.36185455]
[78.57910156 -104.42159271]
[88.41443634 -92.26428223]
[88.08247375 -76.63021851]
[77.73996735 -64.90134430]
[80.15294647 -50.09669876]
[82.83130646 -35.33775330]
[85.77416229 -20.62926674]
[88.71701813 -5.92078066]
[91.65988159 8.78770542]
[94.60273743 23.49619293]
[104.68664551 34.45813370]
[99.80717468 49.50809479]
[102.75003815 64.21658325]
[117.13551331 68.46605682]
[127.59835052 57.71760941]
[138.06118774 46.96916962]
[148.52403259 36.22072601]
[158.98686218 25.47228241]
[169.44970703 14.72383881]
[179.91253662 3.97539592]
[190.27848816 -6.86652708]
[200.54669189 -17.80105591]
[199.79981995 -33.58768845]
[210.49618530 -45.22225571]
[226.28982544 -45.80218124]
[237.81066895 -34.98340225]
[238.22357178 -19.18450737]
[227.28359985 -7.77870274]
[211.48121643 -7.53284979]
[201.21301270 3.40167952]
[198.91862488 10.45372200]
[190.66098022 14.43823338]
[180.19815063 25.18667603]
[169.73530579 35.93511963]
[159.27247620 46.68356323]
[148.80963135 57.43200684]
[138.34680176 68.18045044]
[127.88395691 78.92889404]
[137.84364319 92.30763245]
[141.01145935 110.29960632]
[155.90945435 112.04595184]
[170.80744934 113.79229736]
[185.70544434 115.53865051]
[200.60343933 117.28499603]
[215.50143433 119.03134155]
[227.82723999 109.50702667]
[242.91104126 111.49029541]
[251.91505432 123.29975128]
[264.15850830 113.30607605]
[279.87390137 114.98000336]
[289.73757935 127.32842255]
[287.89758301 143.02523804]
[275.44558716 152.75779724]
[259.76907349 150.75196838]
[250.16871643 138.19775391]
[238.67768860 147.60476685]
[223.54412842 146.04595947]
[213.75509644 133.92933655]
[198.85710144 132.18298340]
[183.95910645 130.43664551]
[169.06111145 128.69029236]
[154.16311646 126.94394684]
[139.26512146 125.19760132]
[135.47631836 131.67024231]
[148.42146301 139.24804688]
[140.84342957 152.19306946]
[127.89871216 144.61550903]
[124.10991669 151.08813477]
[132.92669678 163.22338867]
[141.74346924 175.35865784]
[150.56025696 187.49391174]
[166.20721436 189.71838379]
[175.63139343 202.40539551]
[173.24162292 218.02795410]
[160.45567322 227.31748962]
[144.85925293 224.76266479]
[135.70542908 211.87922668]
[138.42500305 196.31068420]
[129.60821533 184.17543030]
[120.79144287 172.04017639]
[111.97466278 159.90492249]
[113.89415741 174.78160095]
[119.95622253 188.50207520]
[118.61824799 203.44227600]
[110.21471405 215.86727905]
[96.84645081 222.67091370]
[81.85541534 222.15231323]
[68.98926544 214.44114685]
[61.46444702 201.46511841]
[61.16210556 186.46817017]
[68.15782166 173.19941711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[5 62]
[6 61]
[7 60]
[8 59]
[13 22]
[14 21]
[15 20]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[47 58]
[48 57]
[49 56]
[50 55]
[68 96]
[69 95]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[78 88]
[79 87]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 113]
[105 112]
[123 146]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[131 138]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
