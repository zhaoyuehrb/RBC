%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCGUCACGGCGUUGCCCCAGCAACCGGACUAUUGGGACGCUGCGGCCUGGCCUUCAGGCCACUGGCUACCGAACCCCGGGGCUCUUCACCAGUCCAGCUCGUUUCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[23.22259521 164.16105652]
[16.01433563 162.05172729]
[10.08575344 157.55392456]
[-3.79162836 163.24761963]
[-17.66901016 168.94132996]
[-31.54639053 174.63504028]
[-45.09814835 181.06542969]
[-58.28520584 188.21395874]
[-71.47226715 195.36248779]
[-77.62454987 202.29455566]
[-85.11072540 202.52050781]
[-98.48495483 209.31240845]
[-111.85918427 216.10432434]
[-115.90695190 221.59838867]
[-121.32874298 223.79214478]
[-126.13861847 222.87998962]
[-139.85812378 228.94422913]
[-153.57765198 235.00845337]
[-167.29716492 241.07269287]
[-176.52976990 254.62596130]
[-192.86120605 253.13725281]
[-199.49108887 238.13803101]
[-189.59916687 225.05819702]
[-173.36138916 227.35317993]
[-159.64187622 221.28894043]
[-145.92236328 215.22471619]
[-132.20285034 209.16047668]
[-118.65109253 202.73008728]
[-105.27686310 195.93818665]
[-91.90263367 189.14627075]
[-78.62079620 182.17543030]
[-65.43373871 175.02690125]
[-52.24667740 167.87835693]
[-51.35402298 165.08915710]
[-49.22946548 162.51167297]
[-45.95793533 160.64573669]
[-41.81421661 159.94680786]
[-37.24009705 160.75765991]
[-23.36271477 155.06394958]
[-9.48533440 149.37023926]
[4.39204741 143.67652893]
[15.76027489 124.33015442]
[38.79921722 126.67403412]
[51.78959656 119.17403412]
[64.77997589 111.67403412]
[77.77036285 104.17403412]
[80.72281647 88.16912079]
[93.65618896 78.28974152]
[94.46133423 63.31136322]
[95.26648712 48.33298492]
[96.07164001 33.35461044]
[96.47435760 18.36001778]
[96.47435760 3.36001825]
[96.47435760 -11.63998222]
[96.47435760 -26.63998222]
[96.47435760 -41.63998032]
[87.81065369 -55.56378555]
[95.77478027 -69.89922333]
[112.17392731 -69.89922333]
[120.13806152 -55.56378555]
[111.47435760 -41.63998032]
[111.47435760 -26.63998222]
[111.47435760 -11.63998222]
[111.47435760 3.36001825]
[111.47435760 18.36001778]
[114.25318909 22.39052200]
[114.43863678 28.23637962]
[111.05001068 34.15975952]
[110.24486542 49.13813782]
[109.43971252 64.11650848]
[108.63456726 79.09488678]
[113.72987366 82.02584839]
[117.89785004 86.17080688]
[120.85697937 91.24980927]
[122.40740967 96.91980743]
[137.10426331 99.92019653]
[151.80113220 102.92057800]
[166.49798584 105.92096710]
[177.27778625 93.46560669]
[192.76681519 88.14017487]
[208.74345398 91.29689026]
[220.90286255 101.98952484]
[226.01683044 117.25431061]
[240.78894043 119.85903168]
[255.56106567 122.46376038]
[270.33316040 125.06848145]
[285.10528564 127.67320251]
[296.96728516 117.48362732]
[312.60430908 117.35439301]
[324.63311768 127.34651184]
[327.37399292 142.74201965]
[319.53283691 156.27162170]
[304.81195068 161.54705811]
[290.16213989 156.07742310]
[282.50057983 142.44531250]
[267.72845459 139.84059143]
[252.95632935 137.23587036]
[238.18421936 134.63114929]
[223.41210938 132.02642822]
[215.29075623 143.09284973]
[203.12207031 149.58694458]
[189.27519226 150.17921448]
[176.47430420 144.69560242]
[167.26272583 134.16308594]
[163.49760437 120.61782074]
[148.80073547 117.61743927]
[134.10388184 114.61705017]
[119.40702057 111.61666870]
[103.62820435 122.32522583]
[85.27036285 117.16441345]
[72.27997589 124.66441345]
[59.28959656 132.16441345]
[46.29921722 139.66441345]
[46.03368759 147.51487732]
[43.01502609 154.69195557]
[37.68471909 160.27253723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 33]
[8 32]
[9 31]
[11 30]
[12 29]
[13 28]
[16 27]
[17 26]
[18 25]
[19 24]
[43 113]
[44 112]
[45 111]
[46 110]
[48 71]
[49 70]
[50 69]
[51 68]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[75 108]
[76 107]
[77 106]
[78 105]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
