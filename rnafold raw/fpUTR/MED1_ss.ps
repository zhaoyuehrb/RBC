%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAAUUUUGGGAAGUUCCGUUGGGGAAGAUGGCGGCGGCCUCGAGCACCCUUCUCUUCUUGCCGCCGGGGACUUCAGAUUGAUCCUUCCCGGGAAGAGUAGGGACUGCUGGUGCCCUGCGUCCCGGGAUCCCGAGCCAACUUGUUUCCUCCGUUAGUGGUGGGGAAGGGCUUAUCCUUUUGUGGCGGAUCUAGCUUCUCCUCGCCUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[128.11344910 511.11770630]
[126.56752014 496.19760132]
[125.02159882 481.27746582]
[123.47567749 466.35733032]
[116.44548035 462.80932617]
[111.32897949 456.70022583]
[109.01570892 448.97659302]
[109.95316315 440.87414551]
[114.06246948 433.71987915]
[120.73922729 428.71499634]
[120.07572937 413.72967529]
[119.41223145 398.74435425]
[118.74872589 383.75903320]
[118.08522797 368.77371216]
[117.42173004 353.78839111]
[116.75822449 338.80307007]
[115.65303802 323.84384155]
[114.10711670 308.92370605]
[112.56118774 294.00360107]
[111.01526642 279.08346558]
[109.46934509 264.16333008]
[107.92342377 249.24322510]
[106.37750244 234.32308960]
[97.36971283 222.46101379]
[103.64353943 207.93690491]
[102.09761810 193.01678467]
[100.55169678 178.09666443]
[99.00577545 163.17652893]
[97.45985413 148.25640869]
[83.79312134 145.52439880]
[71.47452545 139.00552368]
[61.52877045 129.24206543]
[48.32283401 136.35565186]
[35.11689758 143.46925354]
[26.96711159 157.69995117]
[10.56935024 157.48680115]
[2.79222298 143.04907227]
[11.63617229 129.23904419]
[28.00330162 130.26332092]
[41.20923996 123.14971924]
[54.41517639 116.03612518]
[51.95858765 105.21117401]
[52.03693008 94.11125946]
[54.64606094 83.32205963]
[59.64831161 73.41288757]
[66.77973938 64.90658569]
[75.66403961 58.25201035]
[85.83244324 53.80028152]
[96.74840546 51.78630066]
[98.07411194 36.84500122]
[99.39981079 21.90369797]
[100.72550964 6.96239471]
[102.05121613 -7.97890759]
[103.37691498 -22.92020988]
[104.70261383 -37.86151123]
[106.02832031 -52.80281448]
[107.35401917 -67.74411774]
[105.38657379 -71.61104584]
[104.80909729 -75.51078033]
[105.46138000 -79.00259399]
[107.05661011 -81.74297333]
[109.22399139 -83.51849365]
[111.42836761 -98.35563660]
[113.63274384 -113.19277191]
[115.83712006 -128.02990723]
[118.04149628 -142.86705017]
[119.91710663 -157.74932861]
[121.46302795 -172.66944885]
[123.00894928 -187.58958435]
[124.44480133 -202.52069092]
[125.77050018 -217.46200562]
[127.09620667 -232.40330505]
[117.32022858 -241.66722107]
[114.70240784 -254.68003845]
[119.97869873 -266.64746094]
[131.01802063 -273.29125977]
[132.56394958 -288.21139526]
[134.10986328 -303.13153076]
[127.83603668 -317.65560913]
[136.84382629 -329.51770020]
[138.38975525 -344.43783569]
[139.93566895 -359.35794067]
[132.03332520 -375.99105835]
[142.87582397 -389.79071045]
[144.20152283 -404.73202515]
[131.49626160 -418.78674316]
[133.07339478 -437.34661865]
[147.46578979 -448.66098022]
[148.35023499 -463.63488770]
[149.23468018 -478.60879517]
[150.11912537 -493.58267212]
[151.00355530 -508.55657959]
[151.88800049 -523.53051758]
[152.77244568 -538.50439453]
[153.65689087 -553.47827148]
[145.97595215 -561.17700195]
[143.84306335 -571.61682129]
[147.72573853 -581.30364990]
[156.11824036 -587.12951660]
[157.44393921 -602.07080078]
[158.76963806 -617.01214600]
[160.09533691 -631.95343018]
[161.42103577 -646.89471436]
[162.74674988 -661.83605957]
[163.96221924 -676.78668213]
[165.06741333 -691.74591064]
[166.17260742 -706.70513916]
[161.30972290 -722.94671631]
[175.57038879 -732.11572266]
[188.32876587 -720.95056152]
[181.13183594 -705.59997559]
[180.02664185 -690.64074707]
[178.92144775 -675.68151855]
[181.56314087 -668.78033447]
[177.68804932 -660.51031494]
[176.36235046 -645.56903076]
[175.03663635 -630.62774658]
[173.71093750 -615.68640137]
[172.38523865 -600.74511719]
[171.05953979 -585.80383301]
[180.46960449 -568.91088867]
[168.63079834 -552.59387207]
[167.74635315 -537.61993408]
[166.86190796 -522.64605713]
[165.97746277 -507.67214966]
[165.09301758 -492.69824219]
[164.20857239 -477.72433472]
[163.32414246 -462.75042725]
[162.43969727 -447.77655029]
[171.68457031 -441.09387207]
[176.60711670 -430.67068481]
[175.88011169 -419.04641724]
[169.56871033 -409.11544800]
[159.14282227 -403.40631104]
[157.81712341 -388.46499634]
[165.33779907 -378.99172974]
[164.35659790 -366.53393555]
[154.85578918 -357.81204224]
[153.30987549 -342.89190674]
[151.76394653 -327.97177124]
[158.14836121 -314.51486206]
[149.02999878 -301.58560181]
[147.48406982 -286.66546631]
[145.93814087 -271.74533081]
[157.08943176 -259.15524292]
[155.65570068 -242.05892944]
[142.03750610 -231.07760620]
[140.71180725 -216.13629150]
[139.38610840 -201.19499207]
[141.92572021 -194.25559998]
[137.92907715 -186.04365540]
[136.38314819 -171.12353516]
[134.83723450 -156.20339966]
[136.76312256 -153.25160217]
[137.35583496 -149.22074890]
[136.12393188 -144.74720764]
[132.87863159 -140.66267395]
[130.67425537 -125.82553864]
[128.46987915 -110.98839569]
[126.26550293 -96.15126038]
[124.06112671 -81.31411743]
[122.29532623 -66.41841888]
[120.96961975 -51.47711182]
[119.64392090 -36.53581238]
[118.31821442 -21.59450912]
[116.99251556 -6.65320587]
[115.66681671 8.28809643]
[114.34111023 23.22939873]
[113.01541138 38.17070007]
[111.68971252 53.11200333]
[128.12519836 60.70487595]
[140.61282349 73.81351471]
[147.39971924 90.59788513]
[147.53323364 108.70201111]
[140.99462891 125.58464813]
[128.70169067 138.87603760]
[112.37997437 146.71049500]
[113.92589569 161.63061523]
[115.47182465 176.55073547]
[117.01774597 191.47085571]
[118.56366730 206.39099121]
[127.68202972 219.32025146]
[121.29762268 232.77717590]
[122.84354401 247.69729614]
[124.38947296 262.61743164]
[125.93539429 277.53753662]
[127.48131561 292.45767212]
[129.02723694 307.37780762]
[130.57316589 322.29791260]
[133.24147034 325.71905518]
[134.55151367 329.43728638]
[134.57661438 332.98941040]
[133.53285217 335.98355103]
[131.74354553 338.13958740]
[132.40704346 353.12487793]
[133.07054138 368.11019897]
[133.73405457 383.09552002]
[134.39755249 398.08084106]
[135.06105042 413.06616211]
[135.72454834 428.05148315]
[149.12385559 446.01339722]
[138.39579773 464.81140137]
[139.94172668 479.73153687]
[141.48764038 494.65167236]
[143.03356934 509.57177734]
[156.52729797 517.23333740]
[162.90992737 531.37695312]
[159.72724915 546.56408691]
[148.20301819 556.95507812]
[132.76856995 558.55426025]
[119.35876465 550.74682617]
[113.12992096 536.53479004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[32 41]
[33 40]
[34 39]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 153]
[68 152]
[69 151]
[70 149]
[71 148]
[72 147]
[76 144]
[77 143]
[78 142]
[80 140]
[81 139]
[82 138]
[84 135]
[85 134]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 113]
[106 112]
[107 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
