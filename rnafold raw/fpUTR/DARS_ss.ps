%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACCCUGCGCGCGGCCGCCAGCGCUCCGGGAUCUCGAGAUAGCCGCAGCUCUCGCGAUCUUUCUGGAGCCGCACCUCCACGCGGAGUCCGAGCGCGUGUGCUGAGACCCCAGGGUCGGGAGGGCGGAGACUGGGAGGGAGGGAGAAGCCCCUUUGGCCUGCCUUACGGAAGCCUGCGAGGGAGGGUGGUGUCCACUGCCCAGUUCCGUGUCCCG\
) } def
/len { sequence length } bind def

/coor [
[-162.60467529 73.77699280]
[-165.28712463 72.09319305]
[-166.98872375 69.87084198]
[-181.74377441 67.17112732]
[-196.49882507 64.47140503]
[-211.25387573 61.77168655]
[-226.00892639 59.07197189]
[-240.76397705 56.37225342]
[-255.51902771 53.67253494]
[-270.68994141 65.02550507]
[-289.02618408 61.73598480]
[-298.95770264 46.35420990]
[-313.77038574 51.91255569]
[-325.17922974 42.33721924]
[-340.00625610 40.06580353]
[-354.83328247 37.79438400]
[-369.66030884 35.52296829]
[-384.50338745 33.35894012]
[-399.36175537 31.30241013]
[-414.22009277 29.24588013]
[-420.47164917 31.37517357]
[-426.02740479 30.20633125]
[-429.47640991 26.90869713]
[-444.26901245 24.42286873]
[-459.06161499 21.93704224]
[-473.85418701 19.45121384]
[-488.64678955 16.96538544]
[-503.43936157 14.47955894]
[-506.52496338 33.76770782]
[-528.33886719 48.30696106]
[-542.96282959 51.64477539]
[-557.58673096 54.98258972]
[-572.21063232 58.32040405]
[-586.83453369 61.65821838]
[-601.45849609 64.99603271]
[-613.19091797 75.61016846]
[-627.32080078 70.89894104]
[-641.94476318 74.23675537]
[-656.56866455 77.57456970]
[-671.19256592 80.91238403]
[-685.81646729 84.25019836]
[-690.90905762 88.45511627]
[-696.51879883 89.32920837]
[-700.91198730 87.46646118]
[-715.62640381 90.37950134]
[-727.60260010 101.58229828]
[-743.21173096 96.55377960]
[-746.39654541 80.46685028]
[-733.88067627 69.87036133]
[-718.53942871 75.66507721]
[-703.82501221 72.75203705]
[-689.15429688 69.62628174]
[-674.53039551 66.28846741]
[-659.90649414 62.95065308]
[-645.28253174 59.61283875]
[-630.65863037 56.27502441]
[-619.97216797 45.89963150]
[-604.79626465 50.37211227]
[-590.17236328 47.03430176]
[-575.54846191 43.69648743]
[-560.92456055 40.35867310]
[-546.30059814 37.02085876]
[-531.67669678 33.68304443]
[-529.84942627 26.40904808]
[-540.62127686 15.97031879]
[-526.19482422 11.86105537]
[-524.36755371 4.58705997]
[-535.67791748 -5.26565695]
[-546.98822021 -15.11837387]
[-565.13922119 -18.23276138]
[-570.17901611 -35.04449844]
[-581.63079834 -44.73244476]
[-593.08264160 -54.42039108]
[-604.53442383 -64.10833740]
[-619.57293701 -60.28433609]
[-633.97454834 -66.06133270]
[-642.20147705 -79.21794128]
[-641.09045410 -94.69519043]
[-631.06854248 -106.54174805]
[-615.98944092 -110.20238495]
[-601.65130615 -104.26950073]
[-593.56756592 -91.02441406]
[-594.84649658 -75.56013489]
[-583.39465332 -65.87219238]
[-571.94287109 -56.18424225]
[-560.49108887 -46.49629593]
[-548.41723633 -47.18992233]
[-538.79779053 -39.21636581]
[-537.13549805 -26.42872238]
[-525.82519531 -16.57600594]
[-514.51483154 -6.72328806]
[-500.95352173 -0.31302935]
[-486.16094971 2.17279840]
[-471.36834717 4.65862608]
[-456.57577515 7.14445353]
[-441.78317261 9.63028145]
[-426.99060059 12.11610889]
[-412.16357422 14.38752556]
[-397.30520630 16.44405556]
[-382.44686890 18.50058556]
[-375.39343262 16.30492210]
[-367.38888550 20.69594383]
[-352.56185913 22.96736145]
[-337.73486328 25.23877716]
[-322.90783691 27.51019478]
[-309.15567017 21.78938103]
[-296.68627930 31.52718544]
[-289.17648315 22.94526672]
[-278.34503174 19.01158524]
[-266.84152222 20.81138420]
[-257.53961182 28.01207542]
[-252.81930542 38.91748428]
[-238.06425476 41.61720276]
[-223.30920410 44.31692123]
[-208.55415344 47.01663589]
[-193.79910278 49.71635437]
[-179.04405212 52.41607285]
[-164.28900146 55.11579132]
[-149.46197510 57.38720703]
[-134.57540894 59.22842026]
[-119.68884277 61.06962967]
[-104.80226898 62.91084290]
[-95.07658386 55.72269821]
[-82.66182709 57.13181686]
[-74.27233124 66.92483521]
[-59.41397476 68.98136139]
[-44.55562210 71.03789520]
[-29.69726753 73.09442139]
[-14.83891296 75.15095520]
[0.01944148 77.20748138]
[7.07286549 75.01181793]
[15.07740688 79.40283966]
[29.90443230 81.67425537]
[44.73145676 83.94567108]
[59.55848312 86.21709442]
[74.38550568 88.48851013]
[82.93975830 69.14288330]
[105.85145569 57.96920776]
[134.95207214 64.78907776]
[148.51336670 58.37881851]
[162.07466125 51.96855927]
[175.63594055 45.55830002]
[189.19723511 39.14804077]
[202.75852966 32.73778152]
[207.84956360 17.77593422]
[222.06579590 10.87127399]
[236.97297668 16.12021255]
[243.72695923 30.40864944]
[238.32069397 45.25950623]
[223.96165466 51.86203766]
[209.16877747 46.29907227]
[195.60749817 52.70933151]
[182.04620361 59.11959076]
[168.48490906 65.52984619]
[154.92362976 71.94010925]
[141.36233521 78.35036469]
[141.95889282 85.82660675]
[143.15202332 100.77907562]
[143.74858093 108.25531006]
[158.15480042 112.43392181]
[172.56101990 116.61253357]
[187.97032166 113.02588654]
[198.03837585 124.00238800]
[212.44459534 128.18099976]
[226.85081482 132.35960388]
[241.25703430 136.53822327]
[256.66635132 132.95156860]
[266.73437500 143.92807007]
[281.14059448 148.10668945]
[295.54684448 152.28529358]
[311.33294678 147.84335327]
[322.88229370 159.48570251]
[318.31393433 175.23568726]
[302.32736206 178.89108276]
[291.36822510 166.69151306]
[276.96200562 162.51290894]
[262.55578613 158.33430481]
[248.17691040 162.21983337]
[237.07843018 150.94444275]
[222.67221069 146.76583862]
[208.26599121 142.58721924]
[193.85975647 138.40861511]
[179.48089600 142.29414368]
[168.38241577 131.01875305]
[153.97619629 126.84014130]
[139.56997681 122.66153717]
[131.54357910 135.33343506]
[141.47790527 146.57215881]
[151.41223145 157.81089783]
[161.34655762 169.04962158]
[176.36685181 176.91265869]
[172.96914673 193.52264404]
[156.06770325 194.85583496]
[150.10783386 178.98394775]
[140.17350769 167.74522400]
[130.23916626 156.50648499]
[120.30484009 145.26776123]
[91.44227600 141.56431580]
[74.03459930 123.85396576]
[72.11408997 103.31552887]
[57.28706360 101.04411316]
[42.46004105 98.77269745]
[27.63301468 96.50128174]
[12.80599022 94.22986603]
[-2.03708816 92.06583405]
[-16.89544296 90.00930786]
[-31.75379562 87.95277405]
[-46.61215210 85.89624786]
[-61.47050476 83.83971405]
[-76.32885742 81.78318787]
[-93.22487640 89.11001587]
[-106.64348602 77.79740906]
[-121.53005219 75.95619965]
[-136.41662598 74.11499023]
[-151.30319214 72.27377319]
[-155.22994995 74.10311127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 118]
[4 117]
[5 116]
[6 115]
[7 114]
[8 113]
[9 112]
[12 107]
[14 105]
[15 104]
[16 103]
[17 102]
[18 100]
[19 99]
[20 98]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[44 51]
[45 50]
[67 91]
[68 90]
[69 89]
[71 86]
[72 85]
[73 84]
[74 83]
[119 215]
[120 214]
[121 213]
[122 212]
[125 210]
[126 209]
[127 208]
[128 207]
[129 206]
[130 205]
[132 204]
[133 203]
[134 202]
[135 201]
[136 200]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[159 186]
[160 185]
[161 184]
[163 182]
[164 181]
[165 180]
[166 179]
[168 177]
[169 176]
[170 175]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
