%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUAAAAAGCCACAGAUCUCUGGCGGCGGCAAGGGGACAGCACUGAGCUCUGCCGCCUGGCUCUAGCCGCCUGCCUGGCCCCCGCCGGGACUCUUGCCCACCCUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[96.30873108 238.66619873]
[82.98493958 231.77587891]
[71.54576111 222.07302856]
[62.57393646 210.05195618]
[56.52650452 196.32502747]
[53.71154022 181.59152222]
[54.27244186 166.60202026]
[58.18064117 152.12010193]
[65.23703766 138.88351440]
[75.08216858 127.56655884]
[87.21723175 118.74420929]
[74.29753876 126.36534119]
[61.37784958 133.98646545]
[48.45816040 141.60760498]
[47.11465073 157.06640625]
[36.91587830 168.76104736]
[21.78347206 172.19468689]
[7.53615618 166.04704285]
[-0.34768742 152.68199158]
[1.16344059 137.23866272]
[11.48848057 125.65534973]
[26.65724373 122.38606262]
[40.83703232 128.68791199]
[53.75672150 121.06678009]
[66.67640686 113.44564819]
[79.59609985 105.82451630]
[81.90104675 91.00267029]
[71.90585327 79.81803894]
[61.91065216 68.63340759]
[51.91545486 57.44877243]
[41.92025375 46.26414108]
[31.92505646 35.07950592]
[21.92985725 23.89487457]
[13.75532627 19.49816322]
[11.81657314 12.25354576]
[2.13899350 0.79298526]
[-7.53858614 -10.66757488]
[-23.04521179 -12.14483833]
[-32.69639587 -23.90533829]
[-31.19248772 -38.67943192]
[-40.87006760 -50.13999176]
[-56.47270584 -55.18872070]
[-59.63663483 -71.27976227]
[-47.10707474 -81.86003113]
[-31.77336121 -76.04545593]
[-29.40950584 -59.81757355]
[-19.73192787 -48.35700989]
[-4.91466188 -47.36491776]
[5.06303978 -35.88013840]
[3.92197442 -20.34515572]
[13.59955406 -8.88459492]
[23.27713394 2.57596612]
[33.11449051 13.89967632]
[43.10968781 25.08430862]
[53.10488892 36.26893997]
[63.10008621 47.45357513]
[73.09528351 58.63820648]
[83.09048462 69.82283783]
[93.08568573 81.00746918]
[100.54956818 80.27233887]
[122.94122314 78.06695557]
[130.56234741 65.14727020]
[138.18348694 52.22757721]
[137.79566956 35.83301544]
[151.93875122 27.53210449]
[166.06355286 35.86410522]
[165.63967896 52.25777435]
[151.10317993 59.84870911]
[143.48204041 72.76839447]
[135.86091614 85.68808746]
[142.93186951 98.91690826]
[157.90826416 99.75796509]
[171.39555359 86.61595917]
[189.89721680 87.34257507]
[201.89624023 101.02765656]
[216.89476013 100.81729126]
[231.88885498 100.39659119]
[246.88296509 99.97589874]
[261.87704468 99.55520630]
[276.87115479 99.13451385]
[291.86526489 98.71382141]
[305.54058838 89.66301727]
[320.09375000 97.22195435]
[320.55368042 113.61465454]
[306.44726562 121.97769928]
[292.28594971 113.70791626]
[277.29183960 114.12861633]
[262.29776001 114.54930878]
[247.30364990 114.97000122]
[232.30955505 115.39069366]
[217.31546021 115.81138611]
[210.62168884 119.19319916]
[201.89624023 116.02765656]
[195.65974426 125.78050232]
[185.35227966 131.31034851]
[173.53607178 131.10894775]
[163.21415710 125.10967255]
[157.06721497 114.73436737]
[142.09080505 113.89331055]
[155.58274841 120.44828033]
[167.26098633 129.86203003]
[176.53062439 141.65498352]
[182.91944885 155.22637939]
[186.10197449 169.88488770]
[185.91610718 184.88372803]
[182.37129211 199.45884705]
[175.64811707 212.86776733]
[166.08906555 224.42738342]
[154.18112183 233.54882812]
[140.53088379 239.76744080]
[125.83374023 242.76641846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 26]
[12 25]
[13 24]
[14 23]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[35 52]
[36 51]
[37 50]
[40 47]
[41 46]
[61 70]
[62 69]
[63 68]
[71 99]
[72 98]
[75 93]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
