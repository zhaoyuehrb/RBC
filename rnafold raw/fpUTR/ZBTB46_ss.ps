%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACCUUCUCUCCUCCCUGUGUCUUUUUUUUUCCUUUAGAGAUGGGGGUCUUGCUCUGUCACUCCAGCUAGAGCACAGUGGUGCAAUCGGAGCUCACUGACUGCAGCCUGCAACUCCUGGGCUCAAGUGAUUCUGCCGCCUCAGCCUCUCAACGUGCUGCGAUUAGAGAGUCUGUAGAAGAGGCGACACCAGGGCUUCCAA\
) } def
/len { sequence length } bind def

/coor [
[113.74913788 377.67489624]
[99.94057465 383.75650024]
[85.02833557 386.05599976]
[70.02917480 384.41659546]
[55.96575928 378.95010376]
[43.79695129 370.02917480]
[34.35244370 358.26211548]
[28.27618027 344.45120239]
[25.98244476 329.53808594]
[27.62763214 314.53958130]
[33.09957123 300.47827148]
[42.02517319 288.31289673]
[53.79587936 278.87292480]
[67.60913849 272.80200195]
[82.52314758 270.51403809]
[84.15293121 255.60282898]
[85.78270721 240.69163513]
[87.41249084 225.78044128]
[89.04227448 210.86923218]
[90.55605316 195.94581604]
[91.95374298 181.01107788]
[93.35143280 166.07633972]
[94.74912262 151.14160156]
[88.58695984 146.86634827]
[80.20027161 159.30273438]
[71.48735809 171.51277161]
[59.16319656 162.96205139]
[67.54983521 150.52600098]
[76.26261902 138.31587219]
[70.10045624 134.04063416]
[56.60041428 140.57888794]
[43.10037613 147.11715698]
[29.60033607 153.65542603]
[22.99826241 168.27705383]
[7.41539192 172.09199524]
[-5.19443178 162.17373657]
[-5.15803099 146.13072205]
[7.49667025 136.26977539]
[23.06206894 140.15538025]
[36.56210709 133.61712646]
[50.06214905 127.07885742]
[63.56218719 120.54058838]
[63.43384552 99.77125549]
[72.92383575 84.28712463]
[86.93758392 77.46924591]
[83.46994019 62.87556839]
[80.00229645 48.28188705]
[76.53465271 33.68820953]
[73.06700897 19.09453201]
[63.48422241 13.92950058]
[58.43356323 4.53462124]
[59.37179947 -5.86993742]
[65.74804688 -13.86602592]
[62.73594284 -28.56048775]
[48.76370239 -35.04760742]
[41.37675858 -48.36250305]
[43.22469330 -63.29733276]
[53.39082336 -74.15033722]
[50.37871933 -88.84480286]
[47.36661148 -103.53926086]
[44.35450745 -118.23372650]
[41.34239960 -132.92819214]
[38.33029556 -147.62265015]
[25.42204475 -156.34129333]
[22.57666779 -171.28648376]
[30.96811676 -183.53878784]
[27.95601082 -198.23326111]
[24.94390488 -212.92771912]
[21.93179893 -227.62217712]
[7.88342190 -242.07261658]
[14.76456451 -260.13845825]
[11.29691982 -274.73214722]
[7.82927465 -289.32583618]
[-7.22851515 -298.22308350]
[-11.11965466 -314.92813110]
[-1.91290569 -328.99813843]
[-5.60708952 -343.53610229]
[-9.30127335 -358.07409668]
[-14.45131969 -365.62725830]
[-12.93798828 -372.86691284]
[-23.65597343 -384.50457764]
[-19.07050514 -398.67578125]
[-22.53815079 -413.26943970]
[-26.00579453 -427.86312866]
[-29.47344017 -442.45681763]
[-40.19142532 -454.09448242]
[-35.60595703 -468.26568604]
[-39.07360077 -482.85934448]
[-42.54124832 -497.45303345]
[-46.00889206 -512.04669189]
[-59.59472275 -520.12139893]
[-63.41066360 -535.45806885]
[-55.19277954 -548.95782471]
[-39.81660080 -552.61138916]
[-26.40453720 -544.25122070]
[-22.91373062 -528.83728027]
[-31.41521263 -515.51434326]
[-27.94756889 -500.92068481]
[-24.47992325 -486.32699585]
[-21.01227951 -471.73330688]
[-10.54232407 -461.13949585]
[-14.87976170 -445.92443848]
[-11.41211700 -431.33078003]
[-7.94447231 -416.73709106]
[-4.47682762 -402.14340210]
[5.99312782 -391.54959106]
[1.65568960 -376.33456421]
[5.23671198 -361.76828003]
[8.93089581 -347.23028564]
[12.62507915 -332.69232178]
[24.51572418 -327.71731567]
[31.47178268 -316.63549805]
[30.76243782 -303.37573242]
[22.42295265 -292.79345703]
[25.89059830 -278.19979858]
[29.35824203 -263.60610962]
[38.51243973 -259.04602051]
[43.75212097 -250.00825500]
[43.13591766 -239.35963440]
[36.62625885 -230.63429260]
[39.63836670 -215.93981934]
[42.65047455 -201.24536133]
[45.66257858 -186.55090332]
[58.19775391 -178.58818054]
[61.46178436 -163.72880554]
[53.02475739 -150.63475037]
[56.03686142 -135.94029236]
[59.04896927 -121.24583435]
[62.06107330 -106.55136871]
[65.07318115 -91.85690308]
[68.08528900 -77.16244507]
[81.70149231 -71.18440247]
[89.27625275 -58.18105698]
[87.72357178 -43.03369522]
[77.43040466 -31.57259369]
[80.44251251 -16.87813187]
[94.30226135 -3.40102220]
[87.66068268 15.62688828]
[91.12832642 30.22056580]
[94.59597778 44.81424332]
[98.06362152 59.40792084]
[101.53126526 74.00160217]
[131.98712158 88.66522980]
[128.20227051 130.89112854]
[142.08267212 136.57745361]
[155.96307373 142.26377869]
[169.84349060 147.95011902]
[183.72389221 153.63644409]
[197.60429382 159.32276917]
[211.52850342 164.90098572]
[227.19987488 162.72869873]
[236.22937012 174.57424927]
[250.19653320 180.04402161]
[264.16369629 185.51379395]
[279.83505249 183.34150696]
[288.86456299 195.18707275]
[302.83172607 200.65684509]
[316.79888916 206.12661743]
[328.74963379 196.47904968]
[343.92553711 194.11523438]
[358.24435425 199.67102051]
[367.85440063 211.65193176]
[370.17065430 226.83517456]
[364.57000732 241.13652039]
[352.55902100 250.70896912]
[337.36859131 252.97760010]
[323.08489990 247.33216858]
[313.55014038 235.29124451]
[311.32913208 220.09378052]
[297.36196899 214.62400818]
[283.39480591 209.15423584]
[268.72244263 211.71775818]
[258.69393921 199.48095703]
[244.72676086 194.01118469]
[230.75959778 188.54141235]
[216.08726501 191.10493469]
[206.05873108 178.86814880]
[198.67875671 179.35662842]
[191.91796875 173.20317078]
[178.03756714 167.51684570]
[164.15716553 161.83052063]
[150.27674866 156.14419556]
[136.39634705 150.45787048]
[122.51593781 144.77154541]
[109.68386078 152.53929138]
[108.28617859 167.47402954]
[106.88848877 182.40876770]
[105.49079895 197.34350586]
[107.80810547 206.18678284]
[103.95347595 212.49902344]
[102.32369232 227.41021729]
[100.69390869 242.32141113]
[99.06412506 257.23260498]
[97.43434143 272.14379883]
[111.50197601 277.59945679]
[123.67767334 286.51095581]
[133.13125610 298.27072144]
[139.21818542 312.07693481]
[141.52343750 326.98828125]
[139.88983154 341.98806763]
[134.42875671 356.05361938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[20 188]
[21 187]
[22 186]
[23 185]
[30 42]
[31 41]
[32 40]
[33 39]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[53 136]
[54 135]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[66 123]
[67 122]
[68 121]
[69 120]
[71 116]
[72 115]
[73 114]
[76 110]
[77 109]
[78 108]
[80 107]
[82 105]
[83 104]
[84 103]
[85 102]
[87 100]
[88 99]
[89 98]
[90 97]
[144 184]
[145 183]
[146 182]
[147 181]
[148 180]
[149 179]
[150 177]
[152 175]
[153 174]
[154 173]
[156 171]
[157 170]
[158 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
