%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAGUGCUGAGGCAGAACGCAGGUUCGUCACAGUGGGCCUCCGUGGGCGGCGCCGCACGCUCGUCACAGUGGGCCUCCGCCGGCUACGCCGCUGCUUCAGUGGCUUGCAGGCACUUUCCUCUUGGAAGUGGCGACUGCUGCGGGGCUGAGCGGUGCUCGCACGCGUCUCGGGAGCCAGGUUGGCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[108.89862061 585.14556885]
[113.78606415 599.32702637]
[104.39614868 611.02441406]
[89.49334717 609.31951904]
[82.98784637 595.80371094]
[90.95286560 583.09191895]
[94.17092896 568.44116211]
[86.71955872 567.58843994]
[76.87151337 578.90283203]
[67.02346039 590.21722412]
[57.17541122 601.53167725]
[53.95129395 617.02087402]
[39.75917435 621.54113770]
[29.91112328 632.85559082]
[20.06307411 644.16998291]
[16.78234863 652.71154785]
[9.96146965 655.58673096]
[-0.06943960 666.73931885]
[-10.10034847 677.89196777]
[-20.13125801 689.04455566]
[-23.00095558 705.19067383]
[-38.50884247 710.52337646]
[-50.70173645 699.55682373]
[-47.03663254 683.57244873]
[-31.28387451 679.01367188]
[-21.25296593 667.86108398]
[-11.22205639 656.70843506]
[-1.19114697 645.55584717]
[8.74866199 634.32196045]
[18.59671211 623.00750732]
[28.44476128 611.69311523]
[30.96448135 597.01318359]
[45.86100006 591.68359375]
[55.70904922 580.36920166]
[65.55709839 569.05480957]
[75.40515137 557.74035645]
[81.11719513 543.87054443]
[82.09316254 528.90234375]
[83.06912994 513.93408203]
[84.04510498 498.96588135]
[76.30053711 489.66113281]
[77.00072479 477.17370605]
[86.31497192 468.23706055]
[87.53444672 453.28671265]
[88.75392914 438.33636475]
[89.97340393 423.38601685]
[82.67413330 416.20877075]
[80.49253082 405.98233032]
[84.38745880 396.04183960]
[93.29482269 389.76623535]
[95.00028229 374.86349487]
[96.70574188 359.96075439]
[98.41120911 345.05804443]
[92.17113495 331.53356934]
[101.42730713 318.70260620]
[103.13276672 303.79986572]
[104.83822632 288.89715576]
[106.54368591 273.99441528]
[108.24915314 259.09167480]
[105.88255310 252.07810974]
[110.10557556 243.96098328]
[112.05338287 229.08798218]
[113.75884247 214.18525696]
[115.22150421 199.25674438]
[116.68417358 184.32821655]
[118.14683533 169.39970398]
[119.60949707 154.47119141]
[121.07215881 139.54266357]
[122.53482819 124.61415100]
[51.69851303 103.37920380]
[43.40306473 90.88178253]
[35.10761642 78.38436127]
[21.02928734 71.16555023]
[20.43714333 56.28272247]
[12.14169407 43.78530121]
[3.84624529 31.28787994]
[-11.07229710 24.47839355]
[-12.36481762 8.13026047]
[1.29831886 -0.93895906]
[15.86164856 6.60036945]
[16.34366608 22.99243164]
[24.63911438 35.48985291]
[32.93456268 47.98727417]
[46.41954803 54.31218338]
[47.60503387 70.08891296]
[55.90048599 82.58633423]
[64.19593048 95.08375549]
[71.42704773 93.09352112]
[85.88926697 89.11306000]
[93.12038422 87.12282562]
[93.85258484 72.14070892]
[94.58479309 57.15858841]
[95.31699371 42.17647171]
[96.04920197 27.19435310]
[96.78140259 12.21223354]
[97.51361084 -2.76988482]
[92.24764252 -18.88527870]
[106.27547455 -28.40663528]
[119.30802155 -17.56278610]
[112.49572754 -2.03768015]
[111.76351929 12.94443798]
[111.03131866 27.92655754]
[110.29911041 42.90867615]
[109.56690979 57.89079285]
[108.83470154 72.87290955]
[108.10250092 87.85503387]
[114.80980682 91.21092224]
[121.52158356 77.79629517]
[128.23336792 64.38167572]
[134.94514465 50.96705627]
[137.18325806 36.13496780]
[151.98106384 33.68036270]
[158.88813782 46.99547958]
[148.35975647 57.67883301]
[141.64797974 71.09345245]
[134.93620300 84.50807953]
[128.22442627 97.92269897]
[134.93174744 101.27858734]
[146.48321533 91.70970154]
[158.03468323 82.14081573]
[169.58615112 72.57193756]
[174.78204346 57.01768494]
[190.90226746 54.00590515]
[201.36369324 66.63485718]
[195.40452576 81.91295624]
[179.15502930 84.12340546]
[167.60356140 93.69229126]
[156.05209351 103.26116943]
[144.50062561 112.83005524]
[137.46334839 126.07681274]
[136.00067139 141.00534058]
[134.53800964 155.93385315]
[133.07534790 170.86236572]
[131.61268616 185.79087830]
[130.15002441 200.71940613]
[128.68736267 215.64791870]
[131.07565308 221.83921814]
[130.11233521 227.45939636]
[126.92638397 231.03579712]
[124.97857666 245.90878296]
[123.15187836 260.79714966]
[121.44641876 275.69989014]
[119.74095917 290.60260010]
[118.03549957 305.50534058]
[116.33003998 320.40808105]
[122.44812012 334.99847412]
[113.31393433 346.76348877]
[111.60847473 361.66622925]
[109.90301514 376.56896973]
[108.19755554 391.47167969]
[117.06222534 409.56536865]
[104.92375183 424.60549927]
[103.70427704 439.55584717]
[102.48479462 454.50619507]
[101.26531982 469.45651245]
[109.53221130 485.90286255]
[99.01332092 499.94186401]
[98.03734589 514.91009521]
[97.06137848 529.87829590]
[96.08540344 544.84649658]
[104.55683899 543.75451660]
[114.02745056 546.42620850]
[122.97195435 553.23101807]
[129.77178955 563.96209717]
[136.80906677 577.20880127]
[143.84634399 590.45556641]
[150.88363647 603.70233154]
[157.92091370 616.94909668]
[164.95819092 630.19586182]
[170.46704102 616.24407959]
[184.16709900 610.13598633]
[198.22679138 615.36334229]
[204.60894775 628.93786621]
[199.66525269 643.09979248]
[186.22172546 649.75347900]
[171.96354675 645.09558105]
[177.67559814 658.96545410]
[183.38763428 672.83526611]
[189.09967041 686.70513916]
[200.72204590 699.04840088]
[192.07853699 713.63354492]
[175.67063904 709.36535645]
[175.22982788 692.41717529]
[169.51779175 678.54730225]
[163.80574036 664.67749023]
[158.09370422 650.80761719]
[151.71144104 637.23315430]
[144.67414856 623.98638916]
[137.63687134 610.73962402]
[130.59959412 597.49285889]
[123.56230927 584.24609375]
[116.52502441 570.99932861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 36]
[9 35]
[10 34]
[11 33]
[13 31]
[14 30]
[15 29]
[17 28]
[18 27]
[19 26]
[20 25]
[37 160]
[38 159]
[39 158]
[40 157]
[43 155]
[44 154]
[45 153]
[46 152]
[50 150]
[51 149]
[52 148]
[53 147]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[61 140]
[62 139]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 87]
[71 86]
[72 85]
[74 83]
[75 82]
[76 81]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[118 129]
[119 128]
[120 127]
[121 126]
[164 192]
[165 191]
[166 190]
[167 189]
[168 188]
[169 187]
[176 186]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
