%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCGCCCCCUACAUCCGGGGCCUGGGCGGCAGCAGGGCCGCCGCGGGGAGGUCACGUGGCUCCUUCCUUUCCGUCUCUGGCCGGCUGGGCGCGGGCGACUGCUGGCGAGGCGCGUGGGACCUUACGCUGGUUCCCCUUCGUCUCCUCUCCCGGCCCGGGCCACUAGAGAGUUCGCUGACGCCGGGUGAGCUGAGCCUGCCGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[68.80722809 255.92536926]
[64.12248993 263.81558228]
[57.47168350 270.10360718]
[49.37296677 274.31726074]
[40.45246887 276.14526367]
[31.39591980 275.46014404]
[25.06232452 289.05740356]
[18.72872734 302.65469360]
[12.39512920 316.25195312]
[6.06153250 329.84921265]
[13.70749569 343.35174561]
[11.92316341 358.76589966]
[1.39464581 370.16458130]
[-13.82962608 373.16476440]
[-27.89560890 366.61285400]
[-35.39464569 353.02813721]
[-33.44320297 337.63427734]
[-22.79165268 326.35046387]
[-7.53572989 323.51559448]
[-1.20213294 309.91833496]
[5.13146400 296.32107544]
[11.46506119 282.72381592]
[17.79865837 269.12655640]
[6.14773130 251.69364929]
[7.40922642 230.62854004]
[21.23312950 214.50567627]
[42.12277603 209.98654175]
[47.20596695 195.87408447]
[52.28915787 181.76164246]
[57.37234879 167.64920044]
[62.45553589 153.53674316]
[67.53872681 139.42430115]
[72.62191772 125.31185150]
[77.70510864 111.19940186]
[81.01576996 108.56978607]
[84.49970245 106.23691559]
[69.50351715 106.57509613]
[54.50733185 106.91327667]
[39.51114273 107.25145721]
[30.04999161 116.01934052]
[17.55167580 115.99143219]
[8.71602440 107.72817230]
[-6.28355169 107.84090424]
[-21.28312874 107.95364380]
[-36.28270340 108.06637573]
[-51.28227997 108.17911530]
[-66.28186035 108.29184723]
[-81.28015900 108.51731110]
[-96.27635193 108.85549164]
[-110.00128937 117.83090973]
[-124.51263428 110.19200897]
[-124.88235474 93.79702759]
[-110.73012543 85.51172638]
[-96.61453247 93.85930634]
[-81.61834717 93.52112579]
[-75.00106812 90.22706604]
[-66.39459229 93.29227448]
[-51.39501572 93.17953491]
[-36.39543915 93.06680298]
[-21.39586449 92.95406342]
[-6.39628744 92.84133148]
[8.60328865 92.72859192]
[23.23287773 83.03742218]
[39.17296219 92.25527191]
[54.16915131 91.91709137]
[69.16533661 91.57891083]
[84.16152191 91.24073029]
[69.60529327 87.61911011]
[59.59912109 76.44429016]
[57.60086823 61.57798767]
[64.30107117 48.15758133]
[77.38432312 40.82079697]
[92.32942200 42.10302353]
[103.97174835 51.56116104]
[108.28803253 65.92673492]
[103.78648376 80.23568726]
[111.89609528 67.61688232]
[120.00570679 54.99808121]
[128.11532593 42.37928009]
[136.22492981 29.76047516]
[144.33454895 17.14167213]
[152.44415283 4.52286959]
[150.47012329 -8.22437572]
[157.48568726 -18.56800079]
[169.27796936 -21.26839447]
[177.57633972 -33.76387405]
[185.87471008 -46.25935745]
[194.17308044 -58.75484085]
[202.37730408 -71.31233978]
[210.48692322 -83.93113708]
[218.59652710 -96.54994202]
[226.70614624 -109.16874695]
[228.71360779 -118.08148956]
[235.03369141 -121.91500092]
[243.33206177 -134.41047668]
[251.63041687 -146.90596008]
[259.92880249 -159.40144348]
[261.11798096 -175.17790222]
[274.60443115 -181.49966431]
[282.90280151 -193.99514771]
[283.69726562 -200.56123352]
[287.16824341 -205.06364441]
[291.64312744 -206.73632812]
[289.18798828 -222.11845398]
[298.15518188 -234.40844727]
[312.83483887 -236.65426636]
[321.50506592 -248.89465332]
[330.17526245 -261.13507080]
[338.84548950 -273.37545776]
[347.51568604 -285.61584473]
[356.18591309 -297.85626221]
[364.85614014 -310.09664917]
[367.26333618 -318.90985107]
[373.74978638 -322.45455933]
[374.30944824 -327.64746094]
[376.57888794 -331.70040894]
[379.83721924 -334.15289307]
[383.28518677 -334.89743042]
[392.67523193 -346.59469604]
[402.06530762 -358.29199219]
[411.45538330 -369.98928833]
[420.84545898 -381.68655396]
[430.23553467 -393.38385010]
[427.00915527 -408.68496704]
[434.41851807 -422.45578003]
[448.96517944 -428.19412231]
[463.78063965 -423.19052124]
[471.86950684 -409.80752563]
[469.41244507 -394.36419678]
[457.56961060 -384.15237427]
[441.93283081 -383.99377441]
[432.54275513 -372.29647827]
[423.15267944 -360.59921265]
[413.76260376 -348.90191650]
[404.37252808 -337.20462036]
[394.98245239 -325.50735474]
[385.85848999 -313.60131836]
[377.09652710 -301.42642212]
[368.42630005 -289.18603516]
[359.75610352 -276.94564819]
[351.08587646 -264.70523071]
[342.41567993 -252.46484375]
[333.74545288 -240.22444153]
[325.07522583 -227.98403931]
[327.82733154 -213.39083862]
[319.20889282 -200.85382080]
[303.88351440 -198.06611633]
[295.39828491 -185.69677734]
[287.09991455 -173.20129395]
[286.50430298 -158.31860352]
[272.42428589 -151.10307312]
[264.12591553 -138.60758972]
[255.82752991 -126.11211395]
[247.52917480 -113.61663055]
[239.32495117 -101.05913544]
[231.21533203 -88.44033051]
[223.10572815 -75.82152557]
[214.99610901 -63.20272446]
[214.02423096 -55.87506485]
[206.66856384 -50.45647049]
[198.37019348 -37.96098709]
[190.07182312 -25.46550560]
[181.77345276 -12.97002411]
[181.62118530 4.57764006]
[165.06295776 12.63248158]
[156.95335388 25.25128555]
[148.84373474 37.87008667]
[140.73413086 50.48889160]
[132.62451172 63.10769272]
[124.51490021 75.72649384]
[116.40528870 88.34529877]
[117.64398193 103.29406738]
[127.71997070 114.40596771]
[137.79597473 125.51786804]
[147.87196350 136.62977600]
[158.03118896 147.66563416]
[168.27307129 158.62481689]
[178.51493835 169.58401489]
[193.59056091 174.38363647]
[196.62767029 188.96530151]
[206.86955261 199.92449951]
[222.79028320 201.90185547]
[231.04753113 215.65675354]
[225.30703735 230.63761902]
[209.97242737 235.35241699]
[196.80709839 226.18435669]
[195.91035461 210.16638184]
[185.66847229 199.20718384]
[171.32542419 195.19143677]
[167.55575562 179.82589722]
[157.31387329 168.86669922]
[147.07199097 157.90750122]
[140.20713806 155.16653442]
[136.76005554 146.70576477]
[126.68406677 135.59385681]
[116.60807037 124.48196411]
[106.53207397 113.37006378]
[91.81755829 116.28259277]
[86.73436737 130.39503479]
[81.65117645 144.50749207]
[76.56798553 158.61993408]
[71.48479462 172.73239136]
[66.40160370 186.84483337]
[61.31841278 200.95727539]
[56.23522568 215.06973267]
[63.23131180 221.18704224]
[68.27020264 228.96786499]
[70.97679138 237.80935669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[32 200]
[33 199]
[34 198]
[36 67]
[37 66]
[38 65]
[39 64]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 55]
[49 54]
[76 171]
[77 170]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[85 163]
[86 162]
[87 161]
[88 160]
[89 158]
[90 157]
[91 156]
[92 155]
[94 154]
[95 153]
[96 152]
[97 151]
[99 149]
[100 148]
[103 147]
[106 144]
[107 143]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[114 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[172 197]
[173 196]
[174 195]
[175 194]
[176 192]
[177 191]
[178 190]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
