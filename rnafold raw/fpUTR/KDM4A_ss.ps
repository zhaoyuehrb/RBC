%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCUGCGCAGAUGCCGACUUUAGAGGAGGCGGAGUUUCGGCCUUCGCCUGCUGGAAAAGCAGUAGGAUCGGCCAGUGGCGACAGCAGGAGCUGAGCCUAAGCCCUGGCGGGGCUUUGGGCUGUAGAUUCCUGUCUGACUAAAGGGACCUCAAAAAGGAGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[98.12660980 256.61056519]
[90.62959290 256.82217407]
[85.11821747 270.77297974]
[79.60684967 284.72375488]
[74.09547424 298.67456055]
[83.18473053 311.14007568]
[84.06891632 326.54208374]
[76.46590424 339.96585083]
[62.80177689 347.12792969]
[47.43671036 345.74288940]
[35.27364349 336.25271606]
[30.19376755 321.68569946]
[33.81804657 306.69009399]
[44.98999405 296.05093384]
[60.14467621 293.16320801]
[65.65605164 279.21240234]
[71.16741943 265.26159668]
[76.67879486 251.31079102]
[76.03888702 220.70748901]
[96.50815582 206.62318420]
[95.94393158 191.63380432]
[95.37970734 176.64442444]
[94.81548309 161.65502930]
[94.25125885 146.66564941]
[93.68703461 131.67626953]
[79.76013947 125.17115784]
[70.41720581 112.96524048]
[55.65610504 115.63169098]
[40.89500427 118.29814148]
[26.13390732 120.96459961]
[11.37280846 123.63105011]
[-3.38828945 126.29750824]
[-15.59325981 136.36474609]
[-29.49323654 131.01312256]
[-44.25433731 133.67956543]
[-58.76638412 142.44523621]
[-71.20681000 130.92689514]
[-63.58247375 115.78404999]
[-46.92078781 118.91847229]
[-32.15969086 116.25202179]
[-21.01053238 106.37550354]
[-6.05474281 111.53640747]
[8.70635509 108.86995697]
[23.46745300 106.20349884]
[38.22855377 103.53704834]
[52.98965073 100.87059021]
[67.75074768 98.20413971]
[62.53963470 94.32889557]
[57.82169724 89.46039581]
[45.70304871 80.62080383]
[33.58440018 71.78121185]
[21.46575356 62.94162369]
[9.34710598 54.10203171]
[-2.77154136 45.26243973]
[-14.89018822 36.42284775]
[-30.46381760 39.11312485]
[-43.33001328 29.93507767]
[-45.85548782 14.33387470]
[-36.54192352 1.56543469]
[-20.91489410 -0.79495412]
[-8.24563503 8.65308571]
[-6.05059671 24.30419922]
[6.06805086 33.14379120]
[18.18669891 41.98338318]
[30.30534554 50.82297516]
[42.42399216 59.66256714]
[54.54264069 68.50215912]
[66.66128540 77.34175110]
[72.88257599 73.15299988]
[64.50528717 60.71029282]
[76.94813538 52.33320999]
[85.32514954 64.77551270]
[91.54643250 60.58676529]
[87.91455841 46.03308487]
[84.28269196 31.47941017]
[74.58121490 17.57553673]
[85.25608063 4.40422201]
[100.86775208 11.01572990]
[98.83636475 27.84753799]
[102.46823883 42.40121460]
[106.10011292 56.95489120]
[114.02600861 62.80694962]
[119.75640869 69.87606049]
[123.17709351 77.50418091]
[136.07238770 69.84186554]
[148.96769714 62.17953873]
[161.79035950 54.39626694]
[174.53924561 46.49272919]
[187.28813171 38.58919144]
[200.03701782 30.68565369]
[212.78590393 22.78211594]
[225.53479004 14.87857914]
[238.20877075 6.85547686]
[250.80673218 -1.28647912]
[263.40469360 -9.42843533]
[275.92550659 -17.68852615]
[288.36807251 -26.06601906]
[300.81063843 -34.44351196]
[313.25323486 -42.82100677]
[325.69580078 -51.19849777]
[338.13836670 -59.57599258]
[350.58093262 -67.95348358]
[362.94415283 -76.44763947]
[375.22695923 -85.05770874]
[387.50973511 -93.66777039]
[399.79251099 -102.27783966]
[412.07528687 -110.88790894]
[421.57458496 -124.93069458]
[437.69824219 -119.69007874]
[437.12588501 -102.74579620]
[420.68536377 -98.60512543]
[408.40258789 -89.99505615]
[396.11978149 -81.38498688]
[383.83700562 -72.77492523]
[371.55422974 -64.16485596]
[367.86624146 -57.72284698]
[358.95843506 -55.51091385]
[346.51586914 -47.13341904]
[334.07330322 -38.75592804]
[321.63070679 -30.37843323]
[309.18814087 -22.00094032]
[296.74557495 -13.62344646]
[284.30300903 -5.24595308]
[280.49447632 1.12554514]
[271.54663086 3.16952300]
[258.94869995 11.31147957]
[246.35072327 19.45343590]
[242.42301941 25.75216484]
[233.43832397 27.62746429]
[220.68943787 35.53100204]
[207.94055176 43.43453979]
[195.19166565 51.33807755]
[182.44277954 59.24161530]
[169.69389343 67.14514923]
[165.64840698 73.36888123]
[156.63002014 75.07484436]
[143.73471069 82.73716736]
[130.83941650 90.39949036]
[128.36817932 115.44299316]
[108.67642212 131.11204529]
[109.24064636 146.10142517]
[109.80487061 161.09080505]
[110.36909485 176.08020020]
[110.93331909 191.06958008]
[111.49754333 206.05895996]
[123.26307678 209.27787781]
[133.05912781 218.82965088]
[137.51428223 233.33634949]
[134.23536682 249.68623352]
[140.52487183 263.30395508]
[146.81437683 276.92166138]
[153.10388184 290.53939819]
[168.01989746 295.76315308]
[174.79795837 310.04019165]
[169.41676331 324.90014648]
[155.06887817 331.52688599]
[140.26664734 325.98889160]
[133.79197693 311.57174683]
[139.48616028 296.82888794]
[133.19665527 283.21118164]
[126.90715027 269.59344482]
[120.61765289 255.97573853]
[113.12063599 256.18734741]
[113.54384613 271.18136597]
[113.96682739 286.17541504]
[98.97278595 286.59817505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[25 140]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[34 40]
[35 39]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[73 81]
[74 80]
[75 79]
[84 138]
[85 137]
[86 136]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 127]
[94 126]
[95 125]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
[149 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
