%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGAGCCAGACCCAGUCCAGCUCUGGUGCCUGCCCUCUGGUGCGAGCUGACCUGAGAUGCACUUCCCUCCUCUGUGAGCUGUCUCGGCACCCACUUGCAGUCACUGCCGCCUG\
) } def
/len { sequence length } bind def

/coor [
[41.92881012 294.53210449]
[31.21660995 284.03216553]
[25.89695358 270.00714111]
[26.95029449 255.04716492]
[16.56321907 265.86883545]
[6.17614365 276.69052124]
[-4.21093225 287.51217651]
[-4.06048536 303.08828735]
[-14.74861622 313.91503906]
[-29.59898186 313.96249390]
[-39.98605728 324.78414917]
[-50.37313461 335.60583496]
[-56.97918320 351.21981812]
[-73.81169891 349.19430542]
[-76.52506256 332.45889282]
[-61.19480896 325.21875000]
[-50.80773163 314.39709473]
[-40.42065811 303.57540894]
[-40.98161697 288.73556519]
[-30.60180283 277.61288452]
[-15.03260803 277.12512207]
[-4.64553165 266.30343628]
[5.74154425 255.48176575]
[16.12862015 244.66009521]
[17.98517227 235.71025085]
[26.51430893 229.94691467]
[33.23273087 216.53562927]
[39.95115280 203.12432861]
[46.66957474 189.71304321]
[45.45223999 174.86825562]
[58.55107880 165.99520874]
[65.26950073 152.58392334]
[71.98792267 139.17262268]
[78.70634460 125.76132965]
[69.64663696 113.99069214]
[66.58187866 99.45681000]
[70.11737061 85.03022003]
[79.55483246 73.56023407]
[93.03032684 67.31224060]
[107.88236237 67.52024841]
[114.60078430 54.10895157]
[121.31920624 40.69765854]
[128.03762817 27.28636360]
[134.75604248 13.87506962]
[141.29066467 0.37326220]
[147.64025879 -13.21654034]
[153.23823547 -27.13281059]
[158.06791687 -41.33401489]
[162.89758301 -55.53522110]
[160.01567078 -71.09173584]
[171.43884277 -80.65000153]
[176.26852417 -94.85120392]
[171.26371765 -106.83489227]
[175.67875671 -118.61910248]
[186.60394287 -124.00694275]
[191.81971741 -138.07093811]
[197.03549194 -152.13491821]
[186.11569214 -162.74989319]
[180.46350098 -176.89106750]
[181.05816650 -192.10836792]
[187.79669189 -205.76531982]
[199.51156616 -215.49575806]
[214.17311096 -219.61384583]
[229.24114990 -217.40609741]
[242.10504150 -209.25500488]
[250.53602600 -196.57279968]
[253.07341003 -181.55676270]
[249.27755737 -166.80848694]
[239.80612183 -154.88322449]
[226.30009460 -147.84709167]
[211.09948730 -146.91914368]
[205.88371277 -132.85514832]
[200.66793823 -118.79116821]
[204.58761597 -101.74522400]
[190.46972656 -90.02153015]
[185.64006042 -75.82032776]
[188.86741638 -61.27957535]
[177.09880066 -50.70554733]
[172.26911926 -36.50434113]
[167.43943787 -22.30313492]
[168.68254089 -19.64600754]
[168.87347412 -16.30455971]
[167.73341370 -12.70613766]
[165.15457153 -9.37520695]
[161.23005676 -6.86695194]
[154.88046265 6.72285032]
[154.90031433 14.21628952]
[148.16734314 20.59349251]
[141.44892883 34.00478745]
[134.73049927 47.41608047]
[128.01208496 60.82737350]
[121.29365540 74.23867035]
[130.35336304 86.00930786]
[133.41812134 100.54319000]
[129.88262939 114.96977997]
[120.44516754 126.43976593]
[106.96967316 132.68775940]
[92.11763763 132.47975159]
[85.39921570 145.89105225]
[78.68079376 159.30233765]
[71.96237183 172.71363831]
[72.69915771 188.51766968]
[60.08086777 196.43145752]
[53.36244583 209.84275818]
[46.64402390 223.25404358]
[39.92560196 236.66534424]
[53.67206192 230.66242981]
[68.66870880 230.97955322]
[82.14911652 237.55821228]
[91.62654877 249.18482971]
[95.35271454 263.71466064]
[92.64024353 278.46734619]
[83.98950195 290.72152710]
[70.99629211 298.21661377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[10 18]
[11 17]
[12 16]
[26 106]
[27 105]
[28 104]
[29 103]
[31 101]
[32 100]
[33 99]
[34 98]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[45 86]
[46 85]
[47 80]
[48 79]
[49 78]
[51 76]
[52 75]
[55 73]
[56 72]
[57 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
