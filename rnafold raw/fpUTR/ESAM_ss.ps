%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCGGUCCCCACCCCGCCACCGGCACACAGGCGCGCAGACUUGGGCUGGAGCCGCCCUGGGUGUCAGCGGCUCGGCUCCCGCGCACGCUCCGGCCGUCGCGCAGCCUCGGCACCUGCAGGUCCGUGCGUCCCGCGGCUGGCGCCCCUGACUCCGUCCCGGCCAGGGAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[78.61576080 566.89715576]
[63.72351837 572.86376953]
[49.84518433 564.81573486]
[47.62702942 548.92675781]
[58.77063751 537.38555908]
[59.85300446 522.42462158]
[60.93537140 507.46374512]
[62.01773453 492.50283813]
[63.10010147 477.54193115]
[55.72057343 470.41308594]
[53.45378876 460.18066406]
[57.28958130 450.19128418]
[66.18033600 443.84994507]
[67.80212402 428.93786621]
[69.42390442 414.02578735]
[61.48117828 398.39367676]
[72.43730164 383.61340332]
[73.78959656 368.67449951]
[75.14189148 353.73556519]
[62.59231186 340.44244385]
[63.72898865 321.87762451]
[78.29689789 309.80828857]
[79.10897827 294.83029175]
[79.92106628 279.85229492]
[68.81044006 272.41543579]
[62.78492355 260.35910034]
[63.51816177 246.79235840]
[70.92519379 235.27339172]
[83.15666199 228.87638855]
[84.23902893 213.91549683]
[85.32139587 198.95458984]
[86.40376282 183.99369812]
[79.60500336 170.74128723]
[88.31792450 157.53540039]
[89.40029144 142.57450867]
[90.48265839 127.61360168]
[91.56501770 112.65270233]
[86.01294708 98.71805573]
[74.93855286 88.60085297]
[66.46070099 85.10626221]
[63.75765228 78.19962311]
[48.41785431 74.32649994]
[44.49884796 59.95671844]
[33.60891724 49.64122391]
[18.26911545 45.76810074]
[14.35011101 31.39831543]
[3.46017838 21.08282471]
[-11.87962151 17.20969772]
[-15.79862690 2.83991480]
[-26.68855858 -7.47557688]
[-37.57849121 -17.79106903]
[-48.46842194 -28.10656166]
[-59.35835648 -38.42205429]
[-70.24829102 -48.73754501]
[-81.32268524 -58.85474777]
[-92.57793427 -68.77036285]
[-103.83317566 -78.68597412]
[-115.17748260 -88.49958038]
[-126.60990906 -98.21037292]
[-138.04234314 -107.92116547]
[-154.08480835 -108.05750275]
[-163.86672974 -120.77338409]
[-159.88424683 -136.31427002]
[-145.19236755 -142.75852966]
[-131.06146240 -135.16267395]
[-128.33154297 -119.35359955]
[-116.89911652 -109.64280701]
[-105.46668243 -99.93200684]
[-98.30828094 -97.99154663]
[-93.91756439 -89.94122314]
[-82.66231537 -80.02561188]
[-71.40706635 -70.10999298]
[-66.63642883 -69.51692963]
[-62.19796371 -65.89831543]
[-59.93279648 -59.62747574]
[-49.04286575 -49.31198502]
[-38.15293121 -38.99649429]
[-27.26299858 -28.68100166]
[-16.37306786 -18.36550903]
[-5.48313475 -8.05001736]
[9.07774448 -4.91472483]
[13.77567005 10.19289112]
[24.66560364 20.50838280]
[39.22648239 23.64367676]
[43.92440796 38.75129318]
[54.81433868 49.06678391]
[69.37522125 52.20207596]
[74.07314301 67.30969238]
[85.05575562 77.52645874]
[96.13014984 87.64366150]
[101.50576019 86.68154907]
[106.99001312 88.03354645]
[119.98039246 80.53354645]
[132.97077942 73.03354645]
[145.96115112 65.53354645]
[158.95153809 58.03354645]
[171.94192505 50.53354645]
[184.93229675 43.03354645]
[194.17202759 25.14286041]
[213.47341919 25.89622879]
[226.18457031 17.93213463]
[238.89570618 9.96803951]
[251.60685730 2.00394464]
[264.31799316 -5.96015024]
[266.24264526 -9.94007206]
[269.06188965 -12.79457569]
[272.30493164 -14.37976074]
[275.50320435 -14.72191715]
[278.24633789 -14.00168610]
[291.49902344 -21.02781296]
[304.75170898 -28.05393982]
[310.89428711 -34.86238480]
[318.30767822 -35.08483124]
[331.68505859 -41.87054825]
[345.06243896 -48.65626526]
[353.56072998 -62.68163300]
[369.94824219 -62.06410599]
[377.36691284 -47.43893814]
[368.18502808 -33.85125351]
[351.84814453 -35.27889252]
[338.47079468 -28.49317741]
[325.09341431 -21.70746231]
[311.77783203 -14.80125904]
[298.52514648 -7.77513218]
[285.27249146 -0.74900568]
[272.28210449 6.75099421]
[259.57095337 14.71508884]
[246.85980225 22.67918396]
[234.14866638 30.64327812]
[221.43751526 38.60737228]
[220.04443359 48.77286911]
[213.12698364 56.64624023]
[202.80084229 59.45193481]
[192.43229675 56.02392578]
[179.44192505 63.52392578]
[166.45153809 71.02392578]
[153.46115112 78.52392578]
[140.47077942 86.02392578]
[127.48039246 93.52392578]
[114.49001312 101.02392578]
[106.52591705 113.73506927]
[105.44355011 128.69596863]
[104.36119080 143.65686035]
[103.27882385 158.61776733]
[110.00016022 172.94027710]
[101.36466217 185.07606506]
[100.28229523 200.03695679]
[99.19992828 214.99786377]
[98.11756134 229.95875549]
[111.18738556 240.66937256]
[115.26983643 256.89556885]
[108.95137787 272.20919800]
[94.89906311 280.66436768]
[94.08698273 295.64236450]
[93.27489471 310.62036133]
[102.81500244 317.78311157]
[107.64855957 328.55825806]
[106.67436218 340.20715332]
[100.25149536 349.83001709]
[90.08081055 355.08786011]
[88.72851562 370.02679443]
[87.37622070 384.96569824]
[95.03239441 395.37384033]
[93.57717133 407.80847168]
[84.33597565 415.64758301]
[82.71419525 430.55966187]
[81.09240723 445.47171021]
[90.07027435 463.49523926]
[78.06100464 478.62429810]
[76.97863770 493.58520508]
[75.89627075 508.54611206]
[74.81390381 523.50701904]
[73.73153687 538.46789551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[13 167]
[14 166]
[15 165]
[17 162]
[18 161]
[19 160]
[22 155]
[23 154]
[24 153]
[29 149]
[30 148]
[31 147]
[32 146]
[34 144]
[35 143]
[36 142]
[37 141]
[38 90]
[39 89]
[41 88]
[43 86]
[44 85]
[46 83]
[47 82]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[54 75]
[55 72]
[56 71]
[57 70]
[58 68]
[59 67]
[60 66]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[109 125]
[110 124]
[111 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
