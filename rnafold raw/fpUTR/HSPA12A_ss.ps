%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAGGGGUUGGCGGGAGGAGAGCGCUUGUCCCAGGUCCCUACCAGGUGCCCGUAGACGUCGGCAGGCUGGAGGUAGAAGGUGGAGUUGAGCAGCUCUUCCAGCCUGCGCGGAACGUCGUUCUCCCGGUAGUACUCCAUCGCCUGCUGCUUCAGCUUCUGCAGCUCCCUAGUGGUCCCACAGCUGCGGCCGCCGCCUUCUUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[79.38017273 380.01651001]
[78.93144226 365.02322388]
[78.48270416 350.02993774]
[78.03397369 335.03665161]
[77.58524323 320.04336548]
[77.13651276 305.05007935]
[76.68778229 290.05679321]
[76.23904419 275.06350708]
[75.79031372 260.07022095]
[75.34158325 245.07693481]
[72.54035187 241.20797729]
[72.14035034 235.53804016]
[75.11048126 229.62988281]
[75.11048126 214.62988281]
[75.11048126 199.62988281]
[75.11048126 184.62988281]
[75.11048126 169.62988281]
[75.11048126 154.62988281]
[72.52539825 61.30379868]
[63.78111267 58.65997696]
[60.41249084 52.08100891]
[48.54642487 42.90514374]
[36.68035889 33.72928238]
[24.81429482 24.55341721]
[12.94822979 15.37755203]
[1.08216405 6.20168781]
[-10.78390121 -2.97417688]
[-1.04755807 8.43650341]
[1.99963999 23.12372780]
[-2.39368415 37.46592712]
[-13.14422607 47.92660904]
[-27.60112190 51.92638016]
[-42.19959641 48.47897720]
[-53.33996201 38.43446350]
[-58.27523041 24.26960945]
[-55.78846741 9.47717857]
[-46.49285889 -2.29531622]
[-32.68171692 -8.14483643]
[-47.39894104 -5.24599743]
[-62.11616898 -2.34715867]
[-74.16090393 7.91124582]
[-88.14352417 2.77942681]
[-102.86075592 5.67826557]
[-117.57798004 8.57710457]
[-131.95002747 17.57046700]
[-144.57051086 6.24969435]
[-137.18585205 -9.01147175]
[-120.47681427 -6.14012146]
[-105.75959015 -9.03896046]
[-91.04236603 -11.93779850]
[-80.05030060 -21.98885918]
[-65.01500702 -17.06438446]
[-50.29777908 -19.96322250]
[-35.58055496 -22.86206245]
[-32.22570801 -29.56989288]
[-45.64125443 -36.27981186]
[-38.93111420 -49.69525146]
[-25.51600838 -42.98555374]
[-22.16115952 -49.69338608]
[-28.66941643 -63.20791626]
[-35.17767334 -76.72245026]
[-41.68592834 -90.23698425]
[-48.19418335 -103.75151825]
[-54.90388107 -117.16717529]
[-61.81351852 -130.48095703]
[-68.82254791 -143.74269104]
[-75.93058014 -156.95162964]
[-83.03860474 -170.16056824]
[-90.14663696 -183.36949158]
[-97.25466919 -196.57843018]
[-104.36270142 -209.78735352]
[-111.47072601 -222.99629211]
[-118.57875824 -236.20523071]
[-125.68679047 -249.41415405]
[-132.79481506 -262.62307739]
[-139.90284729 -275.83203125]
[-147.01087952 -289.04095459]
[-150.78515625 -291.19131470]
[-153.41400146 -294.13500977]
[-154.78866577 -297.41442871]
[-154.96025085 -300.58355713]
[-154.12202454 -303.25927734]
[-160.42738342 -316.86965942]
[-173.24888611 -326.13894653]
[-171.57838440 -340.93957520]
[-177.88374329 -354.54995728]
[-193.13374329 -357.41647339]
[-203.76185608 -368.72238159]
[-205.68133545 -384.12026978]
[-198.15411377 -397.68936157]
[-184.07456970 -404.21209717]
[-168.85655212 -401.18029785]
[-158.35171509 -389.75976562]
[-156.59938049 -374.34197998]
[-164.27336121 -360.85531616]
[-157.96800232 -347.24493408]
[-145.59748840 -338.94915771]
[-146.81700134 -323.17501831]
[-140.51164246 -309.56463623]
[-133.80194092 -296.14898682]
[-126.69391632 -282.94006348]
[-119.58588409 -269.73110962]
[-112.47785187 -256.52218628]
[-105.36982727 -243.31326294]
[-98.26179504 -230.10432434]
[-91.15376282 -216.89538574]
[-84.04573822 -203.68646240]
[-76.93770599 -190.47752380]
[-69.82967377 -177.26858521]
[-62.72164536 -164.05966187]
[-55.61361694 -150.85072327]
[-49.67536545 -146.44985962]
[-48.49973297 -137.39059448]
[-41.59009552 -124.07681274]
[-37.38759232 -121.80641174]
[-34.56711578 -116.87153625]
[-34.67965317 -110.25977325]
[-28.17139626 -96.74523926]
[-21.66313934 -83.23070526]
[-15.15488338 -69.71617126]
[-8.64662743 -56.20164108]
[-1.60803699 -14.84024239]
[10.25802803 -5.66437769]
[22.12409401 3.51148653]
[33.99015808 12.68735123]
[45.85622406 21.86321640]
[57.72229004 31.03907967]
[69.58835602 40.21494293]
[81.52272797 49.30179596]
[96.51601410 49.75052643]
[109.03460693 41.48707199]
[121.55320740 33.22361755]
[128.80801392 19.16380119]
[143.69230652 18.60972786]
[156.21090698 10.34627438]
[160.82466125 -5.01903582]
[175.76742554 -10.85799599]
[189.57638550 -2.69145465]
[191.65847778 13.21591568]
[180.41650391 24.66134262]
[164.47434998 22.86487198]
[151.95576477 31.12832832]
[145.59637451 44.59708786]
[129.81666565 45.74221802]
[117.29806519 54.00567245]
[104.77946472 62.26912689]
[107.41477966 69.29088593]
[115.32070923 90.35617065]
[130.18495178 88.34267426]
[145.04920959 86.32917786]
[159.91345215 84.31567383]
[174.79760742 76.19791412]
[186.71847534 88.25318146]
[178.43435669 103.04540253]
[161.92694092 99.17992401]
[147.06269836 101.19342041]
[132.19845581 103.20691681]
[117.33420563 105.22042084]
[115.77487183 112.55652618]
[112.65619659 127.22873688]
[111.09685516 134.56484985]
[123.85706329 142.45010376]
[136.61726379 150.33535767]
[149.37745667 158.22061157]
[162.13766479 166.10586548]
[174.89785767 173.99113464]
[187.65806580 181.87638855]
[200.41825867 189.76164246]
[199.56883240 174.78570557]
[210.64491272 164.67036438]
[225.48254395 166.87141418]
[233.14520264 179.76651001]
[227.98487854 193.85093689]
[213.80622864 198.74345398]
[225.94148254 207.56022644]
[238.07673645 216.37701416]
[254.43373108 217.55212402]
[261.35012817 232.42140198]
[251.71096802 245.68859863]
[235.43215942 243.70555115]
[229.25996399 228.51226807]
[217.12471008 219.69548035]
[204.98944092 210.87870789]
[192.53300476 202.52185059]
[179.77281189 194.63658142]
[167.01260376 186.75132751]
[154.25241089 178.86607361]
[141.49220276 170.98081970]
[128.73200989 163.09556580]
[115.97180176 155.21029663]
[103.21160126 147.32504272]
[90.11048126 154.62988281]
[90.11048126 169.62988281]
[90.11048126 184.62988281]
[90.11048126 199.62988281]
[90.11048126 214.62988281]
[90.11048126 229.62988281]
[90.33486938 244.62820435]
[90.78359985 259.62149048]
[91.23233032 274.61477661]
[91.68106842 289.60806274]
[92.12979889 304.60134888]
[92.57852936 319.59463501]
[93.02725983 334.58792114]
[93.47599030 349.58120728]
[93.92472839 364.57449341]
[94.37345886 379.56777954]
[100.89093018 395.21893311]
[87.65563202 405.81439209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 129]
[21 128]
[22 127]
[23 126]
[24 125]
[25 124]
[26 123]
[27 122]
[38 54]
[39 53]
[40 52]
[42 50]
[43 49]
[44 48]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[64 114]
[65 113]
[66 111]
[67 110]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[82 99]
[83 98]
[85 96]
[86 95]
[130 146]
[131 145]
[132 144]
[134 142]
[135 141]
[148 158]
[149 157]
[150 156]
[151 155]
[161 191]
[162 190]
[163 189]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
