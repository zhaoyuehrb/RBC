%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAAGAGAGUCUCAGCCUUUAGGUAGCUGACACUGUGAUAAGAGCAUCCUGUGAACUACCCAAAUAAGGAGGAAAACGAACGCAGCUGAGCAUGGGAUGCCAUAUAAAAAUCACUUAAACCAGUCGCCACUCCUUGUUUCCUGAGUUGUCCUGUGCUGGAGGUCUGCUCAGACGAAGGUCUCC\
) } def
/len { sequence length } bind def

/coor [
[97.64636993 284.17831421]
[88.47729492 296.50000000]
[74.36946106 302.57159424]
[59.11779404 300.75991821]
[46.82491684 291.55227661]
[40.79755402 277.42547607]
[42.65703583 262.17956543]
[51.90317154 249.91560364]
[66.04879761 243.93255615]
[67.81814575 229.03726196]
[69.58749390 214.14198303]
[56.30920029 221.11958313]
[42.50629044 215.24763489]
[38.32457352 200.84231567]
[46.83780670 188.49221802]
[61.78836060 187.27526855]
[72.18637848 198.08454895]
[75.20585632 183.39160156]
[78.22533417 168.69865417]
[81.24481201 154.00570679]
[84.26428986 139.31274414]
[87.28376770 124.61980438]
[79.59650421 118.74925995]
[74.39531708 110.59420776]
[59.50003433 112.36355591]
[44.60475159 114.13290405]
[29.70947075 115.90225983]
[14.81418991 117.67160797]
[2.02302647 126.98271942]
[-11.52805996 120.80069733]
[-24.31922340 130.11180115]
[-37.87030792 123.92978668]
[-52.76559067 125.69914246]
[-67.66087341 127.46849060]
[-77.43119049 139.60021973]
[-92.56232452 141.18240356]
[-104.06785583 131.79313660]
[-118.96313477 133.56248474]
[-133.85841370 135.33183289]
[-142.27494812 148.51121521]
[-157.20933533 153.14781189]
[-171.61001587 147.05236816]
[-178.67742920 133.10298157]
[-175.07456970 117.88610077]
[-162.50257874 108.58668518]
[-146.89758301 109.59563446]
[-135.62777710 120.43655396]
[-120.73249054 118.66719818]
[-105.83720398 116.89785004]
[-96.85144043 105.07450104]
[-81.77070618 103.06793976]
[-69.43022156 112.57321167]
[-54.53493881 110.80385590]
[-39.63965988 109.03450775]
[-27.91390610 99.84996033]
[-13.29741001 105.90541840]
[-1.57165742 96.72086334]
[13.04483891 102.77632904]
[27.94012070 101.00697327]
[42.83539963 99.23762512]
[57.73068237 97.46827698]
[72.62596130 95.69892120]
[82.48896790 78.52441406]
[101.29731750 72.32051086]
[106.02885437 58.08630371]
[110.76038361 43.85210037]
[115.49191284 29.61789322]
[120.22344208 15.38368702]
[124.95497131 1.14948070]
[129.68650818 -13.08472538]
[134.41802979 -27.31893158]
[139.14956665 -41.55313873]
[143.88108826 -55.78734207]
[138.33149719 -60.60741043]
[134.16151428 -66.63396454]
[131.62217712 -73.48506927]
[130.86154175 -80.72980499]
[131.91622925 -87.91535950]
[134.70965576 -94.59534454]
[139.05763245 -100.35748291]
[144.68037415 -104.84910583]
[151.22052002 -107.79870605]
[158.26583862 -109.03231812]
[165.37519836 -108.48377991]
[171.98110962 -121.95085144]
[171.11204529 -137.74816895]
[183.66363525 -145.76730347]
[190.26954651 -159.23437500]
[196.87547302 -172.70144653]
[203.48138428 -186.16851807]
[194.14022827 -198.18951416]
[190.95764160 -213.01376343]
[194.51249695 -227.68969727]
[204.04763794 -239.31906128]
[217.63041687 -245.62918091]
[232.54417419 -245.41706848]
[239.15010071 -258.88412476]
[245.64204407 -272.40652466]
[252.01956177 -285.98321533]
[258.39706421 -299.55993652]
[249.10403442 -311.72128296]
[246.53852844 -326.81024170]
[251.29010010 -341.35949707]
[262.26687622 -352.02575684]
[276.94647217 -356.35797119]
[291.95562744 -353.36062622]
[303.84533691 -343.72250366]
[309.88342285 -329.65838623]
[308.68243408 -314.40005493]
[300.51828003 -301.45382690]
[287.26705933 -293.79458618]
[271.97378540 -293.18243408]
[265.59628296 -279.60571289]
[259.21875000 -266.02899170]
[259.22061157 -258.62185669]
[252.61715698 -252.27822876]
[246.01124573 -238.81115723]
[255.30778503 -227.14755249]
[258.63198853 -212.54415894]
[255.27229309 -197.88558960]
[245.84286499 -186.09127808]
[232.17213440 -179.53398132]
[216.94844055 -179.56260681]
[210.34252930 -166.09553528]
[203.73661804 -152.62846375]
[197.13070679 -139.16139221]
[198.47227478 -124.32733154]
[185.44818115 -115.34494019]
[178.84226990 -101.87786865]
[188.82518005 -81.08376312]
[180.16723633 -59.42378616]
[158.11529541 -51.05581284]
[153.38377380 -36.82160568]
[148.65223694 -22.58740234]
[143.92070007 -8.35319519]
[139.18917847 5.88101053]
[134.45764160 20.11521721]
[129.72612000 34.34942245]
[124.99459076 48.58362961]
[120.26305389 62.81783676]
[115.53152466 77.05204010]
[126.36808014 91.48170471]
[126.02171326 109.52404022]
[138.18669128 118.29978180]
[150.35165405 127.07551575]
[162.51663208 135.85124207]
[174.68159485 144.62698364]
[186.84655762 153.40272522]
[202.56517029 155.20155334]
[208.36026001 168.92257690]
[224.07887268 170.72142029]
[229.87396240 184.44242859]
[242.03894043 193.21815491]
[254.20390320 201.99389648]
[269.31875610 197.98443604]
[283.45257568 204.67539978]
[289.93182373 218.90753174]
[285.69720459 233.96083069]
[272.74816895 242.72761536]
[257.19885254 241.06845093]
[246.39115906 229.76676941]
[245.42817688 214.15885925]
[233.26319885 205.38313293]
[221.09823608 196.60739136]
[206.24974060 195.43624878]
[199.58453369 181.08753967]
[184.73603821 179.91639709]
[178.07083130 165.56768799]
[165.90585327 156.79194641]
[153.74089050 148.01622009]
[141.57592773 139.24047852]
[129.41094971 130.46475220]
[117.24597931 121.68901062]
[112.59014893 124.68451691]
[107.43176270 126.69467926]
[101.97671509 127.63928223]
[98.95723724 142.33222961]
[95.93775940 157.02517700]
[92.91828156 171.71812439]
[89.89880371 186.41107178]
[86.87932587 201.10401917]
[84.48278046 215.91133118]
[82.71342468 230.80662537]
[80.94407654 245.70190430]
[93.29443359 254.83230591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 184]
[10 183]
[11 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 177]
[22 176]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[30 56]
[32 54]
[33 53]
[34 52]
[37 49]
[38 48]
[39 47]
[64 141]
[65 140]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[84 129]
[85 128]
[87 126]
[88 125]
[89 124]
[90 123]
[96 117]
[97 116]
[98 114]
[99 113]
[100 112]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[148 168]
[150 166]
[152 164]
[153 163]
[154 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
