%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCCAGGCUGUGCGCUUGGGGAGCGCGGAAUGUGAGGCUUGGCGGGCCGCAGCACGCUCGGACGGGCCAGGGGCGGCGACCCCUCGCGGACGCCCGGCUGCGCGCCGGGCCGGGGACUUGCCCUUGCACGCUCCCUGCGCCCUCCAGCUCGCCGGCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[-272.85162354 479.34158325]
[-278.61947632 494.07394409]
[-293.36749268 496.15835571]
[-304.96826172 505.66744995]
[-316.56900024 515.17651367]
[-328.16973877 524.68560791]
[-339.77050781 534.19470215]
[-351.28131104 543.81243896]
[-362.70111084 553.53808594]
[-368.19082642 568.37634277]
[-382.89703369 570.73779297]
[-388.38671875 585.57604980]
[-403.09295654 587.93750000]
[-408.58264160 602.77575684]
[-423.28884888 605.13720703]
[-434.70867920 614.86285400]
[-446.12850952 624.58843994]
[-457.54833984 634.31408691]
[-468.96813965 644.03973389]
[-480.38796997 653.76531982]
[-491.80780029 663.49096680]
[-499.94616699 678.36383057]
[-516.49078369 674.66076660]
[-517.51239014 657.73760986]
[-501.53341675 652.07110596]
[-490.11358643 642.34552002]
[-478.69375610 632.61987305]
[-467.27395630 622.89428711]
[-455.85412598 613.16864014]
[-444.43429565 603.44305420]
[-433.01446533 593.71740723]
[-428.34161377 579.57476807]
[-412.81857300 576.51770020]
[-408.14569092 562.37506104]
[-392.62265015 559.31799316]
[-387.94976807 545.17535400]
[-372.42672729 542.11822510]
[-361.00692749 532.39263916]
[-357.94024658 525.63269043]
[-349.27957153 522.59393311]
[-337.67883301 513.08483887]
[-326.07809448 503.57577515]
[-314.47732544 494.06668091]
[-302.87658691 484.55761719]
[-297.93850708 470.50540161]
[-282.36071777 467.74084473]
[-277.42260742 453.68862915]
[-261.84481812 450.92404175]
[-250.24407959 441.41497803]
[-244.97137451 424.69598389]
[-226.80511475 421.80822754]
[-215.38529968 412.08261108]
[-203.96546936 402.35699463]
[-192.54565430 392.63137817]
[-187.58837891 375.81616211]
[-169.47966003 372.58721924]
[-158.24481201 362.64849854]
[-157.59390259 347.81231689]
[-146.34175110 337.57302856]
[-130.78462219 338.35632324]
[-119.54976654 328.41763306]
[-108.31491089 318.47891235]
[-105.37595367 311.66250610]
[-96.77397156 308.46133423]
[-85.35414886 298.73571777]
[-73.93432617 289.01010132]
[-70.86767578 282.25018311]
[-62.20699692 279.21139526]
[-50.60624695 269.70233154]
[-39.00549698 260.19323730]
[-27.40474892 250.68415833]
[-15.89395428 241.06639099]
[-4.47413111 231.34075928]
[6.94569159 221.61514282]
[18.36551476 211.88952637]
[29.78533745 202.16390991]
[41.11317825 192.33131409]
[52.34803391 182.39259338]
[63.58288574 172.45388794]
[74.72376251 162.40994263]
[85.76967621 152.26164246]
[96.81558990 142.11335754]
[107.86149597 131.96505737]
[77.71575165 131.03083801]
[56.66432190 103.65133667]
[65.32130432 65.70140839]
[68.67876434 51.08198929]
[63.35145187 35.57225800]
[74.32222748 23.38315773]
[90.30529785 27.05379295]
[94.85865021 42.80812454]
[83.29818726 54.43944931]
[79.94072723 69.05886841]
[86.45930481 72.76806641]
[99.49645996 80.18646240]
[106.01503754 83.89566040]
[116.86809540 73.54138184]
[127.72115326 63.18710327]
[138.57421875 52.83282471]
[149.42727661 42.47854614]
[160.28033447 32.12426758]
[171.13339233 21.76998711]
[172.94656372 5.82972527]
[186.61563110 -2.56884408]
[201.65487671 3.01694345]
[206.52745056 18.30214882]
[197.49554443 31.56127167]
[181.48767090 32.62304688]
[170.63461304 42.97732544]
[159.78155518 53.33160400]
[148.92849731 63.68588257]
[138.07543945 74.04016113]
[127.22237396 84.39443970]
[116.36931610 94.74871826]
[119.64158630 101.49721527]
[129.45841980 121.74270630]
[144.30937195 119.63338470]
[159.16032410 117.52405548]
[168.45152283 104.73933411]
[184.07440186 102.35159302]
[196.76017761 111.77744293]
[198.98260498 127.42469025]
[189.42315674 140.01010132]
[173.75328064 142.06697083]
[161.26965332 132.37500000]
[146.41870117 134.48432922]
[131.56774902 136.59365845]
[118.00978851 143.01097107]
[106.96388245 153.15925598]
[95.91796875 163.30755615]
[84.87205505 173.45584106]
[80.64558411 181.60314941]
[73.52159882 183.68873596]
[62.28674698 193.62745667]
[51.05189133 203.56616211]
[46.67291260 211.63252258]
[39.51095581 213.58374023]
[28.09113312 223.30935669]
[16.67131042 233.03497314]
[5.25148726 242.76058960]
[-6.16833544 252.48620605]
[-10.69827461 260.46875000]
[-17.89566803 262.28491211]
[-29.49641609 271.79397583]
[-41.09716415 281.30307007]
[-52.69791412 290.81216431]
[-64.20870972 300.42993164]
[-75.62853241 310.15554810]
[-87.04835510 319.88116455]
[-98.37619781 329.71377563]
[-109.61105347 339.65246582]
[-120.84590149 349.59118652]
[-121.96598816 365.12771606]
[-133.50131226 375.04693604]
[-148.30609131 373.88336182]
[-159.54095459 383.82208252]
[-161.11569214 396.65197754]
[-170.71392822 404.69833374]
[-182.82003784 404.05120850]
[-194.23985291 413.77682495]
[-205.65968323 423.50244141]
[-217.07949829 433.22805786]
[-218.89530945 446.02606201]
[-228.64320374 453.89047241]
[-240.73500061 453.01571655]
[-252.33573914 462.52481079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[3 44]
[4 43]
[5 42]
[6 41]
[7 40]
[8 38]
[9 37]
[11 35]
[13 33]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[48 166]
[49 165]
[51 162]
[52 161]
[53 160]
[54 159]
[56 156]
[57 155]
[60 152]
[61 151]
[62 150]
[64 149]
[65 148]
[66 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 135]
[78 134]
[79 133]
[80 131]
[81 130]
[82 129]
[83 128]
[86 93]
[87 92]
[96 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[116 127]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
