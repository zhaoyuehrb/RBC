%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUUUGAGUCAGCACCAGCGACAGCUCUGCAGUCCUCCUAUGUGGUACUGAUCAGGUGGUUGCAGAGCUUCAGCUCACAGCAACACAAUGCAGCUGAGCAGGCAAGCACAGCCCACAGCCAGAAACAGUUCCGACUCUACAGAACAAGACGACCUUUAAGUUUCCCAGAGAAAAUGAGAUGCUGAUGUUGAAGACGACACCACGGCUUUG\
) } def
/len { sequence length } bind def

/coor [
[54.58634186 415.29046631]
[45.58927536 403.23022461]
[39.03745270 389.68511963]
[35.16772079 375.14477539]
[34.11996841 360.13482666]
[35.93206787 345.19787598]
[40.53851700 330.87387085]
[47.77279282 317.68060303]
[57.37337875 306.09506226]
[68.99322510 296.53598022]
[82.21228027 289.34896851]
[96.55267334 284.79382324]
[94.79508209 269.89715576]
[93.03749084 255.00047302]
[91.27989197 240.10380554]
[89.52230072 225.20712280]
[87.76470947 210.31045532]
[78.58941650 198.57745361]
[84.65641022 183.96574402]
[82.89881134 169.06907654]
[81.14122009 154.17239380]
[79.38362885 139.27572632]
[67.47216797 130.15887451]
[52.63351059 132.35301208]
[44.60409546 136.70315552]
[37.56108093 134.46881104]
[22.69181633 136.44488525]
[7.82254934 138.42097473]
[-7.04671717 140.39706421]
[-21.91598320 142.37313843]
[-36.78525162 144.34922791]
[-51.65451813 146.32531738]
[-66.52378082 148.30139160]
[-81.39305115 150.27748108]
[-96.26231384 152.25357056]
[-104.35472107 156.48536682]
[-111.36418152 154.14785767]
[-126.26084900 155.90545654]
[-139.05935669 165.20646667]
[-152.60556030 159.01374817]
[-167.50222778 160.77134705]
[-182.39891052 162.52894592]
[-197.28227234 164.39582825]
[-212.15155029 166.37191772]
[-218.61654663 180.37931824]
[-231.64048767 188.64857483]
[-247.06747437 188.54098511]
[-259.97482300 180.09089661]
[-266.24383545 165.99468994]
[-263.87408447 150.75041199]
[-253.62176514 139.22247314]
[-238.75834656 135.08937073]
[-224.02670288 139.66998291]
[-214.12762451 151.50265503]
[-199.25836182 149.52656555]
[-193.04338074 145.53025818]
[-184.15649414 147.63226318]
[-169.25982666 145.87467957]
[-154.36315918 144.11708069]
[-142.63015747 134.94178772]
[-128.01844788 141.00878906]
[-113.12177277 139.25119019]
[-98.23840332 137.38430786]
[-83.36913300 135.40821838]
[-68.49987030 133.43212891]
[-53.63059998 131.45603943]
[-38.76133347 129.47996521]
[-23.89206886 127.50387573]
[-9.02280235 125.52779388]
[5.84646463 123.55170441]
[20.71573067 121.57562256]
[35.58499908 119.59954071]
[50.43935776 117.51436615]
[65.27801514 115.32021332]
[65.09713745 92.93601990]
[77.17955017 75.79086304]
[69.61607361 62.83733749]
[62.05259705 49.88381577]
[54.48911667 36.93029022]
[46.92564011 23.97676468]
[39.26728439 11.07910538]
[25.51090813 3.26420617]
[25.55645561 -11.63032913]
[17.80363846 -24.47142792]
[10.05081940 -37.31252670]
[-5.35027552 -40.85961151]
[-13.66138077 -54.30212021]
[-9.95166492 -69.66485596]
[3.57796431 -77.83337402]
[18.90061760 -73.96144104]
[26.92563438 -60.34620285]
[22.89191818 -45.06534576]
[30.64473724 -32.22424698]
[38.39755630 -19.38314819]
[51.59939957 -12.48672962]
[52.10838318 3.32628775]
[58.25513458 7.42675734]
[59.87916565 16.41328812]
[67.44264221 29.36681175]
[75.00611877 42.32033539]
[82.56959534 55.27386093]
[90.13307190 68.22738647]
[93.91218567 56.02502060]
[101.44212341 44.49942398]
[102.76165009 29.55757523]
[104.08116913 14.61572552]
[92.90544891 3.67784381]
[91.42654419 -11.88964939]
[100.34274292 -24.73625946]
[115.44409180 -28.79621124]
[129.60020447 -22.15251732]
[136.12698364 -7.94212961]
[131.94268799 7.12524319]
[119.02301788 15.93524837]
[117.70349884 30.87709808]
[116.38397217 45.81894684]
[122.88832092 49.55304337]
[130.35652161 36.54434967]
[137.82470703 23.53565788]
[145.29290771 10.52696609]
[152.76109314 -2.48172688]
[160.22929382 -15.49041939]
[167.69767761 -28.49899673]
[180.70614624 -21.03040123]
[173.23797607 -8.02222538]
[165.76979065 4.98646688]
[158.30158997 17.99515915]
[150.83340454 31.00385284]
[143.36520386 44.01254272]
[135.89701843 57.02123642]
[142.40136719 60.75533295]
[154.63932800 52.08168030]
[166.87728882 43.40802383]
[179.11524963 34.73437119]
[185.90026855 20.44192314]
[200.75804138 19.39504623]
[203.16612244 3.77529263]
[215.96293640 -5.49925041]
[231.55635071 -2.92616177]
[240.69508362 9.96799088]
[237.95727539 25.53333473]
[224.96722412 34.53522873]
[209.43168640 31.63300896]
[203.52201843 45.30505753]
[187.78889465 46.97233200]
[175.55093384 55.64598846]
[163.31297302 64.31964111]
[151.07501221 72.99329376]
[152.44358826 80.36737061]
[167.19174194 77.63023376]
[181.93989563 74.89308929]
[196.68809509 72.15617371]
[199.42477417 86.90441895]
[184.67703247 89.64124298]
[169.92887878 92.37838745]
[155.18072510 95.11552429]
[156.54930115 102.48960876]
[171.08459473 106.19435120]
[185.61988831 109.89910126]
[196.37545776 99.02412415]
[211.03349304 95.01930237]
[225.63102722 98.86357880]
[236.27319336 109.42768860]
[240.17240906 123.80342102]
[254.70771790 127.50816345]
[269.24301147 131.21292114]
[283.77828979 134.91766357]
[300.62008667 132.97064209]
[307.15328979 148.61524963]
[293.92864990 159.22398376]
[280.07354736 149.45295715]
[265.53826904 145.74821472]
[251.00296021 142.04345703]
[236.46766663 138.33871460]
[226.16300964 149.09416199]
[211.76255798 153.27543640]
[197.10583496 149.66339111]
[186.15306091 139.13090515]
[181.91514587 124.43439484]
[167.37985229 120.72965240]
[152.84454346 117.02490234]
[135.24320984 134.99101257]
[113.73258972 141.59945679]
[94.28029633 137.51812744]
[96.03789520 152.41481018]
[97.79548645 167.31147766]
[99.55308533 182.20814514]
[108.85408783 195.00665283]
[102.66137695 208.55285645]
[104.41897583 223.44953918]
[106.17656708 238.34620667]
[107.93415833 253.24287415]
[109.69175720 268.13955688]
[111.44934845 283.03622437]
[126.45610809 284.12884521]
[140.98481750 288.04202271]
[154.51028442 294.63427734]
[166.54357910 303.66735840]
[176.64970398 314.81469727]
[184.46330261 327.67330933]
[189.70195007 341.77838135]
[192.17625427 356.62002563]
[191.79678345 371.66171265]
[188.57723999 386.35971069]
[182.63401794 400.18267822]
[174.18196106 412.63095093]
[163.52661133 423.25451660]
[151.05314636 431.66931152]
[137.21246338 437.57119751]
[122.50491333 440.74679565]
[107.46215057 441.08129883]
[92.62797546 438.56265259]
[78.53862000 433.28186035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[19 187]
[20 186]
[21 185]
[22 184]
[23 74]
[24 73]
[26 72]
[27 71]
[28 70]
[29 69]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[37 62]
[38 61]
[40 59]
[41 58]
[42 57]
[43 55]
[44 54]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 96]
[83 94]
[84 93]
[85 92]
[104 116]
[105 115]
[106 114]
[131 148]
[132 147]
[133 146]
[134 145]
[136 143]
[157 181]
[158 180]
[159 179]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
