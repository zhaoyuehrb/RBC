%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGGCUGCGGCUUCGGGCGGCCGGGUUUCUCCGGUCUCCCAACGCCGAGGAGAGCUUGUAACAGGCGCUGGAGCUGGCCCGCCACCGCCGCGUCAGGGACGGCGCUGGAGUCCUCCGUUCCCCUCAGCCUCUGAGCUGAGGCCCCACACCAGAGUAGGGGGCGGCGCGGCACCCGUGCCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[-34.24460602 397.86306763]
[-49.10889053 403.89901733]
[-63.02457047 395.91567993]
[-65.31673431 380.03723145]
[-54.22702026 368.44421387]
[-53.21437454 353.47845459]
[-52.20172882 338.51266479]
[-51.18908310 323.54687500]
[-58.04951859 310.32629395]
[-49.39822388 297.07995605]
[-48.38557434 282.11416626]
[-47.37292862 267.14840698]
[-55.09644318 257.82070923]
[-54.36140823 245.33099365]
[-45.01729202 236.41925049]
[-43.75202560 221.47270203]
[-42.48675919 206.52615356]
[-41.22149277 191.57962036]
[-52.20552063 183.23085022]
[-57.31890106 170.41664124]
[-72.06075287 167.64575195]
[-86.80260468 164.87484741]
[-95.83709717 166.36653137]
[-101.76911163 161.93066406]
[-116.46206665 158.91119385]
[-131.15501404 155.89170837]
[-145.84796143 152.87223816]
[-160.54090881 149.85275269]
[-177.86280823 156.07058716]
[-190.52908325 143.93775940]
[-205.27093506 141.16685486]
[-220.01278687 138.39596558]
[-234.75463867 135.62507629]
[-249.49649048 132.85418701]
[-264.23834229 130.08329773]
[-278.98019409 127.31240845]
[-303.19320679 165.09602356]
[-318.17395020 165.85575867]
[-333.15472412 166.61550903]
[-348.13546753 167.37524414]
[-363.10925293 168.26145935]
[-373.31454468 180.32908630]
[-389.07061768 181.56268311]
[-401.02966309 171.23037720]
[-402.09661865 155.46214294]
[-391.63845825 143.61300659]
[-375.85983276 142.71282959]
[-364.12191772 153.29568481]
[-357.64639282 149.69935608]
[-348.89520264 152.39450073]
[-333.91445923 151.63475037]
[-318.93371582 150.87501526]
[-303.95294189 150.11528015]
[-300.68560791 135.47477722]
[-297.41854858 120.83557129]
[-310.65481567 113.77858734]
[-323.89111328 106.72160339]
[-337.12738037 99.66461945]
[-350.36364746 92.60764313]
[-367.18499756 90.49127960]
[-369.80795288 73.74145508]
[-354.43881226 66.58419800]
[-343.30667114 79.37136078]
[-330.07040405 86.42834473]
[-316.83410645 93.48532867]
[-303.59783936 100.54231262]
[-290.36157227 107.59929657]
[-276.20928955 112.57055664]
[-261.46743774 115.34144592]
[-246.72560120 118.11233521]
[-231.98374939 120.88323212]
[-217.24189758 123.65412140]
[-202.50004578 126.42501068]
[-187.75819397 129.19590759]
[-177.58459473 122.62657166]
[-165.26876831 124.82971954]
[-157.52143860 135.15980530]
[-142.82849121 138.17927551]
[-128.13552856 141.19876099]
[-113.44258881 144.21823120]
[-98.74963379 147.23771667]
[-84.03171539 150.13299561]
[-69.28986359 152.90390015]
[-54.54801178 155.67478943]
[-45.95567703 145.79814148]
[-33.50725555 141.33082581]
[-20.32989693 143.53477478]
[-9.80251884 151.97816467]
[4.34974384 147.00689697]
[18.50200653 142.03562927]
[32.65427017 137.06436157]
[46.80653381 132.09310913]
[60.95879364 127.12184143]
[75.11106110 122.15058136]
[89.26332092 117.17931366]
[66.84078979 96.83297729]
[83.31524658 56.74457169]
[91.24970245 44.01490784]
[99.18416595 31.28524399]
[107.11862183 18.55558014]
[115.05308533 5.82591724]
[122.98754120 -6.90374660]
[130.92199707 -19.63341141]
[131.65557861 -35.43759918]
[144.95407104 -42.14577484]
[139.00048828 -56.47527313]
[142.63934326 -71.55964661]
[154.47142029 -81.59864807]
[169.94705200 -82.73207092]
[183.11552429 -74.52409363]
[188.91331482 -60.13085556]
[185.11102295 -45.08684540]
[173.17074585 -35.17679214]
[157.68373108 -34.21131516]
[157.51768494 -19.31763458]
[143.65167236 -11.69895077]
[135.71720886 1.03071344]
[127.78274536 13.76037693]
[119.84828949 26.49004173]
[111.91382599 39.21970367]
[103.97937012 51.94936752]
[96.04490662 64.67903137]
[100.43277740 70.76152039]
[113.59637451 89.00897217]
[128.17897034 85.49497223]
[142.76155090 81.98097992]
[157.34413147 78.46697998]
[171.92672729 74.95298004]
[186.50930786 71.43898773]
[194.54080200 57.82756805]
[209.86529541 53.96291733]
[223.39103699 62.13786316]
[227.09344482 77.50235748]
[218.77595520 90.94091797]
[203.37316895 94.48068237]
[190.02330017 86.02157593]
[175.44071960 89.53556824]
[160.85813904 93.04956818]
[146.27554321 96.56356049]
[131.69296265 100.07756042]
[117.11037445 103.59156036]
[115.59284973 118.51459503]
[129.16957092 124.89211273]
[142.74629211 131.26963806]
[156.32299805 137.64715576]
[169.89971924 144.02467346]
[184.60848999 138.89729309]
[198.28636169 145.55841064]
[203.08387756 159.61257935]
[216.66059875 165.99009705]
[232.94676208 164.06840515]
[242.53587341 177.37182617]
[235.56349182 192.21492004]
[219.20217896 193.32841492]
[210.28308105 179.56680298]
[196.70635986 173.18928528]
[182.82650757 178.46995544]
[168.96693420 172.19564819]
[163.52220154 157.60139465]
[149.94548035 151.22387695]
[136.36875916 144.84634399]
[122.79204559 138.46882629]
[109.21533203 132.09130859]
[94.23458099 131.33157349]
[80.08232117 136.30284119]
[65.93006134 141.27410889]
[51.77779388 146.24536133]
[37.62553406 151.21662903]
[23.47327042 156.18789673]
[9.32100773 161.15916443]
[-4.83125496 166.13041687]
[-10.73892879 183.60479736]
[-26.27495193 192.84487915]
[-27.54021835 207.79142761]
[-28.80548477 222.73796082]
[-30.07075119 237.68450928]
[-21.85308456 254.15203857]
[-32.40715027 268.16104126]
[-33.41979599 283.12683105]
[-34.43244171 298.09259033]
[-27.64444160 312.38363647]
[-36.22330475 324.55953979]
[-37.23595047 339.52529907]
[-38.24859619 354.49108887]
[-39.26124191 369.45687866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[10 180]
[11 179]
[12 178]
[15 176]
[16 175]
[17 174]
[18 173]
[20 84]
[21 83]
[22 82]
[24 81]
[25 80]
[26 79]
[27 78]
[28 77]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 53]
[38 52]
[39 51]
[40 50]
[41 48]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[88 171]
[89 170]
[90 169]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[105 114]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
