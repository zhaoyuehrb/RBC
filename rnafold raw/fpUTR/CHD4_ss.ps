%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCGGUGUUUCAGGCCCUUUAAGAGGCGACGCUGGAGCCGGAGCCAUUUUCCCCCCUUCGGCCGCGGCGAGGAGGAGCCGGAGCGGGAGUGACACCGAGCCGGACCCAGCGCGACCUGCGGCGGCUCCGGGUGACUCGGGCCAGUGUAGAGGUCCUCAGGCCGCCGGCAGGAGCAGCUGGGCCAAUUCCCUGGCCGGGAGCGGAAGGGG\
) } def
/len { sequence length } bind def

/coor [
[-158.25538635 360.57293701]
[-167.49610901 372.38854980]
[-176.73684692 384.20419312]
[-185.97758484 396.01980591]
[-195.21830750 407.83541870]
[-204.28376770 419.78604126]
[-213.17199707 431.86907959]
[-222.06021118 443.95208740]
[-230.94842529 456.03512573]
[-239.83665466 468.11816406]
[-248.72486877 480.20117188]
[-257.61309814 492.28421021]
[-257.93847656 496.61065674]
[-259.46899414 500.24368286]
[-261.83889771 502.88977051]
[-264.62478638 504.40414429]
[-267.39892578 504.79681396]
[-276.98413086 516.33471680]
[-286.56933594 527.87268066]
[-296.06918335 539.48095703]
[-305.48318481 551.15899658]
[-310.71652222 567.28503418]
[-327.66104126 566.72033691]
[-331.80914307 550.28167725]
[-317.16122437 541.74505615]
[-307.74722290 530.06695557]
[-305.99691772 522.88775635]
[-298.10726929 518.28747559]
[-288.52206421 506.74954224]
[-278.93685913 495.21160889]
[-269.69610596 483.39599609]
[-260.80789185 471.31295776]
[-251.91967773 459.22991943]
[-243.03146362 447.14691162]
[-234.14323425 435.06387329]
[-225.25502014 422.98083496]
[-216.36680603 410.89782715]
[-216.18737793 406.12670898]
[-213.00987244 401.41726685]
[-207.03393555 398.59469604]
[-197.79319763 386.77905273]
[-188.55247498 374.96343994]
[-179.31173706 363.14782715]
[-170.07099915 351.33221436]
[-184.61140442 355.01684570]
[-199.26083374 351.79281616]
[-210.91088867 342.34420776]
[-217.08961487 328.67587280]
[-216.48596191 313.68801880]
[-209.22804260 300.56085205]
[-196.85586548 292.07977295]
[-181.99459839 290.04428101]
[-167.79762268 294.88635254]
[-157.27728271 305.57852173]
[-152.66584778 319.85208130]
[-154.94172668 334.67822266]
[-144.06492615 324.34890747]
[-133.18811035 314.01956177]
[-122.31130219 303.69024658]
[-111.43449402 293.36090088]
[-100.55768585 283.03158569]
[-89.68087769 272.70223999]
[-85.78015137 258.32748413]
[-70.44528961 254.43486023]
[-59.56848145 244.10554504]
[-48.76814270 233.69627380]
[-45.07984543 219.26554871]
[-29.80406189 215.14718628]
[-19.08078194 204.65855408]
[-8.35750103 194.16993713]
[2.36577892 183.68130493]
[6.05407572 169.25057983]
[21.32986069 165.13221741]
[32.05313873 154.64358521]
[42.77642059 144.15495300]
[45.35971832 137.23170471]
[53.73605347 133.59216309]
[64.61286163 123.26284027]
[75.48966980 112.93350983]
[72.91797638 94.11817169]
[83.06268311 78.06465149]
[77.45042419 64.15413666]
[71.83815765 50.24361801]
[66.22589874 36.33309937]
[51.95717621 30.08480072]
[46.46370697 15.89760780]
[52.50843430 2.33306527]
[46.89617538 -11.57745361]
[41.28391647 -25.48797226]
[26.19753456 -29.11850357]
[16.15200615 -40.94503784]
[15.01003742 -56.42003632]
[23.21074104 -69.59304047]
[37.60078049 -75.39876556]
[52.64688873 -71.60478973]
[62.56352997 -59.66997528]
[63.53755569 -44.18350220]
[55.19443512 -31.10023308]
[60.80669403 -17.18971443]
[66.41895294 -3.27919531]
[80.18441772 2.29283571]
[86.07421112 16.32013130]
[80.13642120 30.72083855]
[85.74868011 44.63135529]
[91.36093903 58.54187775]
[96.97319794 72.45239258]
[110.55823517 74.37665558]
[121.55529022 82.58157349]
[135.33824158 76.66295624]
[149.12120056 70.74433899]
[162.90415955 64.82572174]
[176.68713379 58.90710449]
[190.47009277 52.98848724]
[204.20903015 46.96838760]
[217.90319824 40.84713364]
[223.22769165 29.10035706]
[234.75839233 24.28347969]
[246.10443115 28.47521210]
[259.88739014 22.55659485]
[273.67034912 16.63797951]
[287.45330811 10.71936226]
[301.23626709 4.80074501]
[314.97521973 -1.21935403]
[328.66937256 -7.34060812]
[342.36355591 -13.46186256]
[356.05770874 -19.58311653]
[369.75189209 -25.70437050]
[383.44604492 -31.82562447]
[397.14022827 -37.94688034]
[384.26974487 -45.65080261]
[382.11822510 -60.49570465]
[392.27200317 -71.53658295]
[407.24475098 -70.63311005]
[415.99725342 -58.45141220]
[412.07635498 -43.97293091]
[426.18432617 -49.06856537]
[440.29226685 -54.16420364]
[443.65417480 -58.15330887]
[447.79565430 -60.24573898]
[451.86410522 -60.46205902]
[455.13854980 -59.15808487]
[469.45806885 -63.62469101]
[483.77761841 -68.09130096]
[498.09716797 -72.55790710]
[512.41674805 -77.02451324]
[517.25781250 -91.76709747]
[529.85943604 -100.82125854]
[545.37609863 -100.70550537]
[557.84124756 -91.46433258]
[562.46185303 -76.65116882]
[557.46112061 -61.96197128]
[544.76196289 -53.04504013]
[529.24749756 -53.32911682]
[516.88330078 -62.70496750]
[502.56378174 -58.23836136]
[488.24423218 -53.77175522]
[473.92468262 -49.30514526]
[459.60513306 -44.83853912]
[445.38790894 -40.05624771]
[431.27993774 -34.96060944]
[417.17199707 -29.86497116]
[403.26147461 -24.25271034]
[389.56732178 -18.13145638]
[375.87313843 -12.01020241]
[362.17898560 -5.88894796]
[348.48480225 0.23230600]
[334.79064941 6.35355997]
[321.09646606 12.47481441]
[316.27349854 18.07335663]
[307.15487671 18.58370399]
[293.37191772 24.50232124]
[279.58895874 30.42093849]
[265.80599976 36.33955383]
[252.02305603 42.25817108]
[242.29235840 56.86308289]
[224.02444458 54.54130173]
[210.33027649 60.66255569]
[205.50729370 66.26110077]
[196.38870239 66.77144623]
[182.60574341 72.69006348]
[168.82278442 78.60868073]
[155.03982544 84.52729797]
[141.25686646 90.44591522]
[127.47390747 96.36453247]
[126.33822632 108.62147522]
[120.00637054 119.17752075]
[109.72752380 125.95009613]
[97.52957153 127.60306549]
[85.81900024 123.81031799]
[74.94219208 134.13964844]
[64.06538391 144.46897888]
[53.26504517 154.87823486]
[42.54176712 165.36686707]
[31.81848526 175.85548401]
[27.36318779 191.03642273]
[12.85440445 194.40458679]
[2.13112426 204.89320374]
[-8.59215546 215.38183594]
[-19.31543541 225.87046814]
[-23.77073288 241.05140686]
[-38.27951813 244.41955566]
[-42.22537613 252.65603638]
[-49.23915100 254.98234558]
[-60.11595535 265.31167603]
[-64.79467010 280.42526245]
[-79.35154724 283.57907104]
[-90.22835541 293.90838623]
[-101.10516357 304.23773193]
[-111.98197174 314.56704712]
[-122.85877991 324.89636230]
[-133.73559570 335.22570801]
[-144.61239624 345.55502319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 44]
[2 43]
[3 42]
[4 41]
[5 40]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[17 30]
[18 29]
[19 28]
[20 26]
[21 25]
[56 212]
[57 211]
[58 210]
[59 209]
[60 208]
[61 207]
[62 206]
[64 204]
[65 203]
[66 201]
[68 199]
[69 198]
[70 197]
[71 196]
[73 194]
[74 193]
[75 192]
[77 191]
[78 190]
[79 189]
[81 106]
[82 105]
[83 104]
[84 103]
[87 100]
[88 99]
[89 98]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 177]
[115 176]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[123 168]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[135 161]
[136 160]
[137 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
