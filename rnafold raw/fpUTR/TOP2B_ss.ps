%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGAGGGCAGCCGGCGGCGCGGCCUCCUCAGCGGGCUCGGCUGGACGUCCGCUCCGGAUCUUCGCGAUGGGGCGCGGGGGUCGGCGCGGCUAGGAGUGCGGCGAGUGGAGCGGUGGGUGCGGAGCGGCGGGGCCCAGCGGCCCGCAGGGAGGCGGGAGCGGCGGCUGCGGCCUCAGGGCCUGUGAGCUGGAGGCACUCGCC\
) } def
/len { sequence length } bind def

/coor [
[318.38317871 734.05932617]
[316.73464966 719.15020752]
[321.95114136 705.08648682]
[332.92346191 694.85864258]
[347.31845093 690.64154053]
[362.07522583 693.33178711]
[374.05593872 702.35742188]
[380.71267700 715.79748535]
[374.83865356 701.99548340]
[368.96463013 688.19342041]
[363.09060669 674.39141846]
[357.21658325 660.58941650]
[351.34255981 646.78735352]
[345.46853638 632.98535156]
[333.36517334 624.30450439]
[335.08035278 608.57653809]
[329.20632935 594.77447510]
[314.67330933 591.62347412]
[304.66403198 580.38610840]
[303.17358398 565.23254395]
[310.98208618 551.95349121]
[298.87869263 543.27258301]
[300.59387207 527.54461670]
[294.71984863 513.74261475]
[288.84582520 499.94058228]
[282.97180176 486.13854980]
[277.09780884 472.33654785]
[271.22378540 458.53451538]
[265.34976196 444.73248291]
[254.24746704 439.91970825]
[249.24263000 428.46377563]
[253.51974487 416.29098511]
[247.86001587 402.39971924]
[242.20028687 388.50842285]
[236.54054260 374.61715698]
[230.88081360 360.72589111]
[225.22108459 346.83462524]
[219.56135559 332.94332886]
[215.57969666 330.29550171]
[213.22265625 325.11541748]
[213.94877625 318.53353882]
[208.72164917 304.47378540]
[203.49452209 290.41400146]
[198.26739502 276.35424805]
[193.04025269 262.29446411]
[177.28002930 251.09808350]
[180.93130493 231.27732849]
[167.14688110 225.75233459]
[161.20922852 211.74523926]
[167.09780884 197.32434082]
[161.43807983 183.43305969]
[155.77835083 169.54179382]
[150.11862183 155.65051270]
[144.45889282 141.75924683]
[138.79916382 127.86797333]
[133.13943481 113.97669983]
[98.45079803 141.25936890]
[55.81538391 114.84156799]
[43.53180313 106.23263550]
[31.24822426 97.62371063]
[18.96464348 89.01477814]
[6.68106174 80.40585327]
[-5.60251904 71.79692841]
[-17.88610077 63.18799973]
[-30.16968155 54.57907104]
[-42.45326233 45.97014236]
[-54.73684311 37.36121368]
[-70.25683594 40.34540939]
[-83.29422760 31.41221619]
[-86.11416626 15.86154270]
[-77.04364014 2.91932511]
[-61.46401596 0.26395270]
[-48.61842346 9.47081089]
[-46.12791443 25.07763290]
[-33.84433365 33.68656158]
[-21.56075287 42.29549026]
[-9.27717209 50.90441895]
[3.00640869 59.51334381]
[15.28998947 68.12227631]
[27.57357025 76.73120117]
[39.85715103 85.34012604]
[52.14073181 93.94905853]
[64.42431641 102.55798340]
[70.69637299 98.44564819]
[83.24048615 90.22098541]
[89.51254272 86.10865021]
[86.51507568 71.41119385]
[83.51760864 56.71373749]
[73.17865753 44.73806763]
[78.21659088 30.72134399]
[75.21912384 16.02388954]
[61.38768387 8.72832489]
[55.52958298 -5.77052641]
[60.41083908 -20.62674904]
[73.72666931 -28.82568932]
[89.18975067 -26.49605751]
[99.49888611 -14.73783684]
[99.78641510 0.89710325]
[89.91658020 13.02642059]
[92.91404724 27.72387505]
[103.03859711 38.64828873]
[98.21505737 53.71627045]
[101.21253204 68.41372681]
[104.20999908 83.11117554]
[111.65259552 84.03736115]
[113.50495148 69.15216827]
[115.35753632 54.26701355]
[130.24267578 56.11983109]
[128.39013672 71.00453186]
[126.53778076 85.88971710]
[133.98037720 86.81589508]
[140.48863220 73.30136108]
[146.99688721 59.78683090]
[143.07670593 44.23010254]
[152.90950012 31.55352402]
[168.95239258 31.48147964]
[178.89865112 44.06923676]
[175.11834717 59.66054535]
[160.51141357 66.29508972]
[154.00315857 79.80961609]
[147.49490356 93.32415009]
[147.03070068 108.31697083]
[152.69042969 122.20823669]
[158.35015869 136.09951782]
[164.00988770 149.99078369]
[169.66963196 163.88206482]
[175.32936096 177.77333069]
[180.98908997 191.66459656]
[195.27906799 197.86413574]
[200.82095337 212.03248596]
[194.82257080 225.61759949]
[205.08183289 229.25515747]
[211.51031494 237.76547241]
[212.17601013 248.18998718]
[207.10003662 257.06735229]
[212.32716370 271.12710571]
[217.55429077 285.18688965]
[222.78141785 299.24664307]
[228.00854492 313.30642700]
[233.45263672 327.28359985]
[239.11236572 341.17489624]
[244.77209473 355.06616211]
[250.43182373 368.95742798]
[256.09155273 382.84869385]
[261.75128174 396.73995972]
[267.41101074 410.63125610]
[282.21209717 421.58114624]
[279.15176392 438.85845947]
[285.02578735 452.66049194]
[290.89981079 466.46252441]
[296.77383423 480.26452637]
[302.64785767 494.06655884]
[308.52188110 507.86859131]
[314.39590454 521.67059326]
[326.91943359 531.33868408]
[324.78408813 546.07946777]
[339.76730347 549.65856934]
[349.65444946 561.23858643]
[350.81329346 576.24261475]
[343.00836182 588.90045166]
[348.88238525 602.70251465]
[361.40591431 612.37060547]
[359.27056885 627.11132812]
[365.14459229 640.91333008]
[371.01861572 654.71539307]
[376.89263916 668.51739502]
[382.76666260 682.31939697]
[388.64068604 696.12145996]
[394.51470947 709.92346191]
[403.31271362 722.07238770]
[414.59347534 731.95892334]
[425.87426758 741.84545898]
[437.15505981 751.73199463]
[453.33676147 754.39367676]
[458.86856079 769.83166504]
[448.05984497 782.16467285]
[432.02966309 778.70556641]
[427.26849365 763.01281738]
[415.98773193 753.12622070]
[404.70693970 743.23968506]
[393.42614746 733.35314941]
[387.21847534 737.56207275]
[368.59548950 750.18878174]
[373.60440063 764.32775879]
[378.61334229 778.46673584]
[383.62225342 792.60571289]
[388.63119507 806.74468994]
[394.45025635 813.79418945]
[393.60638428 821.14135742]
[398.39590454 835.35620117]
[411.05197144 845.78479004]
[408.08206177 861.91278076]
[392.54135132 867.14904785]
[380.41680908 856.10699463]
[384.18109131 840.14569092]
[379.39157104 825.93090820]
[374.49221802 811.75360107]
[369.48327637 797.61462402]
[364.47436523 783.47564697]
[359.46542358 769.33666992]
[354.45651245 755.19769287]
[339.48791504 754.22729492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[16 161]
[17 160]
[21 156]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[47 131]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[58 83]
[59 82]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[86 104]
[87 103]
[88 102]
[90 100]
[91 99]
[111 121]
[112 120]
[113 119]
[170 181]
[171 180]
[172 179]
[173 178]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
