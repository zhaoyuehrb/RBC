%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCACGAGCUAGCGUGUCUACUUCACAGGCCAGGUCGUCAACUCAACUGUCAAGGUGUCCAUUGUACCAGCUGGGCCAUGGAUCCCUCCCGCCUGAAAUCUGACUCCACCUGCCAAGAGUCUGAGCCUGCAGGCCUAGAUUUCGACUCUGCUGGCCAAGAUUAUUUCUCUGCAGCCCAAUAAUUCGACUCUUUCUACCAAGAAUUGGACCUGGACUCUCUUAACGAAGAUCUUCUUUCCCAGUCC\
) } def
/len { sequence length } bind def

/coor [
[116.78398895 391.21350098]
[117.06620789 380.93243408]
[119.14865112 370.85540771]
[122.96846008 361.29537964]
[128.40878296 352.54943848]
[135.30235291 344.88980103]
[143.43669128 338.55523682]
[152.56056213 333.74356079]
[148.61714172 319.27120972]
[144.67370605 304.79885864]
[140.63868713 290.35174561]
[136.51225281 275.93048096]
[132.38580322 261.50924683]
[128.25936890 247.08799744]
[125.39505768 245.07112122]
[123.35526276 241.57792664]
[122.81829834 237.00631714]
[124.26130676 232.04003906]
[120.68576813 217.47242737]
[117.11022949 202.90480042]
[113.53468323 188.33718872]
[109.95914459 173.76956177]
[99.41107941 163.25350952]
[103.63581085 148.00679016]
[100.06027222 133.43917847]
[96.48473358 118.87155151]
[91.52021027 115.17439270]
[88.45791626 110.44990540]
[87.38535309 105.48793030]
[88.09949493 101.01301575]
[73.67824554 96.88657379]
[59.25699615 92.76013184]
[50.17051315 93.40879822]
[44.67982101 88.48900604]
[30.31199837 84.18021393]
[15.94417572 79.87142181]
[1.57635319 75.56263733]
[-17.83330917 81.06376648]
[-30.43608475 66.38059235]
[-44.90845108 62.43716049]
[-59.38081360 58.49372864]
[-73.85317993 54.55029678]
[-89.95357513 64.57047272]
[-107.94963837 59.69916534]
[-116.49848938 43.49202728]
[-131.06610107 39.91648865]
[-145.63372803 36.34094620]
[-154.56867981 42.49000931]
[-165.19343567 42.71574020]
[-174.00985718 37.18449783]
[-178.24703979 27.91874504]
[-192.71940613 23.97531509]
[-207.75784302 32.93466949]
[-224.29414368 28.32474709]
[-232.21020508 13.47409821]
[-246.73136902 9.71431065]
[-261.25253296 5.95452261]
[-276.55151367 9.98577785]
[-286.93313599 -0.69464839]
[-301.45428467 -4.45443630]
[-315.97546387 -8.21422482]
[-330.49661255 -11.97401237]
[-345.01776123 -15.73379993]
[-359.53890991 -19.49358749]
[-374.83792114 -15.46233273]
[-385.21954346 -26.14275932]
[-399.74069214 -29.90254784]
[-408.80783081 -29.02390289]
[-414.42138672 -33.80302429]
[-428.89373779 -37.74645615]
[-444.60540771 -33.04801178]
[-456.34286499 -44.50071716]
[-452.03161621 -60.32301331]
[-436.10668945 -64.23828125]
[-424.95031738 -52.21882248]
[-410.47796631 -48.27539062]
[-395.98089600 -44.42370605]
[-381.45974731 -40.66391754]
[-367.19940186 -44.96409607]
[-355.77914429 -34.01474380]
[-341.25796509 -30.25495720]
[-326.73681641 -26.49516869]
[-312.21566772 -22.73538208]
[-297.69451904 -18.97559357]
[-283.17333984 -15.21580505]
[-268.91299438 -19.51598549]
[-257.49273682 -8.56663418]
[-242.97157288 -4.80684614]
[-228.45042419 -1.04705811]
[-218.38316345 -9.06683636]
[-205.34065247 -9.84302139]
[-194.06243896 -2.86945653]
[-188.77598572 9.50294876]
[-174.30361938 13.44638062]
[-155.99418640 7.18616486]
[-142.05818176 21.77332878]
[-127.49056244 25.34886932]
[-112.92294312 28.92440987]
[-104.70147705 21.05496407]
[-93.58979034 18.09011269]
[-82.30832672 20.87508583]
[-73.67684174 28.83257103]
[-69.90975189 40.07793427]
[-55.43738174 44.02136230]
[-40.96501923 47.96479416]
[-26.49265289 51.90822601]
[-18.14067841 46.07277298]
[-7.73695707 45.77863693]
[1.30463648 51.36305237]
[5.88514328 61.19481277]
[20.25296593 65.50360107]
[34.62078857 69.81239319]
[48.98861313 74.12118530]
[63.38343811 78.33888245]
[77.80468750 82.46532440]
[92.22593689 86.59176636]
[106.77061462 82.92402649]
[117.51072693 72.45263672]
[128.25083923 61.98124313]
[138.99093628 51.50984955]
[149.73104858 41.03845596]
[160.47116089 30.56706238]
[171.21127319 20.09566879]
[181.47669983 9.15853882]
[191.24729919 -2.22283292]
[194.36560059 -17.73369026]
[208.52653503 -22.35074615]
[218.29711914 -33.73211670]
[221.50138855 -42.25958252]
[228.26428223 -45.19476318]
[238.17826843 -56.45145416]
[248.09223938 -67.70814514]
[258.00622559 -78.96483612]
[266.96075439 -90.99878693]
[274.89523315 -103.72844696]
[282.82968140 -116.45811462]
[290.76416016 -129.18777466]
[298.53671265 -142.01693726]
[306.14614868 -154.94351196]
[313.75558472 -167.87008667]
[321.36502075 -180.79667664]
[315.97076416 -195.47441101]
[321.32177734 -210.16795349]
[334.89151001 -217.93948364]
[350.27270508 -215.11952209]
[360.20288086 -203.03953552]
[359.99328613 -187.40336609]
[349.74288940 -175.59390259]
[334.29162598 -173.18722534]
[326.68218994 -160.26065063]
[319.07272339 -147.33407593]
[311.46328735 -134.40748596]
[311.76449585 -129.66316223]
[309.10510254 -124.67524719]
[303.49380493 -121.25331879]
[295.55935669 -108.52365112]
[287.62487793 -95.79399109]
[279.69042969 -83.06432343]
[290.16229248 -72.32374573]
[300.63320923 -61.58411026]
[313.55978394 -69.19355011]
[326.48638916 -76.80298615]
[331.88339233 -91.91098785]
[347.10638428 -96.97459412]
[360.47756958 -88.10944366]
[361.73971558 -72.11611176]
[349.92462158 -61.26332474]
[334.09582520 -63.87640381]
[321.16921997 -56.26696777]
[308.24264526 -48.65752792]
[281.88165283 -52.54742813]
[269.26290894 -69.05086517]
[259.34893799 -57.79417038]
[249.43495178 -46.53747940]
[239.52098083 -35.28078842]
[229.67849731 -23.96153069]
[219.90791321 -12.58015919]
[217.48844910 2.11662602]
[202.62866211 7.54775429]
[192.85807800 18.92912674]
[207.79188538 17.52157021]
[220.19711304 25.95426941]
[224.38253784 40.35851288]
[218.42799377 54.12599182]
[205.06527710 60.94052124]
[190.42488098 57.67576981]
[181.22343445 45.82952499]
[181.68266296 30.83577728]
[170.94255066 41.30717087]
[160.20243835 51.77856445]
[149.46234131 62.24995804]
[138.72222900 72.72135162]
[127.98211670 83.19274139]
[117.24201202 93.66413879]
[130.12931824 85.98836517]
[145.10278320 86.88007355]
[156.98800659 96.03111267]
[161.67778015 110.27913666]
[157.55143738 124.70041656]
[146.03492737 134.31135559]
[131.10806274 135.79067993]
[117.92912292 128.62718201]
[111.05234528 115.29601288]
[114.62789154 129.86363220]
[118.20343018 144.43124390]
[129.00723267 155.98928833]
[124.52676392 170.19403076]
[128.10231018 184.76164246]
[131.67784119 199.32926941]
[135.25338745 213.89688110]
[138.82893372 228.46450806]
[142.68061829 242.96154785]
[146.80705261 257.38281250]
[150.93350220 271.80404663]
[155.05993652 286.22531128]
[160.41685486 293.59338379]
[159.14607239 300.85540771]
[163.08950806 315.32778931]
[167.03292847 329.80014038]
[187.18965149 330.57461548]
[205.86824036 338.13552856]
[220.85720825 351.57241821]
[230.38713074 369.28021240]
[233.33940125 389.15063477]
[229.37759399 408.82348633]
[218.98570251 425.96676636]
[203.40904236 438.55328369]
[208.97328186 452.48309326]
[214.53753662 466.41287231]
[220.10177612 480.34268188]
[225.66601562 494.27246094]
[237.15649414 506.73864746]
[228.35838318 521.23101807]
[211.99679565 516.78863525]
[211.73622131 499.83670044]
[206.17198181 485.90692139]
[200.60774231 471.97711182]
[195.04348755 458.04733276]
[189.47924805 444.11752319]
[179.38354492 445.80044556]
[169.14419556 445.68609619]
[159.07878113 443.77633667]
[149.49981689 440.12866211]
[140.70503235 434.85452271]
[132.96810913 428.11605835]
[126.53016663 420.12091064]
[121.59223175 411.11596680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 219]
[9 218]
[10 217]
[11 215]
[12 214]
[13 213]
[14 212]
[18 211]
[19 210]
[20 209]
[21 208]
[22 207]
[24 205]
[25 204]
[26 203]
[30 116]
[31 115]
[32 114]
[34 113]
[35 112]
[36 111]
[37 110]
[39 106]
[40 105]
[41 104]
[42 103]
[45 98]
[46 97]
[47 96]
[51 94]
[52 93]
[55 89]
[56 88]
[57 87]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[66 78]
[67 77]
[69 76]
[70 75]
[117 194]
[118 193]
[119 192]
[120 191]
[121 190]
[122 189]
[123 188]
[124 180]
[125 179]
[127 177]
[128 176]
[130 175]
[131 174]
[132 173]
[133 172]
[134 158]
[135 157]
[136 156]
[137 155]
[138 152]
[139 151]
[140 150]
[141 149]
[160 170]
[161 169]
[162 168]
[227 239]
[228 238]
[229 237]
[230 236]
[231 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
