%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACAGGGCGGCUUCUGGUUUGGCGGGUCCUUUGUCUCUCGGUGCAGCCGGAGCUCCAGGUCUCCUCUUCACUACUCUGUGUCCUGUGCUCCUACAGGCCCAGCCUCUGUGGCCCUGUGACCUGCAGGUAUUGGGAGAUCCACAGCUAAGACACCAGGACCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[65.75403595 508.77023315]
[50.67467117 510.49572754]
[35.99125671 506.65362549]
[23.68959808 497.76351929]
[15.43339443 485.02777100]
[12.33922863 470.16876221]
[14.82556152 455.19601440]
[22.55613708 442.13452148]
[34.48545837 432.75073242]
[49.00018692 428.31369019]
[50.06423569 413.35150146]
[51.12828827 398.38928223]
[52.19234085 383.42706299]
[53.25639343 368.46484375]
[54.32044601 353.50262451]
[55.38449860 338.54043579]
[56.44855118 323.57821655]
[57.51260376 308.61599731]
[45.37720490 317.43258667]
[30.53708267 315.24835205]
[21.45658684 303.30917358]
[23.31495094 288.42471313]
[35.05222321 279.08468628]
[49.97382355 280.61630249]
[59.56933594 292.14727783]
[62.21774292 277.38293457]
[64.86615753 262.61859131]
[67.51456451 247.85423279]
[70.16297150 233.08988953]
[72.81138611 218.32553101]
[75.45979309 203.56118774]
[68.61721039 187.41561890]
[80.57272339 173.42936707]
[82.95867920 158.62034607]
[85.34462738 143.81132507]
[87.73058319 129.00228882]
[90.11653900 114.19326782]
[80.86096954 107.15460205]
[77.14586639 94.23616791]
[62.15118027 93.83686066]
[47.15649414 93.43755341]
[32.16181183 93.03824615]
[17.16712761 92.63893890]
[1.17265105 98.26148987]
[-8.65787983 84.44856262]
[1.89387226 71.17841339]
[17.56643486 77.64425659]
[32.56111908 78.04356384]
[47.55580139 78.44287109]
[62.55048752 78.84217834]
[77.54517365 79.24148560]
[90.11797333 71.06073761]
[95.82746887 57.18984604]
[101.53695679 43.31895065]
[107.24644470 29.44805527]
[99.28060150 16.26278305]
[100.59076691 1.09252071]
[110.46571350 -10.26307106]
[124.96025085 -13.58666039]
[130.66973877 -27.45755386]
[136.37924194 -41.32844925]
[142.08872986 -55.19934464]
[147.79821777 -69.07023621]
[153.50770569 -82.94113159]
[159.21719360 -96.81202698]
[164.92669678 -110.68292236]
[154.74603271 -122.39575195]
[150.85169983 -137.31976318]
[153.97245789 -152.32733154]
[163.37603760 -164.31193542]
[156.69697571 -177.74287415]
[150.01791382 -191.17381287]
[134.95764160 -195.96588135]
[127.77122498 -210.04177856]
[132.72224426 -225.05053711]
[146.87333679 -232.08773804]
[161.82891846 -226.97831726]
[168.71611023 -212.75360107]
[163.44885254 -197.85289001]
[170.12791443 -184.42195129]
[176.80697632 -170.99101257]
[186.89433289 -171.81611633]
[196.76341248 -169.57179260]
[205.27595520 -181.92236328]
[213.78849792 -194.27293396]
[222.30104065 -206.62350464]
[230.81358337 -218.97407532]
[239.32612610 -231.32464600]
[233.78358459 -243.96420288]
[235.20704651 -257.58303833]
[243.11729431 -268.62713623]
[255.35643005 -274.26763916]
[268.67553711 -273.12530518]
[277.40591431 -285.32284546]
[286.13632202 -297.52038574]
[294.86672974 -309.71795654]
[303.59713745 -321.91549683]
[312.32754517 -334.11303711]
[320.94934082 -346.38757324]
[329.46188354 -358.73815918]
[337.86450195 -371.16378784]
[346.15649414 -383.66348267]
[354.44848633 -396.16320801]
[358.16586304 -412.70458984]
[375.08987427 -413.71160889]
[380.74258423 -397.72775269]
[366.94821167 -387.87118530]
[358.65618896 -375.37149048]
[350.36419678 -362.87176514]
[349.28341675 -355.53674316]
[341.81246948 -350.22561646]
[333.29992676 -337.87503052]
[332.08911133 -330.56033325]
[324.52508545 -325.38262939]
[315.79467773 -313.18508911]
[307.06427002 -300.98754883]
[298.33386230 -288.79000854]
[289.60348511 -276.59246826]
[280.87307739 -264.39489746]
[286.55413818 -249.00875854]
[281.90914917 -233.10577393]
[268.57516479 -222.99569702]
[251.67669678 -222.81210327]
[243.16415405 -210.46153259]
[234.65161133 -198.11096191]
[226.13906860 -185.76039124]
[217.62652588 -173.40982056]
[209.11398315 -161.05924988]
[216.99662781 -146.69764709]
[217.09500122 -130.23338318]
[209.30746460 -115.63404846]
[195.44209290 -106.45497894]
[178.79759216 -104.97342682]
[173.08808899 -91.10253906]
[167.37860107 -77.23164368]
[161.66911316 -63.36074829]
[155.95962524 -49.48985291]
[150.25013733 -35.61895752]
[144.54063416 -21.74806404]
[138.83114624 -7.87716913]
[146.78604126 4.68697786]
[145.80567932 19.70373154]
[136.05691528 31.40052986]
[121.11734009 35.15754700]
[115.40785217 49.02844238]
[109.69835663 62.89933395]
[103.98886871 76.77023315]
[120.39659882 98.78771210]
[104.92556000 116.57922363]
[102.53961182 131.38824463]
[100.15365601 146.19728088]
[97.76770020 161.00630188]
[95.38175201 175.81532288]
[102.29624176 186.72769165]
[99.98362732 199.02955627]
[90.22413635 206.20959473]
[87.57572937 220.97395325]
[84.92732239 235.73829651]
[82.27890778 250.50263977]
[79.63050079 265.26699829]
[76.98209381 280.03134155]
[74.33367920 294.79568481]
[72.47481537 309.68005371]
[71.41076660 324.64227295]
[70.34671021 339.60449219]
[69.28266144 354.56668091]
[68.21860504 369.52890015]
[67.15455627 384.49111938]
[66.09049988 399.45333862]
[65.02645111 414.41552734]
[63.96239853 429.37774658]
[77.70313263 435.82418823]
[88.18444061 446.80175781]
[93.98880005 460.82577515]
[94.33123016 475.99969482]
[89.16540527 490.27130127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 156]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[52 147]
[53 146]
[54 145]
[55 144]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[70 81]
[71 80]
[72 79]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 112]
[100 111]
[101 109]
[102 108]
[103 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
