%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGCCUUUUCCGCUAGUCGCCCCGCUCUAUCCCAUAGUCUCGCUGCCCUGAGCCUCCCGUGCCGGCCGGCCGGCCGGGGGAACAGGCGGGCGCUCGGGGGGCGCUCGGGGGGCGGGGGGAGUUCCGGUUCCGGUUCUUUGUGCGGCUGCAUCGGCGGCUCCGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[282.59994507 458.32891846]
[276.71578979 453.94476318]
[272.69754028 447.72341919]
[271.09191895 440.42343140]
[272.14801025 432.95492554]
[275.77984619 426.26623535]
[268.39950562 413.20751953]
[261.01913452 400.14877319]
[246.12399292 400.14852905]
[233.14251709 392.64270020]
[225.61120605 379.56042480]
[225.63948059 364.36517334]
[233.31987000 351.13796997]
[225.93951416 338.07925415]
[218.55915833 325.02053833]
[204.18405151 321.29339600]
[196.51329041 308.15512085]
[200.52012634 293.10244751]
[187.52204895 285.82925415]
[187.46798706 270.00811768]
[180.08763123 256.94940186]
[167.08956909 249.67620850]
[167.03550720 233.85510254]
[159.65515137 220.79637146]
[152.27479553 207.73764038]
[144.89443970 194.67890930]
[137.51408386 181.62019348]
[130.13372803 168.56146240]
[122.75336456 155.50273132]
[115.37300873 142.44401550]
[107.99265289 129.38528442]
[101.14076996 130.43150330]
[94.22978973 129.90119934]
[87.61773682 127.82187653]
[81.64714813 124.30123901]
[76.62732697 119.52166748]
[72.81833649 113.73078156]
[70.41748810 107.22856903]
[55.41811752 107.09077454]
[40.41875076 106.95298767]
[25.41938400 106.81520081]
[9.52537918 112.71578979]
[-0.54451066 99.07637787]
[9.77424812 85.62425995]
[25.55717087 91.81583405]
[40.55653763 91.95362091]
[55.55590439 92.09140778]
[70.55527496 92.22919464]
[72.49832153 80.87162781]
[78.96246338 70.11545563]
[70.64324188 57.63385391]
[62.32401276 45.15224838]
[54.00478363 32.67064285]
[38.76475143 29.44897652]
[30.50567818 16.67234421]
[33.67096329 2.16315508]
[25.35173798 -10.31844997]
[17.95919228 -15.74997044]
[16.99678993 -23.10664940]
[8.90826416 -35.73897934]
[0.81973916 -48.37130737]
[-7.26878643 -61.00363922]
[-14.56030178 -66.57005310]
[-15.38739300 -73.94316864]
[-23.24248695 -86.72195435]
[-31.09757996 -99.50074768]
[-38.95267487 -112.27954102]
[-46.80776978 -125.05833435]
[-61.48006439 -132.38334656]
[-62.20234680 -148.76657104]
[-48.23159409 -157.35437012]
[-33.93972015 -149.31233215]
[-34.02897644 -132.91342163]
[-26.17388344 -120.13463593]
[-18.31879044 -107.35584259]
[-10.46369648 -94.57704926]
[-2.60860229 -81.79826355]
[5.36354351 -69.09216309]
[13.45206928 -56.45983505]
[21.54059410 -43.82750320]
[29.62911987 -31.19517326]
[37.83334351 -18.63767624]
[46.15256882 -6.15607214]
[60.76253891 -3.49443054]
[69.37722778 9.04518127]
[66.48638916 24.35141563]
[74.80561829 36.83302307]
[83.12484741 49.31462479]
[91.44406891 61.79623032]
[106.43837738 61.38291550]
[114.05738831 48.46197510]
[121.67639923 35.54103851]
[129.29541016 22.62009811]
[136.91441345 9.69915867]
[144.53343201 -3.22178102]
[152.15243530 -16.14272118]
[159.77145386 -29.06365967]
[167.39045715 -41.98460007]
[170.22740173 -58.69950485]
[187.07443237 -60.60057831]
[193.56492615 -44.93820953]
[180.31140137 -34.36558914]
[172.69239807 -21.44464874]
[165.07337952 -8.52370930]
[157.45437622 4.39722967]
[149.83535767 17.31816864]
[142.21635437 30.23910904]
[134.59733582 43.16004944]
[126.97832489 56.08098602]
[119.35931396 69.00193024]
[133.32398987 96.57241058]
[121.05137634 122.00492859]
[128.43173218 135.06365967]
[135.81208801 148.12237549]
[143.19244385 161.18110657]
[150.57279968 174.23983765]
[157.95315552 187.29855347]
[165.33351135 200.35728455]
[172.71386719 213.41601562]
[180.09422302 226.47473145]
[193.62019348 234.68197632]
[193.14636230 249.56904602]
[200.52671814 262.62777710]
[214.05268860 270.83502197]
[213.57885742 285.72207642]
[228.54121399 290.05401611]
[235.83992004 303.40255737]
[231.61788940 317.64016724]
[238.99824524 330.69888306]
[246.37860107 343.75762939]
[261.67199707 344.00079346]
[274.70428467 351.81466675]
[282.02691650 365.01486206]
[281.76095581 380.00772095]
[274.07788086 392.76843262]
[281.45822144 405.82714844]
[288.83859253 418.88586426]
[309.77731323 428.84512329]
[309.08801270 451.28442383]
[317.63513184 463.61108398]
[326.18225098 475.93777466]
[334.72937012 488.26443481]
[348.95114136 495.19631958]
[349.84490967 510.06408691]
[358.39202881 522.39074707]
[372.61383057 529.32269287]
[373.50759888 544.19042969]
[382.05471802 556.51708984]
[390.60183716 568.84375000]
[399.14895630 581.17041016]
[407.69607544 593.49707031]
[416.24319458 605.82379150]
[431.29672241 612.32940674]
[432.92041016 628.64794922]
[419.44396973 637.99230957]
[404.73077393 630.74981689]
[403.91653442 614.37091064]
[395.36941528 602.04425049]
[386.82226562 589.71752930]
[378.27514648 577.39086914]
[369.72802734 565.06420898]
[361.18090820 552.73754883]
[347.57046509 546.68731689]
[346.06536865 530.93786621]
[337.51824951 518.61120605]
[323.90780640 512.56103516]
[322.40267944 496.81155396]
[313.85556030 484.48489380]
[305.30844116 472.15823364]
[296.76132202 459.83154297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 137]
[7 136]
[8 135]
[13 130]
[14 129]
[15 128]
[18 125]
[20 123]
[21 122]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
[31 112]
[38 48]
[39 47]
[40 46]
[41 45]
[50 89]
[51 88]
[52 87]
[53 86]
[56 83]
[57 82]
[59 81]
[60 80]
[61 79]
[62 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[139 170]
[140 169]
[141 168]
[142 167]
[144 165]
[145 164]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
