%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAAUCCCGGCAUGCCCCCGAGCGGCCUGAGGUGGAGGGUUCUAGAAGGCGUGACGUGGGGUCGAGAGCGGGAUCCGAGGCUGGCGGGUUUUGGCAGUAGCUGUGGCUGCGGCUGCCGGGCCUGGGGACGCGGGCGGCCGAGGCCGCCGUCGCAGCCUCCUCGUCUCGCCGGCU\
) } def
/len { sequence length } bind def

/coor [
[121.45937347 124.72245026]
[110.51618195 131.00184631]
[98.01098633 132.67642212]
[85.80122375 129.49743652]
[75.70046234 121.93710327]
[69.20899200 111.11837006]
[54.30870819 112.84506989]
[39.40842438 114.57177734]
[24.50813675 116.29847717]
[9.60785198 118.02517700]
[-5.29243326 119.75187683]
[-19.79524612 131.07522583]
[-35.62139511 123.52318573]
[-48.27253723 133.02366638]
[-61.91414642 127.04405212]
[-76.78144073 129.03494263]
[-91.63047791 131.15768433]
[-106.46009064 133.41212463]
[-121.28971100 135.66654968]
[-136.11932373 137.92098999]
[-150.92834473 140.30694580]
[-165.71562195 142.82421875]
[-179.59523010 154.90339661]
[-195.80087280 148.20436096]
[-210.54113770 150.98368835]
[-225.28140259 153.76301575]
[-233.16378784 158.44183350]
[-240.30780029 156.45843506]
[-255.09506226 158.97572327]
[-269.88232422 161.49299622]
[-274.75823975 172.37641907]
[-284.19482422 179.47042847]
[-295.76666260 181.09696960]
[-306.56893921 176.96501160]
[-313.94644165 168.21452332]
[-328.81375122 170.20541382]
[-343.68103027 172.19628906]
[-358.54830933 174.18717957]
[-371.19903564 184.62226868]
[-386.46469116 178.63128662]
[-388.64126587 162.37721252]
[-375.48971558 152.58087158]
[-360.53921509 159.31988525]
[-345.67190552 157.32899475]
[-330.80462646 155.33811951]
[-315.93731689 153.34722900]
[-305.75152588 138.16377258]
[-287.39276123 135.16462708]
[-272.39962769 146.70573425]
[-257.61233521 144.18844604]
[-242.82507324 141.67117310]
[-228.06072998 139.02276611]
[-213.32046509 136.24342346]
[-198.58021545 133.46409607]
[-191.48706055 123.64128113]
[-179.20620728 121.21958160]
[-168.23289490 128.03695679]
[-153.44563293 125.51967621]
[-147.36027527 121.28421021]
[-138.37376404 123.09137726]
[-123.54414368 120.83693695]
[-108.71453094 118.58250427]
[-93.88491058 116.32806396]
[-87.72534943 112.20127106]
[-78.77232361 114.16764832]
[-63.90502930 112.17676544]
[-52.31729507 102.81867981]
[-37.61227798 108.65589142]
[-30.00639153 99.22451019]
[-17.61405373 97.45986176]
[-7.01913500 104.85159302]
[7.88115025 103.12489319]
[22.78143501 101.39819336]
[37.68172073 99.67148590]
[52.58200455 97.94478607]
[67.48229218 96.21808624]
[73.83092499 80.33063507]
[87.32715607 69.81551361]
[104.28473663 67.54471588]
[120.07202148 74.13848114]
[130.37701416 87.79583740]
[145.20661926 85.54139709]
[160.03623962 83.28696442]
[174.86585999 81.03252411]
[189.69548035 78.77809143]
[204.52508545 76.52365112]
[219.35470581 74.26921844]
[234.18432617 72.01477814]
[249.01393127 69.76034546]
[263.84356689 67.50590515]
[269.50900269 53.29852295]
[281.44635010 43.89655304]
[296.38766479 41.74634552]
[310.30603027 47.32625580]
[319.50070190 59.04476547]
[334.33032227 56.79032898]
[342.37377930 52.39421844]
[349.44290161 54.62990952]
[364.31018066 52.63902664]
[369.81250000 48.88310623]
[375.52487183 48.54465103]
[379.73937988 50.85103226]
[394.66796875 49.38905334]
[409.59655762 47.92707825]
[424.52514648 46.46509933]
[439.45373535 45.00312424]
[454.38229370 43.54114532]
[469.31088257 42.07917023]
[484.23947144 40.61719131]
[497.21981812 31.57169533]
[510.64062500 38.03169250]
[525.56921387 36.56971359]
[540.49780273 35.10773849]
[555.42639160 33.64575958]
[570.35498047 32.18378448]
[585.28356934 30.72180557]
[594.07653809 21.25751686]
[606.56188965 20.36276817]
[615.98956299 27.97328186]
[630.94171143 26.77649117]
[645.89392090 25.57969856]
[660.82250977 24.11772156]
[675.72277832 22.39101982]
[690.62304688 20.66431808]
[705.52331543 18.93761635]
[720.42364502 17.21091461]
[730.04052734 4.66936731]
[745.71966553 2.68420076]
[758.15881348 12.43317890]
[759.97814941 28.13240623]
[750.09814453 40.46781158]
[734.38061523 42.12101364]
[722.15032959 32.11119843]
[707.25006104 33.83790207]
[692.34973145 35.56460190]
[677.44946289 37.29130554]
[662.54919434 39.01800919]
[658.91741943 42.16314316]
[653.26257324 43.03984070]
[647.09069824 40.53187943]
[632.13848877 41.72867203]
[617.18634033 42.92546082]
[603.31414795 53.65222549]
[586.74554443 45.65039062]
[571.81695557 47.11236572]
[556.88836670 48.57434464]
[541.95977783 50.03632355]
[527.03118896 51.49829865]
[512.10260010 52.96027756]
[500.19003296 61.90120316]
[485.70144653 55.54577637]
[470.77285767 57.00775528]
[455.84426880 58.46973038]
[440.91571045 59.93170929]
[425.98712158 61.39368439]
[411.05853271 62.85566330]
[396.12994385 64.31764221]
[381.20135498 65.77961731]
[366.30108643 67.50631714]
[351.43377686 69.49720001]
[336.58474731 71.61994171]
[321.75512695 73.87438202]
[316.45831299 87.79592133]
[304.82699585 97.25996399]
[289.92169189 99.64711761]
[275.72961426 94.21740723]
[266.09799194 82.33552551]
[251.26837158 84.58995819]
[236.43876648 86.84439850]
[221.60914612 89.09883118]
[206.77952576 91.35327148]
[191.94990540 93.60770416]
[177.12030029 95.86214447]
[162.29067993 98.11657715]
[147.46105957 100.37101746]
[132.63143921 102.62545013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 76]
[7 75]
[8 74]
[9 73]
[10 72]
[11 71]
[13 68]
[15 66]
[16 65]
[17 63]
[18 62]
[19 61]
[20 60]
[21 58]
[22 57]
[24 54]
[25 53]
[26 52]
[28 51]
[29 50]
[30 49]
[35 46]
[36 45]
[37 44]
[38 43]
[81 176]
[82 175]
[83 174]
[84 173]
[85 172]
[86 171]
[87 170]
[88 169]
[89 168]
[90 167]
[95 162]
[96 161]
[98 160]
[99 159]
[102 158]
[103 157]
[104 156]
[105 155]
[106 154]
[107 153]
[108 152]
[109 151]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[119 142]
[120 141]
[121 140]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
