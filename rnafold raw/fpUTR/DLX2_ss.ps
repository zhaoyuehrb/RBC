%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGAUGCGACCAGAGGCAGCUGUCCCGAGCAGCGCACGGUGAUCGCCUCCCCCGGAGGAGGAGGCGCCUAGACGGUUGCCUCCUUUCUUGUUUCCCCACCACCACCCCCGUAAUUACAUUGGCUGCUGGAGGGGACCGGGAGAGACAGAGGAGGCGCCUGGCUUCCCCCGCACGCCCGCCACCUCUGCUCUUUCCCGUCUCGGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[59.07536697 232.11872864]
[44.52352905 228.47950745]
[33.67302704 218.12254333]
[29.36080170 203.75575256]
[32.71411896 189.13578796]
[21.39105606 198.97389221]
[10.06799412 208.81199646]
[4.72533703 223.70382690]
[-9.95679951 226.21064758]
[-21.27986145 236.04875183]
[-32.60292435 245.88685608]
[-43.92598724 255.72496033]
[-49.26864624 270.61679077]
[-63.95078278 273.12359619]
[-75.27384186 282.96170044]
[-76.53246307 298.48760986]
[-88.15580750 308.30352783]
[-102.94963074 307.00796509]
[-114.19982910 316.92929077]
[-125.37656403 326.93331909]
[-129.68287659 334.98718262]
[-136.79269409 337.00100708]
[-148.11575317 346.83908081]
[-159.43881226 356.67718506]
[-170.76188660 366.51528931]
[-182.08494568 376.35339355]
[-184.63780212 392.19204712]
[-198.68284607 399.94552612]
[-213.44589233 393.66604614]
[-217.60202026 378.17068481]
[-207.96299744 365.34616089]
[-191.92304993 365.03033447]
[-180.59999084 355.19223022]
[-169.27691650 345.35412598]
[-157.95385742 335.51602173]
[-146.63079834 325.67791748]
[-135.38059998 315.75659180]
[-124.20386505 305.75256348]
[-121.31685638 298.95034790]
[-112.78772736 295.68490601]
[-112.00451660 280.85513306]
[-100.66146851 270.71658325]
[-85.11194611 271.63864136]
[-73.78887939 261.80053711]
[-69.25612640 247.61239624]
[-53.76408768 244.40188599]
[-42.44102859 234.56379700]
[-31.11796379 224.72569275]
[-19.79490280 214.88758850]
[-15.26214600 200.69944763]
[0.22989193 197.48893738]
[11.55295467 187.65083313]
[22.87601662 177.81272888]
[33.44343567 167.16709900]
[43.19776917 155.77178955]
[52.95210266 144.37648010]
[62.70643234 132.98117065]
[72.37646484 121.51424408]
[81.96166992 109.97631073]
[80.08605957 95.09403992]
[67.93781281 86.29516602]
[55.78956985 77.49629974]
[43.64132309 68.69742584]
[31.49307823 59.89855576]
[19.34483147 51.09968567]
[7.19658613 42.30081558]
[-4.95165968 33.50194550]
[-17.09990501 24.70307350]
[-29.24815178 15.90420341]
[-41.46095657 7.19516039]
[-53.73765182 -1.42358184]
[-69.72473145 -0.08462159]
[-80.63414764 -11.84745121]
[-78.09712982 -27.68863487]
[-64.05986023 -35.45617294]
[-49.29053497 -29.19147301]
[-45.11890793 -13.70027828]
[-32.84221268 -5.08153629]
[-25.56271744 -3.81121063]
[-20.44928169 3.75595808]
[-8.30103493 12.55482864]
[3.84721088 21.35369873]
[15.99545670 30.15257072]
[28.14370155 38.95143890]
[40.29194641 47.75031281]
[52.44019318 56.54918289]
[64.58843994 65.34805298]
[76.73668671 74.14691925]
[88.88493347 82.94579315]
[96.01098633 80.60713196]
[84.83432770 70.60301971]
[87.90991974 55.92171478]
[102.16213989 51.24470901]
[113.33857727 61.24906540]
[110.26309967 75.92981720]
[117.38915253 73.59115601]
[121.96124268 59.30494308]
[126.53333282 45.01872253]
[131.10542297 30.73250580]
[135.67750549 16.44628716]
[132.51475525 0.94442928]
[143.76321411 -8.81883526]
[148.33531189 -23.10505295]
[152.90739441 -37.39127350]
[149.74464417 -52.89313126]
[160.99311829 -62.65639496]
[165.56520081 -76.94261169]
[170.03179932 -91.26216125]
[174.39268494 -105.61425781]
[165.20591736 -117.97991180]
[165.06362915 -133.20597839]
[173.81082153 -145.45141602]
[187.92242432 -150.14190674]
[192.28330994 -164.49400330]
[188.04182434 -180.33515930]
[199.82963562 -191.73600769]
[215.52044678 -186.96835327]
[218.97290039 -170.93675232]
[206.63540649 -160.13311768]
[202.27452087 -145.78102112]
[211.39115906 -134.03262329]
[211.84712219 -118.99081421]
[203.25807190 -106.41776276]
[188.74478149 -101.25337219]
[184.38389587 -86.90127563]
[185.44680786 -79.58861542]
[179.85140991 -72.37052917]
[175.27932739 -58.08430862]
[178.76910400 -43.60429764]
[167.19361877 -32.81918335]
[162.62152100 -18.53296661]
[158.04943848 -4.24674892]
[161.53921509 10.23326302]
[149.96371460 21.01837349]
[145.39163208 35.30459213]
[140.81954956 49.59080887]
[136.24746704 63.87702942]
[131.67536926 78.16324615]
[124.56396484 93.41521454]
[112.35007477 100.98704529]
[126.66961670 105.45365143]
[140.98916626 109.92025757]
[155.30871582 114.38687134]
[169.62826538 118.85347748]
[183.94779968 123.32008362]
[198.26734924 127.78668976]
[212.58689880 132.25329590]
[226.90644836 136.71990967]
[241.25854492 141.08079529]
[255.64241028 145.33572388]
[270.02627563 149.59065247]
[284.41015625 153.84556580]
[298.79400635 158.10049438]
[313.17788696 162.35542297]
[328.60595703 158.85052490]
[338.61569214 169.88024902]
[352.99954224 174.13517761]
[367.38342285 178.39010620]
[381.76727295 182.64501953]
[386.83914185 181.42375183]
[391.41513062 182.19224548]
[394.82058716 184.42875671]
[396.68557739 187.41940308]
[410.86715698 192.30641174]
[425.04873657 197.19342041]
[436.14501953 186.65153503]
[450.87249756 182.48500061]
[465.84692383 185.65127563]
[477.62725830 195.42276001]
[483.50650024 209.55403137]
[482.13363647 224.79785156]
[473.82412720 237.65127563]
[460.48742676 245.16069031]
[445.18826294 245.60049438]
[431.44219971 238.86962891]
[422.40802002 226.51477051]
[420.16174316 211.37500000]
[405.98016357 206.48799133]
[391.79858398 201.60098267]
[377.51235962 197.02890015]
[363.12847900 192.77397156]
[348.74462891 188.51904297]
[334.36074829 184.26411438]
[319.96148682 188.07336426]
[308.92294312 176.73928833]
[294.53909302 172.48435974]
[280.15521240 168.22943115]
[265.77136230 163.97451782]
[251.38748169 159.71958923]
[237.00361633 155.46466064]
[229.69898987 156.58146667]
[222.43983459 151.03945923]
[208.12030029 146.57284546]
[193.80075073 142.10623169]
[179.48120117 137.63963318]
[165.16165161 133.17301941]
[150.84210205 128.70642090]
[136.52255249 124.23980713]
[122.20301056 119.77320099]
[107.88346863 115.30659485]
[93.49960327 119.56151581]
[83.91439819 131.09945679]
[80.83840942 139.69873047]
[74.10173798 142.73550415]
[64.34740448 154.13081360]
[54.59307480 165.52612305]
[44.83874130 176.92143250]
[59.43399048 173.46038818]
[73.83213043 177.66676331]
[84.26867676 188.44073486]
[88.01490784 202.96539307]
[84.09136200 217.44316101]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 53]
[6 52]
[7 51]
[9 49]
[10 48]
[11 47]
[12 46]
[14 44]
[15 43]
[18 40]
[19 38]
[20 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[54 207]
[55 206]
[56 205]
[57 204]
[58 202]
[59 201]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[70 78]
[71 77]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
[102 132]
[103 131]
[104 130]
[106 128]
[107 127]
[108 125]
[109 124]
[113 120]
[114 119]
[140 200]
[141 199]
[142 198]
[143 197]
[144 196]
[145 195]
[146 194]
[147 193]
[148 192]
[149 190]
[150 189]
[151 188]
[152 187]
[153 186]
[154 185]
[156 183]
[157 182]
[158 181]
[159 180]
[163 179]
[164 178]
[165 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
