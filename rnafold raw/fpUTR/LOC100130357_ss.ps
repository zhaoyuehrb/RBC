%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUUGUCCUCUUCUGGGUGGGGGCUCUGAAUGGACCCCAGGACCAUGGACCCCAGGGACCCCCCUGCCACACUGGACAAGGUGUCAGUGACCACUCCAGGUAGAACAGCAAUGGUAUCUCCACAUAGGAAACACCAAGCCUUUGUGACCACAUGAGCCGCAGCGUCUUCAUCAUGG\
) } def
/len { sequence length } bind def

/coor [
[321.97463989 242.54565430]
[317.07785034 230.81770325]
[317.52224731 218.59820557]
[303.88772583 212.34521484]
[290.25320435 206.09222412]
[282.84094238 206.16209412]
[276.43576050 199.60798645]
[262.91308594 193.11668396]
[258.16516113 193.83760071]
[252.91716003 191.56315613]
[249.03582764 186.15290833]
[235.74928284 179.19104004]
[222.46273804 172.22915649]
[209.11561584 165.38414001]
[195.70893860 158.65650940]
[182.30226135 151.92887878]
[168.89558411 145.20124817]
[155.48890686 138.47361755]
[142.02371216 131.86389160]
[128.50103760 125.37258148]
[114.97835541 118.88127136]
[101.45567322 112.38996124]
[86.55316925 110.68246460]
[71.91269684 113.94690704]
[57.27222824 117.21134949]
[49.55059052 122.14682770]
[42.34622955 120.40222168]
[27.65072250 123.40922546]
[12.95521450 126.41622162]
[7.72654343 130.53889465]
[2.05376339 131.26983643]
[-2.30838466 129.26133728]
[-17.10036850 131.75074768]
[-31.89235306 134.24015808]
[-46.68433762 136.72958374]
[-59.00904083 146.64987183]
[-72.84391022 141.13211060]
[-87.63589478 143.62152100]
[-102.25191498 152.21269226]
[-114.55345917 140.54614258]
[-106.74824524 125.49572754]
[-90.12530518 128.82954407]
[-75.33332062 126.34011841]
[-64.06664276 116.59788513]
[-49.17375565 121.93759918]
[-34.38177109 119.44818115]
[-19.58978653 116.95876312]
[-4.79780149 114.46934509]
[9.94821548 111.72071838]
[24.64372444 108.71371460]
[39.33923340 105.70671844]
[54.00778580 102.57087708]
[68.64826202 99.30643463]
[83.28873444 96.04199219]
[86.03736115 81.29597473]
[73.55618286 72.97611237]
[61.07500839 64.65624237]
[48.59383011 56.33637619]
[36.11265182 48.01650620]
[19.72156334 47.50244141]
[12.21072197 32.92440033]
[21.30663681 19.27902222]
[37.65221024 20.60350227]
[44.43251801 35.53532791]
[56.91369629 43.85519791]
[69.39487457 52.17506409]
[81.87605286 60.49493408]
[94.35723114 68.81479645]
[100.40934753 64.38513947]
[98.78875732 49.47293854]
[112.51358032 55.52581787]
[118.56569672 51.09615707]
[114.40864563 36.68370056]
[110.25159454 22.27124214]
[106.09454346 7.85878468]
[101.93749237 -6.55367279]
[96.53730011 -13.95775986]
[97.83634186 -21.25563240]
[93.93286896 -35.73882675]
[90.02939606 -50.22201920]
[80.06953430 -63.94198608]
[90.49615479 -77.31067657]
[106.22876740 -70.99235535]
[104.51258850 -54.12549210]
[108.41606140 -39.64229965]
[112.31953430 -25.15910530]
[116.34995270 -10.71072292]
[120.50700378 3.70173502]
[124.66405487 18.11419296]
[128.82110596 32.52664948]
[132.97814941 46.93910980]
[129.52171326 80.73652649]
[107.94697571 98.86727905]
[121.46965790 105.35858917]
[134.99234009 111.84989929]
[148.51502991 118.34120941]
[157.63507080 119.23970795]
[162.21653748 125.06693268]
[175.62321472 131.79457092]
[189.02989197 138.52220154]
[202.43656921 145.24983215]
[215.84324646 151.97746277]
[224.94612122 153.03587341]
[229.42462158 158.94261169]
[242.71116638 165.90449524]
[255.99771118 172.86637878]
[269.40438843 179.59400940]
[282.92706299 186.08531189]
[296.50619507 192.45770264]
[310.14071655 198.71069336]
[323.77523804 204.96368408]
[342.31173706 193.23306274]
[365.14318848 198.17619324]
[378.74069214 218.89814758]
[393.72625732 218.24020386]
[408.71182251 217.58226013]
[423.69738770 216.92431641]
[414.70138550 204.92129517]
[418.30236816 190.35993958]
[431.85592651 183.93334961]
[445.40902710 190.36087036]
[449.00900269 204.92247009]
[440.01327515 216.92431641]
[454.99884033 217.58226013]
[469.98440552 218.24020386]
[484.96994019 218.89814758]
[499.09622192 211.77360535]
[511.47186279 220.06170654]
[526.45745850 220.71965027]
[541.44299316 221.37759399]
[549.63067627 208.38310242]
[563.22619629 201.23759460]
[578.57232666 201.86317444]
[591.54113770 210.09158325]
[598.64398193 223.70939636]
[597.97027588 239.05351257]
[589.70129395 251.99642944]
[576.06127930 259.05654907]
[560.71936035 258.33477783]
[547.80242920 250.02523804]
[540.78503418 236.36315918]
[525.79949951 235.70521545]
[510.81393433 235.04727173]
[497.75952148 242.21887207]
[484.31201172 233.88371277]
[469.32644653 233.22575378]
[454.34088135 232.56781006]
[439.35531616 231.90986633]
[424.35531616 231.90986633]
[409.36975098 232.56781006]
[394.38418579 233.22575378]
[379.39862061 233.88371277]
[371.97476196 246.91773987]
[379.05294800 260.14266968]
[386.13116455 273.36761475]
[393.20938110 286.59255981]
[400.28756714 299.81750488]
[415.34927368 297.94393921]
[430.06970215 301.64163208]
[442.45809937 310.41043091]
[450.83901978 323.06445312]
[454.07901001 337.89236450]
[451.73989868 352.88879395]
[444.13800049 366.02560425]
[432.30145264 375.52615356]
[417.83099365 380.10556030]
[402.68371582 379.14450073]
[388.90808105 372.77291870]
[378.36718750 361.85260010]
[372.48657227 347.86035156]
[372.06155396 332.68853760]
[377.14962769 318.38903809]
[387.06265259 306.89569092]
[379.98443604 293.67077637]
[372.90621948 280.44583130]
[365.82803345 267.22088623]
[358.74981689 253.99594116]
[344.69500732 255.67576599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 111]
[4 110]
[5 109]
[7 108]
[8 107]
[11 106]
[12 105]
[13 104]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[19 96]
[20 95]
[21 94]
[22 93]
[23 54]
[24 53]
[25 52]
[27 51]
[28 50]
[29 49]
[32 48]
[33 47]
[34 46]
[35 45]
[37 43]
[38 42]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[78 86]
[79 85]
[80 84]
[114 152]
[115 151]
[116 150]
[117 149]
[123 148]
[124 147]
[125 146]
[126 145]
[128 143]
[129 142]
[130 141]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
