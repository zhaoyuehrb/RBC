%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAAGCGCCGGUGGGGCGGCGGCGCCAGAGCUGCUGGAGCGCUCGGGGUCCCCGGGCGGCGGCGGCGGCGCAGAGGAGGAGGCAGGCGGCGGCCCCGGUGGCUCCCCCCCGGACGGUGCGCGGCCCGGCCCGUCUCGCGAACUCGCGGUGGUCGCGCGGCCCCGCGCUGCUCCGACCCCGGGCCCCUCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[106.74378204 353.38024902]
[106.74378204 338.38024902]
[106.74378204 323.38024902]
[98.41210175 314.60272217]
[98.29463196 302.10018921]
[107.00012207 292.57504272]
[107.23573303 277.57690430]
[107.47134399 262.57876587]
[99.93490601 249.73152161]
[107.88801575 236.05458069]
[108.12362671 221.05642700]
[108.35923767 206.05828857]
[100.82280731 193.21104431]
[108.77590942 179.53411865]
[109.01152039 164.53596497]
[109.24713135 149.53781128]
[109.48274231 134.53965759]
[109.71835327 119.54151154]
[96.14594269 113.15482330]
[84.73986053 122.89654541]
[73.33377075 132.63825989]
[61.92767715 142.37998962]
[50.52158737 152.12170410]
[39.11549759 161.86343384]
[38.12552643 177.63668823]
[26.21703911 188.02723694]
[10.45513439 186.87054443]
[0.19107001 174.85287476]
[1.51433277 159.10408020]
[13.63985443 148.96765137]
[29.37377739 150.45733643]
[40.77986908 140.71562195]
[52.18595886 130.97389221]
[63.59204483 121.23217773]
[74.99813843 111.49045563]
[86.40422821 101.74873352]
[93.83610535 88.71926117]
[96.41503906 73.94261932]
[98.99398041 59.16598511]
[101.57291412 44.38934326]
[104.15185547 29.61270332]
[106.61465454 14.81626415]
[108.96117401 0.00093948]
[103.47795105 -14.83971024]
[113.11097717 -26.19990730]
[115.45749664 -41.01523209]
[117.80400848 -55.83055878]
[120.15052795 -70.64588165]
[122.49704742 -85.46120453]
[120.61750031 -90.35007477]
[120.78993225 -95.00405884]
[122.57958984 -98.67909241]
[125.31893921 -100.91242981]
[128.36074829 -115.60076904]
[131.40255737 -130.28910828]
[126.62451935 -145.37158203]
[136.78198242 -156.26539612]
[139.82379150 -170.95373535]
[142.86560059 -185.64207458]
[145.90740967 -200.33041382]
[148.94921875 -215.01876831]
[144.17118835 -230.10122681]
[154.32865906 -240.99504089]
[157.37046814 -255.68338013]
[152.59242249 -270.76583862]
[162.74989319 -281.65966797]
[165.79170227 -296.34799194]
[168.83351135 -311.03634644]
[171.87532043 -325.72470093]
[174.57023621 -340.48062134]
[176.91674805 -355.29592896]
[179.26325989 -370.11126709]
[177.51402283 -379.08596802]
[181.76475525 -385.14013672]
[184.34368896 -399.91677856]
[186.92262268 -414.69342041]
[189.50155640 -429.47003174]
[184.25212097 -444.39498901]
[194.06240845 -455.60247803]
[196.64134216 -470.37911987]
[195.03327942 -479.38018799]
[199.37858582 -485.36682129]
[194.36422729 -500.37237549]
[204.34933472 -511.42440796]
[199.33497620 -526.42993164]
[209.32008362 -537.48199463]
[212.13079834 -552.21630859]
[214.94151306 -566.95056152]
[209.92715454 -581.95617676]
[219.91226196 -593.00817871]
[222.72297668 -607.74249268]
[225.53370667 -622.47680664]
[228.22860718 -637.23272705]
[230.80755615 -652.00933838]
[233.38648987 -666.78601074]
[235.73300171 -681.60131836]
[237.84652710 -696.45166016]
[239.96003723 -711.30200195]
[242.07356262 -726.15240479]
[240.18356323 -735.09851074]
[244.33866882 -741.21868896]
[246.68519592 -756.03399658]
[238.45652771 -769.80603027]
[244.22813416 -784.77496338]
[259.57250977 -789.45788574]
[272.71875000 -780.26245117]
[273.58221436 -764.24267578]
[261.50051880 -753.68750000]
[259.15399170 -738.87213135]
[256.92391968 -724.03887939]
[254.81039429 -709.18847656]
[252.69688416 -694.33813477]
[250.58335876 -679.48779297]
[252.68922424 -675.19219971]
[252.11271667 -669.52716064]
[248.16313171 -664.20703125]
[245.58418274 -649.43041992]
[243.00524902 -634.65374756]
[244.95391846 -627.51763916]
[240.26800537 -619.66607666]
[237.45729065 -604.93176270]
[234.64657593 -590.19744873]
[239.86196899 -576.24578857]
[229.67582703 -564.13989258]
[226.86511230 -549.40557861]
[224.05438232 -534.67126465]
[229.26979065 -520.71960449]
[219.08363342 -508.61367798]
[224.29904175 -494.66201782]
[214.11288452 -482.55612183]
[211.41798401 -467.80017090]
[208.83903503 -453.02352905]
[214.27293396 -439.15551758]
[204.27819824 -426.89111328]
[201.69926453 -412.11447144]
[199.12033081 -397.33782959]
[196.54139709 -382.56118774]
[194.07859802 -367.76473999]
[191.73207092 -352.94943237]
[189.38555908 -338.13409424]
[191.15863037 -335.07662964]
[191.53373718 -331.00625610]
[190.04995728 -326.59176636]
[186.56365967 -322.68289185]
[183.52185059 -307.99453735]
[180.48004150 -293.30618286]
[177.43823242 -278.61785889]
[182.43385315 -264.58599854]
[172.05880737 -252.64157104]
[169.01699829 -237.95323181]
[174.01260376 -223.92137146]
[163.63757324 -211.97695923]
[160.59576416 -197.28860474]
[157.55395508 -182.60026550]
[154.51214600 -167.91192627]
[151.47033691 -153.22358704]
[156.46594238 -139.19172668]
[146.09089661 -127.24730682]
[143.04908752 -112.55895996]
[140.00727844 -97.87062073]
[137.31237793 -83.11469269]
[134.96585083 -68.29936981]
[132.61933899 -53.48403931]
[130.27282715 -38.66871643]
[127.92630005 -23.85339165]
[133.57736206 -10.07243252]
[123.77649689 2.34745646]
[121.42997742 17.16278076]
[123.49048615 24.26741409]
[118.92848969 32.19163895]
[116.34955597 46.96828079]
[113.77062225 61.74491882]
[111.19168091 76.52156067]
[108.61274719 91.29820251]
[114.51482391 77.50814819]
[126.80299377 68.90576935]
[141.78019714 68.07919312]
[154.94036865 75.27710724]
[162.32411194 88.33392334]
[161.70991516 103.32134247]
[153.28259277 115.73021698]
[139.57759094 121.82717896]
[124.71649933 119.77712250]
[124.48088837 134.77526855]
[124.24528503 149.77342224]
[124.00967407 164.77157593]
[123.77406311 179.76972961]
[131.29364014 193.68972778]
[123.35739136 206.29389954]
[123.12178040 221.29203796]
[122.88616943 236.29019165]
[130.40574646 250.21018982]
[122.46949005 262.81436157]
[122.23388672 277.81250000]
[121.99827576 292.81066895]
[131.32592773 308.68280029]
[121.74378204 323.38024902]
[121.74378204 338.38024902]
[121.74378204 353.38024902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[6 195]
[7 194]
[8 193]
[10 191]
[11 190]
[12 189]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 168]
[43 167]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[53 160]
[54 159]
[55 158]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[63 150]
[64 149]
[66 147]
[67 146]
[68 145]
[69 144]
[70 140]
[71 139]
[72 138]
[74 137]
[75 136]
[76 135]
[77 134]
[79 132]
[80 131]
[82 130]
[84 128]
[86 126]
[87 125]
[88 124]
[90 122]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
[96 113]
[97 112]
[98 111]
[99 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
