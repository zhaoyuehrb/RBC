%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAGCAAGAGAGAAGGAGGCCCAGACAGUGAGGGCAGGAGGGAGAGAAGAGACGCAGAAGGAGAGCGAGCGAGAGAGAAAGGGUUCUGGAUUGGAGGGGAGAGCAAGGGAGGGAGGAAGGCGGUGAGAGAGGCGGGGGCCUCGGGAGGGUGAAAGGAGGGAGGAGAAGGGCGGGGCACGGAGGCCCGAGCGAGGGACAAGACUCCGACUCCAGCUCUGACUUUUUUCGCGGCUCUCGGCUUCCACUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[82.75466919 267.66354370]
[85.18259430 248.43452454]
[85.36738586 233.43565369]
[74.81443787 222.98716736]
[74.78817749 207.77355957]
[85.81906128 196.77549744]
[86.00386047 181.77664185]
[86.18865204 166.77777100]
[79.17855835 164.11158752]
[73.84619141 178.13179016]
[68.51383209 192.15199280]
[63.18146896 206.17218018]
[57.84910583 220.19238281]
[52.51652527 234.21249390]
[38.49649429 228.87969971]
[43.82890701 214.86001587]
[49.16127014 200.83982849]
[54.49363327 186.81962585]
[59.82599640 172.79942322]
[65.15835571 158.77923584]
[58.14826202 156.11305237]
[48.31900406 167.44378662]
[38.48974609 178.77453613]
[28.66048622 190.10527039]
[33.09717178 204.88090515]
[28.81927490 219.70329285]
[17.19186211 229.84266663]
[1.92519617 232.06358337]
[-12.10918427 225.65736389]
[-20.43296051 212.66819763]
[-20.39004517 197.24089050]
[-11.99413204 184.29824829]
[2.07567286 177.97019958]
[17.32974625 180.27601624]
[27.15900421 168.94528198]
[36.98826218 157.61453247]
[46.81752014 146.28379822]
[43.55744553 139.52938843]
[30.04864502 146.04954529]
[16.53984451 152.56968689]
[3.03104448 159.08982849]
[-10.47775650 165.60998535]
[-23.98655701 172.13012695]
[-37.49535751 178.65026855]
[-48.32828522 189.02561951]
[-61.54328918 181.92887878]
[-58.87737274 167.16767883]
[-44.01550293 165.14146423]
[-30.50670242 158.62132263]
[-16.99790192 152.10118103]
[-3.48910189 145.58102417]
[10.01969910 139.06088257]
[23.52849960 132.54074097]
[37.03730011 126.02059174]
[33.77722549 119.26618958]
[18.79117012 119.91278839]
[3.80511212 120.55938721]
[-3.87935376 133.93670654]
[-17.58675957 141.01557922]
[-32.94312286 139.53718567]
[-45.04828262 129.97326660]
[-50.03952789 115.37562561]
[-46.32416916 100.40232849]
[-35.08776474 89.83129120]
[-19.91580963 87.03570557]
[-5.64962101 92.90761566]
[3.15851402 105.57333374]
[18.14457130 104.92673492]
[33.13062668 104.28013611]
[34.59946823 96.92537689]
[37.53715134 82.21585083]
[39.00599289 74.86109161]
[23.22766113 76.02506256]
[14.97548580 63.62543106]
[1.38738441 57.27220535]
[-12.20071697 50.91897583]
[-25.78881836 44.56575012]
[-39.30239868 52.19220352]
[-54.71394730 50.38561249]
[-66.09741211 39.84064484]
[-69.07561493 24.61205482]
[-62.50338364 10.55554867]
[-48.90786743 3.07613873]
[-33.51682281 5.04981089]
[-22.24842072 15.71764755]
[-19.43559074 30.97764778]
[-5.84748936 37.33087540]
[7.74061203 43.68410492]
[21.32871437 50.03733063]
[36.13513184 48.41893387]
[45.35921860 61.27299118]
[80.17713165 48.99229813]
[108.97454071 58.48375320]
[121.60805511 78.86432648]
[134.59843445 71.36432648]
[147.58882141 63.86433029]
[160.57919312 56.36433029]
[173.56958008 48.86433029]
[186.55996704 41.36433029]
[195.41125488 25.20225716]
[212.95750427 25.91920471]
[225.85449219 18.25973701]
[238.75149536 10.60026836]
[251.64849854 2.94080067]
[264.54550171 -4.71866751]
[277.44247437 -12.37813473]
[278.99472046 -27.70447922]
[289.15515137 -39.04548645]
[303.87130737 -42.19181061]
[317.45565796 -36.14178085]
[330.35266113 -43.80125046]
[343.24966431 -51.46071625]
[356.14666748 -59.12018585]
[369.04367065 -66.77965546]
[381.94067383 -74.43911743]
[394.83764648 -82.09858704]
[407.73464966 -89.75805664]
[411.74380493 -104.81011200]
[424.93231201 -112.39418030]
[439.25744629 -108.47929382]
[452.15444946 -116.13876343]
[465.00402832 -123.87753296]
[477.80566406 -131.69531250]
[462.88116455 -130.19218445]
[450.15939331 -138.13928223]
[444.96420288 -152.21089172]
[449.46969604 -166.51824951]
[461.79040527 -175.07397461]
[476.77029419 -174.29762268]
[488.14053345 -164.51408386]
[491.14273071 -149.81637573]
[494.80142212 -164.36332703]
[498.46014404 -178.91027832]
[502.11883545 -193.45724487]
[505.77752686 -208.00419617]
[500.77172852 -223.62065125]
[511.99191284 -235.58055115]
[527.89575195 -231.58056641]
[532.12274170 -215.73554993]
[520.32452393 -204.34548950]
[516.66577148 -189.79853821]
[513.00708008 -175.25157166]
[509.34838867 -160.70462036]
[505.68966675 -146.15766907]
[516.62646484 -141.90753174]
[522.74407959 -133.85707092]
[537.11975098 -138.13945007]
[551.49548340 -142.42181396]
[565.87121582 -146.70419312]
[567.36950684 -155.41877747]
[571.58117676 -163.14447021]
[578.03027344 -169.06671143]
[586.00671387 -172.57142639]
[594.64447021 -173.30863953]
[603.01538086 -171.22720337]
[610.22906494 -166.57737732]
[615.52764893 -159.88098145]
[630.13970947 -163.27024841]
[644.75177002 -166.65951538]
[659.36389160 -170.04878235]
[659.59967041 -185.11630249]
[663.43261719 -199.68067932]
[670.63562012 -212.89642334]
[680.78619385 -223.99739075]
[693.29113770 -232.34123230]
[707.42114258 -237.44654846]
[722.35333252 -239.02064514]
[737.21929932 -236.97636414]
[751.15545654 -231.43682861]
[763.35339355 -222.72805786]
[773.10656738 -211.35984802]
[779.85125732 -197.99581909]
[794.46331787 -201.38508606]
[807.63995361 -214.26661682]
[824.21588135 -208.46798706]
[838.78509521 -212.03701782]
[853.35430908 -215.60604858]
[867.92352295 -219.17506409]
[875.90356445 -232.81671143]
[891.21337891 -236.73919678]
[904.76989746 -228.61537170]
[908.53027344 -213.26496887]
[900.26354980 -199.79510498]
[884.87426758 -196.19720459]
[871.49255371 -204.60585022]
[856.92333984 -201.03681946]
[842.35412598 -197.46780396]
[827.78491211 -193.89877319]
[821.25982666 -183.73390198]
[809.17279053 -180.62947083]
[797.85260010 -186.77301025]
[783.24053955 -183.38372803]
[783.06756592 -168.41514587]
[779.31475830 -153.91423035]
[772.19610596 -140.72499084]
[762.12145996 -129.61614990]
[749.67340088 -121.23637390]
[735.57293701 -116.07636261]
[720.63830566 -114.44013977]
[705.73712158 -116.42713928]
[691.73614502 -121.92615509]
[679.45086670 -130.62158203]
[669.59783936 -142.01150513]
[662.75311279 -155.43670654]
[648.14105225 -152.04743958]
[633.52899170 -148.65817261]
[618.91693115 -145.26890564]
[609.34191895 -126.28367615]
[588.56054688 -120.58103180]
[570.15356445 -132.32847595]
[555.77789307 -128.04609680]
[541.40216064 -123.76372528]
[527.02642822 -119.48135376]
[509.54260254 -101.24481964]
[485.62344360 -118.89364624]
[472.82177734 -111.07587433]
[468.76272583 -104.92494965]
[459.81390381 -103.24176788]
[446.91690063 -95.58229828]
[443.49975586 -81.13035583]
[430.52947998 -73.17884064]
[415.39413452 -76.86106110]
[402.49713135 -69.20159149]
[389.60012817 -61.54212189]
[376.70312500 -53.88265610]
[363.80612183 -46.22318649]
[350.90914917 -38.56372070]
[338.01214600 -30.90425110]
[325.11514282 -23.24478340]
[323.92727661 -8.42159271]
[314.12271118 2.99481821]
[299.30249023 6.48972225]
[285.10195923 0.51886261]
[272.20495605 8.17833042]
[259.30795288 15.83779812]
[246.41096497 23.49726677]
[233.51396179 31.15673447]
[220.61697388 38.81620026]
[217.33700562 50.44129944]
[206.67906189 56.93305969]
[194.05996704 54.35470963]
[181.06958008 61.85470963]
[168.07919312 69.35471344]
[155.08882141 76.85471344]
[142.09843445 84.35471344]
[129.10806274 91.85471344]
[138.97848511 129.02766418]
[101.18751526 166.96257019]
[101.00272369 181.96142578]
[100.81792450 196.96029663]
[111.57449341 208.22679138]
[111.17342377 223.43513489]
[100.36624908 233.62045288]
[100.18145752 248.61930847]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 254]
[3 253]
[6 250]
[7 249]
[8 248]
[21 37]
[22 36]
[23 35]
[24 34]
[55 69]
[56 68]
[57 67]
[72 91]
[74 89]
[75 88]
[76 87]
[77 86]
[94 246]
[95 245]
[96 244]
[97 243]
[98 242]
[99 241]
[101 238]
[102 237]
[103 236]
[104 235]
[105 234]
[106 233]
[110 229]
[111 228]
[112 227]
[113 226]
[114 225]
[115 224]
[116 223]
[117 222]
[120 219]
[121 218]
[122 216]
[123 215]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[146 213]
[147 212]
[148 211]
[149 210]
[157 207]
[158 206]
[159 205]
[160 204]
[172 192]
[173 191]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
