%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUCAGGGGCGGGGACGGGGGCGUGGUCCCGCCGUAUAAGAACGGAGGGGGCGGCGGCGGGACGGCUCACUCGGUGCCGCUGCCUAGGGGCUGUAGAGGUCGCGCCGCUCCUGCUGGGGCCUGCCCACGCCAAGGACCUGCCUCUGUCGCCUCCUCUUCUAUUGCCCAGUUUCCCCAGCCAGAACAUCCCCUGAAG\
) } def
/len { sequence length } bind def

/coor [
[312.86734009 514.83599854]
[307.09634399 510.20812988]
[306.27227783 501.10174561]
[299.88555908 487.52935791]
[293.49887085 473.95693970]
[273.75701904 468.68942261]
[264.17050171 450.31378174]
[271.34509277 430.55676270]
[264.11880493 417.41217041]
[256.89248657 404.26757812]
[249.66619873 391.12298584]
[242.43988037 377.97836304]
[229.52822876 370.55285645]
[229.66018677 354.73220825]
[222.43388367 341.58758545]
[209.52223206 334.16207886]
[209.65419006 318.34143066]
[202.42788696 305.19680786]
[195.20158386 292.05221558]
[187.97528076 278.90762329]
[180.74897766 265.76303101]
[173.52267456 252.61842346]
[166.29635620 239.47381592]
[159.07005310 226.32922363]
[151.84375000 213.18461609]
[144.61744690 200.04002380]
[138.63484192 195.68916321]
[137.38272095 186.63171387]
[130.36376953 173.37522888]
[123.34482574 160.11874390]
[116.32587433 146.86225891]
[109.30693054 133.60577393]
[82.82854462 135.43978882]
[59.54405594 117.02069092]
[54.10421753 84.63140106]
[39.63585663 88.58949280]
[25.16749382 92.54759216]
[10.69913292 96.50568390]
[3.08745337 110.35623932]
[-12.11174774 114.68750763]
[-25.88105392 106.92981720]
[-30.05138016 91.68566895]
[-22.14854431 77.99915314]
[-6.86116171 73.99023438]
[6.74103737 82.03732300]
[21.20939827 78.07923126]
[35.67776108 74.12113190]
[50.14612198 70.16304016]
[52.49263763 55.34771347]
[39.95552826 47.11237335]
[27.41841698 38.87702942]
[11.63617706 37.76731110]
[5.24658394 24.31285667]
[-7.29052639 16.07751465]
[-19.82763672 7.84217262]
[-32.36474609 -0.39316973]
[-44.90185928 -8.62851238]
[-57.43896866 -16.86385345]
[-69.97608185 -25.09919739]
[-85.75831604 -26.20891380]
[-92.14791107 -39.66336823]
[-104.68502045 -47.89871216]
[-117.22212982 -56.13405228]
[-129.75924683 -64.36939240]
[-144.22645569 -58.75873566]
[-159.21989441 -62.75576401]
[-168.97428894 -74.82354736]
[-169.73887634 -90.32177734]
[-161.21965027 -103.29106140]
[-146.69242859 -108.74445343]
[-131.74322510 -104.58500671]
[-122.12030792 -92.41211700]
[-121.52390289 -76.90650940]
[-108.98679352 -68.67116547]
[-96.44967651 -60.43582153]
[-83.91256714 -52.20047760]
[-69.02706909 -51.67980957]
[-61.74073792 -37.63630676]
[-49.20362473 -29.40096474]
[-36.66651535 -21.16562271]
[-24.12940407 -12.93027973]
[-11.59229469 -4.69493771]
[0.94481587 3.54040432]
[13.48192596 11.77574635]
[28.36742783 12.29641724]
[35.65375900 26.33991814]
[48.19086838 34.57526016]
[60.72798157 42.81060410]
[74.14614868 36.10592270]
[75.08800507 21.13552284]
[76.02986908 6.16512203]
[76.97172546 -8.80527878]
[77.91358185 -23.77568054]
[78.85543823 -38.74608231]
[71.99992371 -53.00485229]
[80.52111053 -65.22117615]
[81.46296692 -80.19158173]
[72.89334869 -96.48547363]
[83.15720367 -110.71525574]
[75.15901947 -125.03171539]
[83.78960419 -138.97607422]
[100.17053986 -138.20356750]
[107.45053864 -123.50888824]
[98.14055634 -110.00865936]
[106.04949951 -100.84837341]
[105.57788849 -88.35419464]
[96.43337250 -79.24972534]
[95.49150848 -64.27931976]
[102.41439056 -51.09133530]
[93.82583618 -37.80422211]
[92.88397980 -22.83382225]
[91.94212341 -7.86342096]
[91.00026703 7.10697985]
[90.05841064 22.07738113]
[89.11655426 37.04778290]
[102.83565521 43.11293411]
[113.27435303 32.34104156]
[123.62812042 21.48749542]
[133.89633179 10.55296516]
[144.16453552 -0.38156414]
[154.43273926 -11.31609344]
[155.36799622 -27.33186150]
[168.55535889 -36.46823883]
[183.87858582 -31.71657944]
[189.58302307 -16.72194862]
[181.29270935 -2.98694468]
[165.36726379 -1.04788697]
[155.09906006 9.88664246]
[144.83085632 20.82117271]
[134.56265259 31.75570107]
[132.27345276 38.78998184]
[124.04624176 42.77973175]
[113.60755157 53.55162811]
[133.01315308 69.39342499]
[140.72644043 91.34640503]
[136.20330811 112.35420227]
[122.56341553 126.58683014]
[129.58236694 139.84330750]
[136.60130310 153.09979248]
[143.62025452 166.35627747]
[150.63920593 179.61276245]
[157.76205444 192.81372070]
[164.98835754 205.95831299]
[172.21466064 219.10292053]
[179.44096375 232.24751282]
[186.66726685 245.39212036]
[193.89356995 258.53671265]
[201.11987305 271.68130493]
[208.34617615 284.82592773]
[215.57249451 297.97052002]
[222.79879761 311.11511230]
[236.22732544 319.48083496]
[235.57849121 334.36129761]
[242.80479431 347.50588989]
[256.23333740 355.87161255]
[255.58448792 370.75207520]
[262.81079102 383.89666748]
[270.03710938 397.04125977]
[277.26339722 410.18588257]
[284.48971558 423.33047485]
[294.21133423 423.22546387]
[303.24746704 426.65264893]
[310.36837769 433.10046387]
[314.62139893 441.64932251]
[315.45855713 451.10275269]
[312.80654907 460.15478516]
[307.07128906 467.57025146]
[313.45797729 481.14266968]
[319.84466553 494.71505737]
[326.33776855 508.23690796]
[335.39642334 506.81741333]
[344.53302002 507.43530273]
[353.29553223 510.05471802]
[361.25173950 514.54107666]
[368.01028442 520.66766357]
[373.24011230 528.12738037]
[376.68658447 536.54797363]
[378.18389893 545.51062012]
[377.66305542 554.57067871]
[375.15502930 563.28009033]
[370.78903198 571.20898438]
[364.78570557 577.96746826]
[357.44613647 583.22436523]
[362.30490112 597.41564941]
[367.16366577 611.60693359]
[382.03381348 616.04071045]
[391.43115234 628.38854980]
[391.74221802 643.90252686]
[382.84738159 656.61712646]
[368.16690063 661.64337158]
[353.34570312 657.04858398]
[344.08288574 644.59948730]
[343.94015503 629.08306885]
[352.97238159 616.46569824]
[348.11361694 602.27441406]
[343.25485229 588.08312988]
[322.14031982 585.65246582]
[305.08642578 572.84771729]
[296.80624390 553.11676025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[3 169]
[4 168]
[5 167]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[14 154]
[15 153]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[22 146]
[23 145]
[24 144]
[25 143]
[26 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[35 48]
[36 47]
[37 46]
[38 45]
[49 88]
[50 87]
[51 86]
[53 84]
[54 83]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[61 76]
[62 75]
[63 74]
[64 73]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[96 108]
[97 107]
[99 104]
[116 133]
[117 132]
[118 130]
[119 129]
[120 128]
[121 127]
[183 196]
[184 195]
[185 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
