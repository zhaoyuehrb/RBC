%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUCCCCGCCCCUGAACCUGCUCCCUCCCAGUCGGUCUCGCCGCGCUCGCCGGGUGUCCCAGUGUCACCAACACUCGGCCGCCGCCGCCAGCUUGGCGCGCACCGCCGCCUCCGCCACCGCCGACAGCGCGCAUCCUCCGUGUCCCCGCUCCGCCGCCCGAGCAGGUGCCACU\
) } def
/len { sequence length } bind def

/coor [
[81.58618927 318.73083496]
[69.60700226 322.79940796]
[56.98465347 323.32583618]
[53.03811646 337.79736328]
[61.09606934 351.39312744]
[57.09936142 366.68371582]
[43.41915894 374.59747314]
[28.17168999 370.43933105]
[20.40300369 356.67620850]
[24.72212601 341.47357178]
[38.56659698 333.85083008]
[42.51313400 319.37930298]
[28.48774147 309.20428467]
[19.40951538 294.40405273]
[16.68540764 277.22085571]
[20.75729370 260.27017212]
[31.03056335 246.14244080]
[45.96078110 237.00733948]
[63.28582001 234.28050232]
[66.45655823 219.61944580]
[69.62729645 204.95838928]
[72.79803467 190.29734802]
[75.96878052 175.63629150]
[79.13951874 160.97525024]
[82.31025696 146.31419373]
[85.48099518 131.65313721]
[76.41564941 126.39455414]
[69.19403839 118.56644440]
[64.53511047 108.80010986]
[62.94560242 97.92469788]
[64.66680145 86.89696503]
[69.64418030 76.71710968]
[77.52354431 68.33809662]
[87.67465210 62.57666397]
[73.59831238 55.35396957]
[73.01027679 40.47097397]
[64.71827698 27.97126579]
[56.42627716 15.47155762]
[48.13427734 2.97184896]
[39.73167419 -9.45378113]
[25.52936554 -16.42550850]
[24.67727470 -31.29572105]
[16.16473198 -43.64629364]
[7.65219069 -55.99686432]
[-0.86035115 -68.34743500]
[-9.37289333 -80.69801331]
[-23.57520103 -87.66973877]
[-24.42729187 -102.53994751]
[-32.93983459 -114.89052582]
[-41.45237732 -127.24109650]
[-55.65468597 -134.21282959]
[-56.50677490 -149.08303833]
[-65.01931763 -161.43360901]
[-79.22162628 -168.40533447]
[-80.07371521 -183.27554321]
[-88.69552612 -195.55009460]
[-97.42592621 -207.74763489]
[-106.15632629 -219.94517517]
[-114.88673401 -232.14271545]
[-129.21054077 -238.86128235]
[-130.32641602 -253.71403503]
[-139.05680847 -265.91159058]
[-153.38061523 -272.63015747]
[-154.49649048 -287.48287964]
[-163.22689819 -299.68045044]
[-171.95730591 -311.87799072]
[-180.68769836 -324.07553101]
[-189.41810608 -336.27307129]
[-204.94671631 -340.30316162]
[-211.34591675 -355.01473999]
[-203.70678711 -369.12228394]
[-187.88940430 -371.80374146]
[-176.02752686 -361.00210571]
[-177.22055054 -345.00347900]
[-168.49015808 -332.80593872]
[-159.75975037 -320.60836792]
[-151.02935791 -308.41082764]
[-142.29895020 -296.21328735]
[-128.59959412 -290.36718750]
[-126.85926819 -274.64196777]
[-118.12886810 -262.44442749]
[-104.42951965 -256.59832764]
[-102.68918610 -240.87312317]
[-93.95878601 -228.67558289]
[-85.22838593 -216.47804260]
[-76.49798584 -204.28048706]
[-70.02780914 -200.66006470]
[-67.72314453 -191.78808594]
[-54.12970734 -185.69975281]
[-52.66874313 -169.94615173]
[-44.15620422 -157.59558105]
[-30.56276703 -151.50724792]
[-29.10180473 -135.75363159]
[-20.58926201 -123.40306091]
[-12.07672024 -111.05249023]
[1.51671481 -104.96415710]
[2.97767901 -89.21054840]
[11.49022102 -76.85997772]
[20.00276375 -64.50940704]
[28.51530457 -52.15883636]
[37.02784729 -39.80826187]
[50.62128067 -33.71992874]
[52.08224487 -17.96632195]
[58.48714447 -14.23162651]
[60.63398361 -5.32015228]
[68.92598724 7.17955685]
[77.21798706 19.67926598]
[85.50998688 32.17897415]
[98.99322510 38.50760651]
[100.17436218 54.28466415]
[114.96163177 56.80194473]
[126.92243958 47.74993134]
[132.79684448 32.43903732]
[149.03384399 30.13856888]
[158.93019104 43.21504593]
[152.30538940 58.21651077]
[135.97445679 59.71074295]
[124.01364136 68.76275635]
[129.93780518 76.18201447]
[133.75436401 84.57344055]
[135.35246277 93.37248993]
[134.76551819 102.02016449]
[149.20144653 106.09497070]
[164.58453369 102.39750671]
[174.73132324 113.30125427]
[189.16725159 117.37606812]
[200.80303955 111.76370239]
[212.75691223 115.47705841]
[218.76577759 125.99818420]
[233.12710571 130.32856750]
[247.48843384 134.65893555]
[261.84976196 138.98931885]
[281.21762085 133.47352600]
[293.88137817 148.06175232]
[308.38732910 151.87969971]
[322.89331055 155.69766235]
[337.39929199 159.51560974]
[351.92593384 152.70707703]
[366.24182129 159.94828796]
[369.36502075 175.68438721]
[358.89968872 187.84400940]
[342.87393188 187.09931946]
[333.58132935 174.02159119]
[319.07534790 170.20362854]
[304.56939697 166.38568115]
[290.06341553 162.56771851]
[281.70159912 168.50691223]
[271.23092651 168.85359192]
[262.11965942 163.25032043]
[257.51937866 153.35064697]
[243.15805054 149.02027893]
[228.79672241 144.68989563]
[214.43539429 140.35951233]
[197.60948181 145.29803467]
[185.09243774 131.81199646]
[170.65652466 127.73718262]
[156.30598450 131.72610474]
[145.12664795 120.53089905]
[130.69071960 116.45608521]
[125.22227478 124.01165771]
[117.94460297 129.84483337]
[109.37973785 133.53720093]
[100.14204407 134.82388306]
[96.97130585 149.48492432]
[93.80056763 164.14598083]
[90.62982941 178.80703735]
[87.45909119 193.46807861]
[84.28835297 208.12913513]
[81.11760712 222.79019165]
[77.94686890 237.45123291]
[88.99718475 243.90075684]
[97.76927948 253.19039917]
[103.55918121 264.55993652]
[105.90640259 277.08279419]
[104.63054657 289.74166870]
[99.84513092 301.51104736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[34 110]
[36 108]
[37 107]
[38 106]
[39 105]
[40 103]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[48 95]
[49 94]
[50 93]
[52 91]
[53 90]
[55 88]
[56 86]
[57 85]
[58 84]
[59 83]
[61 81]
[62 80]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[111 118]
[112 117]
[122 159]
[123 158]
[125 156]
[126 155]
[129 153]
[130 152]
[131 151]
[132 150]
[134 146]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
