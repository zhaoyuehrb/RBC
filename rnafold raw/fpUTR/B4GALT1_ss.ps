%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCUCGGGCGGCUUCUCGCCGCUCCCAGGUCUGGCUGGCUGGAGGAGUCUCAGCUCUCAGCCGCUCGCCCGCCCCCGCUCCGGGCCCUCCCCUAGUCGCCGCUGUGGGGCAGCGCCUGGCGGGCGGCCCGCGGGCGGGUCGCCUCCCCUCCUGUAGCCCACACCCUUCUUAAAGCGGCGGCGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[3.12156177 720.62005615]
[-7.00552464 727.25646973]
[-10.44688320 741.85632324]
[-13.88824177 756.45623779]
[-17.32960129 771.05615234]
[-15.07841396 787.85998535]
[-30.60234642 794.67492676]
[-41.44844055 781.64422607]
[-31.92950058 767.61480713]
[-28.48814201 753.01489258]
[-25.04678154 738.41497803]
[-21.60542297 723.81506348]
[-27.56273079 707.31634521]
[-14.85352039 694.00274658]
[-11.65402508 679.34790039]
[-8.45453072 664.69311523]
[-5.25503635 650.03833008]
[-2.05554223 635.38354492]
[1.14395237 620.72869873]
[4.34344673 606.07391357]
[7.54294109 591.41912842]
[10.74243546 576.76428223]
[13.94192982 562.10949707]
[17.14142418 547.45471191]
[20.34091949 532.79992676]
[15.49640083 518.71514893]
[25.99921227 506.88293457]
[18.77970314 488.95632935]
[32.53495026 474.23620605]
[35.24815750 459.48361206]
[37.96136856 444.73104858]
[27.57702637 434.08663940]
[25.42631912 419.19238281]
[32.54146576 405.73028564]
[46.37914658 398.96087646]
[49.09235382 384.20831299]
[37.81285095 369.80645752]
[40.67327881 351.41546631]
[56.32121277 340.76058960]
[58.54516602 325.92639160]
[60.76911926 311.09216309]
[62.99307632 296.25793457]
[65.21703339 281.42373657]
[59.45223618 267.68997192]
[69.15008545 255.18946838]
[71.37403870 240.35525513]
[73.59799194 225.52104187]
[75.82195282 210.68681335]
[78.04590607 195.85260010]
[65.65740967 187.54653931]
[58.07257080 174.63221741]
[56.84198761 159.64399719]
[62.26312256 145.55033875]
[73.31071472 135.16583252]
[87.83022308 130.58924866]
[90.05417633 115.75503540]
[83.97335052 109.50194550]
[81.40484619 101.16646576]
[82.91155243 92.57534790]
[88.16328430 85.61137390]
[96.00907898 81.80074310]
[91.14383698 66.74617767]
[101.23809052 55.79376602]
[104.19484711 41.08806992]
[107.15160370 26.38236809]
[110.10836029 11.67666912]
[113.06511688 -3.02903032]
[116.02186584 -17.73472977]
[118.97862244 -32.44042969]
[121.93537903 -47.14612961]
[113.44910431 -60.20832443]
[116.65716553 -75.07987213]
[129.16227722 -83.08973694]
[132.11901855 -97.79544067]
[135.07577515 -112.50113678]
[137.91085815 -127.23078156]
[140.62406921 -141.98335266]
[143.33728027 -156.73593140]
[146.05047607 -171.48851013]
[148.76368713 -186.24108887]
[146.90336609 -192.61569214]
[148.33868408 -198.13787842]
[151.81822205 -201.43307495]
[155.01771545 -216.08787537]
[158.21720886 -230.74267578]
[161.41670227 -245.39747620]
[164.61619568 -260.05227661]
[160.00053406 -275.18524170]
[170.27449036 -285.96923828]
[173.47398376 -300.62405396]
[176.55221558 -315.30480957]
[179.50897217 -330.01049805]
[182.46572876 -344.71618652]
[185.42248535 -359.42190552]
[188.25756836 -374.15155029]
[190.97076416 -388.90411377]
[193.68397522 -403.65667725]
[196.39718628 -418.40927124]
[190.39492798 -433.67050171]
[200.82069397 -446.32891846]
[216.94934082 -443.36260986]
[222.18910217 -427.82308960]
[211.14976501 -415.69604492]
[208.43655396 -400.94348145]
[205.72334290 -386.19091797]
[203.01013184 -371.43832397]
[204.89575195 -364.27825928]
[200.12818909 -356.46514893]
[197.17143250 -341.75942993]
[194.21467590 -327.05374146]
[191.25791931 -312.34805298]
[193.02488708 -305.15777588]
[188.12878418 -297.42456055]
[184.92929077 -282.76974487]
[189.77381897 -268.68499756]
[179.27099609 -256.85278320]
[176.07150269 -242.19798279]
[172.87200928 -227.54318237]
[169.67251587 -212.88838196]
[166.47302246 -198.23358154]
[163.51626587 -183.52787781]
[160.80305481 -168.77529907]
[158.08985901 -154.02272034]
[155.37664795 -139.27014160]
[152.66343689 -124.51757050]
[154.54905701 -117.35749054]
[149.78147888 -109.54438019]
[146.82472229 -94.83868408]
[143.86796570 -80.13298798]
[152.30549622 -67.91235352]
[149.51640320 -52.95656586]
[136.64108276 -44.18937302]
[133.68432617 -29.48367310]
[130.72756958 -14.77797413]
[127.77081299 -0.07227497]
[124.81405640 14.63342476]
[121.85729980 29.33912468]
[118.90055084 44.04482269]
[115.94379425 58.75052261]
[121.02052307 72.75324249]
[110.71478271 84.75749969]
[118.35160828 103.21850586]
[104.88839722 117.97898865]
[102.66444397 132.81320190]
[115.20352936 141.44644165]
[122.72016907 154.61408997]
[123.76999664 169.67788696]
[118.19821930 183.64628601]
[107.15972137 193.76858521]
[92.88011932 198.07655334]
[90.65616608 212.91076660]
[88.43221283 227.74499512]
[86.20825958 242.57920837]
[83.98430634 257.41342163]
[89.59002686 272.20825195]
[80.05124664 283.64767456]
[77.82729340 298.48190308]
[75.60334015 313.31613159]
[73.37938690 328.15032959]
[71.15542603 342.98455811]
[79.96261597 351.00204468]
[83.75914001 362.16400146]
[81.70897675 373.65249634]
[74.43700409 382.62582397]
[63.84493256 386.92150879]
[61.13172150 401.67410278]
[71.65541840 412.92388916]
[73.51525116 428.03662109]
[66.20599365 441.19104004]
[52.71394348 447.44424438]
[50.00073624 462.19683838]
[47.28752899 476.94940186]
[53.98039246 485.55215454]
[54.80661011 496.19995117]
[49.73384857 505.34759521]
[40.65401459 510.08242798]
[45.26968384 525.21539307]
[34.99571991 535.99938965]
[31.79622650 550.65417480]
[28.59673309 565.30902100]
[25.39723778 579.96380615]
[22.19774437 594.61859131]
[18.99824905 609.27343750]
[15.79875469 623.92822266]
[12.59926033 638.58300781]
[9.39976597 653.23779297]
[6.20027161 667.89263916]
[3.00077701 682.54742432]
[-0.19871750 697.20220947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[27 176]
[29 172]
[30 171]
[31 170]
[35 166]
[36 165]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[55 144]
[56 143]
[61 141]
[63 139]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[73 129]
[74 128]
[75 127]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[89 114]
[90 113]
[91 111]
[92 110]
[93 109]
[94 108]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
