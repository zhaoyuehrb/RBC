%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCGCGGGCAGCUCACUUCCGCCCGGCAGGUGACAGCCGCGGGGCUCCGAGCCGCCGGCAGCCCGGACGCACCGGGAGAGCGAGAGGUGGAGGCCGCGGACAUUUUGGUGCCAAGCCGAACCGAGCCGGGGCGCCGGGAGCUAUUGGGACCUGCGGAAGCCUGGCUACAGAUAAGGGACCAAA\
) } def
/len { sequence length } bind def

/coor [
[91.45896149 127.95896149]
[88.22596741 142.60641479]
[84.99296570 157.25386047]
[81.75997162 171.90130615]
[87.21900177 187.36517334]
[76.35229492 199.64714050]
[60.33858871 196.11257935]
[55.65140533 180.39753723]
[67.11251831 168.66830444]
[70.34552002 154.02085876]
[73.57851410 139.37341309]
[76.81151581 124.72596741]
[73.88928223 101.74476624]
[85.70853424 88.34748077]
[78.94338226 74.95969391]
[72.17823029 61.57191467]
[65.41307831 48.18413162]
[58.64792633 34.79634857]
[51.97103500 28.53300285]
[51.88368988 21.12785721]
[45.34319305 7.62890005]
[30.68443680 2.36024952]
[24.24373817 -11.42278481]
[29.35692787 -25.36519814]
[22.81642914 -38.86415482]
[16.27592850 -52.36311340]
[9.73542881 -65.86206818]
[3.19492912 -79.36103058]
[-3.45812893 -92.80487061]
[-10.22328091 -106.19264984]
[-16.98843193 -119.58043671]
[-32.62472534 -129.28863525]
[-30.98816299 -146.75265503]
[-37.97607803 -160.02551270]
[-44.96399307 -173.29838562]
[-51.86510086 -171.61727905]
[-59.36793900 -172.01533508]
[-66.82910919 -174.68611145]
[-73.54859924 -179.62100220]
[-78.83358765 -186.59437561]
[-82.06565857 -195.16865540]
[-92.12743378 -206.29342651]
[-102.18920135 -217.41821289]
[-112.25097656 -228.54299927]
[-122.31274414 -239.66777039]
[-132.37451172 -250.79255676]
[-145.20640564 -252.22125244]
[-153.35791016 -261.71099854]
[-152.86605835 -273.81002808]
[-162.74053955 -285.10140991]
[-172.61500549 -296.39276123]
[-182.48948669 -307.68411255]
[-188.64326477 -310.18786621]
[-192.07917786 -314.74603271]
[-192.49755859 -319.52169800]
[-201.98921204 -331.13671875]
[-211.48086548 -342.75173950]
[-226.20455933 -348.54168701]
[-228.26683044 -363.29281616]
[-237.85520935 -374.82812500]
[-247.53962708 -386.28289795]
[-262.61047363 -383.67208862]
[-276.87051392 -388.92074585]
[-286.52459717 -400.52526855]
[-289.05700684 -415.30508423]
[-283.88629150 -429.27392578]
[-293.57070923 -440.72872925]
[-303.25512695 -452.18350220]
[-312.93954468 -463.63827515]
[-322.62396240 -475.09307861]
[-338.42669678 -477.85943604]
[-345.98995972 -492.00781250]
[-339.51184082 -506.68478394]
[-323.96182251 -510.63143921]
[-311.26852417 -500.82022095]
[-311.16915894 -484.77749634]
[-301.48474121 -473.32269287]
[-291.80032349 -461.86791992]
[-282.11590576 -450.41314697]
[-272.43148804 -438.95834351]
[-257.79718018 -441.73361206]
[-243.64443970 -436.77819824]
[-233.80732727 -425.32839966]
[-231.00366211 -410.39401245]
[-236.08483887 -395.96731567]
[-226.40042114 -384.51254272]
[-219.66757202 -381.42831421]
[-216.65182495 -372.78448486]
[-202.60704041 -367.82531738]
[-199.86585999 -352.24337769]
[-190.37420654 -340.62838745]
[-180.88253784 -329.01336670]
[-171.19812012 -317.55859375]
[-161.32365417 -306.26724243]
[-151.44917297 -294.97586060]
[-141.57470703 -283.68450928]
[-124.68943787 -278.93502808]
[-121.24973297 -260.85433960]
[-111.18796539 -249.72955322]
[-101.12619019 -238.60476685]
[-91.06442261 -227.47998047]
[-81.00264740 -216.35519409]
[-70.94087982 -205.23042297]
[-63.44087982 -205.23042297]
[-68.07611084 -219.49627686]
[-55.94082642 -228.31301880]
[-43.80561447 -219.49617004]
[-48.44087982 -205.23042297]
[-40.94087982 -205.23042297]
[-30.87910843 -216.35519409]
[-20.81733894 -227.47998047]
[-10.75556755 -238.60476685]
[-0.69379616 -249.72955322]
[-0.05842669 -265.76000977]
[12.95562649 -275.14160156]
[28.36509705 -270.67752075]
[34.34915543 -255.79228210]
[26.31734657 -241.90454102]
[10.43098545 -239.66777039]
[0.36921448 -228.54299927]
[-9.69255638 -217.41821289]
[-19.75432777 -206.29342651]
[-29.81609917 -195.16865540]
[-31.69112396 -180.28630066]
[-24.70320892 -167.01342773]
[-17.71529388 -153.74057007]
[-6.24794436 -149.85105896]
[-0.32200605 -138.83354187]
[-3.60064983 -126.34558868]
[3.16450191 -112.95780182]
[9.92965412 -99.57002258]
[15.76410484 -95.00899506]
[16.69388771 -85.90152740]
[23.23438644 -72.40257263]
[29.77488708 -58.90361404]
[36.31538773 -45.40465546]
[42.85588455 -31.90569878]
[56.96678162 -27.27771759]
[63.79207611 -13.68102646]
[58.84214783 1.08840036]
[65.38265228 14.58735847]
[72.03570557 28.03119850]
[78.80085754 41.41897964]
[85.56600952 54.80676270]
[92.33116150 68.19454193]
[99.09631348 81.58232880]
[120.93552399 84.29911804]
[132.03738403 111.07635498]
[141.72180176 122.53113556]
[151.40621948 133.98591614]
[161.09063721 145.44070435]
[176.59812927 146.90870667]
[186.25633240 158.66345215]
[184.76124573 173.43844604]
[194.44566345 184.89321899]
[204.13008118 196.34800720]
[214.99919128 206.68544006]
[226.92488098 215.78367615]
[243.24989319 217.34111023]
[249.81658936 232.36811829]
[239.86968994 245.40618896]
[223.64172363 243.04287720]
[217.82662964 227.70936584]
[205.90093994 218.61112976]
[195.11859131 229.03901672]
[203.81326294 241.26205444]
[212.50791931 253.48509216]
[227.63856506 259.80932617]
[229.45828247 276.10717773]
[216.09512329 285.61285400]
[201.29594421 278.54769897]
[200.28488159 262.17974854]
[191.59020996 249.95672607]
[182.89555359 237.73367310]
[180.70832825 226.98686218]
[182.28422546 217.43499756]
[186.68621826 210.22016907]
[192.67529297 206.03242493]
[182.99087524 194.57763672]
[173.30645752 183.12286377]
[158.48861694 182.13960266]
[148.50405884 170.66078186]
[149.63584900 155.12512207]
[139.95143127 143.67033386]
[130.26701355 132.21556091]
[120.58259583 120.76077271]
[113.30168915 122.56031799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[14 146]
[15 145]
[16 144]
[17 143]
[18 142]
[20 141]
[21 140]
[24 137]
[25 136]
[26 135]
[27 134]
[28 133]
[29 131]
[30 130]
[31 129]
[33 126]
[34 125]
[35 124]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[49 96]
[50 95]
[51 94]
[52 93]
[55 92]
[56 91]
[57 90]
[59 88]
[60 86]
[61 85]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[148 186]
[149 185]
[150 184]
[151 183]
[154 180]
[155 179]
[156 178]
[157 164]
[158 163]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
