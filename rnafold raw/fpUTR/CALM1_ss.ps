%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUACGGCGCACCAUAUAUAUAUCGCGGGGCGCAGACUCGCGCUCCGGCAGUGGUGCUGGGAGUGUCGUGGACGCCGUGCCGUUACUCGUAGUCAGGCGGCGGCGCAGGCGGCGGCGGCGGCAUAGCGCACAGCGCGCCUUAGCAGCAGCAGCAGCAGCAGCGGCAUCGGAGGUACCCCCGCCGUCGCAGCCCCCGCGCUGGUGCAGCCACCCUCGCUCCCUCUGCUCUUCCUCCCUUCGCUCGCACC\
) } def
/len { sequence length } bind def

/coor [
[21.08284378 283.35473633]
[20.39087296 298.33874512]
[12.88249969 311.32431030]
[0.24151069 319.39929199]
[-14.69729233 320.75286865]
[-28.58381271 315.08148193]
[-38.30393219 303.65698242]
[-41.67786789 289.04135132]
[-37.94818497 274.51068115]
[-49.04456329 284.60379028]
[-60.14093781 294.69686890]
[-71.23731995 304.78994751]
[-82.33369446 314.88305664]
[-93.43006897 324.97613525]
[-104.52644348 335.06921387]
[-101.28226471 343.11801147]
[-100.16014862 351.70401001]
[-101.22222137 360.27853394]
[-104.39131927 368.29595947]
[-109.45652008 375.24856567]
[-116.08715057 380.69866943]
[-123.85438538 384.30606079]
[-132.25892639 385.84933472]
[-140.76316833 385.23950195]
[-148.82551575 382.52487183]
[-155.93490601 377.88760376]
[-167.87828064 386.96264648]
[-179.82165527 396.03765869]
[-191.76501465 405.11267090]
[-203.70838928 414.18768311]
[-215.65176392 423.26269531]
[-227.59512329 432.33770752]
[-239.53849792 441.41271973]
[-241.42687988 457.10379028]
[-253.90885925 466.79791260]
[-269.57907104 464.74374390]
[-279.14068604 452.15997314]
[-276.92095947 436.51232910]
[-264.23681641 427.08432007]
[-248.61351013 429.46936035]
[-236.67015076 420.39434814]
[-224.72677612 411.31933594]
[-212.78340149 402.24429321]
[-200.84002686 393.16928101]
[-188.89666748 384.09426880]
[-176.95329285 375.01925659]
[-165.00991821 365.94424438]
[-167.32606506 344.49276733]
[-156.07998657 325.92419434]
[-135.74951172 317.94241333]
[-114.61953735 323.97283936]
[-103.52315521 313.87976074]
[-92.42678070 303.78665161]
[-81.33040619 293.69357300]
[-70.23402405 283.60049438]
[-59.13764954 273.50741577]
[-48.04127502 263.41430664]
[-37.67142487 252.57612610]
[-28.07802200 241.04501343]
[-25.88614464 226.31257629]
[-11.11212349 220.65228271]
[-1.51872027 209.12117004]
[8.07468319 197.59005737]
[17.66808701 186.05894470]
[27.26149178 174.52781677]
[25.64944649 159.76513672]
[35.21425629 147.93428040]
[50.70964813 146.34352112]
[52.56684494 139.20932007]
[60.49755859 134.72843933]
[70.23567963 123.31927490]
[79.97380066 111.91011047]
[75.01083374 93.60877228]
[85.61523438 75.64378357]
[73.90463257 66.27031708]
[62.19403839 56.89684677]
[50.48344040 47.52337646]
[38.77284622 38.14990997]
[27.00335121 28.85050011]
[15.17542648 19.62552452]
[3.34750128 10.40054703]
[-9.72550297 13.58028412]
[-22.06567764 8.72849083]
[-29.25829315 -2.17872858]
[-28.86912155 -15.04366875]
[-40.57971954 -24.41713905]
[-52.29031372 -33.79060745]
[-68.43437195 -38.96803284]
[-67.92840576 -55.91442871]
[-51.50421143 -60.11946106]
[-42.91684341 -45.50120544]
[-31.20624733 -36.12773514]
[-19.49565125 -26.75426483]
[-2.86249924 -29.31404686]
[10.73605633 -18.83603096]
[12.57247829 -1.42737758]
[24.40040207 7.79759932]
[36.22832870 17.02257538]
[43.41754532 18.65385628]
[48.14631653 26.43931198]
[59.85691071 35.81278229]
[71.56750488 45.18625259]
[83.27810669 54.55971909]
[94.98870087 63.93318939]
[109.95259857 64.97324371]
[122.84732056 57.30994797]
[135.74205017 49.64665222]
[148.63676453 41.98335648]
[161.53149414 34.32006073]
[170.61555481 16.30640221]
[189.95477295 16.96406174]
[202.65203857 8.97785854]
[215.34930420 0.99165481]
[228.04656982 -6.99454832]
[240.74383545 -14.98075199]
[248.30601501 -28.87765503]
[263.19891357 -29.10432243]
[275.89617920 -37.09052658]
[283.45834351 -50.98743057]
[298.35122681 -51.21409607]
[311.04849243 -59.20030212]
[323.74575806 -67.18650055]
[325.53674316 -77.88331604]
[332.75976562 -85.67749786]
[342.86398315 -88.17041779]
[352.46984863 -84.77610779]
[365.36456299 -92.43940735]
[378.25927734 -100.10270691]
[391.15402222 -107.76599884]
[396.91436768 -114.82241821]
[404.26013184 -115.44345856]
[417.25048828 -122.94345856]
[430.24087524 -130.44345093]
[443.23126221 -137.94345093]
[456.22164917 -145.44345093]
[469.21203613 -152.94345093]
[482.20239258 -160.44345093]
[480.97924805 -172.93417358]
[484.43682861 -184.94354248]
[492.04937744 -194.78733826]
[502.71127319 -201.10020447]
[514.89758301 -203.02490234]
[526.88214111 -200.32859802]
[535.72949219 -212.44157410]
[537.62109375 -228.14929199]
[551.37603760 -233.86331177]
[560.22344971 -245.97627258]
[561.43981934 -262.33026123]
[576.32647705 -269.20910645]
[589.56933594 -259.53649902]
[587.54522705 -243.26274109]
[572.33636475 -237.12890625]
[563.48901367 -225.01593018]
[562.23028564 -210.17462158]
[547.84246826 -203.59419250]
[538.99511719 -191.48123169]
[540.67816162 -189.34051514]
[542.17681885 -187.06690979]
[556.46588135 -191.63011169]
[567.25817871 -203.19889832]
[581.73602295 -199.70011902]
[596.02508545 -204.26332092]
[610.31414795 -208.82650757]
[624.60321045 -213.38970947]
[638.89227295 -217.95291138]
[646.18347168 -231.71795654]
[660.73962402 -236.14213562]
[673.81756592 -229.10627747]
[688.10656738 -233.66946411]
[702.39562988 -238.23266602]
[709.59686279 -243.81092834]
[716.89385986 -242.76206970]
[731.23937988 -247.14463806]
[744.62078857 -257.55487061]
[758.32855225 -247.57821655]
[752.53649902 -231.64434814]
[735.62188721 -232.79913330]
[721.27642822 -228.41658020]
[706.95886230 -223.94361877]
[692.66979980 -219.38041687]
[678.38073730 -214.81721497]
[671.80133057 -201.50379944]
[657.37518311 -196.67250061]
[643.45550537 -203.66384888]
[629.16644287 -199.10066223]
[614.87738037 -194.53746033]
[600.58831787 -189.97425842]
[586.29925537 -185.41105652]
[576.52899170 -174.16867065]
[561.02911377 -177.34104919]
[546.74005127 -172.77784729]
[542.37469482 -153.37393188]
[527.48620605 -139.99263000]
[507.47137451 -137.68554688]
[489.70239258 -147.45307922]
[476.71203613 -139.95307922]
[463.72164917 -132.45307922]
[450.73126221 -124.95307159]
[437.74087524 -117.45307159]
[424.75048828 -109.95307159]
[411.76013184 -102.45307159]
[398.81732178 -94.87127686]
[385.92257690 -87.20797729]
[373.02786255 -79.54468536]
[360.13314819 -71.88138580]
[351.90612793 -54.36698532]
[331.73196411 -54.48923874]
[319.03469849 -46.50303650]
[306.33743286 -38.51683044]
[299.68344116 -25.19115639]
[283.88238525 -24.39326096]
[271.18511963 -16.40705681]
[264.53109741 -3.08138132]
[248.73004150 -2.28348613]
[236.03277588 5.70271730]
[223.33551025 13.68892097]
[210.63824463 21.67512321]
[197.94097900 29.66132736]
[196.58523560 39.75865936]
[189.76193237 47.61691284]
[179.53260803 50.49484253]
[169.19479370 47.21478271]
[156.30006409 54.87807846]
[143.40534973 62.54137421]
[130.51062012 70.20467377]
[117.61589813 77.86796570]
[124.30838013 86.98252106]
[126.76563263 97.72549438]
[124.80487823 108.27803040]
[118.97250366 116.94409943]
[110.41790009 122.42300415]
[100.67361450 124.00312805]
[91.38296509 121.64823151]
[81.64484406 133.05738831]
[71.90672302 144.46655273]
[62.24076462 155.93692017]
[63.49554825 171.46313477]
[53.60220718 183.02066040]
[38.79260635 184.12123108]
[29.19920158 195.65234375]
[19.60579872 207.18345642]
[10.01239395 218.71456909]
[0.41899070 230.24568176]
[-2.45907116 245.80291748]
[-16.54690742 250.63841248]
[-26.14031219 262.16952515]
[-11.79019547 257.80212402]
[2.96027303 260.52676392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 57]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[58 246]
[59 245]
[61 243]
[62 242]
[63 241]
[64 240]
[65 239]
[68 236]
[70 235]
[71 234]
[72 233]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 98]
[80 97]
[81 96]
[85 93]
[86 92]
[87 91]
[105 226]
[106 225]
[107 224]
[108 223]
[109 222]
[111 218]
[112 217]
[113 216]
[114 215]
[115 214]
[117 212]
[118 211]
[120 209]
[121 208]
[122 207]
[126 205]
[127 204]
[128 203]
[129 202]
[131 201]
[132 200]
[133 199]
[134 198]
[135 197]
[136 196]
[137 195]
[143 156]
[144 155]
[146 153]
[147 152]
[158 191]
[159 190]
[161 188]
[162 187]
[163 186]
[164 185]
[165 184]
[168 181]
[169 180]
[170 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
