%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCUUGAUUGGGCUGGGGGGGCCAAAUAAAAGCGAUGGCGAUUGGGCUGCCGCGUUUGGCGCUCGGUCCGGUCGCGUCCGACACCCGGUGGGACUCAGAAGGCAGUGGAGCCCCGGCGGCGGCGGCGGCGGCGCGCGGGGGCGACGCGCGGGAACAACGCGAGUCGGCGCGCGGGACGAAGAAUAAUC\
) } def
/len { sequence length } bind def

/coor [
[-144.50321960 208.63278198]
[-148.27969360 203.07586670]
[-151.03192139 196.95486450]
[-165.87289429 199.13328552]
[-180.71386719 201.31172180]
[-195.53671265 203.61024475]
[-210.34045410 206.02870178]
[-225.14421082 208.44717407]
[-230.51377869 212.34385681]
[-236.19172668 212.85600281]
[-240.46582031 210.69615173]
[-255.34013367 212.63397217]
[-270.21441650 214.57179260]
[-285.08874512 216.50961304]
[-299.96304321 218.44743347]
[-314.83734131 220.38525391]
[-329.71163940 222.32307434]
[-344.58593750 224.26091003]
[-359.46023560 226.19873047]
[-374.33453369 228.13655090]
[-389.20883179 230.07437134]
[-404.08312988 232.01219177]
[-410.21826172 241.01550293]
[-420.09545898 245.06521606]
[-430.35382080 243.04475403]
[-437.64437866 235.86027527]
[-452.57363892 237.31542969]
[-467.50286865 238.77058411]
[-482.43212891 240.22572327]
[-497.36138916 241.68087769]
[-512.29064941 243.13601685]
[-527.21990967 244.59117126]
[-530.68377686 247.26271057]
[-534.44061279 248.55413818]
[-538.01788330 248.54379272]
[-541.01757812 247.45623779]
[-543.15783691 245.62500000]
[-558.14996338 246.11073303]
[-573.14208984 246.59645081]
[-586.68450928 254.77658081]
[-599.65563965 247.45545959]
[-614.64776611 247.94119263]
[-629.63989258 248.42692566]
[-644.63201904 248.91264343]
[-655.25537109 260.61392212]
[-671.04510498 261.29266357]
[-682.63342285 250.54620361]
[-683.14520264 234.75021362]
[-672.27679443 223.27616882]
[-656.47625732 222.93142700]
[-645.11779785 233.92051697]
[-630.12567139 233.43478394]
[-615.13348389 232.94906616]
[-600.14135742 232.46333313]
[-587.67132568 224.31796265]
[-573.62786865 231.60432434]
[-558.63568115 231.11859131]
[-543.64355469 230.63285828]
[-528.67504883 229.66191101]
[-513.74578857 228.20677185]
[-498.81652832 226.75161743]
[-483.88726807 225.29647827]
[-468.95803833 223.84132385]
[-454.02877808 222.38618469]
[-439.09951782 220.93103027]
[-424.25170898 208.55725098]
[-406.02096558 217.13789368]
[-391.14666748 215.20007324]
[-376.27236938 213.26223755]
[-361.39807129 211.32441711]
[-346.52377319 209.38659668]
[-331.64944458 207.44877625]
[-316.77514648 205.51095581]
[-301.90084839 203.57313538]
[-287.02655029 201.63531494]
[-272.15225220 199.69749451]
[-257.27795410 197.75967407]
[-242.40364075 195.82185364]
[-227.56268311 193.64341736]
[-212.75892639 191.22496033]
[-197.95516968 188.80648804]
[-191.85202026 184.61932373]
[-182.89228821 186.47074890]
[-168.05131531 184.29231262]
[-153.21034241 182.11389160]
[-144.68692017 159.53405762]
[-124.32649231 146.36521912]
[-100.01170349 147.86557007]
[-81.25146484 163.58287048]
[-67.19336700 158.35125732]
[-53.13526535 153.11964417]
[-39.07716751 147.88803101]
[-25.06188583 142.54275513]
[-11.09034443 137.08418274]
[2.88119674 131.62561035]
[13.08061886 117.35234070]
[31.25749779 120.25754547]
[45.13881683 114.57344055]
[59.02013397 108.88934326]
[72.90145111 103.20523834]
[86.78276825 97.52114105]
[71.78287506 97.57762146]
[58.96479416 89.78681183]
[52.10787964 76.44580078]
[53.23386383 61.48811722]
[62.01075745 49.32398605]
[75.85073090 43.53994370]
[90.67312622 45.84138870]
[102.10762024 55.54975510]
[106.78284454 69.80373383]
[120.15895844 63.01552963]
[133.53506470 56.22732544]
[138.53262329 41.47394562]
[152.19459534 34.78028870]
[166.22889709 39.63562012]
[179.60499573 32.84741211]
[192.98110962 26.05920792]
[206.35722351 19.27100372]
[219.73332214 12.48279762]
[228.53800964 -0.66209376]
[243.38891602 0.47788149]
[256.76504517 -6.31032372]
[270.14114380 -13.09852982]
[283.46185303 -19.99481583]
[296.72628784 -26.99873161]
[305.31695557 -40.28447342]
[320.18438721 -39.38513184]
[333.44882202 -46.38904572]
[341.71624756 -60.55172729]
[358.11166382 -60.20269775]
[365.76889038 -45.70100403]
[356.81079102 -31.96475029]
[340.45272827 -33.12461472]
[327.18829346 -26.12069893]
[319.54638672 -13.33592224]
[303.73019409 -13.73429966]
[290.46575928 -6.73038340]
[286.01245117 -0.81863403]
[276.92935181 0.27757868]
[263.55322266 7.06578398]
[250.17712402 13.85398960]
[242.32919312 26.51334381]
[226.52153015 25.85890579]
[213.14541626 32.64710999]
[199.76931763 39.43531799]
[186.39320374 46.22352219]
[173.01710510 53.01172638]
[168.64999390 67.20552826]
[155.18142700 74.28028107]
[140.32327271 69.60343170]
[126.94715881 76.39163971]
[113.57105255 83.17984009]
[113.81394958 98.17787933]
[127.40285492 104.52938080]
[140.99176025 110.88088226]
[155.09289551 104.12129974]
[170.22705078 108.05724335]
[179.24832153 120.83029175]
[177.89714050 136.40939331]
[166.81152344 147.43856812]
[151.22572327 148.71018982]
[138.49890137 139.62382507]
[134.64025879 124.46978760]
[121.05135345 118.11828613]
[107.46244812 111.76678467]
[92.46687317 111.40245819]
[78.58555603 117.08656311]
[64.70423889 122.77066040]
[50.82291794 128.45475769]
[36.94159698 134.13885498]
[31.24096870 145.71928406]
[19.55086708 150.16377258]
[8.33977127 145.59715271]
[-5.63177061 151.05572510]
[-19.60331154 156.51429749]
[-26.46969795 162.56056213]
[-33.84555054 161.94612122]
[-47.90365219 167.17773438]
[-61.96175003 172.40936279]
[-76.01985168 177.64097595]
[-75.53812408 184.45379639]
[-76.24475861 191.23953247]
[-78.11576080 197.79267883]
[-81.09193420 203.91525269]
[-85.08072662 209.42272949]
[-89.95909882 214.14961243]
[-95.57735443 217.95442200]
[-101.76368713 220.72392273]
[-108.32947540 222.37649536]
[-115.07500458 222.86450195]
[-121.79554749 222.17572021]
[-128.28758240 220.33358765]
[-134.35498047 217.39643860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 85]
[4 84]
[5 83]
[6 81]
[7 80]
[8 79]
[11 78]
[12 77]
[13 76]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[26 65]
[27 64]
[28 63]
[29 62]
[30 61]
[31 60]
[32 59]
[37 58]
[38 57]
[39 56]
[41 54]
[42 53]
[43 52]
[44 51]
[89 180]
[90 179]
[91 178]
[92 177]
[93 175]
[94 174]
[95 173]
[97 170]
[98 169]
[99 168]
[100 167]
[101 166]
[110 152]
[111 151]
[112 150]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[121 141]
[122 140]
[123 139]
[124 137]
[125 136]
[127 134]
[128 133]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
