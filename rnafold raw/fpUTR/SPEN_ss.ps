%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGCGAGGCCCGAGAGUCAGAACCUGGGGGAGAGGGAUGGUCUCUGCACGGGGGGGAGCCGGAGGAGCCGCCGCCGCUGCCGACGCCACCGCCGCAGCCGCCGCCGCCGCCGCCCCGGCACCCGCCUCCCGGCGCUGACGGUCUCGUACGAAGCCGGCGAGGGGGAGCCAGCAGCGGCGGUCGCCGGCACGCCGCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[103.11765289 203.25122070]
[86.73583221 202.49754333]
[79.43894958 187.81123352]
[88.73341370 174.30030823]
[89.42279053 159.31616211]
[90.11216736 144.33201599]
[90.80154419 129.34786987]
[87.96729279 122.51837921]
[91.61803436 114.13989258]
[84.66176605 111.33626556]
[72.84966278 120.58149719]
[70.74922943 105.72901154]
[63.79296112 102.92538452]
[54.07310486 114.35011292]
[44.35325241 125.77484131]
[41.30398178 141.29942322]
[27.16372871 145.97943115]
[17.44387436 157.40415955]
[14.26439953 165.97257996]
[7.48647594 168.92800903]
[-2.40731144 180.20245361]
[-5.07936192 196.38244629]
[-20.52088356 201.90435791]
[-32.84696198 191.08770752]
[-29.37758636 175.05975342]
[-13.68175030 170.30867004]
[-3.78796291 159.03422546]
[6.01914501 147.68431091]
[15.73899841 136.25958252]
[18.09304237 121.55217743]
[32.92852402 116.05499268]
[42.64837646 104.63025665]
[52.36822891 93.20552826]
[50.88392258 85.85387421]
[37.81750488 93.22060394]
[26.77370834 83.07000732]
[33.01494598 69.43010712]
[47.91530609 71.15056610]
[46.43099976 63.79890823]
[33.03990936 57.04030609]
[23.96392822 55.96632004]
[19.49658394 50.07415390]
[6.21063709 43.11113358]
[-7.07530975 36.14811707]
[-20.36125565 29.18509865]
[-36.17614365 29.63220024]
[-43.85740280 16.87102699]
[-57.14335251 9.90800953]
[-72.95823669 10.35511017]
[-80.63949585 -2.40606165]
[-93.92544556 -9.36907959]
[-107.21139526 -16.33209801]
[-120.55030060 -23.19310951]
[-133.94139099 -29.95171165]
[-147.33247375 -36.71031570]
[-160.77496338 -43.36611176]
[-174.26805115 -49.91871262]
[-190.06181335 -48.98717880]
[-198.13052368 -61.50696564]
[-211.62361145 -68.05956268]
[-226.39747620 -63.12288284]
[-239.98803711 -69.96036530]
[-244.60336304 -84.07540894]
[-258.09646606 -90.62800598]
[-274.98565674 -92.10826111]
[-278.23864746 -108.74720001]
[-263.15048218 -116.47918701]
[-251.54385376 -104.12109375]
[-238.05076599 -97.56849670]
[-224.10377502 -102.66918182]
[-210.32652283 -96.21612549]
[-205.07101440 -81.55265045]
[-191.57792664 -75.00005341]
[-176.74928284 -76.40027618]
[-167.71545410 -63.41180038]
[-154.22236633 -56.85919952]
[-146.82872009 -56.76502228]
[-140.57388306 -50.10140610]
[-127.18278503 -43.34280014]
[-113.79170227 -36.58419800]
[-106.40036774 -36.37673187]
[-100.24837494 -29.61804390]
[-86.96242523 -22.65502548]
[-73.67648315 -15.69200802]
[-58.81189346 -16.63715172]
[-50.18033218 -3.37793732]
[-36.89438629 3.58508062]
[-22.02979851 2.63993788]
[-13.39823818 15.89915180]
[-0.11229176 22.86216927]
[13.17365551 29.82518768]
[26.45960236 36.78820419]
[39.79851151 43.64921570]
[53.18960190 50.40782166]
[113.31578064 89.02876282]
[127.99591064 85.94757080]
[139.91246033 75.54053497]
[153.95767212 80.49849701]
[168.63780212 77.41730499]
[182.06179810 64.81584167]
[198.51202393 70.92204285]
[213.14321899 67.61624908]
[227.77441406 64.31046295]
[242.40559387 61.00466919]
[254.16127014 50.41624451]
[268.28082275 55.15839386]
[282.91198730 51.85260010]
[297.51742554 48.43479919]
[312.09625244 44.90518570]
[326.67504883 41.37557220]
[341.25387573 37.84595871]
[355.83270264 34.31634140]
[370.41149902 30.78672791]
[384.99032593 27.25711441]
[396.58233643 16.48978424]
[410.77288818 21.01500511]
[425.35171509 17.48538971]
[430.47427368 7.88339376]
[439.84411621 2.79290819]
[450.24975586 3.68371630]
[458.27310181 10.02073097]
[472.95324707 6.93954039]
[487.63336182 3.85835004]
[499.54992676 -6.54868650]
[513.59515381 -1.59072363]
[528.27526855 -4.67191410]
[542.95538330 -7.75310421]
[550.71563721 -12.58070755]
[557.88403320 -10.76721287]
[572.60968018 -13.62307930]
[587.33526611 -16.47894669]
[602.06091309 -19.33481216]
[616.76422119 -22.30342865]
[631.44433594 -25.38461876]
[646.12445068 -28.46580887]
[660.80462646 -31.54699898]
[675.48474121 -34.62818909]
[684.14257812 -47.57730484]
[699.07421875 -50.49294662]
[711.36584473 -42.15922165]
[726.04602051 -45.24041367]
[740.70208740 -48.43399811]
[755.33325195 -51.73978806]
[769.96447754 -55.04557800]
[781.63653564 -66.56487274]
[797.37469482 -61.95589066]
[800.98883057 -45.95995712]
[788.76104736 -35.03231430]
[773.27026367 -40.41438675]
[758.63903809 -37.10859680]
[744.00787354 -33.80280685]
[738.17352295 -29.26018715]
[729.12719727 -30.56028175]
[714.44702148 -27.47909164]
[706.54339600 -14.90660095]
[691.69952393 -11.57271194]
[678.56591797 -19.94805908]
[663.88580322 -16.86686707]
[649.20568848 -13.78567791]
[634.52551270 -10.70448685]
[619.84539795 -7.62329674]
[613.94213867 -3.17061758]
[604.91674805 -4.60918808]
[590.19116211 -1.75332153]
[575.46551514 1.10254514]
[560.73986816 3.95841169]
[546.03656006 6.92702723]
[531.35644531 10.00821781]
[516.67633057 13.08940792]
[505.80978394 23.27605629]
[490.71456909 18.53848267]
[476.03442383 21.61967278]
[461.35430908 24.70086288]
[447.93963623 38.62305069]
[428.88131714 32.06420517]
[414.30252075 35.59381866]
[403.75326538 46.10868835]
[388.51992798 41.83592987]
[373.94110107 45.36554337]
[359.36230469 48.89515686]
[344.78347778 52.42477036]
[330.20468140 55.95438385]
[315.62585449 59.48400116]
[301.04705811 63.01361465]
[295.28302002 67.64510345]
[286.21780396 66.48379517]
[271.58660889 69.78958130]
[260.87744141 80.14155579]
[245.71139526 75.63586426]
[231.08020020 78.94165039]
[216.44900513 82.24744415]
[201.81782532 85.55323029]
[195.09434509 95.61273193]
[182.92828369 98.48451996]
[171.71899414 92.09743500]
[157.03886414 95.17862701]
[146.17233276 105.36528015]
[131.07710266 100.62770081]
[116.39696503 103.70889282]
[106.58985901 115.05880737]
[105.78569031 130.03723145]
[105.09631348 145.02139282]
[104.40694427 160.00553894]
[103.71756744 174.98968506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[9 200]
[13 33]
[14 32]
[15 31]
[17 29]
[18 28]
[20 27]
[21 26]
[39 94]
[40 93]
[42 92]
[43 91]
[44 90]
[45 89]
[47 87]
[48 86]
[50 84]
[51 83]
[52 82]
[53 80]
[54 79]
[55 78]
[56 76]
[57 75]
[59 73]
[60 72]
[63 69]
[64 68]
[95 199]
[96 198]
[98 196]
[99 195]
[101 192]
[102 191]
[103 190]
[104 189]
[106 187]
[107 186]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[116 176]
[117 175]
[121 173]
[122 172]
[123 171]
[125 169]
[126 168]
[127 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[140 154]
[141 153]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
