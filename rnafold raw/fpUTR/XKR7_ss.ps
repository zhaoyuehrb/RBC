%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCAGGCGGGUGGGGGCGGGGCGGGGCGGCGCCGAGGAGAAUGAAUAAUUGAAGUGGAGGGGAGGAGGAAGAAGAGGAGAAGGAGGAAGAGGAGCCGCCCGCGCAGGGUCCUCCCCACGCCGCACCCCCCUCCGCCGCCCGGAAGUCGCUCCCCGCCUCCCUCUCCGCCAAC\
) } def
/len { sequence length } bind def

/coor [
[82.21034241 610.84326172]
[66.87371826 610.01647949]
[54.01396561 601.61877441]
[47.09029007 587.90893555]
[47.96512604 572.57501221]
[56.40314484 559.74163818]
[70.13456726 552.86096191]
[70.94201660 537.88269043]
[71.74946594 522.90447998]
[72.55690765 507.92620850]
[73.36435699 492.94796753]
[74.03733063 477.96307373]
[66.76187897 464.96624756]
[74.98956299 451.45269775]
[75.52800751 436.46237183]
[76.06645203 421.47204590]
[76.47032166 406.47747803]
[76.73958588 391.47988892]
[77.00885010 376.48233032]
[77.27811432 361.48474121]
[77.54737854 346.48715210]
[77.81665039 331.48956299]
[78.08591461 316.49197388]
[75.88334656 313.69827271]
[74.94264221 309.68795776]
[75.82565308 305.07427979]
[78.79512024 300.70016479]
[79.87131500 285.73883057]
[80.94750977 270.77746582]
[82.02369690 255.81613159]
[83.09989166 240.85478210]
[84.17608643 225.89344788]
[75.66807556 210.56109619]
[86.07865143 195.39099121]
[86.88610077 180.41275024]
[87.69355011 165.43449402]
[84.90447998 158.56306458]
[88.65231323 150.19534302]
[89.72850800 135.23400879]
[82.92427826 121.98440552]
[91.63175201 108.77492523]
[82.75437927 120.86592102]
[69.97390747 128.71827698]
[55.17618179 131.17332458]
[40.54470444 127.86880493]
[28.23845673 119.29230499]
[20.07330894 106.70936584]
[17.25408363 91.97668457]
[20.19678116 77.26816559]
[28.46718216 64.75415802]
[40.84493637 56.28118515]
[55.50361252 53.09949493]
[70.28022766 55.67857361]
[82.99439240 63.63785172]
[91.77002716 75.80288696]
[95.31228638 90.37950897]
[100.07540131 76.15584564]
[104.83851624 61.93217468]
[109.60163879 47.70850754]
[114.36475372 33.48484039]
[119.12786865 19.26117325]
[123.89098358 5.03750467]
[128.65409851 -9.18616295]
[133.41722107 -23.40983009]
[133.17741394 -32.57538605]
[138.39559937 -37.84473419]
[143.41328430 -51.98060608]
[136.58853149 -57.67737579]
[131.44683838 -64.90608215]
[128.31796265 -73.18636322]
[127.39832306 -81.97098541]
[128.73866272 -90.68200684]
[132.24136353 -98.74881744]
[137.66748047 -105.64549255]
[144.65303040 -110.92508698]
[152.73339844 -114.24861908]
[161.37420654 -115.40678406]
[170.00668335 -114.33314514]
[176.75650024 -127.72866821]
[169.54251099 -139.49604797]
[169.09729004 -153.18309021]
[175.43028259 -165.20269775]
[186.78849792 -172.45773315]
[200.14035034 -173.13897705]
[207.12953186 -186.41117859]
[208.36727905 -195.49594116]
[214.36515808 -199.85722351]
[221.59147644 -213.00183105]
[228.81777954 -226.14642334]
[228.70176697 -231.43199158]
[230.46749878 -235.78491211]
[233.43634033 -238.64035034]
[236.80342102 -239.78878784]
[244.72682190 -252.52534485]
[252.65022278 -265.26190186]
[253.37007141 -281.06671143]
[266.66271973 -287.78643799]
[274.58612061 -300.52297974]
[282.39489746 -313.33013916]
[290.08837891 -326.20687866]
[289.79254150 -342.60336304]
[303.98196411 -350.82479858]
[318.05978394 -342.41369629]
[317.54394531 -326.02264404]
[302.96511841 -318.51339722]
[295.27160645 -305.63665771]
[294.53771973 -298.25717163]
[287.32266235 -292.59957886]
[279.39929199 -279.86303711]
[279.24615479 -264.96920776]
[265.38677979 -257.33850098]
[257.46337891 -244.60194397]
[249.53997803 -231.86538696]
[241.96237183 -218.92012024]
[234.73606873 -205.77552795]
[227.50976562 -192.63092041]
[220.40173340 -179.42199707]
[213.41255188 -166.14979553]
[221.13464355 -151.68106079]
[218.69857788 -135.29472351]
[206.86679077 -123.46328735]
[190.15202332 -120.97885895]
[183.40220642 -107.58333588]
[194.98205566 -89.44322205]
[193.34437561 -67.85453796]
[178.98974609 -51.47381210]
[157.54916382 -46.96292877]
[152.53147888 -32.82705688]
[147.64088440 -18.64671326]
[142.87776184 -4.42304659]
[138.11465454 9.80062103]
[133.35153198 24.02428818]
[128.58842468 38.24795532]
[123.82530212 52.47162247]
[119.06218719 66.69528961]
[114.29907227 80.91896057]
[109.53594971 95.14262390]
[106.59309387 109.85111237]
[113.32034302 124.17084503]
[104.68984985 136.31019592]
[103.61366272 151.27154541]
[102.67179871 166.24194336]
[101.86435699 181.22018433]
[101.05690765 196.19844055]
[109.08664703 206.32023621]
[108.08582306 218.79893494]
[99.13742828 226.96963501]
[98.06123352 241.93098450]
[96.98504639 256.89233398]
[95.90885162 271.85366821]
[94.83265686 286.81500244]
[93.75646973 301.77636719]
[93.08349609 316.76126099]
[92.81423187 331.75881958]
[92.54496765 346.75640869]
[92.27570343 361.75399780]
[92.00643158 376.75158691]
[91.73716736 391.74917603]
[91.46790314 406.74673462]
[94.45058441 415.41671753]
[91.05678558 422.01049805]
[90.51834106 437.00082397]
[89.97989655 451.99114990]
[97.21684265 466.06018066]
[89.02766418 478.50149536]
[91.85422516 487.22363281]
[88.34261322 493.75540161]
[87.53516388 508.73364258]
[86.72771454 523.71191406]
[85.92026520 538.69018555]
[85.11282349 553.66839600]
[98.02497101 561.98535156]
[105.03445435 575.65148926]
[104.25576782 590.99066162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 165]
[14 163]
[15 162]
[16 161]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[32 147]
[34 144]
[35 143]
[36 142]
[38 141]
[39 140]
[41 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[66 128]
[67 127]
[78 123]
[79 122]
[84 118]
[85 117]
[87 116]
[88 115]
[89 114]
[93 113]
[94 112]
[95 111]
[97 109]
[98 108]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
