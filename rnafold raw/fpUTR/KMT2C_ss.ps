%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCGCGCGCCCGCGCCGAUGUGUGUGAGUGCGUGUCCUGCUCGCUCCAUGUUGCCGCCUCUCCCGGUACCUGCUGCUGCUCCCGGGGCUGCGGGAAAUGCGAGAGGCUGAGCCGGGGAGGAGGAACCCGAGCAGCAGCGGCGGCGGCGGCGGCCGCGGCGGCGGGAGCCCCCCAGGAGGAGGACCGGGAUCCAUGUGUCUUUCCUGGUGACUAGG\
) } def
/len { sequence length } bind def

/coor [
[120.84993744 379.58853149]
[113.36541748 380.07012939]
[104.54863739 392.20538330]
[95.73185730 404.34063721]
[93.22198486 413.11642456]
[86.70152283 416.58502197]
[77.71235657 428.59313965]
[68.72319031 440.60125732]
[59.73402786 452.60937500]
[50.74486160 464.61749268]
[41.75569534 476.62561035]
[32.76653290 488.63375854]
[23.77736664 500.64187622]
[21.70125961 516.32623291]
[7.88006115 521.87817383]
[-1.10910380 533.88629150]
[-10.09826851 545.89440918]
[-19.08743286 557.90252686]
[-28.07659912 569.91064453]
[-25.57961464 585.51641846]
[-34.91647720 598.26782227]
[-50.54779434 600.59967041]
[-63.19977951 591.12854004]
[-65.36623383 575.47344971]
[-55.76184464 562.92230225]
[-40.08471680 560.92150879]
[-31.09555244 548.91339111]
[-22.10638809 536.90527344]
[-13.11722279 524.89715576]
[-4.12805748 512.88903809]
[-2.69491553 498.06350708]
[11.76924706 491.65270996]
[20.75841331 479.64459229]
[29.74757767 467.63647461]
[38.73674393 455.62832642]
[47.72590637 443.62020874]
[56.71507263 431.61209106]
[65.70423889 419.60397339]
[74.69340515 407.59585571]
[83.59660339 395.52386475]
[92.41338348 383.38861084]
[101.23015594 371.25335693]
[89.79565430 356.03918457]
[86.49330139 338.07574463]
[91.34908295 321.26589966]
[102.68661499 308.96316528]
[117.61318970 303.30377197]
[117.39899445 288.30529785]
[117.18480682 273.30682373]
[116.97061157 258.30834961]
[116.75641632 243.30987549]
[113.52005768 236.67108154]
[116.64778900 228.09606934]
[116.64778900 213.09606934]
[116.64778900 198.09606934]
[116.64778900 183.09606934]
[116.64778900 168.09606934]
[116.64778900 153.09606934]
[116.64778900 138.09606934]
[58.12136841 97.36906433]
[48.46133423 85.89371490]
[38.80130005 74.41835785]
[29.14126587 62.94300461]
[19.48123169 51.46765137]
[9.82119846 39.99229431]
[0.16116494 28.51694298]
[-14.64539433 22.94232368]
[-16.92256927 8.22282124]
[-26.58260345 -3.25253248]
[-41.95691681 -2.28473520]
[-54.80297089 -10.45983696]
[-60.30691147 -24.46592903]
[-56.55304337 -38.85503769]
[-66.21307373 -50.33039093]
[-75.87310791 -61.80574417]
[-85.53314209 -73.28109741]
[-95.19317627 -84.75645447]
[-109.99974060 -90.33106995]
[-112.27690887 -105.05057526]
[-121.93694305 -116.52592468]
[-131.59698486 -128.00128174]
[-146.40353394 -133.57589722]
[-148.68070984 -148.29541016]
[-164.27560425 -153.36799622]
[-167.41491699 -169.46385193]
[-154.86918640 -180.02494812]
[-139.54438782 -174.18692017]
[-137.20535278 -157.95542908]
[-123.08975220 -153.20161438]
[-120.12162781 -137.66131592]
[-110.46159363 -126.18595886]
[-100.80155945 -114.71060944]
[-86.68595123 -109.95678711]
[-83.71782684 -94.41648865]
[-74.05779266 -82.94113159]
[-64.39775848 -71.46578217]
[-54.73772430 -59.99042511]
[-45.07769012 -48.51507187]
[-30.25920677 -49.76029968]
[-17.39679527 -41.94861984]
[-11.53196430 -27.89667511]
[-15.10724926 -12.91256618]
[-5.44721508 -1.43721247]
[8.66839409 3.31661201]
[11.63651848 18.85690880]
[21.29655266 30.33226204]
[30.95658684 41.80761719]
[40.61661911 53.28297043]
[50.27665329 64.75832367]
[59.93668747 76.23368073]
[69.59672546 87.70903015]
[77.03486633 86.74778748]
[82.80805969 72.90328217]
[91.91115570 84.82529449]
[99.34930420 83.86404419]
[105.77472687 70.30993652]
[112.10321808 56.71029282]
[118.33444214 43.06581497]
[124.56566620 29.42133331]
[130.79689026 15.77685452]
[122.36991119 2.85441160]
[122.28993225 -12.57274437]
[130.58247375 -25.58186531]
[144.60142517 -32.02178574]
[159.87338257 -29.83755302]
[171.52513123 -19.72614670]
[175.83862305 -4.91407967]
[171.43743896 9.87217140]
[159.72599792 19.91436768]
[144.44137573 22.00807953]
[138.21014404 35.65256119]
[131.97892761 49.29703903]
[125.74769592 62.94152069]
[125.82828522 70.32672119]
[119.32884216 76.73535919]
[112.90341187 90.28947449]
[118.13044739 95.66796112]
[128.88758850 85.21406555]
[139.34130859 95.97135925]
[128.58450317 106.42493439]
[133.81153870 111.80342865]
[147.54360962 105.76766968]
[161.27568054 99.73191833]
[175.00773621 93.69616699]
[188.73980713 87.66040802]
[198.26010132 75.02416992]
[213.02491760 76.98620605]
[226.75698853 70.95044708]
[236.01770020 57.41637039]
[252.34600830 58.93895721]
[258.94476318 73.95190430]
[249.02571106 87.01117706]
[232.79273987 84.68251801]
[219.06066895 90.71826935]
[210.52258301 102.92279053]
[194.77555847 101.39247894]
[181.04350281 107.42823029]
[167.31143188 113.46398926]
[153.57936096 119.49974060]
[139.84729004 125.53549194]
[131.64779663 138.09606934]
[131.64779663 153.09606934]
[131.64779663 168.09606934]
[131.64779663 183.09606934]
[131.64779663 198.09606934]
[131.64779663 213.09606934]
[131.64779663 228.09606934]
[131.75488281 243.09568787]
[131.96908569 258.09414673]
[132.18327332 273.09262085]
[132.39746094 288.09109497]
[132.61166382 303.08956909]
[150.41319275 310.10754395]
[162.52902222 326.36566162]
[164.37376404 347.70391846]
[154.20864868 367.84426880]
[164.50804138 378.74945068]
[174.80743408 389.65460205]
[185.10684204 400.55975342]
[195.40623474 411.46490479]
[205.70562744 422.37008667]
[216.00502014 433.27523804]
[222.20974731 435.52709961]
[225.80990601 439.91354370]
[226.43730164 444.64196777]
[236.42108154 455.83679199]
[246.40487671 467.03161621]
[256.38867188 478.22640991]
[266.45211792 489.34967041]
[276.59475708 500.40078735]
[292.20782471 499.52560425]
[304.69967651 508.93237305]
[308.17202759 524.17956543]
[300.98532104 538.06793213]
[286.53295898 544.03973389]
[271.63885498 539.27532959]
[263.33554077 526.02429199]
[265.54364014 510.54342651]
[255.40100098 499.49230957]
[248.56694031 496.69168091]
[245.19383240 488.21020508]
[235.21005249 477.01538086]
[225.22627258 465.82055664]
[215.24247742 454.62573242]
[205.09985352 443.57461548]
[194.80046082 432.66946411]
[184.50106812 421.76431274]
[174.20167542 410.85916138]
[163.90228271 399.95397949]
[153.60289001 389.04882812]
[143.30349731 378.14367676]
[135.81896973 378.62527466]
[139.62933350 393.13327026]
[149.66830444 404.27862549]
[149.46780396 419.27728271]
[139.13450623 430.15029907]
[124.16545868 431.11352539]
[112.52384949 421.65451050]
[110.40272522 406.80523682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[4 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[68 103]
[69 102]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[79 92]
[80 91]
[81 90]
[83 88]
[115 136]
[116 135]
[117 133]
[118 132]
[119 131]
[120 130]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[147 154]
[148 153]
[176 211]
[177 210]
[178 209]
[179 208]
[180 207]
[181 206]
[182 205]
[185 204]
[186 203]
[187 202]
[188 201]
[189 199]
[190 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
