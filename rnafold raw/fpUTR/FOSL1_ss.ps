%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGGCCAAGGCGGCGCGUCUCGGGGGUGGAGCCUGGAGGUGACCGCGCCGCUGCAACGCCCCCACCCCCCGCGGUCGCAGUGGUUCAGCCCGAGAACUUUUCAUUCAUAAAAAGAAAAGACUCCGCACGGCGCGGGUGAGUCAGAACCCAGCAGCCGUGUACCCCGCAGAGCCGCCAGCCCCGGGC\
) } def
/len { sequence length } bind def

/coor [
[32.37029648 411.29156494]
[36.51721191 396.33889771]
[48.68202972 386.70578003]
[47.93036652 371.72460938]
[47.17870712 356.74346924]
[46.42704391 341.76229858]
[38.24544907 335.60018921]
[34.74283218 325.74151611]
[37.30787659 315.37185669]
[45.32577133 307.98483276]
[45.07512665 292.98693848]
[44.82447815 277.98904419]
[44.57382965 262.99111938]
[44.32318115 247.99322510]
[44.07253647 232.99531555]
[41.78722763 230.28562927]
[40.71134567 226.32754517]
[41.42033768 221.70648193]
[44.20414734 217.24397278]
[44.70537186 202.25234985]
[45.20659637 187.26072693]
[45.58254242 172.26542664]
[45.83319092 157.26753235]
[46.08383942 142.26962280]
[46.33448792 127.27171326]
[46.58513260 112.27381134]
[34.43516159 103.47732544]
[20.26512527 108.39769745]
[6.09508944 113.31806946]
[-8.07494736 118.23844147]
[-19.78064728 132.44123840]
[-36.87069702 128.49156189]
[-50.95653915 133.64802551]
[-65.04238129 138.80448914]
[-75.13933563 151.72669983]
[-91.33889771 149.17594910]
[-96.97633362 133.77622986]
[-86.25234222 121.36945343]
[-70.19884491 124.71864319]
[-56.11300278 119.56217957]
[-42.02716446 114.40571594]
[-36.64391327 103.55910492]
[-24.93485260 99.15453339]
[-12.99531937 104.06840515]
[1.17471659 99.14803314]
[15.34475327 94.22766113]
[29.51478958 89.30728912]
[31.88606071 74.49590302]
[19.96037483 65.39765930]
[8.03468895 56.29941559]
[-3.89099717 47.20117569]
[-15.81668282 38.10293198]
[-27.74236870 29.00469017]
[-39.66805649 19.90644646]
[-51.59374237 10.80820465]
[-68.87521362 13.46102047]
[-82.46704102 3.00826240]
[-84.26718140 -13.70391178]
[-96.34323120 -22.60160828]
[-108.41928101 -31.49930382]
[-122.15658569 -24.75058746]
[-137.45632935 -25.17053032]
[-150.80274963 -32.66263199]
[-159.12893677 -45.50526047]
[-160.52160645 -60.74728012]
[-154.66070557 -74.88617706]
[-142.89305115 -84.67294312]
[-127.92274475 -87.85865021]
[-113.18987274 -83.71124268]
[-102.07992554 -73.18376923]
[-97.14589691 -58.69536591]
[-99.52159119 -43.57535553]
[-87.44553375 -34.67765808]
[-75.36948395 -25.77996254]
[-63.01326752 -29.47470093]
[-50.60184479 -25.31006622]
[-42.74468994 -14.59611511]
[-42.49549866 -1.11748147]
[-30.56981277 7.98076105]
[-18.64412689 17.07900429]
[-6.71844053 26.17724609]
[5.20724535 35.27548981]
[17.13293076 44.37372971]
[29.05861664 53.47197342]
[40.98430252 62.57021713]
[48.30802536 60.95371628]
[36.64772415 51.51775742]
[36.75479889 36.51814270]
[48.54862213 27.24960899]
[63.14842224 30.69138718]
[69.56051636 44.25180817]
[62.95547485 57.72071838]
[70.27919769 56.10422134]
[77.26711273 42.83135223]
[84.25502777 29.55848312]
[81.18551636 17.01748466]
[87.29472351 6.10053158]
[98.82546997 2.40318418]
[106.03419495 -10.75106525]
[113.24291992 -23.90531349]
[120.45164490 -37.05956268]
[127.66036987 -50.21380997]
[134.86909485 -63.36806107]
[126.34959412 -76.08327484]
[124.72653198 -91.30248260]
[130.37287903 -105.52841949]
[141.99114990 -115.49207306]
[156.91154480 -118.90386963]
[171.70547485 -114.97979736]
[182.97338867 -104.62158203]
[188.12602234 -90.20947266]
[185.97932434 -75.05525208]
[177.02659607 -62.64126205]
[163.32510376 -55.82014084]
[148.02334595 -56.15933228]
[140.81462097 -43.00508499]
[133.60589600 -29.85083580]
[126.39717102 -16.69658661]
[119.18843842 -3.54233837]
[111.97971344 9.61191082]
[113.32423401 27.10082626]
[97.52789307 36.54639816]
[90.53998566 49.81926727]
[83.55207062 63.09213638]
[116.61280060 68.95178986]
[129.59213257 94.95202637]
[144.53981018 96.20386505]
[159.48748779 97.45570374]
[174.43515015 98.70753479]
[189.38282776 99.95937347]
[204.33050537 101.21121216]
[219.27816772 102.46305084]
[234.23577881 103.58995056]
[249.20228577 104.59184265]
[264.17663574 105.46865082]
[279.15780640 106.22030640]
[294.13894653 106.97196960]
[309.12011719 107.72363281]
[318.75320435 95.55881500]
[333.70590210 91.41190338]
[348.22854614 96.87746429]
[356.73690796 109.85388947]
[355.95932007 125.35147095]
[346.19482422 137.41107178]
[331.19802856 141.39553833]
[316.73553467 135.77275085]
[308.36843872 122.70478821]
[293.38729858 121.95312500]
[278.40612793 121.20146179]
[263.42498779 120.44980621]
[256.57333374 123.26027679]
[248.20039368 119.55834198]
[233.23388672 118.55645752]
[226.33624268 121.25205231]
[218.02633667 117.41072083]
[203.07865906 116.15888214]
[188.13099670 114.90704346]
[173.18331909 113.65521240]
[158.23564148 112.40337372]
[143.28797913 111.15153503]
[128.34030151 109.89969635]
[99.63174438 135.21138000]
[61.58303833 112.52445984]
[61.33239365 127.52236176]
[61.08174515 142.52026367]
[60.83109665 157.51817322]
[60.58044815 172.51608276]
[63.57070160 181.16876221]
[60.19821930 187.76194763]
[59.69699478 202.75357056]
[59.19577026 217.74519348]
[59.07044220 232.74467468]
[59.32108688 247.74256897]
[59.57173538 262.74047852]
[59.82238388 277.73837280]
[60.07303238 292.73629761]
[60.32367706 307.73419189]
[71.47232819 324.51351929]
[61.40819931 341.01065063]
[62.15986252 355.99179077]
[62.91152191 370.97296143]
[63.66318512 385.95410156]
[76.73114014 394.32119751]
[82.35392761 408.78369141]
[78.36946869 423.78048706]
[66.30986786 433.54498291]
[50.81228638 434.32257080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[5 180]
[6 179]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[19 171]
[20 170]
[21 169]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 47]
[28 46]
[29 45]
[30 44]
[32 41]
[33 40]
[34 39]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[58 74]
[59 73]
[60 72]
[93 124]
[94 123]
[95 122]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[126 161]
[127 160]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[133 153]
[134 152]
[135 150]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
