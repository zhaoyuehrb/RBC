%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGUAGGGGGCGGGGCCGCGCGCAGAGGGCGGGGAGGUGGGCAAGAUGGCGCUUGCCGAGUGAUUCUCCUCGAAUACCUCCUGCCGGCGCGGAGACACCGGGGCGGGGGUCCUGCCGCAACUACCUCCCUUCCUCCUCUCCCCCGCCCCCGGAGCCUUCAUCCUUCCCUUCCCCCCCCACCUCGAGGGGCGGGCCUGGUUCCCGGGACACC\
) } def
/len { sequence length } bind def

/coor [
[343.46908569 553.86090088]
[343.25091553 538.86248779]
[343.03277588 523.86407471]
[342.70553589 508.86767578]
[334.60134888 496.37081909]
[341.93399048 482.35144043]
[341.49774170 467.35778809]
[343.73944092 458.18612671]
[348.43692017 451.33609009]
[354.50613403 447.35211182]
[344.21252441 436.44149780]
[333.91888428 425.53088379]
[323.62527466 414.62030029]
[313.33163452 403.70968628]
[303.03802490 392.79907227]
[292.74438477 381.88845825]
[282.45077515 370.97787476]
[272.15713501 360.06726074]
[261.86352539 349.15664673]
[260.37063599 364.08218384]
[248.84686279 373.68438721]
[233.89692688 372.45983887]
[224.08929443 361.11038208]
[225.04512024 346.14086914]
[236.21659851 336.13095093]
[251.19998169 336.81735229]
[244.58810425 333.52142334]
[241.84819031 324.81164551]
[232.71676636 312.91134644]
[223.58535767 301.01104736]
[214.45393372 289.11074829]
[205.32250977 277.21044922]
[196.19108582 265.31015015]
[177.83259583 259.23260498]
[175.51866150 239.20494080]
[166.04498291 227.57527161]
[156.57130432 215.94558716]
[147.09762573 204.31590271]
[137.62394714 192.68621826]
[128.15028381 181.05654907]
[118.67660522 169.42686462]
[109.20292664 157.79718018]
[99.72925568 146.16749573]
[90.25557709 134.53782654]
[76.57019806 128.39694214]
[61.58447647 129.05122375]
[46.59875488 129.70552063]
[31.61303139 130.35980225]
[16.62730789 131.01409912]
[6.13621426 142.83410645]
[-9.64486122 143.69036865]
[-21.35328674 133.07489014]
[-22.04265976 117.28564453]
[-11.30398846 105.69010925]
[4.49166393 105.16770935]
[15.97301769 116.02837372]
[30.95874023 115.37408447]
[45.94446564 114.71979523]
[60.93018723 114.06550598]
[75.91590881 113.41120911]
[78.73519897 98.67854309]
[65.04982758 92.53765869]
[51.36444855 86.39677429]
[37.67907333 80.25588989]
[28.57219505 79.59844208]
[23.84032440 73.92488098]
[10.24570847 67.58560944]
[-6.66471386 66.37154388]
[-10.17936897 49.78590393]
[4.78514719 41.81724167]
[16.58498192 53.99098969]
[30.17959976 60.33026505]
[43.81995773 66.57051086]
[57.50533295 72.71139526]
[71.19071198 78.85227966]
[84.87608337 84.99316406]
[89.90266418 79.42687988]
[78.77010345 69.37371826]
[74.15557861 55.10115433]
[88.82326508 58.24115753]
[99.95582581 68.29431915]
[104.98240662 62.72803879]
[97.48240662 49.73765945]
[89.98240662 36.74727631]
[82.48240662 23.75689507]
[75.48413849 17.89245605]
[74.96936798 10.52259254]
[67.65909576 -2.57549334]
[53.30810928 -10.51156807]
[53.27603531 -26.91068459]
[67.59586334 -34.90283585]
[81.53658295 -26.26638412]
[80.75717926 -9.88576889]
[88.06745911 3.21231699]
[95.47279358 16.25689507]
[102.97279358 29.24727631]
[110.47279358 42.23765945]
[117.97279358 55.22803879]
[125.33912659 53.81839371]
[118.10519409 40.67798615]
[128.36708069 29.73752022]
[141.94316101 36.11637878]
[140.07179260 50.99910355]
[147.43812561 49.58945465]
[141.78260803 34.81361008]
[151.28280640 23.34209824]
[153.45678711 8.50047398]
[155.63076782 -6.34115076]
[157.80473328 -21.18277550]
[159.97871399 -36.02439880]
[162.15269470 -50.86602402]
[158.46578979 -67.41423035]
[173.34664917 -75.53804779]
[185.27241516 -63.48763657]
[176.99432373 -48.69204712]
[174.82034302 -33.85042191]
[172.64636230 -19.00879669]
[170.47238159 -4.16717291]
[168.29840088 10.67445183]
[166.12443542 25.51607704]
[171.93545532 39.23035049]
[162.27975464 51.76343536]
[160.78831482 103.60505676]
[130.65617371 130.17437744]
[101.88526154 125.06414795]
[111.35893250 136.69383240]
[120.83261108 148.32350159]
[130.30628967 159.95318604]
[139.77995300 171.58287048]
[149.25363159 183.21255493]
[158.72731018 194.84222412]
[168.20098877 206.47190857]
[177.67466736 218.10159302]
[187.14833069 229.73127747]
[198.01007080 230.20893860]
[206.63938904 236.45513916]
[210.33059692 246.21354675]
[208.09138489 256.17874146]
[217.22280884 268.07904053]
[226.35423279 279.97933960]
[235.48565674 291.87963867]
[244.61708069 303.77993774]
[253.74848938 315.68023682]
[262.96621704 327.51382446]
[272.77413940 338.86303711]
[283.06774902 349.77365112]
[293.36138916 360.68423462]
[303.65499878 371.59484863]
[313.94863892 382.50546265]
[324.24224854 393.41604614]
[334.53588867 404.32666016]
[344.82949829 415.23727417]
[355.12313843 426.14785767]
[365.41674805 437.05847168]
[377.11502075 446.44732666]
[389.99493408 454.13546753]
[402.87487793 461.82360840]
[415.75479126 469.51174927]
[428.63473511 477.19989014]
[441.51464844 484.88800049]
[452.25482178 478.49981689]
[464.61999512 477.28970337]
[476.25891113 481.42608643]
[484.98455811 490.06665039]
[489.18508911 501.52899170]
[488.12139893 513.61785889]
[500.77227783 521.67736816]
[513.42315674 529.73687744]
[529.21936035 530.62609863]
[535.79614258 543.99005127]
[548.44702148 552.04956055]
[561.09790039 560.10900879]
[573.74877930 568.16851807]
[586.39965820 576.22802734]
[599.05053711 584.28753662]
[611.99731445 576.20397949]
[627.17022705 574.54699707]
[641.55664062 579.64538574]
[652.30010986 590.48699951]
[657.26757812 604.91918945]
[655.47265625 620.07635498]
[647.27178955 632.94915771]
[634.29327393 640.98162842]
[619.11395264 642.57885742]
[604.74774170 637.42382812]
[594.04699707 626.54003906]
[589.13647461 612.08837891]
[590.99102783 596.93835449]
[578.34014893 588.87890625]
[565.68927002 580.81939697]
[553.03839111 572.75988770]
[540.38757324 564.70037842]
[527.73669434 556.64093018]
[512.84533691 556.32812500]
[505.36364746 542.38769531]
[492.71279907 534.32824707]
[480.06192017 526.26873779]
[463.94607544 533.49755859]
[446.56463623 529.56787109]
[434.92214966 515.86962891]
[433.82650757 497.76794434]
[420.94659424 490.07980347]
[408.06665039 482.39166260]
[395.18673706 474.70352173]
[382.30679321 467.01538086]
[369.42687988 459.32723999]
[356.49139404 466.92153931]
[356.92764282 481.91519165]
[365.06304932 495.48446655]
[357.69918823 508.43139648]
[361.07580566 516.91467285]
[358.03118896 523.64593506]
[358.24932861 538.64434814]
[358.46749878 553.64276123]
[360.93820190 572.86633301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 210]
[6 208]
[7 207]
[10 154]
[11 153]
[12 152]
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[26 144]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[35 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[44 125]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[61 76]
[62 75]
[63 74]
[64 73]
[66 72]
[67 71]
[82 98]
[83 97]
[84 96]
[85 95]
[87 94]
[88 93]
[104 122]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[111 115]
[155 206]
[156 205]
[157 204]
[158 203]
[159 202]
[160 201]
[166 197]
[167 196]
[168 195]
[170 193]
[171 192]
[172 191]
[173 190]
[174 189]
[175 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
