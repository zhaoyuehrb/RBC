%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCUAGCGAAAUAACCCUUUGCUUCUACCUGAAUGGGUUGUUCACUCUGGAUUCUGAGCCUGCAGCCAGCUCCAAAAUGGGGCCUCUGAAGAAAAGAUUUGAGUUGCUCUUGUGUCUUAGUCAAAGAUCUACAUCCCUACCAGUGGGUAACCAAGACUGUGAAUAAGCACACACCAACAGGGGCAUGUGGUGAC\
) } def
/len { sequence length } bind def

/coor [
[76.58956909 116.50203705]
[62.49417877 121.63233948]
[48.39878845 126.76264191]
[34.30339813 131.89294434]
[20.20800972 137.02323914]
[23.68867302 153.87344360]
[14.71835041 172.97450256]
[-7.11726999 185.36706543]
[-14.82243061 198.23681641]
[-22.52759171 211.10656738]
[-30.23275375 223.97631836]
[-37.93791199 236.84606934]
[-45.64307404 249.71582031]
[-40.35788345 264.43319702]
[-45.81780243 279.08660889]
[-59.44482803 286.75723267]
[-74.80468750 283.82318115]
[-84.64493561 271.66986084]
[-84.31929779 256.03564453]
[-73.98153687 244.30259705]
[-58.51282501 242.01066589]
[-50.80766678 229.14091492]
[-43.10250473 216.27116394]
[-35.39734268 203.40141296]
[-27.69218254 190.53166199]
[-19.98702049 177.66191101]
[-30.84303284 167.31071472]
[-43.33158112 175.61952209]
[-47.88958740 191.00146484]
[-62.81107330 196.89457703]
[-76.64955139 188.77816772]
[-78.78932953 172.87844849]
[-67.58894348 161.39233398]
[-51.64038086 163.13096619]
[-39.15183258 154.82217407]
[-40.74607086 147.49357605]
[-55.03391647 142.92657471]
[-43.93455124 132.83636475]
[-45.52879333 125.50776672]
[-60.34037399 123.13774109]
[-75.15195465 120.76772308]
[-89.96353912 118.39770508]
[-104.77512360 116.02767944]
[-119.58670807 113.65766144]
[-130.58918762 124.43966675]
[-145.65466309 126.64981079]
[-158.97521973 119.64788055]
[-165.53993225 106.30462646]
[-180.35151672 103.93460083]
[-195.16310120 101.56458282]
[-206.05723572 112.61434937]
[-221.37113953 115.11716461]
[-235.21629333 108.11064911]
[-242.26895142 94.28894043]
[-239.81723022 78.96677399]
[-228.80386353 68.03584290]
[-213.46371460 65.69929504]
[-199.69538879 72.85559845]
[-192.79307556 86.75299835]
[-177.98149109 89.12302399]
[-163.16990662 91.49304199]
[-152.76942444 80.86441040]
[-137.92912292 78.36853790]
[-124.30548096 85.16926575]
[-117.21669006 98.84607697]
[-102.40510559 101.21609497]
[-87.59352112 103.58612061]
[-72.78193665 105.95613861]
[-57.97035217 108.32616425]
[-43.15877151 110.69618225]
[-5.12127686 101.95976257]
[15.07770824 122.92785645]
[29.17309761 117.79755402]
[43.26848602 112.66725159]
[57.36387634 107.53694916]
[71.45926666 102.40664673]
[71.61517334 90.72553253]
[76.54581451 79.60543060]
[85.80120850 70.98742676]
[98.15051270 66.53080750]
[111.73992920 67.30399323]
[124.37033081 73.55829620]
[123.65660095 58.57528305]
[122.94287109 43.59227371]
[122.22914124 28.60926437]
[121.51541138 13.62625313]
[110.10346222 3.02412248]
[109.59307861 -12.18094730]
[119.77091980 -22.99515915]
[119.05718994 -37.97816849]
[110.67201996 -51.39455414]
[117.79496765 -64.47557068]
[117.08123779 -79.45858002]
[104.03450775 -87.85871887]
[98.44835663 -102.33541107]
[102.47077179 -117.32206726]
[114.55506134 -127.05600739]
[130.05456543 -127.79434204]
[143.00939941 -119.25315857]
[148.43817139 -104.71672058]
[144.25341797 -89.77458191]
[132.06423950 -80.17230225]
[132.77796936 -65.18929291]
[141.11210632 -52.84459686]
[134.04020691 -38.69189835]
[134.75393677 -23.70888710]
[145.91363525 -13.91110897]
[146.85090637 1.27362633]
[136.49842834 12.91252518]
[137.21215820 27.89553452]
[137.92588806 42.87854385]
[138.63960266 57.86155319]
[139.35333252 72.84456635]
[150.92013550 82.39492035]
[165.76745605 80.26019287]
[180.61477661 78.12547302]
[195.46209717 75.99075317]
[203.52119446 71.66772461]
[210.56172180 73.94187927]
[225.44104004 72.04299164]
[240.32037354 70.14410400]
[255.19969177 68.24522400]
[267.90936279 58.82316971]
[281.51370239 64.88704681]
[296.39303589 62.98815918]
[311.27236938 61.08927155]
[323.98202515 51.66722488]
[337.58639526 57.73109818]
[352.46569824 55.83221054]
[360.59237671 51.63759232]
[367.59594727 54.02317047]
[382.50350952 52.36059952]
[397.41110229 50.69802475]
[404.07070923 34.44490814]
[417.97000122 23.85219002]
[435.23056030 21.76238251]
[451.09298706 28.66099167]
[461.22927856 42.56753159]
[476.07659912 40.43281174]
[490.92391968 38.29808807]
[499.01416016 24.91593361]
[513.83013916 19.91386604]
[528.37622070 25.65370750]
[535.78417969 39.42528152]
[532.55621338 54.72607040]
[520.21643066 64.33151245]
[504.59136963 63.70620728]
[493.05865479 53.14540863]
[478.21133423 55.28013229]
[463.36401367 57.41485596]
[459.95339966 69.59188843]
[452.15911865 79.60915375]
[441.11279297 85.95456696]
[428.44027710 87.65339661]
[416.02224731 84.41783142]
[405.71514893 76.69501495]
[399.07366943 65.60559845]
[384.16607666 67.26817322]
[369.25851440 68.93074799]
[354.36459351 70.71153259]
[339.48526001 72.61042023]
[327.83987427 81.89665222]
[313.17123413 75.96859741]
[298.29193115 77.86748505]
[283.41259766 79.76636505]
[271.76721191 89.05259705]
[257.09857178 83.12454224]
[242.21925354 85.02342987]
[227.33993530 86.92231750]
[212.46061707 88.82120514]
[197.59681702 90.83807373]
[182.74949646 92.97279358]
[167.90217590 95.10751343]
[153.05485535 97.24224091]
[145.76190186 110.34998322]
[151.77586365 124.09160614]
[157.78982544 137.83323669]
[163.80377197 151.57485962]
[169.81773376 165.31648254]
[176.13198853 171.93220520]
[175.81617737 179.32417297]
[181.61135864 193.15948486]
[196.32965088 198.91687012]
[202.58932495 213.42866516]
[196.67665100 228.08525085]
[182.09950256 234.19116211]
[167.50624084 228.12385559]
[161.55479431 213.48297119]
[167.77604675 198.95466614]
[161.98086548 185.11935425]
[156.07611084 171.33044434]
[150.06214905 157.58882141]
[144.04818726 143.84719849]
[138.03424072 130.10556030]
[132.02027893 116.36393738]
[118.83418274 128.46282959]
[102.28433228 132.21981812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[27 35]
[28 34]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[48 61]
[49 60]
[50 59]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[89 106]
[90 105]
[92 103]
[93 102]
[114 174]
[115 173]
[116 172]
[117 171]
[119 170]
[120 169]
[121 168]
[122 167]
[124 165]
[125 164]
[126 163]
[128 161]
[129 160]
[131 159]
[132 158]
[133 157]
[138 150]
[139 149]
[140 148]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
