%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAAUUCCGGCCGCGCCGGAAGUCUCUACUGAGGAAAGCUAUGAGGAUACUCUGUUCGUAAGCUCCCGGUGAAUUUUGUUCCACAGACUCGGAAGAAAGGUUGGAUAAGAGUUCACUGGAGAUUGACAAGUACUCGGGAUAGUGAAAAGCCGGAGUUGGAAC\
) } def
/len { sequence length } bind def

/coor [
[103.12992096 470.82727051]
[95.37837982 457.24612427]
[98.22100067 441.86907959]
[110.31558228 431.95669556]
[110.31558228 416.95669556]
[110.31558228 401.95669556]
[110.31558228 386.95669556]
[110.31558228 371.95669556]
[110.31558228 356.95669556]
[110.31558228 341.95669556]
[110.31558228 326.95669556]
[110.31558228 311.95669556]
[110.31558228 296.95669556]
[110.31558228 281.95669556]
[109.74796295 266.96743774]
[108.61353302 252.01040649]
[107.47910309 237.05335999]
[95.41281891 221.97685242]
[104.30224609 203.91654968]
[102.60263062 189.01315308]
[93.47306824 177.24453735]
[99.59687042 162.65653992]
[97.89725494 147.75314331]
[82.52582550 144.49087524]
[69.04287720 136.42033386]
[58.90555954 124.41375732]
[44.96728897 129.95672607]
[31.02901840 135.49971008]
[17.09074783 141.04269409]
[7.35401249 154.23844910]
[-8.90973186 152.13543701]
[-14.96973896 136.89704895]
[-4.59199286 124.19923401]
[11.54777050 127.10441589]
[25.48604202 121.56143951]
[39.42431259 116.01846313]
[53.36258316 110.47548676]
[52.25659561 102.31333923]
[52.56828308 94.08251190]
[54.28839874 86.02738953]
[40.80925369 79.44615173]
[27.33011055 72.86491394]
[13.85096741 66.28367615]
[0.31015146 59.83028030]
[-13.29112339 53.50530624]
[-26.89239693 47.18032837]
[-40.49367142 40.85535049]
[-54.09494781 34.53037262]
[-69.87082672 35.72713089]
[-78.14875031 23.34467506]
[-93.65106201 27.47478485]
[-106.45940399 17.81424332]
[-106.74829865 1.77379227]
[-94.29614258 -8.34170818]
[-78.65515900 -4.77251101]
[-71.82377625 9.74340057]
[-57.02074814 8.09423828]
[-47.76996994 20.92910004]
[-34.16869354 27.25407600]
[-20.56742096 33.57905197]
[-6.96614599 39.90402985]
[6.63512850 46.22900772]
[14.05899429 46.19794464]
[20.43220329 52.80453491]
[33.91134644 59.38576889]
[47.39049149 65.96700287]
[60.86963654 72.54824066]
[84.88545990 54.65317154]
[114.83515930 54.56100464]
[121.67030334 41.20882034]
[128.50544739 27.85663223]
[135.34057617 14.50444603]
[142.17572021 1.15226018]
[149.01086426 -12.19992638]
[155.84599304 -25.55211258]
[162.68113708 -38.90429688]
[169.51628113 -52.25648499]
[176.35140991 -65.60867310]
[183.18655396 -78.96085358]
[190.02169800 -92.31304169]
[185.39704895 -107.18753052]
[192.51905823 -120.63117981]
[206.72811890 -124.94840240]
[213.56324768 -138.30058289]
[220.39839172 -151.65277100]
[227.23353577 -165.00495911]
[218.09922791 -177.18386841]
[215.17050171 -192.06034851]
[218.97567749 -206.67338562]
[228.70820618 -218.13806152]
[242.39685059 -224.21508789]
[257.30480957 -223.74809265]
[264.13995361 -237.10028076]
[262.77273560 -253.44233704]
[276.39428711 -262.57388306]
[290.99191284 -255.10119629]
[291.54885864 -238.71150208]
[277.49215698 -230.26513672]
[270.65701294 -216.91294861]
[279.75283813 -205.09213257]
[282.82693481 -190.43406677]
[279.21716309 -175.83506775]
[269.58749390 -164.20364380]
[255.80668640 -157.88098145]
[240.58570862 -158.16981506]
[233.75057983 -144.81764221]
[226.91543579 -131.46545410]
[220.08029175 -118.11326599]
[224.88630676 -104.06200409]
[218.14471436 -90.42362213]
[203.37388611 -85.47790527]
[196.53874207 -72.12571716]
[189.70359802 -58.77353287]
[182.86845398 -45.42134476]
[176.03332520 -32.06916046]
[169.19818115 -18.71697235]
[162.36303711 -5.36478710]
[155.52790833 7.98739910]
[148.69276428 21.33958626]
[141.85762024 34.69177246]
[135.02249146 48.04395676]
[128.18734741 61.39614487]
[133.61662292 66.01901245]
[138.29774475 71.39812469]
[142.12655640 77.41378021]
[145.01785278 83.93208313]
[146.90725708 90.80798340]
[147.75276184 97.88844299]
[147.53550720 105.01590729]
[146.26037598 112.03173065]
[143.95570374 118.77980042]
[140.67279053 125.10991669]
[136.48472595 130.88121033]
[131.48468018 135.96525574]
[125.78394318 140.24888611]
[119.50939178 143.63677979]
[112.80065155 146.05352783]
[114.50026703 160.95692444]
[123.75141144 173.79153442]
[117.50603485 187.31353760]
[119.20565033 202.21693420]
[128.13859558 208.51947021]
[132.02493286 218.50199890]
[129.79800415 228.75518799]
[122.43614197 235.91893005]
[123.57057190 250.87597656]
[124.70500183 265.83300781]
[127.34658813 269.40505981]
[128.56329346 273.24755859]
[128.44834900 276.87072754]
[127.24703217 279.86752319]
[125.31558228 281.95669556]
[125.31558228 296.95669556]
[125.31558228 311.95669556]
[125.31558228 326.95669556]
[125.31558228 341.95669556]
[125.31558228 356.95669556]
[125.31558228 371.95669556]
[125.31558228 386.95669556]
[125.31558228 401.95669556]
[125.31558228 416.95669556]
[125.31558228 431.95669556]
[137.41017151 441.86907959]
[140.25279236 457.24612427]
[132.50125122 470.82727051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[15 147]
[16 146]
[17 145]
[19 141]
[20 140]
[22 138]
[23 137]
[26 37]
[27 36]
[28 35]
[29 34]
[40 67]
[41 66]
[42 65]
[43 64]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[50 56]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[83 108]
[84 107]
[85 106]
[86 105]
[92 99]
[93 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
