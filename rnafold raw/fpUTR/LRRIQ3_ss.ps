%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCCCACGUAACCACGCCCCCGGAGCGCCUUGGCUGGCGCCCGGAAAACCAUGAUGUGGAGAACUUGGAUGUUGUCUUGUUUCUCUAGCAACGGUCUCAGGAGCAGAUGGCCGCCCAGCGAUUUGUCUGACUGUGUUGGGGCUGGGCCACUUGUCUCCAACUCAUAAGGGCUUGCAGCCCAGUUGACCCG\
) } def
/len { sequence length } bind def

/coor [
[195.07743835 254.40304565]
[185.98641968 242.47184753]
[172.11848450 237.03773499]
[169.90899658 221.37156677]
[160.81797791 209.44036865]
[151.72697449 197.50917053]
[142.63595581 185.57797241]
[133.54495239 173.64677429]
[133.12149048 188.64079285]
[124.75505066 201.09080505]
[111.03227234 207.14764404]
[96.19580841 204.93873596]
[84.83262634 195.14700317]
[80.45586395 180.79974365]
[84.41867828 166.33267212]
[95.49589539 156.21856689]
[110.26278687 153.58438110]
[124.15222168 159.24320984]
[116.90025330 146.11274719]
[109.64828491 132.98228455]
[102.39632416 119.85182953]
[88.07132721 115.40273285]
[74.65670013 122.11450958]
[61.24208069 128.82629395]
[47.82746124 135.53807068]
[41.54125977 142.18678284]
[34.13941956 142.24790955]
[20.61733055 148.74044800]
[7.09523916 155.23298645]
[-6.42685175 161.72552490]
[-19.94894218 168.21806335]
[-24.94897842 183.21057129]
[-39.12299347 190.20147705]
[-54.06179810 185.04321289]
[-60.90246201 170.79608154]
[-55.58654022 155.91264343]
[-41.26787949 149.22299194]
[-26.44148064 154.69596863]
[-12.91938972 148.20343018]
[0.60270083 141.71089172]
[14.12479210 135.21835327]
[27.64688301 128.72581482]
[41.11568451 122.12344360]
[54.53030396 115.41166687]
[67.94492340 108.69989014]
[81.35955048 101.98811340]
[82.75531006 94.61913300]
[67.76507568 94.07795715]
[52.77484131 93.53678894]
[39.05975342 99.61101532]
[24.76578522 95.06321716]
[17.08202744 82.18067169]
[19.87298775 67.44261169]
[31.73496628 58.26146317]
[46.70203400 59.25484848]
[57.24724197 69.92464447]
[71.39704132 74.90290833]
[85.54684448 79.88117981]
[86.94260406 72.51219940]
[76.91169739 61.35958099]
[66.88079071 50.20696640]
[56.84988022 39.05434799]
[46.81896973 27.90173340]
[36.78805923 16.74911690]
[26.75715256 5.59649944]
[11.42281151 7.06761551]
[-1.68425322 -0.68211067]
[-7.64423847 -14.50030804]
[-4.36393690 -29.00470734]
[-14.39484596 -40.15732574]
[-24.42575455 -51.30994034]
[-34.45666504 -62.46255875]
[-49.54422379 -70.19572449]
[-46.28992844 -86.83441162]
[-29.40060806 -88.31333923]
[-23.30404854 -72.49346924]
[-13.27313900 -61.34085083]
[-3.24222946 -50.18823242]
[6.78868008 -39.03561783]
[21.55839348 -40.76580048]
[34.66989899 -33.37983704]
[40.99208069 -19.52763748]
[37.90976715 -4.43441010]
[47.94067764 6.71820688]
[57.97158813 17.87082291]
[68.00249481 29.02343941]
[78.03340912 40.17605591]
[88.06431580 51.32867432]
[98.09522247 62.48128891]
[103.79629517 75.59534454]
[104.16011047 88.92636108]
[112.85795593 76.70557404]
[121.55579376 64.48478699]
[130.25363159 52.26400375]
[138.95147705 40.04322052]
[134.17308044 25.39831543]
[138.87931824 10.91712666]
[151.06602478 2.08831477]
[165.93669128 2.12799978]
[174.63452148 -10.09278488]
[183.33236694 -22.31357002]
[192.03021240 -34.53435516]
[193.03973389 -41.09309006]
[196.67218018 -45.48852158]
[201.21539307 -47.00511932]
[210.30641174 -58.93631744]
[219.39743042 -70.86751556]
[228.48843384 -82.79871368]
[237.57945251 -94.72991180]
[246.67045593 -106.66110992]
[248.87994385 -122.32727814]
[262.74789429 -127.76139069]
[271.83889771 -139.69258118]
[269.47479248 -155.31906128]
[278.91979980 -167.99055481]
[294.57040405 -170.18933105]
[307.14135742 -160.61085510]
[309.17453003 -144.93789673]
[299.46368408 -132.46893311]
[283.77011108 -130.60157776]
[274.67907715 -118.67037201]
[273.11984253 -103.85760498]
[258.60165405 -97.57009888]
[249.51065063 -85.63890076]
[240.41963196 -73.70770264]
[231.32862854 -61.77650070]
[222.23760986 -49.84530258]
[213.14659119 -37.91410446]
[204.25099182 -25.83651543]
[195.55314636 -13.61573029]
[186.85531616 -1.39494514]
[178.15747070 10.82584000]
[183.06561279 24.86322403]
[178.71536255 39.26945114]
[166.57441711 48.45915985]
[151.17225647 48.74105835]
[142.47441101 60.96184540]
[133.77658081 73.18262482]
[125.07873535 85.40341187]
[116.38089752 97.62419891]
[115.52677917 112.59986115]
[122.77874756 125.73032379]
[130.03071594 138.86077881]
[137.28268433 151.99124146]
[145.47615051 164.55575562]
[154.56715393 176.48695374]
[163.65817261 188.41815186]
[172.74917603 200.34934998]
[181.84019470 212.28054810]
[196.35838318 218.56806946]
[197.91761780 233.38082886]
[207.00863647 245.31202698]
[220.67385864 241.27030945]
[234.86798096 242.13652039]
[247.88551331 247.78611755]
[258.16937256 257.52108765]
[264.49700928 270.15609741]
[266.12582397 284.16268921]
[262.88027954 297.85440063]
[255.17047119 309.58963013]
[264.06607056 321.66720581]
[272.96166992 333.74481201]
[281.85729980 345.82238770]
[290.75289917 357.89999390]
[295.63238525 343.71582031]
[309.70745850 338.53005981]
[322.62322998 346.15783691]
[324.87765503 360.98745728]
[314.81219482 372.10891724]
[299.83300781 371.34082031]
[307.71728516 384.10162354]
[315.60153198 396.86242676]
[323.48580933 409.62326050]
[331.37008667 422.38406372]
[344.83914185 432.68066406]
[338.67355347 448.47375488]
[321.79083252 446.92108154]
[318.60925293 430.26834106]
[310.72500610 417.50750732]
[302.84072876 404.74670410]
[294.95645142 391.98590088]
[287.07220459 379.22506714]
[278.67529297 366.79559326]
[269.77969360 354.71798706]
[260.88409424 342.64041138]
[251.98849487 330.56280518]
[243.09288025 318.48522949]
[227.77560425 322.52087402]
[212.04380798 320.36740112]
[198.30804443 312.32495117]
[188.68449402 299.59832764]
[184.66886902 284.11657715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[18 144]
[19 143]
[20 142]
[21 141]
[22 46]
[23 45]
[24 44]
[25 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[69 79]
[70 78]
[71 77]
[72 76]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[99 132]
[100 131]
[101 130]
[102 129]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[112 121]
[113 120]
[160 187]
[161 186]
[162 185]
[163 184]
[164 183]
[170 182]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
