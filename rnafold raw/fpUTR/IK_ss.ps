%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAAAGCAGUGUGGGUUGAUUCUGAGGUGCACUGUGGGAAAGAGCUUGUCGCUGCGGUGUUGCUGUUGGAGACUCGAUUGUUGGUGACAGCGAAAGAACGAUAACAAA\
) } def
/len { sequence length } bind def

/coor [
[216.77546692 161.71936035]
[228.60671997 152.49865723]
[242.59056091 147.06997681]
[228.12950134 143.08526611]
[213.66844177 139.10055542]
[200.88412476 146.65681458]
[186.16180420 142.82174683]
[178.32279968 129.36116028]
[163.86174011 125.37644958]
[149.40068054 121.39174652]
[134.93962097 117.40703583]
[120.47856903 113.42233276]
[106.01751709 109.43762970]
[91.50152588 105.65795898]
[76.93349457 102.08407593]
[62.36547089 98.51020050]
[47.79744339 94.93631744]
[33.22941589 91.36244202]
[18.66139030 87.78855896]
[5.25316000 95.71680450]
[-9.46997929 91.88485718]
[-16.94572067 79.05329895]
[-31.51374626 75.47942352]
[-46.08177185 71.90554047]
[-60.64979935 68.33166504]
[-75.89602661 72.55813599]
[-86.41329956 62.01127243]
[-101.65953064 66.23773956]
[-112.17679596 55.69087982]
[-126.58708954 62.74234390]
[-141.02252197 55.74251175]
[-144.40948486 40.06105423]
[-134.14978027 27.72744751]
[-118.11376953 28.20297432]
[-108.60292053 41.12285614]
[-94.39869690 36.64075851]
[-82.83942413 47.44324493]
[-68.63519287 42.96114731]
[-57.07592010 53.76363754]
[-42.50789261 57.33751678]
[-27.93986702 60.91139603]
[-13.37184143 64.48527527]
[-0.80648106 56.57027054]
[14.01848030 59.98716354]
[22.23526955 73.22053528]
[36.80329514 76.79441071]
[51.37132263 80.36829376]
[65.93934631 83.94216919]
[80.50737762 87.51605225]
[95.07540131 91.08992767]
[103.16041565 89.79138947]
[110.00222015 94.97657013]
[124.46327972 98.96128082]
[138.92433167 102.94598389]
[153.38539124 106.93068695]
[167.84645081 110.91539764]
[182.30749512 114.90010071]
[195.93472290 107.35446930]
[210.54351807 111.60153198]
[217.65315247 124.63950348]
[232.11421204 128.62420654]
[246.57525635 132.60891724]
[261.57525635 132.60891724]
[276.03631592 128.62420654]
[290.49737549 124.63950348]
[304.95843506 120.65480042]
[319.41949463 116.67008972]
[333.88052368 112.68538666]
[348.34158325 108.70067596]
[362.80264282 104.71597290]
[370.64166260 91.25537872]
[385.36398315 87.42031860]
[398.14831543 94.97657013]
[412.60934448 90.99186707]
[427.07040405 87.00715637]
[434.65658569 73.14262390]
[449.84780884 68.78340912]
[463.63134766 76.51575470]
[467.82971191 91.75219727]
[459.95208740 105.45323181]
[444.67208862 109.49027252]
[431.05511475 101.46821594]
[416.59405518 105.45291901]
[402.13299561 109.43762970]
[395.02337646 122.47560120]
[380.41458130 126.72266388]
[366.78735352 119.17703247]
[352.32629395 123.16173553]
[337.86523438 127.14643860]
[323.40417480 131.13114929]
[308.94314575 135.11585999]
[294.48208618 139.10055542]
[280.02102661 143.08526611]
[265.55996704 147.06997681]
[279.54327393 152.49835205]
[291.37463379 161.71891785]
[300.05435181 173.95257568]
[304.84906006 188.16563416]
[305.35357666 203.15713501]
[301.52526855 217.66038513]
[293.68768311 230.44992065]
[282.50299072 240.44505310]
[268.91629028 246.80125427]
[254.07556152 248.98146057]
[239.23483276 246.80143738]
[225.64804077 240.44538879]
[214.46324158 230.45037842]
[206.62548828 217.66094971]
[202.79702759 203.15774536]
[203.30137634 188.16622925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 62]
[4 61]
[5 60]
[8 57]
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[22 42]
[23 41]
[24 40]
[25 39]
[27 37]
[29 35]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[73 84]
[74 83]
[75 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
