%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCAGCAGGAAGUGGGAGAAGAGGCGACCCAAGGCGGGCUGGCGGGCUGGCGGCAGUCGCUACUUGCCUAGUAGCCUCAGCCGCUGUGGGCUCCUGGGGAG\
) } def
/len { sequence length } bind def

/coor [
[123.83550262 325.86172485]
[121.18214417 311.09826660]
[118.52879333 296.33480835]
[108.66217804 285.17691040]
[113.83634186 270.22570801]
[111.18299103 255.46223450]
[108.52964020 240.69877625]
[98.66301727 229.54086304]
[103.83718872 214.58966064]
[101.18383789 199.82620239]
[98.53047943 185.06274414]
[96.12645721 183.33883667]
[94.31998444 180.48190308]
[93.57689667 176.73802185]
[94.25571442 172.52842712]
[96.54618835 168.40327454]
[95.65757751 153.42962646]
[94.76896667 138.45596313]
[93.88035583 123.48230743]
[84.57929993 118.73688507]
[78.13337708 110.52233887]
[75.73604584 100.35958862]
[77.83116913 90.13026428]
[84.03083801 81.72830963]
[93.18718719 76.70935059]
[93.63169098 61.71593475]
[94.07618713 46.72252274]
[94.52069092 31.72911072]
[94.96518707 16.73569679]
[87.64022827 2.71230388]
[95.75128174 -9.78009701]
[96.19578552 -24.77350998]
[88.15527344 -32.39646912]
[85.77696228 -42.99086380]
[89.62746429 -52.90588760]
[98.16938782 -58.86446762]
[99.50131989 -73.80521393]
[100.83325958 -88.74596405]
[102.16519928 -103.68671417]
[103.49713898 -118.62745667]
[104.82907867 -133.56820679]
[106.16101837 -148.50895691]
[103.77997589 -157.49873352]
[107.76023102 -163.87048340]
[109.53433228 -178.76519775]
[111.30843353 -193.65991211]
[113.08252716 -208.55462646]
[114.85662842 -223.44935608]
[116.63072205 -238.34407043]
[114.51712036 -247.40046692]
[118.68445587 -253.65145874]
[120.89915466 -268.48706055]
[123.11385345 -283.32266235]
[116.60089874 -298.37304688]
[126.59432220 -311.37548828]
[142.81373596 -308.95419312]
[148.57400513 -293.60000610]
[137.94944763 -281.10797119]
[135.73475647 -266.27236938]
[133.52005005 -251.43676758]
[131.52543640 -236.56996155]
[129.75134277 -221.67524719]
[127.97724152 -206.78053284]
[126.20314789 -191.88581848]
[124.42904663 -176.99110413]
[122.65495300 -162.09638977]
[121.10176086 -147.17701721]
[119.76982117 -132.23626709]
[118.43788910 -117.29552460]
[117.10594940 -102.35477448]
[115.77400970 -87.41402435]
[114.44207001 -72.47328186]
[113.11013031 -57.53253174]
[122.61640167 -40.80463028]
[111.18919373 -24.32901001]
[110.74469757 -9.33559704]
[118.10144806 3.61536765]
[109.95860291 17.18019676]
[109.51409912 32.17361069]
[109.06960297 47.16702271]
[108.62509918 62.16043472]
[108.18060303 77.15384674]
[122.16883087 90.13026428]
[122.45156860 109.20846558]
[108.85401154 122.59370422]
[109.74262238 137.56735229]
[110.63123322 152.54101562]
[111.51984406 167.51466370]
[113.29393768 182.40937805]
[115.94729614 197.17283630]
[118.60064697 211.93630981]
[128.65705872 224.15020752]
[123.29309845 238.04542542]
[125.94644928 252.80888367]
[128.59980774 267.57232666]
[138.65620422 279.78625488]
[133.29225159 293.68145752]
[135.94560242 308.44491577]
[138.59895325 323.20837402]
[152.25622559 330.82501221]
[157.77406311 345.45675659]
[152.54713440 360.19491577]
[139.04342651 368.08059692]
[123.63897705 365.39041138]
[113.60729980 353.39459229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[5 95]
[6 94]
[7 93]
[9 91]
[10 90]
[11 89]
[16 88]
[17 87]
[18 86]
[19 85]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[31 76]
[32 75]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[51 60]
[52 59]
[53 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
