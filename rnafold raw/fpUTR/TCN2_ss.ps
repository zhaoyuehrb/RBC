%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACCUCCAGGAGGGCUGCUCUGCCCUUCCUUCCUCUGUUCUUUGGCCUUAUGUUCCCCGCCACCACAGACCUUCCCCCGCCCCACCCCUCUGCAGACUUAGCCGUGCAUUGCAGGCAUGGAGGAUUAAUCAGUGACAGGAAGCUGCGUCUCUCGGAGCGGUGACCAGCUGUGGUCAGGAGAGCCUCAGCAGGGCCAGCCCCAGGAGUCUUUCCCGAUUCUUGCUCACUGCUCACCCACCUGCUGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[151.56430054 174.42298889]
[146.55343628 168.05387878]
[144.42875671 160.13632202]
[145.60426331 151.92864990]
[134.54156494 141.79866028]
[123.47887421 131.66867065]
[112.41617584 121.53867340]
[97.64771271 124.16401672]
[90.75401306 137.48606873]
[83.86032104 150.80810547]
[76.96662140 164.13015747]
[70.15676117 177.49525452]
[63.43101501 190.90287781]
[56.70526505 204.31050110]
[49.97951889 217.71812439]
[55.19490433 232.63706970]
[48.25827789 246.83773804]
[33.28501129 251.89509583]
[19.15848541 244.80871582]
[14.25971031 229.78282166]
[21.49504662 215.73200989]
[36.57189560 210.99237061]
[43.29764557 197.58474731]
[50.02339172 184.17712402]
[56.74914169 170.76950073]
[56.93858337 163.40039062]
[63.64457321 157.23646545]
[70.53826904 143.91441345]
[77.43196869 130.59236145]
[84.32566833 117.27031708]
[79.58139038 111.46154785]
[64.77603149 113.87013245]
[70.09283447 99.84400177]
[65.34856415 94.03522491]
[50.91814804 98.12950897]
[36.48773193 102.22378540]
[22.05731583 106.31806183]
[7.62690163 110.41234589]
[3.97792244 121.69519806]
[-4.56862926 129.74191284]
[-15.81886005 132.64527893]
[-26.96003342 129.79849243]
[-35.26371002 122.01773071]
[-49.79245758 125.74807739]
[-64.32120514 129.47842407]
[-78.84995270 133.20877075]
[-81.79389954 148.18528748]
[-90.95124054 160.39617920]
[-104.50377655 167.41696167]
[-119.76064301 167.85366821]
[-133.69258118 161.61958313]
[-143.53338623 149.95248413]
[-147.32917786 135.16888428]
[-144.32627869 120.20408630]
[-135.12092590 108.02935028]
[-121.54084015 101.06198120]
[-106.28237152 100.68536377]
[-92.37509155 106.97426605]
[-82.58029938 118.68003082]
[-68.05155182 114.94967651]
[-53.52280807 111.21932983]
[-38.99406052 107.48898315]
[-30.61711884 91.19143677]
[-12.67259789 86.13053894]
[3.53262258 95.98192596]
[17.96303749 91.88764954]
[32.39345169 87.79337311]
[46.82386780 83.69908905]
[61.25428391 79.60481262]
[46.62749863 76.27957153]
[32.00071716 72.95433044]
[33.15391922 57.99872589]
[43.65917969 47.29174042]
[58.59015274 45.85433197]
[70.94493103 54.36034393]
[80.18148041 66.17922974]
[89.41802979 77.99812317]
[86.97846985 63.19783401]
[84.53890991 48.39754486]
[82.09935760 33.59725571]
[72.22064972 21.23919106]
[77.78500366 7.42299891]
[75.34545135 -7.37729025]
[61.39954376 -10.20390415]
[49.27936172 -17.60193253]
[40.42775345 -28.66682625]
[35.89030075 -42.05897141]
[36.19185638 -56.16584778]
[41.27590561 -69.29618835]
[50.51378632 -79.88276672]
[62.78234863 -86.66941071]
[60.52896500 -101.49918365]
[58.27558136 -116.32896423]
[56.02219772 -131.15873718]
[53.76881409 -145.98851013]
[49.39585495 -153.97860718]
[51.58150482 -161.01869202]
[49.51465225 -175.87561035]
[47.44779968 -190.73252869]
[42.01212311 -196.51292419]
[40.57012177 -203.50381470]
[42.76522827 -209.45758057]
[37.59558487 -223.53858948]
[32.42594147 -237.61959839]
[27.25629616 -251.70060730]
[22.08665276 -265.78161621]
[16.91700935 -279.86264038]
[2.14718699 -284.99938965]
[-5.82086611 -298.45465088]
[-3.22487926 -313.87524414]
[8.70940208 -323.98004150]
[24.34697533 -323.99786377]
[36.30425644 -313.92028809]
[38.93538284 -298.50567627]
[30.99801636 -285.03225708]
[36.16765976 -270.95126343]
[41.33730316 -256.87026978]
[46.50695038 -242.78924561]
[51.67659378 -228.70823669]
[56.84623718 -214.62722778]
[58.65877151 -229.51731873]
[64.68296051 -243.25447083]
[74.40828705 -254.67453003]
[87.01059723 -262.80975342]
[101.42192841 -266.97070312]
[116.42100525 -266.80480957]
[130.73677063 -262.32608032]
[143.15603638 -253.91407776]
[152.62637329 -242.28167725]
[158.34521484 -228.41464233]
[159.82794189 -213.48809814]
[156.94888306 -198.76699829]
[149.95202637 -185.49882507]
[139.43032837 -174.80801392]
[126.27540588 -167.60049438]
[111.60207367 -164.48709106]
[96.65379333 -165.73162842]
[82.69733429 -171.22865295]
[70.91541290 -180.51231384]
[62.30471802 -192.79937744]
[64.37157440 -177.94245911]
[66.43843079 -163.08554077]
[68.59858704 -148.24189758]
[70.85197449 -133.41212463]
[73.10535431 -118.58234406]
[75.35874176 -103.75257111]
[77.61212158 -88.92279053]
[93.06490326 -85.35818481]
[105.99502563 -76.10984802]
[114.40206909 -62.57215118]
[116.97144318 -46.80582428]
[113.27980042 -31.22428703]
[103.86454010 -18.22420120]
[90.14573669 -9.81684780]
[92.58529663 4.98344135]
[102.28950500 16.28288841]
[96.89964294 31.15769768]
[99.33920288 45.95798492]
[101.77876282 60.75827408]
[104.21831512 75.55856323]
[117.62593842 82.28431702]
[130.94798279 75.39061737]
[144.27003479 68.49691772]
[157.59207153 61.60321808]
[170.91412354 54.70952225]
[184.23617554 47.81582260]
[192.62074280 33.72217560]
[209.01272583 34.20713043]
[216.54943848 48.77181244]
[207.47776794 62.43332291]
[191.12986755 61.13787079]
[177.80781555 68.03157043]
[164.48577881 74.92527008]
[151.16372681 81.81896210]
[137.84169006 88.71266174]
[124.51963806 95.60636139]
[122.54617310 110.47597504]
[133.60887146 120.60596466]
[144.67156982 130.73596191]
[155.73426819 140.86595154]
[177.91191101 144.15625000]
[183.48881531 165.07701111]
[195.04650879 174.63836670]
[210.56918335 173.34048462]
[222.15412903 183.20172119]
[223.29579163 198.00820923]
[234.85348511 207.56956482]
[246.41119385 217.13092041]
[257.96890259 226.69229126]
[269.52658081 236.25364685]
[281.08428955 245.81500244]
[292.64199829 255.37635803]
[314.80075073 251.46372986]
[332.32699585 265.12731934]
[333.89810181 287.01547241]
[346.14318848 295.67904663]
[358.38827515 304.34265137]
[374.34564209 298.69754028]
[390.36160278 303.63613892]
[400.17202759 317.01922607]
[400.06411743 333.44622803]
[412.41711426 341.95526123]
[424.77008057 350.46429443]
[437.12307739 358.97332764]
[449.47607422 367.48236084]
[461.82907104 375.99139404]
[474.18203735 384.50042725]
[486.53503418 393.00946045]
[502.03030396 389.89950562]
[515.13970947 398.72668457]
[518.08569336 414.25396729]
[509.12039185 427.26931763]
[493.56283569 430.05096436]
[480.64297485 420.94857788]
[478.02600098 405.36245728]
[465.67300415 396.85342407]
[453.32003784 388.34439087]
[440.96704102 379.83535767]
[428.61404419 371.32632446]
[416.26104736 362.81729126]
[403.90808105 354.30825806]
[391.55508423 345.79922485]
[379.44604492 351.38836670]
[366.04846191 350.26165771]
[354.86444092 342.60644531]
[348.87023926 330.33056641]
[349.72467041 316.58773804]
[337.47958374 307.92413330]
[325.23449707 299.26055908]
[318.43194580 303.32138062]
[310.70852661 305.23138428]
[302.73010254 304.80566406]
[295.19049072 302.06164551]
[288.75106812 297.21911621]
[283.98266602 290.68283081]
[281.31524658 283.00881958]
[280.99887085 274.85687256]
[283.08062744 266.93405151]
[271.52291870 257.37271118]
[259.96524048 247.81134033]
[248.40753174 238.24998474]
[236.84982300 228.68862915]
[225.29212952 219.12725830]
[213.73443604 209.56590271]
[198.97627258 211.21891785]
[187.11892700 201.68698120]
[185.48515320 186.19606018]
[173.92745972 176.63470459]
[166.47552490 179.01484680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 178]
[7 177]
[8 30]
[9 29]
[10 28]
[11 27]
[12 25]
[13 24]
[14 23]
[15 22]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[43 62]
[44 61]
[45 60]
[46 59]
[77 160]
[78 159]
[79 158]
[80 157]
[82 155]
[83 154]
[91 147]
[92 146]
[93 145]
[94 144]
[95 143]
[97 142]
[98 141]
[99 140]
[102 120]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[161 176]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
[182 248]
[183 247]
[186 244]
[187 243]
[188 242]
[189 241]
[190 240]
[191 239]
[192 238]
[195 229]
[196 228]
[197 227]
[201 222]
[202 221]
[203 220]
[204 219]
[205 218]
[206 217]
[207 216]
[208 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
