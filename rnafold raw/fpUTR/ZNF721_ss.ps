%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGCCAGCCCGCCACAGCGGGGCGUCACCUCGGACAUACGAACAGCGGGCGGUGUUCCCGGCUCCGUGGGGCCGUCUUCCCGGCGAGUCCGCGACGGUCGCCGCCCACGGCGAGGAACCCUUAACAUUCAGGGAUGUGGCCAUAGAAUUCUCUCCAGAAGAGUGGAAAUGCCUGGACCCUGCCCAGCAGAAUUUGUAUAGAGAUGUG\
) } def
/len { sequence length } bind def

/coor [
[-62.59188080 608.23266602]
[-66.50293732 616.51055908]
[-73.67515564 621.97668457]
[-82.42273712 623.50531006]
[-88.93099213 637.01983643]
[-95.43924713 650.53436279]
[-101.94750214 664.04888916]
[-101.55546570 669.25555420]
[-103.05075073 673.65209961]
[-105.80852509 676.65502930]
[-109.06295776 678.01379395]
[-116.17098999 691.22271729]
[-123.27902222 704.43164062]
[-130.38705444 717.64056396]
[-129.35588074 734.00726318]
[-143.16217041 742.85705566]
[-157.60319519 735.08599854]
[-157.82325745 718.68829346]
[-143.59597778 710.53253174]
[-136.48794556 697.32360840]
[-129.37992859 684.11468506]
[-122.27189636 670.90576172]
[-115.46203613 657.54064941]
[-108.95378113 644.02612305]
[-102.44552612 630.51159668]
[-95.93726349 616.99707031]
[-99.26788330 596.62902832]
[-81.37126160 584.84338379]
[-75.47588348 571.05041504]
[-69.58051300 557.25750732]
[-71.69303894 542.51348877]
[-59.15456009 532.86480713]
[-53.25918579 519.07189941]
[-61.14086914 508.29541016]
[-62.68058395 494.92434692]
[-57.36987686 482.43923950]
[-46.49756622 474.14328003]
[-32.83877563 472.28845215]
[-26.73772430 458.58529663]
[-20.63667488 444.88211060]
[-14.53562546 431.17892456]
[-8.43457603 417.47573853]
[-2.33352590 403.77255249]
[3.76752377 390.06936646]
[-3.80986643 373.40570068]
[3.32091737 356.19976807]
[21.06260109 349.55718994]
[26.75098228 335.67761230]
[32.33538818 321.75588989]
[37.81550217 307.79278564]
[43.29561615 293.82968140]
[48.77573395 279.86657715]
[54.25584793 265.90347290]
[59.73596573 251.94035339]
[59.25340271 244.56488037]
[65.40390778 237.81036377]
[63.07106018 223.09957886]
[75.46379089 213.26440430]
[81.15217590 199.38484192]
[86.84055328 185.50527954]
[84.50770569 170.79449463]
[96.90043640 160.95932007]
[102.58882141 147.07975769]
[108.27720642 133.20019531]
[64.04486084 134.08016968]
[37.99227905 80.96393585]
[28.63993073 69.23646545]
[19.28758430 57.50899124]
[9.93523788 45.78152084]
[0.49543169 34.12432861]
[-9.11770248 22.60965919]
[-18.81669617 11.16721535]
[-28.51568985 -0.27522868]
[-38.21468353 -11.71767235]
[-47.99899673 -23.08724785]
[-57.86807632 -34.38331985]
[-67.73715973 -45.67939377]
[-77.60623932 -56.97546387]
[-93.45181274 -59.48493576]
[-101.24374390 -73.50867462]
[-95.00473022 -88.28887939]
[-79.52081299 -92.48742676]
[-66.66992188 -82.88356018]
[-66.31016541 -66.84454346]
[-56.44108582 -55.54847336]
[-46.57200623 -44.25239944]
[-36.70292282 -32.95632935]
[-29.93427467 -29.98718834]
[-26.77224159 -21.41666603]
[-17.07324791 -9.97422314]
[-7.37425280 1.46822083]
[2.32474113 12.91066456]
[9.04821682 15.98072815]
[12.08168602 24.59759331]
[18.75848389 27.76789284]
[21.66271019 36.42917252]
[31.01505661 48.15664291]
[40.36740494 59.88411713]
[49.71974945 71.61158752]
[64.05334473 67.19026184]
[65.17429352 52.23220444]
[66.29524231 37.27414703]
[67.41619873 22.31608963]
[68.53714752 7.35803318]
[69.65809631 -7.60002375]
[62.05915070 -22.13233185]
[71.07229614 -35.83252335]
[87.42559052 -34.60701370]
[94.29615784 -19.71650314]
[84.61615753 -6.47907209]
[83.49520874 8.47898483]
[82.37425232 23.43704224]
[81.25330353 38.39509964]
[80.13235474 53.35315704]
[79.01139832 68.31121063]
[85.99295044 71.05126953]
[91.47329712 57.08825302]
[105.43622589 62.56883240]
[99.95606232 76.53138733]
[106.93761444 79.27144623]
[116.28996277 67.54396820]
[125.64230347 55.81649780]
[134.99465942 44.08902740]
[130.73687744 29.16753197]
[136.09451294 14.60472393]
[149.00743103 6.00029945]
[164.51036072 6.66283607]
[176.64210510 16.33757401]
[180.73774719 31.30438042]
[175.22245789 45.80821228]
[162.21694946 54.27204895]
[146.72212219 53.44137192]
[137.36978149 65.16884613]
[128.01742554 76.89631653]
[118.66508484 88.62378693]
[122.21910095 95.22825623]
[129.32713318 108.43718719]
[132.88114929 115.04165649]
[147.82075500 113.69706726]
[157.93247986 101.84840393]
[173.10253906 100.69762421]
[184.33610535 110.41062927]
[199.27571106 109.06604004]
[214.21533203 107.72144318]
[229.15495300 106.37685394]
[234.85246277 95.94148254]
[244.77847290 89.61719513]
[256.40466309 88.87772369]
[266.83505249 93.79134369]
[273.52737427 103.03254700]
[288.50051880 102.13548279]
[303.47366333 101.23841858]
[318.44683838 100.34136200]
[331.82757568 90.86046600]
[346.61364746 97.95301819]
[347.59439087 114.32281494]
[333.76089478 123.13000488]
[319.34390259 115.31451416]
[304.37072754 116.21157074]
[289.39758301 117.10863495]
[274.42443848 118.00569916]
[263.12445068 132.40728760]
[244.56799316 134.00387573]
[230.49954224 121.31647491]
[215.55992126 122.66106415]
[200.62031555 124.00565338]
[185.68069458 125.35024261]
[176.36196899 136.91297913]
[161.23023987 138.48941040]
[149.16534424 128.63668823]
[134.22573853 129.98127747]
[122.15676880 138.88858032]
[116.46838379 152.76814270]
[110.78000641 166.64770508]
[112.70598602 182.35124207]
[100.72012329 191.19366455]
[95.03173828 205.07322693]
[89.34336090 218.95278931]
[91.26934052 234.65632629]
[79.28347778 243.49874878]
[73.69907379 257.42047119]
[68.21895599 271.38357544]
[62.73883820 285.34667969]
[57.25872421 299.30978394]
[51.77861023 313.27288818]
[46.29849243 327.23599243]
[46.07625198 336.36853027]
[40.63054657 341.36599731]
[34.94216537 355.24557495]
[41.57993698 365.10955811]
[42.62094116 376.83300781]
[37.92176819 387.49285889]
[28.75582695 394.48730469]
[17.47070503 396.17041016]
[11.36965561 409.87359619]
[5.26860619 423.57678223]
[-0.83244342 437.27996826]
[-6.93349314 450.98315430]
[-13.03454304 464.68634033]
[-19.13559151 478.38952637]
[-10.47995377 492.92098999]
[-12.17420006 509.58288574]
[-23.35360336 521.82910156]
[-39.46626663 524.96728516]
[-45.36164474 538.76019287]
[-43.67079544 554.49078369]
[-55.78759384 563.15289307]
[-61.68296814 576.94580078]
[-67.57834625 590.73870850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 26]
[5 25]
[6 24]
[7 23]
[11 22]
[12 21]
[13 20]
[14 19]
[28 209]
[29 208]
[30 207]
[32 205]
[33 204]
[38 200]
[39 199]
[40 198]
[41 197]
[42 196]
[43 195]
[44 194]
[47 189]
[48 188]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 181]
[56 180]
[58 178]
[59 177]
[60 176]
[62 174]
[63 173]
[64 172]
[66 99]
[67 98]
[68 97]
[69 96]
[70 94]
[71 92]
[72 91]
[73 90]
[74 89]
[75 87]
[76 86]
[77 85]
[78 84]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[120 135]
[121 134]
[122 133]
[123 132]
[138 171]
[139 170]
[142 167]
[143 166]
[144 165]
[145 164]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
