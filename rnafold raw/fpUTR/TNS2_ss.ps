%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAUUCUUUCAAGUGACAGCUAUAGCCUGUCCCAGGGGCUGCUGUCCACAGCUUGGGGCUGAAGACUCCCAGGCCAUUAACCCCUUAGCUUUUAGGAAGAUUACUCCCCCUUUUUCAAGGCCCCAUCCACCUCCCUCCCUUGACUCCCAGGACGGGAAGUUGGCCAUGUUCCCAGGAGGGAGGCCGGAGGCCC\
) } def
/len { sequence length } bind def

/coor [
[271.34002686 168.57229614]
[251.45530701 169.59251404]
[232.17150879 164.57670593]
[215.27932739 153.98156738]
[202.35005188 138.78233337]
[194.58947754 120.38294983]
[192.72540283 100.48646545]
[177.95794678 97.85543823]
[163.19049072 95.22441101]
[148.42304993 92.59338379]
[133.65559387 89.96235657]
[118.88813782 87.33132935]
[120.00711060 107.09398651]
[105.79709625 118.84011078]
[89.23518372 114.67027283]
[76.16540527 122.03103638]
[63.09562302 129.39179993]
[50.08525467 136.85707092]
[37.13512802 144.42637634]
[24.18500519 151.99566650]
[11.23487949 159.56497192]
[-1.71524453 167.13426208]
[-4.31064034 171.69178772]
[-8.02666950 174.50849915]
[-12.00918674 175.44926453]
[-15.47482014 174.73890686]
[-28.77380943 181.67698669]
[-42.07279968 188.61506653]
[-55.37178802 195.55313110]
[-68.67077637 202.49121094]
[-71.86486816 217.79910278]
[-84.18332672 227.43183899]
[-99.80975342 226.84114075]
[-111.36582184 216.30589294]
[-113.39511108 200.80053711]
[-104.93946075 187.64622498]
[-89.99136353 183.05401611]
[-75.60885620 189.19221497]
[-62.30986404 182.25415039]
[-49.01087189 175.31607056]
[-35.71188354 168.37799072]
[-22.41289330 161.43992615]
[-9.28454304 154.18414307]
[3.66558170 146.61483765]
[16.61570549 139.04554749]
[29.56583023 131.47624207]
[42.51595688 123.90694427]
[46.70949936 117.80983734]
[55.73485947 116.32202148]
[68.80464172 108.96125793]
[81.87442017 101.60049438]
[82.96776581 88.64608765]
[93.13144684 78.31867218]
[79.94537354 71.16833496]
[66.75929260 64.01799774]
[53.57321167 56.86766434]
[40.38713455 49.71732712]
[27.20105553 42.56698990]
[14.01497555 35.41664886]
[0.82889700 28.26631355]
[-13.11444855 35.07533264]
[-28.39122772 32.35509872]
[-39.12720490 21.15160179]
[-41.19417953 5.77280951]
[-33.79735947 -7.86781597]
[-19.78096962 -14.52517605]
[-4.53459930 -11.63937950]
[6.07921076 -0.32007504]
[7.97923422 15.08023453]
[21.16531372 22.23057175]
[34.35139084 29.38090897]
[47.53747177 36.53124619]
[60.72354889 43.68158340]
[73.90962982 50.83192062]
[87.09571075 57.98225784]
[100.28178406 65.13259888]
[88.67917633 55.62578201]
[80.14556885 43.28975677]
[75.34177399 29.07977676]
[74.63977051 14.09621239]
[78.09393311 -0.50066364]
[85.43677521 -13.58052254]
[96.09969330 -24.13050652]
[109.25698853 -31.33366394]
[123.88981628 -34.63220596]
[138.86505127 -33.77070999]
[153.02308655 -28.81588364]
[165.26754761 -20.15141106]
[174.65028381 -8.44823933]
[180.44473267 5.38738155]
[182.20217896 20.28407097]
[179.78654480 35.08828354]
[173.38488770 48.65363312]
[163.49291992 59.92967224]
[150.87664795 68.04322052]
[136.51303101 72.36599731]
[121.51916504 72.56387329]
[136.28662109 75.19490051]
[151.05406189 77.82592773]
[165.82151794 80.45695496]
[180.58897400 83.08798218]
[195.35643005 85.71900940]
[199.22717285 75.85047150]
[204.63426208 66.73693085]
[211.43563843 58.61554337]
[219.45298767 51.69741058]
[228.47636414 46.16210938]
[238.26979065 42.15304565]
[248.57731628 39.77371216]
[259.12979126 39.08502579]
[269.65185547 40.10379028]
[279.86914062 42.80224609]
[289.51538086 47.10886765]
[298.33944702 52.91023636]
[306.11178589 60.05401993]
[312.63043213 68.35299683]
[317.72625732 77.58995056]
[321.26736450 87.52333832]
[323.16247559 97.89363861]
[323.36331177 108.43010712]
[321.86578369 118.85785675]
[336.02404785 123.81204224]
[350.18228149 128.76623535]
[364.34054565 133.72041321]
[369.49325562 132.74235535]
[374.04687500 133.74603271]
[377.34478760 136.16867065]
[379.05041504 139.26803589]
[392.95416260 144.89704895]
[406.85791016 150.52604675]
[425.02407837 147.54942322]
[435.27880859 161.78393555]
[449.27099609 167.18937683]
[463.26318359 172.59480286]
[477.25537109 178.00024414]
[491.24755859 183.40567017]
[505.23974609 188.81111145]
[519.23193359 194.21655273]
[533.22412109 199.62197876]
[547.21630859 205.02742004]
[561.96221924 207.77670288]
[576.96221924 207.77670288]
[591.96221924 207.77670288]
[606.96221924 207.77670288]
[619.27740479 197.49493408]
[634.96490479 200.85382080]
[641.99060059 215.27670288]
[634.96490479 229.69960022]
[619.27740479 233.05847168]
[606.96221924 222.77670288]
[591.96221924 222.77670288]
[576.96221924 222.77670288]
[561.96221924 222.77670288]
[559.77069092 229.94938660]
[555.38769531 244.29473877]
[553.19616699 251.46740723]
[565.63470459 259.85086060]
[578.07324219 268.23434448]
[590.51184082 276.61779785]
[602.95037842 285.00125122]
[616.71704102 278.19143677]
[632.04321289 279.19332886]
[644.80621338 287.73739624]
[651.57287598 301.52539062]
[650.52294922 316.84832764]
[641.93890381 329.58450317]
[628.12982178 336.30789185]
[612.81018066 335.20996094]
[600.10101318 326.58602905]
[593.42095947 312.75588989]
[594.56689453 297.43981934]
[582.12835693 289.05636597]
[569.68981934 280.67288208]
[557.25128174 272.28942871]
[544.81268311 263.90597534]
[533.16473389 238.16543579]
[541.81085205 219.01960754]
[527.81866455 213.61416626]
[513.82647705 208.20874023]
[499.83432007 202.80329895]
[485.84213257 197.39785767]
[471.84994507 191.99243164]
[457.85775757 186.58699036]
[443.86557007 181.18156433]
[429.87338257 175.77612305]
[418.68090820 180.38517761]
[406.97470093 175.98657227]
[401.22891235 164.42979431]
[387.32516479 158.80079651]
[373.42141724 153.17179871]
[359.38635254 147.87866211]
[345.22811890 142.92448425]
[331.06985474 137.97029114]
[316.91162109 133.01611328]
[305.65524292 149.38687134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 102]
[8 101]
[9 100]
[10 99]
[11 98]
[12 97]
[15 51]
[16 50]
[17 49]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[53 76]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[121 194]
[122 193]
[123 192]
[124 191]
[128 190]
[129 189]
[130 188]
[132 185]
[133 184]
[134 183]
[135 182]
[136 181]
[137 180]
[138 179]
[139 178]
[140 177]
[141 153]
[142 152]
[143 151]
[144 150]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
