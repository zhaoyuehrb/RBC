%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUGCCUCGGUUCGGCAAGUGGGUCAGUUGGCUGGGGCUCACUUGGCAACGGGACGCGGGAACGAGGGGCGCGGACGCAGGCCCGGGAGGACGCGGCGGCGGGAACCUGGGGGCGCAGGGCUAGGGCAGCGGGCCCGACCCGCACGGCUUUCCUGGAAAGCGCUGCCCCUCGCCGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[-128.57023621 376.10034180]
[-138.93983459 386.93878174]
[-153.06762695 391.97915649]
[-167.95591736 390.15197754]
[-180.44564819 381.84494019]
[-187.88667297 368.82067871]
[-188.70013428 353.84277344]
[-182.71351624 340.08941650]
[-195.95370483 347.13906860]
[-209.19389343 354.18872070]
[-222.43406677 361.23837280]
[-223.62968445 373.09640503]
[-230.34204102 382.79901123]
[-240.80177307 387.99252319]
[-252.34873962 387.48565674]
[-262.10833740 381.52078247]
[-271.10516357 394.53494263]
[-285.93771362 393.17694092]
[-299.41210938 399.76794434]
[-312.88647461 406.35891724]
[-326.36083984 412.94992065]
[-339.83523560 419.54092407]
[-353.30960083 426.13189697]
[-366.78396606 432.72290039]
[-380.25836182 439.31390381]
[-393.73272705 445.90487671]
[-407.20709229 452.49588013]
[-408.18087769 467.82385254]
[-416.70156860 480.60250854]
[-430.47711182 487.39440918]
[-445.80197144 486.37258911]
[-458.55383301 477.81188965]
[-465.30252075 464.01513672]
[-464.23266602 448.69354248]
[-455.63204956 435.96856689]
[-441.81420898 429.26315308]
[-426.49606323 430.38104248]
[-413.79809570 439.02148438]
[-400.32373047 432.43051147]
[-386.84933472 425.83950806]
[-373.37496948 419.24853516]
[-359.90060425 412.65753174]
[-346.42620850 406.06652832]
[-332.95184326 399.47555542]
[-319.47747803 392.88455200]
[-306.00308228 386.29354858]
[-292.52871704 379.70257568]
[-284.49566650 367.15985107]
[-268.69934082 368.04641724]
[-263.83334351 350.41748047]
[-247.35630798 341.77319336]
[-229.48371887 347.99816895]
[-216.24354553 340.94851685]
[-203.00335693 333.89886475]
[-189.76316833 326.84924316]
[-184.48727417 317.98007202]
[-173.04077148 316.00997925]
[-161.19949341 306.80212402]
[-149.35823059 297.59426880]
[-137.51695251 288.38644409]
[-125.67568970 279.17858887]
[-124.88266754 275.71887207]
[-122.35972595 272.47674561]
[-118.23007202 270.26779175]
[-112.97948456 269.82037354]
[-100.67990875 261.23431396]
[-88.38033295 252.64826965]
[-76.08075714 244.06221008]
[-63.78117752 235.47615051]
[-51.48160172 226.89009094]
[-39.18202591 218.30403137]
[-26.88244820 209.71797180]
[-14.65702248 201.02665710]
[-2.50664973 192.23071289]
[9.64372349 183.43478394]
[7.58714199 167.41874695]
[13.91799545 152.46209717]
[26.99824905 142.67720032]
[43.32030869 140.80603027]
[58.44737244 147.45237732]
[70.44496155 138.44917297]
[82.44255066 129.44595337]
[94.44013977 120.44274139]
[78.70759583 74.65486908]
[82.27809143 60.08601379]
[85.84859467 45.51715851]
[89.41909027 30.94830513]
[92.98959351 16.37944984]
[96.56008911 1.81059515]
[85.58635712 -8.84418678]
[81.44647980 -23.46465874]
[85.15592194 -38.09703445]
[95.62140656 -48.83619690]
[109.96055603 -52.86787796]
[113.53105164 -67.43673706]
[117.10155487 -82.00559235]
[112.00119781 -97.59143066]
[123.14872742 -109.61909485]
[139.07650757 -105.71555328]
[143.39941406 -89.89643097]
[131.67041016 -78.43508911]
[128.09991455 -63.86623383]
[124.52941132 -49.29737854]
[135.37947083 -39.09238815]
[139.69340515 -24.73112297]
[136.21673584 -10.04169941]
[125.78572845 1.00777757]
[111.12894440 5.38109446]
[107.55844879 19.94994926]
[103.98794556 34.51880264]
[100.41744995 49.08765793]
[96.84694672 63.65651321]
[93.27645111 78.22537231]
[105.72160339 86.59902191]
[117.87197876 77.80309296]
[130.02235413 69.00715637]
[133.96881104 53.45707703]
[148.64570618 46.97877884]
[162.79417419 54.54186249]
[165.56072998 70.34457397]
[154.82310486 82.26442719]
[138.81828308 81.15753174]
[126.66790771 89.95346832]
[114.51753998 98.74939728]
[118.70982361 113.15164948]
[133.68275452 114.05238342]
[148.65568542 114.95311737]
[163.62861633 115.85385132]
[178.60154724 116.75458527]
[196.18144226 106.92332458]
[211.86267090 118.21176147]
[226.85769653 118.59798431]
[241.85273743 118.98419952]
[256.84774780 119.37042236]
[271.84277344 119.75663757]
[284.41867065 109.79537201]
[300.01446533 113.55706024]
[306.66644287 128.15605164]
[299.27175903 142.39326477]
[283.50296021 145.34712219]
[271.45657349 134.75166321]
[256.46154785 134.36544800]
[241.46650696 133.97923279]
[226.47148132 133.59300232]
[211.47645569 133.20678711]
[204.70716858 140.90170288]
[194.60446167 143.64500427]
[184.45520020 140.29312134]
[177.70080566 131.72750854]
[162.72787476 130.82678223]
[147.75494385 129.92604065]
[132.78201294 129.02531433]
[117.80908966 128.12457275]
[103.44335175 132.44032288]
[91.44576263 141.44354248]
[79.44817352 150.44676208]
[67.45058441 159.44996643]
[69.84603882 173.24501038]
[66.07684326 186.66085815]
[56.93479919 197.09031677]
[44.25000000 202.53219604]
[30.52467918 201.97517395]
[18.43965530 195.58515930]
[6.28928328 204.38108826]
[-5.86108971 213.17703247]
[-10.99380779 220.76379395]
[-18.29638863 222.01754761]
[-30.59596443 230.60360718]
[-42.89554214 239.18966675]
[-55.19511795 247.77572632]
[-67.49469757 256.36178589]
[-79.79427338 264.94784546]
[-92.09384918 273.53390503]
[-104.39342499 282.11996460]
[-116.46784973 291.01986694]
[-128.30911255 300.22772217]
[-140.15039062 309.43554688]
[-151.99165344 318.64340210]
[-163.83291626 327.85122681]
[-148.83367920 328.00198364]
[-135.49331665 334.86016846]
[-126.64246368 346.97058105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 55]
[9 54]
[10 53]
[11 52]
[16 49]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[57 179]
[58 178]
[59 177]
[60 176]
[61 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 169]
[71 168]
[72 167]
[73 165]
[74 164]
[75 163]
[80 157]
[81 156]
[82 155]
[83 154]
[84 113]
[85 112]
[86 111]
[87 110]
[88 109]
[89 108]
[94 103]
[95 102]
[96 101]
[114 124]
[115 123]
[116 122]
[125 153]
[126 152]
[127 151]
[128 150]
[129 149]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
