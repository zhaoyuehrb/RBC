%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAGGCCGAGUCUUCGGCCACCCAAAGGCGGAGUAAGAAACCAGAAGCGGAUCUGAUUGGUUGCUGGAAGACGCCGCGCCCACCUCACAGAAGGACGAACCAGUGAGCUAAGCUGCGGGGCGCGGGCUCGGCCGGGGCACCGGUGAGUCGCCGGCGCUGCAGAGGGAGGCGGCACUGGUCUCGACGUGGGGCGGCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[126.14636993 142.49760437]
[117.30534363 146.79962158]
[107.79237366 149.28445435]
[97.97682953 149.85565186]
[88.23985291 148.49101257]
[82.55352020 162.37141418]
[76.86719513 176.25181580]
[71.18087006 190.13223267]
[65.49454498 204.01263428]
[59.80821991 217.89303589]
[62.54691315 234.06188965]
[49.74282837 244.30822754]
[34.56770325 238.09149170]
[32.63241196 221.80694580]
[45.92781067 212.20671082]
[51.61413956 198.32630920]
[57.30046463 184.44590759]
[62.98678970 170.56549072]
[68.67311859 156.68508911]
[74.35944366 142.80468750]
[64.86406708 135.42802429]
[57.40905762 125.99404907]
[52.42733002 115.05057526]
[37.60837173 117.37404633]
[22.78941536 119.69751740]
[13.47820854 132.18507385]
[-1.58341920 134.33030701]
[-13.43101883 125.37654114]
[-28.24997520 127.70001221]
[-43.06893158 130.02348328]
[-55.50404739 139.80502319]
[-69.27619934 134.13253784]
[-84.09516144 136.45600891]
[-90.72617340 148.18466187]
[-102.72733307 153.86767578]
[-115.61896515 151.63180542]
[-124.73022461 142.51463318]
[-139.58352661 144.60736084]
[-154.43682861 146.70008850]
[-162.80862427 156.51835632]
[-175.22811890 157.95220947]
[-184.97073364 150.77459717]
[-199.85478210 152.63609314]
[-209.35780334 165.26416016]
[-225.01831055 167.39114380]
[-237.54519653 157.75514221]
[-239.50648499 142.07301331]
[-229.73858643 129.64869690]
[-214.03660583 127.85331726]
[-201.71626282 137.75204468]
[-186.83221436 135.89056396]
[-173.43640137 124.55868530]
[-156.52955627 131.84680176]
[-141.67625427 129.75407410]
[-126.82295990 127.66133881]
[-117.29331207 113.80800629]
[-100.36003113 111.07601929]
[-86.41863251 121.63705444]
[-71.59967041 119.31358337]
[-60.22451019 109.69823456]
[-45.39240265 115.20452881]
[-30.57344818 112.88105774]
[-15.75449181 110.55758667]
[-7.21578741 98.40744019]
[7.77964306 95.84000397]
[20.46594238 104.87856293]
[35.28490067 102.55509186]
[50.10385513 100.23162079]
[54.21974182 80.15442657]
[66.05921936 63.42538834]
[83.62484741 52.86685562]
[103.95313263 50.26016235]
[123.61448669 56.04508209]
[139.29183960 69.24564362]
[152.35928345 61.88072968]
[165.42672729 54.51581573]
[178.49417114 47.15090561]
[191.56161499 39.78599548]
[197.50650024 32.84109497]
[204.89004517 32.40996170]
[218.07043457 25.24916458]
[231.25083923 18.08836746]
[244.43124390 10.92756939]
[257.61163330 3.76677108]
[242.75445557 1.70184422]
[230.85710144 -7.43341494]
[225.02612305 -21.25367928]
[226.78407288 -36.15031052]
[235.67190552 -48.23361969]
[249.36891174 -54.34850693]
[264.29864502 -52.89830017]
[276.56277466 -44.26166916]
[282.95895386 -30.69373894]
[281.81710815 -15.73726273]
[273.43655396 -3.29859614]
[283.84078979 -15.21758652]
[298.42630005 -12.19899654]
[312.55682373 -17.23174667]
[326.68731689 -22.26449776]
[340.77828979 -27.40697670]
[354.82882690 -32.65887451]
[368.87936401 -37.91077042]
[382.92990112 -43.16266632]
[396.98043823 -48.41456223]
[411.03097534 -53.66645813]
[425.08151245 -58.91835785]
[436.45819092 -73.39347839]
[453.63867188 -69.83121490]
[467.60583496 -75.30098724]
[481.57299805 -80.77075958]
[485.61782837 -98.43937683]
[499.33511353 -110.04557037]
[517.11578369 -111.09051514]
[531.83599854 -101.34445953]
[545.62634277 -107.24596405]
[559.41662598 -113.14746857]
[573.20690918 -119.04897308]
[586.99719238 -124.95047760]
[600.78747559 -130.85197449]
[610.43060303 -143.39474487]
[625.17559814 -141.28877258]
[638.96588135 -147.19026184]
[645.63012695 -153.44813538]
[653.01684570 -153.07447815]
[666.89721680 -158.76080322]
[680.77764893 -164.44712830]
[694.56793213 -170.34863281]
[708.26477051 -176.46388245]
[721.96160889 -182.57913208]
[735.65850830 -188.69439697]
[749.35534668 -194.80964661]
[755.92150879 -201.17039490]
[763.31304932 -200.91165161]
[777.10339355 -206.81315613]
[790.89367676 -212.71466064]
[804.68395996 -218.61616516]
[814.07623291 -232.05924988]
[830.38891602 -230.37745667]
[836.84088135 -215.30084229]
[826.79492188 -202.33895874]
[810.58544922 -204.82586670]
[796.79516602 -198.92436218]
[783.00488281 -193.02285767]
[769.21459961 -187.12135315]
[755.47058105 -181.11279297]
[741.77374268 -174.99754333]
[728.07690430 -168.88229370]
[714.38006592 -162.76702881]
[700.68316650 -156.65177917]
[698.16802979 -152.58412170]
[693.06750488 -150.05715942]
[686.46398926 -150.56671143]
[672.58355713 -144.88038635]
[658.70312500 -139.19406128]
[644.86737061 -133.39997864]
[631.07708740 -127.49846649]
[622.42034912 -115.37782288]
[606.68902588 -117.06168365]
[592.89868164 -111.16017914]
[579.10839844 -105.25867462]
[565.31811523 -99.35717010]
[551.52783203 -93.45566559]
[537.73754883 -87.55416107]
[536.82440186 -75.44056702]
[530.80950928 -64.80318451]
[520.78216553 -57.69305801]
[508.61163330 -55.51102448]
[496.59921265 -58.73206329]
[487.04278564 -66.80359650]
[473.07562256 -61.33382416]
[459.10845947 -55.86405182]
[453.97418213 -44.90614700]
[442.37673950 -40.23716736]
[430.33340454 -44.86782074]
[416.28286743 -39.61592102]
[402.23233032 -34.36402512]
[388.18179321 -29.11212921]
[374.13125610 -23.86023331]
[360.08071899 -18.60833549]
[346.03018188 -13.35643959]
[340.86166382 -8.06596375]
[331.72009277 -8.13398266]
[317.58956909 -3.10123277]
[303.45904541 1.93151760]
[294.06552124 13.49053192]
[278.46929932 10.83191776]
[264.77243042 16.94717216]
[251.59204102 24.10796928]
[238.41163635 31.26876831]
[225.23124695 38.42956543]
[212.05084229 45.59036255]
[198.92651367 52.85343933]
[185.85906982 60.21834946]
[172.79162598 67.58325958]
[159.72418213 74.94817352]
[146.65673828 82.31307983]
[149.21917725 91.80545044]
[149.87051392 101.61599731]
[148.58541870 111.36379242]
[145.41381836 120.67035675]
[140.47886658 129.17431641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[23 68]
[24 67]
[25 66]
[28 63]
[29 62]
[30 61]
[32 59]
[33 58]
[37 55]
[38 54]
[39 53]
[42 51]
[43 50]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[95 186]
[97 184]
[98 183]
[99 182]
[100 180]
[101 179]
[102 178]
[103 177]
[104 176]
[105 175]
[106 174]
[108 171]
[109 170]
[110 169]
[114 163]
[115 162]
[116 161]
[117 160]
[118 159]
[119 158]
[121 156]
[122 155]
[124 154]
[125 153]
[126 152]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
