%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCCUGAAACGUUCGGCGAGCCGACUGCGGCUGCGCGGGGUAUUCGAAUCGGCGGCGGCUUCUAGUUUGCGGUUCAGGUUUGGCCGCUGCCGGCCAGCGUCCUCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[102.05538177 133.70520020]
[89.59399414 131.13034058]
[79.31459045 124.25691223]
[72.57804871 114.31799316]
[57.99493408 117.82981110]
[43.41182327 121.34162903]
[28.82871246 124.85344696]
[14.24560165 128.36526489]
[27.49957657 135.38894653]
[35.62047958 148.00048828]
[36.53034210 162.97286987]
[29.99635506 176.47497559]
[17.69042397 185.05192566]
[2.76136518 186.50904846]
[-10.97079754 180.47351074]
[-19.99230194 168.48966980]
[-21.99474335 153.62393188]
[-16.46574020 139.68011475]
[-4.82061577 130.22639465]
[-19.80757332 129.60104370]
[-34.79453278 128.97567749]
[-49.78873444 128.55871582]
[-64.78728485 128.35020447]
[-79.78583527 128.14169312]
[-94.78438568 127.93318939]
[-109.78293610 127.72468567]
[-123.82582855 136.19400024]
[-138.04916382 128.03137207]
[-137.82121277 111.63381195]
[-123.37646484 103.86972046]
[-109.57443237 112.72613525]
[-94.57588196 112.93463898]
[-79.57733154 113.14315033]
[-64.57878113 113.35165405]
[-49.58023071 113.56015778]
[-42.75237274 110.46295929]
[-34.16917419 113.98872375]
[-19.18221664 114.61408234]
[-4.19525862 115.23944092]
[10.73378372 113.78215027]
[25.31689644 110.27033234]
[39.90000534 106.75851440]
[54.48311996 103.24669647]
[69.06623077 99.73487854]
[69.92300415 90.95690918]
[73.25696564 82.64793396]
[78.86968994 75.50263977]
[86.36931610 70.14054108]
[95.19741058 67.05252075]
[104.67028046 66.55670929]
[114.03190613 68.76731110]
[122.51425171 73.57955933]
[129.40025330 80.67236328]
[134.08424377 89.52885437]
[146.48341370 81.08726501]
[158.88258362 72.64566803]
[171.28175354 64.20407104]
[183.68093872 55.76247787]
[196.08010864 47.32088089]
[208.47927856 38.87928772]
[220.87844849 30.43769264]
[233.27761841 21.99609756]
[245.67678833 13.55450153]
[244.40946960 0.95676595]
[248.64836121 -10.89670181]
[257.51379395 -19.73137856]
[269.24481201 -23.88055229]
[281.54876709 -22.59953499]
[292.04928589 -16.19850159]
[304.89843750 -23.93796921]
[317.74758911 -31.67743683]
[330.59674072 -39.41690445]
[335.84103394 -54.57859039]
[351.01217651 -59.79552841]
[364.47213745 -51.06573105]
[365.89556885 -35.08595276]
[354.19058228 -24.11450958]
[338.33621216 -26.56775665]
[325.48706055 -18.82828712]
[312.63790894 -11.08882046]
[299.78875732 -3.34935212]
[299.16091919 14.18669510]
[288.11874390 28.02344513]
[270.85861206 32.60586929]
[254.11839294 25.95367432]
[241.71922302 34.39526749]
[229.32003784 42.83686447]
[216.92086792 51.27845764]
[204.52169800 59.72005463]
[192.12252808 68.16165161]
[179.72335815 76.60324860]
[167.32418823 85.04483795]
[154.92501831 93.48643494]
[142.52583313 101.92803192]
[139.21707153 116.55854797]
[146.77719116 129.51403809]
[154.33729553 142.46952820]
[161.89741516 155.42501831]
[169.45751953 168.38050842]
[177.01762390 181.33599854]
[192.36401367 185.11277771]
[200.47337341 198.67794800]
[196.53454590 213.98353577]
[182.88439941 221.94902039]
[167.62130737 217.84860229]
[159.80058289 204.11500549]
[164.06214905 188.89610291]
[156.50202942 175.94061279]
[148.94192505 162.98512268]
[141.38180542 150.02963257]
[133.82170105 137.07414246]
[126.26158142 124.11865997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[19 39]
[20 38]
[21 37]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[69 81]
[70 80]
[71 79]
[72 78]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
