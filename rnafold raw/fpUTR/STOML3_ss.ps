%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAAGGAAUGUCUUUCACUCUCUCAUACUUUCUCCUCUCCCCUCUCCCAAGCACAUCUGAGUUGCUGCCUGUUCUUCACACUUAGCUCCAAACCCAUGAAAAAUUGCCAAGUAUAAAAGCUUCUCAAGAAUGAGAUGGAUUCUAGGGUGUCUUCACCUGAGAAGCAAGAUAAAGAGAAUUUCGUGGCACGUCUAUUACCUAAUGGAGCUGAGCCUCAUGUGCACGUGUAAUGAUGCAAGGGCUUG\
) } def
/len { sequence length } bind def

/coor [
[-443.07885742 976.41467285]
[-458.73803711 982.91174316]
[-475.62048340 984.25152588]
[-492.07342529 980.31396484]
[-499.62777710 993.27282715]
[-507.18209839 1006.23168945]
[-514.73645020 1019.19049072]
[-522.29083252 1032.14941406]
[-529.84515381 1045.10827637]
[-537.39947510 1058.06701660]
[-537.66516113 1073.88610840]
[-550.75933838 1080.98474121]
[-558.31365967 1093.94360352]
[-565.86804199 1106.90246582]
[-556.93420410 1119.23559570]
[-553.79541016 1134.13757324]
[-556.99548340 1149.02648926]
[-565.97998047 1161.32275391]
[-579.19232178 1168.89587402]
[-594.34338379 1170.43395996]
[-608.80810547 1165.67053223]
[-620.08044434 1155.43066406]
[-626.20733643 1141.48852539]
[-626.12731934 1126.25988770]
[-619.85424805 1112.38293457]
[-608.47491455 1102.26220703]
[-593.96093750 1097.65087891]
[-578.82690430 1099.34814453]
[-571.27252197 1086.38928223]
[-563.71820068 1073.43041992]
[-563.99285889 1058.53833008]
[-550.35833740 1050.51269531]
[-542.80401611 1037.55383301]
[-535.24963379 1024.59497070]
[-527.69531250 1011.63616943]
[-520.14099121 998.67730713]
[-512.58660889 985.71844482]
[-505.03225708 972.75964355]
[-514.26477051 963.54132080]
[-521.02612305 952.37121582]
[-524.91851807 939.89691162]
[-525.71063232 926.84301758]
[-523.35131836 913.96905518]
[-517.97308350 902.02539062]
[-509.88436890 891.70928955]
[-499.55212402 883.62426758]
[-487.57470703 878.24487305]
[-474.64727783 875.88885498]
[-461.52142334 876.69818115]
[-448.96148682 880.63079834]
[-440.92407227 867.96588135]
[-432.88668823 855.30096436]
[-436.37634277 840.86639404]
[-428.40570068 827.90783691]
[-413.24169922 824.34539795]
[-405.20428467 811.68048096]
[-397.16690063 799.01556396]
[-397.30895996 794.26483154]
[-394.48535156 789.36962891]
[-388.76498413 786.13696289]
[-380.41186523 773.67797852]
[-380.71914673 770.18939209]
[-379.36773682 766.37817383]
[-376.22390747 763.01843262]
[-371.50167847 760.91503906]
[-362.68490601 748.77978516]
[-353.86813354 736.64453125]
[-345.05136108 724.50927734]
[-336.23458862 712.37402344]
[-334.84915161 705.13385010]
[-327.22998047 700.14263916]
[-318.26141357 688.11914062]
[-316.85366821 673.29119873]
[-302.40051270 666.85559082]
[-293.43194580 654.83209229]
[-284.46334839 642.80859375]
[-283.05563354 627.98065186]
[-268.60247803 621.54504395]
[-276.31332397 608.75946045]
[-278.54769897 593.95562744]
[-274.93429565 579.38482666]
[-265.99353027 567.27490234]
[-253.06278992 559.48974609]
[-238.09642029 557.24230957]
[-223.37046814 560.90588379]
[-214.40188599 548.88238525]
[-205.43331909 536.85888672]
[-196.46473694 524.83532715]
[-187.49617004 512.81182861]
[-178.52758789 500.78836060]
[-169.55902100 488.76483154]
[-160.59043884 476.74133301]
[-151.62185669 464.71783447]
[-142.65328979 452.69433594]
[-152.69837952 441.58261108]
[-160.38497925 428.72048950]
[-165.41607666 414.60134888]
[-167.59652710 399.76724243]
[-166.84068298 384.78796387]
[-163.17572021 370.23934937]
[-156.74067688 356.68103027]
[-147.78120422 344.63488770]
[-136.64012146 334.56503296]
[-123.74436951 326.85983276]
[-109.58862305 321.81710815]
[-94.71631622 319.63235474]
[-79.69876099 320.39144897]
[-65.11324310 324.06704712]
[-51.52079010 330.51971436]
[-42.55221558 318.49621582]
[-33.58364105 306.47271729]
[-24.61506844 294.44921875]
[-15.64649296 282.42572021]
[-16.12912750 275.58364868]
[-12.20310211 268.89001465]
[-4.38187170 265.15899658]
[3.00903845 252.10623169]
[10.39994812 239.05348206]
[3.76860666 227.48226929]
[3.71396542 214.03752136]
[10.35704422 202.22421265]
[22.05888557 195.17474365]
[35.82362747 194.81854248]
[43.37797546 181.85969543]
[50.93232346 168.90084839]
[58.48667145 155.94198608]
[66.04101562 142.98313904]
[73.59536743 130.02429199]
[81.14971161 117.06543732]
[88.70406342 104.10659027]
[60.39087677 68.20423889]
[65.56051636 54.12322998]
[70.73016357 40.04222488]
[75.89980316 25.96121597]
[81.06945038 11.88020706]
[73.13208771 -1.59318256]
[75.76321411 -17.00782394]
[87.72048950 -27.08539581]
[103.35806274 -27.06757545]
[115.29235077 -16.96277809]
[117.88833618 -1.54217875]
[109.92028046 11.91308594]
[95.15045929 17.04985046]
[89.98081207 31.13085938]
[84.81117249 45.21186829]
[79.64152527 59.29287338]
[74.47188568 73.37388611]
[80.82946777 77.35271454]
[93.54463959 85.31038666]
[99.90222168 89.28921509]
[110.30702209 78.48458099]
[120.71182251 67.67994690]
[131.11662292 56.87531281]
[134.53436279 40.83626556]
[150.21482849 36.03466797]
[162.02728271 47.40998840]
[157.82008362 63.26027679]
[141.92124939 67.28011322]
[131.51644897 78.08474731]
[121.11165619 88.88938141]
[110.70685577 99.69401550]
[101.66291046 111.66093445]
[94.10856628 124.61978912]
[86.55421448 137.57864380]
[78.99987030 150.53749084]
[71.44551849 163.49633789]
[63.89117432 176.45518494]
[56.33682632 189.41404724]
[48.78247833 202.37289429]
[55.80764008 217.77262878]
[52.29515839 234.16052246]
[39.82567596 245.10876465]
[23.45270538 246.44439697]
[16.06179428 259.49716187]
[8.67088413 272.54989624]
[22.18843842 266.04791260]
[37.18664551 265.81597900]
[50.89878845 271.89688110]
[60.79538727 283.16882324]
[65.05081940 297.55255127]
[62.88008499 312.39465332]
[54.68362045 324.95721436]
[41.97342300 332.92282104]
[27.09414864 334.82205200]
[12.79056835 330.30459595]
[1.70126653 320.20373535]
[-4.12811518 306.38278198]
[-3.62298822 291.39428711]
[-12.59156322 303.41778564]
[-21.56013680 315.44128418]
[-30.52871323 327.46481323]
[-39.49728775 339.48831177]
[-29.43813896 350.67782593]
[-21.75783348 363.61074829]
[-16.74994278 377.78903198]
[-14.60517311 392.66717529]
[-15.40410042 407.67303467]
[-19.11414909 422.23001099]
[-25.59091377 435.77911377]
[-34.58377838 447.80035400]
[-45.74561691 457.83285522]
[-58.64618301 465.49243164]
[-72.78870392 470.48629761]
[-87.62901306 472.62429810]
[-102.59646606 471.82611084]
[-117.11591339 468.12426758]
[-130.62979126 461.66290283]
[-139.59835815 473.68640137]
[-148.56694031 485.70989990]
[-157.53550720 497.73342896]
[-166.50408936 509.75692749]
[-175.47265625 521.78039551]
[-184.44123840 533.80395508]
[-193.40980530 545.82745361]
[-202.37838745 557.85095215]
[-211.34695435 569.87445068]
[-203.63815308 582.94543457]
[-201.52667236 597.93157959]
[-205.30343628 612.54492188]
[-214.36277771 624.56640625]
[-227.29931641 632.18286133]
[-242.12593079 634.26055908]
[-256.57894897 630.51367188]
[-258.62820435 646.20159912]
[-272.43984985 651.77716064]
[-281.40841675 663.80065918]
[-290.37701416 675.82415771]
[-292.42623901 691.51208496]
[-306.23788452 697.08770752]
[-315.20648193 709.11120605]
[-324.09933472 721.19085693]
[-332.91610718 733.32611084]
[-341.73287964 745.46136475]
[-350.54965210 757.59661865]
[-359.36642456 769.73187256]
[-367.95291138 782.03112793]
[-376.30606079 794.49005127]
[-384.50195312 807.05297852]
[-392.53936768 819.71789551]
[-400.57678223 832.38281250]
[-397.34362793 847.62042236]
[-405.67510986 860.34997559]
[-420.22177124 863.33837891]
[-428.25915527 876.00329590]
[-436.29656982 888.66821289]
[-425.21331787 901.63958740]
[-418.68679810 917.38397217]
[-417.34533691 934.35656738]
[-421.30908203 950.89575195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[10 32]
[12 30]
[13 29]
[14 28]
[50 245]
[51 244]
[52 243]
[55 240]
[56 239]
[57 238]
[60 237]
[61 236]
[65 235]
[66 234]
[67 233]
[68 232]
[69 231]
[71 230]
[72 229]
[74 227]
[75 226]
[76 225]
[78 223]
[85 216]
[86 215]
[87 214]
[88 213]
[89 212]
[90 211]
[91 210]
[92 209]
[93 208]
[94 207]
[109 192]
[110 191]
[111 190]
[112 189]
[113 188]
[116 175]
[117 174]
[118 173]
[123 169]
[124 168]
[125 167]
[126 166]
[127 165]
[128 164]
[129 163]
[130 162]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
