%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUGCUGUGGACUUCCGGGGCGGGGCCUGCCUGGAGCGGAAGAGCCUGGGCAGUGCACGGGGCCUGGGUGGGGGGUGCGGGUGUGGGUGGGGACCUGCGGCCUUCGAGUCCGCGGCCUUCGAGUCCUGGGGCGGCGGCGGCGGCUGCAGGCACGGGCACGGGCACGGGGCGGGGUGCUUAGGGUGCAGGAGGCGCGCGCCUAGCGGCGGAGUGUGGCGUGAGGCCGGGCCCGCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[342.33923340 215.24504089]
[327.55697632 217.79167175]
[316.26071167 207.92280579]
[316.79943848 192.93247986]
[328.77566528 183.89982605]
[314.47399902 179.37629700]
[300.17233276 174.85275269]
[285.87066650 170.32922363]
[271.56900024 165.80569458]
[257.10092163 169.34461975]
[246.27656555 157.80583191]
[238.96623230 158.78337097]
[231.81864929 153.12899780]
[217.57716370 148.41941833]
[210.25469971 149.30158997]
[203.18144226 143.55451965]
[189.00254822 138.65969849]
[174.82366943 133.76487732]
[160.64479065 128.87005615]
[146.46589661 123.97524261]
[132.28701782 119.08042145]
[118.10813904 114.18560791]
[110.87126160 120.27194214]
[101.79731750 122.93263245]
[92.41965485 121.71806335]
[84.32294464 116.83348083]
[71.07975769 123.87747192]
[57.88275146 131.00762939]
[44.73250580 138.22364807]
[31.58225632 145.43966675]
[18.43200874 152.65570068]
[5.28176022 159.87171936]
[-7.86848783 167.08773804]
[-21.01873589 174.30375671]
[-34.16898346 181.51977539]
[-40.17166138 188.37745667]
[-47.53801727 188.74288940]
[-60.78120804 195.78688049]
[-65.15947723 210.97261047]
[-79.03351593 218.54139709]
[-94.17210388 214.00282288]
[-101.59378815 200.04954529]
[-96.89541626 184.95977783]
[-82.86444092 177.68603516]
[-67.82520294 182.54368591]
[-54.58200836 175.49969482]
[-41.38500595 168.36953735]
[-28.23475838 161.15351868]
[-15.08450985 153.93748474]
[-1.93426180 146.72146606]
[11.21598625 139.50544739]
[24.36623383 132.28942871]
[37.51648331 125.07340240]
[50.66672897 117.85738373]
[55.00985336 111.89633942]
[64.03575897 110.63427734]
[77.27895355 103.59028625]
[77.25503540 96.56452942]
[79.35293579 89.85926056]
[68.78095245 79.21814728]
[58.20897675 68.57703400]
[47.56786346 58.00505447]
[36.85807419 47.50265503]
[26.14828110 37.00025940]
[15.43849087 26.49785995]
[4.66047478 16.06548882]
[-6.18530846 5.70358753]
[-17.03109169 -4.65831327]
[-27.87687492 -15.02021408]
[-38.85680771 -25.23985672]
[-49.96902084 -35.31550598]
[-61.08123398 -45.39115143]
[-72.19345093 -55.46680069]
[-83.30566406 -65.54244995]
[-94.41787720 -75.61809540]
[-109.83847046 -79.15590668]
[-114.06979370 -93.43684387]
[-125.18200684 -103.51248932]
[-136.29421997 -113.58813477]
[-147.40643311 -123.66378784]
[-158.51864624 -133.73944092]
[-169.63085938 -143.81507874]
[-180.74308777 -153.89073181]
[-196.16366577 -157.42854309]
[-200.39498901 -171.70947266]
[-216.16616821 -170.68698120]
[-227.98579407 -181.17849731]
[-228.84149170 -196.95959473]
[-218.22560120 -208.66764832]
[-202.43632507 -209.35644531]
[-190.84117126 -198.61735535]
[-190.31933594 -182.82168579]
[-175.69357300 -180.00456238]
[-170.66743469 -165.00294495]
[-159.55522156 -154.92729187]
[-148.44300842 -144.85165405]
[-137.33079529 -134.77600098]
[-126.21857452 -124.70035553]
[-115.10636139 -114.62470245]
[-103.99414062 -104.54905701]
[-89.36837769 -101.73192596]
[-84.34223175 -86.73030853]
[-73.23001862 -76.65466309]
[-62.11780167 -66.57901764]
[-51.00558853 -56.50336838]
[-39.89337158 -46.42771912]
[-28.78115845 -36.35207367]
[-24.07076073 -35.68413544]
[-19.72385406 -32.06293106]
[-17.51497269 -25.86599731]
[-6.66919041 -15.50409603]
[4.17659283 -5.14219570]
[15.02237606 5.21970558]
[22.01564407 7.56296730]
[25.94088936 15.78806877]
[36.65068054 26.29046631]
[47.36046982 36.79286575]
[58.07026291 47.29526520]
[65.03239441 49.72948456]
[68.85009003 58.00505447]
[79.42206573 68.64616394]
[89.99404907 79.28727722]
[112.22924042 80.51714325]
[123.00295258 100.00672150]
[137.18183899 104.90154266]
[151.36071777 109.79635620]
[165.53961182 114.69117737]
[179.71849060 119.58599854]
[193.89736938 124.48081970]
[208.07626343 129.37564087]
[222.28674316 134.17793274]
[236.52822876 138.88751221]
[250.80010986 143.50416565]
[266.29113770 140.28878784]
[276.09255981 151.50402832]
[290.39422607 156.02755737]
[304.69589233 160.55110168]
[318.99755859 165.07463074]
[333.29919434 169.59815979]
[347.74066162 173.65330505]
[362.30661011 177.23573303]
[376.87252808 180.81816101]
[391.43844604 184.40060425]
[406.00436401 187.98303223]
[420.57031250 191.56546021]
[446.69458008 179.08276367]
[461.57968140 177.22993469]
[476.46481323 175.37709045]
[491.33755493 173.42727661]
[506.19726562 171.38056946]
[521.05694580 169.33386230]
[535.91668701 167.28713989]
[548.53204346 157.73921204]
[562.19604492 163.66754150]
[577.05572510 161.62083435]
[589.67108154 152.07290649]
[603.33508301 158.00123596]
[618.19476318 155.95452881]
[632.48315430 144.32402039]
[648.46386719 151.59625244]
[657.84503174 139.16116333]
[672.91845703 137.10052490]
[684.71557617 146.12068176]
[699.54736328 143.88043213]
[714.37915039 141.64019775]
[729.21087646 139.39996338]
[744.40722656 126.13484192]
[762.07574463 134.01905823]
[776.84405518 131.39294434]
[791.61242676 128.76681519]
[806.38073730 126.14070892]
[816.70568848 113.86165619]
[832.73895264 114.42218018]
[842.18115234 127.39229584]
[837.78912354 142.82243347]
[822.93194580 148.87591553]
[809.00683594 140.90902710]
[794.23852539 143.53515625]
[779.47021484 146.16127014]
[764.70184326 148.78738403]
[759.64562988 157.63851929]
[750.36181641 162.35427856]
[739.79602051 161.16838074]
[731.45111084 154.23173523]
[716.61938477 156.47196960]
[701.78759766 158.71220398]
[686.95581055 160.95243835]
[678.34906006 173.05445862]
[663.33941650 175.53765869]
[650.70410156 166.42802429]
[643.28460693 175.96588135]
[630.96105957 177.96351624]
[620.24151611 170.81423950]
[605.38177490 172.86094666]
[593.82928467 182.26248169]
[579.10241699 176.48054504]
[564.24273682 178.52725220]
[552.69024658 187.92878723]
[537.96337891 182.14685059]
[523.10369873 184.19357300]
[508.24398804 186.24028015]
[493.38427734 188.28698730]
[487.19946289 192.30506897]
[478.31765747 190.26222229]
[463.43252563 192.11505127]
[448.54739380 193.96789551]
[441.93865967 207.43356323]
[449.57931519 220.34172058]
[457.22000122 233.24986267]
[464.86065674 246.15800476]
[471.91027832 251.93405151]
[472.51553345 259.28457642]
[479.98730469 272.29122925]
[493.57049561 280.40341187]
[493.20108032 295.29342651]
[500.67285156 308.30007935]
[508.14459229 321.30673218]
[515.61633301 334.31335449]
[530.66619873 339.87048340]
[535.56793213 355.14639282]
[526.56127930 368.42269897]
[510.55545044 369.51495361]
[499.82873535 357.58529663]
[502.60971069 341.78512573]
[495.13796997 328.77847290]
[487.66619873 315.77182007]
[480.19442749 302.76519775]
[467.14569092 295.58334351]
[466.98065186 279.76296997]
[459.50891113 266.75634766]
[451.95251465 253.79867554]
[444.31185913 240.89053345]
[436.67117310 227.98239136]
[429.03051758 215.07423401]
[416.98785400 206.13139343]
[402.42193604 202.54896545]
[387.85601807 198.96652222]
[373.29010010 195.38409424]
[358.72415161 191.80166626]
[344.15823364 188.21922302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 139]
[6 138]
[7 137]
[8 136]
[9 135]
[11 133]
[13 132]
[14 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[22 124]
[26 57]
[27 56]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[37 46]
[38 45]
[59 122]
[60 121]
[61 120]
[62 118]
[63 117]
[64 116]
[65 115]
[66 113]
[67 112]
[68 111]
[69 110]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 102]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[85 92]
[140 240]
[141 239]
[142 238]
[143 237]
[144 236]
[145 235]
[146 206]
[147 205]
[148 204]
[149 202]
[150 201]
[151 200]
[152 199]
[154 197]
[155 196]
[157 194]
[158 193]
[160 190]
[163 187]
[164 186]
[165 185]
[166 184]
[168 180]
[169 179]
[170 178]
[171 177]
[207 234]
[208 233]
[209 232]
[210 231]
[212 230]
[213 229]
[215 227]
[216 226]
[217 225]
[218 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
