%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUUCUGACGUGAGAGGACAAGAAACACAAGCAAAUAUAAAACAUUCAAUUCUAAGAGAAGUUCAUCAGAGACAUCCUUCAGGAUUGUGAGCUGGAUUUUCCUCUACGUGCUUCAGUCUUCUCUACACAAAGAGCUGCAAACCAGGUCUUUGUUUUGCACUCUUAUUUCAAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[80.92572784 426.46286011]
[73.17418671 412.88171387]
[76.01680756 397.50466919]
[88.11138916 387.59231567]
[88.11138916 372.59231567]
[88.11138916 357.59231567]
[84.95796967 350.88391113]
[88.24533081 342.32962036]
[88.50857544 327.33193970]
[88.77182770 312.33425903]
[81.25907898 299.47314453]
[89.23738098 285.81088257]
[89.50062561 270.81320190]
[89.76387787 255.81552124]
[90.02712250 240.81782532]
[90.29037476 225.82014465]
[90.55361938 210.82244873]
[90.81687164 195.82475281]
[80.31871796 185.32121277]
[80.37203979 170.10768127]
[91.46030426 159.16746521]
[91.72354889 144.16976929]
[91.98680115 129.17208862]
[92.25004578 114.17439270]
[88.22377777 128.62393188]
[81.64722443 142.10536194]
[72.73788452 154.17282104]
[61.79040527 164.42723083]
[49.16684723 172.52943420]
[35.28469467 178.21148682]
[20.60305214 181.28549194]
[5.60747623 181.64974976]
[-9.20610332 179.29223633]
[-23.34777260 174.29090881]
[-36.34983826 166.81118774]
[-47.78229523 157.10043335]
[-57.26705170 145.47978210]
[-64.49043274 132.33357239]
[-69.21353912 118.09657288]
[-71.28016663 103.23961639]
[-70.62197876 88.25406647]
[-67.26074219 73.63551331]
[-61.30760574 59.86742783]
[-52.95946503 47.40514374]
[-42.49240494 36.66081238]
[-30.25258827 27.98977280]
[-16.64481544 21.67879105]
[-2.11911702 17.93658447]
[12.84411049 16.88691521]
[27.75000572 18.56449699]
[42.10560226 22.91384888]
[55.43613052 29.79113007]
[67.30072784 38.96889496]
[77.30700684 50.14361954]
[85.12403107 62.94572830]
[90.49329376 76.95183563]
[93.23696136 91.69605255]
[94.28914642 76.73300171]
[95.34133148 61.76994705]
[96.39350891 46.80689621]
[97.44569397 31.84384346]
[98.49787903 16.88079262]
[99.55006409 1.91774082]
[100.47090149 -13.05396748]
[101.26032257 -28.03318024]
[101.52356720 -43.03086853]
[101.26032257 -58.02856064]
[100.99707031 -73.02625275]
[91.14448547 -88.56694031]
[100.20862579 -103.57940674]
[99.68220520 -118.57016754]
[99.15579224 -133.56092834]
[98.62937927 -148.55168152]
[84.29328156 -160.90208435]
[83.51977539 -179.48973083]
[96.33377838 -192.53378296]
[95.28159332 -207.49684143]
[94.22941589 -222.45988464]
[93.17723083 -237.42294312]
[91.86260986 -252.36521912]
[90.28595734 -267.28213501]
[88.70930481 -282.19903564]
[87.13264465 -297.11593628]
[74.68852234 -306.85861206]
[72.86125183 -322.55691528]
[82.73493195 -334.89733887]
[98.45167542 -336.55853271]
[110.68701935 -326.55493164]
[112.18195343 -310.82150269]
[102.04955292 -298.69259644]
[103.62621307 -283.77569580]
[105.20286560 -268.85879517]
[106.77951813 -253.94187927]
[109.88624573 -250.27981567]
[110.70642853 -244.61924744]
[108.14028168 -238.47512817]
[109.19246674 -223.51206970]
[110.24465179 -208.54902649]
[111.29682922 -193.58596802]
[121.35471344 -188.12886047]
[127.58254242 -178.38630676]
[128.32833862 -166.72708130]
[123.29010773 -156.05329895]
[113.62013245 -149.07810974]
[114.14655304 -134.08734131]
[114.67296600 -119.09658051]
[115.19938660 -104.10581970]
[123.84048462 -95.61471558]
[124.38519287 -83.11061096]
[115.99475861 -73.28949738]
[116.25801086 -58.29180908]
[116.52125549 -43.29411697]
[118.47290039 -41.24353027]
[119.71762848 -38.28519821]
[119.90139008 -34.68896866]
[118.77597046 -30.84918976]
[116.23953247 -27.24375916]
[115.45011139 -12.26454639]
[118.24611664 -5.39950323]
[114.51311493 2.96992373]
[113.46092987 17.93297577]
[112.40874481 32.89602661]
[111.35655975 47.85907745]
[110.30438232 62.82212830]
[109.25219727 77.78517914]
[108.20001221 92.74822998]
[112.84663391 91.11104584]
[117.94281006 90.51071930]
[123.30417633 91.02406311]
[137.75256348 95.05448151]
[152.20094299 99.08489227]
[166.64932251 103.11531067]
[181.09770203 107.14572906]
[195.54608154 111.17614746]
[209.99446106 115.20655823]
[225.36611938 111.46182251]
[235.54637146 122.33433533]
[249.99476624 126.36475372]
[264.44314575 130.39517212]
[279.06814575 123.80053711]
[293.27621460 131.25103760]
[296.16815186 147.03129578]
[285.52551270 159.03602600]
[269.51242065 158.05624390]
[260.41271973 144.84355164]
[245.96434021 140.81314087]
[231.51596069 136.78271484]
[217.17776489 140.81573486]
[205.96405029 129.65493774]
[191.51567078 125.62452698]
[177.06729126 121.59410858]
[162.61891174 117.56369781]
[148.17051697 113.53327942]
[133.72213745 109.50286102]
[119.27375793 105.47244263]
[107.24773407 114.43764496]
[106.98448944 129.43533325]
[106.72123718 144.43302917]
[106.45799255 159.43070984]
[117.15547943 170.75332642]
[116.67486572 185.95936584]
[105.81455994 196.08801270]
[105.55131531 211.08569336]
[105.28806305 226.08338928]
[105.02481842 241.08106995]
[104.76156616 256.07876587]
[104.49832153 271.07644653]
[104.23506927 286.07415771]
[111.72898865 300.00799561]
[103.76951599 312.59750366]
[103.50627136 327.59518433]
[103.24301910 342.59289551]
[103.11138916 357.59231567]
[103.11138916 372.59231567]
[103.11138916 387.59231567]
[115.20597076 397.50466919]
[118.04859161 412.88171387]
[110.29705048 426.46286011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[8 172]
[9 171]
[10 170]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[21 159]
[22 158]
[23 157]
[24 156]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 118]
[65 117]
[66 112]
[67 111]
[68 110]
[70 107]
[71 106]
[72 105]
[73 104]
[76 99]
[77 98]
[78 97]
[79 96]
[80 93]
[81 92]
[82 91]
[83 90]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[139 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
