%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCCUGACGCCGCCGGUAACUGCGAGAGUCGGGGUCGGUGCGGUUUGAUAAGUGGUCGGUUCCUGGAGCUGCGGUCUUCUGCUAGCCUGAUCCGCAGCUUCAGCCUCCGCCGCCUCCUCAGCCCUCGGCGCCGCCGCUGGCGCCGCCGCCUGACCCGCAGGCCGCCGCGGGCCGCAGAGCCCAUGAGGGCGCGGGCACCGCCGCCGCCUCCGCGGCGUCGCCGUCGUCCCGGAGCGCCCCGGGCUGGCGCG\
GGCAUGGCCGCGGC\
) } def
/len { sequence length } bind def

/coor [
[82.62423706 126.23816681]
[75.14909363 126.84835815]
[67.80075073 139.92512512]
[60.45240402 153.00189209]
[60.43709946 168.82308960]
[47.45688248 176.12809753]
[40.10853577 189.20486450]
[32.76019287 202.28163147]
[25.41184616 215.35839844]
[18.06349945 228.43516541]
[10.71515465 241.51193237]
[3.36680865 254.58869934]
[3.35150385 270.40991211]
[-9.62871361 277.71490479]
[-16.90085793 290.83419800]
[-24.09655380 303.99560547]
[-31.29225159 317.15698242]
[-31.12347031 332.97726440]
[-44.01781464 340.43283081]
[-43.09549332 356.80599976]
[-56.96031570 365.56378174]
[-71.34934235 357.69689941]
[-71.46038055 341.29812622]
[-57.17919540 333.23712158]
[-57.86265945 318.35821533]
[-44.45363235 309.96127319]
[-37.25793457 296.79989624]
[-30.06223869 283.63851929]
[-29.61254692 276.28836060]
[-22.70548058 270.36657715]
[-23.21577835 255.48071289]
[-9.70995808 247.24035645]
[-2.36161184 234.16358948]
[4.98673391 221.08682251]
[12.33507919 208.01005554]
[19.68342590 194.93328857]
[27.03177071 181.85652161]
[34.38011551 168.77975464]
[33.86981964 153.89389038]
[47.37564087 145.65354919]
[54.72398376 132.57678223]
[62.07233047 119.50001526]
[72.79343414 97.92166138]
[90.34609222 92.99987030]
[80.18011475 81.97023773]
[70.01412964 70.94059753]
[59.84815216 59.91096497]
[52.17315674 62.92031860]
[44.01258850 63.90084076]
[35.89198685 62.80184937]
[28.33117676 59.70619583]
[21.81101418 54.82413483]
[16.74279213 48.47909546]
[13.44231319 41.08627319]
[12.11022186 33.12547684]
[12.81985378 25.10998154]
[-0.73765254 18.69172668]
[-14.29515934 12.27346897]
[-27.85266495 5.85521317]
[-36.91221619 5.01879883]
[-41.52991486 -0.71740472]
[-55.01182556 -7.29297209]
[-68.49373627 -13.86853886]
[-82.15653992 -6.75278425]
[-97.21353149 -9.02004337]
[-107.92165375 -19.59359360]
[-110.32162476 -34.26936340]
[-123.80353546 -40.84492874]
[-137.28544617 -47.42049789]
[-150.76734924 -53.99606323]
[-164.24926758 -60.57163239]
[-177.73117065 -67.14720154]
[-191.21308899 -73.72276306]
[-204.69499207 -80.29833221]
[-218.17691040 -86.87390137]
[-231.65881348 -93.44947052]
[-245.14073181 -100.02503204]
[-258.62265015 -106.60060120]
[-272.14257812 -113.09762573]
[-285.70007324 -119.51587677]
[-297.53726196 -109.88034058]
[-312.38491821 -106.34333801]
[-327.29498291 -109.60714722]
[-339.30709839 -119.02372742]
[-346.03622437 -132.72341919]
[-346.14627075 -147.98614502]
[-339.61544800 -161.78146362]
[-327.74038696 -171.37031555]
[-312.87893677 -174.84883118]
[-297.98184204 -171.52632141]
[-286.00689697 -162.06251526]
[-279.33178711 -148.33642578]
[-279.28182983 -133.07337952]
[-265.72433472 -126.65512848]
[-258.36044312 -126.63357544]
[-252.04707336 -120.08251190]
[-238.56515503 -113.50694275]
[-225.08325195 -106.93138123]
[-211.60133362 -100.35581207]
[-198.11943054 -93.78024292]
[-184.63751221 -87.20467377]
[-171.15560913 -80.62911224]
[-157.67369080 -74.05354309]
[-144.19178772 -67.47797394]
[-130.70986938 -60.90240860]
[-117.22796631 -54.32683945]
[-103.74605560 -47.75127411]
[-90.70382690 -54.89538193]
[-75.77917480 -52.96698761]
[-64.72254181 -42.49778366]
[-61.91816711 -27.35045052]
[-48.43625641 -20.77488327]
[-34.95434570 -14.19931507]
[-21.43441010 -7.70229340]
[-7.87690258 -1.28403711]
[5.68060398 5.13421917]
[19.23810959 11.55247593]
[22.52465630 8.07046604]
[26.29804039 5.12303829]
[30.47221947 2.77740431]
[34.95200729 1.08705294]
[39.63524246 0.09053043]
[41.20317078 -14.82729816]
[42.77109528 -29.74512672]
[44.33902359 -44.66295624]
[38.08662033 -59.19629669]
[47.11189651 -71.04508209]
[37.44075394 -83.25600433]
[39.24336243 -98.36247253]
[50.94421768 -107.50717163]
[52.51214600 -122.42500305]
[54.08007050 -137.34283447]
[55.64799881 -152.26066589]
[57.21592331 -167.17848206]
[58.78385162 -182.09631348]
[60.35177994 -197.01414490]
[50.21229172 -209.13711548]
[51.69801712 -224.87141418]
[63.92750931 -234.88215637]
[79.64521790 -233.23016357]
[89.52611542 -220.89552307]
[87.70803070 -205.19615173]
[75.26960754 -195.44621277]
[73.70168304 -180.52839661]
[72.13375092 -165.61056519]
[70.56582642 -150.69273376]
[68.99790192 -135.77490234]
[67.42996979 -120.85707855]
[65.86204529 -105.93924713]
[75.40591431 -94.56163025]
[74.02832794 -79.41049957]
[62.02972412 -69.47714996]
[68.39427948 -56.01083374]
[59.25685120 -43.09502792]
[57.68892670 -28.17720032]
[56.12099838 -13.25937080]
[54.55307007 1.65845740]
[74.41998291 21.50201225]
[70.87778473 49.74498367]
[81.04376984 60.77462006]
[91.20974731 71.80425262]
[101.37572479 82.83389282]
[115.93016052 86.46271515]
[130.08428955 81.49676514]
[144.23841858 76.53081512]
[158.39254761 71.56486511]
[168.85296631 59.69514847]
[183.42407227 62.78259659]
[197.57820129 57.81664658]
[208.03862000 45.94693375]
[222.60971069 49.03438187]
[236.76383972 44.06842804]
[250.91796875 39.10247803]
[265.07211304 34.13652802]
[279.19711304 29.08831406]
[293.29248047 23.95801163]
[307.38787842 18.82771111]
[321.45318604 13.61549187]
[335.48791504 8.32153320]
[338.75317383 4.33979368]
[342.80761719 2.19939375]
[346.82687378 1.89470077]
[350.10595703 3.09711409]
[364.31689453 -1.70381391]
[378.52786255 -6.50474215]
[392.73880005 -11.30566978]
[403.15725708 -23.97011185]
[419.28759766 -21.01314926]
[424.53634644 -5.47665119]
[413.50402832 6.65676403]
[397.53973389 2.90527964]
[383.32876587 7.70620775]
[369.11782837 12.50713539]
[354.90689087 17.30806351]
[340.78189087 22.35627556]
[326.74713135 27.65023422]
[321.61624146 32.93239212]
[312.51818848 32.92309952]
[298.42279053 38.05340195]
[284.32739258 43.18370438]
[279.13540649 48.40580368]
[270.03805542 48.29065323]
[255.88392639 53.25660706]
[241.72979736 58.22255707]
[227.57566833 63.18850708]
[218.12763977 74.70302582]
[202.54414368 71.97077179]
[188.39001465 76.93672943]
[178.94200134 88.45124054]
[163.35848999 85.71899414]
[149.20437622 90.68494415]
[135.05024719 95.65089417]
[120.89611053 100.61684418]
[116.76155090 115.03577423]
[126.13338470 126.74768066]
[135.50520325 138.45959473]
[144.87704468 150.17150879]
[154.24887085 161.88340759]
[163.62069702 173.59532166]
[172.99252319 185.30723572]
[182.56732178 196.85380554]
[192.34217834 208.23150635]
[202.11703491 219.60920715]
[217.63568115 220.95431519]
[227.38670349 232.63217163]
[226.00871277 247.41854858]
[235.78356934 258.79623413]
[245.55842590 270.17395020]
[255.33328247 281.55166626]
[265.10815430 292.92935181]
[279.96997070 298.35491943]
[282.39492798 313.05078125]
[292.16979980 324.42849731]
[301.94467163 335.80618286]
[311.71951294 347.18389893]
[321.49438477 358.56161499]
[337.27044678 359.50567627]
[347.69558716 371.38391113]
[346.58474731 387.14910889]
[334.59698486 397.44808960]
[318.84442139 396.17062378]
[308.67276001 384.07464600]
[310.11666870 368.33645630]
[300.34182739 356.95877075]
[290.56695557 345.58105469]
[280.79208374 334.20333862]
[271.01724243 322.82565308]
[256.85458374 318.21389771]
[253.73043823 302.70422363]
[243.95558167 291.32650757]
[234.18072510 279.94882202]
[224.40586853 268.57110596]
[214.63099670 257.19338989]
[199.80583191 256.32757568]
[189.73065186 244.92820740]
[190.73933411 229.38406372]
[180.96447754 218.00636292]
[171.18962097 206.62866211]
[167.75584412 205.99044800]
[164.45410156 203.67837524]
[162.05834961 199.76936340]
[161.28060913 194.67906189]
[151.90878296 182.96714783]
[142.53695679 171.25523376]
[133.16513062 159.54333496]
[123.79329681 147.83142090]
[114.42147064 136.11950684]
[105.04964447 124.40760040]
[97.57450867 125.01779175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[4 40]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[14 30]
[15 28]
[16 27]
[17 26]
[19 24]
[44 162]
[45 161]
[46 160]
[47 159]
[56 117]
[57 116]
[58 115]
[59 114]
[61 113]
[62 112]
[63 111]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 94]
[80 93]
[122 157]
[123 156]
[124 155]
[125 154]
[127 152]
[130 149]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[163 213]
[164 212]
[165 211]
[166 210]
[168 208]
[169 207]
[171 205]
[172 204]
[173 203]
[174 202]
[175 200]
[176 199]
[177 198]
[178 196]
[179 195]
[183 194]
[184 193]
[185 192]
[186 191]
[214 268]
[215 267]
[216 266]
[217 265]
[218 264]
[219 263]
[220 262]
[221 258]
[222 257]
[223 256]
[226 253]
[227 252]
[228 251]
[229 250]
[230 249]
[232 247]
[233 246]
[234 245]
[235 244]
[236 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
