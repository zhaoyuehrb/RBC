%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCACUCGCUGAAGUCAUCUGGGAGACAGUGCCAAAUGUUCCACUCCAGAGUCUUGGCCUCUAGGAGGCAGGAACAGCAGGCCUGGCCAGCCCAAAGGACUCUCUAUCCAGGAUGUAAAUGAGCACACUGCUGGCCCAUGCGCCUCGGGGCUGUAGAGGGCAGCCUCAGAGGCACUGGGCAUUCCUGGCACC\
) } def
/len { sequence length } bind def

/coor [
[-35.90176010 122.65782166]
[-42.91152191 123.13321686]
[-49.88166046 122.32001495]
[-56.57757187 120.24868774]
[-62.77445602 116.99201965]
[-68.26485443 112.66251373]
[-72.86560059 107.40855408]
[-76.42393494 101.40927887]
[-78.82256317 94.86849213]
[-79.98352814 88.00775146]
[-79.87073517 81.05883789]
[-94.19573212 76.60974121]
[-108.55646515 72.27738190]
[-122.95198059 68.06204224]
[-137.34750366 63.84670639]
[-151.74301147 59.63136673]
[-164.01501465 68.94287872]
[-179.23886108 69.23933411]
[-191.57223511 60.61657715]
[-196.40538025 46.55319977]
[-210.80090332 42.33786011]
[-225.19642639 38.12252045]
[-239.59193420 33.90718460]
[-253.59117126 45.41043091]
[-271.53533936 46.21228027]
[-286.24523926 36.18047714]
[-291.94866943 19.47953987]
[-306.47375488 15.73500443]
[-320.99884033 11.99046803]
[-330.10562134 12.87843323]
[-335.72891235 8.06496525]
[-350.19113159 4.08450079]
[-364.65338135 0.10403632]
[-376.77218628 9.61406517]
[-391.98916626 10.15827751]
[-404.46127319 1.73741627]
[-409.52270508 -12.24543095]
[-423.98492432 -16.22589684]
[-438.44714355 -20.20635986]
[-452.90936279 -24.18682480]
[-467.37158203 -28.16728973]
[-481.83380127 -32.14775467]
[-501.07693481 -26.17569542]
[-514.06799316 -40.48583984]
[-528.65209961 -43.99345398]
[-543.23626709 -47.50107193]
[-557.82037354 -51.00868607]
[-572.43255615 -54.39748764]
[-587.07183838 -57.66725540]
[-601.71112061 -60.93701935]
[-616.35040283 -64.20678711]
[-628.66082764 -54.56379318]
[-644.28771973 -55.14148712]
[-655.85260010 -65.66709900]
[-657.89477539 -81.17076111]
[-649.45007324 -94.33210754]
[-634.50579834 -98.93675995]
[-620.11822510 -92.81054688]
[-613.08062744 -78.84606934]
[-598.44134521 -75.57630157]
[-583.80206299 -72.30654144]
[-569.16278076 -69.03677368]
[-561.93847656 -70.64944458]
[-554.31274414 -65.59281158]
[-539.72863770 -62.08519363]
[-525.14447021 -58.57757568]
[-510.56036377 -55.06996155]
[-502.34454346 -61.17668152]
[-491.90411377 -61.75715256]
[-482.68215942 -56.37764359]
[-477.85333252 -46.60997772]
[-463.39111328 -42.62951279]
[-448.92889404 -38.64904785]
[-434.46667480 -34.66858292]
[-420.00445557 -30.68811989]
[-405.54223633 -26.70765495]
[-394.03860474 -36.13127518]
[-379.01406860 -36.98418808]
[-366.21865845 -28.73006439]
[-360.67291260 -14.35818672]
[-346.21069336 -10.37772274]
[-331.74844360 -6.39725780]
[-317.25430298 -2.53462934]
[-302.72921753 1.20990670]
[-288.20413208 4.95444298]
[-280.07897949 -4.08829737]
[-268.81121826 -8.84099865]
[-256.51995850 -8.34309292]
[-245.54539490 -2.62784791]
[-238.00315857 7.27228403]
[-235.37660217 19.51166534]
[-220.98107910 23.72700500]
[-206.58555603 27.94234276]
[-192.19004822 32.15768051]
[-180.53456116 22.92255402]
[-165.49813843 22.31430626]
[-152.83876038 30.77560806]
[-147.52767944 45.23584747]
[-133.13215637 49.45118713]
[-118.73664093 53.66652679]
[-104.34112549 57.88186264]
[-97.02722168 56.74265289]
[-89.74663544 62.28474426]
[-75.42163849 66.73384094]
[-58.16315079 50.37757492]
[-34.44404221 47.49862289]
[-13.57313633 59.36529160]
[-3.82392645 81.43156433]
[11.09219170 83.01567841]
[26.00831032 84.59979248]
[40.92442703 86.18390656]
[55.84054565 87.76802063]
[70.75666809 89.35213470]
[73.76871490 83.25277710]
[78.03401947 77.95355988]
[83.34880066 73.70765686]
[89.45912933 70.71792603]
[96.07307434 69.12721252]
[102.87463379 69.01151276]
[109.53884888 70.37635803]
[115.74732208 73.15653992]
[121.20343781 77.21922302]
[133.76795959 69.02576447]
[146.33248901 60.83230209]
[158.89700317 52.63883972]
[168.86170959 38.92239380]
[184.80062866 44.70059204]
[183.66056824 61.61616516]
[167.09046936 65.20336151]
[154.52593994 73.39682007]
[141.96142578 81.59028625]
[129.39689636 89.78374481]
[130.99688721 97.21749878]
[130.74642944 104.81735992]
[144.56932068 110.64208984]
[158.39221191 116.46682739]
[172.21511841 122.29156494]
[186.03800964 128.11630249]
[195.17684937 128.56721497]
[200.03726196 134.14999390]
[215.78575134 132.63482666]
[224.31210327 144.84754944]
[238.03834534 150.89651489]
[251.76460266 156.94546509]
[265.49087524 162.99443054]
[279.21713257 169.04338074]
[292.99215698 174.98043823]
[306.81503296 180.80516052]
[320.63793945 186.62989807]
[334.46084595 192.45463562]
[348.28372192 198.27937317]
[362.10662842 204.10411072]
[375.92953491 209.92884827]
[389.75241089 215.75358582]
[405.09381104 211.06085205]
[418.24594116 220.24786377]
[419.11962891 236.26710510]
[407.04467773 246.83000183]
[391.28390503 243.83360291]
[383.92767334 229.57647705]
[370.10479736 223.75173950]
[356.28189087 217.92700195]
[342.45898438 212.10226440]
[328.63610840 206.27754211]
[314.81320190 200.45280457]
[300.99029541 194.62806702]
[287.16741943 188.80332947]
[279.77142334 189.10357666]
[273.16815186 182.76963806]
[259.44189453 176.72068787]
[245.71565247 170.67172241]
[231.98939514 164.62275696]
[218.26313782 158.57380676]
[203.49644470 160.52163696]
[193.98831177 147.87623596]
[180.21327209 141.93919373]
[166.39038086 136.11445618]
[152.56747437 130.28971863]
[138.74458313 124.46498871]
[124.92169189 118.64025116]
[104.38386536 130.81121826]
[81.26638794 124.85159302]
[69.17254639 104.26825714]
[54.25643158 102.68414307]
[39.34031296 101.10002899]
[24.42419434 99.51590729]
[9.50807667 97.93179321]
[-5.40804100 96.34767914]
[-8.16326523 102.86583710]
[-12.05908108 108.76335907]
[-16.96158791 113.84313965]
[-22.70330048 117.93609619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 104]
[12 103]
[13 101]
[14 100]
[15 99]
[16 98]
[20 94]
[21 93]
[22 92]
[23 91]
[27 85]
[28 84]
[29 83]
[31 82]
[32 81]
[33 80]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[44 67]
[45 66]
[46 65]
[47 64]
[48 62]
[49 61]
[50 60]
[51 59]
[108 188]
[109 187]
[110 186]
[111 185]
[112 184]
[113 183]
[122 132]
[123 131]
[124 130]
[125 129]
[134 180]
[135 179]
[136 178]
[137 177]
[138 176]
[140 175]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
