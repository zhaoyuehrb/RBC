%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUACUUCGAAGGCUGUGCUCCGCUCACCAUCCAGAGCGGAGGUGCGGACCUUAAACUCACUCCUGGAGAAAGAUCUGCAAGUGCGCAGAGAGAAGACUGGCAGUGGAGC\
) } def
/len { sequence length } bind def

/coor [
[114.66539764 140.18515015]
[105.65185547 142.40255737]
[96.37220764 142.62345886]
[87.26337433 140.83746338]
[78.75423431 137.12866211]
[71.24543762 131.67167664]
[65.09053040 124.72344971]
[60.57931900 116.61112976]
[57.92420578 107.71669006]
[57.25020599 98.45891571]
[42.58687592 95.29872894]
[27.92354774 92.13853455]
[13.26021862 88.97834778]
[-1.44636071 86.02597046]
[-16.19324684 83.28200531]
[-30.94013214 80.53804016]
[-45.68701935 77.79406738]
[-60.43390274 75.05010223]
[-75.18078613 72.30613708]
[-89.96502686 69.77111816]
[-104.78366089 67.44557190]
[-119.60228729 65.12002563]
[-134.42091370 62.79447556]
[-149.23954773 60.46892548]
[-164.05818176 58.14337540]
[-178.87681580 55.81782913]
[-189.73773193 66.90024567]
[-205.04405212 69.44902039]
[-218.91017151 62.48409271]
[-226.00430298 48.68362045]
[-223.59858704 33.35416412]
[-212.61807251 22.39021683]
[-197.28501892 20.00763893]
[-183.49525452 27.12257767]
[-176.55126953 40.99919510]
[-161.73263550 43.32474518]
[-146.91400146 45.65029526]
[-132.09536743 47.97584534]
[-117.27674103 50.30139160]
[-102.45810699 52.62694168]
[-87.63948059 54.95249176]
[-80.43855286 52.84977722]
[-72.43682098 57.55924988]
[-57.68993759 60.30321503]
[-42.94305038 63.04718399]
[-28.19616508 65.79115295]
[-13.44927883 68.53511810]
[1.29760730 71.27909088]
[8.55515671 69.38099670]
[16.42040825 74.31501770]
[31.08373642 77.47521210]
[45.74706650 80.63539886]
[60.41039276 83.79558563]
[73.25469208 66.61424255]
[92.82470703 57.82850266]
[114.19910431 59.64773178]
[132.00282288 71.61444855]
[141.75869751 90.71934509]
[156.74519348 90.08273315]
[171.73167419 89.44611359]
[186.71815491 88.80949402]
[201.70463562 88.17287445]
[215.16400146 79.85684967]
[228.20819092 87.04701996]
[243.19467163 86.41040039]
[258.18115234 85.77378082]
[273.16763306 85.13716888]
[277.78924561 70.71960449]
[287.04733276 58.77557373]
[299.80926514 50.73482132]
[314.52441406 47.55147552]
[329.41275024 49.59088898]
[342.67993164 56.58779144]
[352.73367310 67.68062592]
[358.37490845 81.51760864]
[373.36138916 80.88098907]
[388.34786987 80.24436951]
[403.33435059 79.60774994]
[418.32083130 78.97113037]
[428.82586670 67.16350555]
[444.60794067 66.32585144]
[456.30383301 76.95512390]
[456.97457886 92.74517822]
[446.22225952 104.32804108]
[430.42599487 104.83181763]
[418.95745850 93.95761871]
[403.97097778 94.59423828]
[388.98449707 95.23085022]
[373.99801636 95.86746979]
[359.01153564 96.50408936]
[354.56408691 110.76963043]
[345.48727417 122.67511749]
[332.86129761 130.77195740]
[318.19955444 134.06663513]
[303.26742554 132.14270020]
[289.86956787 125.21318817]
[279.63192749 114.09732819]
[273.80426025 100.12364960]
[258.81777954 100.76026917]
[243.83128357 101.39688873]
[228.84480286 102.03350067]
[216.45738220 110.30399323]
[202.34126282 103.15936279]
[187.35478210 103.79597473]
[172.36828613 104.43259430]
[157.38180542 105.06921387]
[142.39532471 105.70583344]
[140.16644287 114.71653748]
[136.04635620 123.03432465]
[130.22904968 130.26754761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 53]
[11 52]
[12 51]
[13 50]
[14 48]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[58 107]
[59 106]
[60 105]
[61 104]
[62 103]
[64 101]
[65 100]
[66 99]
[67 98]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
