%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUCUGCCAAGUUCUACCUGUAACUGGCUUCAUUUUCAAGUCAGACGUUUGGCUGCUGCUCUGUCCCCUGCAACAAGGAGCCAUGCCAGCUGGACACACACUUCUUCCAGGGCCUCUGGCAGCCAGGACAGAGUUGAGACCACAGCUGUUGAGACCCUGAGCCCUGAGUCUGUAUUGCUCAAGAAGGGCCUUCCCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[68.31385040 204.67225647]
[69.02077484 189.68891907]
[76.73835754 176.82539368]
[78.05786896 161.88354492]
[79.37738037 146.94169617]
[80.69689178 131.99984741]
[82.01641083 117.05799103]
[74.56037140 117.86888123]
[66.23888397 130.34898376]
[57.91740036 142.82908630]
[49.59591675 155.30917358]
[47.43659592 164.19146729]
[41.04783630 167.91665649]
[32.53421783 180.26647949]
[24.02059364 192.61630249]
[15.60278797 205.03164673]
[17.32522202 220.98196411]
[5.82772636 232.17066956]
[-10.06980610 230.01473999]
[-18.17214775 216.16801453]
[-12.26387596 201.25253296]
[3.12268949 196.71015930]
[4.21857309 189.39631653]
[11.67076683 184.10267639]
[20.18438911 171.75285339]
[28.69800949 159.40303040]
[37.11581802 146.98768616]
[45.43730164 134.50759888]
[53.75878906 122.02749634]
[62.08027649 109.54739380]
[48.79420471 116.51017761]
[39.75821304 104.53726196]
[38.53736115 89.58702087]
[45.51115036 76.30672455]
[58.51178741 68.82452393]
[73.49805450 69.46623993]
[85.81274414 78.03393555]
[93.60731506 90.84973145]
[92.91115570 75.86589050]
[92.21498871 60.88205338]
[81.91999817 45.61819077]
[90.57404327 30.35454750]
[89.64608765 15.38327789]
[88.71813202 0.41200876]
[78.18815613 -14.69071198]
[86.60495758 -30.08645058]
[85.44542694 -45.04156494]
[84.28589630 -59.99668121]
[83.01068115 -74.94237518]
[81.61985779 -89.87776184]
[80.22903442 -104.81314087]
[78.72268677 -119.73731232]
[77.10089874 -134.64938354]
[75.47911835 -149.56144714]
[73.74198914 -164.46052551]
[71.88963318 -179.34570312]
[67.72203064 -187.48136902]
[70.12562561 -194.47535706]
[60.94161987 -207.35807800]
[67.25750732 -220.84729004]
[65.63571930 -235.75936890]
[64.01393127 -250.67143250]
[62.39215088 -265.58349609]
[60.77036285 -280.49557495]
[59.14857864 -295.40765381]
[57.52679443 -310.31970215]
[55.90500641 -325.23178101]
[54.28322220 -340.14385986]
[47.46302414 -353.50366211]
[36.33658600 -363.56362915]
[25.21014977 -373.62356567]
[9.44043255 -372.57876587]
[-2.39400434 -383.05358887]
[-3.27199936 -398.83346558]
[7.32734632 -410.55648804]
[23.11562920 -411.26760864]
[34.72594070 -400.54492188]
[35.27008820 -384.75000000]
[46.39652634 -374.69006348]
[57.52296448 -364.63012695]
[63.56719971 -374.27862549]
[72.80849457 -378.99240112]
[73.04061890 -393.99060059]
[73.27275085 -408.98880005]
[73.50487518 -423.98703003]
[62.90885925 -441.13107300]
[73.53083801 -457.28399658]
[73.29870605 -472.28219604]
[73.06658173 -487.28042603]
[70.00114441 -493.14996338]
[70.31742096 -498.83227539]
[73.06658173 -502.74465942]
[73.29870605 -517.74285889]
[73.53083801 -532.74108887]
[73.76296234 -547.73925781]
[73.99509430 -562.73748779]
[60.52404022 -570.00311279]
[51.98213959 -582.70330811]
[50.33225632 -597.91961670]
[55.95352173 -612.15545654]
[67.55421448 -622.13958740]
[82.46857452 -625.57769775]
[97.26939392 -621.67968750]
[108.55554962 -611.34136963]
[113.73357391 -596.93835449]
[111.61358643 -581.78039551]
[102.68274689 -569.35064697]
[88.99329376 -562.50537109]
[88.76116943 -547.50714111]
[88.52903748 -532.50897217]
[88.29691315 -517.51074219]
[88.06478119 -502.51254272]
[88.06478119 -487.51254272]
[88.29691315 -472.51434326]
[88.52903748 -457.51614380]
[96.48084259 -451.08636475]
[99.64398956 -441.13107300]
[96.74258423 -430.86788940]
[88.50308228 -423.75488281]
[88.27095032 -408.75668335]
[88.03882599 -393.75848389]
[87.80669403 -378.76028442]
[95.96015167 -372.79263306]
[100.04541779 -363.17004395]
[98.58215332 -352.46578979]
[91.62895203 -343.74459839]
[80.86511993 -339.68554688]
[69.19528961 -341.76562500]
[70.81707764 -326.85357666]
[72.43886566 -311.94149780]
[74.06064606 -297.02941895]
[75.68243408 -282.11737061]
[77.30422211 -267.20529175]
[78.92600250 -252.29322815]
[80.54779053 -237.38114929]
[82.16957092 -222.46908569]
[91.23757935 -210.65296936]
[85.03769684 -196.09713745]
[86.77481842 -181.19807434]
[88.62717438 -166.31288147]
[92.57532501 -160.05944824]
[90.39118195 -151.18324280]
[92.01296997 -136.27116394]
[93.63475800 -121.35910034]
[97.48565674 -115.04531860]
[95.16441345 -106.20396423]
[96.55523682 -91.26858521]
[97.94606781 -76.33319855]
[101.69879913 -69.96058655]
[99.24101257 -61.15621185]
[100.40054321 -46.20109558]
[101.56007385 -31.24597931]
[110.54445648 -23.14014435]
[111.62941742 -10.68585777]
[103.68939972 -0.51594788]
[104.61735535 14.45532131]
[105.54531097 29.42658997]
[114.40318298 37.67049026]
[115.29527283 50.14007568]
[107.19882965 60.18589401]
[107.89498901 75.16973114]
[108.59114838 90.15356445]
[114.78395844 103.81552887]
[125.59375000 114.21497345]
[136.40353394 124.61441803]
[147.21331787 135.01387024]
[158.02310181 145.41331482]
[169.14955139 155.47325134]
[180.58197021 165.18405151]
[192.01440430 174.89483643]
[203.44683838 184.60563660]
[218.83154297 181.80473328]
[232.39161682 189.59309387]
[237.72441101 204.29327393]
[232.31193542 218.96430969]
[218.70980835 226.67897034]
[203.34053040 223.79466248]
[193.46101379 211.67323303]
[193.73603821 196.03807068]
[182.30361938 186.32727051]
[170.87118530 176.61648560]
[159.43875122 166.90568542]
[156.63108826 167.00231934]
[153.61595154 165.98901367]
[150.81719971 163.78112793]
[148.68150330 160.44935608]
[147.62365723 156.22309875]
[136.81387329 145.82365417]
[126.00408936 135.42420959]
[115.19429779 125.02475739]
[104.38451385 114.62531281]
[96.92847443 115.43620300]
[101.42919922 129.74507141]
[105.92991638 144.05392456]
[110.43063354 158.36279297]
[114.93135834 172.67164612]
[125.23325348 183.57444763]
[129.14514160 198.05537415]
[125.73447418 212.66247559]
[115.81431580 223.91371155]
[101.74942017 229.12701416]
[86.89257050 227.05964661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 30]
[9 29]
[10 28]
[11 27]
[13 26]
[14 25]
[15 24]
[16 22]
[38 162]
[39 161]
[40 160]
[42 157]
[43 156]
[44 155]
[46 152]
[47 151]
[48 150]
[49 148]
[50 147]
[51 146]
[52 144]
[53 143]
[54 142]
[55 140]
[56 139]
[58 138]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 80]
[70 79]
[71 78]
[82 122]
[83 121]
[84 120]
[85 119]
[87 115]
[88 114]
[89 113]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[168 182]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
