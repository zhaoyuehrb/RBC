%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUAACCCAGGCAGCUGGGGAGCCUGGGCUGUGGCCCUAGGAGGGGGCGCGGCGGCGGGCUCUCUCCUUUUGUUGUUGUUUCCUCAGCCUGGGGAGCUGAAGGGGAGACGCGUCUGGGUGGGGCUGCUCGGAGCCCGGGCCUGGUGGCCCCUGGGGCUCCCGGGCGGGCAGGGUAGGGCAGAGUAGAGCGGGCUUCAAC\
) } def
/len { sequence length } bind def

/coor [
[220.22314453 203.64546204]
[211.30871582 191.58175659]
[211.06620789 176.58372498]
[219.58593750 164.23811340]
[233.69299316 159.14370728]
[219.74633789 153.62184143]
[205.79969788 148.09997559]
[191.85304260 142.57809448]
[177.90640259 137.05622864]
[163.95974731 131.53436279]
[150.01310730 126.01249695]
[136.06645203 120.49062347]
[128.68344116 120.95168304]
[121.94522095 114.77094269]
[108.08702850 109.03068542]
[100.09959412 119.58837128]
[82.15726471 120.33715820]
[67.75286102 124.52201843]
[53.34845352 128.70689392]
[38.94404984 132.89175415]
[24.53964233 137.07661438]
[10.13523769 141.26148987]
[-4.26916742 145.44635010]
[-18.67357254 149.63122559]
[-33.07797623 153.81608582]
[-47.48238373 158.00096130]
[-59.91014099 171.58331299]
[-76.77542114 166.74639893]
[-91.11231995 171.15701294]
[-105.44921875 175.56761169]
[-119.78610992 179.97822571]
[-134.12300110 184.38882446]
[-148.45989990 188.79942322]
[-159.37492371 200.25250244]
[-173.81465149 196.59956360]
[-188.15153503 201.01017761]
[-202.48843384 205.42077637]
[-216.82533264 209.83139038]
[-227.58612061 222.20625305]
[-243.62960815 218.80938721]
[-248.45162964 203.13519287]
[-237.09169006 191.30793762]
[-221.23593140 195.49449158]
[-206.89904785 191.08387756]
[-192.56214905 186.67327881]
[-178.22525024 182.26268005]
[-168.33569336 171.12509155]
[-152.87049866 174.46253967]
[-138.53361511 170.05192566]
[-124.19671631 165.64132690]
[-109.85981750 161.23072815]
[-95.52292633 156.82011414]
[-81.18602753 152.40951538]
[-75.24636078 141.86520386]
[-63.33106995 138.07667542]
[-51.66725159 143.59654236]
[-37.26284409 139.41168213]
[-22.85843849 135.22682190]
[-8.45403385 131.04194641]
[5.95037127 126.85708618]
[20.35477638 122.67221832]
[34.75918198 118.48735046]
[49.16358566 114.30248260]
[63.56799316 110.11761475]
[77.97239685 105.93274689]
[63.32501221 102.69947815]
[48.84379196 106.61027527]
[34.17816162 103.46078491]
[22.57942963 93.94924164]
[16.61898804 80.18431854]
[17.61824226 65.21764374]
[25.35566330 52.36725998]
[38.11589432 44.48205185]
[53.07004547 43.31014252]
[66.90283966 49.11133194]
[76.54759979 60.59952164]
[79.86617279 75.22469330]
[89.57758331 86.65660858]
[86.53577423 71.96826172]
[83.49396515 57.27992249]
[80.45214844 42.59157944]
[77.41033936 27.90323639]
[74.36853027 13.21489429]
[70.98151398 -1.39770615]
[67.25116730 -15.92645359]
[63.52081680 -30.45520020]
[59.79047012 -44.98394775]
[56.06011963 -59.51269531]
[41.88040543 -66.10585022]
[35.30297852 -80.29286957]
[39.43349457 -95.37506866]
[52.32165527 -104.23110199]
[67.88206482 -102.67942047]
[78.76757050 -91.45267487]
[79.83837128 -75.85179901]
[70.58886719 -63.24304581]
[74.31921387 -48.71429825]
[78.04956818 -34.18555069]
[81.77991486 -19.65680122]
[85.51026154 -5.12805462]
[88.35177612 -3.02623367]
[90.31256866 0.56040984]
[90.70403290 5.20110703]
[89.05687714 10.17308521]
[92.09868622 24.86142731]
[95.14049530 39.54977036]
[98.18230438 54.23811340]
[101.22411346 68.92645264]
[104.26592255 83.61479950]
[113.82728577 95.17249298]
[127.68547821 100.91274261]
[141.58831787 106.54398346]
[155.53497314 112.06584930]
[169.48161316 117.58771515]
[183.42826843 123.10958099]
[197.37490845 128.63145447]
[211.32156372 134.15332031]
[225.26820374 139.67518616]
[239.21485901 145.19705200]
[253.48069763 149.83230591]
[268.00946045 153.56266785]
[282.53820801 157.29301453]
[297.06695557 161.02336121]
[311.59570312 164.75370789]
[326.12445068 168.48405457]
[340.68203735 172.10017395]
[355.26757812 175.60186768]
[369.85314941 179.10354614]
[384.43869019 182.60522461]
[398.43981934 169.56907654]
[417.31890869 167.61013794]
[433.44143677 177.33895874]
[440.39688110 194.67623901]
[455.13119507 197.48695374]
[469.86547852 200.29766846]
[484.59979248 203.10839844]
[499.60534668 198.09403992]
[510.65737915 208.07913208]
[525.66290283 203.06478882]
[536.71496582 213.04988098]
[551.44921875 215.86061096]
[566.18353271 218.67132568]
[580.91784668 221.48204041]
[595.92340088 216.46768188]
[606.97546387 226.45278931]
[621.98101807 221.43843079]
[633.03302002 231.42353821]
[647.76733398 234.23426819]
[662.50164795 237.04498291]
[677.23596191 239.85569763]
[683.60870361 238.04161072]
[689.11175537 239.50477600]
[692.38568115 242.99307251]
[707.02447510 246.26521301]
[721.66320801 249.53736877]
[738.43981934 247.09184265]
[745.43402100 262.53585815]
[732.52978516 273.53204346]
[718.39105225 264.17611694]
[703.75231934 260.90396118]
[689.11352539 257.63180542]
[674.42523193 254.59001160]
[659.69091797 251.77928162]
[644.95660400 248.96856689]
[630.22229004 246.15785217]
[616.27062988 251.37324524]
[604.16473389 241.18710327]
[590.21307373 246.40249634]
[578.10711670 236.21635437]
[563.37286377 233.40563965]
[548.63854980 230.59490967]
[533.90423584 227.78419495]
[519.95257568 232.99958801]
[507.84664917 222.81344604]
[493.89498901 228.02885437]
[481.78909302 217.84269714]
[467.05477905 215.03198242]
[452.32046509 212.22126770]
[437.58615112 209.41053772]
[431.03298950 218.45719910]
[421.53155518 224.42869568]
[410.43685913 226.42817688]
[399.34802246 224.12849426]
[389.87796021 217.82495117]
[383.41876221 208.39808655]
[380.93701172 197.19076538]
[366.35144043 193.68908691]
[351.76589966 190.18740845]
[337.18035889 186.68572998]
[329.93597412 188.18246460]
[322.39410400 183.01280212]
[307.86535645 179.28245544]
[293.33660889 175.55210876]
[278.80786133 171.82176208]
[264.27911377 168.09141541]
[249.75035095 164.36105347]
[258.16915894 176.77571106]
[257.80438232 191.77128601]
[248.79191589 203.76191711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 119]
[6 118]
[7 117]
[8 116]
[9 115]
[10 114]
[11 113]
[12 112]
[14 111]
[15 110]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[38 43]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[120 196]
[121 195]
[122 194]
[123 193]
[124 192]
[125 191]
[126 189]
[127 188]
[128 187]
[129 186]
[133 179]
[134 178]
[135 177]
[136 176]
[138 174]
[140 172]
[141 171]
[142 170]
[143 169]
[145 167]
[147 165]
[148 164]
[149 163]
[150 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
