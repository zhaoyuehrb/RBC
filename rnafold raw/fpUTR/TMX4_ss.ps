%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGGGAGGGGGCGUGGCCUCGACGGGCAAGCGGCGAUAAGAGGUGGCGUCCUCCGCGGCAUUGCGAGCACCGCCAGUCUGCGCCGCUAGGCGUAGGCGGGGUGGCCCUUGCGUCUCCCGCUUCCUUGAAAAACCCGGCGGGCGAGCGAGGCUGCGGGCCGGCCGCUGCCCUUCCCCACACUCCCCGCCGAGAAGCCUCGCUCGGCGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[248.99514771 156.87818909]
[234.65092468 152.49145508]
[220.30670166 148.10472107]
[205.96249390 143.71800232]
[191.61827087 139.33126831]
[177.27404785 134.94453430]
[162.92984009 130.55781555]
[148.58561707 126.17108154]
[134.24139404 121.78435516]
[119.89717865 117.39762115]
[105.55296326 113.01089478]
[90.70988464 115.17491913]
[78.21526337 123.47458649]
[65.72064209 131.77426147]
[53.22602081 140.07392883]
[40.73140335 148.37359619]
[28.23678398 156.67326355]
[15.74216366 164.97293091]
[8.52810478 179.05369568]
[-6.35452509 179.65086365]
[-18.84914398 187.95053101]
[-31.34376526 196.25019836]
[-43.83838272 204.54986572]
[-56.33300400 212.84953308]
[-54.32664108 227.94044495]
[-59.05213928 242.34727478]
[-69.52133179 253.22918701]
[-83.61911774 258.46496582]
[-98.53063202 257.06634521]
[-111.30326080 249.36402893]
[-123.79787445 257.66369629]
[-128.36712646 273.04229736]
[-143.29292297 278.92449951]
[-157.12545776 270.79797363]
[-159.25361633 254.89669800]
[-148.04483032 243.41877747]
[-132.09754944 245.16908264]
[-119.60292816 236.86941528]
[-121.75096130 222.10961914]
[-117.25910950 207.82211304]
[-106.96720123 196.85682678]
[-92.87754059 191.42529297]
[-77.76544952 192.65481567]
[-64.63266754 200.35490417]
[-52.13805008 192.05523682]
[-39.64343262 183.75556946]
[-27.14881134 175.45590210]
[-14.65419197 167.15623474]
[-8.33383179 153.66912842]
[7.44249630 152.47830200]
[19.93711662 144.17863464]
[32.43173599 135.87896729]
[44.92635345 127.57930756]
[57.42097473 119.27964020]
[69.91559601 110.97997284]
[82.41021729 102.68030548]
[67.46607971 103.97370911]
[53.78684235 110.12825012]
[38.92400742 108.10435486]
[27.38846207 98.51627350]
[22.68125534 84.27400970]
[26.23102760 69.70008850]
[36.96041870 59.21771622]
[51.61305237 56.00829697]
[65.74183655 61.04589844]
[75.05782318 72.79953003]
[87.73397064 80.81920624]
[80.45444489 67.70401001]
[73.17491150 54.58880615]
[65.89538574 41.47360611]
[58.61585617 28.35840797]
[43.68731308 23.91134644]
[36.49166489 10.50696945]
[40.82326126 -3.69770837]
[33.54373169 -16.81290817]
[26.26420021 -29.92810631]
[18.98467064 -43.04330444]
[11.70514202 -56.15850449]
[-4.30070162 -65.26734161]
[-3.31479144 -82.79052734]
[-10.78342533 -95.79896545]
[-18.25205803 -108.80740356]
[-25.72069359 -121.81584930]
[-33.18932724 -134.82427979]
[-40.65795898 -147.83273315]
[-48.12659454 -160.84117126]
[-55.59522629 -173.84960938]
[-63.06386185 -186.85804749]
[-77.51006317 -194.61944580]
[-77.74108124 -211.01696777]
[-63.51925659 -219.18225098]
[-49.47478867 -210.71554565]
[-50.05541992 -194.32667542]
[-42.58678818 -181.31823730]
[-35.11815262 -168.30979919]
[-27.64952087 -155.30136108]
[-20.18088722 -142.29292297]
[-12.71225262 -129.28448486]
[-5.24361897 -116.27603912]
[2.22501469 -103.26760101]
[9.69364834 -90.25916290]
[21.28214645 -86.80010223]
[27.61170769 -76.02751923]
[24.82034111 -63.43803406]
[32.09986877 -50.32283401]
[39.37939835 -37.20763779]
[46.65892792 -24.09243774]
[53.93845749 -10.97723770]
[68.28443146 -7.13945627]
[75.85374451 6.05752134]
[71.73105621 21.07887840]
[79.01058197 34.19407654]
[86.29011536 47.30927658]
[93.56964111 60.42447662]
[100.84917450 73.53967285]
[110.07410431 81.58302307]
[112.78553009 91.21907806]
[109.93968964 98.66667175]
[124.28390503 103.05340576]
[138.62812805 107.44013214]
[152.97235107 111.82686615]
[167.31655884 116.21359253]
[181.66078186 120.60031891]
[196.00500488 124.98705292]
[210.34921265 129.37377930]
[224.69343567 133.76051331]
[239.03765869 138.14723206]
[253.38188171 142.53396606]
[259.31433105 133.71145630]
[267.16809082 126.56455994]
[276.48690796 121.50019073]
[286.73144531 118.80453491]
[297.31045532 118.62688446]
[307.61483765 120.97137451]
[317.05276489 125.69711304]
[325.08364868 132.52662659]
[331.24917603 141.06211853]
[335.19931030 150.80870056]
[336.71234131 161.20301819]
[335.70715332 171.64582825]
[349.61669922 177.26045227]
[363.52627563 182.87507629]
[377.43585205 188.48970032]
[389.58749390 184.17411804]
[401.05554199 189.13351440]
[405.91091919 200.20979309]
[419.73773193 206.02519226]
[433.56454468 211.84059143]
[447.39138794 217.65599060]
[461.21820068 223.47138977]
[475.04504395 229.28680420]
[488.87185669 235.10220337]
[502.69866943 240.91760254]
[516.52551270 246.73300171]
[530.35235596 252.54841614]
[544.17913818 258.36380005]
[558.20733643 263.67507935]
[572.41857910 268.47525024]
[586.62976074 273.27542114]
[600.84100342 278.07556152]
[615.05218506 282.87573242]
[623.09240723 280.50363159]
[630.29376221 282.66403198]
[634.55981445 287.77621460]
[649.35241699 290.26205444]
[664.14501953 292.74789429]
[679.31207275 286.51144409]
[692.12945557 296.74114990]
[689.41174316 312.91354370]
[673.95471191 318.39184570]
[661.65917969 307.54046631]
[646.86657715 305.05462646]
[632.07403564 302.56881714]
[642.99719238 312.84906006]
[648.98596191 326.60171509]
[649.07122803 341.60147095]
[643.23919678 355.42129517]
[632.43353271 365.82507324]
[618.40270996 371.12939453]
[603.41699219 370.47598267]
[589.90106201 363.97058105]
[580.04193115 352.66580200]
[575.43493652 338.39080811]
[576.82537842 323.45541382]
[583.98840332 310.27618408]
[595.76489258 300.98568726]
[610.25201416 297.08694458]
[596.04083252 292.28677368]
[581.82958984 287.48660278]
[567.61840820 282.68646240]
[553.40716553 277.88629150]
[557.64587402 292.27496338]
[549.16137695 304.64483643]
[534.21173096 305.87228394]
[523.82324219 295.05197144]
[525.65814209 280.16461182]
[538.36376953 272.19064331]
[524.53692627 266.37524414]
[510.71011353 260.55984497]
[496.88327026 254.74443054]
[483.05645752 248.92903137]
[469.22961426 243.11363220]
[455.40280151 237.29821777]
[441.57598877 231.48281860]
[427.74914551 225.66741943]
[413.92233276 219.85202026]
[400.09548950 214.03660583]
[382.82583618 217.16598511]
[371.82122803 202.39927673]
[357.91165161 196.78465271]
[344.00207520 191.17002869]
[330.09252930 185.55540466]
[316.34448242 199.54019165]
[297.82366943 206.13081360]
[278.23690796 203.96389771]
[261.52383423 193.43333435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[4 125]
[5 124]
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[11 118]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 51]
[18 50]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[30 38]
[31 37]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[140 212]
[141 211]
[142 210]
[143 209]
[146 207]
[147 206]
[148 205]
[149 204]
[150 203]
[151 202]
[152 201]
[153 200]
[154 199]
[155 198]
[156 197]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
