%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGUGCGGGGUGGGGCCUGGGCGAGUCACGUGGGGACGGUGCGCGCUCAGUGCGGCUGCGCCGGCCGGUAGCUGCAGCUGGAGCAGUGGCGUUUGGAGGAGACUCGGAUAUACCUUCUCAGAAGCUGCACAGGAGGAAAGCAGUGACAAAGAAAGAAGUUGUCAUUCUUUGCACGAAACUGG\
) } def
/len { sequence length } bind def

/coor [
[249.07057190 269.51477051]
[249.59310913 261.01712036]
[251.77456665 252.77874756]
[255.53343201 245.12062073]
[244.39768982 235.07098389]
[233.26194763 225.02133179]
[222.12620544 214.97169495]
[210.99047852 204.92205811]
[199.85473633 194.87242126]
[181.68109131 196.92259216]
[167.52189636 184.84936523]
[166.64440918 165.94328308]
[155.17205811 156.27967834]
[143.69970703 146.61608887]
[132.22735596 136.95248413]
[120.75499725 127.28889465]
[94.75232697 133.88090515]
[71.96219635 119.73158264]
[58.10400391 125.47183228]
[44.24581146 131.21208191]
[30.38761711 136.95233154]
[16.52942467 142.69258118]
[2.67123151 148.43283081]
[-11.18696117 154.17309570]
[-20.97572136 166.60252380]
[-35.69512558 164.32470703]
[-49.55331802 170.06495667]
[-55.66981888 184.39067078]
[-69.80577087 190.01469421]
[-83.42545319 184.09526062]
[-97.28365326 189.83551025]
[-111.14184570 195.57575989]
[-120.69030762 208.90838623]
[-136.98225403 207.03642273]
[-143.25793457 191.88558960]
[-133.06146240 179.04174805]
[-116.88209534 181.71755981]
[-103.02390289 175.97731018]
[-89.16571045 170.23706055]
[-83.72080231 156.42082214]
[-69.74839783 150.40196228]
[-55.29356766 156.20675659]
[-41.43537521 150.46650696]
[-32.63784790 138.44766235]
[-16.92721367 140.31489563]
[-3.06902003 134.57464600]
[10.78917313 128.83439636]
[24.64736557 123.09413910]
[38.50555801 117.35388947]
[52.36375046 111.61363983]
[66.22194672 105.87339020]
[66.76043701 91.59848785]
[73.06943512 78.78212738]
[63.60311508 67.14645386]
[48.89207840 61.32442474]
[46.86196518 46.56881714]
[37.39564514 34.93314743]
[27.92932510 23.29747963]
[18.46300507 11.66180992]
[8.99668694 0.02614019]
[-5.71434689 -5.79589224]
[-7.74446344 -20.55149841]
[-17.21078300 -32.18716812]
[-26.67710114 -43.82283783]
[-36.14342117 -55.45850754]
[-45.60974121 -67.09417725]
[-58.35184479 -69.19281769]
[-65.99583435 -79.09915161]
[-64.86811829 -91.15803528]
[-74.13439941 -102.95362854]
[-89.54875946 -108.55091095]
[-92.14173126 -124.74376678]
[-79.24588776 -134.87437439]
[-64.12737274 -128.52124023]
[-62.33880997 -112.21991730]
[-53.07252502 -100.42432404]
[-36.46174240 -94.79471588]
[-33.97407150 -76.56049347]
[-24.50775146 -64.92482758]
[-15.04143238 -53.28915405]
[-5.57511330 -41.65348816]
[3.89120579 -30.01781654]
[17.92514420 -25.02804565]
[20.63235664 -9.44017887]
[30.09867477 2.19549036]
[39.56499481 13.83115959]
[49.03131485 25.46682930]
[58.49763107 37.10249710]
[72.53157043 42.09226990]
[75.23878479 57.68013763]
[84.70510101 69.31580353]
[90.73440552 66.99087524]
[97.09286499 65.83858490]
[103.55459595 65.89987183]
[108.33575439 51.68225861]
[105.40073395 36.13567734]
[116.79120636 26.53846169]
[121.57235718 12.32084656]
[126.35350800 -1.89676869]
[122.57981873 -17.85581970]
[134.69787598 -28.90501785]
[150.24165344 -23.67789459]
[153.22105408 -7.55166769]
[140.57112122 2.88438439]
[135.78997803 17.10199928]
[131.00881958 31.31961441]
[134.28581238 45.84925842]
[122.55336761 56.46341324]
[117.77221680 70.68103027]
[122.94290161 74.52301025]
[127.30364227 79.26440430]
[130.70048523 84.73783112]
[133.01351929 90.75004578]
[134.16107178 97.08881378]
[134.10264587 103.53035736]
[132.84030151 109.84726715]
[130.41859436 115.81654358]
[141.89094543 125.48014069]
[153.36329651 135.14373779]
[164.83564758 144.80732727]
[176.30801392 154.47091675]
[187.75747681 151.16586304]
[199.26058960 153.78236389]
[207.97485352 161.55487061]
[211.80461121 172.45877075]
[209.90437317 183.73667908]
[221.04011536 193.78631592]
[232.17585754 203.83595276]
[243.31159973 213.88558960]
[254.44732666 223.93524170]
[265.58306885 233.98487854]
[286.25671387 225.36840820]
[308.40039062 228.24365234]
[326.08026123 241.77168274]
[334.59292603 262.26818848]
[331.71652222 284.20657349]
[347.51596069 285.03588867]
[354.14346313 298.37478638]
[366.82482910 306.38619995]
[379.50616455 314.39764404]
[392.18753052 322.40908813]
[401.13742065 324.35446167]
[405.01538086 330.66711426]
[417.55810547 338.89389038]
[430.10083008 347.12066650]
[442.64358521 355.34744263]
[455.18630981 363.57421875]
[467.72903442 371.80099487]
[480.27175903 380.02777100]
[492.81451416 388.25454712]
[506.86465454 381.88296509]
[522.12579346 384.14154053]
[533.72814941 394.30957031]
[537.96948242 409.14248657]
[533.49633789 423.90710449]
[521.73614502 433.89215088]
[506.44149780 435.91143799]
[492.49288940 429.32055664]
[484.34121704 416.22268677]
[484.58773804 400.79730225]
[472.04498291 392.57052612]
[459.50225830 384.34375000]
[446.95953369 376.11694336]
[434.41680908 367.89016724]
[421.87405396 359.66339111]
[409.33132935 351.43661499]
[396.78860474 343.20983887]
[384.17608643 335.09045410]
[371.49475098 327.07901001]
[358.81338501 319.06756592]
[346.13201904 311.05612183]
[331.23962402 310.79983521]
[323.70507812 296.88793945]
[317.47732544 302.54049683]
[310.25442505 306.86608887]
[302.31521606 309.69366455]
[293.96713257 310.91024780]
[285.53396606 310.46524048]
[277.34359741 308.37249756]
[269.71511841 304.71011353]
[262.94635010 299.61734009]
[257.30233765 293.28933716]
[253.00486755 285.96978760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 131]
[5 130]
[6 129]
[7 128]
[8 127]
[9 126]
[12 121]
[13 120]
[14 119]
[15 118]
[16 117]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[24 45]
[26 43]
[27 42]
[30 39]
[31 38]
[32 37]
[53 91]
[54 90]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[69 76]
[70 75]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
[136 173]
[138 171]
[139 170]
[140 169]
[141 168]
[143 167]
[144 166]
[145 165]
[146 164]
[147 163]
[148 162]
[149 161]
[150 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
