%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCGCCGGGGCGGAGCCCGGCCAACGGUCCGUCCGGAAGGAGGAGGCCCAUUCCAGCUUCUACUUUUGUUGCUAUGCAGGUUGUUGUCGGGAUACCAGAUUUCCUACUCCGAGAGGCCCCGGGUCCCUCUGCCACAACUUCUGUCGCUCUGCCGCCUGCACCGUGACCCGCACUAUUCACGGGAGCCCUAGAGAGGACACCGGGACACCCAGAAGCCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[7.33094883 254.58639526]
[6.20533419 263.74172974]
[2.73783302 272.59298706]
[-2.98297310 280.53546143]
[-10.71148109 286.99179077]
[-20.05377007 291.45288086]
[-30.48691750 293.51577759]
[-36.75260925 307.14447021]
[-43.01829910 320.77316284]
[-49.28398895 334.40182495]
[-55.54967880 348.03051758]
[-61.81537247 361.65921021]
[-56.09542084 376.39208984]
[-62.54488754 390.82052612]
[-77.33741760 396.38439941]
[-91.69686127 389.78274536]
[-97.10402679 374.93222046]
[-90.35092163 360.64337158]
[-75.44406128 355.39352417]
[-69.17836761 341.76483154]
[-62.91267776 328.13613892]
[-56.64698792 314.50744629]
[-50.38129425 300.87878418]
[-44.11560440 287.25009155]
[-49.49211121 282.02102661]
[-59.95042038 292.77386475]
[-70.70310974 282.31539917]
[-60.24512482 271.56286621]
[-65.62162781 266.33380127]
[-79.07087708 272.97592163]
[-92.52012634 279.61804199]
[-105.96936798 286.26016235]
[-119.37212372 292.99560547]
[-128.13720703 306.16693115]
[-142.99148560 305.07165527]
[-156.34710693 311.90008545]
[-169.70272827 318.72851562]
[-178.15615845 332.78097534]
[-194.54556274 332.21582031]
[-202.01092529 317.61444092]
[-192.87252808 303.99746704]
[-176.53115845 305.37289429]
[-163.17553711 298.54446411]
[-149.81991577 291.71603394]
[-142.01011658 279.03311157]
[-126.20055389 279.63998413]
[-121.68080139 273.80273438]
[-112.61148834 272.81091309]
[-99.16224670 266.16879272]
[-85.71299744 259.52667236]
[-72.26375580 252.88455200]
[-60.84996414 226.05326843]
[-36.73007584 214.43045044]
[-13.23629475 220.99459839]
[-3.31348872 209.74568176]
[6.60931683 198.49678040]
[16.53212357 187.24786377]
[19.14906120 172.58496094]
[34.08056641 167.35421753]
[44.00337219 156.10530090]
[53.92617798 144.85639954]
[63.84898376 133.60749817]
[73.77178955 122.35858154]
[83.69459534 111.10968018]
[69.59349823 116.22427368]
[57.86013412 125.56922913]
[43.40242386 129.56605530]
[28.53517723 127.57481384]
[15.63877773 119.91433716]
[6.77805281 107.81113434]
[3.37168527 93.20303345]
[5.96506453 78.42892456]
[14.14296818 65.85427094]
[26.59603882 57.49238968]
[41.33042908 54.68209839]
[55.98703003 57.87334442]
[68.21918488 66.55518341]
[76.06830597 79.33725739]
[87.58456421 88.94849396]
[82.08596802 74.99265289]
[67.20505524 71.00962830]
[57.63470078 59.16641617]
[56.88206482 44.13652802]
[65.02647400 31.69439507]
[59.52787399 17.73855591]
[54.02927780 3.78271723]
[39.81200027 -2.58177257]
[34.43444824 -16.81330681]
[40.58963013 -30.32808876]
[35.09103394 -44.28392792]
[22.83356285 -54.28717422]
[25.36678886 -68.96477509]
[19.86819267 -82.92061615]
[14.36959648 -96.87645721]
[8.87100029 -110.83229065]
[-6.18526125 -114.58576965]
[-16.13397980 -126.49386597]
[-17.14966774 -141.97766113]
[-8.84177589 -155.08332825]
[5.59514427 -160.77146912]
[20.60980225 -156.85488892]
[30.42875481 -144.83956909]
[31.27641487 -129.34565735]
[22.82683945 -116.33088684]
[28.32543564 -102.37505341]
[33.82403183 -88.41921234]
[39.32262802 -74.46337128]
[51.18680573 -65.45834351]
[49.04687500 -49.78252411]
[54.54547119 -35.82668304]
[68.26502228 -30.14254379]
[74.04019165 -16.06766891]
[67.98511505 -1.71587884]
[73.48371124 12.23995972]
[78.98230743 26.19579887]
[93.42481232 29.73869705]
[103.12650299 41.24265671]
[104.20658875 56.43103409]
[96.04180908 69.49405670]
[101.54040527 83.44989777]
[114.54812622 90.91977692]
[129.37310791 88.63506317]
[144.19808960 86.35035706]
[159.02307129 84.06564331]
[173.84805298 81.78092957]
[188.65679932 79.39322662]
[203.44859314 76.90266418]
[218.24038696 74.41210175]
[233.03216553 71.92153168]
[247.80628967 69.32821655]
[262.56204224 66.63228607]
[277.31777954 63.93634796]
[292.07351685 61.24040985]
[306.82925415 58.54447174]
[313.87216187 44.75360489]
[327.55294800 38.03775787]
[342.28979492 40.81035233]
[353.11523438 30.42720222]
[363.94067383 20.04405022]
[365.71139526 4.09901524]
[379.35806274 -4.33593369]
[394.41210938 1.20977485]
[399.32537842 16.48194885]
[390.32882690 29.76508141]
[374.32385254 30.86949158]
[363.49838257 41.25264359]
[352.67294312 51.63579178]
[353.16143799 52.74465942]
[353.59225464 53.87717056]
[368.59078979 53.66866684]
[383.58935547 53.46015930]
[398.58789062 53.25165176]
[413.37969971 50.76108932]
[427.61953735 46.04658127]
[441.85940552 41.33207703]
[450.31896973 27.70067024]
[466.26718140 25.95874977]
[477.46990967 37.44256973]
[475.33340454 53.34272385]
[461.49661255 61.46197510]
[446.57391357 55.57192993]
[432.33404541 60.28643417]
[418.09420776 65.00093842]
[419.44769287 79.93975067]
[434.30300903 82.01817322]
[449.15829468 84.09658813]
[464.01361084 86.17501068]
[478.86892700 88.25342560]
[493.72424316 90.33184814]
[503.10925293 78.17384338]
[517.32202148 72.35205078]
[532.53930664 74.43251038]
[544.66784668 83.85558319]
[550.44506836 98.08651733]
[548.31689453 113.29725647]
[538.85589600 125.39618683]
[524.60693359 131.12876892]
[509.40292358 128.95294189]
[497.33370972 119.45402527]
[491.64581299 105.18715668]
[476.79049683 103.10873413]
[461.93521118 101.03031921]
[447.07989502 98.95189667]
[432.22457886 96.87348175]
[417.36926270 94.79505920]
[398.79641724 68.25020599]
[383.79785156 68.45870972]
[368.79931641 68.66721344]
[353.80075073 68.87572479]
[342.41741943 82.93493652]
[324.14114380 84.93404388]
[309.52520752 73.30021667]
[294.76947021 75.99615479]
[280.01370239 78.69208527]
[265.25796509 81.38802338]
[250.50222778 84.08396149]
[244.49378967 88.37352753]
[235.52273560 86.71332550]
[220.73094177 89.20388794]
[205.93916321 91.69445801]
[191.14736938 94.18502045]
[185.07987976 98.39064789]
[176.13276672 96.60591125]
[161.30778503 98.89062500]
[146.48280334 101.17533875]
[131.65782166 103.46004486]
[116.83283997 105.74475861]
[130.59655762 111.70800018]
[137.17831421 125.18688965]
[133.41696167 139.70764160]
[121.11904144 148.29608154]
[106.19113159 146.82723999]
[95.80296326 136.00662231]
[94.94350433 121.03248596]
[85.02069855 132.28138733]
[75.09789276 143.53030396]
[65.17508698 154.77920532]
[55.25228119 166.02810669]
[45.32947540 177.27702332]
[42.00279236 192.74452209]
[27.78103065 197.17066956]
[17.85822487 208.41958618]
[7.93541908 219.66848755]
[-1.98738682 230.91740417]
[2.96474314 237.67674255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[29 51]
[30 50]
[31 49]
[32 48]
[33 46]
[35 44]
[36 43]
[37 42]
[54 224]
[55 223]
[56 222]
[57 221]
[59 219]
[60 218]
[61 217]
[62 216]
[63 215]
[64 214]
[79 120]
[80 119]
[84 115]
[85 114]
[86 113]
[89 110]
[90 109]
[92 107]
[93 106]
[94 105]
[95 104]
[121 207]
[122 206]
[123 205]
[124 204]
[125 203]
[126 201]
[127 200]
[128 199]
[129 198]
[130 196]
[131 195]
[132 194]
[133 193]
[134 192]
[137 147]
[138 146]
[139 145]
[149 189]
[150 188]
[151 187]
[152 186]
[153 163]
[154 162]
[155 161]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[169 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
