%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGGAUACCCACCAUGGUAGACCAGAGCCACUGGAAAGAGGCAUGAGUCCACAUAUCCAUAAAGGCAAAUAUCCAAAUAUUGGCUGUCUGGACCUACAGGAAUACUAAAGAAGGCACUGCAGAGACCCACAACUGAGAAAUACUGGCUGUGUGGAAGCCAUUACCUACUGUUGGACCGGGUGUCUCAGAUUCUUCAAGAGCAUGGUCAUAAUGUGACU\
) } def
/len { sequence length } bind def

/coor [
[105.06064606 272.26452637]
[95.83115387 260.44012451]
[91.42960358 246.09887695]
[88.25533295 260.75915527]
[85.08106232 275.41946411]
[90.60202026 290.86129761]
[79.78462219 303.18673706]
[63.75687790 299.71636963]
[59.00675201 284.02023315]
[70.42077637 272.24517822]
[73.59504700 257.58489990]
[76.76931763 242.92460632]
[78.36551666 228.00978088]
[78.36551666 213.00978088]
[78.36551666 198.00978088]
[78.36551666 183.00978088]
[78.36551666 168.00978088]
[78.36551666 153.00978088]
[65.33974457 145.57141113]
[52.42102051 153.19418335]
[44.46762466 166.87095642]
[29.57430840 166.67501831]
[16.65558624 174.29779053]
[3.73686385 181.92056274]
[-9.12735176 189.63496399]
[-21.93641281 197.44059753]
[-25.72910118 209.76351929]
[-36.55239868 216.00227356]
[-48.33547592 213.28675842]
[-61.25419998 220.90953064]
[-74.17292023 228.53230286]
[-82.12631989 242.20906067]
[-97.01963043 242.01313782]
[-109.93835449 249.63591003]
[-117.52744293 264.17337036]
[-133.92105103 264.59933472]
[-142.25485229 250.47558594]
[-133.95573425 236.33145142]
[-117.56112671 236.71717834]
[-104.64240265 229.09442139]
[-97.61303711 215.96287537]
[-81.79569244 215.61357117]
[-68.87696838 207.99079895]
[-55.95824814 200.36802673]
[-48.15960693 184.64360046]
[-29.74205017 184.63154602]
[-16.93298912 176.82589722]
[-12.85988522 170.66557312]
[-3.88590598 169.00184631]
[9.03281593 161.37907410]
[21.95153809 153.75630188]
[28.98089981 140.62475586]
[44.79824829 140.27546692]
[57.71697235 132.65269470]
[50.07142639 119.33829498]
[46.51571655 104.36703491]
[47.36183167 88.96825409]
[52.55950546 74.41210938]
[40.09486771 66.06747437]
[27.63023376 57.72284317]
[15.16559887 49.37821579]
[2.62367606 55.08576965]
[-10.99281216 53.86246109]
[-22.13868904 46.13411331]
[-27.96508026 34.00616455]
[-27.04727554 20.69109344]
[-39.39203262 12.17012119]
[-51.73679352 3.64915037]
[-67.48939514 2.17743230]
[-73.56845093 -11.42015553]
[-85.91320801 -19.94112587]
[-98.25796509 -28.46209717]
[-110.60272217 -36.98307037]
[-122.94747925 -45.50403976]
[-139.32809448 -46.28357315]
[-146.60177612 -60.98138046]
[-137.28601074 -74.47761536]
[-120.96403503 -72.88850403]
[-114.42651367 -57.84879684]
[-102.08175659 -49.32782745]
[-89.73699188 -40.80685425]
[-77.39223480 -32.28588486]
[-65.04747772 -23.76491356]
[-50.17785263 -22.90267181]
[-43.21582031 -8.69560719]
[-30.87106323 -0.17463638]
[-18.52630424 8.34633446]
[-3.21986532 2.40487981]
[12.77139187 6.80426931]
[23.08959770 20.00092697]
[23.51022911 36.91357803]
[35.97486496 45.25820923]
[48.43949890 53.60284042]
[60.90413666 61.94747162]
[72.74468994 52.73870850]
[67.72586060 38.60324478]
[54.90275574 28.38072395]
[57.61139679 12.20681477]
[73.06536865 6.71985054]
[85.36695099 17.56434822]
[81.86132812 33.58441925]
[86.88015747 47.71988297]
[94.05564117 46.88823700]
[101.21642303 47.02841949]
[108.23258209 48.12144089]
[114.97901917 50.13116074]
[121.33769226 53.00526047]
[127.19969177 56.67645264]
[132.46705627 61.06399155]
[137.05442810 66.07537842]
[140.89045715 71.60829163]
[143.91879272 77.55261993]
[158.15805054 72.83632660]
[172.39732361 68.12002563]
[186.63658142 63.40372849]
[200.87583923 58.68743134]
[208.01887512 44.84493256]
[222.52668762 40.26477814]
[235.67938232 47.15987778]
[249.91864014 42.44358063]
[264.15789795 37.72728348]
[271.31399536 32.06241226]
[278.63320923 33.04670715]
[292.93807983 28.53329849]
[307.24295044 24.01988602]
[318.07546997 12.48876095]
[332.54104614 16.03793526]
[346.84588623 11.52452374]
[361.15075684 7.01111221]
[375.45562744 2.49770093]
[388.95446777 -14.15147686]
[408.89318848 -8.80623150]
[422.99261475 -13.92539978]
[437.09207153 -19.04456902]
[451.19149780 -24.16373825]
[461.52258301 -36.14620209]
[476.12631226 -33.21696854]
[490.18899536 -38.43622208]
[504.21423340 -43.75529480]
[508.09356689 -53.90703583]
[516.73901367 -60.12326431]
[527.15899658 -60.55009842]
[535.90753174 -55.28775787]
[550.07830811 -60.20598984]
[560.57867432 -72.04039001]
[575.13928223 -68.90386200]
[589.31005859 -73.82209015]
[603.48083496 -78.74031830]
[617.65161133 -83.65854645]
[631.82244873 -88.57678223]
[637.22125244 -103.25284576]
[650.81616211 -110.98017883]
[666.18811035 -108.11016846]
[676.07891846 -95.99794006]
[675.81842041 -80.36252594]
[665.52966309 -68.58648682]
[650.07061768 -66.23011017]
[636.74066162 -74.40599823]
[622.56988525 -69.48777008]
[608.39910889 -64.56954193]
[594.22833252 -59.65130997]
[580.05755615 -54.73307800]
[570.57073975 -43.25046158]
[554.99658203 -46.03520584]
[540.82580566 -41.11697769]
[529.27069092 -25.60792732]
[509.53332520 -29.73005104]
[495.50805664 -24.41097832]
[490.37234497 -19.10396767]
[481.24548340 -19.11753273]
[471.92288208 -7.50122356]
[456.31066895 -10.06430149]
[442.21124268 -4.94513226]
[428.11178589 0.17403641]
[414.01235962 5.29320526]
[411.61828613 13.82986355]
[405.47387695 20.41082001]
[396.86233521 23.47661018]
[387.66906738 22.22195625]
[379.96902466 16.80256462]
[365.66418457 21.31597519]
[351.35931396 25.82938766]
[337.05444336 30.34279823]
[327.24508667 41.55109406]
[311.75634766 38.32474899]
[297.45147705 42.83816147]
[283.14660645 47.35157394]
[268.87420654 51.96654510]
[254.63493347 56.68284225]
[240.39567566 61.39913940]
[233.95954895 74.78240204]
[219.58609009 79.76824188]
[205.59213257 72.92668915]
[191.35287476 77.64299011]
[177.11361694 82.35928345]
[162.87435913 87.07558441]
[148.63508606 91.79187775]
[149.49427795 107.13756561]
[145.56285095 122.21421814]
[137.09324646 135.54275513]
[124.78913879 145.77531433]
[109.74839020 151.83114624]
[93.36551666 153.00978088]
[93.36551666 168.00978088]
[93.36551666 183.00978088]
[93.36551666 198.00978088]
[93.36551666 213.00978088]
[93.36551666 228.00978088]
[100.70127106 214.92594910]
[112.22364044 205.32203674]
[126.41486359 200.46310425]
[141.40563965 200.98919678]
[155.22132874 206.83099365]
[166.04209900 217.21902466]
[172.44259644 230.78491211]
[173.57974243 245.74174500]
[169.30375671 260.11935425]
[160.17785645 272.02389526]
[147.40414429 279.88726807]
[132.66522217 282.67364502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 54]
[20 53]
[22 51]
[23 50]
[24 49]
[25 47]
[26 46]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[58 94]
[59 93]
[60 92]
[61 91]
[66 87]
[67 86]
[68 85]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[95 102]
[96 101]
[112 197]
[113 196]
[114 195]
[115 194]
[116 193]
[119 190]
[120 189]
[121 188]
[123 187]
[124 186]
[125 185]
[127 183]
[128 182]
[129 181]
[130 180]
[132 175]
[133 174]
[134 173]
[135 172]
[137 170]
[138 168]
[139 167]
[143 165]
[144 164]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
