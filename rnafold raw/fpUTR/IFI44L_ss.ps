%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUAGUGGCAGUUGGCAUGCUGCCAGCUGAGUUUUUUUGCUGCUUUGAGUCUCAGUUUUCUUUCUUUCCUAGAGUCUCUGAAGCCACAGAUCUCUUAAGAACUUUCUGUCUCCAAACCGUGGCUGCUCGAUAAAUCAGACAGAACAGUUAAUCCUCAAUUUAAGCCUGAUCUAACCCCUAGAAACAGAUAUAGAACA\
) } def
/len { sequence length } bind def

/coor [
[59.14657211 284.96783447]
[63.47910309 270.50643921]
[71.55358124 257.75085449]
[82.77082825 247.64758301]
[96.29845428 240.94639587]
[93.50155640 226.20945740]
[90.70465088 211.47251892]
[87.90775299 196.73558044]
[77.93301392 185.67420959]
[82.96144104 170.67335510]
[80.16454315 155.93641663]
[65.63114166 152.22424316]
[56.10958099 163.81474304]
[46.58801651 175.40525818]
[37.06645584 186.99575806]
[27.54489517 198.58627319]
[18.02333260 210.17677307]
[8.50177193 221.76728821]
[-1.01978981 233.35778809]
[-10.54135132 244.94830322]
[-15.92356014 261.02523804]
[-32.86215591 260.30392456]
[-36.85808563 243.82760620]
[-22.13185883 235.42674255]
[-12.61029720 223.83622742]
[-3.08873582 212.24572754]
[6.43282604 200.65521240]
[15.95438766 189.06471252]
[25.47594833 177.47419739]
[34.99750900 165.88369751]
[44.51907349 154.29318237]
[54.04063416 142.70268250]
[45.26183319 130.53991699]
[31.26233101 135.92637634]
[17.26283073 141.31283569]
[11.07578278 155.85574341]
[-3.61353469 161.68666077]
[-18.09020996 155.34619141]
[-23.76548958 140.59605408]
[-17.27232933 126.18721771]
[-2.46300817 120.66820526]
[11.87636852 127.31333923]
[25.87586975 121.92687988]
[39.87537003 116.54042053]
[40.81254959 101.56972504]
[27.59410477 94.47939301]
[14.37566185 87.38906860]
[1.15721774 80.29873657]
[-12.06122589 73.20841217]
[-25.33467484 66.22160339]
[-38.66231918 59.33873367]
[-51.98996735 52.45586395]
[-67.80187225 52.99821472]
[-75.55986023 40.28353882]
[-88.88750458 33.40066910]
[-102.21514893 26.51780319]
[-115.59617615 19.73929787]
[-129.02976990 13.06556988]
[-140.73994446 22.80166435]
[-155.39952087 26.92682076]
[-170.46861267 24.72632980]
[-183.33642578 16.58143997]
[-191.77352905 3.90330410]
[-194.31814575 -11.11151600]
[-190.52940369 -25.86161041]
[-181.06372070 -37.79143906]
[-167.56109619 -44.83408356]
[-152.36093140 -45.76936340]
[-138.09674072 -40.43523788]
[-127.23989105 -29.75587463]
[-121.67140198 -15.58153915]
[-122.35604095 -0.36802056]
[-108.92244720 6.30570650]
[-101.52743530 6.46637726]
[-95.33228302 13.19015694]
[-82.00463104 20.07302475]
[-68.67698669 26.95589256]
[-53.81836319 25.92123604]
[-45.10709763 39.12821960]
[-31.77945328 46.01108932]
[-18.45180702 52.89395523]
[-11.06021309 53.17018509]
[-4.97089863 59.98996735]
[8.24754524 67.08029938]
[21.46598816 74.17062378]
[34.68443298 81.26094818]
[47.90287781 88.35128021]
[64.51624298 66.39650726]
[87.98083496 57.30267334]
[110.38977051 61.53512573]
[125.39398956 75.43676758]
[138.14361572 67.53442383]
[150.89323425 59.63208008]
[163.64286804 51.72973633]
[176.39248657 43.82738876]
[185.10005188 25.65246201]
[204.43034363 25.86783981]
[216.92675781 17.57087326]
[229.42315674 9.27390575]
[241.91957092 0.97693807]
[254.41598511 -7.32002926]
[266.91241455 -15.61699677]
[278.79483032 -24.77165031]
[290.00454712 -34.73872375]
[301.21426392 -44.70579529]
[312.42395020 -54.67286682]
[323.55541992 -64.72723389]
[334.60797119 -74.86828613]
[345.66055298 -85.00934601]
[356.71310425 -95.15039825]
[367.76565552 -105.29145050]
[378.81820679 -115.43250275]
[389.87075806 -125.57355499]
[400.92333984 -135.71461487]
[395.31784058 -150.77996826]
[395.91970825 -166.80456543]
[402.60726929 -181.33700562]
[414.33020020 -192.16554260]
[429.27429199 -197.65464783]
[445.14221191 -196.99197388]
[459.50674438 -190.30850220]
[470.39944458 -200.62106323]
[475.10144043 -215.72741699]
[489.66317749 -218.85877991]
[493.81805420 -234.72285461]
[509.70352173 -238.79513550]
[520.97802734 -226.88638306]
[516.04327393 -211.24731445]
[499.97573853 -207.96606445]
[496.05285645 -193.59733582]
[480.71200562 -189.72834778]
[469.81930542 -179.41578674]
[475.32955933 -166.50485229]
[476.10214233 -152.45857239]
[472.02386475 -138.96398926]
[463.56530762 -127.64884949]
[451.72677612 -119.88526917]
[437.91983032 -116.62337494]
[423.79922485 -118.27504730]
[411.06439209 -124.66204834]
[400.01184082 -114.52099609]
[388.95925903 -104.37994385]
[377.90670776 -94.23889160]
[366.85415649 -84.09783936]
[355.80160522 -73.95678711]
[344.74902344 -63.81573105]
[333.69647217 -53.67467880]
[330.89099121 -46.83061218]
[322.39102173 -43.46316147]
[311.18133545 -33.49608994]
[299.97161865 -23.52901840]
[288.76190186 -13.56194592]
[303.74185181 -14.33762550]
[316.81814575 -6.98847103]
[323.94378662 6.21098042]
[322.91336060 21.17554665]
[314.04580688 33.27374649]
[300.08557129 38.76123047]
[285.35336304 35.93964386]
[274.40866089 25.68225670]
[270.63888550 11.16369343]
[275.20938110 -3.12058377]
[262.71295166 5.17638350]
[250.21653748 13.47335052]
[237.72013855 21.77031898]
[225.22372437 30.06728554]
[212.72731018 38.36425400]
[211.61114502 48.53131866]
[204.93960571 56.57168961]
[194.73269653 59.67240143]
[184.29483032 56.57701492]
[171.54521179 64.47936249]
[158.79557800 72.38170624]
[146.04595947 80.28404999]
[133.29632568 88.18639374]
[139.14103699 113.32747650]
[125.69861603 139.78805542]
[94.90148163 153.13951111]
[97.69837952 167.87644958]
[107.87316895 179.99191284]
[102.64469147 193.93867493]
[105.44158936 208.67561340]
[108.23848724 223.41255188]
[111.03539276 238.14949036]
[126.07756042 239.42846680]
[140.21644592 244.71942139]
[152.40287781 253.62974548]
[161.73251343 265.49819946]
[167.51303101 279.44412231]
[169.31550598 294.43255615]
[167.00614929 309.35131836]
[160.75636292 323.09332275]
[151.02989197 334.63882446]
[138.54852295 343.13104248]
[124.23845673 347.93984985]
[109.16159058 348.70834351]
[94.43672180 345.37954712]
[81.15654755 338.20043945]
[70.30653381 327.70379639]
[62.69182587 314.66851807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[8 181]
[10 179]
[11 178]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[33 44]
[34 43]
[35 42]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 81]
[51 80]
[52 79]
[54 77]
[55 76]
[56 75]
[57 73]
[58 72]
[91 175]
[92 174]
[93 173]
[94 172]
[95 171]
[97 167]
[98 166]
[99 165]
[100 164]
[101 163]
[102 162]
[103 152]
[104 151]
[105 150]
[106 149]
[107 147]
[108 146]
[109 145]
[110 144]
[111 143]
[112 142]
[113 141]
[114 140]
[121 132]
[122 131]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
