%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCCGCCCAGAACCUGGAAUUCCAGAGCACACAGGGCCAGGACACCUUUGUACCCCUGCUCCCCACCGGCACAGGUCCCACCCACCCCCUUCUCCCCGCCCCAUGCCCGGGUGGAGCCAGCUGCCAGGGCGCCAAGACUCCCAGCCCUCUCUCUGUGCACGGCAGAGUAGAGGCCAAGGGAGGGCUCUGUGCCAGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[132.81983948 296.01464844]
[142.06227112 307.82894897]
[147.85588074 321.66491699]
[149.78918457 336.53982544]
[147.72483826 351.39709473]
[141.80949402 365.18145752]
[132.46328735 376.91381836]
[120.35007477 385.76086426]
[106.33024597 391.09417725]
[91.39960480 392.53497314]
[76.61864471 389.98089600]
[63.03724670 383.61334229]
[51.62007523 373.88461304]
[43.17806625 361.48571777]
[38.31085205 347.29736328]
[37.36414337 332.32723999]
[40.40433884 317.64114380]
[30.82163811 329.18115234]
[21.23893547 340.72116089]
[11.65623379 352.26116943]
[9.42633820 368.50799561]
[-5.85888386 374.44888306]
[-18.47530556 363.97232056]
[-15.44423294 347.85574341]
[0.11622456 342.67846680]
[9.69892693 331.13845825]
[19.28162956 319.59844971]
[28.86433029 308.05844116]
[30.05653954 299.06188965]
[38.05109024 292.69775391]
[43.68446350 278.79577637]
[39.61420822 259.89614868]
[55.68869781 247.73774719]
[60.89128876 233.66888428]
[66.09387970 219.60002136]
[71.29647064 205.53114319]
[76.49906158 191.46228027]
[81.70165253 177.39340210]
[86.90424347 163.32453918]
[92.10683441 149.25567627]
[97.30942535 135.18679810]
[79.24216461 125.47760010]
[70.74640656 108.40485382]
[55.75352097 108.86677551]
[40.76463318 109.44413757]
[25.78063965 110.13688660]
[10.79664612 110.82963562]
[-2.71218061 120.12714386]
[-17.40012932 112.83357239]
[-18.15749931 96.45192719]
[-4.20517206 87.83423615]
[10.10389423 95.84564209]
[25.08788872 95.15289307]
[40.07188416 94.46013641]
[46.61204147 91.00901031]
[55.29159546 93.87389374]
[70.28447723 93.41196442]
[72.77135468 86.39797211]
[76.88594818 80.19709778]
[82.38229370 75.18003082]
[88.93182373 71.64669800]
[87.08849335 56.76039124]
[77.71395874 44.01564026]
[83.82858276 30.43400955]
[81.98526001 15.54770279]
[80.14193726 0.66139519]
[66.72508240 -6.90790844]
[60.41171646 -20.76412582]
[63.43224335 -35.50659561]
[74.42298889 -45.52365875]
[72.57965851 -60.40996933]
[70.73633575 -75.29627228]
[68.89301300 -90.18257904]
[59.93732071 -96.36782837]
[55.94916153 -106.25838470]
[58.02245712 -116.49526215]
[65.23514557 -123.74298096]
[63.85112000 -138.67900085]
[62.46709824 -153.61500549]
[53.48948288 -166.64241028]
[60.01945114 -180.02929688]
[58.63542557 -194.96530151]
[57.25139999 -209.90132141]
[55.86737823 -224.83732605]
[54.48335266 -239.77334595]
[53.09932709 -254.70935059]
[38.17663956 -256.80938721]
[24.14072037 -262.29479980]
[11.74850464 -270.86975098]
[1.66829062 -282.07180786]
[-5.55630827 -295.29684448]
[-9.53567886 -309.83166504]
[-10.05521965 -324.89245605]
[-7.08691072 -339.66696167]
[-0.79083014 -353.35839844]
[8.49348259 -365.22845459]
[20.26533508 -374.63699341]
[33.88988876 -381.07656860]
[48.63238525 -384.19995117]
[63.69778442 -383.83868408]
[78.27362061 -380.01223755]
[91.57384491 -372.92700195]
[102.88119507 -362.96502686]
[111.58586884 -350.66360474]
[117.21844482 -336.68609619]
[119.47516632 -321.78628540]
[118.23431396 -306.76773071]
[113.56282806 -292.44036865]
[105.71261597 -279.57681274]
[95.10704803 -268.87078857]
[82.31805420 -260.89968872]
[68.03533936 -256.09338379]
[69.41936493 -241.15736389]
[70.80339050 -226.22135925]
[72.18741608 -211.28533936]
[73.57144165 -196.34933472]
[74.95546722 -181.41331482]
[83.83408356 -169.45423889]
[77.40310669 -154.99903870]
[78.78713226 -140.06301880]
[80.17115784 -125.12700653]
[92.47014618 -110.21066284]
[83.77931976 -92.02590942]
[85.62264252 -77.13960266]
[87.46596527 -62.25329208]
[89.30929565 -47.36698532]
[102.41137695 -40.33325958]
[108.93656921 -26.77280426]
[106.19360352 -11.79516983]
[95.02824402 -1.18192911]
[96.87156677 13.70437813]
[98.71488953 28.59068680]
[107.95758057 40.27066803]
[101.97480011 54.91706467]
[103.81813049 69.80337524]
[113.99061584 72.06144714]
[123.05567932 77.73052979]
[129.87748718 86.31309509]
[133.53244019 96.93717957]
[133.43093872 108.44371033]
[129.40411377 119.51277924]
[143.69824219 124.06006622]
[157.99237061 128.60736084]
[172.28649902 133.15464783]
[186.58062744 137.70193481]
[206.05268860 132.50053406]
[218.45512390 147.33097839]
[232.88250732 151.43591309]
[247.30989075 155.54086304]
[256.42608643 154.87956238]
[261.92694092 159.82170105]
[276.28939819 164.14833069]
[290.65185547 168.47496033]
[305.04721069 172.69087219]
[319.47457886 176.79582214]
[333.90197754 180.90075684]
[348.32934570 185.00570679]
[362.75674438 189.11065674]
[377.18411255 193.21559143]
[391.84295654 186.69654846]
[406.01239014 194.22029114]
[408.82284546 210.01525879]
[398.11837769 221.96490479]
[382.11053467 220.90248108]
[373.07919312 207.64299011]
[358.65179443 203.53804016]
[344.22442627 199.43309021]
[329.79702759 195.32815552]
[315.36962891 191.22320557]
[300.94226074 187.11825562]
[293.64440918 188.31208801]
[286.32522583 182.83741760]
[271.96276855 178.51078796]
[257.60031128 174.18415833]
[243.20495605 169.96824646]
[228.77757263 165.86329651]
[214.35018921 161.75836182]
[205.90054321 167.51647949]
[195.45700073 167.67344666]
[186.46766663 161.93580627]
[182.03334045 151.99606323]
[167.73921204 147.44877625]
[153.44508362 142.90148926]
[139.15095520 138.35420227]
[124.85682678 133.80691528]
[111.37828827 140.38938904]
[106.17569733 154.45826721]
[100.97310638 168.52713013]
[95.77052307 182.59599304]
[90.56793213 196.66487122]
[85.36534119 210.73373413]
[80.16275024 224.80259705]
[74.96015930 238.87147522]
[69.75756836 252.94033813]
[74.87001038 262.54891968]
[73.86785126 273.16607666]
[67.32282257 281.30578613]
[57.58644485 284.42913818]
[51.95307159 298.33111572]
[63.45555878 288.70339966]
[77.09255981 282.45584106]
[91.89545441 280.03213501]
[106.81282043 281.60449219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 28]
[18 27]
[19 26]
[20 25]
[30 199]
[31 198]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[43 57]
[44 56]
[45 54]
[46 53]
[47 52]
[61 135]
[62 134]
[64 132]
[65 131]
[66 130]
[70 126]
[71 125]
[72 124]
[73 123]
[77 121]
[78 120]
[79 119]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[147 177]
[148 176]
[149 175]
[151 174]
[152 173]
[153 172]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
