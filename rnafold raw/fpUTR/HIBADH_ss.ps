%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAAGGGAUUGACAGGCCCUGCCGCGUCAGGCCGCUCCUCUCGGCUCCGCGCUCCUUCCCUCGCGCGUGGGCACCCGCCCCCGAGCGGUGAGAGCGCGUGCGCGCGCGCCCUUCUCCGUGGGCGAGCCAGCCAGUCCCGCUGCACACGCUCGCAGUCUGUGGGCCCUCCGGGAGGCGGCGGAGGUCACCGCGGGGAGAGGGGCGGGCGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-114.87963104 183.18098450]
[-129.85559082 184.02976990]
[-142.72084045 176.31709290]
[-149.02951050 162.70825195]
[-146.60131836 147.90574646]
[-152.18864441 161.82630920]
[-157.77597046 175.74685669]
[-163.36329651 189.66740417]
[-154.34211731 202.18228149]
[-153.54188538 217.58886719]
[-161.21794128 230.97100830]
[-174.92089844 238.05848694]
[-190.27818298 236.58973694]
[-202.38935852 227.03341675]
[-207.38975525 212.43891907]
[-203.68380737 197.46328735]
[-192.45404053 186.88520813]
[-177.28384399 184.08007812]
[-171.69651794 170.15953064]
[-166.10919189 156.23898315]
[-160.52186584 142.31842041]
[-167.31210327 128.94334412]
[-181.84739685 125.23859406]
[-196.40950012 121.64064026]
[-210.99760437 118.14966583]
[-225.58572388 114.65869141]
[-240.17384338 111.16771698]
[-254.78718567 107.78392029]
[-269.42498779 104.50746918]
[-282.66897583 112.70714569]
[-297.46710205 109.17584229]
[-305.20260620 96.49919128]
[-319.84039307 93.22274780]
[-334.47817993 89.94629669]
[-349.11596680 86.66985321]
[-363.75375366 83.39340973]
[-378.39154053 80.11695862]
[-393.02935791 76.84051514]
[-404.09976196 89.12357330]
[-419.76440430 94.11848450]
[-435.71847534 90.55197144]
[-447.62744141 79.49004364]
[-452.30493164 64.02177429]
[-466.98925781 60.96055984]
[-481.67355347 57.89934540]
[-500.51898193 65.05979919]
[-514.36309814 51.55877686]
[-529.13098145 48.92996216]
[-543.89880371 46.30114746]
[-558.66668701 43.67233276]
[-573.43450928 41.04351807]
[-588.20239258 38.41470337]
[-602.97021484 35.78588867]
[-617.91278076 40.98490143]
[-629.08709717 31.13683891]
[-640.17291260 41.99430084]
[-655.52825928 44.22878647]
[-669.24871826 36.98109436]
[-676.05847168 23.03810310]
[-673.33898926 7.76118279]
[-662.13604736 -2.97538090]
[-646.75738525 -5.04315996]
[-633.11639404 2.35294890]
[-626.45831299 16.36899185]
[-612.57202148 10.98194885]
[-600.34143066 21.01803970]
[-585.57354736 23.64685440]
[-570.80572510 26.27566910]
[-556.03784180 28.90448380]
[-541.27001953 31.53329849]
[-526.50213623 34.16211319]
[-511.73431396 36.79092789]
[-503.91674805 30.21508026]
[-493.55258179 29.00104332]
[-484.03457642 33.78923416]
[-478.61233521 43.21503448]
[-463.92803955 46.27624893]
[-449.24371338 49.33746338]
[-440.83721924 38.57574081]
[-428.55532837 32.45611191]
[-414.76904297 32.22366714]
[-402.16744995 37.98075867]
[-393.23306274 48.65589905]
[-389.75289917 62.20272446]
[-375.11511230 65.47917175]
[-360.47732544 68.75561523]
[-345.83953857 72.03206635]
[-331.20175171 75.30850983]
[-316.56393433 78.58495331]
[-301.92614746 81.86140442]
[-289.52459717 73.69213104]
[-274.63311768 76.80639648]
[-266.14852905 89.86968231]
[-251.51074219 93.14612579]
[-244.29847717 91.53999329]
[-236.68286133 96.57960510]
[-222.09475708 100.07057953]
[-207.50663757 103.56154633]
[-192.91851807 107.05252075]
[-185.68345642 105.55243683]
[-178.14265442 110.70330048]
[-163.60736084 114.40805054]
[-130.49171448 119.33379364]
[-115.59504700 117.57619476]
[-100.69837189 115.81860352]
[-85.80169678 114.06101227]
[-74.06870270 104.88571930]
[-59.45698929 110.95271301]
[-44.56031799 109.19512177]
[-29.66364288 107.43752289]
[-14.76697063 105.67993164]
[0.12970209 103.92233276]
[15.02637482 102.16474152]
[29.92304802 100.40715027]
[44.81972122 98.64955139]
[59.71639252 96.89196014]
[74.61306763 95.13436890]
[89.50974274 93.37677002]
[103.26026917 87.38320160]
[114.68778229 77.66661835]
[126.11529541 67.95003510]
[137.54281616 58.23345947]
[148.97032166 48.51687622]
[160.39784241 38.80029678]
[171.82534790 29.08371735]
[177.73495483 9.80941010]
[196.89036560 7.16213894]
[208.02770996 -2.88572526]
[212.30192566 -10.95580864]
[219.40309143 -12.99786949]
[230.68673706 -22.88115692]
[241.97038269 -32.76444244]
[241.45793152 -48.39362717]
[251.15225220 -60.66368484]
[266.47595215 -63.78107071]
[280.19366455 -56.27384949]
[285.82830811 -41.68669891]
[280.71936035 -26.90723038]
[267.27911377 -18.91385460]
[251.85366821 -21.48079872]
[240.57002258 -11.59751225]
[229.28637695 -1.71422517]
[218.07557678 8.25161839]
[206.93823242 18.29948235]
[207.33374023 28.50730515]
[201.93289185 37.43593216]
[192.31176758 42.01345825]
[181.54193115 40.51123047]
[170.11441040 50.22780991]
[158.68690491 59.94438934]
[147.25938416 69.66097260]
[135.83187866 79.37754822]
[124.40436554 89.09413147]
[112.97685242 98.81071472]
[113.91029358 106.25239563]
[127.73323822 112.07702637]
[115.77718353 121.13576508]
[116.71063232 128.57745361]
[130.18394470 135.17060852]
[143.65727234 141.76376343]
[157.13058472 148.35691833]
[170.60389709 154.95007324]
[184.07722473 161.54322815]
[197.59857178 168.03730774]
[213.38038635 166.92147827]
[221.59468079 179.34623718]
[235.16334534 185.74089050]
[248.73199463 192.13555908]
[262.30065918 198.53021240]
[275.86929321 204.92486572]
[289.43795776 211.31953430]
[302.97473145 203.73434448]
[318.38070679 205.58795166]
[329.73193359 216.16760254]
[332.66366577 231.40521240]
[326.04858398 245.44158936]
[312.43029785 252.87948608]
[297.04534912 250.85885620]
[285.80953979 240.15669250]
[283.04330444 224.88818359]
[269.47463989 218.49351501]
[255.90599060 212.09886169]
[242.33732605 205.70420837]
[228.76867676 199.30955505]
[215.20002747 192.91488647]
[200.38873291 194.48809814]
[191.20391846 181.60595703]
[183.81498718 181.59793091]
[177.48406982 175.01654053]
[164.01074219 168.42338562]
[150.53742981 161.83023071]
[137.06411743 155.23707581]
[123.59078979 148.64392090]
[110.11747742 142.05076599]
[91.26733398 108.27344513]
[76.37065887 110.03103638]
[61.47398758 111.78863525]
[46.57731628 113.54622650]
[31.68064117 115.30382538]
[16.78396797 117.06141663]
[1.88729596 118.81900787]
[-13.00937653 120.57660675]
[-27.90604973 122.33419800]
[-42.80272293 124.09178925]
[-57.69939423 125.84938812]
[-70.49790192 135.15039062]
[-84.04410553 128.95768738]
[-98.94078064 130.71527100]
[-113.83745575 132.47286987]
[-128.73413086 134.23046875]
[-113.81155396 135.75256348]
[-102.32263947 145.39646912]
[-98.23764801 159.82951355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 21]
[6 20]
[7 19]
[8 18]
[22 102]
[23 101]
[24 99]
[25 98]
[26 97]
[27 96]
[28 94]
[29 93]
[32 90]
[33 89]
[34 88]
[35 87]
[36 86]
[37 85]
[38 84]
[43 78]
[44 77]
[45 76]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[52 67]
[53 66]
[55 64]
[103 210]
[104 209]
[105 208]
[106 207]
[108 205]
[109 204]
[110 203]
[111 202]
[112 201]
[113 200]
[114 199]
[115 198]
[116 197]
[117 196]
[118 195]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[124 149]
[125 148]
[127 144]
[128 143]
[130 142]
[131 141]
[132 140]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[163 189]
[164 187]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
