%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAUGGCGGCGGCGGCGGCGGCGGCGGCGGCCGCUGCCAUUGCCCGGAGAUGGCCGGCAGAGCCGCCGAGACGCCGAAGAGCCCGCCGCCCGCGCGAGGUGUAGACGGGGCACUGCCUUCAGAGCAGGUCCUGCCAGCCUCGCUGGAGAGGAUGCCCUCGUGUCCGUG\
) } def
/len { sequence length } bind def

/coor [
[75.05134583 159.22764587]
[60.31326675 156.43676758]
[48.73471069 146.90068054]
[43.17071152 132.97077942]
[44.99323654 118.08191681]
[53.75289536 105.90536499]
[67.28972626 99.44361877]
[82.26466370 100.28964233]
[68.03326416 95.54968262]
[53.80186844 90.80971527]
[39.57046890 86.06974792]
[25.29612732 81.46070862]
[10.98005295 76.98298645]
[-3.33602214 72.50526428]
[-17.65209770 68.02754211]
[-31.96817207 63.54982376]
[-46.28424835 59.07210159]
[-60.64085007 54.72607422]
[-76.86357880 64.45299530]
[-94.74926758 59.35892105]
[-103.12077332 43.11006927]
[-117.66177368 39.42778778]
[-132.20277405 35.74550247]
[-146.74378967 32.06322098]
[-161.28479004 28.38093948]
[-180.37951660 34.76440430]
[-193.69389343 20.77296257]
[-208.36035156 17.62733650]
[-223.02682495 14.48171139]
[-237.69328308 11.33608627]
[-252.35974121 8.19046021]
[-267.02618408 5.04483461]
[-281.69265747 1.89920866]
[-292.95104980 8.24378395]
[-305.12078857 5.29590225]
[-311.78561401 -4.82753372]
[-326.39181519 -8.24206352]
[-340.99801636 -11.65659428]
[-355.60421753 -15.07112408]
[-370.21041870 -18.48565483]
[-379.14477539 -12.19833279]
[-389.84527588 -11.89400005]
[-398.74862671 -17.43120193]
[-403.02365112 -26.76334572]
[-417.49456787 -30.71213722]
[-431.96545410 -34.66092682]
[-444.71212769 -25.60241890]
[-460.29510498 -26.90811729]
[-471.35659790 -37.96151352]
[-472.67367554 -53.54352951]
[-463.62451172 -66.29681396]
[-448.48178101 -70.19966125]
[-434.39547729 -63.40925980]
[-428.01666260 -49.13183212]
[-413.54577637 -45.18304062]
[-399.07485962 -41.23424911]
[-380.81875610 -47.53885269]
[-366.79586792 -33.09185028]
[-352.18966675 -29.67732048]
[-337.58349609 -26.26279068]
[-322.97729492 -22.84826088]
[-308.37109375 -19.43373108]
[-291.89456177 -25.42729950]
[-278.54702759 -12.76725101]
[-263.88058472 -9.62162495]
[-249.21411133 -6.47599936]
[-234.54765320 -3.33037376]
[-219.88119507 -0.18474813]
[-205.21473694 2.96087766]
[-190.54827881 6.10650349]
[-182.46168518 -0.21581276]
[-172.00936890 -1.04025924]
[-162.64648438 4.14914227]
[-157.60250854 13.83993530]
[-143.06150818 17.52221870]
[-128.52049255 21.20450020]
[-113.97949219 24.88678169]
[-99.43849182 28.56906509]
[-91.09986877 20.71745491]
[-79.88634491 17.85334587]
[-68.57139587 20.80508423]
[-60.01189423 28.94751930]
[-56.42687988 40.33015442]
[-49.09610367 39.18708038]
[-41.80652618 44.75602722]
[-27.49044991 49.23374939]
[-13.17437458 53.71147156]
[1.14170003 58.18919373]
[15.45777512 62.66691589]
[29.77384949 67.14463806]
[37.12438965 66.13642883]
[44.31043243 71.83834839]
[58.54183197 76.57831573]
[72.77323151 81.31828308]
[87.00463104 86.05824280]
[114.12219238 78.91974640]
[128.51811218 74.70577240]
[142.91403198 70.49180603]
[157.30995178 66.27783966]
[171.70587158 62.06387329]
[186.10177612 57.84990311]
[200.49769592 53.63593674]
[205.57205200 41.13475418]
[216.76327515 33.95380402]
[229.85260010 34.53320312]
[240.05740356 42.43641663]
[247.54663086 37.13901138]
[254.83047485 38.55061722]
[269.37149048 34.86833572]
[283.91247559 31.18605232]
[298.45349121 27.50376892]
[312.99450684 23.82148743]
[327.53549194 20.13920403]
[335.12078857 14.98027992]
[342.37747192 16.52545547]
[356.98367310 13.11092567]
[371.58984375 9.69639587]
[386.19604492 6.28186560]
[393.09503174 -7.75159740]
[407.42129517 -14.01994705]
[422.41043091 -9.56346130]
[430.98498535 3.51364398]
[429.09637451 19.03676033]
[417.63629150 29.67634392]
[402.01586914 30.40871239]
[389.61059570 20.88806152]
[375.00439453 24.30259323]
[360.39819336 27.71712303]
[345.79199219 31.13165283]
[331.21777344 34.68021011]
[316.67678833 38.36249161]
[302.13577271 42.04477310]
[287.59475708 45.72705460]
[273.05377197 49.40933990]
[258.51275635 53.09162140]
[244.00619507 56.90731812]
[236.31381226 71.84349060]
[219.88082886 76.70823669]
[204.71166992 68.03185272]
[190.31575012 72.24581909]
[175.91983032 76.45979309]
[161.52391052 80.67375946]
[147.12799072 84.88772583]
[132.73207092 89.10169220]
[118.33615875 93.31566620]
[112.69152069 107.21307373]
[120.07187653 120.27179718]
[127.45223236 133.33052063]
[134.83258057 146.38925171]
[142.56996155 159.23965454]
[150.65849304 171.87199402]
[158.74700928 184.50431824]
[166.83554077 197.13665771]
[181.63992310 204.19088745]
[182.66305542 220.55809021]
[168.85243225 229.40107727]
[154.41523743 221.62295532]
[154.20321655 205.22517395]
[146.11468506 192.59284973]
[138.02615356 179.96051025]
[129.93763733 167.32818604]
[126.55114746 166.22422791]
[123.54137421 163.40327454]
[121.71942902 159.06538391]
[121.77385712 153.76960754]
[114.39350128 140.71087646]
[107.01314545 127.65215302]
[99.63278961 114.59342957]
[103.33397675 129.12963867]
[99.58665466 143.65400696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 95]
[9 94]
[10 93]
[11 92]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[18 83]
[21 78]
[22 77]
[23 76]
[24 75]
[25 74]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[44 56]
[45 55]
[46 54]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[101 140]
[102 139]
[106 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[115 129]
[116 128]
[117 127]
[118 126]
[146 168]
[147 167]
[148 166]
[149 165]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
