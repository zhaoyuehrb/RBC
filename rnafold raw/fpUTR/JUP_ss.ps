%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGGCGAGGGGCGUGGCUUGGCUGUCAGGUCUCUUCGCCUUUUGUUCGGUUACUGAGUUGCUGCCUUGGCCAGAGUCCGGAGCAGCCGCCGCCCGACCACGCCGAGCUCAGUUCGCUGUCCGCGCCGGCUCCCACCCCGGCCCGACCCCGACCCGGCCCGGUCAGGCCCCAUACUCAGGUGCGGGCUAUCGGGGGCGCAGUAGCCACG\
) } def
/len { sequence length } bind def

/coor [
[22.53167534 230.24969482]
[12.24403954 241.16593933]
[1.95640492 252.08219910]
[3.61464381 272.10614014]
[-9.78212547 286.66830444]
[-29.26388931 286.68164062]
[-39.05622101 298.04431152]
[-48.84855270 309.40698242]
[-58.64088440 320.76965332]
[-68.43321991 332.13232422]
[-78.22554779 343.49499512]
[-88.01788330 354.85766602]
[-97.72575378 366.29257202]
[-107.34863281 377.79910278]
[-116.97151184 389.30563354]
[-119.88938141 404.85543823]
[-133.98954773 409.65487671]
[-143.61242676 421.16140747]
[-153.23530579 432.66793823]
[-162.85818481 444.17443848]
[-161.20536804 459.89208984]
[-171.21546936 472.12210083]
[-186.94969177 473.60864258]
[-199.07319641 463.46978760]
[-200.39331055 447.72073364]
[-190.12684631 435.70510864]
[-174.36471558 434.55157471]
[-164.74183655 423.04504395]
[-155.11895752 411.53851318]
[-145.49607849 400.03198242]
[-143.26649475 385.30520630]
[-128.47804260 379.68273926]
[-118.85516357 368.17620850]
[-109.23227692 356.66967773]
[-107.35275269 349.52261353]
[-99.38054657 345.06533813]
[-89.58821869 333.70266724]
[-79.79588318 322.33999634]
[-70.00355530 310.97732544]
[-60.21121979 299.61465454]
[-50.41888809 288.25198364]
[-40.62655640 276.88931274]
[-44.11551285 267.23678589]
[-43.27682877 256.92636108]
[-38.19501495 247.82360840]
[-29.72836685 241.60336304]
[-19.36464882 239.44183350]
[-8.95984745 241.79455566]
[1.32778716 230.87831116]
[11.61542225 219.96205139]
[21.57505417 208.74574280]
[31.19793510 197.23921204]
[40.82081604 185.73268127]
[50.44369888 174.22616577]
[60.06657791 162.71963501]
[69.68946075 151.21310425]
[79.31233978 139.70658875]
[88.93522644 128.20005798]
[88.21392059 120.73481750]
[73.28343201 122.17717743]
[71.84132385 107.24665833]
[86.77131653 105.80435181]
[86.05001831 98.33911896]
[74.40216064 88.88780212]
[62.75429916 79.43648529]
[51.10644150 69.98516083]
[39.45858383 60.53384781]
[27.74101830 51.16909027]
[15.95438671 41.89141464]
[0.32493848 39.43562317]
[-4.89022684 25.48387337]
[-16.67685890 16.20619392]
[-28.46348953 6.92851591]
[-44.76307678 5.12420273]
[-51.10160065 -10.00045109]
[-40.95853043 -22.88649750]
[-24.76819038 -20.27787781]
[-19.18581009 -4.85811567]
[-7.39917946 4.41956282]
[4.38745165 13.69724178]
[19.17384148 15.48943043]
[25.23206520 30.10478210]
[37.01869583 39.38246155]
[44.21832657 41.04936981]
[48.90990067 48.88599014]
[60.55776215 58.33730698]
[72.20561981 67.78862762]
[83.85347748 77.23994446]
[95.50133514 86.69126129]
[110.36812592 88.68587494]
[124.09531403 82.63902283]
[137.82249451 76.59217072]
[151.54968262 70.54531860]
[158.14097595 64.22248077]
[165.52536011 64.51225281]
[179.34065247 58.66947556]
[193.15592957 52.82670212]
[206.97120667 46.98392868]
[220.78648376 41.14115143]
[222.14997864 28.11980057]
[229.06910706 17.11021805]
[240.05863953 10.32774639]
[252.82409668 9.09597683]
[264.74066162 13.58909798]
[275.95697021 3.62946582]
[287.17327881 -6.33016634]
[298.38961792 -16.28979874]
[303.57138062 -31.23837471]
[318.22561646 -33.90336990]
[329.44192505 -43.86300278]
[340.65826416 -53.82263565]
[341.74938965 -69.36120605]
[353.26620483 -79.30191040]
[368.07312012 -78.16592407]
[379.28942871 -88.12555695]
[383.62811279 -96.16293335]
[390.74655151 -98.14816284]
[402.10922241 -107.94049835]
[403.43048096 -123.46118927]
[415.09332275 -133.23014832]
[429.88180542 -131.87487793]
[441.24447632 -141.66720581]
[452.60714722 -151.45953369]
[458.00982666 -166.32968140]
[472.70196533 -168.77723694]
[477.15927124 -176.74945068]
[484.30633545 -178.62896729]
[495.81286621 -188.25184631]
[507.31939697 -197.87474060]
[518.82592773 -207.49761963]
[530.33245850 -217.12049866]
[529.14117432 -232.59178162]
[537.29992676 -245.79083252]
[551.67138672 -251.64234924]
[566.72949219 -247.89630127]
[576.68408203 -235.99313354]
[577.70745850 -220.50984192]
[569.40600586 -207.40007019]
[554.97192383 -201.70478821]
[539.95532227 -205.61396790]
[528.44879150 -195.99108887]
[516.94226074 -186.36820984]
[505.43572998 -176.74533081]
[493.92922974 -167.12243652]
[482.49429321 -157.41456604]
[477.90432739 -143.24482727]
[462.39947510 -140.09686279]
[451.03680420 -130.30453491]
[439.67413330 -120.51220703]
[438.83108521 -105.68571472]
[427.44720459 -95.59303284]
[411.90155029 -96.57782745]
[400.53887939 -86.78549194]
[389.24908447 -76.90924072]
[378.03274536 -66.94960785]
[377.40951538 -52.11225510]
[366.17645264 -41.85198975]
[350.61788940 -42.60631943]
[339.40158081 -32.64668655]
[328.18524170 -22.68705559]
[323.80575562 -8.45085812]
[308.34924316 -5.07348251]
[297.13293457 4.88614941]
[285.91659546 14.84578133]
[274.70028687 24.80541229]
[277.01745605 31.66568565]
[277.49996948 38.89062500]
[276.11563110 45.99809647]
[288.55670166 54.37779999]
[300.99780273 62.75749969]
[313.43887329 71.13719940]
[325.87997437 79.51690674]
[338.38278198 87.80419159]
[350.94668579 95.99861908]
[363.51058960 104.19304657]
[378.92239380 100.69285583]
[392.25048828 109.18621826]
[395.58755493 124.63418579]
[386.95373535 137.87173462]
[371.47137451 141.04528809]
[358.32583618 132.27200317]
[355.31616211 116.75693512]
[342.75225830 108.56251526]
[330.18835449 100.36808777]
[322.86917114 99.34706116]
[317.50027466 91.95799255]
[305.05917358 83.57828522]
[292.61810303 75.19858551]
[280.17700195 66.81888580]
[267.73593140 58.43918228]
[246.64765930 65.50854492]
[226.62927246 54.95643234]
[212.81398010 60.79920959]
[198.99870300 66.64198303]
[185.18342590 72.48475647]
[171.36813354 78.32752991]
[157.59652710 84.27250671]
[143.86933899 90.31935883]
[130.14216614 96.36621094]
[116.41497803 102.41306305]
[100.44174957 137.82293701]
[90.81887054 149.32946777]
[81.19598389 160.83598328]
[71.57310486 172.34251404]
[61.95022583 183.84904480]
[52.32734299 195.35557556]
[42.70446014 206.86209106]
[33.08158112 218.36862183]
[32.48749542 222.66815186]
[30.73296928 226.20008850]
[28.20166588 228.69393921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[19 28]
[20 27]
[51 208]
[52 207]
[53 206]
[54 205]
[55 204]
[56 203]
[57 202]
[58 201]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 83]
[69 82]
[71 80]
[72 79]
[73 78]
[90 200]
[91 199]
[92 198]
[93 197]
[95 196]
[96 195]
[97 194]
[98 193]
[99 192]
[104 165]
[105 164]
[106 163]
[107 162]
[109 160]
[110 159]
[111 158]
[114 155]
[115 154]
[117 153]
[118 152]
[121 149]
[122 148]
[123 147]
[125 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
