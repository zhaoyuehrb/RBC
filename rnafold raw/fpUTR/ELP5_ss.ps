%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGUGACGUCACUUGGCCCGCGCUUAGGGCCCUCGCGGGGGGCUUGUGGGUCCUCCUCCCCCUCCCACUGACAACUGCCCCAACUGCUCUUCCCGCCCCGGUCACAGUGAAAAUGUAGACGGGGUCGUUGUCCACUAUGUUAGGUCUUAAUGGUGGGAGGACGCCCGAGUGCUCGGCCCGUUUCACCCCGAGGAGGAAGGACACUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[77.83283234 101.03215027]
[65.63349152 109.76003265]
[53.43414307 118.48791504]
[41.23479462 127.21579742]
[29.03544998 135.94367981]
[16.90019608 144.76046753]
[4.82967949 153.66566467]
[-0.21613435 161.27624512]
[-7.48289490 162.61126709]
[-19.68224144 171.33915710]
[-31.88158798 180.06704712]
[-37.03806305 187.60308838]
[-44.32355499 188.83178711]
[-56.64912796 197.38049316]
[-68.97470093 205.92918396]
[-81.30027008 214.47789001]
[-84.23946381 229.77491760]
[-96.86112213 238.26893616]
[-111.42638397 235.37258911]
[-118.35646057 249.59527588]
[-133.22410583 250.49093628]
[-145.54968262 259.03964233]
[-157.87525940 267.58834839]
[-164.80532837 281.81100464]
[-179.67298889 282.70669556]
[-191.99855042 291.25537109]
[-204.32412720 299.80407715]
[-207.38345337 312.33215332]
[-217.82290649 319.19894409]
[-229.74783325 317.17980957]
[-242.19700623 325.54751587]
[-248.91996765 340.50524902]
[-265.26034546 341.89242554]
[-274.40853882 328.28204346]
[-266.95367432 313.67529297]
[-250.56469727 313.09835815]
[-238.11552429 304.73065186]
[-231.25561523 288.57659912]
[-212.87283325 287.47851562]
[-200.54725647 278.92980957]
[-188.22167969 270.38110352]
[-182.17321777 256.76989746]
[-166.42395020 255.26277161]
[-154.09838867 246.71406555]
[-141.77281189 238.16535950]
[-135.72434998 224.55415344]
[-119.97508240 223.04701233]
[-117.58416748 208.39030457]
[-105.20606232 199.54513550]
[-89.84896851 202.15231323]
[-77.52339935 193.60362244]
[-65.19783020 185.05491638]
[-52.87225723 176.50621033]
[-40.60947037 167.86769104]
[-28.41012573 159.13981628]
[-16.21077919 150.41192627]
[-4.07552385 141.59515381]
[7.99499226 132.68994141]
[11.51022720 126.19139099]
[20.30756569 123.74433899]
[32.50691223 115.01644897]
[44.70625687 106.28856659]
[56.90560532 97.56068420]
[69.10494995 88.83280182]
[77.28984833 76.26270294]
[80.33702087 61.57546997]
[83.38420105 46.88824081]
[86.43137360 32.20101166]
[89.47854614 17.51378059]
[92.52572632 2.82654977]
[95.57289886 -11.86068058]
[98.62007141 -26.54791069]
[101.66725159 -41.23514175]
[80.70603943 -82.42832184]
[79.61110687 -97.38830566]
[78.51617432 -112.34828949]
[77.42124939 -127.30827332]
[76.32631683 -142.26824951]
[75.23139191 -157.22824097]
[66.50737762 -170.42681885]
[73.29500580 -183.68492126]
[72.20008087 -198.64489746]
[71.10514832 -213.60488892]
[70.01022339 -228.56486511]
[68.91529083 -243.52485657]
[57.23713303 -253.83302307]
[56.33983231 -269.02017212]
[66.23906708 -280.08999634]
[65.14413452 -295.04995728]
[64.04920959 -310.00994873]
[62.95427704 -324.96994019]
[49.50691986 -336.16094971]
[48.33834457 -353.27810669]
[59.68444824 -365.69384766]
[58.37104797 -380.63623047]
[57.05764389 -395.57861328]
[54.98210907 -410.43432617]
[52.14986038 -425.16452026]
[49.31761551 -439.89471436]
[40.38934708 -454.30728149]
[51.76708221 -466.87643433]
[66.99468994 -459.42282104]
[64.04779816 -442.72695923]
[66.88005066 -427.99676514]
[69.71229553 -413.26657104]
[78.03382111 -425.74664307]
[92.39540100 -430.07620239]
[106.22816467 -424.27496338]
[113.20513916 -410.99633789]
[110.13511658 -396.31387329]
[98.42229462 -386.94317627]
[83.42401123 -387.17034912]
[72.00003052 -396.89202881]
[73.31343842 -381.94964600]
[74.62683868 -367.00723267]
[85.56073761 -360.19299316]
[90.65031433 -348.14593506]
[87.83151245 -335.17605591]
[77.91426086 -326.06488037]
[79.00919342 -311.10488892]
[80.10411835 -296.14489746]
[81.19905090 -281.18490601]
[92.60457611 -271.67440796]
[93.92810059 -256.51846313]
[83.87527466 -244.61978149]
[84.97020721 -229.65980530]
[86.06513214 -214.69981384]
[87.16006470 -199.73983765]
[88.25498962 -184.77984619]
[96.90068054 -172.65132141]
[90.19137573 -158.32316589]
[91.28630066 -143.36318970]
[92.38123322 -128.40319824]
[93.47615814 -113.44321442]
[94.57109070 -98.48323059]
[95.66602325 -83.52324677]
[108.90510559 -76.47012329]
[122.14300537 -69.41760254]
[135.16976929 -76.85424042]
[148.19651794 -84.29088593]
[152.11897278 -99.60067749]
[165.76062012 -107.58074188]
[181.02809143 -103.49663544]
[188.86346436 -89.77139282]
[184.61817932 -74.54795837]
[170.81086731 -66.85811615]
[155.63316345 -71.26412964]
[142.60639954 -63.82748795]
[129.57965088 -56.39084625]
[144.57939148 -56.47864532]
[155.76580811 -46.48544312]
[157.36332703 -31.57075310]
[148.54713440 -19.43506432]
[133.86907959 -16.34406090]
[120.90744019 -23.89363098]
[116.35447693 -38.18796539]
[113.30730438 -23.50073624]
[110.26013184 -8.81350517]
[107.21295166 5.87372494]
[104.16577911 20.56095505]
[101.11860657 35.24818420]
[98.07142639 49.93541336]
[95.02425385 64.62264252]
[91.97708130 79.30987549]
[108.36489105 80.95781708]
[118.07087708 92.92705536]
[116.51473999 107.19254303]
[126.52452087 118.36412811]
[136.53430176 129.53570557]
[146.54408264 140.70729065]
[154.59889221 145.00860596]
[156.61705017 152.11601257]
[166.46252441 163.43266296]
[176.30801392 174.74931335]
[186.15348816 186.06594849]
[194.14459229 190.48451233]
[196.05867004 197.62063599]
[205.73774719 209.07994080]
[221.11044312 208.08660889]
[233.97004700 216.24037170]
[239.49723816 230.23730469]
[235.76727295 244.63262939]
[245.44633484 256.09191895]
[260.26214600 261.64193726]
[262.56375122 276.35766602]
[272.24282837 287.81695557]
[281.92190552 299.27624512]
[291.60098267 310.73553467]
[307.40243530 313.50927734]
[314.95910645 327.66116333]
[308.47415161 342.33511353]
[292.92227173 346.27453613]
[280.23355103 336.45739746]
[280.14166260 320.41461182]
[270.46258545 308.95532227]
[260.78353882 297.49603271]
[251.10444641 286.03671265]
[236.98097229 281.30633545]
[233.98704529 265.77099609]
[224.30796814 254.31170654]
[209.49157715 255.58152771]
[196.61621094 247.79122925]
[190.72805786 233.74903870]
[194.27845764 218.75900269]
[184.59938049 207.29971313]
[174.83683777 195.91143799]
[164.99136353 184.59478760]
[155.14587402 173.27813721]
[145.30039978 161.96148682]
[135.37249756 150.71707153]
[125.36272430 139.54548645]
[115.35294342 128.37390137]
[105.34315491 117.20232391]
[94.12972260 118.49656677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 64]
[2 63]
[3 62]
[4 61]
[5 60]
[6 58]
[7 57]
[9 56]
[10 55]
[11 54]
[13 53]
[14 52]
[15 51]
[16 50]
[19 47]
[21 45]
[22 44]
[23 43]
[25 41]
[26 40]
[27 39]
[30 37]
[31 36]
[65 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 156]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[88 122]
[89 121]
[90 120]
[91 119]
[94 115]
[95 114]
[96 113]
[97 105]
[98 104]
[99 103]
[138 149]
[139 148]
[140 147]
[167 213]
[168 212]
[169 211]
[170 210]
[172 209]
[173 208]
[174 207]
[175 206]
[177 205]
[178 204]
[182 200]
[183 199]
[185 197]
[186 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
