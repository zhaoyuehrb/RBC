%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAAUGAGGGUGUUGGCUAAAGACAACAGCGUCUUGAUGGGAAAGGAGGAGCAAUGGGAAAGACUGGAGUAUCUCAGUCCCUCUCAGUGGAUGGGGGUUGUGGGAGAGAGGCAGCUGGGAGACAGGCCUCCCUCUGGAGUUCAUAGCUGAGUUGCUGUCCAAAUCAGUGGUCCCUAGAAUCUAUAAAACAAAGCUGAGAACUUCAGAGGUGCAUCCAGAGAAGCCACACUCCAAAAGGACCACUUCCAGACGC\
C\
) } def
/len { sequence length } bind def

/coor [
[-38.29108047 610.44750977]
[-24.82989883 617.06542969]
[-14.87848949 628.28900146]
[-9.91987991 642.44573975]
[-10.69303894 657.42578125]
[-17.08274269 670.99676514]
[-28.13675499 681.13623047]
[-42.20772552 686.33312988]
[-57.19870377 685.81298828]
[-70.87562561 679.65332031]
[-81.20026398 668.77203369]
[-86.63397217 654.79077148]
[-86.36660004 639.79150391]
[-93.89305115 652.76654053]
[-101.41950226 665.74163818]
[-108.94595337 678.71667480]
[-116.47240448 691.69177246]
[-110.06703949 705.82507324]
[-113.22531891 721.01733398]
[-124.73281860 731.42681885]
[-140.16467285 733.05084229]
[-153.58702087 725.26495361]
[-159.83869934 711.06298828]
[-156.51579285 695.90588379]
[-144.89604187 685.62182617]
[-129.44747925 684.16534424]
[-121.92102814 671.19024658]
[-114.39457703 658.21514893]
[-106.86812592 645.24011230]
[-99.34167480 632.26501465]
[-92.95166779 618.69415283]
[-87.74486542 604.62689209]
[-82.53806305 590.55957031]
[-77.33125305 576.49224854]
[-72.12445068 562.42492676]
[-66.91764069 548.35766602]
[-69.75595093 533.73596191]
[-57.70942688 523.47967529]
[-52.50262070 509.41235352]
[-47.46816254 495.28244019]
[-42.60680008 481.09204102]
[-37.74543381 466.90167236]
[-49.41398239 457.56729126]
[-57.19948578 444.77999878]
[-60.14580154 430.07305908]
[-57.87840271 415.21777344]
[-50.65186691 402.00991821]
[-39.32146072 392.05288696]
[-25.24195290 386.56295776]
[-10.10563183 386.22067261]
[-5.24426889 372.03030396]
[-0.38290557 357.83990479]
[4.47845793 343.64950562]
[-2.74535012 333.00006104]
[-2.52217054 319.93923950]
[5.29029131 309.22860718]
[18.02688980 304.90148926]
[23.06135178 290.77157593]
[28.09581184 276.64166260]
[17.87780762 267.28002930]
[11.97617817 254.69352722]
[11.31004620 240.76475525]
[16.01270485 227.59097290]
[25.40658188 217.16836548]
[38.10065079 211.08949280]
[52.19635773 210.30006409]
[57.40316391 196.23275757]
[62.60997009 182.16545105]
[67.81677246 168.09814453]
[73.02358246 154.03082275]
[78.14431000 139.93196106]
[83.17877197 125.80205536]
[88.21322632 111.67214966]
[83.87541199 97.31306458]
[71.85980225 88.33390808]
[59.84420013 79.35475922]
[47.82859039 70.37560272]
[35.81298447 61.39645004]
[18.53345299 64.21121979]
[4.84294415 53.85034943]
[2.93452358 37.12799835]
[-9.18994427 28.29639435]
[-21.31441307 19.46478653]
[-33.43888092 10.63318062]
[-45.56335068 1.80157411]
[-57.74156952 -6.95576239]
[-69.97309113 -15.63850212]
[-86.34201813 -16.63360405]
[-93.42159271 -31.42588615]
[-83.92895508 -44.79831696]
[-67.62931824 -42.99448776]
[-61.29034805 -27.87001991]
[-49.05883026 -19.18728065]
[-41.80661011 -17.88201904]
[-36.73174286 -10.32289410]
[-24.60727501 -1.49128759]
[-12.48280621 7.34031868]
[-0.35833821 16.17192459]
[11.76612949 25.00353241]
[24.07279396 21.24321556]
[36.48641205 25.30984306]
[44.41534805 35.93454361]
[44.79214096 49.38084412]
[56.80774689 58.35999680]
[68.82334900 67.33914948]
[80.83895874 76.31830597]
[92.85456848 85.29745483]
[99.22408295 81.33776093]
[111.96312714 73.41836548]
[118.33264923 69.45866394]
[115.59761047 54.71012115]
[112.86257935 39.96157837]
[110.12754059 25.21303177]
[107.39250946 10.46448708]
[103.42411041 5.23519325]
[102.76851654 -0.37313259]
[104.77550507 -4.67774582]
[102.40182495 -19.48874283]
[100.02815247 -34.29973984]
[87.92710876 -44.83275223]
[88.76119232 -60.85410690]
[101.89057159 -70.07359314]
[117.24350739 -65.41881561]
[123.04254150 -50.46051407]
[114.83914948 -36.67341995]
[117.21282196 -21.86242104]
[119.58650208 -7.05142450]
[122.14105225 7.72945118]
[124.87608337 22.47799683]
[127.61112213 37.22653961]
[130.34616089 51.97508621]
[133.08119202 66.72363281]
[146.65203857 73.11363983]
[159.76292419 65.82635498]
[172.87382507 58.53906631]
[185.98471069 51.25178146]
[199.09559631 43.96449661]
[212.20649719 36.67721176]
[225.31738281 29.38992500]
[238.42826843 22.10264015]
[251.53916931 14.81535339]
[264.65005493 7.52806807]
[277.76095581 0.24078253]
[290.87182617 -7.04650307]
[299.17507935 -20.51375008]
[314.05841064 -19.93404007]
[327.16928101 -27.22132683]
[340.28018188 -34.50861359]
[353.39108276 -41.79589844]
[366.50195312 -49.08318329]
[370.94018555 -64.01435089]
[384.34030151 -71.21792603]
[398.54754639 -66.89473724]
[411.65844727 -74.18202209]
[424.76934814 -81.46930695]
[437.00085449 -90.15204620]
[448.20510864 -100.12525177]
[459.40936279 -110.09845734]
[470.61358643 -120.07167053]
[469.97619629 -135.69625854]
[479.57208252 -148.04344177]
[494.87036133 -151.28327942]
[508.64767456 -143.88598633]
[514.39874268 -129.34437561]
[509.40817261 -114.52451324]
[496.03228760 -106.42391205]
[480.58679199 -108.86741638]
[469.38256836 -98.89421082]
[458.17831421 -88.92100525]
[446.97406006 -78.94779968]
[461.42211914 -82.97937775]
[476.41094971 -82.40068054]
[490.50515747 -77.26711273]
[502.35498047 -68.07029724]
[510.82565308 -55.69096756]
[515.10595703 -41.31463623]
[514.78601074 -26.31804848]
[509.89642334 -12.13735771]
[500.90548706 -0.13057618]
[488.67419434 8.55246353]
[474.37384033 13.08022976]
[459.37399292 13.01912022]
[445.11102295 8.37498665]
[432.95086670 -0.40742379]
[424.05804443 -12.48706341]
[419.28417969 -26.70712471]
[419.08642578 -41.70582199]
[423.48373413 -56.04680252]
[432.05661011 -68.35842133]
[418.94573975 -61.07113266]
[405.83483887 -53.78384781]
[402.00555420 -39.43560410]
[388.81304932 -31.85848999]
[373.78924561 -35.97229385]
[360.67837524 -28.68500710]
[347.56747437 -21.39772034]
[334.45657349 -14.11043549]
[321.34570312 -6.82314968]
[313.98022461 6.12286186]
[298.15911865 6.06438828]
[285.04824829 13.35167408]
[271.93734741 20.63895988]
[258.82644653 27.92624474]
[245.71556091 35.21353149]
[232.60467529 42.50081635]
[219.49377441 49.78810120]
[206.38288879 57.07538605]
[193.27200317 64.36267090]
[180.16110229 71.64995575]
[167.05021667 78.93724823]
[153.93931580 86.22453308]
[102.34313202 116.70661163]
[97.30867004 130.83651733]
[92.27421570 144.96641541]
[92.34466553 154.07080078]
[87.09088898 159.23764038]
[81.88408661 173.30494690]
[76.67727661 187.37225342]
[71.47047424 201.43955994]
[66.26366425 215.50686646]
[77.66154480 227.13731384]
[82.82120514 242.52116394]
[80.75592804 258.55651855]
[71.93039703 272.03347778]
[58.15741348 280.27661133]
[42.22571564 281.67611694]
[37.19125748 295.80603027]
[32.15679550 309.93594360]
[39.94430923 325.61584473]
[34.08378601 341.75375366]
[18.66884613 348.51086426]
[13.80748367 362.70126343]
[8.94612026 376.89166260]
[4.08475685 391.08203125]
[15.83151150 400.63397217]
[23.58692932 413.60412598]
[26.43154907 428.41726685]
[24.04099655 443.28182983]
[16.72285271 456.40682983]
[5.37722826 466.21762085]
[-8.61390781 471.54464722]
[-23.55504608 471.76303101]
[-28.41640854 485.95343018]
[-33.27777100 500.14379883]
[-32.38938522 506.64797974]
[-34.57285690 511.85525513]
[-38.43531418 514.61914062]
[-43.64212036 528.68646240]
[-41.17623901 544.31433105]
[-52.85033417 553.56445312]
[-58.05714035 567.63177490]
[-63.26394653 581.69903564]
[-68.47074890 595.76635742]
[-73.67755890 609.83367920]
[-78.88436127 623.90100098]
[-67.49434662 614.14050293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[31 255]
[32 254]
[33 253]
[34 252]
[35 251]
[36 250]
[38 248]
[39 247]
[40 244]
[41 243]
[42 242]
[50 234]
[51 233]
[52 232]
[53 231]
[57 228]
[58 227]
[59 226]
[66 220]
[67 219]
[68 218]
[69 217]
[70 216]
[71 214]
[72 213]
[73 212]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 93]
[87 92]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[117 127]
[118 126]
[119 125]
[133 211]
[134 210]
[135 209]
[136 208]
[137 207]
[138 206]
[139 205]
[140 204]
[141 203]
[142 202]
[143 201]
[144 200]
[146 198]
[147 197]
[148 196]
[149 195]
[150 194]
[153 191]
[154 190]
[155 189]
[156 170]
[157 169]
[158 168]
[159 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
