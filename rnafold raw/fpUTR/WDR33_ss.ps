%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGUGAUGACCCCAGAGCGUGCGUUCGGUGGCCCAUAGGGGAAGAUGGCGGCUGCUCCUUUGGAGGAGCGGGAUUGAGAGGAUCGGGGUGGGGAGACCAAACAAGAGAGACAUUUCUGGCUCUGAAGGCGAACGCUUCGCUGGCCAUUUAGGAGCUCUGCUCAAAGCCAGACGUAUCCUAGAAGGAAAACAUCACC\
) } def
/len { sequence length } bind def

/coor [
[266.25009155 523.93743896]
[251.25604248 528.37738037]
[236.93672180 522.09320068]
[230.05323792 508.05215454]
[233.85578918 492.88394165]
[246.54890442 483.75054932]
[247.49076843 468.78015137]
[248.43261719 453.80975342]
[249.37448120 438.83935547]
[250.31632996 423.86895752]
[251.25819397 408.89852905]
[254.92156982 397.43591309]
[261.26385498 388.76977539]
[269.17858887 383.42807007]
[277.48168945 381.57843018]
[268.85662842 369.30618286]
[260.23153687 357.03393555]
[251.60646057 344.76168823]
[242.69464111 332.69607544]
[233.50103760 320.84375000]
[224.30743408 308.99142456]
[215.11383057 297.13909912]
[205.92022705 285.28677368]
[196.54158020 273.58032227]
[186.98022461 262.02261353]
[172.90586853 257.14801025]
[170.07099915 241.58287048]
[160.50962830 230.02516174]
[150.94827271 218.46746826]
[141.38691711 206.90977478]
[131.82556152 195.35206604]
[125.13365173 192.19929504]
[122.20650482 183.53691101]
[112.82786560 171.83045959]
[103.44922638 160.12400818]
[94.07058716 148.41754150]
[79.95737457 143.33647156]
[65.26903534 146.37828064]
[50.58069229 149.42008972]
[44.31816864 163.61729431]
[30.88987350 171.39292908]
[15.45926285 169.75711060]
[3.95972037 159.33885193]
[0.81305456 144.14418030]
[7.22922277 130.01576233]
[20.74107742 122.38624573]
[36.15303421 124.18935394]
[47.53888321 134.73175049]
[62.22722244 131.68994141]
[76.91556549 128.64813232]
[77.85556793 121.20727539]
[62.97387695 119.32702637]
[64.85437012 104.44537354]
[79.73556519 106.32555389]
[80.67556000 98.88468933]
[67.20514679 92.28560638]
[53.73473740 85.68651581]
[40.26432419 79.08743286]
[26.79390907 72.48834229]
[13.32349491 65.88925171]
[-0.14691834 59.29016876]
[-13.61733246 52.69107819]
[-29.93279266 54.34569931]
[-39.30267715 40.88697052]
[-32.08805084 26.16008377]
[-15.71070099 25.31479645]
[-7.01824427 39.22066498]
[6.45216942 45.81975555]
[19.92258263 52.41884232]
[33.39299774 59.01792908]
[46.86341095 65.61701965]
[60.33382416 72.21610260]
[73.80423737 78.81519318]
[87.27465057 85.41427612]
[97.10565186 74.08505249]
[88.67440033 61.67884445]
[80.24314880 49.27263641]
[71.81190491 36.86642456]
[56.38586807 32.45995331]
[50.34625244 17.59716034]
[58.32613754 3.67950916]
[74.20403290 1.38343072]
[85.79978180 12.47028065]
[84.21810913 28.43517494]
[92.64936066 40.84138489]
[101.08061218 53.24759293]
[109.51186371 65.65380096]
[116.56846619 63.11326599]
[137.73828125 55.49166489]
[125.84436035 45.43321609]
[124.62550354 30.26848602]
[134.28799438 18.99143600]
[132.87637329 4.05800629]
[131.46475220 -10.87542343]
[120.06964874 -22.16839409]
[121.93729401 -38.10236359]
[135.63499451 -46.45415878]
[150.65504456 -40.81698990]
[155.47535706 -25.51521873]
[146.39817810 -12.28704834]
[147.80979919 2.64638162]
[149.22142029 17.57981110]
[160.82588196 26.84654427]
[162.47019958 41.97105408]
[152.67170715 54.08003998]
[160.06993103 55.31143951]
[182.26458740 59.00564575]
[188.43730164 45.33459473]
[194.61001587 31.66354561]
[200.78274536 17.99249649]
[206.95545959 4.32144785]
[204.78916931 -11.93398952]
[217.94694519 -21.72199821]
[232.89317322 -14.97351360]
[234.25247192 1.36920154]
[220.62651062 10.49416351]
[214.45378113 24.16521263]
[208.28106689 37.83626175]
[202.10835266 51.50730896]
[195.93563843 65.17835999]
[105.77704620 139.03890991]
[115.15568542 150.74536133]
[124.53432465 162.45181274]
[133.91296387 174.15827942]
[143.38325500 185.79071045]
[152.94461060 197.34840393]
[162.50598145 208.90611267]
[172.06733704 220.46380615]
[181.62869263 232.02149963]
[196.38694763 237.72277832]
[198.53791809 252.46125793]
[208.09928894 264.01895142]
[214.16590881 266.68331909]
[217.47348022 271.31851196]
[217.77255249 276.09317017]
[226.96615601 287.94549561]
[236.15975952 299.79782104]
[245.35336304 311.65014648]
[254.54696655 323.50247192]
[259.39743042 325.47900391]
[262.67202759 328.79055786]
[264.12588501 332.61090088]
[263.87872314 336.13662720]
[272.50378418 348.40887451]
[281.12887573 360.68112183]
[289.75393677 372.95336914]
[300.68847656 383.22155762]
[313.47808838 391.05905151]
[329.28738403 391.67248535]
[336.09643555 404.91958618]
[348.88604736 412.75708008]
[361.67565918 420.59454346]
[374.46524048 428.43203735]
[387.25485229 436.26950073]
[400.04446411 444.10699463]
[412.83404541 451.94445801]
[425.68481445 459.68124390]
[438.59594727 467.31686401]
[451.56665039 474.85086060]
[464.59613037 482.28274536]
[477.62561035 489.71463013]
[490.65505981 497.14651489]
[503.74252319 504.47583008]
[516.88708496 511.70211792]
[533.67987061 514.03424072]
[536.08764648 530.81634521]
[520.62786865 537.77575684]
[509.66079712 524.84674072]
[496.51620483 517.62042236]
[489.13360596 517.15252686]
[483.22317505 510.17596436]
[470.19372559 502.74407959]
[457.16424561 495.31222534]
[444.13476562 487.88034058]
[436.76043701 487.29650879]
[430.96032715 480.22799683]
[418.04919434 472.59237671]
[410.68496704 471.89282227]
[404.99658203 464.73406982]
[392.20697021 456.89657593]
[379.41738892 449.05911255]
[366.62777710 441.22164917]
[353.83816528 433.38415527]
[341.04855347 425.54669189]
[328.25897217 417.70919800]
[313.36444092 417.65634155]
[305.64059448 403.84863281]
[292.85098267 396.01116943]
[286.19540405 399.46847534]
[293.10980225 412.77978516]
[279.79840088 419.69400024]
[272.88418579 406.38308716]
[266.22860718 409.84039307]
[265.28674316 424.81079102]
[264.34487915 439.78118896]
[263.40301514 454.75161743]
[262.46115112 469.72201538]
[261.51931763 484.69241333]
[272.96762085 495.34463501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[15 146]
[16 145]
[17 144]
[18 143]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 132]
[25 131]
[27 129]
[28 128]
[29 127]
[30 126]
[31 125]
[33 124]
[34 123]
[35 122]
[36 121]
[37 50]
[38 49]
[39 48]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[75 87]
[76 86]
[77 85]
[78 84]
[89 105]
[92 102]
[93 101]
[94 100]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[147 188]
[148 187]
[150 185]
[151 184]
[152 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 177]
[158 176]
[159 174]
[160 173]
[161 172]
[162 171]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
