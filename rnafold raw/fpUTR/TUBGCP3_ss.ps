%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAAGAAGCGGGGCAUUGUGGGAAGCGCCCGCGCUUUCGGCGGGUUCCGUUAAAAUGGCGCCCUGGUGGCCGGCGGCGCCCGCGCCUUAGCCUGUCAGGAGCAGGGAGCUUGCGGGGCGCAGGAAGGGCGCGGGCCGCGGUCCCUGCGCGUGCGGCGGCAGUGGCGGCUCUGCCCGGACCACCGUGCACGGCUCCGGGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[111.33446503 165.43360901]
[107.07962036 179.81748962]
[94.29229736 187.65869141]
[79.54290771 184.92822266]
[70.41001892 173.02905273]
[71.58630371 158.07524109]
[82.46556091 147.75114441]
[88.92957306 134.21540833]
[81.55481720 132.85050964]
[69.39272308 141.63023376]
[57.23063278 150.40995789]
[45.06854248 159.18968201]
[32.90645218 167.96940613]
[20.74436188 176.74913025]
[8.58227253 185.52885437]
[-3.57981825 194.30857849]
[-8.70878887 201.87199402]
[-15.99499321 203.12779236]
[-28.28955841 211.72102356]
[-40.58412552 220.31425476]
[-52.87868881 228.90748596]
[-59.75727081 243.15513611]
[-74.62158203 244.10458374]
[-86.91615295 252.69781494]
[-99.21071625 261.29104614]
[-111.50527954 269.88427734]
[-123.79984283 278.47750854]
[-136.09440613 287.07073975]
[-148.38897705 295.66397095]
[-154.83816528 310.74179077]
[-171.15054321 312.42660522]
[-180.54531860 298.98522949]
[-173.35797119 284.24502563]
[-156.98220825 283.36941528]
[-144.68765259 274.77618408]
[-132.39308167 266.18295288]
[-120.09851074 257.58972168]
[-107.80394745 248.99649048]
[-95.50938416 240.40325928]
[-83.21481323 231.81001282]
[-77.21562958 218.17700195]
[-61.47192383 216.61291504]
[-49.17735672 208.01968384]
[-36.88279343 199.42645264]
[-24.58822632 190.83322144]
[-12.35954285 182.14648438]
[-0.19745202 173.36676025]
[11.96463871 164.58703613]
[24.12672806 155.80731201]
[36.28881836 147.02758789]
[48.45090866 138.24786377]
[60.61299896 129.46813965]
[72.77509308 120.68841553]
[72.60353851 113.19038391]
[59.78815460 120.98563385]
[46.62953186 113.78489685]
[46.28615189 98.78882599]
[59.10138702 90.99333954]
[72.26042938 98.19430542]
[72.08888245 90.69626617]
[59.53797150 82.48197174]
[46.98706436 74.26766968]
[34.43615723 66.05336761]
[21.88524818 57.83907318]
[9.27206993 49.72071457]
[-3.40264559 41.69876862]
[-16.07736015 33.67682648]
[-28.75207710 25.65488052]
[-45.36940384 22.29321480]
[-46.73924637 5.39469719]
[-30.88033867 -0.59958589]
[-20.73013306 12.98016548]
[-8.05541706 21.00210953]
[4.61929846 29.02405357]
[17.29401398 37.04599762]
[24.63002777 37.96723557]
[30.09954643 45.28816223]
[42.65045547 53.50246429]
[55.20136261 61.71676254]
[67.75227356 69.93106079]
[80.30317688 78.14536285]
[94.04943085 72.14199066]
[96.55397034 57.35255432]
[99.05850983 42.56312561]
[101.56304932 27.77369308]
[104.06758881 12.98426151]
[106.57212830 -1.80517030]
[109.07666779 -16.59460258]
[111.58120728 -31.38403320]
[114.08573914 -46.17346573]
[107.26522827 -57.12380600]
[109.65833282 -69.39246368]
[119.44625092 -76.50464630]
[122.17604065 -91.25416565]
[124.90582275 -106.00367737]
[127.63560486 -120.75319672]
[130.36538696 -135.50271606]
[118.12876892 -144.55957031]
[111.06668091 -157.97648621]
[110.53244019 -173.06736755]
[116.57849121 -186.83712769]
[127.95658875 -196.57614136]
[142.37510681 -200.39343262]
[145.10490417 -215.14294434]
[147.83468628 -229.89245605]
[150.56446838 -244.64198303]
[153.29425049 -259.39151001]
[150.23136902 -276.06649780]
[165.40679932 -283.62576294]
[176.87162781 -271.13601685]
[168.04376221 -256.66171265]
[165.31398010 -241.91220093]
[162.58419800 -227.16267395]
[159.85441589 -212.41316223]
[157.12463379 -197.66363525]
[169.22192383 -188.93891907]
[176.36083984 -175.77284241]
[177.07830811 -160.75132751]
[171.17852783 -146.85122681]
[159.78239441 -136.85047913]
[145.11491394 -132.77293396]
[142.38511658 -118.02341461]
[139.65533447 -103.27389526]
[136.92555237 -88.52437592]
[134.19577026 -73.77486420]
[140.94181824 -57.57612991]
[128.87516785 -43.66892624]
[126.37063599 -28.87949562]
[123.86609650 -14.09006310]
[121.36155701 0.69936824]
[118.85701752 15.48880005]
[116.35247803 30.27823067]
[113.84794617 45.06766129]
[111.34340668 59.85709381]
[108.83886719 74.64652252]
[119.03347015 85.64971161]
[133.97071838 84.27908325]
[148.90795898 82.90845490]
[163.84521484 81.53783417]
[178.78245544 80.16720581]
[191.81790161 71.20128632]
[205.19892883 77.74326324]
[220.13618469 76.37263489]
[235.07342529 75.00200653]
[248.10887146 66.03608704]
[261.48989868 72.57806396]
[276.42715454 71.20743561]
[291.36437988 69.83680725]
[306.30163574 68.46618652]
[319.37554932 58.56643677]
[334.37872314 65.18734741]
[335.87719727 81.51789093]
[322.32946777 90.75859833]
[307.67227173 83.40343475]
[292.73501587 84.77405548]
[277.79776001 86.14468384]
[262.86053467 87.51531219]
[250.89349365 96.38319397]
[236.44404602 89.93925476]
[221.50680542 91.30988312]
[206.56954956 92.68051147]
[194.60252380 101.54839325]
[180.15309143 95.10445404]
[165.21583557 96.47508240]
[150.27859497 97.84570312]
[135.34133911 99.21633148]
[120.40409088 100.58695984]
[125.01090240 108.31803131]
[126.41450500 118.59476471]
[123.60475922 130.09577942]
[131.81906128 142.64668274]
[140.03335571 155.19760132]
[147.35427856 160.66711426]
[148.27552795 168.00312805]
[156.29747009 180.67784119]
[164.31941223 193.35255432]
[172.34135437 206.02726746]
[180.36329651 218.70199585]
[188.38523865 231.37670898]
[196.40718079 244.05142212]
[207.14430237 245.82099915]
[214.97233582 253.06025696]
[217.46903992 263.20010376]
[214.04400635 272.83236694]
[221.67567444 285.74584961]
[229.30735779 298.65930176]
[243.85005188 306.23834229]
[244.28732300 322.63165283]
[230.16934204 330.97521973]
[216.01948547 322.68585205]
[216.39390564 306.29098511]
[208.76222229 293.37753296]
[201.13053894 280.46405029]
[183.63818359 272.22900391]
[183.73246765 252.07336426]
[175.71052551 239.39865112]
[167.68858337 226.72393799]
[159.66664124 214.04922485]
[151.64469910 201.37449646]
[143.62275696 188.69978333]
[135.60079956 176.02507019]
[127.48244476 163.41189575]
[119.26815033 150.86099243]
[111.05384827 138.31007385]
[103.67909241 136.94519043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 45]
[19 44]
[20 43]
[21 42]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 75]
[66 74]
[67 73]
[68 72]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[142 161]
[143 160]
[144 159]
[146 157]
[147 156]
[148 155]
[149 154]
[170 204]
[171 203]
[172 202]
[174 201]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
[180 195]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
