%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCCUCCCCCUGCCUCUUUCCCGGCCAGAGUCCAGCCUUAACCCGGGCAGAGGGCGGAGUCCCGUUAAGGGGGUGUGGGGAGGAGGCGGGGCCAGGGCAGGGGCGGGGCAGAGCCGGGCCAAGCUGGGCGGGUCAUGCGCCCUGGCCUUCGCGCAUCUCCCAGGUUAGCUGCGUGUCCGGGUGCUAGGCUGCAGACCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[27.51446724 109.49224091]
[24.68368530 108.05278778]
[22.78695869 105.98565674]
[7.84851027 104.62817383]
[-7.08993816 103.27069092]
[-22.02838707 101.91320801]
[-36.96683502 100.55572510]
[-51.90528488 99.19823456]
[-66.85355377 97.95360565]
[-81.81080627 96.82189941]
[-96.76805115 95.69018555]
[-111.75265503 95.01074982]
[-126.75094604 94.78420258]
[-141.74923706 94.55765533]
[-156.74752808 94.33110046]
[-171.74581909 94.10455322]
[-186.74409485 93.87800598]
[-201.74238586 93.65145874]
[-216.74067688 93.42491150]
[-231.73896790 93.19835663]
[-246.73725891 92.97180939]
[-261.73553467 92.74526215]
[-276.73382568 92.51871490]
[-291.73211670 92.29216766]
[-306.73040771 92.06562042]
[-321.72869873 91.83906555]
[-336.72827148 91.72579193]
[-351.72827148 91.72579193]
[-366.72827148 91.72579193]
[-364.71408081 101.45593262]
[-367.77288818 112.73214722]
[-376.48562622 123.18782043]
[-390.41677856 130.31704712]
[-405.12854004 133.24340820]
[-419.84033203 136.16975403]
[-434.55209351 139.09611511]
[-449.08993530 153.05863953]
[-467.11361694 146.05992126]
[-481.73031616 149.42929077]
[-496.34698486 152.79864502]
[-510.96368408 156.16799927]
[-519.12957764 169.69918823]
[-534.49163818 173.41183472]
[-547.93572998 165.10330200]
[-551.48577881 149.70288086]
[-543.03552246 136.34738159]
[-527.59844971 132.96037292]
[-514.33300781 141.55133057]
[-499.71633911 138.18196106]
[-485.09967041 134.81260681]
[-470.48297119 131.44323730]
[-465.86480713 122.32490540]
[-456.79901123 117.14609528]
[-446.16046143 117.82722473]
[-437.47845459 124.38433075]
[-422.76669312 121.45797729]
[-408.05490112 118.53162384]
[-393.34313965 115.60527039]
[-392.15869141 108.19938660]
[-406.97753906 110.52349854]
[-413.76715088 97.14810944]
[-403.14450073 86.55759430]
[-389.78979492 93.38762665]
[-388.60534668 85.98174286]
[-401.67059326 78.61292267]
[-414.73580933 71.24410248]
[-430.51354980 74.14978027]
[-442.52752686 63.51758194]
[-441.56170654 47.50363159]
[-428.35693359 38.39245224]
[-413.04278564 43.17336655]
[-407.36700439 58.17886353]
[-394.30175781 65.54768372]
[-381.23651123 72.91650391]
[-366.72827148 76.72579193]
[-351.72827148 76.72579193]
[-336.72827148 76.72579193]
[-330.03787231 73.58148956]
[-321.50216675 76.84078217]
[-306.50387573 77.06732941]
[-291.50558472 77.29387665]
[-276.50729370 77.52042389]
[-261.50900269 77.74697113]
[-246.51071167 77.97352600]
[-231.51242065 78.20007324]
[-216.51412964 78.42662048]
[-201.51583862 78.65316772]
[-186.51754761 78.87971497]
[-171.51925659 79.10626221]
[-156.52098083 79.33281708]
[-141.52268982 79.55936432]
[-126.52439880 79.78591156]
[-111.52610779 80.01245880]
[-109.42182922 78.15702820]
[-106.45494843 77.02434540]
[-102.89742279 76.94744873]
[-99.13677216 78.15474701]
[-95.63634491 80.73294067]
[-80.67909241 81.86464691]
[-65.72184753 82.99636078]
[-58.81330109 80.36579132]
[-50.54780197 84.25978851]
[-35.60935211 85.61727142]
[-20.67090416 86.97475433]
[-5.73245525 88.33223724]
[9.20599365 89.68972015]
[24.14444160 91.04720306]
[39.11707306 91.95288086]
[52.07223129 84.60351562]
[65.63241577 92.75408936]
[80.62557220 93.20713806]
[95.61872864 93.66018677]
[94.41867065 89.14886475]
[94.34605408 84.28795624]
[95.46215057 79.29714966]
[97.78993988 74.40491486]
[106.31091309 62.06015778]
[114.83187866 49.71540070]
[116.30360413 33.96279526]
[129.90118408 27.88374138]
[138.42216492 15.53898335]
[146.94313049 3.19422579]
[150.96473694 -13.27583694]
[167.90444946 -13.97075748]
[173.26158142 2.11455894]
[159.28788757 11.71519661]
[150.76692200 24.05995560]
[142.24594116 36.40471268]
[141.38369751 51.27434158]
[127.17664337 58.23637009]
[118.65567017 70.58113098]
[110.13469696 82.92588806]
[114.81302643 97.17766571]
[128.99252319 102.07070923]
[143.17201233 106.96375275]
[157.35151672 111.85679626]
[171.53102112 116.74983215]
[180.66647339 116.59116364]
[185.88674927 121.82534027]
[199.99073792 126.93197632]
[214.09471130 132.03862000]
[228.19868469 137.14526367]
[243.80862427 134.56831360]
[253.14152527 146.17633057]
[267.24551392 151.28297424]
[281.34948730 156.38961792]
[295.45346069 161.49624634]
[309.55743408 166.60289001]
[323.66140747 171.70953369]
[337.80355835 176.70951843]
[351.98306274 181.60255432]
[366.16256714 186.49560547]
[380.44924927 191.06616211]
[394.83584595 195.31190491]
[409.22241211 199.55766296]
[423.60900879 203.80340576]
[437.99557495 208.04914856]
[452.38214111 212.29489136]
[467.80801392 208.78015137]
[477.82476807 219.80348206]
[492.21133423 224.04922485]
[504.42980957 214.48423767]
[519.93804932 213.96148682]
[532.77288818 222.68196106]
[537.99902344 237.29246521]
[533.60693359 252.17497253]
[521.28546143 261.60684204]
[505.77239990 261.96133423]
[493.03292847 253.10215759]
[487.96560669 238.43580627]
[473.57901001 234.19006348]
[459.18218994 238.00849915]
[448.13641357 226.68147278]
[433.74981689 222.43572998]
[419.36325073 218.18998718]
[404.97668457 213.94422913]
[390.59008789 209.69848633]
[376.20352173 205.45274353]
[372.94680786 206.80986023]
[368.87057495 206.65557861]
[364.69296265 204.62173462]
[361.26950073 200.67509460]
[347.09002686 195.78205872]
[332.91052246 190.88900757]
[325.56042480 191.67889404]
[318.55477905 185.81350708]
[304.45080566 180.70686340]
[290.34683228 175.60023499]
[276.24285889 170.49359131]
[262.13885498 165.38694763]
[248.03488159 160.28030396]
[233.43376160 163.22251892]
[223.09205627 151.24923706]
[208.98806763 146.14259338]
[194.88409424 141.03594971]
[180.78012085 135.92932129]
[166.63796997 130.92933655]
[152.45848083 126.03629303]
[138.27897644 121.14324951]
[124.09947968 116.25020599]
[109.91998291 111.35716248]
[95.16568756 108.65334320]
[80.17253113 108.20029449]
[65.17937469 107.74724579]
[51.15180588 115.06420898]
[38.66402817 106.94603729]
[34.91106796 109.14043427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 100]
[10 99]
[11 98]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[21 84]
[22 83]
[23 82]
[24 81]
[25 80]
[26 79]
[27 77]
[28 76]
[29 75]
[33 58]
[34 57]
[35 56]
[36 55]
[38 51]
[39 50]
[40 49]
[41 48]
[64 74]
[65 73]
[66 72]
[108 206]
[110 204]
[111 203]
[112 202]
[116 132]
[117 131]
[118 130]
[120 128]
[121 127]
[122 126]
[133 201]
[134 200]
[135 199]
[136 198]
[137 197]
[139 196]
[140 195]
[141 194]
[142 193]
[144 191]
[145 190]
[146 189]
[147 188]
[148 187]
[149 186]
[150 184]
[151 183]
[152 182]
[153 178]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
[160 171]
[161 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
