%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGGCCUCCGCGCCCCGCCCUGCGCGCUCGGGCUGGCUCGGCGGCUGCGGCGGGCGGGCAGGCGGGCAGGCCGGCAGGCGGGUGCGCGGAGGGCUGGUGCCCCGCAGCAGGUGGGCGGGGUGCGGUUGGCGGCGGCGGCUGGGCCGGGGGCUGCCGGCUGCGCUCGGGCCGUGCGCGGCGGCCGUGCGGGCACGCC\
) } def
/len { sequence length } bind def

/coor [
[88.42184448 188.65542603]
[87.01021576 173.72198486]
[85.59859467 158.78855896]
[84.18696594 143.85513306]
[82.77534485 128.92170715]
[71.92179871 118.56793213]
[57.77246857 125.64656830]
[45.42380142 117.31832123]
[30.44045448 116.61172485]
[15.45710659 115.90512848]
[0.47375840 115.19852448]
[-14.50959015 114.49192810]
[-29.49293709 113.78533173]
[-44.47628784 113.07873535]
[-59.45963287 112.37213898]
[-74.44298553 111.66554260]
[-89.43141937 111.07664490]
[-104.42401886 110.60548401]
[-119.41661835 110.13432312]
[-134.40921021 109.66316223]
[-149.40180969 109.19200134]
[-164.39440918 108.72084045]
[-179.39024353 109.07423401]
[-194.34400940 110.25112152]
[-209.29776001 111.42800903]
[-224.25152588 112.60489655]
[-237.40209961 121.40109253]
[-250.69718933 114.68621826]
[-265.65097046 115.86309814]
[-280.60470581 117.03998566]
[-295.55847168 118.21687317]
[-302.14022827 126.89066315]
[-312.20364380 130.43258667]
[-322.34082031 127.89943695]
[-329.25787354 120.36345673]
[-344.24121094 121.07005310]
[-359.22454834 121.77664948]
[-372.64492798 130.15544128]
[-385.72256470 123.02626801]
[-400.70590210 123.73286438]
[-415.68923950 124.43946075]
[-430.67260742 125.14605713]
[-445.65594482 125.85265350]
[-459.07632446 134.23144531]
[-472.15393066 127.10226440]
[-487.13729858 127.80886078]
[-500.63751221 137.11885071]
[-515.33221436 129.83885193]
[-516.10473633 113.45790863]
[-502.16033936 104.82733154]
[-487.84387207 112.82551575]
[-472.86053467 112.11891937]
[-460.51187134 103.79067230]
[-446.36254883 110.86930084]
[-431.37918091 110.16270447]
[-416.39584351 109.45610809]
[-401.41250610 108.74951172]
[-386.42913818 108.04291534]
[-374.08047485 99.71466827]
[-359.93115234 106.79330444]
[-344.94781494 106.08670807]
[-329.96444702 105.38011169]
[-314.51043701 93.76714325]
[-296.73535156 103.26311493]
[-281.78161621 102.08622742]
[-266.82785034 100.90933990]
[-251.87408447 99.73245239]
[-239.79310608 91.02043915]
[-225.42840576 97.65113831]
[-210.47465515 96.47425079]
[-195.52088928 95.29736328]
[-180.56713867 94.12047577]
[-191.98672485 84.39458466]
[-194.61364746 69.62639618]
[-187.24844360 56.55911636]
[-173.25410461 51.15929031]
[-159.02044678 55.89249802]
[-151.04663086 68.59754181]
[-152.97349548 83.47326660]
[-163.92324829 93.72824097]
[-148.93064880 94.19940186]
[-133.93804932 94.67056274]
[-118.94544983 95.14172363]
[-103.95285797 95.61288452]
[-88.96025848 96.08404541]
[-82.16989899 93.14933777]
[-73.73638916 96.68219757]
[-58.75303650 97.38879395]
[-43.76968765 98.09539032]
[-28.78634071 98.80198669]
[-13.80299282 99.50858307]
[1.18035519 100.21517944]
[16.16370392 100.92177582]
[31.14705086 101.62837219]
[46.13039780 102.33496857]
[59.20801926 95.20579529]
[72.62839508 103.58458710]
[81.61449432 82.23522186]
[102.25228119 76.58162689]
[118.01454926 88.28819275]
[125.71507263 83.35797882]
[132.90888977 85.08152008]
[147.59722900 82.03971100]
[162.28556824 78.99790192]
[176.94956970 75.84082794]
[191.58831787 72.56867981]
[206.22706604 69.29653168]
[220.86582947 66.02438354]
[228.56634521 61.09416580]
[235.76016235 62.81771469]
[250.44850159 59.77590561]
[265.13684082 56.73409653]
[270.33026123 52.61935425]
[275.97439575 51.86518860]
[280.33401489 53.83507919]
[295.11065674 51.25614166]
[309.88729858 48.67720413]
[322.15170288 38.68246841]
[336.01974487 44.11636734]
[348.28414917 34.12162781]
[362.15216064 39.55552673]
[376.92880249 36.97658920]
[391.70544434 34.39765167]
[406.48208618 31.81871605]
[421.25872803 29.23978043]
[436.03536987 26.66084290]
[450.81201172 24.08190727]
[465.58865356 21.50297165]
[480.36529541 18.92403412]
[495.14193726 16.34509850]
[509.91857910 13.76616096]
[524.69519043 11.18722439]
[539.47186279 8.60828781]
[554.24847412 6.02935171]
[569.02514648 3.45041513]
[583.80175781 0.87147874]
[593.59234619 -13.62041092]
[610.50109863 -16.49556732]
[623.98931885 -6.45710945]
[638.72363281 -9.26782894]
[653.45794678 -12.07854843]
[668.19226074 -14.88926888]
[682.61785889 -23.79646873]
[695.17034912 -12.40037823]
[687.69451904 2.81632495]
[671.00299072 -0.15495986]
[656.26867676 2.65575981]
[641.53436279 5.46647978]
[626.80004883 8.27719975]
[621.11639404 19.84695625]
[609.63397217 26.12184525]
[596.44030762 24.61270332]
[586.38067627 15.64811897]
[571.60406494 18.22705460]
[556.82745361 20.80599213]
[542.05078125 23.38492775]
[527.27416992 25.96386528]
[512.49749756 28.54280090]
[497.72085571 31.12173843]
[482.94421387 33.70067596]
[468.16757202 36.27960968]
[453.39096069 38.85854721]
[438.61431885 41.43748474]
[423.83767700 44.01641846]
[409.06103516 46.59535599]
[394.28439331 49.17429352]
[379.50775146 51.75323105]
[364.73110962 54.33216476]
[353.52362061 64.14244080]
[338.59866333 58.89300537]
[327.39117432 68.70327759]
[312.46624756 63.45384598]
[297.68960571 66.03278351]
[282.91296387 68.61171722]
[268.17864990 71.42243958]
[253.49031067 74.46424866]
[238.80197144 77.50605774]
[224.13796997 80.66313171]
[209.49922180 83.93527985]
[194.86047363 87.20742798]
[180.22171021 90.47957611]
[174.37452698 95.01078033]
[165.32737732 93.68624878]
[150.63903809 96.72805786]
[135.95069885 99.76986694]
[121.28669739 102.92694092]
[118.83676910 114.09499359]
[110.48667145 123.31616974]
[97.70877075 127.51007843]
[99.12039948 142.44351196]
[100.53202057 157.37693787]
[101.94364929 172.31036377]
[103.35527039 187.24378967]
[116.32901764 195.97396851]
[120.60612488 211.01525879]
[114.16708374 225.26562500]
[100.05221558 231.99647522]
[84.92611694 228.02970886]
[75.93087769 215.23831177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[6 97]
[8 95]
[9 94]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[15 88]
[16 87]
[17 85]
[18 84]
[19 83]
[20 82]
[21 81]
[22 80]
[23 72]
[24 71]
[25 70]
[26 69]
[28 67]
[29 66]
[30 65]
[31 64]
[35 62]
[36 61]
[37 60]
[39 58]
[40 57]
[41 56]
[42 55]
[43 54]
[45 52]
[46 51]
[100 186]
[102 185]
[103 184]
[104 183]
[105 181]
[106 180]
[107 179]
[108 178]
[110 177]
[111 176]
[112 175]
[115 174]
[116 173]
[117 172]
[119 170]
[121 168]
[122 167]
[123 166]
[124 165]
[125 164]
[126 163]
[127 162]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[134 155]
[135 154]
[136 153]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
