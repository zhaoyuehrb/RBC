%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGAACUCCCUGGGUAGGAGUUUGAAGCUUUCUUAACUCAGAAAGAAACUUCCAACACAGUUUCCCAAAGAAAAAUGGGCACCAAGGGCAAAGUAAGCAAAUUUUGAUUUAGUGGAUUUGAGGCAGGGCUUUCAUCUCUAACAAAUUCCCAAGUGAUGUGAAUAA\
) } def
/len { sequence length } bind def

/coor [
[155.29942322 669.26483154]
[153.89897156 654.33032227]
[152.49851990 639.39587402]
[151.09805298 624.46136475]
[139.50054932 615.18597412]
[137.86753845 600.06024170]
[147.67507935 587.95855713]
[146.27462769 573.02410889]
[144.87416077 558.08959961]
[142.36657715 555.55517578]
[140.98292542 551.66418457]
[141.35458374 546.96795654]
[143.83808899 542.28216553]
[143.27722168 527.29260254]
[142.71635437 512.30310059]
[142.15548706 497.31359863]
[124.60760498 484.19592285]
[122.34213257 462.13043213]
[137.21957397 445.31231689]
[134.98393250 430.47985840]
[132.74830627 415.64739990]
[130.51266479 400.81494141]
[117.22947693 394.12951660]
[110.34860992 380.74603271]
[112.69525146 365.70120239]
[123.57656860 354.79693604]
[121.34093475 339.96447754]
[119.10530090 325.13201904]
[116.86966705 310.29956055]
[114.63403320 295.46710205]
[112.39839935 280.63461304]
[110.16276550 265.80215454]
[107.92713165 250.96969604]
[98.26643372 247.29364014]
[90.96205139 239.86602783]
[87.39302826 229.99287415]
[88.27314758 219.45010376]
[93.50934601 210.16427612]
[102.20642090 203.86039734]
[100.80596161 188.92591858]
[99.40550995 173.99142456]
[98.00505829 159.05694580]
[96.60459900 144.12246704]
[95.20414734 129.18798828]
[79.22792816 124.28604889]
[67.39112091 110.75249481]
[64.22106934 91.76589203]
[51.37320328 84.02429962]
[38.52533340 76.28270721]
[25.67746735 68.54111481]
[12.82959843 60.79951859]
[-0.01827000 53.05792236]
[-14.25635910 59.22691345]
[-29.39389229 55.81594086]
[-39.61017990 44.13659668]
[-40.97684860 28.67982292]
[-32.96838760 15.38906765]
[-18.66421509 9.37489605]
[-3.56457496 12.94987965]
[6.52441168 24.73936462]
[7.72332430 40.21005630]
[20.57119179 47.95164871]
[33.41905975 55.69324493]
[46.26692963 63.43483734]
[59.11479568 71.17642975]
[71.96266937 78.91802216]
[83.33224487 69.13371277]
[77.59198761 55.27552032]
[71.85173798 41.41732788]
[56.73253250 37.92602158]
[46.57841110 26.19258690]
[45.29384232 10.72877502]
[53.37276459 -2.51926661]
[67.70867157 -8.45739460]
[82.78911591 -4.80227709]
[92.81535339 7.04061794]
[93.93209839 22.51745605]
[85.70993042 35.67707825]
[91.45018005 49.53527069]
[97.19043732 63.39346313]
[103.77129364 67.06845856]
[108.87245941 71.78266144]
[116.85294342 59.08179855]
[124.83342743 46.38093567]
[125.62419891 30.57950401]
[138.94688416 23.91950607]
[146.92735291 11.21864414]
[154.90783691 -1.48221934]
[152.80494690 -14.23538589]
[159.74710083 -24.65925217]
[171.54431152 -27.44923592]
[179.76087952 -39.99865341]
[187.97746277 -52.54806900]
[196.19403076 -65.09748840]
[204.41061401 -77.64690399]
[212.62719727 -90.19631958]
[209.15419006 -105.61428833]
[217.67105103 -118.92738342]
[233.12487793 -122.23718262]
[246.34719849 -113.58003998]
[249.49342346 -98.09207916]
[240.69696045 -84.96204376]
[225.17660522 -81.97974396]
[216.96003723 -69.43032837]
[208.74345398 -56.88090897]
[200.52687073 -44.33149338]
[192.31030273 -31.78207588]
[184.09371948 -19.23265839]
[184.07496643 -1.70141780]
[167.60870361 6.49826193]
[159.62821960 19.19912529]
[151.64773560 31.89998817]
[151.42778015 46.79296875]
[137.53428650 54.36141586]
[129.55380249 67.06227875]
[121.57332611 79.76314545]
[129.44509888 97.18491364]
[125.01695251 115.78260803]
[110.13862610 127.78753662]
[111.53908539 142.72201538]
[112.93953705 157.65649414]
[114.33998871 172.59097290]
[115.74044800 187.52545166]
[117.14089966 202.45994568]
[133.26594543 214.38064575]
[135.45921326 234.00787354]
[122.75959778 248.73406982]
[124.99523163 263.56652832]
[127.23086548 278.39898682]
[129.46649170 293.23144531]
[131.70213318 308.06390381]
[133.93775940 322.89639282]
[136.17340088 337.72885132]
[138.40902710 352.56130981]
[152.02101135 359.77380371]
[158.69793701 373.45855713]
[156.06762695 388.27560425]
[145.34512329 398.57931519]
[147.58076477 413.41177368]
[149.81639099 428.24423218]
[152.05203247 443.07669067]
[160.11729431 445.42935181]
[167.09675598 450.04483032]
[172.37615967 456.49295044]
[175.49798584 464.18325806]
[176.20114136 472.41925049]
[174.44256592 480.46133423]
[170.39941406 487.59323120]
[164.45133972 493.18585205]
[157.14500427 496.75274658]
[157.70587158 511.74224854]
[158.26673889 526.73175049]
[158.82760620 541.72125244]
[159.80865479 556.68914795]
[161.20910645 571.62365723]
[162.60955811 586.55810547]
[174.49595642 596.62548828]
[175.70346069 611.79107666]
[166.03254700 623.06091309]
[167.43299866 637.99542236]
[168.83345032 652.92987061]
[170.23390198 667.86437988]
[182.56214905 677.75323486]
[184.20397949 693.47198486]
[174.18531799 705.69500732]
[158.45005798 707.17059326]
[146.33364868 697.02325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[7 156]
[8 155]
[9 154]
[13 153]
[14 152]
[15 151]
[16 150]
[19 141]
[20 140]
[21 139]
[22 138]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[32 128]
[33 127]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[67 80]
[68 79]
[69 78]
[82 116]
[83 115]
[84 114]
[86 112]
[87 111]
[88 110]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
