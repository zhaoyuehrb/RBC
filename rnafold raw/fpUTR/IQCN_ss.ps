%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCUGCCAGGGAUUGGCCAGAACUUGGCUUUGAGUCACAAAGCUGCUGCGGCACCAGGGCUCCAAGACUGGCCGUUCAGACUGCUAGGUUUAGCUUCAGGGGCAGCCCAGGGCAGUGUUGCUGCAUAUUGCAUGGAUGAAAGGCUGAAGGCUGCCUCCUCUUGCAGGCUGGCUUCUGAGAUUGCACCUUCUUCUCCUGCUACUCCUCCAAAUCU\
) } def
/len { sequence length } bind def

/coor [
[121.79295349 284.46197510]
[134.59567261 276.15216064]
[132.64674377 261.27929688]
[130.69783020 246.40644836]
[118.76692963 237.56396484]
[116.57857513 222.50854492]
[125.93427277 210.05429077]
[123.98535156 195.18142700]
[120.00135040 188.96054077]
[122.11748505 180.07934570]
[120.38408661 165.17984009]
[118.65068054 150.28033447]
[116.80946350 135.39376831]
[114.86054230 120.52091217]
[102.50557709 123.14741516]
[91.51641846 119.45981598]
[84.62863922 111.46252441]
[70.05457306 115.01170349]
[55.48051071 118.56087494]
[40.90644455 122.11004639]
[26.33238029 125.65921783]
[11.75831604 129.20838928]
[4.40260220 139.79991150]
[-7.80590010 142.45777893]
[-18.20890045 136.29045105]
[-32.83281708 139.62826538]
[-47.45673752 142.96607971]
[-62.08065414 146.30389404]
[-76.70457458 149.64170837]
[-65.56882477 159.69134521]
[-66.33434296 174.67179871]
[-78.43650818 183.53393555]
[-92.94912720 179.74133301]
[-99.16812897 166.09127808]
[-92.50609589 152.65126038]
[-107.33312225 154.92268372]
[-122.16014099 157.19410706]
[-136.98716736 159.46551514]
[-141.51727295 173.99960327]
[-151.86634827 185.08036804]
[-165.94259644 190.54658508]
[-180.93467712 189.36396790]
[-193.87319946 181.82049561]
[-202.21887207 169.45864868]
[-217.04589844 171.73005676]
[-231.87292480 174.00148010]
[-246.69995117 176.27290344]
[-261.44085693 184.64799500]
[-273.56933594 172.80163574]
[-265.54342651 157.86773682]
[-248.97135925 161.44587708]
[-234.14433289 159.17445374]
[-219.31730652 156.90304565]
[-204.49028015 154.63162231]
[-200.22804260 140.33831787]
[-190.14112854 129.26747131]
[-176.19062805 123.65102386]
[-161.12353516 124.65263367]
[-147.93190002 132.12710571]
[-139.25859070 144.63848877]
[-124.43155670 142.36708069]
[-109.60453796 140.09565735]
[-94.77751160 137.82424927]
[-80.04238892 135.01779175]
[-65.41847229 131.67997742]
[-50.79455185 128.34216309]
[-36.17063141 125.00434875]
[-21.54671288 121.66653442]
[-9.34143257 109.05443573]
[8.20914364 114.63432312]
[22.78320885 111.08515167]
[37.35727310 107.53598022]
[51.93133926 103.98680878]
[66.50540161 100.43763733]
[81.07946777 96.88845825]
[96.47882843 78.02467346]
[122.46455383 88.28303528]
[130.85444641 75.84882355]
[139.24433899 63.41460800]
[147.63423157 50.98039246]
[156.02413940 38.54617691]
[164.41403198 26.11196327]
[162.72538757 13.32777691]
[169.96566772 3.14493799]
[181.81056213 0.70428121]
[190.37957764 -11.60717010]
[198.94860840 -23.91862106]
[207.51762390 -36.23007202]
[216.08665466 -48.54152679]
[217.61975098 -64.28827667]
[231.24093628 -70.31428528]
[239.80995178 -82.62573242]
[240.74615479 -89.16325378]
[244.30667114 -93.58541870]
[248.80955505 -95.16467285]
[257.73141479 -107.22288513]
[253.22406006 -121.95346832]
[258.19668579 -136.34535217]
[270.54425049 -144.94778442]
[285.41165161 -144.63372803]
[294.33349609 -156.69192505]
[303.25537109 -168.75013733]
[312.08969116 -180.87261963]
[320.83605957 -193.05873108]
[329.58239746 -205.24484253]
[338.32876587 -217.43095398]
[347.07513428 -229.61705017]
[355.82147217 -241.80316162]
[364.56784058 -253.98927307]
[359.84771729 -268.65304565]
[364.61148071 -283.11541748]
[376.83319092 -291.89572144]
[391.70358276 -291.79690552]
[400.44992065 -303.98303223]
[409.19628906 -316.16912842]
[405.41552734 -334.73663330]
[416.22552490 -349.90838623]
[434.37622070 -352.31393433]
[442.76611328 -364.74813843]
[451.15600586 -377.18237305]
[459.54589844 -389.61657715]
[456.74194336 -404.93896484]
[465.42761230 -417.42950439]
[480.05245972 -420.00823975]
[488.44235229 -432.44244385]
[496.83224487 -444.87664795]
[505.22213745 -457.31088257]
[509.06927490 -473.82257080]
[526.00067139 -474.69665527]
[531.52770996 -458.66891479]
[517.65637207 -448.92098999]
[509.26644897 -436.48675537]
[500.87655640 -424.05255127]
[492.48666382 -411.61834717]
[495.56961060 -397.09143066]
[487.23818970 -384.36184692]
[471.98013306 -381.22668457]
[463.59024048 -368.79248047]
[455.20034790 -356.35824585]
[446.81045532 -343.92404175]
[451.35992432 -333.46704102]
[450.28747559 -321.99340820]
[443.74426270 -312.36239624]
[433.25903320 -307.02987671]
[421.38238525 -307.42276001]
[412.63604736 -295.23666382]
[403.88967896 -283.05056763]
[408.74197388 -268.99377441]
[404.33450317 -254.60494995]
[392.15710449 -245.46357727]
[376.75393677 -245.24291992]
[368.00759888 -233.05680847]
[359.26123047 -220.87069702]
[350.51486206 -208.68458557]
[341.76852417 -196.49848938]
[333.02215576 -184.31237793]
[324.27581787 -172.12626648]
[322.92993164 -164.86262512]
[315.31356812 -159.82829285]
[306.39172363 -147.77008057]
[297.46984863 -135.71186829]
[302.11813354 -121.58630371]
[297.50280762 -107.26280212]
[285.19436646 -98.29868317]
[269.78961182 -98.30103302]
[260.86776733 -86.24282074]
[252.12141418 -74.05670929]
[243.55238342 -61.74525833]
[242.63218689 -46.87910461]
[228.39810181 -39.97250366]
[219.82907104 -27.66105080]
[211.26005554 -15.34959888]
[202.69102478 -3.03814721]
[194.12200928 9.27330494]
[193.58396912 26.81595230]
[176.84823608 34.50185776]
[168.45834351 46.93607330]
[160.06845093 59.37028503]
[151.67855835 71.80449677]
[143.28866577 84.23871613]
[134.89877319 96.67292786]
[145.40573120 85.96760559]
[159.43423462 80.65713501]
[174.39643860 81.72113800]
[187.53228760 88.96333313]
[196.41860962 101.04776001]
[199.41613770 115.74520874]
[195.97190857 130.34443665]
[186.72129822 142.15231323]
[173.37075806 148.99066162]
[158.38305664 149.59800720]
[144.52297974 143.86230469]
[134.34729004 132.84162903]
[129.73339844 118.57199097]
[131.68231201 133.44483948]
[135.89849854 141.54284668]
[133.55018616 148.54692078]
[135.28358459 163.44644165]
[137.01699829 178.34594727]
[138.85820007 193.23251343]
[140.80712891 208.10536194]
[153.05583191 217.72860718]
[154.82044983 232.83955383]
[145.57067871 244.45751953]
[147.51959229 259.33038330]
[149.46852112 274.20321655]
[163.98002625 278.93383789]
[174.99598694 289.49847412]
[180.32913208 303.79953003]
[178.92059326 318.99752808]
[171.05003357 332.07485962]
[158.28013611 340.43505859]
[143.14640808 342.41815186]
[128.65362549 337.63043213]
[117.67937469 327.02249146]
[112.40257263 312.70056152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[7 201]
[8 200]
[10 199]
[11 198]
[12 197]
[13 195]
[14 194]
[17 75]
[18 74]
[19 73]
[20 72]
[21 71]
[22 70]
[25 68]
[26 67]
[27 66]
[28 65]
[29 64]
[35 63]
[36 62]
[37 61]
[38 60]
[44 54]
[45 53]
[46 52]
[47 51]
[77 181]
[78 180]
[79 179]
[80 178]
[81 177]
[82 176]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
[91 168]
[92 167]
[95 166]
[96 165]
[100 161]
[101 160]
[102 159]
[103 157]
[104 156]
[105 155]
[106 154]
[107 153]
[108 152]
[109 151]
[113 147]
[114 146]
[115 145]
[118 140]
[119 139]
[120 138]
[121 137]
[124 134]
[125 133]
[126 132]
[127 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
