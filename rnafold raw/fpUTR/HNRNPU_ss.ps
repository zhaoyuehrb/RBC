%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCGCCAGGCGAGUCUCCGCGUCUCCCUCGCGAACUCGGUGAAAGGAAUUGGCGCCGUUCGACACCAGGCGGAUCCGCUCUGCAGCACGAACCCAUCUCCAGCCGCAGCCGCAGCCGCCGCCCGGGCCGAGGAGCAGCCGCAGCAGCCGCCACCAGUGGCCGAGUGAGCGGAGCCGAGUUUGAGGCAGCGCCUAGCGGUGAAUCGGGGCCCUCACC\
) } def
/len { sequence length } bind def

/coor [
[57.47549820 208.34403992]
[39.51073074 211.88514709]
[31.91774750 224.82139587]
[24.32476616 237.75764465]
[16.73178673 250.69390869]
[9.13880539 263.63015747]
[8.71025944 270.21810913]
[5.50357628 274.90100098]
[1.13789999 276.82412720]
[-6.82305050 289.53723145]
[-14.78400135 302.25036621]
[-16.68435860 311.17871094]
[-22.95143700 315.08758545]
[-31.09393501 327.68521118]
[-39.23643112 340.28280640]
[-40.22952271 356.07281494]
[-53.63640976 362.56164551]
[-51.68647385 378.48574829]
[-63.02309036 389.83743286]
[-78.94977570 387.90863037]
[-87.24893951 374.17898560]
[-81.55417633 359.18066406]
[-66.23401642 354.41912842]
[-65.82333374 339.53018188]
[-51.83404160 332.14031982]
[-43.69154358 319.54269409]
[-35.54904556 306.94509888]
[-27.49711609 294.28939819]
[-19.53616524 281.57629395]
[-11.57521343 268.86318970]
[-3.79744768 256.03717041]
[3.79553318 243.10092163]
[11.38851452 230.16467285]
[18.98149490 217.22842407]
[26.57447624 204.29216003]
[21.37825394 194.14291382]
[21.72754860 182.62626648]
[27.65119553 172.60423279]
[37.77844620 166.62312317]
[49.65452957 166.26692200]
[57.61547852 153.55381775]
[65.57643127 140.84069824]
[73.53737640 128.12757874]
[81.49832916 115.41446686]
[77.63436890 108.92727661]
[75.96926117 101.56240845]
[76.66670227 94.04393005]
[64.01101685 85.99200439]
[51.35532761 77.94007111]
[36.11402512 81.15573120]
[23.39406204 72.80963898]
[20.42234802 58.25957489]
[7.76666212 50.20764160]
[-4.88902473 42.15571213]
[-9.21759319 42.12252045]
[-12.93825436 40.84524155]
[-15.73518753 38.66675568]
[-17.43596649 35.99718475]
[-18.02106285 33.26144791]
[-30.19414902 24.49697495]
[-42.36723709 15.73250198]
[-54.54032135 6.96802902]
[-66.71340942 -1.79644358]
[-81.72156525 5.14905643]
[-98.09050751 3.58537698]
[-111.35980988 -5.96622658]
[-117.96170807 -20.82085991]
[-116.18016052 -36.88407135]
[-128.47772217 -45.47302246]
[-140.77526855 -54.06197357]
[-153.13412476 -62.56250000]
[-165.55361938 -70.97416687]
[-177.97311401 -79.38582611]
[-194.35997009 -80.02072906]
[-201.76312256 -94.65374756]
[-192.56684875 -108.23169708]
[-176.23147583 -106.78673553]
[-169.56144714 -91.80532837]
[-157.14195251 -83.39366150]
[-144.72245789 -74.98199463]
[-137.42597961 -73.83433533]
[-132.18632507 -66.35952759]
[-119.88876343 -57.77058029]
[-107.59120941 -49.18162537]
[-95.63197327 -55.77003098]
[-81.93508911 -56.56803513]
[-69.16914368 -51.36307526]
[-59.84593582 -41.11772919]
[-55.82630539 -27.79222298]
[-57.94893646 -13.96952915]
[-45.77584839 -5.20505667]
[-33.60276413 3.55941582]
[-21.42967606 12.32388878]
[-9.25659084 21.08836174]
[3.16290641 29.50002480]
[15.81859303 37.55195618]
[28.47427940 45.60388565]
[42.91287994 42.13078690]
[55.86224747 50.11630249]
[59.40725708 65.28438568]
[72.06294250 73.33631134]
[84.71862793 81.38824463]
[104.46490479 76.33605957]
[121.01261902 88.23618317]
[135.73222351 85.34940338]
[150.45181274 82.46263123]
[162.50495911 72.21410370]
[176.48336792 77.35738373]
[192.25958252 61.43954468]
[212.43771362 69.27288055]
[226.96752930 65.54669952]
[241.49734497 61.82051849]
[256.02716064 58.09434128]
[270.55697632 54.36816025]
[285.05969238 50.53786087]
[299.53457642 46.60363770]
[310.82226562 35.51768112]
[325.13333130 39.64598083]
[339.60818481 35.71175766]
[354.08306885 31.77753830]
[365.37075806 20.69157982]
[379.68182373 24.81988144]
[394.15670776 20.88565826]
[408.63156128 16.95143700]
[423.07785034 12.91349411]
[437.49478149 8.77203941]
[451.91174316 4.63058519]
[466.32867432 0.48913065]
[480.74563599 -3.65232396]
[495.13250732 -7.89707804]
[509.48855591 -12.24491310]
[512.33551025 -15.50565434]
[515.72955322 -17.49439621]
[519.20483398 -18.19517517]
[522.33795166 -17.74459457]
[524.79388428 -16.40485191]
[539.37567139 -19.92222404]
[546.75378418 -30.49701309]
[558.96697998 -33.12881470]
[569.35638428 -26.94042397]
[583.98712158 -30.24826241]
[598.61785889 -33.55610275]
[613.24859619 -36.86393738]
[626.48284912 -49.67162704]
[643.02575684 -43.80757904]
[657.60754395 -47.32494736]
[671.58013916 -61.86060715]
[689.86926270 -55.57363892]
[704.34417725 -59.50786209]
[718.81903076 -63.44208145]
[733.29388428 -67.37630463]
[747.76879883 -71.31052399]
[756.95611572 -84.46240234]
[772.97540283 -85.33564758]
[783.53796387 -73.26038361]
[780.54113770 -57.49972534]
[766.28381348 -50.14389038]
[751.70300293 -56.83565521]
[737.22814941 -52.90143204]
[722.75323486 -48.96721268]
[708.27838135 -45.03298950]
[693.80352783 -41.09876633]
[689.54827881 -31.81664848]
[680.70220947 -26.29017830]
[670.05529785 -26.54685211]
[661.12493896 -32.74317551]
[646.54315186 -29.22580528]
[639.97131348 -19.07458115]
[627.85632324 -16.02235031]
[616.55639648 -22.23321152]
[601.92572021 -18.92537308]
[587.29498291 -15.61753464]
[572.66424561 -12.30969620]
[560.43225098 0.27733117]
[542.89306641 -5.34045029]
[528.31127930 -1.82307935]
[513.83636475 2.11114264]
[499.48034668 6.45897770]
[493.99307251 11.40322304]
[484.88708496 10.76462269]
[470.47015381 14.90607738]
[456.05319214 19.04753113]
[441.63626099 23.18898582]
[427.21929932 27.33044052]
[421.66168213 32.19546509]
[412.56579590 31.42630768]
[398.09091187 35.36053085]
[383.61605835 39.29475021]
[373.36367798 50.09930801]
[358.01727295 46.25240707]
[343.54241943 50.18663025]
[329.06753540 54.12085342]
[318.81518555 64.92540741]
[303.46878052 61.07851028]
[288.99392700 65.01273346]
[283.36706543 69.79753113]
[274.28317261 68.89797974]
[259.75332642 72.62415314]
[245.22352600 76.35033417]
[230.69371033 80.07651520]
[216.16389465 83.80269623]
[213.69303894 91.26964569]
[208.41247559 97.22460938]
[201.12478638 100.65082550]
[192.98260498 100.92454529]
[185.30635071 97.92727661]
[179.37013245 92.07698059]
[168.36984253 102.11902618]
[153.33859253 97.18222809]
[138.61898804 100.06900787]
[123.89939117 102.95578003]
[118.62551880 115.26458740]
[107.59232330 122.85331726]
[94.21144104 123.37541962]
[86.25049591 136.08853149]
[78.28954315 148.80165100]
[70.32859039 161.51475525]
[62.36764145 174.22787476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[9 30]
[10 29]
[11 28]
[13 27]
[14 26]
[15 25]
[17 23]
[40 218]
[41 217]
[42 216]
[43 215]
[44 214]
[47 102]
[48 101]
[49 100]
[52 97]
[53 96]
[54 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[68 84]
[69 83]
[70 82]
[71 80]
[72 79]
[73 78]
[104 211]
[105 210]
[106 209]
[108 207]
[110 201]
[111 200]
[112 199]
[113 198]
[114 197]
[115 195]
[116 194]
[118 192]
[119 191]
[120 190]
[122 188]
[123 187]
[124 186]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 178]
[131 177]
[136 176]
[137 175]
[140 173]
[141 172]
[142 171]
[143 170]
[145 167]
[146 166]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
