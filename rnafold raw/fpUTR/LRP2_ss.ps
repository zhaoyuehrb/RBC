%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUAAAGGGCUUUAUGCACUGUCUGGAGGGUGGGGACUGGCGCGGGUAGAAAACGGGAUGCCUCGGGCGUGGGGGCAGGCUUUUGGCCACUAGGAGCUGGCGGAGGUGCAGACCUAAAGGAGCGUUCGCUAGCAGAGGCGCUGCCGGUGCGGUGUGCUACGCGCGCCCACCUCCCGGGGAAGGAACGGCGAGGCCGGGGACCGUCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[159.30401611 609.60327148]
[157.32792664 594.73400879]
[155.35183716 579.86474609]
[153.37576294 564.99548340]
[151.39967346 550.12622070]
[141.05444336 545.32189941]
[134.24169922 536.02453613]
[132.74662781 524.47479248]
[137.05522156 513.52612305]
[146.20509338 505.93984985]
[144.66636658 491.01898193]
[143.12763977 476.09811401]
[141.58891296 461.17724609]
[140.05020142 446.25637817]
[138.51147461 431.33551025]
[127.47328949 417.69146729]
[135.13853455 400.94738770]
[133.38095093 386.05072021]
[119.74398804 376.20660400]
[117.40110016 359.21066284]
[128.28619385 345.51495361]
[126.31011963 330.64569092]
[114.87615204 317.33160400]
[122.04655457 300.36968994]
[119.85240173 285.53103638]
[117.65824890 270.69238281]
[115.46410370 255.85374451]
[113.26995087 241.01507568]
[103.75417328 229.55648804]
[109.38960266 214.77297974]
[107.19545746 199.93431091]
[105.00130463 185.09565735]
[102.80715179 170.25700378]
[100.61300659 155.41835022]
[98.41885376 140.57969666]
[96.22470856 125.74104309]
[81.60961151 120.95467377]
[71.38007355 108.09951782]
[69.79373169 90.69253540]
[54.87285995 89.15381622]
[40.35178375 95.43465424]
[28.48535919 86.43258667]
[13.56448936 84.89385986]
[-1.35637939 83.35514069]
[-16.27724838 81.81641388]
[-31.22838020 80.60659790]
[-46.20252609 79.72628784]
[-61.17667389 78.84597015]
[-76.15081787 77.96566010]
[-91.12496185 77.08534241]
[-99.50466156 89.95687103]
[-113.20471954 96.89978790]
[-128.53988647 96.04647064]
[-141.38508606 87.62647247]
[-148.28501892 73.90471649]
[-147.38365173 58.57229996]
[-138.92341614 45.75355530]
[-125.18010712 38.89666748]
[-109.85059357 39.84609985]
[-97.05842590 48.34646225]
[-90.24465179 62.11119843]
[-75.27050781 62.99151230]
[-60.29635620 63.87182617]
[-45.32221222 64.75214386]
[-30.34806633 65.63245392]
[-27.48530006 63.57775879]
[-23.48577881 62.80633926]
[-18.96291161 63.83707428]
[-14.73852444 66.89554596]
[0.18234473 68.43426514]
[15.10321331 69.97299194]
[30.02408218 71.51171875]
[43.47791672 65.12081909]
[56.41158295 74.23294830]
[71.33245087 75.77166748]
[83.10879517 66.48093414]
[85.08488464 51.61167145]
[87.06096649 36.74240494]
[89.03704834 21.87313652]
[91.01313782 7.00387049]
[92.88002777 -7.87949991]
[94.63761902 -22.77617264]
[96.39521790 -37.67284775]
[98.15280914 -52.56951904]
[99.91040039 -67.46619415]
[101.66799927 -82.36286163]
[89.53932953 -78.56912231]
[75.21687317 -81.22954559]
[61.51745987 -91.04665375]
[55.32267380 -104.70771790]
[41.68198776 -113.81066132]
[43.01488876 -130.15554810]
[57.95021057 -136.92816162]
[71.12377167 -127.16141510]
[68.98374176 -110.90250397]
[75.17852020 -97.24143982]
[82.65832520 -97.79145813]
[105.09774017 -99.44151306]
[109.22760010 -113.86178589]
[113.35745239 -128.28205872]
[117.48731232 -142.70233154]
[121.61716461 -157.12260437]
[125.74702454 -171.54287720]
[129.87687683 -185.96315002]
[134.00672913 -200.38342285]
[138.13659668 -214.80369568]
[134.49784851 -230.20077515]
[145.44023132 -240.30589294]
[149.57008362 -254.72616577]
[137.64888000 -264.15768433]
[130.24876404 -277.43572998]
[128.49821472 -292.53552246]
[132.66416931 -307.15447998]
[142.11134338 -319.06326294]
[155.39912415 -326.44589233]
[170.50122070 -328.17657471]
[185.11465454 -323.99139404]
[197.01100159 -314.52856445]
[204.37615967 -301.23107910]
[206.08697510 -286.12673950]
[201.88258362 -271.51879883]
[192.40411377 -259.63491821]
[179.09695435 -252.28726196]
[163.99035645 -250.59631348]
[159.86050415 -236.17604065]
[163.79464722 -221.81039429]
[152.55686951 -210.67384338]
[148.42700195 -196.25357056]
[144.29714966 -181.83329773]
[140.16729736 -167.41302490]
[136.03744507 -152.99275208]
[131.90757751 -138.57247925]
[127.77772522 -124.15219879]
[123.64787292 -109.73192596]
[119.51801300 -95.31165314]
[116.56466675 -80.60527039]
[114.80707550 -65.70859528]
[113.04948425 -50.81192398]
[111.29188538 -35.91525269]
[109.53429413 -21.01857948]
[107.77670288 -6.12190628]
[110.11420441 0.88754922]
[105.88240051 8.97995567]
[103.90631866 23.84922218]
[101.93023682 38.71848679]
[99.95414734 53.58775711]
[97.97806549 68.45702362]
[115.38104248 75.63694000]
[124.15558624 90.33761597]
[139.09744263 89.01809692]
[154.03929138 87.69857025]
[168.98114014 86.37905121]
[183.92298889 85.05952454]
[191.78822327 71.68352509]
[206.02697754 65.51605988]
[221.16415405 68.92865753]
[231.37918091 80.60910034]
[232.74418640 96.06602478]
[224.73429871 109.35591888]
[210.42948914 115.36855316]
[195.33023071 111.79194641]
[185.24250793 100.00137329]
[170.30065918 101.32089996]
[155.35881042 102.64041901]
[140.41696167 103.95994568]
[125.47510529 105.27946472]
[120.42521667 116.11410522]
[111.06336212 123.54689026]
[113.25750732 138.38554382]
[115.45166016 153.22419739]
[117.64581299 168.06285095]
[119.83995819 182.90151978]
[122.03411102 197.74017334]
[124.22826385 212.57882690]
[133.90098572 225.09877014]
[128.10861206 238.82093811]
[130.30274963 253.65959167]
[132.49690247 268.49822998]
[134.69105530 283.33691406]
[136.88520813 298.17556763]
[146.75648499 306.47509766]
[148.27957153 318.87780762]
[141.17938232 328.66961670]
[143.15547180 343.53887939]
[154.72140503 350.43865967]
[160.12353516 362.56265259]
[157.59463501 375.39434814]
[148.27761841 384.29312134]
[150.03521729 399.18981934]
[159.65858459 407.77554321]
[160.81690979 420.21765137]
[153.43234253 429.79678345]
[154.97106934 444.71765137]
[156.50978088 459.63851929]
[158.04850769 474.55938721]
[159.58723450 489.48025513]
[161.12596130 504.40112305]
[176.27143860 515.78515625]
[178.24998474 534.30706787]
[166.26893616 548.15014648]
[168.24502563 563.01940918]
[170.22109985 577.88867188]
[172.19718933 592.75793457]
[174.17327881 607.62719727]
[188.40065002 613.41320801]
[197.81623840 625.54754639]
[199.88731384 640.76617432]
[194.05676270 654.97528076]
[181.89297485 664.35284424]
[166.66795349 666.37615967]
[152.47712708 660.50109863]
[143.13778687 648.30798340]
[141.16215515 633.07672119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 200]
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[17 189]
[18 188]
[21 184]
[22 183]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[39 75]
[40 74]
[42 72]
[43 71]
[44 70]
[45 69]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[89 96]
[90 95]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[105 128]
[106 127]
[108 125]
[109 124]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
