%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGGUGUGAGGCCAGGAGUGUGCGGUCACGAGGCGCCCGGGAAGUGUGUCCAAUGCCCGAAGCAGCCCCCACCCGGGCGGUCCUGAGUCCGGGUCGCGCUCUGGUGUAUCUCUUUUGACGUCUGCUACCCACAGCCUGGGGCAGGAGAGUGGCGACGGCGAGGAGCAACUGCACGCGACUUGGGACCUUGCCCUGCCCCGCGGCCCGCGUCACC\
) } def
/len { sequence length } bind def

/coor [
[139.74369812 493.87118530]
[142.09205627 484.16717529]
[146.84658813 475.36846924]
[153.70024109 468.06158447]
[162.20573425 462.73608398]
[158.77766418 448.13305664]
[155.34959412 433.53002930]
[150.76318359 427.73965454]
[151.97895813 418.69189453]
[148.76167297 404.04098511]
[145.54440308 389.39007568]
[142.32713318 374.73916626]
[139.10984802 360.08825684]
[135.89257812 345.43734741]
[132.46450806 330.83432007]
[128.82635498 316.28222656]
[125.18820190 301.73010254]
[121.55005646 287.17800903]
[117.91190338 272.62588501]
[105.05123138 260.68237305]
[110.26962280 243.02058411]
[106.42214966 228.52241516]
[102.57466888 214.02424622]
[98.72719574 199.52607727]
[94.87972260 185.02790833]
[91.03224945 170.52973938]
[87.18477631 156.03155518]
[83.33729553 141.53338623]
[79.48982239 127.03522491]
[69.83881378 115.55227661]
[56.21892929 109.26747894]
[42.59904480 102.98267365]
[26.82676697 104.22599030]
[18.51232910 91.86801910]
[4.89244556 85.58321381]
[-8.77237034 79.39671326]
[-22.48140717 73.30883026]
[-36.19044495 67.22094727]
[-49.89948273 61.13306808]
[-62.79253387 70.21497345]
[-80.20947266 68.67525482]
[-93.76180267 55.07125473]
[-108.70576477 53.77588272]
[-123.64972687 52.48051071]
[-133.84574890 64.02811432]
[-148.71253967 67.31929779]
[-162.50349426 61.29652405]
[-170.01365662 48.46159363]
[-184.95761108 47.16622162]
[-199.90158081 45.87084579]
[-214.31837463 52.38748550]
[-226.32992554 43.57998657]
[-241.27388000 42.28461456]
[-251.34252930 54.09147263]
[-266.43600464 57.69247818]
[-280.75051880 51.70296860]
[-288.78186035 38.42603683]
[-287.44183350 22.96693039]
[-277.24569702 11.26999283]
[-262.11407471 7.83293486]
[-247.86537170 13.97737598]
[-239.97851562 27.34065247]
[-225.03454590 28.63602448]
[-211.68664551 22.02673340]
[-198.60620117 30.92688560]
[-183.66224670 32.22225571]
[-168.71827698 33.51763153]
[-159.11161804 22.16641998]
[-144.49002075 18.60650444]
[-130.41128540 24.40673637]
[-122.35435486 37.53654861]
[-107.41039276 38.83192062]
[-92.46643066 40.12729263]
[-85.40739441 26.89210892]
[-94.80795288 15.20324421]
[-104.20850372 3.51437879]
[-113.60906219 -8.17448711]
[-123.00961304 -19.86335182]
[-132.41017151 -31.55221748]
[-141.81072998 -43.24108124]
[-151.21127319 -54.92994690]
[-166.70254517 -54.03548050]
[-179.74279785 -62.44569778]
[-185.31776428 -76.92669678]
[-181.28376770 -91.91024017]
[-169.19197083 -101.63484955]
[-153.69190979 -102.36121368]
[-140.74366760 -93.81002808]
[-135.32611084 -79.26940155]
[-139.52241516 -64.33050537]
[-130.12185669 -52.64163589]
[-120.72130585 -40.95277023]
[-111.32074738 -29.26390648]
[-101.92019653 -17.57504082]
[-92.51963806 -5.88617563]
[-83.11908722 5.80268955]
[-73.71852875 17.49155426]
[-49.43562698 25.95471573]
[-43.81159973 47.42403030]
[-30.10256195 53.51191330]
[-16.39352608 59.59979630]
[-2.68448830 65.68767548]
[4.70054197 65.52963257]
[11.17724895 71.96333313]
[24.79713249 78.24813843]
[39.59522629 76.55529022]
[48.88384628 89.36278534]
[62.50373077 95.64759064]
[76.12361908 101.93239594]
[79.53389740 89.84683228]
[88.28785706 81.68708801]
[99.42819977 79.37827301]
[109.59043121 82.99682617]
[121.41355133 73.76568604]
[133.23666382 64.53455353]
[145.05978394 55.30341339]
[156.88290405 46.07227707]
[168.70602417 36.84114075]
[168.80134583 23.37558365]
[176.52058411 12.58013916]
[188.86456299 8.26410484]
[201.25453186 11.79115200]
[213.20944214 2.73135090]
[225.16435242 -6.32845020]
[237.11927795 -15.38825130]
[242.06532288 -23.06137657]
[249.31237793 -24.49099159]
[261.39660645 -33.37757492]
[273.48083496 -42.26416016]
[285.56506348 -51.15074539]
[297.64929199 -60.03732681]
[309.66918945 -69.01075745]
[311.96206665 -84.41790771]
[324.21508789 -93.43553925]
[338.88934326 -91.15468597]
[345.21478271 -105.65638733]
[360.03155518 -107.17691040]
[371.98648071 -116.23670959]
[383.94140625 -125.29650879]
[392.91317749 -139.68203735]
[409.22015381 -135.04316711]
[409.27679443 -118.08932495]
[393.00119019 -113.34159088]
[381.04626465 -104.28179169]
[369.09136963 -95.22199249]
[363.62103271 -81.36830139]
[347.94912720 -79.19976807]
[346.17712402 -64.45542908]
[334.18218994 -55.09720230]
[318.72897339 -57.05583954]
[315.29840088 -50.51407242]
[306.53588867 -47.95309830]
[294.45166016 -39.06651306]
[282.36743164 -30.17992973]
[270.28320312 -21.29334450]
[258.19897461 -12.40676117]
[246.17907715 -3.43333554]
[234.22415161 5.62646532]
[222.26924133 14.68626690]
[210.31433105 23.74606705]
[208.73129272 40.49156952]
[195.26011658 51.11820602]
[177.93714905 48.66426086]
[166.11404419 57.89539719]
[154.29092407 67.12653351]
[142.46780396 76.35766602]
[130.64468384 85.58880615]
[118.82156372 94.81993866]
[119.09517670 108.73700714]
[109.65493011 120.29747009]
[93.98799133 123.18774414]
[97.83546448 137.68591309]
[101.68294525 152.18408203]
[105.53041840 166.68225098]
[109.37789154 181.18043518]
[113.22536469 195.67860413]
[117.07283783 210.17677307]
[120.92031860 224.67494202]
[124.76779175 239.17311096]
[135.50767517 246.30960083]
[138.41577148 258.46044922]
[132.46401978 268.98773193]
[136.10215759 283.53985596]
[139.74031067 298.09194946]
[143.37846375 312.64407349]
[147.01661682 327.19616699]
[151.32470703 332.20022583]
[152.31440735 337.78976440]
[150.54348755 342.22009277]
[153.76075745 356.87100220]
[156.97802734 371.52191162]
[160.19531250 386.17279053]
[163.41258240 400.82369995]
[166.62986755 415.47460938]
[169.95262146 430.10195923]
[173.38069153 444.70498657]
[176.80876160 459.30801392]
[196.76313782 464.10775757]
[211.45593262 478.32739258]
[216.86537170 497.96630859]
[211.56584167 517.55584717]
[197.10264587 531.68200684]
[201.77899170 545.93444824]
[206.45533752 560.18688965]
[211.13169861 574.43927002]
[221.81465149 587.60406494]
[212.12171936 601.51385498]
[196.07221985 596.05035400]
[196.87927246 579.11566162]
[192.20291138 564.86322021]
[187.52656555 550.61077881]
[182.85020447 536.35833740]
[172.98515320 536.33538818]
[163.43598938 533.79187012]
[154.83702087 528.88781738]
[147.76167297 521.94024658]
[142.68434143 513.40283203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 109]
[31 108]
[32 107]
[34 105]
[35 104]
[36 102]
[37 101]
[38 100]
[39 99]
[42 73]
[43 72]
[44 71]
[48 67]
[49 66]
[50 65]
[52 63]
[53 62]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[113 168]
[114 167]
[115 166]
[116 165]
[117 164]
[118 163]
[122 160]
[123 159]
[124 158]
[125 157]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 150]
[135 147]
[137 145]
[138 144]
[139 143]
[202 212]
[203 211]
[204 210]
[205 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
