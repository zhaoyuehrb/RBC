%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUGCAGCGCAUGCGCACACCUGGAGGGCGGAGAGCGGUCCAGAGCGAGUGGAAAGAUUUGGGCGAGAACUUGCGCGGGAGCCGGACUGAGCGGUGCGAGCGCGCAGGCGCGGCCGACGGGGCGGGCUGCUACUCCGGAAUCUGCUAAUCCCAGUCGGUGCCGCAUCCCCAGCCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-36.12163544 469.59277344]
[-42.33167648 483.24688721]
[-48.54171371 496.90103149]
[-46.32919693 515.17065430]
[-60.97211456 524.82446289]
[-66.94812775 538.58264160]
[-72.92414856 552.34082031]
[-73.47673035 561.48297119]
[-79.12142944 566.28149414]
[-85.33146667 579.93560791]
[-83.20960236 596.19689941]
[-96.39406586 605.94891357]
[-111.32180786 599.15966797]
[-112.63645172 582.81329346]
[-98.98560333 573.72558594]
[-92.77556610 560.07147217]
[-86.68231201 546.36480713]
[-80.70629883 532.60662842]
[-74.73028564 518.84844971]
[-78.87594604 507.46856689]
[-73.99072266 495.94897461]
[-62.19585037 490.69097900]
[-55.98580933 477.03686523]
[-49.77577209 463.38272095]
[-44.03551865 449.52453613]
[-38.77174759 435.47842407]
[-41.55077362 420.84536743]
[-29.46278954 410.63796997]
[-24.19901848 396.59188843]
[-18.93524742 382.54577637]
[-13.67147636 368.49969482]
[-8.52780628 354.40917969]
[-3.50461221 340.27526855]
[-6.53306389 325.69180298]
[5.37888813 315.27947998]
[10.40208244 301.14556885]
[15.30443478 286.96929932]
[20.08558846 272.75167847]
[24.86674118 258.53405762]
[29.64789391 244.31645203]
[34.42904663 230.09883118]
[33.28277206 227.51585388]
[33.10308075 224.31797791]
[34.13134384 220.87567139]
[36.46877670 217.64053345]
[40.05223846 215.09364319]
[37.77442169 200.37423706]
[50.20385361 190.58547974]
[55.94410324 176.72729492]
[61.68435669 162.86909485]
[59.40653992 148.14968872]
[71.83596802 138.36093140]
[77.57621765 124.50273895]
[83.31647491 110.64454651]
[76.63318634 124.07338715]
[64.31435394 132.63180542]
[49.39755630 134.20945740]
[35.56095886 128.41734314]
[26.21639252 116.68366241]
[23.66803551 101.90171814]
[28.54426003 87.71643066]
[39.64268875 77.62560272]
[54.22667694 74.11742401]
[68.70010376 78.05693817]
[79.49349213 88.47171021]
[69.44384766 77.33596802]
[59.39420700 66.20022583]
[49.34456635 55.06448746]
[33.58416748 50.53216934]
[29.89220238 34.55401611]
[42.06664658 23.56698036]
[57.58347321 28.87358284]
[60.48030472 45.01484680]
[70.52994537 56.15058517]
[80.57958984 67.28633118]
[90.62922668 78.42206573]
[105.62431335 78.03794861]
[115.09062958 66.40227509]
[124.55694580 54.76660919]
[134.02326965 43.13093948]
[143.48959351 31.49526978]
[142.06454468 15.98375893]
[151.83049011 4.31838655]
[166.62712097 3.05541420]
[176.09344482 -8.58025551]
[185.55976868 -20.21592522]
[195.02607727 -31.85159302]
[204.49240112 -43.48726273]
[201.58142090 -56.65259171]
[206.71662903 -68.90885162]
[217.81291199 -75.86018372]
[230.69267273 -75.15431976]
[240.35627747 -86.62667847]
[250.01986694 -98.09902954]
[259.68347168 -109.57138824]
[269.34704590 -121.04373932]
[279.01065063 -132.51609802]
[281.98361206 -148.05546570]
[296.10067749 -152.80491638]
[305.76428223 -164.27726746]
[305.44692993 -177.18713379]
[313.75186157 -186.54632568]
[325.80923462 -187.68995667]
[329.04705811 -203.17631531]
[343.24319458 -207.68403625]
[353.10122681 -218.98973083]
[352.20660400 -234.54086304]
[362.36511230 -245.86601257]
[377.19625854 -246.62307739]
[387.05432129 -257.92877197]
[396.91235352 -269.23446655]
[402.76470947 -285.14630127]
[419.67477417 -283.92752075]
[423.18481445 -267.34088135]
[408.21804810 -259.37640381]
[398.36001587 -248.07070923]
[388.50195312 -236.76501465]
[389.77145386 -221.96893311]
[379.93502808 -210.36291504]
[364.40692139 -209.13168335]
[354.54888916 -197.82598877]
[352.01617432 -183.14828491]
[337.11492920 -177.83190918]
[334.68572998 -160.46211243]
[317.23663330 -154.61367798]
[307.57305908 -143.14131165]
[305.29129028 -128.42251587]
[290.48300171 -122.85250092]
[280.81942749 -111.38014221]
[271.15582275 -99.90779114]
[261.49221802 -88.43543243]
[251.82862854 -76.96308136]
[242.16503906 -65.49073029]
[244.31938171 -48.82231522]
[233.54879761 -35.48329544]
[216.12806702 -34.02094269]
[206.66175842 -22.38527489]
[197.19543457 -10.74960518]
[187.72911072 0.88606411]
[178.26280212 12.52173328]
[180.03669739 27.26584625]
[170.60226440 39.20092010]
[155.12525940 40.96158981]
[145.65893555 52.59725952]
[136.19261169 64.23292542]
[126.72629547 75.86859894]
[117.25997925 87.50426483]
[119.97846985 95.28135681]
[119.48683929 103.20002747]
[116.09587860 110.03443909]
[110.54725647 114.81656647]
[103.86561584 116.97226715]
[97.17466736 116.38479614]
[91.43441772 130.24299622]
[85.69416046 144.10118103]
[87.56140137 159.81181335]
[75.54254913 168.60934448]
[69.80229950 182.46754456]
[64.06204987 196.32572937]
[65.92928314 212.03636169]
[53.91043472 220.83389282]
[48.64666367 234.87998962]
[43.86550903 249.09761047]
[39.08435440 263.31521606]
[34.30320358 277.53283691]
[29.52204895 291.75045776]
[29.75098991 300.90646362]
[24.53599548 306.16876221]
[19.51280212 320.30267334]
[22.18196106 335.89712524]
[10.62930202 345.29846191]
[5.60610723 359.43237305]
[5.67869425 368.59094238]
[0.37461615 373.76345825]
[-4.88915491 387.80957031]
[-10.15292549 401.85565186]
[-15.41669655 415.90173340]
[-13.01417065 431.53945923]
[-24.72565651 440.74221802]
[-29.98942757 454.78829956]
[-29.10888672 459.09555054]
[-29.60876465 463.05532837]
[-31.20682526 466.27294922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[5 19]
[6 18]
[7 17]
[9 16]
[10 15]
[25 180]
[26 179]
[28 177]
[29 176]
[30 175]
[31 174]
[32 172]
[33 171]
[35 169]
[36 168]
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[46 161]
[48 159]
[49 158]
[50 157]
[52 155]
[53 154]
[54 153]
[65 76]
[66 75]
[67 74]
[68 73]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[99 126]
[100 125]
[103 123]
[105 121]
[106 120]
[109 117]
[110 116]
[111 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
