%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACCUCUGGCCGCUAUUCGAAGGGAAGGGAGCCCCCUAUAAAACAGCCUACAGUGGACAGUCUGGUCGGCAGAGCCGCAGGUCAGUCGUGAAGAGGGAGCUCUAUUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[210.04353333 256.95114136]
[199.95593262 245.84979248]
[189.86831665 234.74842834]
[179.78071594 223.64707947]
[169.69309998 212.54571533]
[159.60549927 201.44436646]
[149.51788330 190.34300232]
[135.23240662 186.12705994]
[131.67799377 170.71029663]
[121.59037781 159.60893250]
[111.50276947 148.50756836]
[101.41516113 137.40621948]
[86.61621094 134.95857239]
[78.28721619 148.40991211]
[63.40502930 147.80172729]
[50.28022003 155.06390381]
[46.15386200 170.32000732]
[32.40697861 178.11737061]
[17.19535255 173.82994080]
[9.54377365 160.00138855]
[13.99178505 144.83595276]
[27.90046310 137.33099365]
[43.01803207 141.93910217]
[56.14284515 134.67691040]
[63.53306580 121.74501801]
[79.35401917 121.83376312]
[68.57315063 110.43640137]
[64.35505676 93.80429077]
[49.85736465 89.95499420]
[35.35967636 86.10570526]
[20.86198997 82.25641632]
[5.18118525 87.05686951]
[-6.63044214 75.68069458]
[-2.42210197 59.83071136]
[13.47702503 55.81203079]
[24.71128082 67.75872803]
[39.20896912 71.60801697]
[53.70665741 75.45730591]
[68.20434570 79.30660248]
[74.44747162 75.15047455]
[63.57000351 64.82184601]
[51.42619324 56.01684952]
[51.72615433 41.01985168]
[64.21233368 32.70748901]
[78.16390991 38.21688080]
[81.60178375 52.81787109]
[86.93372345 66.83822632]
[93.17685699 62.68210602]
[95.21935272 47.82181931]
[97.26185608 32.96152878]
[86.44879913 19.29335594]
[88.75350952 2.35723186]
[102.28339386 -7.52786303]
[103.91922760 -22.43839836]
[105.55506134 -37.34893417]
[93.98088837 -47.68421936]
[90.72502136 -62.85587311]
[97.03941345 -77.03007507]
[110.49604797 -84.75656128]
[125.92057800 -83.06433868]
[137.38194275 -72.60410309]
[140.47303772 -57.39802551]
[134.00524902 -43.29315567]
[120.46559143 -35.71310043]
[118.82975769 -20.80256653]
[117.19393158 -5.89203119]
[126.62847900 2.99906254]
[129.21646118 15.90137291]
[123.78163910 28.10020256]
[112.12213898 35.00402832]
[110.07964325 49.86431885]
[108.03713989 64.72460938]
[125.93795776 77.02977753]
[132.93959045 96.60166168]
[127.42022705 115.67003632]
[112.51651764 127.31860352]
[122.60412598 138.41996765]
[132.69174194 149.52131653]
[142.77934265 160.62268066]
[157.78636169 165.63267517]
[160.61924744 180.25538635]
[170.70684814 191.35675049]
[180.79446411 202.45811462]
[190.88206482 213.55946350]
[200.96968079 224.66082764]
[211.05728149 235.76219177]
[221.14489746 246.86354065]
[241.10548401 246.61167908]
[254.76756287 260.75265503]
[253.85639954 280.09432983]
[264.81893921 290.33264160]
[275.78149414 300.57092285]
[286.74401855 310.80923462]
[297.84536743 320.89685059]
[309.08349609 330.83187866]
[320.32159424 340.76690674]
[331.55969238 350.70196533]
[347.72979736 353.43328857]
[353.19506836 368.89492798]
[342.33334351 381.18127441]
[326.31820679 377.65319824]
[321.62466431 361.94006348]
[310.38656616 352.00500488]
[299.14843750 342.06997681]
[287.91033936 332.13494873]
[280.71746826 330.03390503]
[276.50573730 321.77175903]
[265.54318237 311.53347778]
[254.58064270 301.29516602]
[243.61810303 291.05688477]
[233.60511780 294.21041870]
[223.11480713 292.84072876]
[214.10945129 287.13482666]
[208.30267334 278.09713745]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[9 79]
[10 78]
[11 77]
[12 76]
[13 26]
[15 24]
[16 23]
[28 39]
[29 38]
[30 37]
[31 36]
[48 72]
[49 71]
[50 70]
[53 66]
[54 65]
[55 64]
[90 110]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
