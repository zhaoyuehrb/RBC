%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGUCCGUCACGUGCGGCCGCCCGGCCUCUCGGCCUUGCCGCGCGCCUGGCGGGGUUGGGGGGGCGGGGACCAAGAUCUGCUGCGCCUGCGUUGUGGGCGUUCUCGGGGAGCUGCUGCCGUAGCUGCCGCCGCCGCUACCACCGCGUUCGGGUGUAGAAUUUGGAAUCCCUGCGCCGCGUUAACA\
) } def
/len { sequence length } bind def

/coor [
[-47.02236938 276.75128174]
[-55.89792252 288.84362793]
[-70.43570709 292.53857422]
[-84.00801086 286.15167236]
[-90.42726898 272.59463501]
[-86.76615906 258.04687500]
[-99.67218018 265.69110107]
[-112.57820892 273.33535767]
[-125.48423004 280.97961426]
[-138.39025879 288.62387085]
[-151.29627991 296.26809692]
[-164.20230103 303.91235352]
[-176.97879028 311.77120972]
[-189.62217712 319.84243774]
[-202.26556396 327.91366577]
[-214.90893555 335.98489380]
[-227.55232239 344.05615234]
[-240.19570923 352.12738037]
[-252.83909607 360.19860840]
[-265.48248291 368.26983643]
[-265.11190796 378.96694946]
[-269.19393921 388.77398682]
[-276.92648315 395.93896484]
[-286.86206055 399.21240234]
[-297.17846680 398.06472778]
[-306.01293945 392.77084351]
[-319.04489136 400.19836426]
[-332.07684326 407.62588501]
[-345.10882568 415.05343628]
[-352.91577148 429.47503662]
[-369.31393433 429.65429688]
[-377.43429565 415.40676880]
[-368.92327881 401.38909912]
[-352.53634644 402.02145386]
[-339.50439453 394.59393311]
[-326.47241211 387.16641235]
[-313.44046021 379.73889160]
[-309.71142578 360.63507080]
[-292.89251709 350.24609375]
[-273.55371094 355.62646484]
[-260.91033936 347.55523682]
[-248.26693726 339.48397827]
[-235.62356567 331.41275024]
[-222.98017883 323.34152222]
[-210.33679199 315.27029419]
[-197.69340515 307.19903564]
[-185.05001831 299.12780762]
[-183.16162109 294.72143555]
[-178.47441101 291.46377563]
[-171.84655762 291.00634766]
[-158.94052124 283.36209106]
[-146.03450012 275.71783447]
[-133.12847900 268.07357788]
[-120.22245789 260.42935181]
[-107.31642914 252.78509521]
[-94.41040802 245.14083862]
[-81.97328949 236.75524902]
[-70.04759979 227.65701294]
[-58.12191391 218.55876160]
[-46.19622803 209.46052551]
[-34.42424011 200.16427612]
[-29.46506882 186.11949158]
[-13.88313961 183.37831116]
[-2.26813102 173.88665771]
[2.69103980 159.84187317]
[18.27296829 157.10069275]
[29.88797760 147.60903931]
[41.50298691 138.11737061]
[53.11799240 128.62571716]
[64.73300171 119.13406372]
[76.34801483 109.64240265]
[87.96302032 100.15074158]
[99.41780090 90.46632385]
[110.70915985 80.59185791]
[122.00051880 70.71738434]
[133.29188538 60.84290695]
[144.58323669 50.96843338]
[142.61412048 40.44759750]
[145.18069458 30.13966370]
[151.75242615 21.89699173]
[161.08538818 17.17188263]
[171.45729065 16.76090813]
[180.98522949 20.67135811]
[192.75721741 11.37511063]
[204.52920532 2.07886219]
[216.30120850 -7.21738625]
[228.07319641 -16.51363373]
[239.84518433 -25.80988312]
[251.61717224 -35.10613251]
[263.38916016 -44.40237808]
[275.00418091 -53.89403915]
[286.45895386 -63.57845688]
[297.91372681 -73.26287079]
[309.36853027 -82.94728851]
[314.91165161 -97.76567078]
[329.62625122 -100.07415009]
[341.08105469 -109.75856781]
[352.53582764 -119.44298553]
[363.99060059 -129.12739563]
[375.28198242 -139.00187683]
[386.40673828 -149.06364441]
[397.53152466 -159.12541199]
[396.74401855 -168.55705261]
[400.34249878 -177.16159058]
[407.39849854 -183.04795837]
[416.23962402 -184.98638916]
[424.84509277 -182.66381836]
[436.46011353 -192.15548706]
[448.07510376 -201.64714050]
[459.61041260 -211.23550415]
[471.06518555 -220.91992188]
[482.43865967 -230.69972229]
[493.73001099 -240.57418823]
[505.02139282 -250.44865417]
[516.31274414 -260.32312012]
[527.60412598 -270.19760132]
[538.89544678 -280.07208252]
[543.67340088 -295.75976562]
[559.70727539 -299.20169067]
[570.50280762 -286.85711670]
[564.95446777 -271.42507935]
[548.76995850 -268.78073120]
[537.47857666 -258.90625000]
[526.18719482 -249.03176880]
[514.89587402 -239.15730286]
[503.60449219 -229.28283691]
[492.31314087 -219.40835571]
[489.34182739 -212.62490845]
[480.74960327 -209.46514893]
[469.29483032 -199.78073120]
[466.21060181 -193.04788208]
[457.56677246 -190.03213501]
[445.95175171 -180.54046631]
[434.33676147 -171.04881287]
[428.77160645 -151.18530273]
[407.59329224 -148.00064087]
[396.46853638 -137.93885803]
[385.34375000 -127.87709045]
[384.21456909 -123.21800232]
[380.13449097 -119.22608185]
[373.67501831 -117.67261505]
[362.22024536 -107.98819733]
[350.76547241 -98.30377960]
[339.31066895 -88.61936188]
[334.58688354 -74.49367523]
[319.05294800 -71.49250793]
[307.59814453 -61.80809021]
[296.14337158 -52.12367249]
[284.68859863 -42.43925476]
[283.40435791 -37.82049561]
[279.19317627 -33.96714401]
[272.68542480 -32.63039017]
[260.91342163 -23.33414078]
[249.14143372 -14.03789234]
[237.36944580 -4.74164391]
[225.59745789 4.55460453]
[213.82545471 13.85085297]
[202.05346680 23.14710045]
[190.28147888 32.44334793]
[189.45684814 51.89024353]
[174.38435364 64.68191528]
[154.45771790 62.25979233]
[143.16635132 72.13426971]
[131.87500000 82.00874329]
[120.58363342 91.88320923]
[109.29227448 101.75768280]
[107.76175690 106.79725647]
[103.50814819 110.61283875]
[97.45468140 111.76575470]
[85.83966827 121.25740814]
[74.22466278 130.74906921]
[62.60965347 140.24072266]
[50.99464417 149.73239136]
[39.37963486 159.22404480]
[27.76462746 168.71569824]
[21.97467232 183.43939209]
[7.22352695 185.50166321]
[-4.39148140 194.99331665]
[-10.18143559 209.71701050]
[-24.93258095 211.77928162]
[-27.64055634 217.84596252]
[-32.31098938 221.12765503]
[-37.09798813 221.38621521]
[-49.02367401 230.48445129]
[-60.94935989 239.58270264]
[-72.87504578 248.68093872]
[-58.01716995 250.74093628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 47]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[26 37]
[27 36]
[28 35]
[29 34]
[57 186]
[58 185]
[59 184]
[60 183]
[61 180]
[63 178]
[64 177]
[66 175]
[67 174]
[68 173]
[69 172]
[70 171]
[71 170]
[72 169]
[73 166]
[74 165]
[75 164]
[76 163]
[77 162]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 149]
[92 148]
[93 147]
[94 146]
[96 144]
[97 143]
[98 142]
[99 141]
[100 138]
[101 137]
[102 136]
[107 134]
[108 133]
[109 132]
[110 130]
[111 129]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
