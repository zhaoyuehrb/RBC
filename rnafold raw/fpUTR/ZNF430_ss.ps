%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGACAGGGCGGCUUCCGGGUUUGGCGGGGCCUUUGUCCCUCGCUGUGGCCUGAGCUCCAGGUCUCGUCUUCAGCGCUCUGUGUCCUCUGCUCCUAGAGGUCCAGGCUCUGUGGCCCUGUGACCCGCAGGUAUUGGGAGAUCUACAGCUAAGACGCCAGGAACCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[79.79582214 399.91574097]
[71.94417572 387.13375854]
[68.35443878 401.69787598]
[77.72538757 414.21664429]
[76.80543518 429.82714844]
[66.02896118 441.15856934]
[50.48427963 442.86059570]
[37.51111603 434.12954712]
[33.23500061 419.08798218]
[39.67498779 404.83804321]
[53.79030991 398.10815430]
[57.38004303 383.54400635]
[60.08386993 368.78970337]
[61.89192200 353.89907837]
[63.69997025 339.00845337]
[65.50801849 324.11782837]
[67.31607056 309.22717285]
[69.12412262 294.33654785]
[70.93217468 279.44592285]
[72.74021912 264.55529785]
[74.54827118 249.66465759]
[76.35632324 234.77401733]
[77.64933014 219.82984924]
[78.42575073 204.84996033]
[79.20217133 189.87007141]
[79.97859192 174.89016724]
[80.75501251 159.91027832]
[81.53143311 144.93038940]
[82.30784607 129.95050049]
[71.34146881 119.71631622]
[56.45083618 121.52436066]
[41.56020355 123.33241272]
[26.66956902 125.14046478]
[11.77893639 126.94851685]
[4.17786694 140.34739685]
[-9.69326878 146.62791443]
[-24.42854118 143.57246399]
[-34.41953659 132.55802917]
[-49.31017303 134.36607361]
[-60.29627609 146.05731201]
[-76.27425385 144.61384583]
[-84.98718262 131.14295959]
[-79.75122833 115.97838593]
[-64.58298492 110.75307465]
[-51.11822128 119.47544098]
[-36.22758865 117.66738892]
[-29.16283989 104.58200836]
[-15.58696461 98.08896637]
[-0.61587131 100.86740875]
[9.97088623 112.05788422]
[24.86151886 110.24983215]
[39.75215149 108.44178009]
[54.64278412 106.63372803]
[69.53341675 104.82568359]
[80.11990356 80.88275909]
[102.86173248 75.85427094]
[109.13574982 62.22941589]
[115.40976715 48.60456085]
[121.68378448 34.97970581]
[116.44463348 20.31038094]
[123.00146484 6.58221579]
[137.01870728 1.67788529]
[143.29272461 -11.94697094]
[149.56674194 -25.57182693]
[155.84075928 -39.19668198]
[162.11477661 -52.82154083]
[168.38879395 -66.44639587]
[174.66281128 -80.07125092]
[171.50971985 -113.03108978]
[172.54458618 -127.99535370]
[173.57945251 -142.95960999]
[165.70657349 -153.19767761]
[166.89225769 -165.65531921]
[175.95553589 -173.69129944]
[177.24853516 -188.63546753]
[178.54154968 -203.57962036]
[172.02262878 -217.99539185]
[180.82821655 -230.00833130]
[182.12123108 -244.95249939]
[179.73893738 -253.79829407]
[183.56770325 -260.14270020]
[185.11846924 -275.06231689]
[186.66921997 -289.98196411]
[184.43997192 -298.86755371]
[188.37768555 -305.14492798]
[182.36022949 -319.77709961]
[191.57521057 -331.47894287]
[193.38327026 -346.36959839]
[195.19131470 -361.26022339]
[196.99935913 -376.15084839]
[198.80741882 -391.04147339]
[200.61546326 -405.93212891]
[193.69325256 -420.79870605]
[203.32727051 -434.06964111]
[219.60684204 -432.09292603]
[225.78495789 -416.90206909]
[215.50610352 -404.12405396]
[213.69804382 -389.23342896]
[211.88999939 -374.34280396]
[210.08193970 -359.45217896]
[208.27389526 -344.56152344]
[206.46585083 -329.67089844]
[212.61262512 -316.10379028]
[203.26831055 -303.33688354]
[201.58885193 -288.43118286]
[200.03808594 -273.51156616]
[198.48733521 -258.59194946]
[197.06539917 -243.65950012]
[195.77238464 -228.71533203]
[202.38378906 -215.36846924]
[193.48571777 -202.28662109]
[192.19270325 -187.34245300]
[190.89970398 -172.39828491]
[199.18289185 -156.93968201]
[188.54370117 -141.92474365]
[187.50883484 -126.96048737]
[186.47396851 -111.99622345]
[198.66981506 -103.26344299]
[212.50311279 -109.06344604]
[226.33639526 -114.86344910]
[240.16969299 -120.66345215]
[254.00299072 -126.46344757]
[267.83627319 -132.26345825]
[280.10552979 -143.96397400]
[294.74523926 -135.41323853]
[290.58135986 -118.97856903]
[273.63629150 -118.43016052]
[259.80297852 -112.63015747]
[245.96969604 -106.83015442]
[232.13639832 -101.03015900]
[218.30311584 -95.23015594]
[204.46981812 -89.43015289]
[219.25741577 -86.91477203]
[228.54083252 -75.13266754]
[227.52703857 -60.16696930]
[216.73945618 -49.74449158]
[201.74772644 -49.24639130]
[190.29212952 -58.92983627]
[188.28767395 -73.79723358]
[182.01365662 -60.17237854]
[175.73963928 -46.54752350]
[169.46562195 -32.92266846]
[163.19160461 -19.29780960]
[156.91758728 -5.67295408]
[150.64356995 7.95190239]
[156.02970886 21.79116249]
[149.86105347 35.69808197]
[135.30863953 41.25371933]
[129.03462219 54.87857819]
[122.76060486 68.50343323]
[116.48658752 82.12828827]
[124.24867249 91.72714233]
[126.54773712 104.50576019]
[122.21712494 117.42247009]
[111.74415588 127.10515594]
[97.28774261 130.72691345]
[96.51132202 145.70680237]
[95.73490143 160.68670654]
[94.95848083 175.66659546]
[94.18206024 190.64648438]
[93.40563965 205.62637329]
[92.62921906 220.60627747]
[94.77195740 224.45043945]
[95.49109650 228.38037109]
[94.93698883 231.93328857]
[93.39614105 234.74418640]
[91.24695587 236.58206177]
[89.43890381 251.47270203]
[87.63085175 266.36334229]
[85.82280731 281.25396729]
[84.01475525 296.14459229]
[82.20670319 311.03524780]
[80.39865112 325.92587280]
[78.59060669 340.81649780]
[76.78255463 355.70712280]
[74.97450256 370.59777832]
[86.84754181 361.43093872]
[101.84036255 361.89511108]
[113.12359619 371.77886963]
[115.55764008 386.58004761]
[108.03376770 399.55664062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[23 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[38 46]
[39 45]
[56 151]
[57 150]
[58 149]
[59 148]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 117]
[70 116]
[71 115]
[74 113]
[75 112]
[76 111]
[78 109]
[79 108]
[81 107]
[82 106]
[83 105]
[85 104]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
