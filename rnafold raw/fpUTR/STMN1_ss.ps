%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCGGCCAAUGCGGAGCCCCGCGCGGAGGUCACGUGCCUCUGUUUGGCGCUUUUGUGCGCGCCCGGGUCUGUUGGUGCUCAGAGUGUGGUCAGGCGGCUCGGACUGAGCAGGACUUUCCUUAUCCCAGUUGAUUGUGCAGAAUACACUGCCUGUCGCUUGUCUUCUAUUCACC\
) } def
/len { sequence length } bind def

/coor [
[-113.47220612 138.63505554]
[-128.47161865 138.50193787]
[-143.47102356 138.36882019]
[-158.47042847 138.23570251]
[-173.46984863 138.10258484]
[-187.33813477 145.71711731]
[-199.99624634 137.86717224]
[-214.99565125 137.73405457]
[-229.99505615 137.60093689]
[-237.84826660 150.72627258]
[-251.12911987 158.10975647]
[-266.22222900 157.85595703]
[-279.07583618 150.13319397]
[-286.28945923 137.10134888]
[-301.28884888 136.96823120]
[-316.28826904 136.83511353]
[-331.28768921 136.70199585]
[-346.28707886 136.56887817]
[-360.15539551 144.18339539]
[-372.81347656 136.33346558]
[-387.81289673 136.20034790]
[-399.04226685 146.99566650]
[-414.25189209 146.64698792]
[-424.47439575 135.87498474]
[-439.47381592 135.74186707]
[-454.47320557 135.60874939]
[-469.47262573 135.47563171]
[-484.47201538 135.34251404]
[-498.34033203 142.95704651]
[-510.99844360 135.10710144]
[-524.86669922 142.72161865]
[-537.52484131 134.87167358]
[-544.89031982 146.54333496]
[-556.96923828 152.99308777]
[-570.54901123 152.62702942]
[-582.07751465 145.64810181]
[-588.59222412 133.97499084]
[-603.58691406 133.57568359]
[-618.58160400 133.17637634]
[-633.57629395 132.77705383]
[-648.57098389 132.37774658]
[-658.80175781 144.20417786]
[-674.24902344 146.63644409]
[-687.61901855 138.52610779]
[-692.59881592 123.70263672]
[-686.83715820 109.16519928]
[-673.05444336 101.77794647]
[-657.75854492 105.02890015]
[-648.17163086 117.38307190]
[-633.17694092 117.78237915]
[-618.18231201 118.18168640]
[-603.18762207 118.58099365]
[-588.19293213 118.98030090]
[-578.62982178 105.65533447]
[-562.85412598 100.59469604]
[-547.00988770 105.97684479]
[-537.39172363 119.87226868]
[-524.59625244 112.24822235]
[-510.86532593 120.10768890]
[-498.06988525 112.48364258]
[-484.33892822 120.34310150]
[-469.33950806 120.47621918]
[-454.34008789 120.60933685]
[-439.34069824 120.74245453]
[-424.34127808 120.87557220]
[-413.92922974 110.28668213]
[-398.71578979 110.20800781]
[-387.67977905 121.20093536]
[-372.68035889 121.33405304]
[-359.88494873 113.70999908]
[-346.15396118 121.56946564]
[-331.15457153 121.70258331]
[-316.15515137 121.83570099]
[-301.15573120 121.96881866]
[-286.15634155 122.10192871]
[-278.71255493 109.20016479]
[-265.72390747 101.70673370]
[-250.62867737 101.72086334]
[-237.48095703 109.33888245]
[-229.86193848 122.60153198]
[-214.86253357 122.73464966]
[-199.86312866 122.86776733]
[-187.06768799 115.24372101]
[-173.33673096 123.10317993]
[-158.33731079 123.23629761]
[-143.33790588 123.36941528]
[-128.33850098 123.50253296]
[-113.33908844 123.63565063]
[-98.37687683 122.57159424]
[-86.95705414 113.00933075]
[-72.15075684 118.58463287]
[-57.32114029 116.33020020]
[-45.90131760 106.76792908]
[-31.09501839 112.34323120]
[-16.26540184 110.08879852]
[-1.43578589 107.83435822]
[13.39383030 105.57992554]
[28.22344589 103.32548523]
[43.05306244 101.07105255]
[57.88267899 98.81661224]
[72.71229553 96.56217957]
[76.29071045 80.83892059]
[88.94356537 68.41454315]
[107.87018585 64.41456604]
[127.50341034 71.75162506]
[140.75178528 64.71738434]
[154.00016785 57.68314743]
[167.24853516 50.64891434]
[180.49691772 43.61467743]
[189.05717468 30.30931854]
[203.92662048 31.17465591]
[213.79949951 13.62289238]
[233.06332397 15.06919193]
[246.05369568 7.56919146]
[259.04406738 0.06919169]
[272.03445435 -7.43080854]
[282.72839355 -20.58665848]
[298.33047485 -13.95256138]
[296.27471924 2.87629032]
[279.53445435 5.55957270]
[266.54406738 13.05957317]
[253.55369568 20.55957222]
[240.56332397 28.05957222]
[238.80540466 38.16422272]
[231.61280823 45.78138733]
[221.19715881 48.21573257]
[210.96086121 44.42303467]
[203.34822083 57.22525406]
[187.53115845 56.86305237]
[174.28277588 63.89728928]
[161.03439331 70.93152618]
[147.78602600 77.96576691]
[134.53764343 85.00000000]
[134.53764343 92.50000000]
[149.53764343 92.50000000]
[164.53764343 92.50022888]
[164.53718567 107.50022888]
[149.53764343 107.50000000]
[134.53764343 107.50000000]
[134.53764343 115.00000000]
[147.78602600 122.03423309]
[161.03439331 129.06846619]
[174.28277588 136.10270691]
[189.31843567 131.23397827]
[203.35476685 138.49739075]
[208.06425476 153.58369446]
[200.65284729 167.54243469]
[185.51759338 172.09216309]
[171.63798523 164.53358459]
[167.24853516 149.35108948]
[154.00016785 142.31684875]
[140.75178528 135.28260803]
[127.50341034 128.24838257]
[104.71685028 135.13661194]
[84.76688385 127.54616547]
[74.96672821 111.39179230]
[60.13711548 113.64623260]
[45.30749893 115.90066528]
[30.47788239 118.15510559]
[15.64826679 120.40953827]
[0.81865078 122.66397858]
[-14.01096535 124.91841125]
[-28.84058189 127.17285156]
[-41.32111359 136.89637756]
[-55.06670380 131.15980530]
[-69.89631653 133.41424561]
[-82.37685394 143.13777161]
[-96.12243652 137.40121460]
[-83.24302673 145.09020996]
[-76.45198822 158.46488953]
[-77.84383392 173.40017700]
[-86.98928070 185.28968811]
[-101.06767273 190.46646118]
[-115.73691559 187.33383179]
[-126.47267914 176.85798645]
[-129.96382141 162.26989746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 85]
[5 84]
[7 82]
[8 81]
[9 80]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[20 69]
[21 68]
[24 65]
[25 64]
[26 63]
[27 62]
[28 61]
[30 59]
[32 57]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[89 168]
[91 166]
[92 165]
[94 163]
[95 162]
[96 161]
[97 160]
[98 159]
[99 158]
[100 157]
[101 156]
[105 133]
[106 132]
[107 131]
[108 130]
[109 129]
[111 127]
[113 123]
[114 122]
[115 121]
[116 120]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
