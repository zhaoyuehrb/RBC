%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAUGCUCAGAGCCGCGGUCACGCGCCCGCCCGAAGGCUCCUGUCGGGACAGGGCGCCGCCCCGUGUCGGCCCCCGCAGAGCUCGCGGCCCCCGCCUGUCCGGGCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[201.15711975 229.15596008]
[200.15393066 223.75311279]
[190.37332153 212.38035583]
[180.59269714 201.00759888]
[170.81208801 189.63484192]
[153.99940491 184.81179810]
[150.57643127 166.78283691]
[140.48883057 155.68148804]
[130.40121460 144.58012390]
[115.64051056 146.38554382]
[102.49153900 139.06649780]
[96.09885406 125.24668884]
[99.10421753 110.13794708]
[91.68079376 106.70401764]
[88.89778137 98.59284973]
[79.11717224 87.22009277]
[69.33655548 75.84733582]
[59.55594635 64.47457886]
[49.31764603 53.51203537]
[38.63885498 42.97811890]
[27.96006393 32.44420242]
[13.18636608 36.40464783]
[-1.48920429 32.46453857]
[-12.15130806 21.77875900]
[-16.00737953 7.28784180]
[-12.11858749 -7.09071445]
[-22.79738045 -17.62463188]
[-33.47617340 -28.15854836]
[-44.15496445 -38.69246292]
[-54.83375549 -49.22637939]
[-65.51255035 -59.76029587]
[-76.33422089 -70.14737701]
[-87.43558502 -80.23498535]
[-98.67369080 -90.17002106]
[-109.91179657 -100.10505676]
[-121.14990234 -110.04009247]
[-132.38800049 -119.97512817]
[-143.76075745 -129.75573730]
[-155.26605225 -139.38011169]
[-171.50471497 -141.66873169]
[-177.39028931 -156.97534180]
[-166.86819458 -169.55378723]
[-150.76266479 -166.46447754]
[-145.64169312 -150.88539124]
[-134.13639832 -141.26103210]
[-126.88880920 -139.35725403]
[-122.45297241 -131.21324158]
[-111.21486664 -121.27819824]
[-99.97675323 -111.34316254]
[-88.73864746 -101.40812683]
[-77.50054169 -91.47309113]
[-70.30765533 -89.37204742]
[-66.09592438 -81.10990906]
[-58.96311188 -78.81318665]
[-54.97863007 -70.43908691]
[-44.29983902 -59.90517426]
[-33.62104797 -49.37125778]
[-22.94225502 -38.83734131]
[-12.26346302 -28.30342293]
[-1.58467138 -17.76950645]
[12.73942757 -21.85432816]
[27.28166199 -18.19654274]
[38.11207581 -7.68138695]
[42.25226593 6.93899775]
[38.49398041 21.76541138]
[49.17277145 32.29932785]
[59.85156250 42.83324432]
[63.49503708 43.12645340]
[67.15864563 45.28590012]
[69.92550659 49.29112244]
[70.92870331 54.69396210]
[80.70931244 66.06671906]
[90.48992920 77.43947601]
[100.27053833 88.81223297]
[110.20558167 100.05033875]
[125.53222656 98.50110626]
[138.67860413 106.18394470]
[144.70892334 119.97158813]
[141.50257874 134.49252319]
[151.59017944 145.59387207]
[161.67779541 156.69523621]
[174.58642578 158.11795044]
[182.75993347 167.68632507]
[182.18484497 179.85423279]
[191.96545410 191.22698975]
[201.74607849 202.59974670]
[211.52668762 213.97250366]
[221.76498413 224.93504333]
[232.44377136 235.46894836]
[243.12257385 246.00286865]
[253.80136108 256.53677368]
[264.48016357 267.07070923]
[279.73837280 271.25369263]
[283.36557007 285.69989014]
[294.04434204 296.23382568]
[304.72314453 306.76773071]
[315.40194702 317.30163574]
[331.20214844 316.94308472]
[342.57025146 327.92227173]
[342.76171875 343.72537231]
[331.66299438 354.97677612]
[315.85873413 355.00115967]
[304.72531128 343.78408813]
[304.86801147 327.98043823]
[294.18920898 317.44653320]
[283.51043701 306.91259766]
[272.83163452 296.37869263]
[258.33724976 292.94915771]
[253.94622803 277.74948120]
[243.26744080 267.21557617]
[232.58865356 256.68167114]
[221.90986633 246.14775085]
[211.23106384 235.61383057]
[207.58758545 235.32061768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 87]
[3 86]
[4 85]
[5 84]
[7 81]
[8 80]
[9 79]
[13 75]
[15 74]
[16 73]
[17 72]
[18 71]
[19 67]
[20 66]
[21 65]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[32 53]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 45]
[39 44]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[97 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
