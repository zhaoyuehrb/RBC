%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGCCUGGGCCAGGCGGCAGCUAAGGCCCGCGGUGACAGCAUGGGUGAAGGGGAGCGGGGCAGAGGAGGCCUUGGGCUGUUUUCGGCGGCGGGUGGGGGCGAGGGGCUGGCGGGUCAGAGUCCCGGGUCCAGGCCGGGGCUCUGACUCGCGGUUGGUGUUCCCCCGACCCCGCAGCGCGGGGUGUCCUGUCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-59.43630219 269.05581665]
[-82.37506866 264.45037842]
[-92.21399689 275.77270508]
[-88.18176270 292.19586182]
[-94.66617584 307.63412476]
[-108.93042755 316.08285522]
[-125.25476837 314.38439941]
[-134.91642761 325.85839844]
[-144.57807922 337.33239746]
[-154.15022278 348.88116455]
[-163.63226318 360.50399780]
[-173.11431885 372.12686157]
[-182.59635925 383.74972534]
[-192.07839966 395.37258911]
[-201.56045532 406.99545288]
[-204.08088684 425.23291016]
[-220.71199036 430.82443237]
[-230.01213074 442.59335327]
[-239.31227112 454.36227417]
[-241.14767456 470.65838623]
[-256.28439331 476.96804810]
[-269.15106201 466.80041504]
[-266.51156616 450.61508179]
[-251.08119202 445.06213379]
[-241.78105164 433.29321289]
[-232.48091125 421.52429199]
[-233.57592773 409.47283936]
[-225.91787720 399.59085083]
[-213.18330383 397.51339722]
[-203.70126343 385.89053345]
[-194.21920776 374.26766968]
[-184.73716736 362.64483643]
[-175.25512695 351.02197266]
[-165.77307129 339.39910889]
[-163.97943115 332.22378540]
[-156.05206299 327.67071533]
[-146.39041138 316.19674683]
[-136.72875977 304.72274780]
[-141.12544250 292.11251831]
[-138.69567871 278.87057495]
[-129.96923828 268.47689819]
[-117.14470673 263.71649170]
[-103.53633881 265.93377686]
[-93.69741058 254.61143494]
[-97.51333618 248.54243469]
[-100.09171295 241.84278870]
[-101.33239746 234.76229858]
[-101.18520355 227.56570435]
[-99.65189362 220.52287292]
[-96.78630066 213.89862061]
[-92.69240570 207.94271851]
[-87.52057648 202.88055420]
[-81.46208191 198.90455627]
[-74.74195862 196.16691589]
[-67.61070251 194.77371216]
[-60.33492661 194.78083801]
[-53.18736267 196.19177246]
[-46.43666840 198.95729065]
[-40.33731461 202.97718811]
[-28.71445847 193.49514771]
[-17.09160233 184.01310730]
[-5.46874523 174.53105164]
[6.15411139 165.04901123]
[17.77696800 155.56697083]
[20.97493362 148.89796448]
[29.65510941 146.02952576]
[34.84365463 132.06785583]
[50.46839142 129.58226013]
[62.23730469 120.28211212]
[74.00621796 110.98197174]
[85.77513123 101.68183136]
[91.11901855 88.76151276]
[104.92472076 86.54925537]
[116.69364166 77.24911499]
[128.46255493 67.94896698]
[140.23146057 58.64882660]
[152.00038147 49.34868240]
[163.76928711 40.04854202]
[169.79963684 25.42166138]
[184.58258057 23.60127258]
[196.35148621 14.30112934]
[208.12040710 5.00098562]
[219.88931274 -4.29915762]
[221.35321045 -8.40448856]
[223.80372620 -11.51409626]
[226.80523682 -13.43975639]
[229.90582275 -14.15456104]
[232.69143677 -13.78421116]
[245.01576233 -22.33469582]
[257.34008789 -30.88517952]
[262.61199951 -38.35380554]
[269.92324829 -39.47105408]
[282.37905884 -47.82883835]
[285.55358887 -63.07876205]
[298.30462646 -71.37730408]
[312.82354736 -68.25689697]
[325.27935791 -76.61468506]
[330.66677856 -84.00041962]
[337.99450684 -85.00382996]
[350.57879639 -93.16689301]
[363.16308594 -101.32995605]
[375.74737549 -109.49301910]
[388.33166504 -117.65608215]
[400.91598511 -125.81914520]
[413.50027466 -133.98220825]
[414.77362061 -147.39526367]
[423.41528320 -157.47723389]
[436.09844971 -160.69131470]
[448.13510132 -156.08071899]
[460.84481812 -164.04708862]
[473.55453491 -172.01345825]
[486.26425171 -179.97982788]
[498.97396851 -187.94619751]
[504.58847046 -195.16081238]
[511.94387817 -195.93583679]
[524.77593994 -203.70358276]
[537.60803223 -211.47132874]
[550.44012451 -219.23907471]
[563.27215576 -227.00682068]
[576.10424805 -234.77456665]
[588.93634033 -242.54231262]
[601.76837158 -250.31005859]
[614.60046387 -258.07778931]
[627.43255615 -265.84555054]
[640.26464844 -273.61328125]
[653.09667969 -281.38104248]
[665.92877197 -289.14877319]
[678.76086426 -296.91650391]
[691.59289551 -304.68426514]
[704.42498779 -312.45199585]
[706.64160156 -327.93170166]
[718.32415771 -338.32647705]
[733.95660400 -338.72824097]
[746.15771484 -328.94729614]
[749.16650391 -313.60189819]
[741.56237793 -299.93768311]
[726.93566895 -294.40646362]
[712.19274902 -299.61993408]
[699.36065674 -291.85220337]
[686.52856445 -284.08444214]
[673.69653320 -276.31671143]
[660.86444092 -268.54895020]
[648.03234863 -260.78121948]
[635.20031738 -253.01347351]
[622.36822510 -245.24572754]
[609.53613281 -237.47798157]
[596.70404053 -229.71023560]
[583.87200928 -221.94248962]
[571.03991699 -214.17474365]
[558.20782471 -206.40699768]
[545.37579346 -198.63925171]
[532.54370117 -190.87150574]
[519.71160889 -183.10375977]
[506.94033813 -175.23648071]
[494.23062134 -167.27011108]
[481.52090454 -159.30374146]
[468.81118774 -151.33737183]
[456.10144043 -143.37100220]
[453.04748535 -126.83612061]
[438.69909668 -117.43806458]
[421.66333008 -121.39791107]
[409.07904053 -113.23484802]
[396.49475098 -105.07178497]
[383.91046143 -96.90872192]
[371.32617188 -88.74566650]
[358.74185181 -80.58260345]
[346.15756226 -72.41954041]
[333.63714600 -64.15886688]
[321.18130493 -55.80107880]
[318.56488037 -41.18294907]
[306.05194092 -32.52952957]
[290.73684692 -35.37301636]
[278.28103638 -27.01523399]
[265.89059448 -18.56084442]
[253.56625366 -10.01036072]
[241.24191284 -1.45987654]
[229.18945312 7.46975660]
[217.42054749 16.76989937]
[205.65162659 26.07004356]
[193.88272095 35.37018585]
[188.69416809 49.33185577]
[173.06944275 51.81745529]
[161.30052185 61.11759949]
[149.53161621 70.41773987]
[137.76269531 79.71788788]
[125.99378204 89.01802826]
[114.22486877 98.31816864]
[108.88098145 111.23848724]
[95.07527924 113.45074463]
[83.30635834 122.75088501]
[71.53744507 132.05102539]
[59.76853561 141.35116577]
[53.73819733 155.97805786]
[38.95525360 157.79844666]
[27.25901413 167.18981934]
[15.63615799 176.67185974]
[4.01330137 186.15391541]
[-7.60955524 195.63595581]
[-19.23241234 205.11801147]
[-30.85526848 214.60005188]
[-27.16464806 238.06398010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[7 38]
[8 37]
[9 36]
[10 34]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[17 26]
[18 25]
[19 24]
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[66 194]
[68 192]
[69 191]
[70 190]
[71 189]
[73 187]
[74 186]
[75 185]
[76 184]
[77 183]
[78 182]
[80 180]
[81 179]
[82 178]
[83 177]
[88 176]
[89 175]
[90 174]
[92 173]
[93 172]
[96 169]
[97 168]
[99 167]
[100 166]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[109 158]
[110 157]
[111 156]
[112 155]
[113 154]
[115 153]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
