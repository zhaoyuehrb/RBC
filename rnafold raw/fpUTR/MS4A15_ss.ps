%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCUCACAAGGGCGGGCUCUCAGAAGAGCUGCCCCCACCCCCUCUCCCAGCCCCCUUCAGCUGAAAUUGUCUAAGAACUCAUUCUUGGCGUUCACUGCAAGCUAUAAGCUCUGCAAGUGGUGACCCCGACGUGAUCGCCUUGAAGUUACGCUUGAAGGAGGAAAACUCAUCAAUUUUCGGGGAAUCCCGCCUUUGUUUCCCAGGCUCUCUGAGCACG\
) } def
/len { sequence length } bind def

/coor [
[82.15391541 371.27035522]
[89.97570801 364.03366089]
[86.80143738 349.37338257]
[75.09717560 346.18203735]
[65.80355835 338.27258301]
[60.72214508 327.09780884]
[60.87202835 314.75070190]
[66.28610992 303.57269287]
[75.99320984 295.70950317]
[73.23696899 280.96490479]
[70.48072815 266.22033691]
[67.72448730 251.47572327]
[64.96823883 236.73112488]
[62.21199799 221.98652649]
[59.45575714 207.24194336]
[56.69951248 192.49734497]
[53.94327164 177.75274658]
[51.18702698 163.00814819]
[36.73083115 159.00584412]
[26.78399086 170.23350525]
[16.83715057 181.46116638]
[6.89031124 192.68882751]
[-3.05652881 203.91648865]
[-5.80484343 220.08370972]
[-21.27223206 225.53274536]
[-33.54716873 214.65809631]
[-30.00225449 198.64666748]
[-14.28419018 193.96965027]
[-4.33735037 182.74198914]
[5.60948944 171.51432800]
[15.55632973 160.28666687]
[25.50317001 149.05900574]
[22.74421883 142.08489990]
[8.79600143 147.60279846]
[-5.15221548 153.12071228]
[-19.10043144 158.63861084]
[-33.04864883 164.15650940]
[-46.99686432 169.67442322]
[-60.94508362 175.19232178]
[-74.89329529 180.71022034]
[-88.84160614 186.22789001]
[-94.35904694 172.27949524]
[-80.41120148 166.76200867]
[-66.46298218 161.24411011]
[-52.51476669 155.72619629]
[-38.56655121 150.20829773]
[-24.61833572 144.69039917]
[-10.67011833 139.17248535]
[3.27809834 133.65458679]
[17.22631454 128.13668823]
[14.46736336 121.16257477]
[-0.46864909 119.77854919]
[-15.40466213 118.39452362]
[-30.34067345 117.01049805]
[-40.47920990 128.75740051]
[-55.59376526 132.26878357]
[-69.87248993 126.19443512]
[-77.82492065 112.87007904]
[-76.39318848 97.41919708]
[-66.12781525 85.78297424]
[-50.97605896 82.43576050]
[-36.76406860 88.66464996]
[-28.95664978 102.07448578]
[-14.02063656 103.45851135]
[0.91537631 104.84253693]
[15.85138893 106.22656250]
[18.95377159 99.39830017]
[4.04827929 97.71713257]
[1.04129708 83.02162170]
[14.08844280 75.62081146]
[25.15853500 85.74176788]
[28.26091766 78.91349792]
[19.89321136 75.26908112]
[17.31409836 68.34896088]
[6.59501982 57.85604095]
[-4.12405968 47.36312103]
[-14.84313869 36.87020111]
[-25.56221771 26.37728500]
[-36.28129578 15.88436604]
[-47.00037766 5.39144707]
[-63.01090240 1.84248579]
[-67.68394470 -13.87675953]
[-56.21228790 -25.59567642]
[-40.39698029 -21.25884819]
[-36.50745773 -5.32763243]
[-25.78837776 5.16528654]
[-15.06929970 15.65820503]
[-4.35022020 26.15112305]
[6.36885929 36.64404297]
[17.08793831 47.13695908]
[27.80701828 57.62987900]
[38.60040665 68.04634857]
[55.34776306 55.92627716]
[73.37754822 50.43366241]
[90.40847015 51.14579010]
[89.76897430 36.15943146]
[89.12947845 21.17306709]
[88.48998260 6.18670607]
[87.85048676 -8.79965591]
[87.10448456 -23.78109360]
[86.25202179 -38.75685120]
[85.39955902 -53.73260880]
[84.44068146 -68.70192719]
[83.37542725 -83.66405487]
[82.31017303 -98.62618256]
[81.24491882 -113.58831024]
[74.08899689 -128.95805359]
[86.87713623 -140.08909607]
[101.11327362 -130.88209534]
[96.20704651 -114.65356445]
[97.27230072 -99.69143677]
[98.33755493 -84.72930908]
[99.40280914 -69.76718140]
[103.01053619 -63.32325745]
[100.37532043 -54.58507156]
[101.22778320 -39.60931396]
[102.08024597 -24.63355637]
[105.59600830 -18.13899803]
[102.83684540 -9.43915272]
[103.47634125 5.54720879]
[104.11583710 20.53357124]
[104.75533295 35.51993179]
[105.39483643 50.50629425]
[117.86545563 53.52897263]
[129.14935303 59.63854980]
[138.49694824 68.42919159]
[145.28733826 79.31697083]
[159.71472168 75.21202087]
[174.14210510 71.10707855]
[188.56948853 67.00213623]
[202.99688721 62.89719009]
[217.42427063 58.79224396]
[226.01173401 41.89887238]
[243.91522217 36.74296570]
[259.62371826 46.15319824]
[273.92858887 41.63978958]
[288.23345947 37.12637711]
[302.53833008 32.61296463]
[316.56356812 27.29389191]
[326.01757812 14.60799980]
[340.79248047 16.49272728]
[354.49276733 10.38518429]
[368.19305420 4.27764225]
[381.89334106 -1.82990003]
[391.34738159 -14.51579285]
[406.12225342 -12.63106537]
[419.82254028 -18.73860741]
[433.52282715 -24.84614944]
[447.22311401 -30.95369148]
[459.22793579 -42.92534256]
[474.05502319 -34.70375061]
[470.25924683 -18.18017387]
[453.33065796 -17.25340271]
[439.63037109 -11.14586067]
[425.93008423 -5.03831863]
[412.22979736 1.06922376]
[403.75570679 13.31826401]
[388.00088501 11.87038898]
[374.30059814 17.97793198]
[360.60031128 24.08547401]
[346.90002441 30.19301605]
[338.42593384 42.44205475]
[322.67111206 40.99418259]
[337.02236938 45.35781479]
[346.15554810 57.25677109]
[346.66052246 72.24826813]
[338.34875488 84.73484802]
[324.32366943 90.05432129]
[309.82186890 86.22052765]
[300.25799561 74.66491699]
[299.20294189 59.70206451]
[307.05172729 46.91782761]
[292.74685669 51.43124008]
[278.44201660 55.94465256]
[264.13714600 60.45806122]
[261.19320679 71.47185516]
[253.21798706 79.78525543]
[242.10716248 83.25528717]
[230.58337402 80.91054535]
[221.52920532 73.21962738]
[207.10182190 77.32457733]
[192.67443848 81.42951965]
[178.24705505 85.53446198]
[163.81967163 89.63941193]
[149.39228821 93.74435425]
[151.01031494 116.69489288]
[141.77713013 139.59399414]
[122.21607971 157.28788757]
[95.27837372 165.15985107]
[65.93162537 160.25190735]
[68.68786621 174.99650574]
[71.44410706 189.74110413]
[74.20035553 204.48568726]
[76.95659637 219.23028564]
[79.71283722 233.97488403]
[82.46907806 248.71948242]
[85.22532654 263.46408081]
[87.98156738 278.20867920]
[90.73780823 292.95327759]
[107.34405518 300.24780273]
[116.16485596 315.91586304]
[113.82966614 333.58523560]
[101.46172333 346.19912720]
[104.63599396 360.85940552]
[122.08248138 370.83798218]
[126.48596191 390.13485718]
[115.44158936 406.19024658]
[119.23799133 420.70187378]
[123.03438568 435.21350098]
[126.83078766 449.72512817]
[136.68905640 463.51828003]
[126.16397858 476.80960083]
[110.47845459 470.37524414]
[112.31916046 453.52154541]
[108.52275848 439.00988770]
[104.72636414 424.49826050]
[100.92996216 409.98663330]
[91.01346588 407.38378906]
[83.00711823 400.85140991]
[78.39543915 391.51437378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[51 66]
[52 65]
[53 64]
[54 63]
[72 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 117]
[101 116]
[102 115]
[103 113]
[104 112]
[105 111]
[106 110]
[127 185]
[128 184]
[129 183]
[130 182]
[131 181]
[132 180]
[135 175]
[136 174]
[137 173]
[138 172]
[139 163]
[141 161]
[142 160]
[143 159]
[144 158]
[146 156]
[147 155]
[148 154]
[149 153]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
