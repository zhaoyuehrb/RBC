%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCAGCAGGAGAGGAAAAAGGGUGGGCGCGCGGGUGGGCCCGGGAGGCGGAGACCUUCGGGAAGCUGGGGCCACGCGGCGGUGCAGGCGACGGGACUGCAGUGCCACCUCUCCCGAGAAACCCACACGCUCGCACGCCCGCGCGCGCACGCACGUGCACACGGUGGGCAGGGAGAAAACGAGAGAGUCUGAGUGCUGGGCGCGUUUUAGCG\
) } def
/len { sequence length } bind def

/coor [
[96.68476868 300.89547729]
[95.01189423 291.89981079]
[97.70432281 283.01116943]
[104.27954865 276.25860596]
[102.08539581 261.41995239]
[99.89125061 246.58129883]
[97.69709778 231.74264526]
[95.50294495 216.90399170]
[93.30879974 202.06533813]
[79.38873291 192.62579346]
[76.54791260 175.70594788]
[87.02626038 161.69660950]
[84.61451721 146.89175415]
[82.20278168 132.08691406]
[68.03793335 137.02220154]
[53.51612473 133.26493835]
[43.52236938 122.07901001]
[41.41848373 107.22728729]
[47.91219711 93.70576477]
[60.81907654 86.06295776]
[75.79735565 86.86985779]
[87.80873871 95.85537720]
[77.59846497 84.86672974]
[67.38818359 73.87808990]
[57.17790985 62.88944626]
[46.96763611 51.90080261]
[31.90590286 47.05778885]
[28.91080093 32.46742630]
[18.70052528 21.47878456]
[8.49025059 10.49014187]
[-6.57148170 5.64712811]
[-9.56658363 -8.94323254]
[-19.77685928 -19.93187523]
[-29.98713303 -30.92051888]
[-45.04886627 -35.76353073]
[-48.04396820 -50.35389328]
[-58.25424194 -61.34253693]
[-68.46451569 -72.33117676]
[-78.67479706 -83.31982422]
[-88.88507080 -94.30846405]
[-108.40086365 -99.36376190]
[-111.88892365 -118.38404083]
[-122.49552155 -128.99064636]
[-133.17968750 -139.51910400]
[-143.86386108 -150.04757690]
[-154.54803467 -160.57603455]
[-165.23220825 -171.10449219]
[-175.91636658 -181.63296509]
[-188.81402588 -189.29130554]
[-203.17211914 -193.63241577]
[-217.53021240 -197.97351074]
[-231.33987427 -190.76716614]
[-245.83918762 -195.37420654]
[-252.62422180 -208.58399963]
[-261.74194336 -208.07199097]
[-267.16036987 -213.09564209]
[-281.45318604 -217.64704895]
[-295.74600220 -222.19845581]
[-304.87026978 -221.82034302]
[-310.21435547 -226.92300415]
[-324.43881226 -231.68373108]
[-338.66329956 -236.44445801]
[-354.61691284 -232.64785767]
[-365.68350220 -244.75003052]
[-360.47869873 -260.30130005]
[-344.35678101 -263.30386353]
[-333.90255737 -250.66893005]
[-319.67810059 -245.90820312]
[-305.45364380 -241.14747620]
[-291.19461060 -236.49127197]
[-276.90179443 -231.93988037]
[-262.60894775 -227.38847351]
[-248.28311157 -222.94209290]
[-235.31585693 -230.17988586]
[-220.69287109 -225.98193359]
[-213.18911743 -212.33160400]
[-198.83102417 -207.99050903]
[-184.47293091 -203.64941406]
[-174.50709534 -214.86019897]
[-180.50067139 -228.61073303]
[-186.49423218 -242.36126709]
[-192.48780823 -256.11178589]
[-205.09477234 -265.67083740]
[-203.08743286 -280.42956543]
[-209.08100891 -294.18008423]
[-215.07456970 -307.93060303]
[-221.06814575 -321.68115234]
[-227.06172180 -335.43167114]
[-239.66868591 -344.99072266]
[-237.66134644 -359.74942017]
[-252.00747681 -366.93051147]
[-255.19665527 -382.65338135]
[-244.78242493 -394.85681152]
[-228.75367737 -394.17935181]
[-219.40631104 -381.14068604]
[-223.91081238 -365.74301147]
[-211.73255920 -357.16751099]
[-213.31120300 -341.42523193]
[-207.31762695 -327.67471313]
[-201.32405090 -313.92419434]
[-195.33047485 -300.17364502]
[-189.33689880 -286.42312622]
[-177.15864563 -277.84762573]
[-178.73728943 -262.10537720]
[-172.74371338 -248.35484314]
[-166.75013733 -234.60430908]
[-160.75656128 -220.85377502]
[-158.43356323 -213.93554688]
[-158.00541687 -207.19966125]
[-159.25309753 -201.11785889]
[-161.84896851 -196.06921387]
[-165.38790894 -192.31712341]
[-154.70373535 -181.78866577]
[-144.01957703 -171.26020813]
[-133.33540344 -160.73173523]
[-122.65122986 -150.20327759]
[-111.96706390 -139.67481995]
[-104.99799347 -137.21952820]
[-101.20475006 -128.91250610]
[-91.02423859 -129.75704956]
[-81.86649323 -124.75453186]
[-76.86981201 -115.34427643]
[-77.89642334 -104.51873779]
[-67.68614960 -93.53009796]
[-57.47587585 -82.54145813]
[-47.26559830 -71.55281067]
[-37.05532455 -60.56417084]
[-22.72389984 -56.50713730]
[-18.99849129 -41.13079453]
[-8.78821564 -30.14215088]
[1.42206001 -19.15350914]
[15.75348568 -15.09647560]
[19.47889328 0.27986634]
[29.68916893 11.26850986]
[39.89944458 22.25715256]
[54.23086929 26.31418419]
[57.95627975 41.69052887]
[68.16655731 52.67916870]
[78.37683105 63.66781235]
[88.58710480 74.65645599]
[98.79737854 85.64510345]
[112.91357422 90.71788025]
[127.78283691 88.74179840]
[140.44343567 79.25390625]
[154.07908630 85.24709320]
[168.94834900 83.27101135]
[183.81761169 81.29492950]
[198.60435486 78.77458191]
[213.28866577 75.71336365]
[227.97297668 72.65215302]
[242.65728760 69.59094238]
[254.51995850 58.26799011]
[270.17901611 63.13891983]
[273.52575684 79.19293213]
[261.11737061 89.91503143]
[245.71850586 84.27525330]
[231.03419495 87.33646393]
[216.34988403 90.39767456]
[201.66557312 93.45889282]
[212.60081482 103.72634125]
[211.54170227 118.68891144]
[199.26922607 127.31363678]
[184.83270264 123.24092865]
[178.87721252 109.47386169]
[185.79370117 96.16419220]
[170.92443848 98.14028168]
[156.05516052 100.11636353]
[144.45812988 109.46290588]
[129.75892639 103.61106110]
[114.88965607 105.58714294]
[110.41915131 111.60915375]
[124.41554260 117.00368500]
[138.41194153 122.39820862]
[152.40834045 127.79273987]
[167.36778259 126.69050598]
[181.28082275 132.29650879]
[191.29711914 143.46224976]
[195.36465454 157.90022278]
[192.65010071 172.65255737]
[183.70959473 184.69694519]
[170.37477112 191.56590271]
[155.37750244 191.85215759]
[141.79026794 185.49710083]
[132.39663696 173.80267334]
[129.12110901 159.16183472]
[119.90678406 147.32562256]
[110.69245911 135.48939514]
[101.47813416 123.65316772]
[97.00762939 129.67517090]
[99.41936493 144.48002625]
[101.83110809 159.28486633]
[113.59461975 165.84213257]
[119.35033417 177.80232239]
[117.19921875 190.70271301]
[108.14745331 199.87118530]
[110.34160614 214.70983887]
[112.53575134 229.54849243]
[114.72990417 244.38714600]
[116.92405701 259.22579956]
[119.11820221 274.06445312]
[133.42701721 290.01855469]
[125.01484680 308.86663818]
[127.86016846 323.59429932]
[130.70549011 338.32196045]
[143.93647766 346.96582031]
[147.09826660 362.45062256]
[138.31498718 375.58947754]
[122.79763794 378.58737183]
[109.75237274 369.66567993]
[106.91871643 354.11749268]
[115.97782135 341.16729736]
[113.13250732 326.43963623]
[110.28718567 311.71194458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[12 191]
[13 190]
[14 189]
[22 141]
[23 140]
[24 139]
[25 138]
[26 137]
[28 135]
[29 134]
[30 133]
[32 131]
[33 130]
[34 129]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[42 119]
[43 117]
[44 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 78]
[50 77]
[51 76]
[54 73]
[56 72]
[57 71]
[58 70]
[60 69]
[61 68]
[62 67]
[79 107]
[80 106]
[81 105]
[82 104]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[90 96]
[142 170]
[143 169]
[145 167]
[146 166]
[147 165]
[148 159]
[149 158]
[150 157]
[151 156]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
