%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGUAGUGCUUAGAGGCCGAAAAAGUACAGCCCCUUCCGGGCUCCGCGGUACGGGAAGACAGCUUUGGGAUGUCGGAAGAUCCUAGAGGUCCCAAGGUAGCUGACUUGCGAAGCUGAGGCUCCAGCCGAGGGCUCCAGGCCUCUGACCGGCCCAGCAGUGAGCGCGGCUGCCCGACGCUUCAGGGCCGGGAGCAGGGAGCGUGAGUCGCC\
) } def
/len { sequence length } bind def

/coor [
[110.92911530 118.14565277]
[100.69514465 120.28733063]
[91.14454651 117.27859497]
[79.67761993 126.94863129]
[68.21068573 136.61866760]
[56.74375916 146.28869629]
[45.27682877 155.95872498]
[39.71511459 170.77014160]
[24.99760437 173.06013489]
[13.53067398 182.73016357]
[2.06374335 192.40020752]
[1.77051699 203.27130127]
[-4.33088064 212.00700378]
[-14.02866268 215.86213684]
[-24.03238487 213.78840637]
[-35.77953720 223.11601257]
[-47.52668762 232.44363403]
[-53.52283096 247.08456421]
[-68.30148315 248.93948364]
[-80.04863739 258.26708984]
[-91.79578400 267.59472656]
[-92.40952301 278.45245361]
[-98.76591492 287.00439453]
[-108.57318115 290.57180786]
[-118.51139069 288.20391846]
[-130.52854919 297.18099976]
[-142.54570007 306.15808105]
[-142.20507812 321.67141724]
[-151.07566833 334.40298462]
[-165.74653625 339.45718384]
[-180.57644653 334.89062500]
[-189.86299133 322.45922852]
[-190.03529358 306.94311523]
[-181.02711487 294.30853271]
[-166.30227661 289.41378784]
[-151.52278137 294.14093018]
[-139.50563049 285.16384888]
[-127.48847961 276.18676758]
[-121.17719269 257.90869141]
[-101.12340546 255.84756470]
[-89.37625122 246.51994324]
[-77.62909698 237.19233704]
[-72.47319031 223.21858215]
[-56.85430527 220.69648743]
[-45.10715485 211.36886597]
[-33.36000061 202.04124451]
[-27.59056091 183.58496094]
[-7.60628796 180.93327332]
[3.86064219 171.26324463]
[15.32757282 161.59321594]
[20.06909370 147.47346497]
[35.60679626 144.49179077]
[47.07372665 134.82176208]
[58.54065704 125.15173340]
[70.00758362 115.48169708]
[81.47451782 105.81166840]
[81.59482574 88.64785767]
[96.16857910 76.47655487]
[86.75458527 64.79851532]
[77.34059143 53.12046814]
[62.65584183 47.23245621]
[60.69198227 32.46788788]
[51.27798843 20.78984070]
[41.86399460 9.11179638]
[32.45000458 -2.56624913]
[23.03601074 -14.24429417]
[13.36597919 -25.71122551]
[3.44464135 -36.96142960]
[-6.47669601 -48.21163177]
[-16.39803314 -59.46183395]
[-26.31937027 -70.71203613]
[-36.24070740 -81.96224213]
[-46.16204453 -93.21244049]
[-61.09286880 -98.44513702]
[-63.70789337 -113.10838318]
[-73.62923431 -124.35858917]
[-83.71541595 -135.46124268]
[-93.96425629 -146.41392517]
[-104.21308899 -157.36660767]
[-119.45018005 -164.80081177]
[-116.52455139 -181.50042725]
[-99.66767120 -183.31204224]
[-93.26040649 -167.61544800]
[-83.01156616 -156.66276550]
[-72.76273346 -145.71008301]
[-68.10535431 -144.65904236]
[-64.05825043 -140.67204285]
[-62.37902832 -134.27992249]
[-52.45769119 -123.02972412]
[-38.23650742 -118.60172272]
[-34.91184235 -103.13378143]
[-24.99050522 -91.88357544]
[-15.06916809 -80.63337708]
[-5.14783049 -69.38317108]
[4.77350664 -58.13296890]
[14.69484425 -46.88276672]
[24.61618233 -35.63256073]
[28.09181213 -35.04759216]
[31.45705605 -32.75101852]
[33.91095352 -28.81293106]
[34.71405411 -23.65828705]
[44.12804794 -11.98024178]
[53.54204178 -0.30219638]
[62.95603180 11.37584877]
[72.37002563 23.05389404]
[86.38142395 28.10661316]
[89.01863861 43.70647430]
[98.43263245 55.38452148]
[107.84661865 67.06256866]
[121.30582428 73.68449402]
[136.30215454 74.01631927]
[151.29847717 74.34815216]
[157.26754761 71.51105499]
[162.92449951 72.03462219]
[166.73045349 74.91743469]
[181.71046448 75.69142914]
[196.69047546 76.46542358]
[210.87150574 69.45050812]
[223.18258667 77.83422089]
[237.36361694 70.81931305]
[249.67469788 79.20302582]
[264.65472412 79.97702026]
[279.63473511 80.75101471]
[294.61474609 81.52500153]
[309.59475708 82.29899597]
[325.79797363 73.54891968]
[340.13870239 83.66490936]
[355.12850952 84.21788025]
[370.12197876 84.66029358]
[384.37408447 79.98297882]
[396.25753784 70.82963562]
[408.14096069 61.67628860]
[420.02441406 52.52294159]
[426.23583984 37.97204208]
[441.04025269 36.33528519]
[446.78430176 20.97501564]
[463.00115967 18.53662300]
[473.00830078 31.52851295]
[466.51123047 46.58574677]
[450.19360352 48.21872711]
[444.83215332 62.11492157]
[429.17776489 64.40638733]
[417.29431152 73.55973053]
[405.41088867 82.71308136]
[393.52743530 91.86642456]
[394.84793091 99.24925995]
[408.95599365 104.34460449]
[397.48898315 114.01493073]
[398.80947876 121.39776611]
[413.12902832 125.86437225]
[427.44857788 130.33097839]
[441.76812744 134.79759216]
[456.08767700 139.26419067]
[470.40722656 143.73080444]
[484.72677612 148.19740295]
[500.20486450 144.92042542]
[510.05084229 156.09658813]
[514.24725342 154.99467468]
[518.18066406 155.25802612]
[521.45452881 156.63653564]
[523.79388428 158.77703857]
[525.06896973 161.27186584]
[539.10021973 166.57502747]
[553.13146973 171.87818909]
[567.16278076 177.18135071]
[581.19403076 182.48449707]
[595.26403809 187.68403625]
[609.37200928 192.77967834]
[623.47991943 197.87532043]
[639.51885986 194.45687866]
[650.29626465 206.81726074]
[644.72534180 222.24116516]
[628.53692627 224.86180115]
[618.38433838 211.98327637]
[604.27636719 206.88763428]
[590.16839600 201.79199219]
[582.81060791 202.47616577]
[575.89086914 196.51577759]
[561.85961914 191.21261597]
[547.82836914 185.90945435]
[533.79705811 180.60629272]
[519.76580811 175.30314636]
[505.58422852 170.41613770]
[491.13034058 174.01258850]
[480.26016235 162.51695251]
[465.94061279 158.05035400]
[451.62106323 153.58374023]
[437.30151367 149.11712646]
[422.98196411 144.65052795]
[408.66241455 140.18391418]
[394.34286499 135.71731567]
[369.79013062 99.65662384]
[363.03445435 102.65088654]
[354.57553101 99.20768738]
[339.58572388 98.65471649]
[330.51312256 106.65418243]
[318.02130127 106.31711578]
[308.82077026 97.27901459]
[293.84075928 96.50502014]
[278.86074829 95.73102570]
[263.88070679 94.95703888]
[248.90069580 94.18304443]
[235.79113770 101.25331879]
[222.40859985 92.81423950]
[209.29904175 99.88451385]
[195.91648865 91.44544220]
[180.93647766 90.67144775]
[165.95645142 89.89745331]
[150.96664429 89.34448242]
[135.97032166 89.01264954]
[120.97399139 88.68081665]
[122.94794464 100.29773712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[9 50]
[10 49]
[11 48]
[15 46]
[16 45]
[17 44]
[19 42]
[20 41]
[21 40]
[25 38]
[26 37]
[27 36]
[58 109]
[59 108]
[60 107]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[75 89]
[76 88]
[77 85]
[78 84]
[79 83]
[110 211]
[111 210]
[112 209]
[115 208]
[116 207]
[117 206]
[119 204]
[121 202]
[122 201]
[123 200]
[124 199]
[125 198]
[127 195]
[128 194]
[129 192]
[130 145]
[131 144]
[132 143]
[133 142]
[135 140]
[149 191]
[150 190]
[151 189]
[152 188]
[153 187]
[154 186]
[155 185]
[157 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
