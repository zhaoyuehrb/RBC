%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUCCUCCAGUCCCUCCCUCGGCCGCCUCUCCUCCCGGAGCGAGCGCGCAGCCCUGCGCAGCAGCGCCCACUGGUCCCGUCCUGUGAGCCCCGGCCCCAGCCGCGGACAGACCCGCGGAGUCGCCUCCCGGCCCACCCGCCCGGCCGCCGAGGAGCGGGAGGAGGACGGGACCCCGGCGCCCCCACCCCAUCCCCGGGAGAACUCUAAGAAGGAGCUGAUGUGGAGGAGCAGCUGAGACAGUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[139.44465637 1014.02301025]
[138.87930298 999.03363037]
[138.31394958 984.04431152]
[137.74859619 969.05493164]
[137.18324280 954.06561279]
[128.53784180 945.62768555]
[127.92980957 933.16137695]
[136.22819519 923.30889893]
[135.85124207 908.31365967]
[135.38008118 893.32104492]
[134.81474304 878.33166504]
[134.24938965 863.34234619]
[133.68403625 848.35302734]
[132.93035889 833.37194824]
[131.89447021 818.40777588]
[130.76455688 803.45037842]
[129.63465881 788.49298096]
[128.50476074 773.53564453]
[127.37485504 758.57824707]
[126.15100098 743.62823486]
[124.73937225 728.69482422]
[123.23394775 713.77056885]
[121.72852325 698.84631348]
[120.22309875 683.92199707]
[118.71766663 668.99774170]
[109.55950928 661.11932373]
[108.16991425 648.71582031]
[115.83328247 638.36169434]
[114.51551056 623.41967773]
[113.19774628 608.47766113]
[109.48888397 602.10711670]
[111.95850372 593.33984375]
[110.82860565 578.38244629]
[108.94860840 563.50073242]
[106.32325745 548.73223877]
[103.69791412 533.96380615]
[101.07257080 519.19531250]
[98.44721985 504.42687988]
[95.82187653 489.65841675]
[93.19653320 474.88992310]
[88.94234467 468.86981201]
[90.63220215 459.91949463]
[86.45401001 453.84637451]
[88.25620270 444.91796875]
[86.00281525 430.08819580]
[73.75772858 421.42462158]
[59.02341843 424.23532104]
[44.30706406 427.13858032]
[29.60923576 430.13421631]
[14.91141033 433.12988281]
[0.21358481 436.12551880]
[-14.48424053 439.12118530]
[-26.39732170 450.39108276]
[-42.03448486 445.45031738]
[-45.30955887 429.38153076]
[-32.85342789 418.71490479]
[-17.47989082 424.42333984]
[-2.78206491 421.42770386]
[11.91576099 418.43203735]
[26.61358643 415.43640137]
[41.31141281 412.44076538]
[47.22271347 408.03662109]
[56.21269989 409.50103760]
[70.94700623 406.69030762]
[73.80288696 379.93475342]
[94.24966431 365.32330322]
[93.87271118 350.32806396]
[93.49575806 335.33279419]
[93.11880493 320.33752441]
[92.74185944 305.34225464]
[82.99004364 299.47766113]
[77.21035004 289.53659058]
[76.93269348 277.92108154]
[82.34106445 267.50268555]
[92.19948578 260.91259766]
[92.19948578 245.91259766]
[92.19948578 230.91259766]
[92.19948578 215.91259766]
[92.19948578 200.91259766]
[92.19948578 185.91259766]
[92.19948578 170.91259766]
[92.19948578 155.91259766]
[92.19948578 140.91259766]
[92.19948578 125.91259003]
[92.19948578 110.91259003]
[71.31733704 89.75040436]
[66.50318146 75.54393005]
[61.68902588 61.33745575]
[49.93196487 50.75057220]
[53.17521286 36.21335983]
[48.36105728 22.00688362]
[43.54690170 7.80040932]
[26.24124146 0.04327134]
[20.22968864 -17.60551834]
[28.89927101 -33.74929428]
[23.72962761 -47.83030319]
[18.55998230 -61.91130829]
[4.68576717 -63.57952118]
[-7.06303024 -71.02257538]
[-14.42808437 -82.74241638]
[-16.02279663 -96.42560577]
[-11.59303188 -109.39991760]
[-2.05562711 -119.15619659]
[-7.04792023 -133.30105591]
[-12.04021358 -147.44590759]
[-17.03250694 -161.59077454]
[-22.02479935 -175.73562622]
[-27.01709366 -189.88047791]
[-41.38102341 -196.47238159]
[-46.79827118 -211.31922913]
[-40.05488205 -225.61265564]
[-25.15158653 -230.87263489]
[-10.93024731 -223.97850037]
[-5.82813215 -209.02043152]
[-12.87223530 -194.87277222]
[-7.87994194 -180.72792053]
[-2.88764858 -166.58306885]
[2.10464454 -152.43820190]
[7.09693766 -138.29335022]
[12.08923054 -124.14849091]
[28.05298805 -121.57025909]
[40.60587692 -111.22800446]
[46.25568390 -95.87602997]
[43.36876297 -79.67871857]
[32.64099121 -67.08095551]
[37.81063461 -52.99994659]
[42.98027802 -38.91893768]
[54.09840775 -36.49437332]
[62.76287079 -28.93414879]
[66.75376129 -18.02222633]
[64.97521973 -6.41921043]
[57.75337601 2.98625517]
[62.56753159 17.19272995]
[67.38168335 31.39920425]
[78.79440308 40.96994400]
[75.89550018 56.52330017]
[80.70965576 70.72977448]
[85.52381134 84.93624878]
[100.30847931 87.46875000]
[109.57637024 75.67442322]
[112.01918793 60.04294586]
[125.96660614 54.81620407]
[135.23449707 43.02187729]
[144.50239563 31.22755051]
[153.77029419 19.43322372]
[155.97244263 1.13943267]
[172.52395630 -4.72506285]
[181.64291382 -16.63491821]
[180.96607971 -32.66368866]
[193.16990662 -43.07744217]
[208.89265442 -39.88763809]
[216.07318115 -25.54122162]
[209.20318604 -11.04353619]
[193.55276489 -7.51596403]
[184.43380737 4.39389181]
[185.71665955 16.40622711]
[178.23884583 26.39923477]
[165.56462097 28.70111847]
[156.29672241 40.49544525]
[147.02882385 52.28977203]
[137.76094055 64.08409882]
[135.98101807 78.87197113]
[121.37069702 84.94232178]
[112.10280609 96.73664856]
[107.19948578 110.91259003]
[107.19948578 125.91259003]
[107.19948578 140.91259766]
[107.19948578 155.91259766]
[107.19948578 170.91259766]
[107.19948578 185.91259766]
[107.19948578 200.91259766]
[107.19948578 215.91259766]
[107.19948578 230.91259766]
[107.19948578 245.91259766]
[107.19948578 260.91259766]
[121.10004425 273.81350708]
[121.12931061 292.45800781]
[107.73712158 304.96530151]
[108.11406708 319.96057129]
[108.49102020 334.95584106]
[108.86797333 349.95111084]
[109.24492645 364.94635010]
[116.86867523 367.43710327]
[123.64216614 371.92773438]
[129.04455566 378.14093018]
[132.64265442 385.66488647]
[134.12538147 393.98034668]
[133.32981873 402.49645996]
[130.25701904 410.59277344]
[125.07598114 417.66427612]
[118.11521912 423.16677856]
[109.84229279 426.65841675]
[100.83259583 427.83480835]
[103.08597565 442.66461182]
[105.43249512 457.47991943]
[107.96499634 472.26458740]
[110.59033966 487.03305054]
[113.21569061 501.80151367]
[115.84103394 516.57000732]
[118.46637726 531.33843994]
[121.09172821 546.10693359]
[123.71707153 560.87536621]
[131.28225708 547.92285156]
[144.97645569 541.80169678]
[159.67304993 544.80340576]
[169.87016296 555.80426025]
[171.75035095 570.68591309]
[164.60974121 583.87731934]
[151.12153625 590.43994141]
[136.33522034 587.91705322]
[125.78598785 577.25256348]
[126.91589355 592.20989990]
[128.13975525 607.15991211]
[129.45751953 622.10192871]
[130.77528381 637.04394531]
[141.69294739 651.88702393]
[133.64193726 667.49230957]
[135.14735413 682.41656494]
[136.65278625 697.34088135]
[138.15821838 712.26513672]
[139.66363525 727.18939209]
[143.62962341 735.38909912]
[141.09300232 742.31048584]
[144.95562744 750.55938721]
[142.33224487 757.44830322]
[143.46214294 772.40570068]
[144.59204102 787.36309814]
[145.72193909 802.32049561]
[146.85185242 817.27789307]
[150.61051941 825.57464600]
[147.90077209 832.43011475]
[151.21466064 838.10375977]
[151.18870544 843.75494385]
[148.67337036 847.78765869]
[149.23872375 862.77697754]
[149.80407715 877.76635742]
[150.36943054 892.75567627]
[153.81271362 901.18823242]
[150.84651184 907.93670654]
[151.22346497 922.93194580]
[161.18757629 938.43127441]
[152.17259216 953.50024414]
[152.73794556 968.48962402]
[153.30328369 983.47894287]
[153.86863708 998.46826172]
[154.43399048 1013.45764160]
[163.61633301 1027.04504395]
[156.19816589 1041.67041016]
[139.81066895 1042.28845215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 246]
[2 245]
[3 244]
[4 243]
[5 242]
[8 240]
[9 239]
[10 237]
[11 236]
[12 235]
[13 234]
[14 231]
[15 229]
[16 228]
[17 227]
[18 226]
[19 225]
[20 223]
[21 221]
[22 220]
[23 219]
[24 218]
[25 217]
[28 215]
[29 214]
[30 213]
[32 212]
[33 211]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[42 195]
[44 194]
[45 193]
[46 64]
[47 63]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[66 182]
[67 181]
[68 180]
[69 179]
[70 178]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[86 138]
[87 137]
[88 136]
[90 134]
[91 133]
[92 132]
[95 127]
[96 126]
[97 125]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[139 164]
[140 163]
[142 161]
[143 160]
[144 159]
[145 158]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
