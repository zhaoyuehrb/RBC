%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCAGUGGCCGAGCGGCGUCGUGGGGUUACCCCGCCCGCGCCAGCGCUGCAUCCCUGGCCGCUACCCGGGGAGAGCCGGAGGAUGAAUUGAACCUCGCAGCCGCUGCUAUCUCCAGUGCUCAUCACAGGGUGUGGUGUCUAUCUGAAGAAUAUUUUACUUUCAAAGGAAAG\
) } def
/len { sequence length } bind def

/coor [
[93.13775635 144.24427795]
[85.63775635 144.24427795]
[81.64720154 158.70372009]
[77.65664673 173.16316223]
[73.66609955 187.62260437]
[78.31333923 203.34950256]
[66.82246399 215.04957581]
[51.01429367 210.68679810]
[47.15092087 194.74922180]
[59.20665359 183.63204956]
[63.19720459 169.17260742]
[67.18775940 154.71316528]
[71.17831421 140.25372314]
[65.07408142 110.49980164]
[78.11445618 91.62847137]
[66.55675507 82.06711578]
[54.99905777 72.50575256]
[40.11733627 70.62575531]
[26.54493141 77.01244354]
[12.97252655 83.39913177]
[-0.59987932 89.78582764]
[-14.17228508 96.17251587]
[-24.30727577 111.52809906]
[-41.71458054 109.41793060]
[-55.17015076 116.04722595]
[-68.62572479 122.67652893]
[-82.08129883 129.30583191]
[-95.53686523 135.93511963]
[-108.99243927 142.56442261]
[-120.52854156 154.98837280]
[-135.66047668 147.34239197]
[-132.50224304 130.68521118]
[-115.62173462 129.10885620]
[-102.16616821 122.47955322]
[-88.71059418 115.85025024]
[-75.25502014 109.22095490]
[-61.79944992 102.59165955]
[-48.34387970 95.96235657]
[-44.14292908 84.59635162]
[-32.95899582 78.97148132]
[-20.55897522 82.60010529]
[-6.98656893 76.21341705]
[6.58583689 69.82672882]
[20.15824318 63.44004059]
[33.73064804 57.05335236]
[39.25251770 43.10670471]
[33.73064804 29.16005707]
[28.20878029 15.21340942]
[22.68691254 1.26676190]
[17.04008293 -12.62975979]
[11.26874828 -26.47503662]
[5.49741364 -40.32031250]
[-0.27392107 -54.16559219]
[-17.87980843 -45.88877106]
[-42.03502274 -55.26441574]
[-52.87694550 -65.63035583]
[-63.71886826 -75.99629974]
[-74.56079102 -86.36223602]
[-85.40271759 -96.72817230]
[-96.24463654 -107.09411621]
[-107.08656311 -117.46005249]
[-122.60928345 -115.56822205]
[-135.68815613 -124.14009094]
[-140.14775085 -139.12829590]
[-133.88235474 -153.45585632]
[-119.85032654 -160.35772705]
[-104.67713928 -156.57508850]
[-95.52711487 -143.89395142]
[-96.72061920 -128.30197144]
[-85.87870026 -117.93603516]
[-75.03677368 -107.57009888]
[-64.19485474 -97.20416260]
[-53.35292816 -86.83821869]
[-42.51100540 -76.47228241]
[-31.66908264 -66.10633850]
[-24.62395096 -68.67852020]
[-29.76830673 -82.76878357]
[-34.91242981 -96.85913849]
[-20.82199478 -102.00302124]
[-15.67804241 -87.91313934]
[-10.53368473 -73.82287598]
[-3.48855186 -76.39505768]
[-1.87599778 -91.30812836]
[-0.26344395 -106.22119904]
[1.34911001 -121.13426208]
[-4.85978222 -135.68624878]
[4.20090532 -147.50798035]
[-5.90226603 -159.66122437]
[-4.36946726 -175.39100647]
[7.88991928 -185.36512756]
[23.60261726 -183.66610718]
[33.44656372 -171.30195618]
[31.58151436 -155.60809326]
[19.11397552 -145.89541626]
[25.43820953 -132.41012573]
[16.26218033 -119.52171326]
[14.64962673 -104.60864258]
[13.03707218 -89.69557190]
[11.42451859 -74.78250122]
[13.57135582 -59.93692398]
[19.34269142 -46.09164810]
[25.11402512 -32.24637222]
[30.88536072 -18.40109444]
[36.37963104 -13.42028141]
[36.63356018 -4.25510645]
[42.15542603 9.69154072]
[47.67729568 23.63818741]
[53.19916534 37.58483505]
[64.56041718 60.94805527]
[76.11811829 70.50941467]
[87.67581940 80.07077789]
[118.33612823 68.47458649]
[149.47486877 101.81388855]
[164.45976257 102.48686218]
[179.44465637 103.15983582]
[193.57806396 96.04946899]
[205.94538879 104.34998322]
[220.93028259 105.02295685]
[235.91517639 105.69592285]
[244.65953064 91.68150330]
[259.19036865 84.02430725]
[275.50643921 84.72606659]
[289.16836548 93.50127411]
[296.50656128 107.88064575]
[311.50112915 108.28451538]
[326.49569702 108.68838501]
[341.49023438 109.09225464]
[356.48480225 109.49612427]
[371.47937012 109.89999390]
[386.47393799 110.30386353]
[402.47012329 104.68618011]
[412.29644775 118.50209808]
[401.74066162 131.76904297]
[386.07006836 125.29842377]
[371.07550049 124.89455414]
[356.08093262 124.49068451]
[341.08636475 124.08681488]
[326.09179688 123.68294525]
[311.09725952 123.27907562]
[296.10269165 122.87520599]
[289.72973633 134.97439575]
[278.70831299 143.18103027]
[265.16009521 145.84403992]
[251.72418213 142.38647461]
[241.04289246 133.42930603]
[235.24220276 120.68082428]
[220.25730896 120.00785065]
[205.27241516 119.33487701]
[192.21083069 126.49337769]
[178.77168274 118.14472961]
[163.78678894 117.47175598]
[148.80189514 116.79878235]
[144.12571716 122.66252136]
[156.95356750 130.43725586]
[171.49882507 134.10266113]
[176.29368591 148.31565857]
[166.94129944 160.04310608]
[152.01770020 158.53108215]
[145.20764160 145.16616821]
[134.77337646 134.38998413]
[130.09719849 140.25372314]
[134.08775330 154.71316528]
[138.07830811 169.17260742]
[142.06886292 183.63204956]
[146.05940247 198.09150696]
[158.11514282 209.20866394]
[154.25177002 225.14624023]
[138.44360352 229.50901794]
[126.95272064 217.80894470]
[131.59996033 202.08204651]
[127.60941315 187.62260437]
[123.61885834 173.16316223]
[119.62830353 158.70372009]
[115.63775635 144.24427795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[15 111]
[16 110]
[17 109]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[46 108]
[47 107]
[48 106]
[49 105]
[50 103]
[51 102]
[52 101]
[53 100]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[82 99]
[83 98]
[84 97]
[85 96]
[87 94]
[113 152]
[114 151]
[115 150]
[117 148]
[118 147]
[119 146]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
