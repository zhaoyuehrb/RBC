%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCGGGCCGGUGGGAGCCAGCGGCGCGCGGUGGGACCCACGGAGCCCCGCGACCCGCCGAGCCUGGAGCCGGGCCGGGUCGGGGAAGCCGGCUCCAGCCCGGAGCGAACUUCGCAGCCCGUCGGGGGGCGGCGGGGAGGGGGCCCGGAGCCGGAGGAGGGGGCGGCCGCGGGCACCCCCGCCUGUGCCCCGGCGUCCCCGGGCACC\
) } def
/len { sequence length } bind def

/coor [
[165.21636963 126.22603607]
[150.78181458 122.14636993]
[136.34727478 118.06670380]
[121.91271210 113.98703003]
[102.12644958 125.90911865]
[80.66108704 117.37269592]
[67.08487701 123.75129700]
[53.50867081 130.12989807]
[39.93246460 136.50851440]
[26.35625648 142.88711548]
[12.78004932 149.26571655]
[-0.74829590 155.74520874]
[-14.22803020 162.32524109]
[-27.70776367 168.90527344]
[-41.18750000 175.48530579]
[-54.66723251 182.06532288]
[-68.14696503 188.64535522]
[-81.62670135 195.22538757]
[-82.47152710 205.86070251]
[-87.61548615 215.11526489]
[-96.07183075 221.35174561]
[-106.27493286 223.49877930]
[-116.36991119 221.23454285]
[-124.54988098 215.03302002]
[-138.30998230 221.00457764]
[-152.07008362 226.97613525]
[-165.83020020 232.94770813]
[-175.40939331 245.53933716]
[-190.16488647 243.50839233]
[-203.92498779 249.47994995]
[-213.50419617 262.07159424]
[-228.25967407 260.04064941]
[-237.83888245 272.63229370]
[-252.59437561 270.60131836]
[-266.35446167 276.57287598]
[-280.11456299 282.54446411]
[-293.87469482 288.51602173]
[-305.99746704 300.36819458]
[-320.74240112 292.00015259]
[-316.78320312 275.51498413]
[-299.84625244 274.75592041]
[-286.08615112 268.78433228]
[-272.32604980 262.81277466]
[-258.56594849 256.84121704]
[-249.97094727 244.67671204]
[-234.23124695 246.28053284]
[-225.63626099 234.11601257]
[-209.89654541 235.71984863]
[-196.13644409 229.74829102]
[-187.54145813 217.58377075]
[-171.80175781 219.18759155]
[-158.04165649 213.21603394]
[-144.28155518 207.24447632]
[-130.52145386 201.27290344]
[-124.71796417 182.67630005]
[-106.83295441 174.21284485]
[-88.20672607 181.74565125]
[-74.72699738 175.16561890]
[-61.24726105 168.58558655]
[-47.76752472 162.00556946]
[-34.28779221 155.42553711]
[-20.80805779 148.84550476]
[-7.32832336 142.26548767]
[-2.69638467 136.50640869]
[6.40144444 135.68951416]
[19.97765160 129.31091309]
[33.55385971 122.93230438]
[47.13006592 116.55369568]
[60.70627213 110.17509460]
[74.28247833 103.79648590]
[74.37639618 95.61424255]
[77.00906372 87.86653137]
[81.91966248 81.32099152]
[75.04024506 67.99156189]
[68.16083527 54.66213226]
[61.28142166 41.33270264]
[54.40200806 28.00327301]
[47.52259827 14.67384338]
[34.31787109 5.95915413]
[35.35638046 -8.89920235]
[28.47696877 -22.22863197]
[21.49851608 -35.50647736]
[14.42141056 -48.73200607]
[7.34430552 -61.95753479]
[0.26719984 -75.18305969]
[-6.80990553 -88.40859222]
[-21.68577003 -94.41593170]
[-26.12570763 -109.83237457]
[-16.72377777 -122.83172607]
[-0.69233590 -123.44200897]
[9.67066669 -111.19506073]
[6.41562176 -95.48569489]
[13.49272728 -82.26016998]
[20.56983376 -69.03463745]
[27.64693832 -55.80911255]
[34.72404480 -42.58358383]
[40.65150070 -38.16917038]
[41.80639648 -29.10804367]
[48.68581009 -15.77861500]
[61.39847183 -8.01733589]
[60.85202408 7.79443073]
[67.73143768 21.12385941]
[74.61084747 34.45328903]
[81.49026489 47.78271866]
[88.36967468 61.11214828]
[95.24909210 74.44157410]
[96.71876526 74.21167755]
[98.19919586 74.06621552]
[101.52145386 59.43875504]
[104.84371185 44.81129456]
[108.16596985 30.18383408]
[105.77791595 13.39891434]
[121.24578857 6.45765352]
[132.19772339 19.39950752]
[122.79343414 33.50609207]
[119.47116852 48.13355255]
[116.14891052 62.76101303]
[112.82665253 77.38847351]
[122.35039520 86.72355652]
[125.99237823 99.55248260]
[140.42694092 103.63214874]
[154.86148071 107.71181488]
[169.29603577 111.79148102]
[183.84565735 115.43956757]
[198.49745178 118.65283966]
[213.14923096 121.86611938]
[228.28651428 117.26467896]
[239.06086731 127.54878235]
[253.71264648 130.76205444]
[268.36444092 133.97532654]
[283.01623535 137.18859863]
[297.66802979 140.40187073]
[312.31979370 143.61514282]
[326.97158813 146.82841492]
[342.10888672 142.22698975]
[352.88320923 152.51107788]
[367.53500366 155.72436523]
[382.18679810 158.93763733]
[396.83859253 162.15090942]
[411.49035645 165.36418152]
[433.88647461 155.66468811]
[451.07284546 171.97807312]
[465.97940063 173.64961243]
[480.88598633 175.32115173]
[495.79257202 176.99269104]
[510.71115112 178.55320740]
[525.64099121 180.00262451]
[540.57080078 181.45205688]
[555.50061035 182.90147400]
[570.43041992 184.35089111]
[582.56414795 174.58308411]
[597.68444824 176.26568604]
[606.92175293 187.89355469]
[621.85156250 189.34297180]
[636.78137207 190.79238892]
[651.71118164 192.24180603]
[660.57458496 179.69842529]
[674.52886963 173.28181458]
[689.82049561 174.71798706]
[702.33599854 183.62062073]
[708.70886230 197.59497070]
[707.22473145 212.88198853]
[698.28289795 225.36955261]
[684.28869629 231.69857788]
[669.00634766 230.16656494]
[656.54687500 221.18563843]
[650.26177979 207.17161560]
[635.33197021 205.72219849]
[620.40216064 204.27278137]
[605.47235107 202.82336426]
[594.17089844 212.45727539]
[579.00927734 211.20004272]
[568.98095703 199.28070068]
[554.05114746 197.83128357]
[539.12133789 196.38185120]
[524.19152832 194.93243408]
[509.26174927 193.48301697]
[502.30047607 195.96548462]
[494.12100220 191.89926147]
[479.21444702 190.22772217]
[464.30786133 188.55618286]
[449.40130615 186.88464355]
[446.06494141 191.85266113]
[441.44415283 195.71850586]
[435.89135742 198.15794373]
[429.83850098 198.95668030]
[423.76324463 198.02897644]
[418.15139771 195.42628479]
[413.45806885 191.33483887]
[410.07067871 186.06257629]
[408.27709961 180.01596069]
[393.62530518 176.80268860]
[378.97351074 173.58941650]
[364.32174683 170.37614441]
[349.66995239 167.16287231]
[335.58065796 171.99414062]
[323.75833130 161.48020935]
[309.10653687 158.26693726]
[294.45474243 155.05366516]
[279.80294800 151.84039307]
[265.15115356 148.62712097]
[250.49937439 145.41383362]
[235.84759521 142.20056152]
[221.75830078 147.03182983]
[209.93595886 136.51789856]
[195.28417969 133.30462646]
[180.63238525 130.09135437]
[178.20159912 131.48757935]
[175.07130432 132.00506592]
[171.57339478 131.37255859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 123]
[2 122]
[3 121]
[4 120]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[12 63]
[13 62]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[24 54]
[25 53]
[26 52]
[27 51]
[29 49]
[30 48]
[32 46]
[34 44]
[35 43]
[36 42]
[37 41]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[80 99]
[81 98]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[108 118]
[109 117]
[110 116]
[111 115]
[124 207]
[125 206]
[126 205]
[128 203]
[129 202]
[130 201]
[131 200]
[132 199]
[133 198]
[134 197]
[136 195]
[137 194]
[138 193]
[139 192]
[140 191]
[142 182]
[143 181]
[144 180]
[145 179]
[146 177]
[147 176]
[148 175]
[149 174]
[150 173]
[153 170]
[154 169]
[155 168]
[156 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
