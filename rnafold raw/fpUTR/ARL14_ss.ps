%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAAGCUACAACAUAAACACAUCUAGGUUCUUGUUCUUAGAAUACAGCAUGAAGAAUUUGCUUUCUUCUUUCUUCCUAACAUUUUCAUGUGAGAUCCAGAAAGGACACAUUGUCUCUGGCCAUUCGAAGAAAGAAAGAAAGAAAAAAAAAAAAGGUAUUUAGAGACAGAGAGAGAAAAAGGCUGAA\
) } def
/len { sequence length } bind def

/coor [
[-76.96760559 916.30047607]
[-89.34675598 906.94439697]
[-93.83010864 892.08917236]
[-88.69372559 877.44683838]
[-75.91265106 868.64776611]
[-75.66201019 853.64984131]
[-75.41136169 838.65191650]
[-75.16071320 823.65405273]
[-83.20797729 821.27819824]
[-90.64152527 817.36798096]
[-97.17173004 812.07189941]
[-102.54341888 805.59259033]
[-106.54585266 798.17895508]
[-109.02096558 790.11669922]
[-109.86962128 781.71722412]
[-109.05560303 773.30572510]
[-106.60707855 765.20837402]
[-102.61571503 757.73999023]
[-97.23321533 751.19158936]
[-90.66554260 745.81903076]
[-83.16506195 741.83306885]
[-75.02084351 739.39117432]
[-66.54750061 738.59118652]
[-63.80575562 723.84393311]
[-61.06400681 709.09661865]
[-62.76379395 705.98602295]
[-63.02972031 701.89294434]
[-61.41448593 697.50573730]
[-57.79758835 693.68713379]
[-54.32028580 679.09570312]
[-50.84298325 664.50433350]
[-47.36568069 649.91296387]
[-43.88837814 635.32159424]
[-51.88644409 622.80895996]
[-48.56782532 607.96166992]
[-35.38917160 599.65740967]
[-31.91186905 585.06604004]
[-28.43456650 570.47460938]
[-24.95726395 555.88323975]
[-29.53335190 541.70904541]
[-18.80766678 530.07843018]
[-15.33036518 515.48706055]
[-11.85306263 500.89569092]
[-8.37576103 486.30432129]
[-4.89845848 471.71292114]
[-1.42115617 457.12155151]
[-14.32754803 451.29556274]
[-25.93629265 443.17919922]
[-35.84541702 433.05154419]
[-43.71144485 421.26144409]
[-49.26129913 408.21533203]
[-52.30178070 394.36328125]
[-52.72629929 380.18356323]
[-50.51860428 366.16598511]
[-45.75340652 352.79507446]
[-38.59384537 340.53335571]
[-29.28590012 329.80520630]
[-18.14995384 320.98233032]
[-5.56975412 314.37078857]
[8.02080917 310.20037842]
[22.15266609 308.61669922]
[36.33775711 309.67608643]
[40.30068970 295.20904541]
[44.26362228 280.74200439]
[48.22655106 266.27496338]
[52.18948364 251.80792236]
[56.15241241 237.34088135]
[60.11534500 222.87384033]
[63.95726395 208.37420654]
[67.67790222 193.84297180]
[71.39853668 179.31172180]
[75.11917114 164.78048706]
[78.83980560 150.24925232]
[82.56044006 135.71801758]
[86.28108215 121.18677521]
[90.00171661 106.65554047]
[89.75106812 91.65763092]
[85.54695129 77.25883484]
[74.25192261 66.18034363]
[78.11197662 51.79461670]
[73.90785980 37.39581680]
[69.70374298 22.99701881]
[65.49961853 8.59822178]
[53.28067398 -2.33929729]
[56.90773773 -18.33230972]
[72.64960480 -22.92857361]
[84.31239319 -11.39984894]
[79.89842224 4.39410257]
[84.10253906 18.79290009]
[88.30665588 33.19169998]
[92.51078033 47.59049606]
[103.50509644 57.63908768]
[99.94574738 73.05471802]
[104.14986420 87.45351410]
[111.61219788 88.20423126]
[126.53686523 89.70566559]
[133.99920654 90.45638275]
[140.98712158 77.18351746]
[147.97503662 63.91064835]
[154.96295166 50.63777924]
[161.95085144 37.36491013]
[161.74198914 32.10943222]
[163.41423035 27.74360275]
[166.30886841 24.83757019]
[169.63607788 23.61501503]
[177.28033447 10.70899200]
[184.92459106 -2.19703197]
[192.56883240 -15.10305595]
[195.43844604 -31.81238556]
[212.28915405 -33.68052673]
[218.74902344 -18.00550461]
[205.47485352 -7.45880604]
[197.83061218 5.44721794]
[190.18635559 18.35324097]
[182.54211426 31.25926590]
[175.22372437 44.35282516]
[168.23580933 57.62569427]
[161.24789429 70.89855957]
[154.25997925 84.17143250]
[147.27206421 97.44429779]
[154.55992126 110.55487823]
[153.25000000 125.49757385]
[143.79219055 137.14016724]
[129.43490601 141.48390198]
[115.10926056 137.03688049]
[105.73554993 125.32647705]
[104.53295135 110.37617493]
[100.81231689 124.90740967]
[97.09168243 139.43864441]
[93.37104797 153.96989441]
[89.65040588 168.50112915]
[85.92977142 183.03236389]
[82.20913696 197.56359863]
[78.48850250 212.09483337]
[79.39142609 221.20500183]
[74.58238220 226.83677673]
[70.61945343 241.30381775]
[66.65651703 255.77085876]
[62.69358826 270.23788452]
[58.73065948 284.70492554]
[54.76772690 299.17196655]
[50.80479431 313.63900757]
[64.95984650 320.84960938]
[77.31694794 330.82391357]
[87.34503937 343.13034058]
[94.61375427 357.23721313]
[98.81188202 372.53561401]
[99.76068878 388.36566162]
[97.42153931 404.04516602]
[91.89746857 418.89877319]
[83.42862701 432.28723145]
[72.38184357 443.63479614]
[59.23475647 452.45410156]
[44.55514145 458.36697388]
[28.97639847 461.12069702]
[13.17022419 460.59884644]
[9.69292164 475.19024658]
[6.21561909 489.78161621]
[2.73831701 504.37298584]
[-0.73898524 518.96435547]
[-4.21628761 533.55578613]
[0.11108036 548.77368164]
[-10.36588383 559.36053467]
[-13.84318542 573.95196533]
[-17.32048798 588.54333496]
[-20.79779053 603.13470459]
[-12.78090191 616.49011230]
[-16.51524162 631.23834229]
[-29.29699898 638.79888916]
[-32.77429962 653.39025879]
[-36.25160217 667.98162842]
[-39.72890472 682.57305908]
[-43.20620728 697.16442871]
[-46.31671143 711.83837891]
[-49.05845642 726.58563232]
[-51.80020523 741.33294678]
[-33.64635468 754.45965576]
[-24.53763199 774.85241699]
[-26.86231422 796.99731445]
[-39.92730713 814.94409180]
[-60.16280746 823.90466309]
[-60.41345215 838.90258789]
[-60.66410065 853.90051270]
[-60.91474915 868.89837646]
[-48.43483353 878.11962891]
[-43.79059219 892.92541504]
[-48.76782990 907.62255859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[8 181]
[23 176]
[24 175]
[25 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[36 166]
[37 165]
[38 164]
[39 163]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 94]
[78 93]
[80 91]
[81 90]
[82 89]
[83 88]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[105 115]
[106 114]
[107 113]
[108 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
