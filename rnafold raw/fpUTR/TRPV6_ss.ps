%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCCUGGCUGGCUCUGCCAAGUGUAACAAACUCACAGCCCUCUCCAAACUGGCUGGGGCUGCUGGGAGACUCCCAAGGAACUCGUCAGGAAGGCAGGAGACAGGAG\
) } def
/len { sequence length } bind def

/coor [
[76.46154022 356.15307617]
[60.71522522 354.80059814]
[50.60128784 342.65631104]
[52.12014389 326.92520142]
[64.37068176 316.94021606]
[65.65431213 301.99523926]
[66.93793488 287.05026245]
[68.22155762 272.10528564]
[69.50518799 257.16030884]
[62.88540268 243.81759644]
[71.77526855 230.73017883]
[73.05889893 215.78520203]
[70.94451904 212.78750610]
[70.26422882 208.57144165]
[71.59497070 203.86503601]
[75.14605713 199.63470459]
[77.70388794 184.85438538]
[80.26172638 170.07408142]
[82.81955719 155.29377747]
[85.37738800 140.51347351]
[87.93521881 125.73316193]
[77.49333191 117.35523224]
[72.04516602 105.12657166]
[57.10019302 103.84294891]
[42.15521622 102.55931854]
[31.24421310 113.76128387]
[15.68031788 115.27758789]
[2.81232524 106.39227295]
[-1.28389108 91.30072021]
[5.32577658 77.12869263]
[19.52044487 70.56779480]
[34.59782791 74.71587372]
[43.43884277 87.61434174]
[58.38381577 88.89797211]
[73.32879639 90.18159485]
[77.88328552 79.42501831]
[86.81054688 70.85171509]
[99.04219818 66.23383331]
[95.64474487 51.62365341]
[92.24729156 37.01347351]
[88.84984589 22.40329552]
[85.45239258 7.79311609]
[82.05493927 -6.81706285]
[78.65748596 -21.42724228]
[65.52444458 -29.80345726]
[62.28707504 -44.66865540]
[70.35345459 -57.13738251]
[66.95600128 -71.74755859]
[63.55854797 -86.35774231]
[54.08182907 -100.41576385]
[64.96704865 -113.41378021]
[80.47042084 -106.55216980]
[78.16872406 -89.75518799]
[81.56617737 -75.14501190]
[84.96363068 -60.53483200]
[97.70384979 -52.90447235]
[101.35747528 -38.13607025]
[93.26766968 -24.82469368]
[96.66511536 -10.21451473]
[100.06256866 4.39566422]
[103.46002197 19.00584412]
[106.85747528 33.61602020]
[110.25492859 48.22620010]
[113.65237427 62.83638000]
[126.49761200 70.58234406]
[141.00482178 66.76906586]
[155.51202393 62.95579147]
[170.01922607 59.14251709]
[184.47048950 55.12247467]
[198.86288452 50.89648819]
[213.25527954 46.67049789]
[220.17935181 35.67306519]
[232.36695862 32.50445938]
[243.06311035 38.35145950]
[257.57031250 34.53818512]
[272.07751465 30.72490883]
[285.85919189 20.85061264]
[299.16275024 31.36021996]
[292.74664307 47.05321121]
[275.89077759 45.23211288]
[261.38357544 49.04538727]
[246.87638855 52.85866165]
[235.18708801 65.86186981]
[217.48127747 61.06289291]
[203.08888245 65.28887939]
[188.69648743 69.51486969]
[183.08178711 74.49302673]
[173.83248901 73.64971924]
[159.32528687 77.46299744]
[144.81808472 81.27626801]
[130.31088257 85.08954620]
[132.42918396 100.84027863]
[127.15828705 115.15457916]
[116.27866364 124.91394043]
[102.71553040 128.29098511]
[100.15769958 143.07130432]
[97.59986115 157.85160828]
[95.04203033 172.63191223]
[92.48419952 187.41221619]
[89.92636871 202.19253540]
[88.00387573 217.06881714]
[86.72024536 232.01379395]
[93.24821472 246.42546082]
[84.45016479 258.44393921]
[83.16653442 273.38891602]
[81.88291168 288.33389282]
[80.59928894 303.27886963]
[79.31565857 318.22384644]
[89.68412018 330.15155029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 108]
[6 107]
[7 106]
[8 105]
[9 104]
[11 102]
[12 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 95]
[23 35]
[24 34]
[25 33]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[47 55]
[48 54]
[49 53]
[65 91]
[66 90]
[67 89]
[68 88]
[69 86]
[70 85]
[71 84]
[74 82]
[75 81]
[76 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
