%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCUGCGCGCUGGCCGCCUGCGCGCUGCCAGCCCGCCCGCCCGCCAGGGGCUCCGCCGCCCUCGCCUCGGCCUCGUUAGCCCGCCAGGAGCCCCGCAGCUCCUCCGGGAGCCCGCUGGUAACUCGCGUCCCUCGCGCUUCUCCGGCGCCUGAGGGGCCCGCCUCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[53.77880478 126.48297119]
[47.54758072 140.12745667]
[41.31635666 153.77192688]
[35.08512878 167.41641235]
[28.85390472 181.06089783]
[22.62267876 194.70536804]
[16.51347733 208.40492249]
[10.52678585 222.15844727]
[16.54574585 236.77171326]
[10.39161110 251.32858276]
[-4.28447819 257.19271851]
[-18.77545929 250.88500977]
[-24.48409081 236.14773560]
[-18.02354240 221.72425842]
[-3.22674179 216.17175293]
[2.75995016 202.41822815]
[2.54582858 195.00627136]
[8.97819996 188.47415161]
[15.20942497 174.82966614]
[21.44065094 161.18518066]
[27.67187500 147.54071045]
[33.90309906 133.89622498]
[40.13432693 120.25174713]
[55.50528717 98.28366089]
[76.21736908 89.85190582]
[94.83093262 95.00706482]
[90.60494995 80.61466980]
[86.37895966 66.22227478]
[82.15296936 51.82987976]
[77.92697906 37.43748474]
[62.71931458 24.23764801]
[68.00760651 5.65820360]
[63.27061462 -8.57418537]
[58.53362274 -22.80657387]
[53.79662704 -37.03896332]
[49.05963516 -51.27135086]
[44.32263947 -65.50373840]
[39.58564758 -79.73612976]
[25.73277664 -86.85903168]
[21.13153648 -101.36017609]
[28.00750542 -114.52287292]
[23.27051163 -128.75526428]
[13.24280071 -133.07283020]
[7.38257647 -142.02264404]
[7.43270540 -152.50027466]
[13.13404179 -161.02767944]
[8.90805340 -175.42007446]
[4.68206453 -189.81246948]
[0.45607626 -204.20486450]
[-10.48520851 -211.07485962]
[-13.69697857 -223.17387390]
[-7.98108244 -233.85777283]
[-11.94950771 -248.32330322]
[-15.91793251 -262.78884888]
[-19.88635826 -277.25436401]
[-23.85478401 -291.71990967]
[-27.82320786 -306.18542480]
[-31.79163361 -320.65097046]
[-42.90423965 -331.91244507]
[-38.80978012 -346.23321533]
[-42.77820206 -360.69873047]
[-56.22996902 -368.55288696]
[-60.04845047 -383.27954102]
[-52.47781372 -396.05532837]
[-56.44623566 -410.52087402]
[-60.54360580 -424.95040894]
[-64.76959229 -439.34280396]
[-68.99558258 -453.73519897]
[-80.30742645 -464.79650879]
[-76.46923065 -479.18807983]
[-80.69521332 -493.58047485]
[-90.56243134 -498.25320435]
[-96.09948730 -507.40649414]
[-95.67541504 -517.87567139]
[-89.67334747 -526.19409180]
[-93.38294983 -540.72821045]
[-97.09254456 -555.26226807]
[-111.26283264 -561.87561035]
[-117.81999207 -576.07202148]
[-113.66794586 -591.14831543]
[-100.76715088 -599.98596191]
[-85.20897675 -598.41204834]
[-74.33950806 -587.16973877]
[-73.29098511 -571.56738281]
[-82.55848694 -558.97186279]
[-78.84889221 -544.43780518]
[-75.13928986 -529.90374756]
[-60.64569092 -517.13275146]
[-66.30282593 -497.80645752]
[-62.07683563 -483.41406250]
[-51.06726074 -473.38220215]
[-54.60318756 -457.96118164]
[-50.37720108 -443.56878662]
[-46.15121460 -429.17639160]
[-41.23386765 -423.62637329]
[-41.98070526 -414.48928833]
[-38.01227951 -400.02374268]
[-24.98231697 -392.89944458]
[-20.75170326 -378.28588867]
[-28.31267166 -364.66717529]
[-24.34424782 -350.20162964]
[-13.51548767 -339.97485352]
[-17.32610130 -324.61938477]
[-13.35767651 -310.15386963]
[-9.38925171 -295.68832397]
[-5.42082644 -281.22280884]
[-1.45240140 -266.75726318]
[2.51602387 -252.29173279]
[6.48444891 -237.82620239]
[19.61341286 -226.20234680]
[14.84847069 -208.43084717]
[19.07445908 -194.03845215]
[23.30044746 -179.64605713]
[27.52643585 -165.25366211]
[42.46662903 -153.00814819]
[37.50289917 -133.49226379]
[42.23989487 -119.25987244]
[55.63250351 -112.84320068]
[60.63923264 -98.47701263]
[53.81803513 -84.47312164]
[58.55503082 -70.24073029]
[63.29202271 -56.00834656]
[68.02901459 -41.77595520]
[72.76601410 -27.54356766]
[77.50300598 -13.31117916]
[82.23999786 0.92120999]
[91.78656769 4.67419386]
[97.80336761 13.25214195]
[98.09393311 23.94592094]
[92.31937408 33.21149445]
[96.54536438 47.60388947]
[100.77135468 61.99628448]
[104.99734497 76.38867950]
[109.22332764 90.78107452]
[118.21249390 102.78919220]
[130.83129883 110.89880371]
[143.45010376 119.00841522]
[156.06890869 127.11802673]
[168.68771362 135.22764587]
[181.44924927 143.11073303]
[194.34945679 150.76478577]
[207.24967957 158.41882324]
[220.14988708 166.07287598]
[233.05009460 173.72692871]
[248.88784790 171.16854858]
[260.66537476 182.06210327]
[259.34799194 198.05096436]
[245.94624329 206.86987305]
[230.74084473 201.75370789]
[225.39605713 186.62715149]
[212.49583435 178.97309875]
[199.59562683 171.31904602]
[186.69540405 163.66499329]
[173.79519653 156.01094055]
[168.99938965 156.31303406]
[163.96842957 153.58331299]
[160.57809448 147.84645081]
[147.95928955 139.73683167]
[135.34048462 131.62721252]
[122.72168732 123.51760864]
[110.10288239 115.40799713]
[98.09476471 124.39716339]
[102.32075500 138.78955078]
[106.54673767 153.18194580]
[110.77272797 167.57434082]
[114.99871826 181.96673584]
[125.26253510 195.46083069]
[115.13711548 209.05906677]
[99.26730347 203.09371948]
[100.60632324 186.19273376]
[96.38033295 171.80033875]
[92.15434265 157.40794373]
[87.92835999 143.01554871]
[83.70236969 128.62315369]
[76.22148132 128.08810425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[7 16]
[8 15]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[32 126]
[33 125]
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[41 117]
[42 116]
[46 114]
[47 113]
[48 112]
[49 111]
[52 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[60 101]
[61 100]
[64 97]
[65 96]
[66 94]
[67 93]
[68 92]
[70 90]
[71 89]
[75 87]
[76 86]
[77 85]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
