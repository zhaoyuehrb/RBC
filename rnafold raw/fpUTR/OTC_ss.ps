%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUGGAGCUUGGCAUAAAGUUCAAAUGCUCCUACACCCUGCCCUGCAGUAUCUCUAACCAGGGGACUUUGAUAAGGAAGCUGAAGGGUGAUAUUACCUUUGCUCCCUCACUGCAACUGAACACAUUUCUUAGUUUUUAGGUGGCCCCCGCUGGCUAACUUGCUGUGGAGUUUUCAAGGGCAUAGAAUCGUCCUUUACACAAUUAAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[83.49251556 613.54437256]
[76.53659821 626.83404541]
[69.58068848 640.12371826]
[62.62477112 653.41339111]
[69.34951019 667.27282715]
[66.65542603 682.25933838]
[55.78193665 692.66278076]
[41.04391479 694.64483643]
[34.08799744 707.93450928]
[27.13208389 721.22418213]
[20.17617035 734.51385498]
[13.22025585 747.80352783]
[6.26434183 761.09320068]
[11.22172928 776.09985352]
[4.04129410 790.17877197]
[-11.01694012 794.97723389]
[-25.01918983 787.64837646]
[-29.65816689 772.54022217]
[-22.18165207 758.61627197]
[-7.02532578 754.13726807]
[-0.06941126 740.84759521]
[6.88650322 727.55792236]
[13.84241772 714.26824951]
[20.79833221 700.97857666]
[27.75424576 687.68890381]
[20.98353195 674.44897461]
[23.33513451 659.58514404]
[34.11421585 648.83038330]
[49.33510208 646.45745850]
[56.29101944 633.16778564]
[63.24693298 619.87811279]
[70.20285034 606.58850098]
[69.45906830 598.27502441]
[74.87477112 590.63818359]
[76.18817139 575.69580078]
[77.50157166 560.75341797]
[67.76513672 549.54016113]
[68.88425446 534.36773682]
[80.71177673 524.23126221]
[82.02518463 509.28890991]
[83.33858490 494.34649658]
[84.65198517 479.40411377]
[85.41878510 464.42373657]
[85.63795471 449.42532349]
[78.08744812 436.58636475]
[86.02556610 422.90072632]
[86.24473572 407.90231323]
[86.46390533 392.90393066]
[86.68308258 377.90551758]
[86.90225220 362.90713501]
[87.12142944 347.90872192]
[87.34059906 332.91033936]
[87.55977631 317.91192627]
[76.17923737 310.93475342]
[69.67958069 299.15115356]
[69.85179138 285.58673096]
[76.75782013 273.78509521]
[88.68650055 266.88217163]
[89.12479401 251.88858032]
[81.76269531 238.94065857]
[89.89992523 225.37245178]
[90.33822632 210.37886047]
[90.77652740 195.38526917]
[91.21482849 180.39167786]
[91.54357147 165.39527893]
[91.76274109 150.39688110]
[91.98191833 135.39848328]
[83.23529053 132.80525208]
[75.28835297 128.05471802]
[68.67174530 121.38600922]
[63.84613800 113.16825104]
[61.17056274 103.88047028]
[60.87641144 94.08374786]
[63.04905319 84.38738251]
[67.61835480 75.41098022]
[74.35904694 67.74489594]
[82.90105438 61.91154099]
[76.93377686 48.14957809]
[70.96649933 34.38761520]
[58.37784576 24.80448914]
[60.41339874 10.04963207]
[54.44612503 -3.71233106]
[48.47885132 -17.47429466]
[43.40820694 -21.70933533]
[41.51883316 -27.06508636]
[42.54480743 -31.72665215]
[36.98220825 -45.65710068]
[31.41960335 -59.58755112]
[25.85700226 -73.51800537]
[20.29439926 -87.44845581]
[14.73179626 -101.37890625]
[9.16919422 -115.30935669]
[-4.04026365 -125.02749634]
[-1.96015835 -141.29418945]
[13.26967621 -147.37565613]
[25.98209190 -137.01579285]
[23.09964371 -120.87195587]
[28.66224670 -106.94150543]
[34.22484970 -93.01105499]
[39.78745270 -79.08060455]
[45.35005569 -65.15015411]
[50.91265869 -51.21970367]
[56.47525787 -37.28925323]
[62.24081421 -23.44156837]
[68.20809174 -9.67960548]
[74.17536163 4.08235788]
[86.33720398 12.68113518]
[84.72846222 28.42033958]
[90.69573975 42.18230057]
[96.66301727 55.94426727]
[111.59540558 57.36679840]
[120.05383301 44.97909927]
[128.51225281 32.59140015]
[136.97067261 20.20370293]
[132.75520325 1.73120618]
[143.20408630 -13.69014454]
[161.29177856 -16.52404213]
[169.38462830 -29.15360641]
[177.47746277 -41.78316879]
[185.57031250 -54.41273499]
[193.66314697 -67.04229736]
[201.75599670 -79.67186737]
[195.23526001 -93.65341187]
[197.33131409 -108.93772125]
[207.37528992 -120.64762878]
[222.16221619 -125.04653931]
[236.97363281 -120.73078156]
[247.08325195 -109.07749939]
[249.26515198 -93.80520630]
[242.82308960 -79.78724670]
[229.81269836 -71.49668884]
[214.38555908 -71.57901764]
[206.29270935 -58.94945526]
[198.19987488 -46.31989288]
[190.10702515 -33.69032669]
[182.01419067 -21.06076241]
[173.92134094 -8.43119907]
[178.71788025 1.91669405]
[177.91664124 13.41416645]
[171.60124207 23.19815636]
[161.24272156 28.77646065]
[149.35836792 28.66212463]
[140.89994812 41.04982376]
[132.44152832 53.43752289]
[123.98310852 65.82522583]
[137.58245850 85.21343994]
[138.17208862 108.10401154]
[126.41950989 126.83676910]
[106.98031616 135.61764526]
[106.76114655 150.61604309]
[106.54196930 165.61444092]
[109.54493713 174.23786926]
[106.20841980 180.82997131]
[105.77011871 195.82356262]
[105.33182526 210.81715393]
[104.89352417 225.81076050]
[112.22428131 239.83111572]
[104.11839294 252.32687378]
[103.68009186 267.32046509]
[117.20794678 277.47634888]
[121.96845245 293.53521729]
[116.27509308 309.11062622]
[102.55817413 318.13110352]
[102.33899689 333.12951660]
[102.11982727 348.12789917]
[101.90065002 363.12631226]
[101.68148041 378.12469482]
[101.46231079 393.12310791]
[101.24313354 408.12149048]
[101.02396393 423.11990356]
[108.55879211 437.03164673]
[100.63635254 449.64450073]
[100.41718292 464.64291382]
[112.82212830 456.20980835]
[127.19353485 460.50662231]
[132.93371582 474.36486816]
[125.80979156 487.56521606]
[111.07503510 490.37359619]
[99.59437561 480.71752930]
[98.28096771 495.65991211]
[96.96756744 510.60229492]
[95.65416718 525.54467773]
[105.53205872 537.58898926]
[103.98722839 552.72399902]
[92.44396210 562.06683350]
[91.13055420 577.00921631]
[89.81715393 591.95159912]
[97.56468964 579.10729980]
[107.77549744 568.11914062]
[120.01786041 559.45172119]
[133.77418518 553.47143555]
[148.46286011 550.43121338]
[163.46282959 550.45953369]
[178.13990784 553.55523682]
[191.87355042 559.58740234]
[204.08311462 568.30096436]
[214.25234985 579.32763672]
[221.95132446 592.20104980]
[226.85452271 606.37707520]
[228.75463867 621.25622559]
[227.57133484 636.20947266]
[223.35462952 650.60461426]
[216.28282166 663.83294678]
[206.65490723 675.33526611]
[194.87792969 684.62518311]
[181.44984436 691.30999756]
[166.93838501 695.10699463]
[151.95707703 695.85571289]
[137.13934326 693.52447510]
[123.11167145 688.21179199]
[110.46715546 680.14233398]
[99.74039459 669.65722656]
[91.38492584 657.19989014]
[85.75400543 643.29693604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[34 187]
[35 186]
[36 185]
[39 182]
[40 181]
[41 180]
[42 179]
[43 173]
[44 172]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[58 159]
[59 158]
[61 156]
[62 155]
[63 154]
[64 153]
[65 151]
[66 150]
[67 149]
[77 110]
[78 109]
[79 108]
[81 106]
[82 105]
[83 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[111 145]
[112 144]
[113 143]
[114 142]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
