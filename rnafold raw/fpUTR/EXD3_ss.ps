%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCCGGGAGCUUUGUGCGCCCGGCUUCCUCGCCCCGCCCGCGCUGGCCUUGGUGCGCCGGAUAAAGCCCUCCGGGCCAGCGGCUGCGGUCGGGCCAAGGUUCCGCGCCGGGCGUGGACGGUGUGGGGCGGUCCCGGCCCCGCAGAUCCUCGUUCCUAGCUGCCUGCCAGCGUCCUCGGCCCGGCCCUGAGG\
) } def
/len { sequence length } bind def

/coor [
[82.21964264 196.57281494]
[81.81161499 205.42610168]
[78.56092834 213.62434387]
[72.84772491 220.28561401]
[65.31536102 224.70324707]
[56.79804993 226.42079163]
[48.22850037 225.27900696]
[40.08233261 237.87423706]
[31.93616676 250.46946716]
[23.79000092 263.06469727]
[15.64383411 275.65994263]
[7.49766779 288.25518799]
[6.49997616 304.04489136]
[-6.90879679 310.52981567]
[-15.05496311 323.12506104]
[-13.10966682 339.04971313]
[-24.44959068 350.39810181]
[-40.37571335 348.46469116]
[-48.67087936 334.73260498]
[-42.97174454 319.73596191]
[-27.65019989 314.97888184]
[-19.50403404 302.38363647]
[-19.08901024 287.49481201]
[-5.09756851 280.10900879]
[3.04859757 267.51379395]
[11.19476414 254.91854858]
[19.34092903 242.32330322]
[27.48709679 229.72807312]
[35.63326263 217.13282776]
[29.24420929 196.88157654]
[40.03117371 178.26170349]
[61.33142471 173.60939026]
[68.44847870 160.40531921]
[75.56553650 147.20124817]
[82.68259430 133.99717712]
[89.79965210 120.79310608]
[77.47503662 129.34320068]
[63.36698914 124.24781036]
[59.35005188 109.79567719]
[68.80522919 98.15095520]
[83.77429962 99.11489105]
[70.86438751 91.47721100]
[56.67396164 97.47203827]
[41.84785843 94.00216675]
[32.02402496 82.60232544]
[30.81113625 67.78115845]
[17.90122414 60.14348221]
[4.99131203 52.50580215]
[-7.91860056 44.86812210]
[-20.82851410 37.23043823]
[-33.73842621 29.59276009]
[-46.64833832 21.95508003]
[-59.55825043 14.31739998]
[-72.46816254 6.67971992]
[-81.45888519 5.00012159]
[-85.52165985 -1.18409061]
[-98.30814362 -9.02666759]
[-114.11720276 -9.64640713]
[-120.92097473 -22.89623451]
[-136.73004150 -23.51597595]
[-143.53381348 -36.76580429]
[-156.32029724 -44.60837936]
[-170.60653687 -38.55175781]
[-185.71673584 -42.08188629]
[-195.84068298 -53.84135818]
[-197.08552551 -69.30841827]
[-188.97261047 -82.53566742]
[-174.62149048 -88.43695831]
[-159.55049133 -84.74311829]
[-149.55470276 -72.87451172]
[-148.47770691 -57.39485550]
[-135.69123840 -49.55228043]
[-120.79674530 -49.49349213]
[-113.07839966 -35.68271255]
[-98.18391418 -35.62392426]
[-90.46556091 -21.81314468]
[-77.67908478 -13.97056770]
[-64.83048248 -6.23019266]
[-51.92057037 1.40748727]
[-39.01065826 9.04516697]
[-26.10074615 16.68284798]
[-13.19083309 24.32052803]
[-0.28092051 31.95820808]
[12.62899208 39.59588623]
[25.53890419 47.23356628]
[38.44881821 54.87124634]
[52.02295303 48.79829025]
[66.74438477 51.91975784]
[76.92397308 63.24359512]
[78.50206757 78.56729889]
[91.41197968 86.20497894]
[106.22164917 88.58692932]
[120.87538147 85.38251495]
[135.52909851 82.17810059]
[150.18283081 78.97368622]
[164.83656311 75.76927185]
[179.49029541 72.56485748]
[194.14401245 69.36044312]
[208.79774475 66.15602875]
[223.45147705 62.95161057]
[235.28016663 52.44482803]
[249.36653137 57.28461838]
[264.02026367 54.08020401]
[278.67398071 50.87578964]
[284.01370239 41.38300323]
[293.50405884 36.50232697]
[303.89477539 37.63336563]
[311.77416992 44.16151810]
[326.52264404 41.42602539]
[341.27108765 38.69053268]
[350.90612793 24.09626961]
[367.78186035 21.04019737]
[381.37677002 30.93173790]
[396.07974243 27.96140671]
[410.78268433 24.99107552]
[425.48565674 22.02074432]
[440.18862915 19.05041313]
[454.86743164 15.96294212]
[469.52114868 12.75852776]
[484.09405518 9.20453548]
[498.57775879 5.30299807]
[513.06146240 1.40146136]
[527.54516602 -2.50007558]
[542.02893066 -6.40161276]
[556.51263428 -10.30314922]
[570.82934570 -14.77886868]
[584.95623779 -19.82165718]
[599.08319092 -24.86444664]
[613.21014404 -29.90723610]
[627.33703613 -34.95002365]
[641.46398926 -39.99281311]
[655.59094238 -45.03560257]
[669.71789551 -50.07839203]
[674.98724365 -64.80141449]
[688.51367188 -72.64813232]
[703.91027832 -69.91355133]
[713.90734863 -57.88887024]
[713.78448486 -42.25177002]
[703.59979248 -30.38561249]
[688.16210938 -27.89323235]
[674.76068115 -35.95145798]
[660.63372803 -30.90866852]
[646.50677490 -25.86587906]
[632.37988281 -20.82308960]
[618.25292969 -15.78030109]
[604.12597656 -10.73751259]
[589.99902344 -5.69472361]
[575.87213135 -0.65193456]
[588.06384277 8.08655071]
[588.99694824 23.05750084]
[577.98461914 33.24221039]
[563.13201904 31.14467621]
[555.37072754 18.30869484]
[560.41418457 4.18056583]
[545.93041992 8.08210278]
[531.44671631 11.98363972]
[516.96301270 15.88517666]
[502.47930908 19.78671455]
[487.99557495 23.68825150]
[485.92691040 26.55702400]
[482.36059570 28.56140709]
[477.72039795 29.00605392]
[472.72558594 27.41225433]
[458.07183838 30.61666870]
[452.20223999 35.12202835]
[443.15896606 33.75337601]
[428.45599365 36.72370911]
[413.75302124 39.69403839]
[399.05004883 42.66437149]
[384.34710693 45.63470078]
[378.78823853 57.26662445]
[367.37265015 63.66537094]
[354.16204834 62.29719543]
[344.00659180 53.43899155]
[329.25811768 56.17448425]
[314.50967407 58.90997696]
[300.77954102 72.51558685]
[281.87838745 65.52951813]
[267.22467041 68.73393250]
[252.57095337 71.93834686]
[241.79039001 82.21592712]
[226.65588379 77.60533905]
[212.00215149 80.80975342]
[197.34843445 84.01416779]
[182.69470215 87.21858215]
[168.04096985 90.42299652]
[153.38725281 93.62741089]
[138.73352051 96.83182526]
[124.07979584 100.03623962]
[109.42606354 103.24065399]
[111.86192322 114.86721802]
[103.00372314 127.91016388]
[95.88666534 141.11424255]
[88.76960754 154.31831360]
[81.65254974 167.52238464]
[74.53549957 180.72645569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[14 22]
[15 21]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[41 91]
[42 90]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[56 77]
[57 76]
[59 74]
[61 72]
[62 71]
[92 190]
[93 189]
[94 188]
[95 187]
[96 186]
[97 185]
[98 184]
[99 183]
[100 182]
[102 180]
[103 179]
[104 178]
[108 176]
[109 175]
[110 174]
[113 170]
[114 169]
[115 168]
[116 167]
[117 166]
[118 164]
[119 163]
[120 159]
[121 158]
[122 157]
[123 156]
[124 155]
[125 154]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
