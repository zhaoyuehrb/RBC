%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUGUUGGCGGGGACUGAGCCUCCUGCUUGAGGUAGUUGUUUUUACUCCCAGUCCCCAGGCUCACGAGCCCCACGCGCGCUCAAUCUGCCCUCCCGCUUCUCCUCGCCACUCCGAGUUCUGCGCCCUCGAGAUCCAGCGCAUCCGCGGGGUGGGCGGGUCCUGGCGGCUCUUUGCCCUCUUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[61.03340912 127.90872192]
[75.75655365 125.04628754]
[60.90602493 127.15856934]
[46.05549622 129.27085876]
[31.20496559 131.38313293]
[16.35443497 133.49542236]
[1.50390410 135.60771179]
[-7.98412371 147.96145630]
[-23.07476425 149.89205933]
[-34.79370117 140.77053833]
[-47.36680222 150.37406921]
[-61.05681229 144.50610352]
[-75.90734100 146.61839294]
[-90.75787354 148.73068237]
[-105.60839844 150.84295654]
[-116.37976837 166.41003418]
[-134.79080200 169.13349915]
[-149.10842896 157.74838257]
[-163.88055420 160.35310364]
[-178.65266418 162.95782471]
[-193.42477417 165.56254578]
[-208.19689941 168.16728210]
[-222.96900940 170.77200317]
[-237.74113464 173.37672424]
[-244.94102478 188.67221069]
[-259.68933105 196.58996582]
[-276.08749390 194.18783569]
[-287.70983887 182.60707092]
[-302.43661499 185.45695496]
[-317.16339111 188.30685425]
[-329.24218750 198.52516174]
[-343.20767212 193.34689331]
[-355.28643799 203.56520081]
[-369.25192261 198.38691711]
[-383.97869873 201.23681641]
[-398.70547485 204.08671570]
[-413.43225098 206.93661499]
[-428.15905762 209.78649902]
[-436.79879761 223.02018738]
[-452.28259277 226.18676758]
[-465.42419434 217.40759277]
[-468.42691040 201.89115906]
[-459.50927734 188.84312439]
[-443.96197510 186.00463867]
[-431.00894165 195.05972290]
[-416.28216553 192.20982361]
[-401.55538940 189.35992432]
[-386.82858276 186.51004028]
[-372.10180664 183.66014099]
[-361.07638550 173.64567566]
[-346.05755615 178.62010193]
[-335.03213501 168.60565186]
[-320.01330566 173.58007812]
[-305.28652954 170.73017883]
[-290.55972290 167.88027954]
[-286.04855347 155.30368042]
[-275.82696533 146.53175354]
[-262.49880981 143.94009399]
[-249.52964783 148.31169128]
[-240.34585571 158.60459900]
[-225.57373047 155.99987793]
[-210.80162048 153.39515686]
[-196.02949524 150.79043579]
[-181.25738525 148.18571472]
[-166.48527527 145.58099365]
[-151.71315002 142.97627258]
[-147.33915710 132.41508484]
[-138.31138611 125.20900726]
[-126.80686951 123.24416351]
[-115.67252350 127.12440491]
[-107.72068787 135.99243164]
[-92.87015533 133.88014221]
[-78.01962280 131.76786804]
[-63.16909409 129.65557861]
[-51.65820312 120.20314026]
[-36.90598679 125.92001343]
[-28.19518661 113.89264679]
[-13.16472721 111.53894043]
[-0.60838014 120.75717926]
[14.24215031 118.64488983]
[29.09267998 116.53260803]
[43.94321060 114.42032623]
[58.79374313 112.30803680]
[73.64427185 110.19575500]
[84.76684570 80.99102020]
[111.36226654 82.98489380]
[123.68519592 74.43238068]
[136.00811768 65.87986755]
[148.33105469 57.32735825]
[160.65397644 48.77484512]
[172.97689819 40.22233200]
[185.29983521 31.66982079]
[197.62275696 23.11730766]
[209.87417603 14.46267605]
[222.05325317 5.70652056]
[234.23231506 -3.04963446]
[246.41139221 -11.80578899]
[258.59045410 -20.56194496]
[270.76953125 -29.31809998]
[266.39453125 -41.23917770]
[266.60406494 -54.53517914]
[271.79425049 -67.42681885]
[281.66842651 -78.04125977]
[295.22735596 -84.68095398]
[310.86233521 -86.08514404]
[318.89550781 -98.75273132]
[326.92871094 -111.42032623]
[334.96188354 -124.08791351]
[331.26501465 -139.45373535]
[339.58737183 -152.88929749]
[354.99142456 -156.42350769]
[368.33822632 -147.95957947]
[371.70938110 -132.51902771]
[363.10482788 -119.26243591]
[347.62948608 -116.05472565]
[339.59628296 -103.38713074]
[331.56311035 -90.71954346]
[323.52990723 -78.05194855]
[328.10797119 -72.11130524]
[342.97552490 -74.10039520]
[337.26409912 -60.22999954]
[341.84216309 -54.28934860]
[356.13851929 -58.82965088]
[370.43487549 -63.36995316]
[384.73123169 -67.91025543]
[399.02758789 -72.45055389]
[401.12588501 -87.56874847]
[409.58309937 -100.27458954]
[422.72000122 -108.04532623]
[437.92828369 -109.33806610]
[452.18829346 -103.89614105]
[462.66873169 -92.80004120]
[467.28869629 -78.25291443]
[465.13085938 -63.14310074]
[456.62365723 -50.47066498]
[443.45626831 -42.75172424]
[428.24301147 -41.51888275]
[414.00451660 -47.01692200]
[403.56787109 -58.15420151]
[389.27151489 -53.61390305]
[374.97518921 -49.07360077]
[360.67883301 -44.53329849]
[346.38247681 -39.99299622]
[336.17916870 -18.44398499]
[317.18911743 -6.45091915]
[296.11056519 -6.51034832]
[279.52569580 -17.13903046]
[267.34661865 -8.38287449]
[255.16754150 0.37328064]
[242.98847961 9.12943554]
[230.80940247 17.88559151]
[218.63034058 26.64174652]
[215.02786255 33.11130524]
[206.17527771 35.44023514]
[193.85234070 43.99274826]
[181.52941895 52.54526138]
[169.20648193 61.09777069]
[156.88356018 69.65028381]
[144.56063843 78.20279694]
[132.23770142 86.75531006]
[119.91477966 95.30782318]
[122.19376373 103.10449219]
[121.26741028 111.87802124]
[116.76863861 120.27301788]
[108.90815735 126.81832886]
[116.72968292 139.61769104]
[123.88866425 145.32217407]
[124.57279968 152.69543457]
[132.18051147 165.62303162]
[139.78820801 178.55064392]
[154.89549255 183.94967651]
[159.95706177 199.17335510]
[151.09011841 212.54335022]
[135.09661865 213.80335999]
[124.24540710 201.98680115]
[126.86061096 186.15834045]
[119.25290680 173.23074341]
[111.64520264 160.30314636]
[103.93032074 147.43922424]
[96.10878754 134.63984680]
[103.27091217 147.81953430]
[103.21034241 162.81941223]
[95.94201660 175.94082642]
[83.25815582 183.94828796]
[68.28633118 184.86734009]
[54.71830750 178.47135925]
[45.89966965 166.33744812]
[44.00492096 151.45761108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 84]
[3 83]
[4 82]
[5 81]
[6 80]
[7 79]
[10 76]
[12 74]
[13 73]
[14 72]
[15 71]
[18 66]
[19 65]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[28 55]
[29 54]
[30 53]
[32 51]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 152]
[95 151]
[96 150]
[97 149]
[98 148]
[99 147]
[105 118]
[106 117]
[107 116]
[108 115]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[165 180]
[166 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
