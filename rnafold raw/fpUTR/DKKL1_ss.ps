%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGCUCCUGGGUGAGGCCGGCAAGUUUGGAGCGUGGUCAGACAAUAGGGGCGUGGCUACGGCUCGCGGAGCGCAACCAACGCUCUAGACCAGACCUGGGCUCGAGACCAUAACUGUUUGGCUUUAACAGUACGUGGGCGGCCGGAAUCCGGGAGUCCGGUGACCCGGGCUGUGGUCUAGCAUAAAGGCGGAGCCCAGAAGAAGGGGCGGGGU\
) } def
/len { sequence length } bind def

/coor [
[332.63363647 343.23184204]
[322.14392090 332.50961304]
[311.65420532 321.78741455]
[301.16445923 311.06521606]
[290.67474365 300.34301758]
[280.18499756 289.62081909]
[269.69528198 278.89862061]
[259.20553589 268.17642212]
[248.71582031 257.45422363]
[238.22608948 246.73202515]
[227.73635864 236.00982666]
[217.24662781 225.28762817]
[206.75689697 214.56541443]
[196.26716614 203.84321594]
[179.45646667 204.37678528]
[167.22134399 192.34912109]
[167.47695923 174.85612488]
[156.83168030 164.28834534]
[146.18640137 153.72056580]
[135.54112244 143.15277100]
[124.89585114 132.58499146]
[110.41242218 129.10943604]
[106.06971741 113.89590454]
[96.11645508 116.01751709]
[86.19596863 111.23700714]
[80.89338684 100.64134979]
[67.08818817 94.77478027]
[53.28299713 88.90821075]
[39.47780609 83.04164124]
[23.75077438 84.76531982]
[15.06337357 72.66663361]
[1.25818038 66.80006409]
[-12.54701233 60.93349075]
[-26.35220528 55.06692123]
[-42.07923508 56.79060364]
[-50.76663589 44.69190979]
[-64.61431885 38.92635727]
[-78.50376129 33.26212692]
[-92.39319611 27.59789848]
[-106.28263855 21.93366814]
[-115.18346405 32.00088120]
[-126.73323059 38.82471848]
[-139.80126953 41.75346756]
[-153.11331177 40.51591492]
[-165.37568665 35.24642181]
[-175.40109253 26.47047806]
[-182.22354126 15.05234051]
[-185.19139099 2.10992789]
[-184.02963257 -11.09462547]
[-197.74763489 -17.16228485]
[-211.46563721 -23.22994423]
[-225.18363953 -29.29760361]
[-238.90164185 -35.36526489]
[-252.61962891 -41.43292236]
[-266.33764648 -47.50058365]
[-280.09960938 -53.46785736]
[-293.90478516 -59.33442688]
[-304.62637329 -50.35309219]
[-318.10714722 -46.88334656]
[-331.70266724 -49.54698181]
[-342.77124023 -57.76835251]
[-349.18725586 -69.89761353]
[-349.74923706 -83.54155731]
[-363.46722412 -89.60921478]
[-377.18524170 -95.67687988]
[-390.90322876 -101.74453735]
[-407.83444214 -102.62205505]
[-411.67825317 -119.13452148]
[-396.87518311 -127.39921570]
[-384.83557129 -115.46253967]
[-371.11755371 -109.39487457]
[-357.39956665 -103.32721710]
[-343.68157959 -97.25955963]
[-330.86730957 -107.10597229]
[-314.74301147 -109.15746307]
[-299.69854736 -102.76003265]
[-289.87799072 -89.57295227]
[-288.03820801 -73.13961792]
[-274.23303223 -67.27304840]
[-266.84985352 -67.54998016]
[-260.26998901 -61.21858215]
[-246.55197144 -55.15092468]
[-232.83396912 -49.08326340]
[-219.11598206 -43.01560211]
[-205.39797974 -36.94794464]
[-191.67997742 -30.88028526]
[-177.96197510 -24.81262589]
[-166.18365479 -36.58602142]
[-150.75224304 -42.94524384]
[-134.02519226 -42.88823700]
[-118.56967163 -36.39548874]
[-106.76852417 -24.43737411]
[-100.45295715 -8.82921982]
[-100.61840820 8.04423046]
[-86.72897339 13.70845985]
[-72.83953094 19.37268829]
[-58.95009232 25.03691864]
[-51.57174301 24.65213966]
[-44.90006638 30.88671875]
[-30.16047478 28.74341965]
[-20.48563385 41.26172638]
[-6.68044138 47.12829590]
[7.12475109 52.99486923]
[20.92994308 58.86143875]
[35.66953659 56.71813965]
[45.34437561 69.23645020]
[59.14957047 75.10301971]
[72.95475769 80.96958923]
[86.75995636 86.83615875]
[100.84699249 81.68298340]
[107.60798645 68.29309845]
[114.36897278 54.90320969]
[112.91287994 36.54530334]
[127.96234894 27.51615906]
[134.52697754 14.02891541]
[141.09159851 0.54167086]
[147.65621948 -12.94557381]
[154.22084045 -26.43281746]
[160.78544617 -39.92006302]
[154.24867249 -54.12585449]
[158.42236328 -69.19616699]
[171.33583069 -78.01525879]
[186.89173889 -76.41902161]
[197.74505615 -65.16115570]
[198.77117920 -49.55727005]
[189.48559570 -36.97505569]
[174.27270508 -33.35544205]
[167.70808411 -19.86819649]
[161.14346313 -6.38095284]
[154.57884216 7.10629129]
[148.01422119 20.59353638]
[141.44960022 34.08078003]
[145.09933472 45.61161041]
[139.74308777 56.90080643]
[127.75885773 61.66419983]
[120.99787140 75.05408478]
[114.23687744 88.44396973]
[116.63750458 103.25062561]
[131.88235474 107.48206329]
[135.46363831 121.93971252]
[146.10891724 132.50749207]
[156.75419617 143.07528687]
[167.39945984 153.64306641]
[178.04473877 164.21084595]
[191.41664124 162.61138916]
[203.09815979 168.91255188]
[208.93203735 180.61730957]
[206.98937988 193.35348511]
[217.47909546 204.07569885]
[227.96882629 214.79789734]
[238.45855713 225.52009583]
[248.94828796 236.24229431]
[259.43801880 246.96449280]
[269.92773438 257.68670654]
[280.41748047 268.40890503]
[290.90719604 279.13110352]
[301.39694214 289.85330200]
[311.88665771 300.57550049]
[322.37640381 311.29769897]
[332.86611938 322.01989746]
[343.35583496 332.74209595]
[363.64413452 328.46881104]
[382.25973511 337.27612305]
[391.69396973 355.42495728]
[388.25457764 375.44668579]
[399.49899292 385.37457275]
[410.74340820 395.30245972]
[422.48062134 404.64257812]
[434.67996216 413.37045288]
[446.87933350 422.09832764]
[459.07867432 430.82623291]
[471.27801514 439.55410767]
[480.07534790 442.00115967]
[483.59057617 448.49972534]
[499.28909302 450.46640015]
[504.93725586 464.24853516]
[517.00775146 473.15374756]
[529.07830811 482.05892944]
[541.14880371 490.96414185]
[556.30560303 487.11639404]
[570.36712646 493.95797729]
[576.69396973 508.25851440]
[572.29876709 523.26574707]
[559.25677490 531.89367676]
[543.72607422 530.06848145]
[533.03979492 518.65197754]
[532.24359131 503.03466797]
[520.17309570 494.12945557]
[508.10256958 485.22424316]
[496.03204346 476.31906128]
[481.19692993 474.98934937]
[474.68539429 460.57022095]
[462.55014038 451.75344849]
[450.35079956 443.02557373]
[438.15142822 434.29769897]
[425.95208740 425.56979370]
[413.75274658 416.84191895]
[416.31622314 431.62124634]
[408.88693237 444.65219116]
[394.86291504 449.97448730]
[380.65866089 445.15380859]
[372.77105713 432.39505005]
[374.80783081 417.53396606]
[385.83737183 407.36788940]
[400.81552124 406.54687500]
[389.57110596 396.61898804]
[378.32669067 386.69110107]
[369.70681763 391.03027344]
[360.15280151 392.58636475]
[350.54309082 391.19833374]
[341.76675415 386.97671509]
[334.64102173 380.29492188]
[329.83535767 371.75646973]
[327.80853271 362.14028931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[23 138]
[26 109]
[27 108]
[28 107]
[29 106]
[31 104]
[32 103]
[33 102]
[34 101]
[36 99]
[37 97]
[38 96]
[39 95]
[40 94]
[49 87]
[50 86]
[51 85]
[52 84]
[53 83]
[54 82]
[55 81]
[56 79]
[57 78]
[63 73]
[64 72]
[65 71]
[66 70]
[110 137]
[111 136]
[112 135]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[165 207]
[166 206]
[167 205]
[168 197]
[169 196]
[170 195]
[171 194]
[172 193]
[174 192]
[176 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
