%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCUGCUGCCACGUGGAGAAGGGUGUGUUUGUUUCCCCAUCUGCCAUGAUUAUAAGUUUUCUGAGGCAUCCCCAGCCAUGCUGAACUGGAAGUGGCACUAAGGUCCAAAGGAAGCUACAUAUGGGUGGUCCCUGCUACACCAGCCUCCCAAGCCUCCCAGUGCACCUUCUAGGAGACAAGCAAGGAAGGCCGCUGCUUGUUUGUCAUCCUGCUC\
) } def
/len { sequence length } bind def

/coor [
[136.83392334 199.66590881]
[123.02140045 206.38227844]
[107.70236206 205.27655029]
[94.99755859 196.64616394]
[88.32451630 182.81265259]
[89.47825623 167.49716187]
[98.14842224 154.81947327]
[112.00278473 148.18981934]
[113.08267212 133.22874451]
[106.54291534 129.55702209]
[103.60063934 144.26562500]
[88.70271301 146.01252747]
[82.43760681 132.38357544]
[93.46340942 122.21355438]
[86.92365265 118.54182434]
[74.71261597 127.25334930]
[62.50157928 135.96487427]
[50.29054642 144.67639160]
[38.07950974 153.38790894]
[25.93156242 162.18719482]
[13.84733105 171.07377625]
[1.76310110 179.96035767]
[-4.77065134 194.36941528]
[-19.60781479 195.67625427]
[-31.69204521 204.56283569]
[-43.77627563 213.44941711]
[-48.83237839 221.05047607]
[-56.09928513 222.37550354]
[-55.24907303 237.77943420]
[-62.88168335 251.18640137]
[-76.56157684 258.31829834]
[-91.92354584 256.89938354]
[-104.06565094 247.38240051]
[-109.11338043 232.80419922]
[-105.45603180 217.81663513]
[-94.26064301 207.20216370]
[-79.09962463 204.34783936]
[-64.81080627 210.16447449]
[-52.66286087 201.36518860]
[-40.57862854 192.47860718]
[-28.49440002 183.59202576]
[-22.82499123 169.81860352]
[-7.12348318 167.87612915]
[4.96074724 158.98954773]
[17.04497719 150.10296631]
[20.56948090 143.61131287]
[29.36798859 141.17687988]
[41.57902145 132.46536255]
[53.79005814 123.75383759]
[66.00109100 115.04231262]
[78.21212769 106.33078766]
[77.99599457 98.83390808]
[65.22708893 106.70505524]
[52.02606964 99.58233643]
[51.59412766 84.58855438]
[64.36320496 76.71768188]
[77.56372833 83.84013367]
[77.34758759 76.34325409]
[64.65494537 68.34970093]
[51.96230698 60.35615158]
[39.26966476 52.36259842]
[26.57702446 44.36904907]
[13.63526440 52.38604355]
[-1.44247949 53.98248291]
[-15.65998840 48.89498901]
[-26.21534729 38.18305969]
[-31.05311394 24.00894737]
[-29.26442909 9.20131111]
[-41.95706940 1.20776045]
[-54.64971161 -6.78578997]
[-69.48256683 -1.83397937]
[-84.00909424 -7.62310171]
[-91.37031555 -21.41971016]
[-88.09049225 -36.70946884]
[-75.71823883 -46.27302170]
[-60.09537506 -45.59474945]
[-48.59852982 -34.99491501]
[-46.65616226 -19.47843170]
[-33.96352005 -11.48488140]
[-21.27087784 -3.49133039]
[-8.68922234 -11.50178623]
[6.18389559 -13.26241207]
[20.40476799 -8.37080574]
[31.13533974 2.25345850]
[36.20958328 16.54118156]
[34.57057571 31.67640686]
[47.26321793 39.66995621]
[59.95585632 47.66350937]
[72.64849854 55.65705872]
[85.34114075 63.65060806]
[100.11740875 61.06954193]
[109.34854889 49.24642563]
[118.57968140 37.42330551]
[127.81082153 25.60018921]
[137.04196167 13.77707100]
[135.30621338 -1.70275259]
[144.83631897 -13.56157494]
[159.60466003 -15.12094688]
[168.83580017 -26.94406509]
[178.06694031 -38.76718140]
[187.29806519 -50.59030151]
[196.52920532 -62.41341782]
[198.43000793 -82.48545074]
[216.66087341 -88.93825531]
[225.54747009 -101.02248383]
[234.43405151 -113.10671234]
[243.32063293 -125.19094086]
[237.99121094 -136.49208069]
[237.97036743 -148.91465759]
[243.20074463 -160.10287476]
[252.63496399 -167.96109009]
[264.44473267 -171.04629517]
[276.37506104 -168.83273315]
[285.60620117 -180.65585327]
[294.83734131 -192.47897339]
[297.23150635 -208.11798096]
[311.16256714 -213.38812256]
[320.39370728 -225.21122742]
[329.62484741 -237.03434753]
[314.64553833 -236.24664307]
[303.40771484 -246.18199158]
[302.35354614 -261.14489746]
[312.08731079 -272.55776978]
[327.02908325 -273.87811279]
[338.61340332 -264.34899902]
[340.19970703 -249.43399048]
[350.41738892 -260.41577148]
[360.55566406 -271.47085571]
[370.61401367 -282.59872437]
[380.67236328 -293.72659302]
[390.73074341 -304.85446167]
[400.78909302 -315.98233032]
[403.69857788 -332.12130737]
[419.21954346 -337.41577148]
[431.38537598 -326.41918945]
[427.68090820 -310.44393921]
[411.91696167 -305.92398071]
[401.85861206 -294.79611206]
[391.80023193 -283.66824341]
[381.74188232 -272.54037476]
[371.68353271 -261.41250610]
[369.53134155 -254.34625244]
[361.39913940 -250.19808960]
[351.18145752 -239.21632385]
[341.44796753 -227.80322266]
[332.21682739 -215.98010254]
[322.98568726 -204.15698242]
[321.25183105 -189.36363220]
[306.66046143 -183.24783325]
[297.42932129 -171.42472839]
[288.19818115 -159.60160828]
[293.85415649 -142.86761475]
[288.27990723 -125.94050598]
[273.52944946 -115.66159821]
[255.40486145 -116.30435944]
[246.51828003 -104.22013092]
[237.63169861 -92.13590240]
[228.74511719 -80.05166626]
[231.18708801 -70.13605499]
[227.69744873 -60.30568314]
[219.20004272 -53.88420868]
[208.35232544 -53.18228149]
[199.12118530 -41.35916519]
[189.89004517 -29.53604698]
[180.65892029 -17.71292877]
[171.42778015 -5.88981009]
[173.49693298 8.81577396]
[164.30366516 20.93759727]
[148.86506653 23.00820732]
[139.63394165 34.83132553]
[130.40280151 46.65444183]
[121.17166138 58.47756195]
[111.94052887 70.30068207]
[153.70928955 119.89878082]
[163.44277954 131.31188965]
[173.17628479 142.72499084]
[182.90979004 154.13809204]
[192.72526550 165.48077393]
[202.62222290 176.75242615]
[212.51918030 188.02409363]
[222.41613770 199.29574585]
[232.31309509 210.56739807]
[242.21005249 221.83905029]
[252.10700989 233.11071777]
[262.00396729 244.38237000]
[271.90090942 255.65402222]
[281.79788208 266.92568970]
[294.59149170 268.53765869]
[302.60266113 278.12521362]
[301.95706177 290.20123291]
[311.69055176 301.61434937]
[327.31768799 306.58673096]
[330.56027222 322.66210938]
[318.08258057 333.30352783]
[302.72061157 327.56399536]
[300.27746582 311.34783936]
[290.54394531 299.93475342]
[273.71206665 294.96157837]
[270.52621460 276.82263184]
[260.62927246 265.55099487]
[250.73231506 254.27932739]
[240.83535767 243.00767517]
[230.93840027 231.73600769]
[221.04144287 220.46435547]
[211.14448547 209.19270325]
[201.24752808 197.92105103]
[191.35057068 186.64938354]
[181.45361328 175.37773132]
[174.68183899 172.42700195]
[171.49667358 163.87159729]
[161.76318359 152.45849609]
[152.02967834 141.04537964]
[142.29617310 129.63227844]
[128.04374695 134.30863953]
[126.96385956 149.26971436]
[139.72251892 157.82028198]
[146.48214722 171.61169434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 215]
[9 214]
[15 51]
[16 50]
[17 49]
[18 48]
[19 47]
[20 45]
[21 44]
[22 43]
[24 41]
[25 40]
[26 39]
[28 38]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[68 80]
[69 79]
[70 78]
[91 173]
[92 172]
[93 171]
[94 170]
[95 169]
[98 166]
[99 165]
[100 164]
[101 163]
[102 162]
[104 158]
[105 157]
[106 156]
[107 155]
[113 151]
[114 150]
[115 149]
[117 147]
[118 146]
[119 145]
[126 144]
[127 143]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[174 213]
[175 212]
[176 211]
[177 210]
[178 208]
[179 207]
[180 206]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
