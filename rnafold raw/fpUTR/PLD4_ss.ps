%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACAAAGAGGAAGUAGCUGGAAGGGGAAGGAGCCAGCUGCAGAGAGGAGGAGGUGAGCUGCAGAGAAGAGGAGGUUGGUGUGGAGCACAGGCAGCACCGAGCCUGCCCCGUGAGCUGAGGGCCUGCAGUCUGCGGCUGGAAUCAGGAUAGACACCAAGGCAGGACCCCCAGAGAGCUGGAGCUGCUGGUG\
) } def
/len { sequence length } bind def

/coor [
[99.25434875 283.38171387]
[88.67538452 294.19561768]
[75.27157593 301.20941162]
[60.35607529 303.73590088]
[45.39016342 301.52758789]
[31.84004402 294.80081177]
[21.03321648 284.21459961]
[14.02842903 270.80609131]
[11.51193523 255.88890076]
[13.73027706 240.92448425]
[20.46612358 227.37887573]
[31.05956650 216.57913208]
[44.47276688 209.58332825]
[59.39163589 207.07684326]
[61.58127213 192.23751831]
[63.77090454 177.39819336]
[65.96054077 162.55886841]
[68.15017700 147.71954346]
[70.33981323 132.88021851]
[72.52944946 118.04090118]
[73.37083435 107.74801636]
[77.40053558 99.66525269]
[83.37711334 94.62451935]
[89.89149475 92.92416382]
[95.56891632 94.31558990]
[95.81307220 79.31758118]
[96.05722809 64.31956482]
[77.02506256 55.12555695]
[64.79825592 37.96535492]
[62.33869171 17.10531998]
[70.18953705 -2.30566430]
[86.35692596 -15.50711060]
[82.49430084 -30.00125122]
[69.19268036 -42.72486877]
[74.39691925 -59.47767258]
[70.29888153 -73.90702057]
[66.20084381 -88.33637238]
[62.10280991 -102.76571655]
[58.00477219 -117.19506836]
[53.90673447 -131.62442017]
[49.80869675 -146.05375671]
[45.71065903 -160.48310852]
[41.61262131 -174.91246033]
[37.51458359 -189.34181213]
[33.41654968 -203.77114868]
[19.89486313 -211.50431824]
[15.94442272 -226.19610596]
[23.40014267 -239.03930664]
[12.18695450 -250.20062256]
[16.15277863 -264.55755615]
[12.05474186 -278.98690796]
[7.95670414 -293.41625977]
[-6.45983315 -298.84484863]
[-14.81782246 -311.57266235]
[-14.08721733 -326.60363770]
[-4.75753498 -338.18359375]
[-15.97072315 -349.34490967]
[-12.00489807 -363.70184326]
[-16.10293579 -378.13119507]
[-20.20097351 -392.56051636]
[-24.29900932 -406.98986816]
[-29.66170120 -414.40359497]
[-28.34426689 -421.68750000]
[-32.20689392 -436.18164062]
[-45.60091400 -444.13388062]
[-49.31169510 -458.88803101]
[-41.64791489 -471.60818481]
[-44.84864044 -474.59301758]
[-46.73410797 -478.09170532]
[-47.30483627 -481.62463379]
[-46.71799850 -484.76214600]
[-45.25732803 -487.17160034]
[-48.16871262 -501.88635254]
[-51.19976425 -516.57690430]
[-54.35027313 -531.24230957]
[-57.50078583 -545.90771484]
[-60.65129852 -560.57312012]
[-63.80181122 -575.23858643]
[-74.26502991 -587.10583496]
[-69.37348175 -601.17425537]
[-74.24243164 -608.92120361]
[-72.45386505 -616.10400391]
[-75.36524963 -630.81872559]
[-78.27664185 -645.53344727]
[-91.12487030 -654.34033203]
[-93.86781311 -669.30462646]
[-85.39263916 -681.49920654]
[-88.30402374 -696.21392822]
[-99.50547791 -708.19140625]
[-94.47519684 -723.79998779]
[-78.38790894 -726.98297119]
[-67.79283142 -714.46594238]
[-73.58927155 -699.12536621]
[-70.67788696 -684.41058350]
[-58.19754791 -676.36218262]
[-55.03536987 -661.48083496]
[-63.56188965 -648.44488525]
[-60.65050507 -633.73010254]
[-57.73911667 -619.01538086]
[-54.70806885 -604.32476807]
[-44.47019577 -593.50653076]
[-49.13639832 -578.38909912]
[-45.98588562 -563.72363281]
[-42.83537674 -549.05822754]
[-39.68486404 -534.39282227]
[-36.53435135 -519.72741699]
[-32.04888916 -513.83917236]
[-33.45396423 -504.79772949]
[-30.54257774 -490.08297729]
[-27.15377426 -475.47079468]
[-14.17621326 -468.25149536]
[-10.05248451 -453.60739136]
[-17.71275520 -440.04428101]
[-13.85012627 -425.55014038]
[-9.86966133 -411.08792114]
[-5.77162457 -396.65856934]
[-1.67358732 -382.22921753]
[2.42444992 -367.79986572]
[13.34451866 -357.67062378]
[9.67181301 -342.28161621]
[23.69539261 -337.33416748]
[32.21747971 -324.93103027]
[31.79713440 -309.71011353]
[22.38605309 -297.51428223]
[26.48408890 -283.08493042]
[30.58212662 -268.65560913]
[41.50219727 -258.52636719]
[37.82949066 -243.13734436]
[50.92284012 -236.13023376]
[55.28438568 -221.55519104]
[47.84589767 -207.86918640]
[51.94393539 -193.43984985]
[56.04196930 -179.01049805]
[60.14000702 -164.58114624]
[64.23804474 -150.15179443]
[68.33608246 -135.72245789]
[72.43412018 -121.29310608]
[76.53215790 -106.86375427]
[80.63019562 -92.43440247]
[84.72823334 -78.00505829]
[88.82627106 -63.57571030]
[99.24182892 -57.40539551]
[102.76810455 -45.40572739]
[96.98844147 -33.86388016]
[100.85106659 -19.36973953]
[108.41432190 -19.29860115]
[115.84203339 -17.87137985]
[122.89305878 -15.13441181]
[129.33847046 -11.17655659]
[134.96899414 -6.12631178]
[139.60185242 -0.14764053]
[143.08662415 6.56535149]
[145.31016541 13.79471779]
[146.20030212 21.30574799]
[145.72811890 28.85458374]
[143.90893555 36.19614410]
[156.97994995 43.55473328]
[172.13102722 39.05802917]
[185.98408508 46.66514587]
[190.32035828 61.86291885]
[182.56719971 75.63478088]
[167.32443237 79.81012726]
[153.63531494 71.91179657]
[149.62135315 56.62573624]
[136.55035400 49.26714706]
[125.24272919 59.19821548]
[111.05524445 64.56372070]
[110.81108856 79.56173706]
[110.56693268 94.55974579]
[114.66497040 108.98909760]
[122.75589752 121.61988831]
[130.84683228 134.25067139]
[138.93775940 146.88146973]
[153.74348450 153.93287659]
[154.76974487 170.29988098]
[140.96080017 179.14550781]
[126.52210999 171.37013245]
[126.30696869 154.97239685]
[118.21604156 142.34159851]
[110.12510681 129.71081543]
[102.03417969 117.08002472]
[87.36876678 120.23053741]
[85.17913055 135.06985474]
[82.98950195 149.90917969]
[80.79986572 164.74850464]
[78.61022949 179.58782959]
[76.42059326 194.42715454]
[74.23095703 209.26647949]
[87.79008484 215.97508240]
[98.61108398 226.54678345]
[105.63383484 239.94589233]
[108.17031860 254.85969543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[25 169]
[26 168]
[27 167]
[32 145]
[33 144]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[43 133]
[44 132]
[45 131]
[48 128]
[50 126]
[51 125]
[52 124]
[56 120]
[58 118]
[59 117]
[60 116]
[61 115]
[63 114]
[64 113]
[67 110]
[72 109]
[73 108]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[80 100]
[82 99]
[83 98]
[84 97]
[87 94]
[88 93]
[156 165]
[157 164]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
