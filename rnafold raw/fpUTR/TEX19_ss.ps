%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCCUGGGUGCCCACAUGAACAGAGACACCAGGAUGCUCUCCUGAGACCACAGCAACUGCAGAAGCUGAAGACAUUUCCAGAAGUUCAAGCUUCCACCCUCUGCAGGUCCCCACUGAGCUGGGACCCAGGUCAUCCACCCCACCCCAAAUCCCUGGAUAGGAAACCCCUUUCUCCUCCUGCUCCUUGUCCCCUUCAUCCCUGCCGCCCAGCAUCCUACUGGCCUCAGCACCUGUGGCCAGACCGUCCAAGAU\
CCUCUGAAGGCCCAGCUCUUGCUGUCCACCCCGGCAGUAGGCAGGCAGCCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[574.31958008 528.61688232]
[557.76690674 522.88134766]
[544.12902832 512.32476807]
[534.72918701 498.19064331]
[530.40850830 482.05667114]
[531.45257568 465.65924072]
[537.57885742 450.70684814]
[525.65167236 441.61053467]
[513.72454834 432.51422119]
[501.79739380 423.41787720]
[489.87023926 414.32156372]
[477.94308472 405.22525024]
[466.01593018 396.12893677]
[454.04299927 387.09295654]
[440.41168213 393.09738159]
[425.50598145 391.46170044]
[413.33990479 382.52563477]
[407.24014282 368.60839844]
[408.93652344 353.40740967]
[396.91812134 344.43203735]
[384.89968872 335.45666504]
[372.88125610 326.48129272]
[360.86282349 317.50592041]
[346.20501709 319.89007568]
[333.88876343 310.95898438]
[331.48742676 295.56835938]
[324.28598022 294.09146118]
[319.39352417 286.44110107]
[307.46636963 277.34478760]
[295.53921509 268.24847412]
[283.61209106 259.15216064]
[278.89135742 258.88009644]
[274.27871704 255.67387390]
[271.53833008 249.74961853]
[259.79736328 240.41419983]
[248.05641174 231.07879639]
[236.31546021 221.74337769]
[229.16207886 220.04895020]
[224.50367737 212.25387573]
[212.85762024 202.80033875]
[200.63862610 209.31259155]
[186.81777954 210.68975830]
[173.47113037 206.69190979]
[162.61611938 197.88897705]
[155.90660095 185.57980347]
[154.38092041 171.60052490]
[158.30131531 158.05073547]
[146.75134277 148.48004150]
[135.20137024 138.90934753]
[123.65140533 129.33865356]
[117.01271057 136.53263855]
[108.23797607 142.11648560]
[97.74726105 145.47370911]
[86.13344574 146.10421753]
[74.12876129 143.67127991]
[62.55885315 138.03890991]
[52.28723907 129.29612732]
[44.15384293 117.76583862]
[38.91183090 103.99704742]
[37.16725922 88.74008942]
[22.30652046 86.70085907]
[7.44578314 84.66162109]
[-7.41495419 82.62238312]
[-22.27569199 80.58314514]
[-37.13642883 78.54390717]
[-51.99716568 76.50467682]
[-66.92070007 74.99201202]
[-81.88837433 74.00781250]
[-96.85605621 73.02362061]
[-111.82373047 72.03942108]
[-126.79618835 71.13083649]
[-141.77304077 70.29788208]
[-156.74989319 69.46492767]
[-163.30636597 83.17919922]
[-174.61532593 93.33675385]
[-188.95222473 98.38864899]
[-204.13081360 97.56450653]
[-217.83644104 90.98999786]
[-227.97911072 79.66769409]
[-233.01214600 65.32415771]
[-232.16802979 50.14667511]
[-225.57550049 36.44970703]
[-214.23986816 26.32193756]
[-199.88970947 21.30777740]
[-184.71336365 22.17185211]
[-171.02507019 28.78239632]
[-160.91223145 40.13134766]
[-155.91694641 54.48807526]
[-140.94009399 55.32102585]
[-125.96323395 56.15398026]
[-119.14621735 53.40258026]
[-110.83953094 57.07174301]
[-95.87185669 58.05594254]
[-80.90418243 59.04013824]
[-65.93650055 60.02433395]
[-76.17989349 49.06655121]
[-77.06848145 34.09289551]
[-68.19297791 22.00052452]
[-53.64160919 18.35942268]
[-40.11701965 24.84675598]
[-33.84889984 38.47432709]
[-37.72447586 52.96501160]
[-49.95793152 61.64393616]
[-35.09719086 63.68317413]
[-20.23645592 65.72241211]
[-5.37571764 67.76164246]
[9.48501968 69.80088043]
[24.34575653 71.84011841]
[39.20649338 73.87935638]
[46.19797516 60.60836411]
[36.11231613 49.50523376]
[26.02665901 38.40210342]
[15.94100094 27.29897118]
[5.85534334 16.19584084]
[-9.34204483 18.84969330]
[-23.55280495 12.84487343]
[-32.24233246 0.09749502]
[-32.63783264 -15.32479763]
[-24.61310196 -28.50080872]
[-10.72880363 -35.22612000]
[4.58463335 -33.35470963]
[16.44074821 -23.48373604]
[21.05629539 -8.76299286]
[16.95847321 6.11018372]
[27.04413223 17.21331406]
[37.12979126 28.31644440]
[47.21544647 39.41957474]
[57.30110550 50.52270508]
[70.57209778 43.53122330]
[67.11831665 28.93425941]
[63.66454315 14.33729267]
[60.21076584 -0.25967363]
[56.75698853 -14.85663986]
[41.67264557 -15.46099472]
[27.31108284 -20.11374283]
[14.73801899 -28.46961594]
[4.88645983 -39.90855789]
[-1.51254344 -53.58171844]
[-3.98414230 -68.47445679]
[-2.34492755 -83.48164368]
[3.28346014 -97.48963165]
[12.48335743 -109.45894623]
[24.57206917 -118.50138092]
[38.65253448 -123.94593048]
[53.67988968 -125.38856506]
[68.53900146 -122.72223663]
[82.12723541 -116.14479828]
[93.43624115 -106.14435577]
[101.62681580 -93.46298981]
[106.09117889 -79.04175568]
[106.49803162 -63.95079422]
[102.81718445 -49.30996323]
[95.32179260 -36.20570374]
[84.56804657 -25.61044312]
[71.35395050 -18.31041718]
[74.80773163 -3.71345067]
[78.26150513 10.88351536]
[81.71528625 25.48048210]
[85.16905975 40.07744980]
[92.66905975 40.07744980]
[107.66905975 40.07744980]
[115.16905975 40.07744980]
[118.62284088 25.48048210]
[122.07661438 10.88351536]
[114.90670776 -3.46820903]
[121.78741455 -17.96080780]
[137.44044495 -21.47680092]
[149.85813904 -11.31901646]
[149.51469421 4.72035980]
[136.67358398 14.33729267]
[133.21980286 28.93425941]
[129.76602173 43.53122330]
[148.53631592 85.14311218]
[133.22210693 117.78868103]
[144.77207947 127.35937500]
[156.32203674 136.93006897]
[167.87200928 146.50077820]
[182.63136292 139.59465027]
[198.86654663 139.82829285]
[213.31690979 147.10383606]
[223.10244751 159.91423035]
[226.29786682 175.65513611]
[222.31115723 191.15428162]
[233.95721436 200.60781860]
[245.65086365 210.00242615]
[257.39181519 219.33782959]
[269.13278198 228.67324829]
[280.87374878 238.00866699]
[292.70840454 247.22499084]
[304.63555908 256.32131958]
[316.56271362 265.41763306]
[328.48986816 274.51394653]
[340.46279907 283.54992676]
[355.90182495 281.48248291]
[367.96237183 290.75601196]
[369.83819580 305.48748779]
[381.85662842 314.46286011]
[393.87506104 323.43823242]
[405.89349365 332.41363525]
[417.91192627 341.38900757]
[432.00558472 335.44631958]
[447.08200073 337.34347534]
[459.10464478 346.47155762]
[464.90527344 360.29937744]
[463.01837158 375.07452393]
[471.71710205 377.68142700]
[475.11224365 384.20178223]
[487.03939819 393.29809570]
[498.96655273 402.39440918]
[510.89370728 411.49075317]
[522.82086182 420.58706665]
[534.74798584 429.68338013]
[546.67517090 438.77969360]
[558.10516357 429.59164429]
[571.94183350 424.03250122]
[587.04278564 422.71536255]
[602.11566162 425.89642334]
[615.82885742 433.44082642]
[626.92907715 444.82223511]
[634.35534668 459.15768433]
[637.33953857 475.27517700]
[652.33477783 474.89642334]
[667.33001709 474.51763916]
[682.32519531 474.13888550]
[697.32043457 473.76010132]
[712.31561279 473.38134766]
[725.91601562 465.29803467]
[738.83459473 472.71148682]
[753.82983398 472.33273315]
[768.82507324 471.95394897]
[784.50646973 465.50958252]
[795.04003906 478.79415894]
[785.19061279 492.59362793]
[769.20379639 486.94915771]
[754.20861816 487.32794189]
[739.21337891 487.70669556]
[726.68554688 495.76290894]
[712.69439697 488.37655640]
[697.69921875 488.75534058]
[682.70397949 489.13409424]
[667.70874023 489.51287842]
[652.71356201 489.89163208]
[637.71832275 490.27041626]
[633.92468262 496.74020386]
[647.26580811 503.59689331]
[660.60693359 510.45358276]
[673.94805908 517.31024170]
[687.28918457 524.16693115]
[700.63031006 531.02362061]
[713.97143555 537.88031006]
[727.31262207 544.73699951]
[741.65545654 549.12817383]
[747.10333252 563.10388184]
[739.51623535 576.04357910]
[724.65979004 578.11401367]
[713.82373047 567.74127197]
[701.32568359 559.44677734]
[688.82763672 551.15228271]
[676.32958984 542.85778809]
[663.83154297 534.56323242]
[651.33343506 526.26873779]
[638.83538818 517.97424316]
[626.33734131 509.67977905]
[622.54370117 516.14953613]
[629.53515625 529.42053223]
[636.52667236 542.69152832]
[643.51812744 555.96252441]
[658.34606934 560.73443604]
[665.24737549 574.29272461]
[660.60668945 588.39941406]
[667.59814453 601.67041016]
[674.58966064 614.94140625]
[681.91400146 628.03161621]
[689.56658936 640.93273926]
[697.21917725 653.83380127]
[704.87170410 666.73492432]
[712.52429199 679.63598633]
[720.17687988 692.53710938]
[727.82940674 705.43817139]
[735.48199463 718.33929443]
[743.13458252 731.24035645]
[758.50756836 734.90728760]
[766.71374512 748.41412354]
[762.88446045 763.74749756]
[749.29162598 771.81042480]
[733.99957275 767.81927490]
[726.08087158 754.14190674]
[730.23345947 738.89294434]
[722.58093262 725.99188232]
[714.92834473 713.09075928]
[707.27575684 700.18969727]
[699.62316895 687.28857422]
[691.97064209 674.38751221]
[684.31805420 661.48638916]
[676.66546631 648.58532715]
[669.01293945 635.68420410]
[663.10552979 649.47198486]
[648.67053223 653.55004883]
[636.42181396 644.89160156]
[635.45062256 629.92309570]
[646.47772217 619.75439453]
[661.31866455 621.93292236]
[654.32714844 608.66192627]
[647.33569336 595.39093018]
[633.07690430 591.24084473]
[625.79754639 577.88177490]
[630.24713135 562.95404053]
[623.25567627 549.68304443]
[616.26416016 536.41204834]
[609.27270508 523.14105225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 213]
[8 212]
[9 211]
[10 210]
[11 209]
[12 208]
[13 207]
[14 205]
[19 200]
[20 199]
[21 198]
[22 197]
[23 196]
[26 193]
[28 192]
[29 191]
[30 190]
[31 189]
[34 188]
[35 187]
[36 186]
[37 185]
[39 184]
[40 183]
[47 177]
[48 176]
[49 175]
[50 174]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[67 95]
[68 94]
[69 93]
[70 92]
[71 90]
[72 89]
[73 88]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[129 159]
[130 158]
[131 157]
[132 156]
[133 155]
[162 172]
[163 171]
[164 170]
[221 243]
[222 242]
[223 241]
[224 240]
[225 239]
[226 238]
[228 236]
[229 235]
[230 234]
[264 310]
[265 309]
[266 308]
[267 307]
[270 304]
[271 303]
[272 302]
[273 296]
[274 295]
[275 294]
[276 293]
[277 292]
[278 291]
[279 290]
[280 289]
[281 288]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
