%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAUUGGGCGCUGGGAGUCGAGGGGGCGGGAGGCGGGAAUUCGUCUCGGGUUGUGUGGUUGAGGGGUCUGGUGGGUCGAGGAAAGGUAACGGCGGCCCCAGUCCUGCACACAAGGCCGGGGAAGUAGCAGCACCCCCAGGAAGAGGGAGGAGGAAGGGCUCGUGCCCUUUCUUCUCUUCCAGGGCUCCGCUUUAUUUGCUCUCAGAAGUCGGUUUCCUUUCCUUUUCUUCAGUGAAUCGGAGCUCAGAGCGUUG\
CUUCGGUUUCCCUCCAGACAGUUAGGAAUCUGAAAUAAACAGGAAAGCACU\
) } def
/len { sequence length } bind def

/coor [
[342.43750000 325.74264526]
[340.75259399 340.64770508]
[339.06765747 355.55279541]
[346.11251831 370.36163330]
[336.58853149 383.71176147]
[320.29315186 381.86968994]
[313.98971558 366.73037720]
[324.16259766 353.86785889]
[325.84750366 338.96279907]
[327.53244019 324.05773926]
[318.73776245 315.00344849]
[317.39819336 301.98162842]
[305.54870605 292.78439331]
[293.69918823 283.58712769]
[281.84970093 274.38989258]
[270.00018311 265.19265747]
[258.15069580 255.99540710]
[246.30119324 246.79815674]
[234.45169067 237.60092163]
[219.65344238 235.90940857]
[213.49589539 221.33563232]
[201.64639282 212.13838196]
[186.84814453 210.44686890]
[180.69058228 195.87309265]
[168.84107971 186.67584229]
[156.99157715 177.47860718]
[145.14207458 168.28135681]
[133.29257202 159.08410645]
[121.44307709 149.88687134]
[109.59357452 140.68962097]
[94.61320496 141.45678711]
[83.76522064 151.81637573]
[72.91723633 162.17597961]
[62.06925583 172.53556824]
[51.22127151 182.89517212]
[40.37329102 193.25477600]
[29.52530670 203.61436462]
[25.43912697 219.49627686]
[9.57141209 223.63725281]
[-1.75449264 211.77740479]
[3.11253214 196.11714172]
[19.16570854 192.76638794]
[30.01369095 182.40678406]
[40.86167526 172.04719543]
[51.70965576 161.68759155]
[62.55764008 151.32798767]
[73.40562439 140.96839905]
[84.25360107 130.60879517]
[69.86032104 118.59748077]
[63.59220505 100.36592865]
[48.75703049 98.14836884]
[33.92185593 95.93080139]
[19.08668137 93.71324158]
[4.29428577 99.32534027]
[-7.14927101 89.79148865]
[-21.98444557 87.57392883]
[-36.81962204 85.35636139]
[-51.65479660 83.13880157]
[-66.50112152 80.99716949]
[-81.35821533 78.93153381]
[-86.10305786 80.85314941]
[-90.66275024 80.80110931]
[-94.32645416 79.16767883]
[-96.63690948 76.56768799]
[-111.42359924 74.04698944]
[-126.21028137 71.52629089]
[-140.99696350 69.00559235]
[-149.93034363 70.64426422]
[-155.92173767 66.38269806]
[-170.68185425 63.71081924]
[-185.44197083 61.03893661]
[-200.20208740 58.36705780]
[-206.46522522 60.21359253]
[-211.91867065 58.85835648]
[-215.23559570 55.48650360]
[-229.93794250 52.51311874]
[-244.64028931 49.53973389]
[-259.34265137 46.56634521]
[-274.04498291 43.59296036]
[-287.11676025 52.06445312]
[-301.98468018 48.83957672]
[-309.98040771 36.32542038]
[-321.31704712 46.92071533]
[-336.72042847 48.79556656]
[-350.26766968 41.22904968]
[-356.74954224 27.13065147]
[-353.67367554 11.92149162]
[-342.22274780 1.44980156]
[-326.79992676 -0.25783980]
[-313.33557129 7.45519066]
[-307.00701904 21.62307549]
[-294.77685547 13.19937992]
[-279.82421875 16.00537682]
[-271.07159424 28.89061356]
[-256.36926270 31.86400032]
[-241.66690063 34.83738708]
[-226.96455383 37.81077194]
[-212.26222229 40.78416061]
[-197.53021240 43.60694122]
[-182.77009583 46.27882004]
[-168.00997925 48.95069885]
[-153.24986267 51.62258148]
[-138.47627258 54.21890640]
[-123.68958282 56.73960495]
[-108.90289307 59.26030350]
[-94.11621094 61.78100586]
[-79.29257202 64.07444763]
[-64.43548584 66.14008331]
[-57.41370392 63.96008301]
[-49.43723297 68.30362701]
[-34.60205841 70.52118683]
[-19.76688385 72.73875427]
[-4.93170834 74.95631409]
[8.79957485 69.18560028]
[21.30424309 78.87806702]
[36.13941956 81.09562683]
[50.97459412 83.31319427]
[65.80976868 85.53075409]
[74.32588196 73.18264771]
[66.98149872 60.10364914]
[59.63711929 47.02465820]
[52.29273987 33.94566345]
[37.34235764 29.57257462]
[30.08042717 16.20399284]
[34.34163284 1.97803974]
[26.99725342 -11.10095406]
[12.62563801 -18.99960709]
[12.55083179 -35.39858246]
[26.84978867 -43.42802429]
[40.81296539 -34.82792664]
[40.07624817 -18.44533348]
[47.42062759 -5.36634064]
[61.78543091 -1.59964061]
[69.41999054 11.55969524]
[65.37173462 26.60128212]
[72.71611023 39.68027496]
[80.06049347 52.75926971]
[87.40487671 65.83826447]
[92.38138580 67.80256653]
[96.68918610 70.42130280]
[98.83081818 55.57497787]
[100.97244263 40.72864914]
[99.27201843 36.85738373]
[98.89878082 33.02706528]
[99.68212891 29.64180565]
[101.33984375 27.01138687]
[103.51752472 25.32352257]
[106.26489258 10.57727051]
[109.01226044 -4.16898298]
[111.75962830 -18.91523552]
[114.50699615 -33.66148758]
[117.25436401 -48.40774155]
[120.00172424 -63.15399551]
[122.74909210 -77.90024567]
[125.49645996 -92.64649963]
[128.24382019 -107.39275360]
[130.99119568 -122.13900757]
[133.73855591 -136.88525391]
[136.48593140 -151.63151550]
[139.23329163 -166.37776184]
[133.26640320 -181.65284729]
[143.72145081 -194.28709412]
[159.84318542 -191.28346252]
[165.04693604 -175.73184204]
[153.97955322 -163.63040161]
[151.23217773 -148.88414001]
[148.48481750 -134.13789368]
[145.73744202 -119.39163971]
[142.99008179 -104.64538574]
[140.24270630 -89.89913177]
[137.49534607 -75.15287781]
[134.74798584 -60.40662766]
[132.00061035 -45.66037369]
[129.25325012 -30.91412163]
[126.50588226 -16.16786957]
[123.75851440 -1.42161620]
[121.01114655 13.32463646]
[118.26377869 28.07089043]
[115.81877136 42.87027740]
[113.67713928 57.71660614]
[111.53551483 72.56293488]
[119.77554321 76.87330627]
[126.44502258 83.64402771]
[130.81553650 92.31319427]
[132.35678101 102.10583496]
[130.79795837 112.10288239]
[126.16522217 121.32743073]
[118.79081726 128.84011841]
[130.64031982 138.03736877]
[142.48982239 147.23460388]
[154.33932495 156.43185425]
[166.18882751 165.62910461]
[178.03833008 174.82633972]
[189.88783264 184.02359009]
[205.53363037 186.37294006]
[210.84362793 200.28887939]
[222.69313049 209.48612976]
[238.33892822 211.83547974]
[243.64892578 225.75141907]
[255.49842834 234.94865417]
[267.34793091 244.14590454]
[279.19744873 253.34313965]
[291.04693604 262.54040527]
[302.89645386 271.73764038]
[314.74594116 280.93487549]
[326.59545898 290.13211060]
[347.83184814 291.32827759]
[355.66043091 310.28332520]
[368.46804810 318.09133911]
[381.27566528 325.89935303]
[390.18203735 327.67892456]
[394.17379761 333.85336304]
[409.97775269 334.59216309]
[416.68151855 347.89285278]
[429.40856934 355.83151245]
[442.13562012 363.77017212]
[454.86267090 371.70883179]
[467.58972168 379.64749146]
[480.31674194 387.58615112]
[493.50692749 394.72891235]
[507.11053467 401.04885864]
[520.71417236 407.36880493]
[534.31774902 413.68875122]
[547.92138672 420.00869751]
[566.46411133 412.15298462]
[584.49200439 420.41442871]
[590.45983887 439.00302124]
[604.25103760 444.90243530]
[618.04223633 450.80184937]
[632.56292725 445.16384888]
[646.46514893 451.34313965]
[651.75061035 465.22116089]
[665.54180908 471.12057495]
[683.79534912 468.52197266]
[693.72619629 483.01684570]
[707.57702637 488.77481079]
[721.42785645 494.53280640]
[735.27868652 500.29077148]
[749.12951660 506.04873657]
[762.98040771 511.80670166]
[776.83123779 517.56469727]
[790.68206787 523.32263184]
[804.53289795 529.08062744]
[818.38372803 534.83862305]
[830.53179932 525.44073486]
[845.75341797 523.39184570]
[859.95404053 529.24310303]
[869.31384277 541.42053223]
[871.31500244 556.64849854]
[865.41925049 570.83074951]
[853.21252441 580.15228271]
[837.97839355 582.10571289]
[823.81469727 576.16552734]
[814.53143311 563.92968750]
[812.62579346 548.68945312]
[798.77490234 542.93145752]
[784.92407227 537.17352295]
[771.07324219 531.41552734]
[757.22241211 525.65753174]
[743.37158203 519.89959717]
[729.52075195 514.14160156]
[715.66992188 508.38363647]
[701.81903076 502.62567139]
[687.96820068 496.86767578]
[676.70367432 501.18804932]
[665.13604736 496.54467773]
[659.64239502 484.91174316]
[645.85119629 479.01235962]
[632.16430664 484.77459717]
[618.09399414 478.98822021]
[612.14282227 464.59304810]
[598.35162354 458.69363403]
[584.56048584 452.79421997]
[576.48645020 458.99069214]
[566.49633789 461.32055664]
[556.35626221 459.30371094]
[547.88720703 453.23468018]
[542.63775635 444.14154053]
[541.60144043 433.61230469]
[527.99780273 427.29235840]
[514.39422607 420.97241211]
[500.79058838 414.65246582]
[487.18698120 408.33251953]
[495.67907715 420.69717407]
[498.02423096 435.51272583]
[493.76602173 449.89562988]
[483.73321533 461.04653931]
[469.87850952 466.79516602]
[454.89840698 466.02270508]
[441.70849609 458.87942505]
[432.87591553 446.75567627]
[430.11975098 432.01107788]
[433.97640991 417.51535034]
[443.69528198 406.08978271]
[457.38482666 399.95816040]
[472.37808228 400.31320190]
[459.65103149 392.37454224]
[446.92401123 384.43588257]
[434.19696045 376.49722290]
[421.46990967 368.55856323]
[408.74285889 360.61990356]
[393.84924316 360.44891357]
[386.23513794 346.58038330]
[373.46765137 338.70697021]
[360.66003418 330.89895630]
[347.85241699 323.09094238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[21 197]
[22 196]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[50 118]
[51 117]
[52 116]
[53 115]
[55 113]
[56 112]
[57 111]
[58 110]
[59 108]
[60 107]
[64 106]
[65 105]
[66 104]
[67 103]
[69 102]
[70 101]
[71 100]
[72 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[82 91]
[119 138]
[120 137]
[121 136]
[122 135]
[125 132]
[126 131]
[140 181]
[141 180]
[142 179]
[147 178]
[148 177]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[208 306]
[209 305]
[210 304]
[212 303]
[214 301]
[215 300]
[216 299]
[217 298]
[218 297]
[219 296]
[220 283]
[221 282]
[222 281]
[223 280]
[224 279]
[227 273]
[228 272]
[229 271]
[232 268]
[233 267]
[235 264]
[236 263]
[237 262]
[238 261]
[239 260]
[240 259]
[241 258]
[242 257]
[243 256]
[244 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
