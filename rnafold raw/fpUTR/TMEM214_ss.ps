%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCGGGCGCCGGGCGCGCGGUCCUGCGAGGAGACGUGGCAGAGUGCGGCGCGCUCGCGCCGGACCGGAAAGCCGGGGAAGUGGCCGAGGAGGGAGGGCUGCGAGCC\
) } def
/len { sequence length } bind def

/coor [
[88.20623016 174.14448547]
[90.94116211 154.95672607]
[91.36563873 139.96273804]
[91.79012299 124.96874237]
[77.42578125 113.46270752]
[74.12971497 95.35582733]
[60.73582840 88.60277557]
[47.34193802 81.84971619]
[33.94805145 75.09666443]
[24.72895241 73.99440002]
[20.27473831 67.95828247]
[7.07731867 60.82889557]
[-6.12010145 53.69951248]
[-15.30431461 52.33680344]
[-19.58592987 46.17704773]
[-32.57630920 38.67704773]
[-45.56669235 31.17704964]
[-58.55707169 23.67704964]
[-71.54745483 16.17704964]
[-84.53783417 8.67704868]
[-97.52821350 1.17704916]
[-110.51860046 -6.32295084]
[-126.33854675 -6.52233839]
[-133.49203491 -19.58667374]
[-146.48242188 -27.08667374]
[-159.57763672 -34.40209579]
[-172.87461853 -41.34401321]
[-186.26850891 -48.09706879]
[-199.66238403 -54.85012436]
[-213.05627441 -61.60317993]
[-228.86216736 -60.90723419]
[-236.74331665 -73.54593658]
[-252.54920959 -72.84999084]
[-260.43035889 -85.48869324]
[-277.29562378 -87.22059631]
[-280.30017090 -103.90618896]
[-265.09838867 -111.41234589]
[-253.67730713 -98.88257599]
[-238.82943726 -100.06154633]
[-229.99026489 -86.93981934]
[-215.14239502 -88.11878967]
[-206.30322266 -74.99707031]
[-192.90933228 -68.24401093]
[-179.51544189 -61.49095535]
[-166.12156677 -54.73789978]
[-158.62268066 -54.53371048]
[-152.44824219 -47.59951782]
[-144.95816040 -47.18320084]
[-138.98242188 -40.07705307]
[-125.99203491 -32.57705307]
[-111.10124969 -32.91411591]
[-103.01860046 -19.31333160]
[-90.02821350 -11.81333160]
[-77.03783417 -4.31333208]
[-64.04745483 3.18666816]
[-51.05707169 10.68666840]
[-38.06669235 18.18666840]
[-25.07631111 25.68666840]
[-12.08592987 33.18666840]
[1.00928211 40.50209045]
[14.20670223 47.63147736]
[27.40412140 54.76086044]
[40.70110703 61.70277405]
[54.09499359 68.45583344]
[67.48888397 75.20888519]
[80.88277435 81.96194458]
[99.87346649 67.86415100]
[127.42421722 73.71258545]
[140.19715881 65.84797668]
[152.97009277 57.98336792]
[165.74302673 50.11875916]
[173.05711365 35.44101334]
[189.43980408 34.70652771]
[198.03799438 48.67087936]
[190.00660706 62.96873856]
[173.60763550 62.89169693]
[160.83470154 70.75630188]
[148.06176758 78.62091064]
[135.28881836 86.48551941]
[134.97052002 93.97876740]
[149.95698547 94.61563110]
[149.31987000 109.60209656]
[134.33389282 108.96524811]
[134.01559448 116.45848846]
[146.07554626 125.37799072]
[158.13549805 134.29748535]
[170.19546509 143.21697998]
[182.25541687 152.13648987]
[194.31536865 161.05598450]
[208.36674500 154.85482788]
[223.63444519 156.52610779]
[236.01152039 165.62025452]
[242.16859436 179.69100952]
[240.44946289 194.95338440]
[231.31655884 207.30189514]
[217.22657776 213.41484070]
[201.96966553 211.64787292]
[189.64985657 202.47630310]
[183.58110046 188.36723328]
[185.39587402 173.11593628]
[173.33592224 164.19644165]
[161.27595520 155.27694702]
[149.21600342 146.35743713]
[137.15605164 137.43794250]
[125.09609222 128.51844788]
[118.34046173 128.73222351]
[112.15921783 127.62803650]
[106.78411865 125.39321899]
[106.35963440 140.38720703]
[105.93515015 155.38121033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[6 66]
[7 65]
[8 64]
[9 63]
[11 62]
[12 61]
[13 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[24 50]
[25 49]
[26 47]
[27 45]
[28 44]
[29 43]
[30 42]
[32 40]
[34 38]
[68 79]
[69 78]
[70 77]
[71 76]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
