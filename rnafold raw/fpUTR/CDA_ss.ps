%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAACCAUGGGAGGCUCCUCUCCUAGACCCUGCAUCCUGAAAGCUGCGUACCUGAGAGCCUGCGGUCUGGCUGCAGGGACACACCCAAGGGGAGGAGCUGCAAUCGUGUCUGGGGCCCCAGCCCAGGCUGGCCGGAGCUCCUGUUUCCCGCUGCUCUGCUGCCUGCCCGGGGUACCAAC\
) } def
/len { sequence length } bind def

/coor [
[94.16545105 126.41601562]
[86.66014862 123.53499603]
[80.33289337 118.57559204]
[75.74244690 111.97576904]
[73.29420471 104.31835175]
[73.20436096 96.27958679]
[59.50117874 90.17853546]
[45.79799652 84.07748413]
[32.09481430 77.97643280]
[18.39163208 71.87538910]
[1.00414419 79.34282684]
[-16.03997803 71.88446808]
[-22.14081764 54.64631271]
[-36.04857635 49.02721405]
[-49.95633316 43.40811539]
[-63.86408997 37.78901672]
[-77.77185059 32.16991806]
[-91.67960358 26.55081940]
[-105.58736420 20.93172073]
[-119.49512482 15.31262112]
[-133.40287781 9.69352245]
[-147.31063843 4.07442331]
[-161.21839905 -1.54467547]
[-175.12615967 -7.16377449]
[-192.36462402 5.41654825]
[-213.56903076 5.09231281]
[-230.20338440 -7.84478569]
[-235.66841125 -28.05810356]
[-250.08734131 -32.19266510]
[-264.50625610 -36.32722473]
[-278.92520142 -40.46178436]
[-293.34411621 -44.59634399]
[-307.76303101 -48.73090744]
[-322.18197632 -52.86546707]
[-337.58023071 -49.23173904]
[-347.68179321 -60.17742157]
[-362.10070801 -64.31198120]
[-377.49896240 -60.67825317]
[-387.60052490 -71.62393951]
[-402.01943970 -75.75849915]
[-415.72424316 -68.35468292]
[-430.28817749 -72.75312042]
[-437.26211548 -85.86417389]
[-451.68106079 -89.99873352]
[-469.42437744 -85.12235260]
[-481.12890625 -98.18193817]
[-495.61779785 -102.06422424]
[-506.42129517 -91.14726257]
[-521.24011230 -87.11011505]
[-536.08801270 -91.03877258]
[-546.97106934 -101.87642670]
[-550.96173096 -116.70781708]
[-546.98657227 -131.54336548]
[-536.11486816 -142.39239502]
[-521.27105713 -146.33654785]
[-506.44799805 -142.31489563]
[-495.63311768 -131.40922546]
[-491.73550415 -116.55311584]
[-477.24661255 -112.67082977]
[-466.59967041 -118.44956207]
[-454.48379517 -115.31304932]
[-447.54647827 -104.41765594]
[-433.12756348 -100.28309631]
[-420.26553345 -107.70627594]
[-405.58380127 -103.71864319]
[-397.88488770 -90.17742157]
[-383.46597290 -86.04286194]
[-369.09902954 -89.97232056]
[-357.96615601 -78.73090363]
[-343.54721069 -74.59634399]
[-329.18029785 -78.52580261]
[-318.04739380 -67.28439331]
[-303.62847900 -63.14982986]
[-289.20956421 -59.01527023]
[-274.79061890 -54.88071060]
[-260.37170410 -50.74615097]
[-245.95277405 -46.61159134]
[-231.53384399 -42.47703171]
[-226.06134033 -49.83069992]
[-218.75532532 -55.40546799]
[-210.17388916 -58.75917816]
[-200.97709656 -59.61997223]
[-191.87619019 -57.90827942]
[-183.57856750 -53.74396515]
[-176.73280334 -47.43805313]
[-171.87800598 -39.46950912]
[-169.40130615 -30.44888115]
[-169.50704956 -21.07153130]
[-155.59930420 -15.45243359]
[-141.69154358 -9.83333397]
[-127.78378296 -4.21423531]
[-113.87602234 1.40486348]
[-99.96826172 7.02396250]
[-86.06050873 12.64306164]
[-72.15274811 18.26215935]
[-58.24499130 23.88125992]
[-44.33723450 29.50035858]
[-30.42947578 35.11945724]
[-16.52171898 40.73855591]
[-7.20633030 34.09504700]
[4.27951050 32.77232361]
[15.08323669 37.21574020]
[22.46508408 46.42399597]
[24.49268150 58.17220306]
[38.19586563 64.27325439]
[51.89904785 70.37430573]
[65.60222626 76.47534943]
[79.30541229 82.57640076]
[98.75635529 72.97591400]
[119.00685120 80.74935150]
[127.03774261 100.89912415]
[141.30358887 105.53438568]
[155.56944275 110.16963959]
[171.08514404 107.07551575]
[180.79853821 118.36706543]
[195.06437683 123.00232697]
[209.33023071 127.63758087]
[223.59608459 132.27282715]
[237.86192322 136.90808105]
[247.01936340 136.58564758]
[252.33505249 141.75073242]
[266.40853882 135.07431030]
[280.72232056 140.22894287]
[287.00054932 153.68701172]
[301.18331909 158.57054138]
[315.36608887 163.45405579]
[329.54885864 168.33758545]
[343.73165894 173.22109985]
[352.89331055 173.05853271]
[358.11804199 178.31559753]
[372.21343994 183.44589233]
[386.30883789 188.57620239]
[395.47195435 188.57354736]
[400.60412598 193.92098999]
[414.60784912 199.29650879]
[428.61154175 204.67202759]
[442.61526489 210.04754639]
[456.61895752 215.42306519]
[470.91687012 209.24188232]
[485.04205322 214.89291382]
[490.84677124 228.56188965]
[503.78665161 219.99806213]
[519.28741455 220.70928955]
[531.38867188 230.42207336]
[535.43731689 245.40167236]
[529.87652588 259.88812256]
[516.84448242 268.31106567]
[501.35235596 267.43173218]
[489.35711670 257.58822632]
[485.47125244 242.56559753]
[472.01116943 248.83952332]
[457.73284912 243.58747864]
[451.24343872 229.42677307]
[437.23974609 224.05125427]
[423.23602295 218.67573547]
[409.23233032 213.30021667]
[395.22860718 207.92469788]
[381.17852783 202.67158508]
[367.08312988 197.54129028]
[352.98776245 192.41098022]
[338.84814453 187.40388489]
[324.66534424 182.52035522]
[310.48257446 177.63684082]
[296.29980469 172.75331116]
[282.11700439 167.86979675]
[268.88409424 174.60964966]
[254.43118286 169.85910034]
[247.45152283 155.93350220]
[233.22666931 151.17393494]
[218.96081543 146.53868103]
[204.69497681 141.90342712]
[190.42912292 137.26817322]
[176.16328430 132.63291931]
[161.66796875 136.05857849]
[150.93417358 124.43548584]
[136.66833496 119.80023193]
[122.40248871 115.16497803]
[116.95673370 121.07882690]
[110.01351929 125.13120270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[13 99]
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[36 70]
[37 69]
[39 67]
[40 66]
[43 63]
[44 62]
[46 59]
[47 58]
[111 177]
[112 176]
[113 175]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[121 168]
[124 165]
[125 164]
[126 163]
[127 162]
[128 161]
[130 160]
[131 159]
[132 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
[141 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
