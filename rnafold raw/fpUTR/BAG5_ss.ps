%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCGCGCCCUGGCACCCGGGCCAAGACGCCCGGAGCGGCUGCUGCAGCCAGUAGCGGCCCCUUCACCGGCUGCCCCGCUCAGACCUAGUCGGGAGGGGUGCGAGGCAUGCAGCUGGGGGCCCAGCUCCGGUGCCGCACCCCGUAAAGGGCUGAUCUUCCACCUCGCCACCUCAGCCACGGGACGCCAAGACCGCAUCCAAUUCAGACUUCUUUUGGGUAAAGGGCCAAGAGGGAAGGGCGAGGCGGGGAGGA\
AGCAGCUCGGGCCGCCUUCCCUCCGUGGCCUCCAGGACAUCCGCCGGGGAUAGAUU\
) } def
/len { sequence length } bind def

/coor [
[140.61959839 243.27619934]
[152.71803284 234.40896606]
[167.22056580 238.23908997]
[161.76054382 224.26812744]
[156.30052185 210.29714966]
[150.84049988 196.32617188]
[145.38046265 182.35519409]
[140.04742432 177.29588318]
[139.93658447 168.21595764]
[134.61750793 154.19071960]
[129.29843140 140.16546631]
[123.97936249 126.14022827]
[115.79297638 140.33114624]
[100.21215057 151.15281677]
[78.94593811 155.10858154]
[71.18587494 167.94529724]
[73.50991058 180.59733582]
[66.82462311 191.11628723]
[55.15654373 194.17971802]
[47.26761627 206.93763733]
[39.37868881 219.69557190]
[31.48976135 232.45350647]
[23.60083389 245.21144104]
[15.71190739 257.96936035]
[19.58290482 273.29226685]
[11.41356087 286.82138062]
[-3.94939852 290.53018188]
[-17.39140129 282.21823120]
[-20.93754578 266.81692505]
[-12.48396778 253.46356201]
[2.95397496 250.08044434]
[10.84290218 237.32250977]
[18.73182869 224.56457520]
[26.62075615 211.80664062]
[34.50968552 199.04872131]
[42.39861298 186.29078674]
[42.00699234 168.72386169]
[58.34915161 160.18524170]
[66.10922241 147.34851074]
[55.50261688 136.74191284]
[42.66590118 144.50198364]
[29.82917976 152.26205444]
[16.99246216 160.02210999]
[4.15574217 167.78218079]
[-8.68097687 175.54225159]
[-21.51769638 183.30232239]
[-34.35441589 191.06239319]
[-47.19113541 198.82244873]
[-52.41112518 213.99252319]
[-67.57386780 219.23379517]
[-81.04779816 210.52560425]
[-82.49687195 194.54812622]
[-70.80948639 183.55792236]
[-54.95120239 185.98573303]
[-42.11448288 178.22566223]
[-29.27776337 170.46560669]
[-16.44104385 162.70553589]
[-3.60432482 154.94546509]
[9.23239422 147.18539429]
[22.06911278 139.42532349]
[34.90583420 131.66526794]
[47.74254990 123.90519714]
[45.98436737 116.61418915]
[31.59778214 112.36846924]
[42.46800232 102.03217316]
[40.70981979 94.74116516]
[25.74706650 93.68477631]
[17.01960945 96.19250488]
[10.63921261 92.54167175]
[-4.31214714 91.33467102]
[-19.26350784 90.12767029]
[-34.21486664 88.92066956]
[-49.16622543 87.71367645]
[-64.11758423 86.50667572]
[-79.06894684 85.29967499]
[-89.19652557 96.90736389]
[-104.04359436 100.28637695]
[-117.86991119 94.34524536]
[-125.45582581 81.55493927]
[-138.55845642 90.81240845]
[-153.92480469 86.20209503]
[-159.76712036 71.26065063]
[-151.60368347 57.44985962]
[-135.69677734 55.36418915]
[-124.24882507 66.60358429]
[-114.70944214 55.19577408]
[-100.10914612 51.54947662]
[-85.99636841 57.26637268]
[-77.86194611 70.34832001]
[-62.91058731 71.55531311]
[-47.95922852 72.76231384]
[-33.00786972 73.96931458]
[-18.05650902 75.17631531]
[-3.10514879 76.38330841]
[11.84621048 77.59030914]
[26.80345726 78.72201538]
[41.76621246 79.77841187]
[48.53566742 66.39279938]
[38.81693649 54.96711731]
[29.09820366 43.54143143]
[19.37947273 32.11574936]
[9.66074276 20.69006348]
[-0.05798822 9.26437950]
[-9.77671909 -2.16130543]
[-15.78786564 -4.70397186]
[-19.14485931 -9.20754147]
[-19.57330132 -13.91631985]
[-29.05998230 -25.53539467]
[-38.54666138 -37.15446854]
[-48.03334427 -48.77354431]
[-57.52002335 -60.39261627]
[-74.97787476 -61.84892654]
[-85.74814606 -75.23371124]
[-83.52435303 -91.92769623]
[-93.12754822 -103.45066071]
[-102.73074341 -114.97362518]
[-112.33393097 -126.49658966]
[-121.93712616 -138.01954651]
[-131.54031372 -149.54251099]
[-147.10995483 -154.69213867]
[-150.16966248 -170.80331421]
[-137.57186890 -181.30226135]
[-122.27611542 -175.38854980]
[-120.01735687 -159.14570618]
[-110.41416168 -147.62274170]
[-100.81096649 -136.09977722]
[-91.20777893 -124.57682037]
[-81.60458374 -113.05385590]
[-72.00138855 -101.53089142]
[-59.16301346 -102.17737579]
[-48.12279129 -95.22124481]
[-43.01425934 -83.00302887]
[-45.90095139 -69.87929535]
[-36.41426849 -58.26022339]
[-26.92758751 -46.64114761]
[-17.44090843 -35.02207565]
[-7.95422697 -23.40299988]
[1.64896548 -11.88003635]
[11.36769676 -0.45435175]
[21.08642769 10.97133255]
[30.80515862 22.39701843]
[40.52388763 33.82270050]
[50.24261856 45.24838638]
[59.96134949 56.67407227]
[79.12016296 49.03817368]
[98.37763977 48.87247849]
[115.10037994 55.24568176]
[127.32053375 66.39035797]
[133.96618652 80.04751587]
[134.93727112 93.85927582]
[147.69520569 85.97034454]
[160.45314026 78.08142090]
[173.21107483 70.19248962]
[185.96899414 62.30356216]
[198.72692871 54.41463852]
[202.14511108 48.85450745]
[207.10252380 46.21335602]
[211.82215881 46.49829865]
[224.73635864 38.86787796]
[237.65057373 31.23745537]
[250.56477356 23.60703468]
[263.47897339 15.97661495]
[271.42425537 2.29513526]
[286.31768799 2.48224497]
[299.23190308 -5.14817572]
[312.14611816 -12.77859592]
[325.06030273 -20.40901566]
[337.97451782 -28.03943634]
[350.88873291 -35.66985703]
[363.80291748 -43.30027771]
[366.31906128 -47.75438690]
[369.91744995 -50.55059433]
[373.79904175 -51.55359650]
[377.22442627 -50.95935059]
[390.36322021 -58.19624329]
[396.33065796 -65.04071045]
[403.67089844 -65.43909454]
[416.88189697 -72.54332733]
[430.09286499 -79.64755249]
[422.80606079 -85.99121094]
[418.24465942 -96.02799225]
[417.78890991 -108.62485504]
[422.37768555 -122.20126343]
[432.32452393 -133.42892456]
[442.27136230 -144.65658569]
[445.63113403 -160.11694336]
[459.86230469 -164.51266479]
[469.80914307 -175.74032593]
[467.32934570 -191.18003845]
[475.39849854 -204.57492065]
[490.20657349 -209.60034180]
[504.76165771 -203.88342285]
[512.19134521 -190.12355042]
[508.98745728 -174.81768799]
[496.66287231 -165.19281006]
[481.03680420 -165.79348755]
[471.08996582 -154.56582642]
[468.44168091 -139.90853882]
[453.49902344 -134.70974731]
[443.55218506 -123.48208618]
[433.60534668 -112.25442505]
[437.32260132 -105.74043274]
[450.35058594 -113.17494202]
[463.37854004 -120.60944366]
[476.40664673 -128.04373169]
[483.84072876 -115.01551056]
[470.81304932 -107.58146667]
[457.78509521 -100.14696503]
[444.75711060 -92.71245575]
[448.47436523 -86.19847107]
[463.20068359 -89.05072021]
[477.92700195 -91.90296936]
[492.65332031 -94.75521851]
[507.37966919 -97.60747528]
[522.10595703 -100.45972443]
[536.83233643 -103.31197357]
[551.55865479 -106.16422272]
[565.21331787 -118.55468750]
[581.56542969 -112.12352753]
[596.26226807 -115.12390900]
[610.95910645 -118.12429810]
[620.96887207 -130.66163635]
[637.01116943 -130.50854492]
[646.77978516 -117.78244019]
[642.78106689 -102.24571991]
[628.08245850 -95.81681824]
[613.95953369 -103.42743683]
[599.26263428 -100.42704773]
[584.56579590 -97.42666626]
[577.66314697 -87.53311920]
[565.48315430 -84.88956451]
[554.41088867 -91.43789673]
[539.68457031 -88.58564758]
[524.95825195 -85.73339844]
[510.23190308 -82.88114929]
[495.50558472 -80.02889252]
[480.77926636 -77.17664337]
[466.05294800 -74.32439423]
[451.32659912 -71.47214508]
[437.19708252 -66.43657684]
[423.98611450 -59.33234787]
[410.77514648 -52.22811890]
[397.60009766 -45.05746841]
[384.46133423 -37.82057571]
[371.43334961 -30.38607216]
[358.51913452 -22.75565338]
[345.60494995 -15.12523174]
[332.69073486 -7.49481153]
[319.77651978 0.13560881]
[306.86233521 7.76602936]
[293.94812012 15.39645004]
[286.92654419 28.53215027]
[271.10940552 28.89081955]
[258.19519043 36.52124023]
[245.28099060 44.15166092]
[232.36677551 51.78208160]
[219.45257568 59.41250229]
[206.61585999 67.17256927]
[193.85792542 75.06149292]
[181.09999084 82.95042419]
[168.34205627 90.83934784]
[155.58413696 98.72827911]
[142.82620239 106.61720276]
[138.00460815 120.82115936]
[143.32368469 134.84640503]
[148.64276123 148.87164307]
[153.96182251 162.89688110]
[159.35144043 176.89517212]
[164.81146240 190.86614990]
[170.27149963 204.83712769]
[175.73152161 218.80810547]
[181.19154358 232.77906799]
[187.00149536 246.60818481]
[193.15768433 260.28668213]
[207.66160583 265.96771240]
[213.71000671 279.92736816]
[208.20462036 293.71960449]
[214.36080933 307.39810181]
[220.51701355 321.07659912]
[233.23641968 330.48550415]
[231.40420532 345.26699829]
[237.56039429 358.94549561]
[243.71659851 372.62399292]
[249.87278748 386.30249023]
[257.28860474 373.26385498]
[272.08984375 370.83010864]
[283.29022217 380.80767822]
[282.57617188 395.79064941]
[270.47775269 404.65789795]
[255.97520447 400.82775879]
[261.43524170 414.79873657]
[274.57287598 424.61373901]
[272.37322998 440.86468506]
[257.09909058 446.83401489]
[244.46319580 436.38098145]
[247.46426392 420.25875854]
[242.00424194 406.28778076]
[236.19429016 392.45867920]
[230.03810120 378.78018188]
[223.88189697 365.10168457]
[217.72570801 351.42318726]
[205.44664001 342.99267578]
[206.83851624 327.23281860]
[200.68231201 313.55432129]
[194.52612305 299.87582397]
[180.55172729 294.85067749]
[174.11361694 281.06643677]
[179.47918701 266.44287109]
[173.32299805 252.76438904]
[165.90716553 265.80300903]
[151.10592651 268.23675537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 272]
[4 271]
[5 270]
[6 269]
[7 268]
[9 267]
[10 266]
[11 265]
[12 264]
[15 39]
[16 38]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[66 97]
[67 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[79 85]
[98 144]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[104 138]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[150 263]
[151 262]
[152 261]
[153 260]
[154 259]
[155 258]
[158 257]
[159 256]
[160 255]
[161 254]
[162 253]
[164 251]
[165 250]
[166 249]
[167 248]
[168 247]
[169 246]
[170 245]
[174 244]
[175 243]
[177 242]
[178 241]
[179 240]
[183 201]
[184 200]
[185 199]
[187 197]
[188 196]
[210 239]
[211 238]
[212 237]
[213 236]
[214 235]
[215 234]
[216 233]
[217 232]
[219 229]
[220 228]
[221 227]
[273 309]
[274 308]
[277 305]
[278 304]
[279 303]
[281 301]
[282 300]
[283 299]
[284 298]
[290 297]
[291 296]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
