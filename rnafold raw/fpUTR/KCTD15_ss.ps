%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGAGAGAGAAAGUAACUCCAGGACGAGACCGGAGCGACCCGCGCAGCGAGCAUAGGCGGCGAAGCUGCGCCCGGCGCCCGAGACCGGCAGCUGCGUGGGGCGGGGGCUGCGCCCGAGCCCGAUCUGCCGGCUCCGAGCAGUGGUCUCGGAAAGAGGGUCGUGGUCCCGCACGGAUGCGCUUGUUGGGAGAAACCUUGGAGAUUCACGGCAAGGCGUAAAGCCUGGGGCUUCCAACGAUACUCUGGGCAGG\
GAUGGAAGCCUAG\
) } def
/len { sequence length } bind def

/coor [
[216.91700745 222.11637878]
[212.59941101 236.48156738]
[208.28182983 250.84674072]
[203.96424866 265.21191406]
[216.12815857 274.25711060]
[224.46226501 286.91879272]
[227.96018982 301.66802979]
[226.19955444 316.72378540]
[219.39294434 330.26800537]
[208.36228943 340.66516113]
[194.43960571 346.65972900]
[179.30613708 347.52783203]
[164.78929138 343.16467285]
[152.64207458 334.09710693]
[144.33131409 321.42007446]
[140.86056519 306.66439819]
[142.64895630 291.61190796]
[149.48051453 278.08026123]
[160.53030396 267.70346069]
[174.46400452 261.73455811]
[189.59906006 260.89434814]
[193.91664124 246.52915955]
[198.23423767 232.16397095]
[202.55181885 217.79879761]
[191.35466003 210.14184570]
[182.90348816 199.48411560]
[177.97322083 186.76760864]
[177.02635193 173.12464905]
[180.16961670 159.77700806]
[167.41906738 151.87614441]
[154.66853333 143.97528076]
[141.91798401 136.07441711]
[129.16744995 128.17356873]
[116.41690063 120.27269745]
[103.66635132 112.37183380]
[88.94399261 109.49919128]
[74.15855408 112.02720642]
[66.26004791 116.54354858]
[59.18576431 114.49735260]
[44.37181091 116.85251617]
[29.55785942 119.20768738]
[21.60714531 123.63148499]
[14.55724239 121.50280762]
[-0.28320494 123.68480682]
[-14.47430897 135.44445801]
[-30.51950455 128.30017090]
[-45.33345795 130.65534973]
[-60.14741135 133.01051331]
[-74.96136475 135.36567688]
[-89.77531433 137.72085571]
[-104.58926392 140.07601929]
[-119.40322113 142.43118286]
[-129.43399048 156.78346252]
[-146.40959167 159.37213135]
[-159.72680664 149.07546997]
[-174.51223755 151.60348511]
[-182.24447632 165.19563293]
[-196.92248535 170.58914185]
[-211.61576843 165.23736572]
[-219.38659668 151.66725159]
[-216.56584167 136.28617859]
[-204.48535156 126.35663605]
[-188.84918213 126.56703186]
[-177.04025269 136.81803894]
[-162.25480652 134.29002380]
[-156.36769104 122.85120392]
[-144.79940796 116.79161072]
[-131.65838623 118.51564789]
[-121.75838470 127.61723328]
[-106.94443512 125.26206207]
[-92.13048553 122.90689850]
[-77.31652832 120.55172729]
[-62.50257874 118.19656372]
[-47.68862534 115.84139252]
[-32.87467194 113.48622131]
[-25.53706932 103.89693451]
[-13.24025536 101.79668427]
[-2.46520710 108.84436035]
[12.37523937 106.66236115]
[27.20269203 104.39373779]
[42.01664352 102.03856659]
[56.83059692 99.68340302]
[71.63054657 97.24176788]
[86.41598511 94.71375275]
[92.69786835 81.09252167]
[85.02156830 68.20553589]
[77.34527588 55.31854630]
[70.29049683 49.57277298]
[69.65559387 42.23592758]
[62.13032150 29.26016998]
[54.60504913 16.28441238]
[47.07978058 3.30865431]
[39.55450821 -9.66710377]
[32.02923965 -22.64286232]
[24.50396729 -35.61861801]
[20.73720932 -37.61556625]
[18.05306816 -40.41495895]
[16.57024574 -43.58465195]
[16.25720215 -46.69780731]
[16.94654274 -49.38074875]
[10.03542519 -62.69376755]
[-3.19000387 -71.37700653]
[-2.18686056 -86.23778534]
[-9.09797859 -99.55080414]
[-16.00909615 -112.86382294]
[-22.92021370 -126.17684174]
[-37.71899414 -131.03831482]
[-44.53820038 -144.63804626]
[-39.81233978 -158.71647644]
[-46.72345734 -172.02947998]
[-53.63457489 -185.34249878]
[-60.54569244 -198.65551758]
[-73.20977020 -209.92750549]
[-65.88406372 -225.21705627]
[-49.16407776 -222.41021729]
[-47.23267365 -205.56663513]
[-40.32155609 -192.25361633]
[-33.41043854 -178.94059753]
[-26.49932098 -165.62759399]
[-12.26589680 -161.39140320]
[-5.06739187 -147.98855591]
[-9.60719490 -133.08796692]
[-2.69607759 -119.77494049]
[4.21504021 -106.46192169]
[11.12615776 -93.14890289]
[23.85725784 -85.41790771]
[23.34844398 -69.60488129]
[30.25956154 -56.29186630]
[37.47972488 -43.14389038]
[45.00499725 -30.16813278]
[52.53026581 -17.19237518]
[60.05553818 -4.21661663]
[67.58081055 8.75914097]
[75.10607910 21.73489952]
[82.63134766 34.71065903]
[90.23226166 47.64225006]
[97.90856171 60.52923965]
[105.58485413 73.41622925]
[114.07678223 61.05147552]
[127.94950867 55.34644318]
[142.68330383 58.15983582]
[153.47790527 68.57504272]
[156.81642151 83.19880676]
[151.61117554 97.26668549]
[139.55802917 106.19538879]
[124.58390045 107.07592773]
[111.56721497 99.62129211]
[124.31776428 107.52215576]
[137.06829834 115.42301941]
[149.81884766 123.32388306]
[162.56939697 131.22474670]
[175.31993103 139.12561035]
[188.07048035 147.02647400]
[200.95738220 136.88868713]
[216.55857849 131.94747925]
[232.86895752 132.81457520]
[247.80049133 139.35671997]
[259.44949341 150.71553040]
[266.33932495 165.42015076]
[267.60760498 181.57759094]
[282.09271240 185.47396851]
[296.57781982 189.37036133]
[311.06292725 193.26673889]
[324.64385986 185.63809204]
[339.27828979 189.79592896]
[346.46734619 202.79026794]
[361.80364990 198.90328979]
[372.08419800 209.68101501]
[386.56930542 213.57740784]
[401.05441284 217.47378540]
[415.53952026 221.37016296]
[430.02459717 225.26655579]
[444.53222656 229.07829285]
[459.06182861 232.80525208]
[474.35168457 228.73941040]
[484.75741577 239.39634705]
[499.28701782 243.12330627]
[513.81665039 246.85026550]
[528.34625244 250.57720947]
[536.81127930 241.43334961]
[548.28875732 236.77020264]
[560.58856201 237.41160583]
[571.39154053 243.17544556]
[578.68682861 252.91952515]
[581.14587402 264.76742554]
[595.58447266 268.83270264]
[610.02307129 272.89797974]
[624.46166992 276.96328735]
[638.90026855 281.02856445]
[653.33892822 285.09384155]
[667.77752686 289.15911865]
[682.21612549 293.22442627]
[696.65472412 297.28970337]
[711.09332275 301.35498047]
[716.08508301 300.08676147]
[720.61944580 300.76962280]
[724.03588867 302.90969849]
[725.96179199 305.82382202]
[740.24914551 310.39239502]
[754.53649902 314.96096802]
[768.82385254 319.52951050]
[783.11120605 324.09808350]
[797.39855957 328.66662598]
[806.48962402 328.29739380]
[811.82550049 333.37286377]
[827.36248779 330.38754272]
[836.99652100 341.74688721]
[851.22955322 346.48199463]
[866.76654053 343.49667358]
[876.40057373 354.85601807]
[890.63360596 359.59112549]
[904.86663818 364.32623291]
[918.88427734 357.02685547]
[933.93237305 361.85702515]
[941.08312988 375.95108032]
[936.09411621 390.94726562]
[921.92529297 397.94860840]
[906.98266602 392.80133057]
[900.13153076 378.55923462]
[885.89849854 373.82412720]
[871.66546631 369.08901978]
[857.14654541 372.41305542]
[846.49444580 360.71502686]
[832.26141357 355.97991943]
[817.74249268 359.30392456]
[807.09039307 347.60589600]
[792.82995605 342.95397949]
[778.54260254 338.38543701]
[764.25524902 333.81686401]
[749.96795654 329.24829102]
[735.68060303 324.67974854]
[721.39324951 320.11117554]
[707.02807617 315.79357910]
[692.58947754 311.72830200]
[678.15081787 307.66302490]
[663.71221924 303.59774780]
[649.27362061 299.53247070]
[634.83502197 295.46716309]
[620.39642334 291.40188599]
[605.95776367 287.33660889]
[591.51916504 283.27133179]
[577.08056641 279.20602417]
[563.70837402 290.78298950]
[545.90484619 291.99938965]
[530.81793213 282.17672729]
[524.61932373 265.10684204]
[510.08969116 261.37988281]
[495.56008911 257.65292358]
[481.03045654 253.92596436]
[466.77987671 258.25836182]
[455.33486938 247.33486938]
[440.80526733 243.60791016]
[433.57095337 244.98519897]
[426.12823486 239.75166321]
[411.64312744 235.85527039]
[397.15802002 231.95889282]
[382.67291260 228.06250000]
[368.18780518 224.16612244]
[353.88760376 228.33180237]
[342.57098389 217.27537537]
[329.83300781 224.90950012]
[315.08755493 221.16435242]
[307.16653442 207.75184631]
[292.68142700 203.85546875]
[278.19635010 199.95907593]
[263.71124268 196.06269836]
[255.80001831 207.93772888]
[244.58375549 216.75811768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[29 153]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 84]
[37 83]
[39 82]
[40 81]
[41 80]
[43 79]
[44 78]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[55 65]
[56 64]
[85 138]
[86 137]
[87 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[100 128]
[101 127]
[103 125]
[104 124]
[105 123]
[106 122]
[109 119]
[110 118]
[111 117]
[112 116]
[160 266]
[161 265]
[162 264]
[163 263]
[166 260]
[168 258]
[169 257]
[170 256]
[171 255]
[172 254]
[173 252]
[174 251]
[176 249]
[177 248]
[178 247]
[179 246]
[185 242]
[186 241]
[187 240]
[188 239]
[189 238]
[190 237]
[191 236]
[192 235]
[193 234]
[194 233]
[198 232]
[199 231]
[200 230]
[201 229]
[202 228]
[203 227]
[205 226]
[207 224]
[208 223]
[210 221]
[211 220]
[212 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
