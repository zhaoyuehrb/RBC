%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCCCCGGAGCCGCGAGCUGGGAGCGCUGUGCCGGGAGCCGGGAGCCGAGCGCGCCGGGCUGGGGCCGGGGCCGGAGCGGAGCGGAGAGGGAGCGCGCCCGCCCCAGCCCCGAGUCCCGCCGCCUUCCCUCCCGCCGCAGCGCGGGCCCACCGGCCGCCGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[85.82953644 697.25030518]
[71.31519318 701.76721191]
[56.17760468 700.38092041]
[42.72513962 693.30279541]
[33.00919724 681.61224365]
[28.51139259 667.09197998]
[29.91760635 651.95623779]
[37.01340103 638.51306152]
[48.71672058 628.81256104]
[63.24289322 624.33380127]
[64.61087036 609.39636230]
[58.06652069 596.01647949]
[67.03013611 582.97943115]
[68.39810944 568.04193115]
[61.85375977 554.66210938]
[70.81737518 541.62506104]
[72.18534851 526.68756104]
[73.55332947 511.75006104]
[71.02266693 504.77658081]
[75.08513641 496.55310059]
[76.72570801 481.64309692]
[78.36627197 466.73306274]
[80.00684357 451.82305908]
[81.64740753 436.91305542]
[66.83805084 421.72045898]
[68.01432800 400.25460815]
[84.83005524 386.41296387]
[85.10401917 371.41546631]
[85.37798309 356.41796875]
[85.65193939 341.42047119]
[85.92590332 326.42297363]
[86.19985962 311.42547607]
[86.47382355 296.42797852]
[86.74778748 281.43045044]
[79.24422455 268.56399536]
[87.23228455 254.90744019]
[87.50624084 239.90994263]
[87.78020477 224.91244507]
[88.05416870 209.91494751]
[88.32812500 194.91744995]
[88.60208893 179.91995239]
[85.96486664 175.89802551]
[85.85147095 170.16961670]
[89.16992950 164.38240051]
[89.99144745 149.40492249]
[90.81296539 134.42742920]
[91.63448334 119.44994354]
[92.45599365 104.47245789]
[90.58573151 102.01416016]
[89.58305359 98.81147003]
[89.72880554 95.18984985]
[91.17758179 91.57508850]
[93.92389679 88.44387817]
[95.83650970 73.56630707]
[97.74912262 58.68874741]
[95.73496246 49.74042892]
[99.83493042 43.55786514]
[102.01895142 28.71771240]
[96.37342834 13.93804359]
[105.88137817 2.47296190]
[108.06539917 -12.36718845]
[110.24941254 -27.20733833]
[112.43343353 -42.04748917]
[114.61744690 -56.88764191]
[116.66584778 -71.74711609]
[118.57846069 -86.62467957]
[120.49107361 -101.50224304]
[122.40368652 -116.37980652]
[124.31629944 -131.25737000]
[118.40177917 -145.93147278]
[127.69874573 -157.56829834]
[129.61135864 -172.44586182]
[131.52397156 -187.32342529]
[133.43658447 -202.20098877]
[135.34919739 -217.07855225]
[129.43467712 -231.75263977]
[138.73164368 -243.38946533]
[140.64425659 -258.26702881]
[134.72972107 -272.94113159]
[144.02670288 -284.57794189]
[145.93930054 -299.45550537]
[147.85191345 -314.33306885]
[136.73609924 -324.99816895]
[134.06289673 -339.98843384]
[140.65113831 -353.51834106]
[153.78582764 -360.49099731]
[143.92950439 -372.84527588]
[145.77883911 -388.54101562]
[158.23663330 -398.26617432]
[173.91192627 -396.25100708]
[183.50482178 -383.69107056]
[181.32405090 -368.03796387]
[168.66340637 -358.57839966]
[179.60739136 -348.51025391]
[182.55923462 -333.75387573]
[176.18142700 -319.92721558]
[162.72947693 -312.42047119]
[160.81687927 -297.54290771]
[158.90426636 -282.66534424]
[164.95558167 -269.05538940]
[155.52182007 -256.35443115]
[153.60920715 -241.47685242]
[159.66052246 -227.86689758]
[150.22676086 -215.16593933]
[148.31414795 -200.28837585]
[146.40153503 -185.41081238]
[144.48892212 -170.53324890]
[142.57630920 -155.65568542]
[148.62762451 -142.04573059]
[139.19386292 -129.34475708]
[137.28125000 -114.46720123]
[135.36863708 -99.58963013]
[133.45602417 -84.71206665]
[131.54341125 -69.83450317]
[133.81770325 -62.77323914]
[129.45759583 -54.70362091]
[127.27358246 -39.86347198]
[125.08956146 -25.02332115]
[122.90554810 -10.18317127]
[120.72152710 4.65697956]
[126.52326965 18.37518120]
[116.85910034 30.90172958]
[114.67508698 45.74188232]
[112.62668610 60.60135651]
[110.71407318 75.47891998]
[108.80146027 90.35648346]
[107.43348694 105.29397583]
[106.61196899 120.27146149]
[105.79045105 135.24894714]
[104.96893311 150.22644043]
[104.14741516 165.20391846]
[103.59958649 180.19392395]
[103.32562256 195.19142151]
[103.05166626 210.18891907]
[102.77770233 225.18641663]
[102.50373840 240.18391418]
[102.22978210 255.18141174]
[109.71374512 269.12060547]
[101.74528503 281.70443726]
[101.47132111 296.70193481]
[101.19735718 311.69943237]
[100.92340088 326.69692993]
[100.64943695 341.69442749]
[100.37548065 356.69192505]
[100.10151672 371.68942261]
[99.82755280 386.68692017]
[107.83593750 390.83361816]
[114.01831818 397.33926392]
[117.71572113 405.46911621]
[118.54763794 414.31765747]
[116.45098877 422.90954590]
[111.68392181 430.30700684]
[104.79441833 435.71228027]
[96.55742645 438.55361938]
[94.91685486 453.46362305]
[93.27629089 468.37365723]
[91.63571930 483.28366089]
[89.99515533 498.19366455]
[88.49082184 513.11804199]
[87.12284088 528.05554199]
[85.75486755 542.99304199]
[92.20136261 557.44134521]
[83.33560181 569.40991211]
[81.96762085 584.34741211]
[88.41412354 598.79571533]
[79.54836273 610.76434326]
[78.18038177 625.70178223]
[91.65142822 632.74450684]
[101.39809418 644.40942383]
[105.93408203 658.91784668]
[104.56769562 674.05725098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 167]
[11 166]
[13 164]
[14 163]
[16 161]
[17 160]
[18 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
[53 126]
[54 125]
[55 124]
[57 123]
[58 122]
[60 120]
[61 119]
[62 118]
[63 117]
[64 116]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[77 102]
[78 101]
[80 99]
[81 98]
[82 97]
[86 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
