%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCCCCCCCAGGCCUGGCGGGACCAGGAUGCUGCCCUGUCACCUGCCCCCCAGCCCCACACAACGCCCCCACCCACCCGAACAUCCAGUCUGACUGGAGACAGCCGG\
) } def
/len { sequence length } bind def

/coor [
[256.57098389 220.36782837]
[253.03768921 198.98226929]
[240.11799622 191.36112976]
[227.19830322 183.74000549]
[214.27861023 176.11886597]
[201.35893250 168.49774170]
[190.19020081 178.43859863]
[176.47714233 184.44874573]
[161.55763245 185.92805481]
[146.89155579 182.71914673]
[133.91789246 175.12396240]
[123.91355896 163.87547302]
[117.86771393 150.06692505]
[116.38396454 135.04557800]
[119.62015533 120.28127289]
[106.70046234 112.66014099]
[92.72235870 112.33739471]
[85.67840576 100.25954437]
[72.75872040 92.63842010]
[59.83902740 85.01728821]
[46.91933823 77.39615631]
[37.79566956 75.68949127]
[33.74845123 69.37575531]
[21.04758835 61.39527512]
[8.34672546 53.41479492]
[-4.47442532 55.51480865]
[-14.92129803 48.48974991]
[-17.63261032 36.60871887]
[-30.10465431 28.27516365]
[-42.57669830 19.94161034]
[-55.04874420 11.60805702]
[-70.35828400 14.48131466]
[-82.88800049 5.85223722]
[-85.53285980 -8.76078033]
[-98.00490570 -17.09433365]
[-113.45467377 -13.76564121]
[-126.68756104 -22.40661049]
[-129.85272217 -37.89070892]
[-121.07232666 -51.03149414]
[-105.55563354 -54.03277206]
[-92.50841522 -45.11393738]
[-89.67135620 -29.56637764]
[-77.19931030 -21.23282433]
[-62.68649673 -24.38144875]
[-49.91935349 -16.10770988]
[-46.71519089 -0.86398679]
[-34.24314499 7.46956682]
[-21.77110100 15.80312061]
[-9.29905701 24.13667297]
[8.18777180 24.27094269]
[16.32720566 40.71393204]
[29.02807045 48.69441223]
[41.72893143 56.67489624]
[54.54047012 64.47647095]
[67.46015930 72.09759521]
[80.37984467 79.71872711]
[93.29953766 87.33985901]
[107.27764130 87.66260529]
[114.32159424 99.74045563]
[127.24127960 107.36157990]
[138.59794617 97.38742828]
[152.46269226 91.41992950]
[167.47274780 90.03193665]
[182.15698242 93.34685516]
[195.08006287 101.02777100]
[204.98283386 112.31165314]
[210.90495300 126.08512878]
[212.27801514 140.99435425]
[208.98005676 155.57804871]
[221.89974976 163.19918823]
[234.81942749 170.82031250]
[247.73912048 178.44145203]
[260.65881348 186.06257629]
[268.45251465 180.97135925]
[277.45529175 178.78152466]
[286.62921143 179.71534729]
[294.92660522 183.63674927]
[301.40975952 190.07008362]
[305.35681152 198.25781250]
[306.34219360 207.24946594]
[304.28213501 216.01210022]
[316.00961304 225.36445618]
[327.73709106 234.71679688]
[343.80664062 227.91473389]
[361.03170776 230.08999634]
[374.76574707 240.56671143]
[381.34875488 256.44171143]
[379.08236694 273.38858032]
[391.31576538 282.06866455]
[403.54919434 290.74871826]
[415.78259277 299.42880249]
[428.01602173 308.10885620]
[440.24942017 316.78894043]
[456.66604614 321.02343750]
[457.14160156 337.97070312]
[440.98828125 343.11917114]
[431.56936646 329.02233887]
[419.33593750 320.34228516]
[407.10253906 311.66220093]
[394.86911011 302.98214722]
[382.63571167 294.30206299]
[370.40228271 285.62200928]
[359.40847778 292.15814209]
[346.70538330 294.00808716]
[334.21270752 290.85598755]
[323.83233643 283.14465332]
[317.15863037 272.01367188]
[315.23367310 259.13128662]
[318.38473511 246.44427490]
[306.65725708 237.09191895]
[294.92977905 227.73957825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 73]
[3 72]
[4 71]
[5 70]
[6 69]
[15 60]
[16 59]
[18 57]
[19 56]
[20 55]
[21 54]
[23 53]
[24 52]
[25 51]
[28 49]
[29 48]
[30 47]
[31 46]
[34 43]
[35 42]
[81 111]
[82 110]
[83 109]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
