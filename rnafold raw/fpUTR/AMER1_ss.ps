%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGGGAGCUACCCAAAGCCUGGGGAAGGGGAGUCAGUGCUGGAGGUGACUGGAGCCGCGGCGACGGCGGCAGCAGCUGCGGUGGCGGCGCUCUCAGCCGUGGCAGCCGAGGCUGCAGCCCGGCCCAGGGCGGCUCAGCGGACAAUAACCGGGCUAGGAACCUGACCGGGCUGGACCCCACUGUGAUGCUUCCUGACUGAUAAUGUUAUAACAGUGCCUGGAAGCCUGAGGCUGCAUUUCCAGCUGGACGUACC\
UCAGUUGUCCCCAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[79.51212311 570.60626221]
[78.82442474 555.62207031]
[78.13672638 540.63781738]
[77.44902802 525.65356445]
[76.76132965 510.66937256]
[76.07363129 495.68515015]
[75.38593292 480.70089722]
[74.61234283 465.72088623]
[73.75289154 450.74551392]
[72.89343262 435.77017212]
[72.03398132 420.79479980]
[57.30095291 417.97381592]
[42.56923676 415.15307617]
[36.23862457 428.75173950]
[29.90801239 442.35040283]
[23.57739830 455.94903564]
[27.70108414 471.45306396]
[18.03523445 484.25741577]
[1.99466515 484.53964233]
[-8.11567402 472.08331299]
[-4.53999519 456.44381714]
[9.97874641 449.61843872]
[16.30936050 436.01977539]
[22.63997269 422.42114258]
[28.97058678 408.82247925]
[40.66043091 400.13082886]
[52.99539948 396.58544922]
[64.19732666 397.81127930]
[72.75287628 402.89010620]
[74.81019592 388.03186035]
[76.86750793 373.17361450]
[78.92481995 358.31536865]
[70.38036346 340.94564819]
[83.09519196 325.27169800]
[84.81127167 310.37020874]
[86.52735901 295.46868896]
[77.19705963 286.61343384]
[74.62082672 273.81222534]
[79.95565033 261.68118286]
[91.46405792 254.72648621]
[93.35088348 239.84562683]
[95.23770142 224.96476746]
[97.12452698 210.08392334]
[99.01135254 195.20306396]
[100.89817047 180.32220459]
[102.78499603 165.44134521]
[104.67182159 150.56048584]
[106.55864716 135.67964172]
[108.44546509 120.79877472]
[89.17828369 117.03900909]
[82.10343933 100.95661163]
[68.16440582 95.41555786]
[54.22536469 89.87450409]
[38.54310608 91.96671295]
[29.57423210 80.07518005]
[15.63519478 74.53412628]
[1.69615853 68.99307251]
[-12.24287796 63.45202255]
[-27.92513657 65.54421997]
[-36.89401245 53.65269089]
[-50.83304977 48.11164093]
[-64.77208710 42.57058716]
[-78.71112061 37.02953339]
[-93.08127594 43.04089355]
[-107.13851166 37.22291183]
[-112.78086090 23.48611832]
[-128.46311951 25.57832146]
[-137.43199158 13.68678856]
[-151.37103271 8.14573669]
[-165.31007385 2.60468459]
[-179.24909973 -2.93636751]
[-193.18814087 -8.47741985]
[-207.25056458 -13.69740200]
[-221.42898560 -18.59357071]
[-235.60740662 -23.48973846]
[-244.70217896 -23.32961655]
[-249.91975403 -28.52417755]
[-264.04110718 -33.58258438]
[-278.16244507 -38.64099121]
[-292.28381348 -43.69940186]
[-306.40515137 -48.75780869]
[-322.43499756 -45.29708099]
[-333.24496460 -57.62899780]
[-327.71472168 -73.06753540]
[-311.53329468 -75.73085022]
[-301.34674072 -62.87915802]
[-287.22540283 -57.82075119]
[-273.10403442 -52.76234055]
[-258.98269653 -47.70393372]
[-244.86134338 -42.64552689]
[-230.71122742 -37.66815567]
[-216.53282166 -32.77198792]
[-202.35440063 -27.87582016]
[-199.80216980 -28.94696426]
[-196.67953491 -29.09082222]
[-193.33071899 -28.08800125]
[-190.17207336 -25.84522629]
[-187.64709473 -22.41645622]
[-173.70805359 -16.87540436]
[-159.76901245 -11.33435249]
[-145.82998657 -5.79330015]
[-131.89094543 -0.25224820]
[-117.20569611 -2.74078393]
[-107.23980713 9.54708195]
[-93.70635223 3.43306422]
[-79.49125671 8.85391235]
[-73.17006683 23.09049797]
[-59.23103333 28.63154984]
[-45.29199600 34.17260361]
[-31.35296059 39.71365356]
[-16.66771507 37.22511673]
[-6.70182610 49.51298523]
[7.23721075 55.05403519]
[21.17624664 60.59508896]
[35.11528397 66.13613892]
[49.80052948 63.64760590]
[59.76641846 75.93547058]
[73.70545197 81.47652435]
[87.64449310 87.01757050]
[99.62544250 80.57285309]
[113.84024048 84.28674316]
[122.31893158 97.59577179]
[134.53454590 88.89067841]
[146.75016785 80.18557739]
[158.96577454 71.48047638]
[171.18139648 62.77537918]
[183.34690857 54.00039673]
[195.46191406 45.15581131]
[207.57691956 36.31122971]
[201.89645386 -2.37838435]
[207.91358948 -16.11861801]
[208.48313904 -25.19695091]
[214.07928467 -29.98127174]
[220.25357056 -43.65161514]
[218.88255310 -59.41330338]
[231.17277527 -67.82756042]
[237.34706116 -81.49790192]
[243.52133179 -95.16824341]
[249.69561768 -108.83858490]
[255.86990356 -122.50892639]
[242.69999695 -115.32884979]
[227.73321533 -116.32669830]
[215.63305664 -125.19156647]
[210.16975403 -139.16125488]
[213.04560852 -153.88299561]
[223.36456299 -164.76965332]
[237.91133118 -168.42907715]
[252.15333557 -163.72103882]
[261.65292358 -152.11251831]
[263.44970703 -137.21795654]
[270.99929810 -150.17958069]
[278.54888916 -163.14120483]
[286.09848022 -176.10282898]
[283.56835938 -188.72544861]
[290.09332275 -199.35607910]
[301.72290039 -202.59837341]
[309.42062378 -215.47259521]
[317.11831665 -228.34680176]
[316.82785034 -244.74337769]
[331.01998901 -252.96017456]
[345.09506226 -244.54444885]
[344.57385254 -228.15357971]
[329.99255371 -220.64909363]
[322.29483032 -207.77488708]
[314.59713745 -194.90066528]
[315.25775146 -177.34826660]
[299.06008911 -168.55323792]
[291.51049805 -155.59161377]
[283.96090698 -142.62998962]
[276.41131592 -129.66836548]
[269.54025269 -116.33464050]
[263.36596680 -102.66429901]
[257.19168091 -88.99396515]
[251.01739502 -75.32362366]
[244.84310913 -61.65327835]
[246.65576172 -46.86938477]
[233.92391968 -37.47732925]
[227.74963379 -23.80698967]
[221.65382385 -10.10147667]
[215.63667297 3.63875651]
[219.59567261 10.00871849]
[231.46362305 0.83530033]
[239.54103088 -11.80413818]
[254.54074097 -11.70986748]
[262.45864868 1.03009820]
[255.90240479 14.52141953]
[240.99324036 16.16833496]
[227.51364136 22.74864388]
[231.47262573 29.11860466]
[246.45686340 29.80630493]
[261.44107056 30.49400330]
[276.42532349 31.18170166]
[291.40954590 31.86940002]
[306.39376831 32.55709839]
[319.93057251 19.26177979]
[338.56481934 20.10796738]
[350.42605591 34.08686447]
[365.42211914 34.43080521]
[380.41815186 34.77474213]
[395.41421509 35.11868286]
[409.38818359 27.69984627]
[421.93469238 35.72694016]
[436.93075562 36.07088089]
[448.18481445 24.97487259]
[463.98788452 25.17018509]
[474.96429443 36.54094315]
[474.60192871 52.34107590]
[463.11575317 63.19664764]
[447.32034302 62.66723633]
[436.58679199 51.06693649]
[421.59075928 50.72299576]
[408.68942261 58.16643524]
[395.07028198 50.11473846]
[380.07421875 49.77080154]
[365.07815552 49.42686081]
[350.08212280 49.08292007]
[343.76513672 58.53107834]
[333.57379150 63.82654953]
[321.97222900 63.55919647]
[311.82864380 57.67995453]
[305.70605469 47.54132843]
[290.72183228 46.85362625]
[275.73760986 46.16592789]
[260.75338745 45.47822952]
[245.76916504 44.79053116]
[230.78492737 44.10283279]
[216.42149353 48.42623520]
[204.30648804 57.27081680]
[192.19148254 66.11540222]
[188.65545654 72.57319641]
[179.88648987 74.99099731]
[167.67088318 83.69609833]
[155.45526123 92.40119171]
[143.23963928 101.10629272]
[131.02403259 109.81139374]
[123.32632446 122.68560028]
[121.43949890 137.56645203]
[119.55268097 152.44731140]
[117.66585541 167.32817078]
[115.77902985 182.20903015]
[113.89220428 197.08988953]
[112.00538635 211.97074890]
[110.11856079 226.85159302]
[108.23173523 241.73245239]
[106.34490967 256.61331177]
[117.31478119 270.26266479]
[115.04494476 287.28494263]
[101.42887115 297.18475342]
[99.71278381 312.08627319]
[97.99670410 326.98779297]
[105.21004486 335.06576538]
[106.77557373 345.56039429]
[102.41735077 354.99398804]
[93.78306580 360.37268066]
[91.72575378 375.23092651]
[89.66844177 390.08917236]
[87.61112213 404.94741821]
[87.00933838 419.93533325]
[87.86878967 434.91070557]
[88.72824860 449.88604736]
[89.58769989 464.86141968]
[93.19213104 473.21298218]
[90.37016296 480.01321411]
[91.05786133 494.99743652]
[91.74555969 509.98165894]
[92.43325806 524.96588135]
[93.12095642 539.95013428]
[93.80865479 554.93432617]
[94.49635315 569.91857910]
[105.33192444 581.74945068]
[102.69579315 597.57446289]
[88.61016846 605.25396729]
[73.88034821 598.89691162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 269]
[2 268]
[3 267]
[4 266]
[5 265]
[6 264]
[7 263]
[8 261]
[9 260]
[10 259]
[11 258]
[13 25]
[14 24]
[15 23]
[16 22]
[29 257]
[30 256]
[31 255]
[32 254]
[34 250]
[35 249]
[36 248]
[40 245]
[41 244]
[42 243]
[43 242]
[44 241]
[45 240]
[46 239]
[47 238]
[48 237]
[49 236]
[51 119]
[52 118]
[53 117]
[55 115]
[56 114]
[57 113]
[58 112]
[60 110]
[61 109]
[62 108]
[63 107]
[66 104]
[68 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 93]
[74 92]
[75 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[122 235]
[123 234]
[124 233]
[125 232]
[126 231]
[127 229]
[128 228]
[129 227]
[130 180]
[131 179]
[133 178]
[134 177]
[136 175]
[137 174]
[138 173]
[139 172]
[140 171]
[150 170]
[151 169]
[152 168]
[153 167]
[156 165]
[157 164]
[158 163]
[189 226]
[190 225]
[191 224]
[192 223]
[193 222]
[194 221]
[197 216]
[198 215]
[199 214]
[200 213]
[202 211]
[203 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
