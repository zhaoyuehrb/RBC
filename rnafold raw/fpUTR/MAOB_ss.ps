%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGUCCGGGCUCCCGGGGCUGGUAAUAUAGCGGCUCGCCGAGGCGCUGGUGCACGGGGGCAGCGCGCAGCAGGCCGGCGGGCAGGCGGGCGGGCUGGCUGGCACGCAGGACUGGGAUCGAGGCCCAGAAAACGGAGCAGCGGGCACCAGGGAGGCCUGGAACGGGGCGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[88.91510010 265.76846313]
[88.11676025 250.78973389]
[79.71305847 238.49229431]
[86.70491791 224.29989624]
[85.90658569 209.32115173]
[85.10825348 194.34240723]
[84.30992126 179.36366272]
[83.51158142 164.38493347]
[75.10787964 152.08749390]
[82.09973907 137.89508057]
[69.90219116 129.16467285]
[55.46626663 133.23948669]
[41.03034210 137.31430054]
[26.59441757 141.38911438]
[12.15849304 145.46391296]
[-2.27743196 149.53872681]
[-16.71335602 153.61354065]
[-31.11255074 157.81629944]
[-42.09144592 169.20816040]
[-56.51050949 165.47456360]
[-70.87184143 169.80493164]
[-85.23316956 174.13531494]
[-71.68136597 180.56559753]
[-64.37716675 193.66706848]
[-66.03247833 208.57545471]
[-76.03270721 219.75558472]
[-90.66499329 223.05651855]
[-104.49668121 217.25270081]
[-112.39237213 204.49894714]
[-111.42055511 189.53047180]
[-101.94145203 177.90432739]
[-116.77106476 180.15876770]
[-131.60067749 182.41319275]
[-146.43029785 184.66763306]
[-158.91082764 194.39115906]
[-172.65641785 188.65460205]
[-187.48603821 190.90902710]
[-202.31565857 193.16346741]
[-217.06613159 201.52168274]
[-229.18104553 189.66143799]
[-221.13804626 174.73675537]
[-204.57008362 178.33384705]
[-189.74047852 176.07942200]
[-174.91085815 173.82498169]
[-163.49104309 164.26271057]
[-148.68473816 169.83801270]
[-133.85511780 167.58358765]
[-119.02550507 165.32914734]
[-104.19588470 163.07470703]
[-89.56355286 159.77398682]
[-75.20222473 155.44360352]
[-60.84088898 151.11322021]
[-50.88921738 140.03109741]
[-35.44293213 143.45497131]
[-29.92936134 138.49803162]
[-20.78816605 139.17761230]
[-6.35224152 135.10279846]
[8.08368301 131.02799988]
[22.51960754 126.95318604]
[36.95553207 122.87837219]
[51.39145660 118.80356598]
[65.82738495 114.72875214]
[64.63537598 97.85102081]
[70.93988037 83.03814697]
[82.67478180 73.25488281]
[77.71162415 59.09977722]
[72.74846649 44.94466782]
[60.88081360 34.48190689]
[63.97113419 19.91141510]
[58.16078186 12.82176781]
[59.04793167 5.46081161]
[54.33678055 -8.78015232]
[40.49686050 -15.92818928]
[35.92195511 -30.43766403]
[42.82180405 -43.58786011]
[38.11065292 -57.82882309]
[33.39950180 -72.06978607]
[20.80106163 -82.56794739]
[23.85976028 -98.67932129]
[39.42907333 -103.82991028]
[51.49262238 -92.72122955]
[47.64046860 -76.78093719]
[52.35161972 -62.53997421]
[57.06276703 -48.29901123]
[70.44371033 -41.85803986]
[75.42435455 -27.48278999]
[68.57774353 -13.49130344]
[73.28889465 0.74966109]
[78.12624359 14.94825554]
[89.63889313 24.39855194]
[86.90357208 39.98151016]
[91.86672974 54.13661575]
[96.82988739 68.29172516]
[112.39041138 70.64114380]
[124.92917633 80.15055084]
[138.53315735 73.83139038]
[152.13713074 67.51223755]
[161.39340210 54.68133163]
[176.19572449 56.33682632]
[189.79969788 50.01766586]
[203.40367126 43.69850540]
[217.00765991 37.37934494]
[220.09828186 22.28781891]
[231.35112000 12.02980518]
[246.30961609 10.38430119]
[259.21426392 17.77403450]
[272.81823730 11.45487404]
[273.33663940 -2.54045939]
[279.80963135 -14.88500595]
[290.92068481 -23.19103813]
[304.46258545 -25.87987137]
[317.77575684 -22.48166656]
[328.27059937 -13.71637154]
[341.98458862 -19.79309082]
[355.69857788 -25.86980820]
[369.41256714 -31.94652557]
[383.12655640 -38.02324295]
[387.28942871 -53.09655380]
[400.19653320 -61.92493057]
[415.75360107 -60.33988190]
[426.61499023 -49.08982086]
[427.65234375 -33.48668289]
[418.37582397 -20.89779091]
[403.16552734 -17.26723671]
[389.20327759 -24.30925560]
[375.48928833 -18.23253632]
[361.77529907 -12.15581894]
[348.06130981 -6.07910061]
[334.34732056 -0.00238267]
[333.02941895 16.08834267]
[323.73052979 29.40061188]
[308.90603638 36.25438690]
[292.55404663 34.69710159]
[279.13739014 25.05885315]
[265.53341675 31.37801170]
[262.85604858 46.00571442]
[251.94967651 56.37465286]
[236.85246277 58.35645676]
[223.32681274 50.98332596]
[209.72283936 57.30248260]
[196.11885071 63.62164307]
[182.51487732 69.94080353]
[174.23165894 82.31971741]
[158.45629883 81.11621094]
[144.85231018 87.43537140]
[131.24833679 93.75453186]
[131.41441345 105.34777069]
[127.42175293 116.23304749]
[138.16860962 126.69752502]
[148.91545105 137.16200256]
[159.66230774 147.62646484]
[170.40916443 158.09094238]
[186.42903137 161.59745789]
[191.14372253 177.30426025]
[179.70315552 189.05354309]
[163.87641907 184.75865173]
[159.94468689 168.83779907]
[149.19783020 158.37332153]
[138.45098877 147.90884399]
[127.70413208 137.44438171]
[116.95728302 126.97990417]
[111.47097778 131.63244629]
[104.75610352 135.10917664]
[97.07847595 137.09674072]
[105.53928375 150.46556091]
[98.49032593 163.58659363]
[99.28865814 178.56533813]
[100.08699036 193.54408264]
[100.88532257 208.52281189]
[101.68365479 223.50155640]
[110.14446259 236.87037659]
[103.09550476 249.99140930]
[103.89383698 264.97015381]
[113.28631592 278.41311646]
[106.09643555 293.15209961]
[89.72053528 294.02490234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 173]
[2 172]
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[10 164]
[11 62]
[12 61]
[13 60]
[14 59]
[15 58]
[16 57]
[17 56]
[18 54]
[20 52]
[21 51]
[22 50]
[31 49]
[32 48]
[33 47]
[34 46]
[36 44]
[37 43]
[38 42]
[65 93]
[66 92]
[67 91]
[69 89]
[71 88]
[72 87]
[75 84]
[76 83]
[77 82]
[95 146]
[96 145]
[97 144]
[99 142]
[100 141]
[101 140]
[102 139]
[106 135]
[107 134]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
