%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACUUGAUCCAGGUAUAUGUCACAUUCCCAACUGUUGGCUGGGCCCAAGCAAAUUAGUAAAAUAAAUUAGGUGCUGUGUGAAAGUAUACGCCACAAUCACACCUGCGGGAAGGACCAGGAAUAAAUUUCACAAUUCUACGUAUUUCCCAGCUUUAGGUCUGAGAGUCUACACUUCUGAGCUCCAGUUCUUCUCUUCACUGCUCUGCGUCCUCUGUUCCUAGAGGCCAAGCCACUGUGGCCUUGUGUUCUGCAG\
GUAUCCGCAGAUUU\
) } def
/len { sequence length } bind def

/coor [
[95.35027313 468.37973022]
[87.85344696 468.59786987]
[84.39420319 483.19354248]
[80.93496704 497.78921509]
[77.47573090 512.38488770]
[74.01649475 526.98052979]
[70.55725098 541.57623291]
[67.09801483 556.17193604]
[69.32862091 572.97845459]
[53.79635239 579.77441406]
[42.96622849 566.73046875]
[52.50234222 552.71264648]
[55.96158218 538.11700439]
[59.42081833 523.52130127]
[62.88005829 508.92565918]
[66.33929443 494.32998657]
[69.79853058 479.73431396]
[73.25777435 465.13864136]
[69.53380585 452.03390503]
[71.04386902 439.51104736]
[76.80808258 429.43600464]
[85.26506805 423.03515625]
[94.60101318 420.75064087]
[94.60101318 405.75064087]
[94.60101318 390.75064087]
[94.60101318 375.75064087]
[82.46260071 367.16012573]
[77.65328979 352.90057373]
[82.21604156 338.37356567]
[94.60101318 329.21286011]
[94.60101318 314.21286011]
[94.60101318 299.21286011]
[91.46961212 292.54791260]
[94.68930054 284.03857422]
[87.10060883 271.22213745]
[94.99794769 257.51293945]
[95.17247772 242.51394653]
[92.11884308 235.81301880]
[95.43730927 227.34172058]
[95.78634644 212.34577942]
[96.13538361 197.34983826]
[96.48441315 182.35389709]
[89.04535675 169.45004272]
[97.10167694 155.83364868]
[97.45071411 140.83770752]
[97.79975128 125.84176636]
[98.14878082 110.84582520]
[89.39545441 124.61202240]
[74.40468597 134.04862976]
[54.90588760 137.09777832]
[39.97082520 138.49201965]
[25.03576469 139.88627625]
[10.10070324 141.28051758]
[1.30124426 150.67907715]
[-11.14284801 151.55067444]
[-20.54253578 143.97216797]
[-35.49280930 145.19255066]
[-50.44308090 146.41293335]
[-65.39335632 147.63330078]
[-80.34362793 148.85368347]
[-89.23913574 161.71463013]
[-104.33393860 165.79888916]
[-118.50071716 159.17797852]
[-125.05036163 144.97811890]
[-120.89032745 129.90403748]
[-107.98485565 121.07324219]
[-92.42752075 122.65538025]
[-81.56401062 133.90341187]
[-66.61373901 132.68302917]
[-51.66346359 131.46264648]
[-36.71318817 130.24227905]
[-21.76291466 129.02189636]
[-7.86598444 118.28079224]
[8.70645523 126.34545898]
[23.64151764 124.95121002]
[38.57658005 123.55696106]
[53.51164246 122.16271973]
[56.88590622 107.54716492]
[44.07355881 99.74692535]
[31.26121330 91.94667816]
[18.44886780 84.14643860]
[5.63652039 76.34619904]
[-7.17582607 68.54595184]
[-22.35059929 72.06220245]
[-35.23302460 63.96913147]
[-38.49171066 49.48063660]
[-51.30405807 41.68039322]
[-66.06015015 46.85646820]
[-80.67276001 41.28819656]
[-88.24226379 27.60475159]
[-85.19456482 12.26703453]
[-72.96870422 2.51704741]
[-57.33734894 2.95843554]
[-45.68115234 13.38278961]
[-43.50381851 28.86804771]
[-30.69147110 36.66828918]
[-16.32432938 32.91051483]
[-3.21967125 40.63855362]
[0.62441564 55.73360825]
[13.43676186 63.53385162]
[26.24910927 71.33409119]
[39.06145477 79.13433838]
[51.87380219 86.93457794]
[64.68614960 94.73481750]
[70.99983215 90.68669128]
[83.62721252 82.59043121]
[89.94089508 78.54229736]
[88.19950104 63.64372253]
[86.37145996 48.75553131]
[84.45684052 33.87822723]
[82.54221344 19.00092125]
[80.62758636 4.12361526]
[78.71296692 -10.75368977]
[76.79833984 -25.63099480]
[67.36285400 -38.33068466]
[73.41233063 -51.94145584]
[71.49771118 -66.81875610]
[59.27121735 -76.47022247]
[57.54145050 -91.58519745]
[66.81799316 -103.18180847]
[64.90336609 -118.05911255]
[62.98873901 -132.93641663]
[61.07411575 -147.81372070]
[59.15949249 -162.69102478]
[44.95615387 -168.53575134]
[35.59077835 -180.70889282]
[33.58260727 -195.93594360]
[39.47182083 -210.12088013]
[51.67425919 -219.44805908]
[66.90751648 -221.40849304]
[81.07393646 -215.47483826]
[90.36281586 -203.24322510]
[92.27548981 -188.00389099]
[86.29746246 -173.85614014]
[74.03679657 -164.60565186]
[75.95142365 -149.72834778]
[77.86604309 -134.85104370]
[79.78067017 -119.97373962]
[81.69529724 -105.09643555]
[93.60576630 -96.22647095]
[95.75939941 -81.16604614]
[86.37501526 -68.73338318]
[88.28963470 -53.85607910]
[97.58818054 -42.22051239]
[91.67564392 -27.54561996]
[93.59027100 -12.66831493]
[95.50489044 2.20899057]
[97.41951752 17.08629608]
[99.33414459 31.96360207]
[101.24877167 46.84090805]
[105.20527649 53.05163956]
[103.09807587 61.90232849]
[104.83946991 76.80090332]
[117.46684265 84.89716339]
[131.73269653 80.26190948]
[145.99853516 75.62665558]
[160.26438904 70.99140167]
[174.53024292 66.35614777]
[188.79608154 61.72089005]
[192.06005859 48.34992218]
[201.42358398 38.41029739]
[214.36944580 34.41846848]
[227.49336243 37.31247711]
[237.39900208 46.23412704]
[251.71781921 41.76517487]
[266.03662109 37.29621887]
[280.35543823 32.82726669]
[284.81900024 22.95745277]
[293.78182983 17.27371597]
[304.17449951 17.43805313]
[312.59048462 23.15632439]
[327.00939941 19.02176476]
[338.14230347 7.78035069]
[352.50921631 11.70980930]
[355.91839600 2.98645711]
[362.84179688 -3.11555696]
[371.65823364 -5.33477640]
[380.37823486 -3.29991794]
[387.09277344 2.41459084]
[401.64721680 -1.21423769]
[416.20162964 -4.84306622]
[430.75607300 -8.47189426]
[431.56903076 -23.56595039]
[436.79647827 -37.74922180]
[445.97360229 -49.76054382]
[458.28436279 -58.53187561]
[472.63412476 -63.28327942]
[487.74688721 -63.59226227]
[502.27886963 -59.43134689]
[514.93786621 -51.17052078]
[524.59826660 -39.54433441]
[530.40106201 -25.58657455]
[531.83026123 -10.53835964]
[528.75878906 4.26223373]
[521.45977783 17.49914742]
[510.58227539 27.99536514]
[497.09341431 34.81756973]
[482.19268799 37.35913086]
[467.20501709 35.39406204]
[453.46313477 29.09709358]
[442.18893433 19.02814484]
[434.38491821 6.08254147]
[419.83047485 9.71136951]
[405.27603149 13.34019852]
[390.72158813 16.96902657]
[377.12188721 32.51799393]
[356.64376831 26.12873459]
[346.54223633 37.07441711]
[331.14395142 33.44068909]
[316.72503662 37.57524872]
[304.30426025 52.42107773]
[284.82440186 47.14608002]
[270.50558472 51.61503601]
[256.18676758 56.08398819]
[241.86795044 60.55294418]
[237.10267639 76.27880096]
[223.76158142 86.15416718]
[206.99674988 86.11827850]
[193.43133545 75.98674011]
[179.16549683 80.62199402]
[164.89964294 85.25724792]
[150.63380432 89.89250183]
[136.36795044 94.52775574]
[122.10210419 99.16300964]
[113.14472198 111.19486237]
[112.79568481 126.19079590]
[112.44665527 141.18673706]
[112.09761810 156.18267822]
[119.51171112 170.15914917]
[111.48035431 182.70294189]
[111.13131714 197.69888306]
[110.78228760 212.69480896]
[110.43325043 227.69075012]
[110.17146301 242.68847656]
[109.99693298 257.68743896]
[117.57314301 271.57672119]
[109.68827820 284.21310425]
[109.60101318 299.21286011]
[109.60101318 314.21286011]
[109.60101318 329.21286011]
[121.98599243 338.37356567]
[126.54874420 352.90057373]
[121.73943329 367.16012573]
[109.60101318 375.75064087]
[109.60101318 390.75064087]
[109.60101318 405.75064087]
[109.60101318 420.75064087]
[130.46246338 433.24468994]
[132.21060181 463.42327881]
[136.51264954 477.79312134]
[140.81469727 492.16296387]
[145.11674500 506.53280640]
[149.41879272 520.90264893]
[154.85923767 528.19488525]
[153.68624878 535.46478271]
[157.82080078 549.88366699]
[167.99877930 563.44262695]
[157.78726196 576.97631836]
[141.95562744 570.91040039]
[143.40188599 554.01824951]
[139.26731873 539.59930420]
[135.04895020 525.20471191]
[130.74690247 510.83486938]
[126.44484711 496.46499634]
[122.14279938 482.09515381]
[117.84075165 467.72531128]
[110.34392548 467.94345093]
[110.78019714 482.93710327]
[103.66146088 496.14028931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[23 247]
[24 246]
[25 245]
[26 244]
[30 240]
[31 239]
[32 238]
[34 237]
[36 235]
[37 234]
[39 233]
[40 232]
[41 231]
[42 230]
[44 228]
[45 227]
[46 226]
[47 225]
[50 77]
[51 76]
[52 75]
[53 74]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[86 96]
[87 95]
[107 153]
[108 152]
[109 150]
[110 149]
[111 148]
[112 147]
[113 146]
[114 145]
[116 143]
[117 142]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[154 224]
[155 223]
[156 222]
[157 221]
[158 220]
[159 219]
[164 215]
[165 214]
[166 213]
[167 212]
[171 210]
[172 209]
[174 207]
[179 205]
[180 204]
[181 203]
[182 202]
[249 266]
[250 265]
[251 264]
[252 263]
[253 262]
[255 261]
[256 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
