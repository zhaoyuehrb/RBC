%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCCUCCCUUUCUGCGACUGGCUGUUAGGCGUGGGUCUCCGCCCCACAGCCCUGCGCCUGCGCGUGGGCCUGGGCCGCCCGUCGUACCUGAUGGUAGGAGGCAGUAGUUCCCCGCUUCCCUUCCGCGGGAGGGAGAGUUAGCUAGCCAUCCAAGAAAACACC\
) } def
/len { sequence length } bind def

/coor [
[182.40319824 358.32046509]
[194.65834045 349.51855469]
[189.34954834 335.48944092]
[173.75102234 329.25750732]
[167.33944702 313.36773682]
[174.52175903 297.44055176]
[168.94680786 283.51504517]
[163.37187195 269.58953857]
[157.66462708 255.71771240]
[151.82557678 241.90086365]
[145.98652649 228.08399963]
[140.14747620 214.26715088]
[134.30842590 200.45028687]
[128.46936035 186.63343811]
[122.63031769 172.81658936]
[116.79126740 158.99972534]
[110.95220947 145.18287659]
[105.11315918 131.36601257]
[91.21635437 130.54208374]
[79.00501251 123.85753632]
[70.82232666 112.59503937]
[68.23845673 98.91571808]
[71.74919891 85.44446564]
[60.41295242 75.62155151]
[49.07670975 65.79863739]
[37.74046707 55.97573090]
[26.40422249 46.15281677]
[15.06797981 36.32990646]
[3.73173594 26.50699615]
[-7.60450792 16.68408585]
[-18.94075203 6.86117458]
[-30.46195602 -2.74412751]
[-42.16394806 -12.12833881]
[-53.95474243 -21.40072250]
[-65.83327484 -30.56044197]
[-77.71181488 -39.72016144]
[-89.59034729 -48.87987900]
[-101.46887970 -58.03959656]
[-110.65439606 -55.57754517]
[-119.80192566 -57.61518097]
[-126.86280823 -63.56539536]
[-130.31645203 -71.97988129]
[-129.49688721 -80.89994812]
[-140.83312988 -90.72285461]
[-152.16937256 -100.54576874]
[-163.50561523 -110.36868286]
[-175.02548218 -107.21960449]
[-186.51266479 -110.01481628]
[-195.12091064 -117.94199371]
[-198.77545166 -128.93237305]
[-196.67240906 -140.19969177]
[-207.62646484 -150.44705200]
[-218.58052063 -160.69442749]
[-229.53457642 -170.94178772]
[-237.98023987 -174.54168701]
[-240.59729004 -181.49006653]
[-251.35426331 -191.94412231]
[-262.11123657 -202.39819336]
[-272.86822510 -212.85224915]
[-288.89147949 -216.34326172]
[-293.62136841 -232.04548645]
[-282.19219971 -243.80583191]
[-266.36129761 -239.52626038]
[-262.41415405 -223.60922241]
[-251.65718079 -213.15516663]
[-240.90020752 -202.70109558]
[-230.14321899 -192.24703979]
[-219.28721619 -181.89585876]
[-208.33316040 -171.64848328]
[-197.37908936 -161.40110779]
[-186.42503357 -151.15374756]
[-168.23454285 -152.89128113]
[-154.28138733 -140.60505676]
[-153.68269348 -121.70492554]
[-142.34645081 -111.88201141]
[-131.01020813 -102.05910492]
[-119.67396545 -92.23619080]
[-99.16104126 -90.19127655]
[-92.30915833 -69.91812897]
[-80.43062592 -60.75841141]
[-68.55209351 -51.59869385]
[-56.67356110 -42.43897629]
[-44.79502487 -33.27925873]
[-37.54493332 -31.67770576]
[-32.77973557 -23.83032990]
[-21.07774544 -14.44611835]
[-16.27477264 -14.07638645]
[-11.66519547 -10.65555668]
[-9.11784077 -4.47506905]
[2.21840334 5.34784174]
[13.55464649 15.17075253]
[24.89089012 24.99366379]
[36.22713470 34.81657410]
[47.56337738 44.63948441]
[58.89962006 54.46239853]
[70.23586273 64.28530884]
[81.57210541 74.10821533]
[103.02088928 68.36385345]
[122.99492645 78.06362152]
[135.98530579 70.56362152]
[148.97569275 63.06361771]
[161.96606445 55.56361771]
[174.95645142 48.06361771]
[187.94683838 40.56361771]
[187.26681519 25.27322388]
[193.78099060 11.42316532]
[205.99244690 2.19608355]
[221.09507751 -0.28770441]
[235.61840820 4.54255724]
[246.22508240 15.57691002]
[250.47776794 30.27973938]
[247.39923096 45.27244568]
[237.69689941 57.10980988]
[223.60028076 63.07169724]
[208.34869385 61.78810883]
[195.44683838 53.55400085]
[182.45645142 61.05400085]
[169.46606445 68.55400085]
[156.47569275 76.05400085]
[143.48530579 83.55400085]
[130.49493408 91.05400085]
[131.75236511 98.67385864]
[131.13468933 106.37203217]
[128.67835999 113.69390869]
[124.52844238 120.20709991]
[118.93001556 125.52696991]
[124.76906586 139.34382629]
[130.60812378 153.16067505]
[136.44717407 166.97752380]
[142.28622437 180.79438782]
[148.12527466 194.61123657]
[153.96432495 208.42810059]
[159.80337524 222.24494934]
[165.64242554 236.06179810]
[171.48147583 249.87866211]
[177.73275757 256.60247803]
[177.29739380 264.01458740]
[182.87232971 277.94009399]
[188.44726562 291.86563110]
[201.38136292 295.71994019]
[209.60249329 306.17639160]
[210.27566528 319.26550293]
[203.37867737 330.18063354]
[208.68748474 344.20974731]
[223.69958496 342.69338989]
[238.59245300 345.11508179]
[252.35069275 351.30969238]
[264.03622437 360.85488892]
[272.85232544 373.09982300]
[278.19790649 387.20965576]
[279.70846558 402.22235107]
[277.28103638 417.11428833]
[271.08111572 430.87014771]
[261.53140259 442.55200195]
[249.28305054 451.36337280]
[235.17115784 456.70349121]
[220.15789795 458.20825195]
[205.26689148 455.77505493]
[191.51344299 449.56982422]
[179.83528137 440.01562500]
[171.02864075 427.76385498]
[165.69396973 413.64990234]
[164.19499207 398.63607788]
[166.63392639 383.74600220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[6 139]
[7 138]
[8 137]
[9 135]
[10 134]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 86]
[33 85]
[34 83]
[35 82]
[36 81]
[37 80]
[38 79]
[43 77]
[44 76]
[45 75]
[46 74]
[51 71]
[52 70]
[53 69]
[54 68]
[56 67]
[57 66]
[58 65]
[59 64]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
