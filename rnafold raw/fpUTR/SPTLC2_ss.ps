%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUGGCCGAGACCGGUCCUCUGCGGAGAGGGCCCCGCCCUCUGUGAAGGCCCGCCCGGGAAUUGGCGGCGGCGCUGCAGCCAUUUCCGGUUUCGGGGAGGUGGGUGGGGUGCGGAGCGGGACUUGGAGCAGCCGCCGCCGCUGCCACCGCCUACAGAGCCUGCCUUGCGCCUGGUGCUGCCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[101.61814117 297.63186646]
[111.48489380 284.98168945]
[110.98632050 269.98999023]
[110.48774719 254.99827576]
[109.98917389 240.00656128]
[109.49060059 225.01486206]
[108.99202728 210.02314758]
[100.83596802 197.56007385]
[108.11029816 183.51036072]
[99.48825073 175.00894165]
[98.96098328 162.51058960]
[107.35725403 152.70320129]
[107.10793304 137.70527649]
[106.85861206 122.70734406]
[93.03646851 116.88082123]
[82.12586212 127.17444611]
[71.21525574 137.46807861]
[60.30465317 147.76170349]
[49.39404678 158.05532837]
[38.48344421 168.34895325]
[27.57283974 178.64257812]
[16.66223335 188.93620300]
[12.47982025 204.79304504]
[-3.41271377 208.83770752]
[-14.66649151 196.90940857]
[-9.70459080 181.27893066]
[6.36860943 178.02558899]
[17.27921486 167.73196411]
[28.18981934 157.43833923]
[39.10042191 147.14471436]
[50.01102829 136.85108948]
[60.92163086 126.55747223]
[71.83223724 116.26384735]
[82.74284363 105.97022247]
[83.11680603 90.97488403]
[72.73285675 80.15020752]
[62.34890747 69.32552338]
[51.96496201 58.50085068]
[41.58101273 47.67617035]
[31.19706726 36.85149384]
[16.06013107 32.24891281]
[12.83309555 17.70809174]
[2.44914842 6.88341475]
[-6.10639858 9.57722282]
[-15.02928162 9.33728218]
[-23.34622002 6.21812344]
[-30.15926743 0.58678526]
[-34.74275208 -6.92014742]
[-36.62052155 -15.46841812]
[-35.61527252 -24.11878014]
[-31.86490250 -31.93019295]
[-41.31439590 -43.57953262]
[-50.76388550 -55.22887421]
[-60.21337509 -66.87821198]
[-79.33930206 -73.20773315]
[-81.59320068 -92.40105438]
[-91.42467499 -103.72987366]
[-101.25614929 -115.05869293]
[-111.08762360 -126.38751221]
[-120.91909790 -137.71632385]
[-130.75056458 -149.04515076]
[-140.58204651 -160.37396240]
[-150.41351318 -171.70278931]
[-158.41767883 -176.14413452]
[-160.31234741 -183.30258179]
[-169.95416260 -194.79324341]
[-179.59597778 -206.28390503]
[-194.39366150 -211.88201904]
[-196.64747620 -226.60511780]
[-206.28929138 -238.09577942]
[-215.93110657 -249.58644104]
[-231.51794434 -254.68377686]
[-234.63169861 -270.78460693]
[-222.06922913 -281.32577515]
[-206.75370789 -275.46343994]
[-204.44044495 -259.22827148]
[-194.79862976 -247.73759460]
[-185.15681458 -236.24693298]
[-171.04876709 -231.47071838]
[-168.10530090 -215.92572021]
[-158.46348572 -204.43505859]
[-148.82167053 -192.94439697]
[-139.08470154 -181.53425598]
[-129.25321960 -170.20544434]
[-119.42175293 -158.87661743]
[-109.59027863 -147.54780579]
[-99.75880432 -136.21897888]
[-89.92733002 -124.89015961]
[-80.09585571 -113.56134796]
[-70.26438141 -102.23252869]
[-60.02486038 -102.42824554]
[-51.18796539 -96.82950592]
[-46.81077194 -87.08660889]
[-48.56403732 -76.32770538]
[-39.11454391 -64.67836761]
[-29.66505432 -53.02902603]
[-20.21556282 -41.37968445]
[1.01338589 -41.19178391]
[15.39529896 -25.19294357]
[13.27382565 -3.50053239]
[23.65777206 7.32414532]
[38.05197906 11.15247154]
[42.02174377 26.46754646]
[52.40569305 37.29222488]
[62.78963852 48.11690140]
[73.17358398 58.94157791]
[83.55753326 69.76625824]
[93.94148254 80.59093475]
[107.85855865 86.18690491]
[122.84561157 85.56375885]
[137.83265686 84.94060516]
[152.81971741 84.31745148]
[167.80676270 83.69429779]
[182.79380798 83.07114410]
[197.78086853 82.44799042]
[211.24768066 74.14406586]
[224.28540039 81.34594727]
[239.27246094 80.72280121]
[254.25950623 80.09964752]
[269.24655151 79.47649384]
[284.23361206 78.85334015]
[292.69650269 75.36457825]
[299.47451782 78.34648132]
[314.46984863 77.97251892]
[329.46517944 77.59855652]
[344.41342163 76.35333252]
[359.26394653 74.24104309]
[373.47616577 62.54609299]
[389.49182129 69.70032501]
[404.30520630 67.34149933]
[419.11856079 64.98266602]
[433.93194580 62.62384033]
[448.74530029 60.26501083]
[456.63241577 46.76213837]
[471.37112427 41.53676224]
[486.00225830 47.05615234]
[493.61746216 60.71421432]
[490.62106323 76.06203461]
[478.42785645 85.85283661]
[462.79510498 85.46370697]
[451.10412598 75.07838440]
[436.29077148 77.43721008]
[421.47738647 79.79603577]
[406.66403198 82.15486908]
[391.85064697 84.51369476]
[384.48730469 94.12593079]
[372.15151978 96.20320129]
[361.37622070 89.09157562]
[346.52569580 91.20385742]
[358.48773193 100.25426483]
[361.97030640 114.84438324]
[355.38552856 128.32180786]
[341.73574829 134.54142761]
[327.24465942 130.66738892]
[318.51950073 118.46608734]
[319.53857422 103.50074768]
[329.83914185 92.59389496]
[314.84381104 92.96785736]
[299.84848022 93.34181976]
[284.85675049 93.84039307]
[269.86972046 94.46354675]
[254.88265991 95.08669281]
[239.89561462 95.70984650]
[224.90855408 96.33300018]
[212.51370239 104.59235382]
[198.40400696 97.43504333]
[183.41696167 98.05819702]
[168.42991638 98.68135071]
[153.44285583 99.30450439]
[138.45581055 99.92765045]
[123.46876526 100.55080414]
[108.48171234 101.17395782]
[117.80280304 109.00413513]
[121.85653687 122.45802307]
[122.10585785 137.45594788]
[122.35517883 152.45388794]
[132.19216919 168.01000977]
[123.10201263 183.01177979]
[131.29373169 196.54714966]
[123.98373413 209.52456665]
[124.48230743 224.51628113]
[124.98088074 239.50799561]
[125.47945404 254.49971008]
[125.97802734 269.49142456]
[126.47660065 284.48312378]
[137.16203308 296.44979858]
[134.32643127 312.24026489]
[120.14502716 319.74145508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[9 178]
[12 176]
[13 175]
[14 174]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[42 101]
[43 100]
[51 97]
[52 96]
[53 95]
[54 94]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[65 82]
[66 81]
[67 80]
[69 78]
[70 77]
[71 76]
[109 172]
[110 171]
[111 170]
[112 169]
[113 168]
[114 167]
[115 166]
[117 164]
[118 163]
[119 162]
[120 161]
[121 160]
[123 159]
[124 158]
[125 157]
[126 149]
[127 148]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
