%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUACCCAGCCCUUGAAAGAUGAGCUGUUCCCGCCGCCACUCCAGCUCUGGCUUCUGGGCUCCGAGGAGGGGUGGGGACGGUGGGGACGGUGGGGACAUCAGGCUGCCCCGCAGUACCAGGGAGCGACUGAAGUGCCCAUGCCGCUUGCUCCGGAGAAGGUGUGGCCUCACUCACAUCCCACUCUGAGUCCAA\
) } def
/len { sequence length } bind def

/coor [
[-22.97822762 152.83538818]
[-37.17550659 147.99418640]
[-45.05416107 135.22990417]
[-43.01801682 120.36874390]
[-31.99625778 110.19391632]
[-46.98433685 109.59605408]
[-61.97241974 108.99819183]
[-76.96050262 108.40033722]
[-91.94857788 107.80247498]
[-100.73261261 118.02215576]
[-113.61170959 121.26580811]
[-125.82514191 116.56565094]
[-132.99058533 105.84841919]
[-147.96722412 105.01162720]
[-162.94386292 104.17483521]
[-177.92050171 103.33805084]
[-166.39424133 112.93728638]
[-161.11270142 126.97670746]
[-163.45407104 141.79284668]
[-172.80737305 153.51956177]
[-186.73193359 159.09686279]
[-201.59428406 157.06939697]
[-213.51620483 147.96621704]
[-219.38677979 134.16271973]
[-217.67411804 119.26081848]
[-208.82513428 107.14902496]
[-195.15052795 100.98809052]
[-209.80426025 97.78367615]
[-224.45799255 94.57926178]
[-239.11170959 91.37484741]
[-253.76544189 88.17043304]
[-268.41915894 84.96601868]
[-283.07290649 81.76160431]
[-297.72662354 78.55718994]
[-312.38034058 75.35277557]
[-327.03408813 72.14836121]
[-341.68780518 68.94394684]
[-356.34152222 65.73953247]
[-371.47604370 70.35012054]
[-382.25659180 60.07253647]
[-395.46008301 68.33724976]
[-410.27542114 64.87876892]
[-418.07318115 52.24032211]
[-432.72689819 49.03590775]
[-447.38064575 45.83149338]
[-464.78546143 51.82790756]
[-477.29275513 39.52498627]
[-491.99572754 36.55465317]
[-506.69866943 33.58432388]
[-521.40167236 30.61399078]
[-536.10461426 27.64365959]
[-547.43902588 38.24131012]
[-562.84204102 40.11935806]
[-576.39086914 32.55566025]
[-582.87567139 18.45860863]
[-579.80291748 3.24881029]
[-568.35418701 -7.22525883]
[-552.93176270 -8.93610477]
[-539.46575928 -1.22587240]
[-533.13427734 12.94069672]
[-518.43133545 15.91102791]
[-503.72836304 18.88135910]
[-489.02539062 21.85169029]
[-474.32241821 24.82202148]
[-464.06719971 18.39299965]
[-451.78765869 20.75548363]
[-444.17620850 31.17776489]
[-429.52249146 34.38217926]
[-414.86877441 37.58659363]
[-402.50753784 29.35642815]
[-387.60092163 32.39741135]
[-379.05218506 45.41881180]
[-364.96582031 40.57902145]
[-353.13711548 51.08580399]
[-338.48339844 54.29021835]
[-323.82965088 57.49463272]
[-309.17593384 60.69904709]
[-294.52221680 63.90346146]
[-279.86846924 67.10787964]
[-265.21475220 70.31229401]
[-250.56101990 73.51670837]
[-235.90730286 76.72112274]
[-221.25357056 79.92553711]
[-206.59983826 83.12995148]
[-191.94612122 86.33436584]
[-177.08370972 88.36140442]
[-162.10707092 89.19819641]
[-147.13043213 90.03498840]
[-132.15379333 90.87178040]
[-120.11348724 79.13743591]
[-102.97412872 79.74830627]
[-91.35072327 92.81439209]
[-76.36264038 93.41225433]
[-61.37455750 94.01011658]
[-46.38647842 94.60797119]
[-31.39839745 95.20583344]
[-16.40030479 94.96663666]
[-1.43891168 93.89112854]
[13.52248096 92.81562042]
[28.48387337 91.74010468]
[34.93754959 88.12061310]
[43.69208527 90.76867676]
[58.66872787 89.93188477]
[73.64537048 89.09509277]
[88.62200928 88.25830078]
[101.01879883 79.81320953]
[107.27967834 66.18231201]
[113.54056549 52.55141068]
[119.80144501 38.92051697]
[126.06232452 25.28961754]
[127.17898560 8.37248421]
[143.74411011 4.76237631]
[151.79882812 19.68075562]
[139.69322205 31.55049896]
[133.43234253 45.18139648]
[127.17145538 58.81229401]
[120.91057587 72.44319153]
[114.64969635 86.07408905]
[118.15547180 92.70429230]
[131.41596985 85.69294739]
[138.42710876 98.95355988]
[125.16701508 105.96469116]
[128.67279053 112.59488678]
[143.46299744 115.09484863]
[158.25320435 117.59480286]
[173.04341125 120.09476471]
[187.85307312 122.47671509]
[202.66288757 116.91075134]
[214.07667542 126.48021698]
[228.90487671 128.74400330]
[243.71469116 123.17803955]
[255.12847900 132.74751282]
[269.95666504 135.01129150]
[284.78485107 137.27508545]
[293.75231934 135.47552490]
[299.83068848 139.69502258]
[308.82571411 138.03868103]
[314.83602905 142.35456848]
[329.58450317 145.09007263]
[344.33294678 147.82556152]
[353.35324097 146.31288147]
[359.29397583 150.72406006]
[373.99694824 153.69439697]
[388.69989014 156.66471863]
[403.40286255 159.63505554]
[418.10583496 162.60539246]
[435.41281128 156.33218384]
[448.11471558 168.43409729]
[462.86315918 171.16958618]
[477.61163330 173.90509033]
[490.49398804 164.74972534]
[506.06283569 167.46743774]
[515.08148193 180.44586182]
[512.19934082 195.98512268]
[499.12628174 204.86605835]
[483.61834717 201.81976318]
[474.87612915 188.65354919]
[460.12768555 185.91804504]
[445.37921143 183.18255615]
[435.22781372 189.77429199]
[422.91213989 187.60792542]
[415.13549805 177.30834961]
[400.43252563 174.33801270]
[385.72955322 171.36769104]
[371.02661133 168.39735413]
[356.32363892 165.42701721]
[341.59747314 162.57402039]
[326.84899902 159.83853149]
[312.10052490 157.10304260]
[297.33074951 154.48522949]
[282.52105713 152.10327148]
[267.69287109 149.83949280]
[252.86468506 147.57569885]
[239.11547852 153.30358887]
[226.64108276 143.57220459]
[211.81289673 141.30841064]
[198.06369019 147.03630066]
[185.58929443 137.30490112]
[178.49440002 139.40565491]
[170.54345703 134.88496399]
[155.75325012 132.38500977]
[140.96304321 129.88505554]
[126.17282867 127.38509369]
[107.82611084 130.16868591]
[93.82852173 123.66206360]
[87.72610474 112.80858612]
[89.45880127 103.23493958]
[74.48216248 104.07173157]
[59.50551987 104.90852356]
[44.52887726 105.74531555]
[29.55938530 106.70149994]
[14.59799194 107.77700806]
[-0.36340135 108.85251617]
[-15.32479382 109.92803192]
[-3.98428512 119.74601746]
[-1.47512221 134.53466797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 96]
[6 95]
[7 94]
[8 93]
[9 92]
[13 89]
[14 88]
[15 87]
[16 86]
[27 85]
[28 84]
[29 83]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[37 75]
[38 74]
[40 72]
[43 69]
[44 68]
[45 67]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[97 194]
[98 193]
[99 192]
[100 191]
[102 190]
[103 189]
[104 188]
[105 187]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[123 183]
[124 182]
[125 181]
[126 180]
[127 178]
[129 176]
[130 175]
[132 173]
[133 172]
[134 171]
[136 170]
[138 169]
[139 168]
[140 167]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
