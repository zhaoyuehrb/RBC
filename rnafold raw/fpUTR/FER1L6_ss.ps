%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUGAGGUUGCCUGUAACUGACUUCAAAAGGCCAUUCCACCAUUCCGUCAAGCCAGCUGCUUUAGAACGGUUGGGAACACCGUGAGACCAGUGAAUUCCACGAGCACGAACCCACUGCUGCGCUUCAUUUGCUGUGAAGUGAGUCCCUUGAUCAGAGCAAUGCUGUGUGGACCAUCGUGAAGGUGGACAAGGCAUUUUAAAGGGG\
) } def
/len { sequence length } bind def

/coor [
[76.20404053 142.93463135]
[66.91539764 154.71263123]
[57.62675095 166.49061584]
[48.33810806 178.26861572]
[39.04946136 190.04660034]
[36.57912827 205.67376709]
[22.62252998 210.87594604]
[13.33388710 222.65393066]
[4.04524279 234.43193054]
[1.57490790 250.05908203]
[-12.38168907 255.26126099]
[-21.67033386 267.03924561]
[-30.95897675 278.81723022]
[-40.24761963 290.59524536]
[-32.50478363 303.64947510]
[-30.00438881 318.61984253]
[-33.08459854 333.48178101]
[-41.32884216 346.22528076]
[-53.62214661 355.12692261]
[-68.30194855 358.98278809]
[-83.38291931 357.27148438]
[-96.82549286 350.22436523]
[-106.81166077 338.79452515]
[-111.99087524 324.52777100]
[-111.66269684 309.35357666]
[-105.87151337 295.32409668]
[-95.40052032 284.33670044]
[-81.66584015 277.87734985]
[-66.52497864 276.81964111]
[-52.02561188 281.30657959]
[-42.73696899 269.52859497]
[-33.44832611 257.75061035]
[-24.15968132 245.97261047]
[-22.35373306 231.18789673]
[-7.73274899 225.14328003]
[1.55589461 213.36529541]
[10.84453869 201.58729553]
[12.65048695 186.80258179]
[27.27147102 180.75796509]
[36.56011581 168.97996521]
[45.84875870 157.20198059]
[55.13740158 145.42398071]
[64.42604828 133.64599609]
[62.51240540 126.39423370]
[48.71417999 132.27719116]
[34.91595840 138.16012573]
[22.24393654 146.18632507]
[8.28141594 140.70472717]
[4.45446539 126.20111847]
[13.89482594 114.54438019]
[28.87642479 115.27327728]
[43.78077316 113.58200073]
[58.68511963 111.89072418]
[56.77147675 104.63896942]
[42.88084030 98.97767639]
[28.99020195 93.31639099]
[15.09956360 87.65510559]
[1.20892608 81.99381256]
[-12.68171215 76.33252716]
[-26.57234955 70.67124176]
[-39.68496323 78.96816254]
[-55.16790771 77.93952179]
[-67.06767273 67.98085022]
[-70.80855560 52.92145538]
[-64.95211029 38.55198288]
[-51.75026703 30.39779091]
[-36.27939224 31.59433174]
[-24.48836136 41.68151093]
[-20.91106224 56.78060150]
[-7.02042389 62.44189072]
[6.87021399 68.10317993]
[20.76085091 73.76446533]
[34.65148926 79.42575073]
[48.54212570 85.08704376]
[62.43276596 90.74832916]
[68.10427094 85.84078217]
[58.28918457 74.49776459]
[48.47428513 63.15458679]
[59.81762695 53.33987427]
[69.63220215 64.68267822]
[79.44728851 76.02569580]
[85.11879730 71.11814880]
[81.51206207 56.55822372]
[77.90532684 41.99829865]
[74.29859161 27.43837166]
[63.08319473 25.04011154]
[53.61627960 18.65734291]
[47.24504089 9.24457169]
[44.85882950 -1.81593966]
[46.76516724 -12.91711235]
[52.65070724 -22.46054649]
[61.63196564 -29.08666420]
[58.69165802 -43.79566193]
[55.75134659 -58.50465775]
[43.25500870 -68.56552887]
[43.47365952 -84.60709381]
[56.23956299 -94.32363129]
[71.75981903 -90.26145172]
[78.12860870 -75.53671265]
[70.46034241 -61.44496536]
[73.40065002 -46.73596954]
[76.34096527 -32.02697372]
[93.74249268 -25.21796036]
[103.60604095 -9.17057037]
[101.79415894 9.72924042]
[88.85852051 23.83163643]
[92.46525574 38.39156342]
[96.07199097 52.95148849]
[99.67872620 67.51141357]
[106.83586884 69.75313568]
[110.65106201 55.24643707]
[107.89836121 40.50117874]
[119.11682892 30.54397202]
[133.43109131 35.02750397]
[136.96464539 49.60536194]
[126.29220581 60.14546967]
[121.15015411 74.23657227]
[128.30729675 76.47829437]
[139.57551575 66.57741547]
[150.84371948 56.67653656]
[155.22660828 48.65862656]
[162.35888672 46.71248627]
[173.77606201 36.98375702]
[185.19322205 27.25502396]
[196.61039734 17.52629280]
[208.02757263 7.79756165]
[219.44473267 -1.93116963]
[230.86190796 -11.65990067]
[242.27908325 -21.38863182]
[244.98417664 -37.20198059]
[259.10314941 -44.82001495]
[273.80511475 -38.39882660]
[277.81198120 -22.86420441]
[268.05004883 -10.13298225]
[252.00781250 -9.97146130]
[240.59063721 -0.24273023]
[229.17347717 9.48600101]
[217.75630188 19.21473312]
[206.33912659 28.94346428]
[194.92195129 38.67219543]
[183.50479126 48.40092468]
[172.08761597 58.12965775]
[160.74459839 67.94474792]
[149.47639465 77.84562683]
[138.20817566 87.74650574]
[139.00457764 102.72534943]
[151.25912476 111.37555695]
[163.51368713 120.02575684]
[175.76823425 128.67596436]
[188.02278137 137.32617188]
[195.78329468 132.20413208]
[204.62837219 129.41305542]
[213.87631226 129.15457153]
[222.81805420 131.43565369]
[230.77153015 136.06903076]
[237.13371277 142.68852234]
[241.42630005 150.77795410]
[243.33168030 159.71136475]
[242.71641541 168.80146790]
[239.64048767 177.35252380]
[251.05764771 187.08125305]
[262.47482300 196.80998230]
[273.89199829 206.53872681]
[285.30917358 216.26745605]
[296.72634888 225.99618530]
[312.24853516 229.05752563]
[316.91757202 243.20141602]
[328.33474731 252.93014526]
[339.75189209 262.65887451]
[344.89199829 263.60336304]
[348.76675415 266.16989136]
[350.97003174 269.60406494]
[351.45422363 273.09960938]
[362.41677856 283.33789062]
[373.37930298 293.57620239]
[384.34182739 303.81448364]
[395.30438232 314.05279541]
[411.32263184 314.94430542]
[420.49502563 328.10662842]
[415.78521729 343.44277954]
[400.80624390 349.18817139]
[387.04864502 340.93542480]
[385.06607056 325.01531982]
[374.10354614 314.77703857]
[363.14099121 304.53872681]
[352.17846680 294.30044556]
[341.21591187 284.06213379]
[330.02316284 274.07604980]
[318.60598755 264.34732056]
[307.18884277 254.61857605]
[292.48324585 252.25309753]
[286.99761963 237.41336060]
[275.58044434 227.68461609]
[264.16326904 217.95588684]
[252.74609375 208.22715759]
[241.32891846 198.49842834]
[229.91175842 188.76969910]
[210.00659180 195.35485840]
[190.03915405 188.53157043]
[178.17585754 170.91816711]
[179.37257385 149.58071899]
[167.11802673 140.93051147]
[154.86347961 132.28030396]
[142.60893250 123.63010406]
[130.35438538 114.97989655]
[121.10154724 132.71374512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[7 37]
[8 36]
[9 35]
[11 33]
[12 32]
[13 31]
[14 30]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[82 109]
[83 108]
[84 107]
[85 106]
[92 102]
[93 101]
[94 100]
[118 145]
[119 144]
[120 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[146 205]
[147 204]
[148 203]
[149 202]
[150 201]
[160 197]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[167 190]
[168 189]
[169 188]
[173 187]
[174 186]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
