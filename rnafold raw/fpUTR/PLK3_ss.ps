%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGGGAGGAGCUUCUGGGUGAUGUAAGGCCGGGAAUGGGAGUGGCCUCUCCUCGACUCGCUGCUAGGAAGGGGGCGGGACUCUCGGUGACCAGACGCCGGGGAGGGGGCAGGCGUUCAUUGAUAAAACGCUGGGCUCCCCUGGGCGCCAGCGCAGCGUAGCAAAUCCAGGCAGCGCCACGCGCGGCCGGGGCCGGGCGGAACCGAGAAGCCGGGACCGCGCUGCGACGCGCCGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[365.89224243 427.09060669]
[363.30151367 423.27679443]
[362.29055786 418.19555664]
[348.08166504 413.72824097]
[344.79980469 398.25119019]
[332.76565552 397.15194702]
[324.43334961 387.85455322]
[324.66784668 374.97137451]
[314.92611694 363.56527710]
[300.77691650 358.91238403]
[297.69790649 343.39367676]
[287.95620728 331.98757935]
[278.21447754 320.58148193]
[268.39831543 309.23941040]
[258.50811768 297.96179199]
[248.61793518 286.68420410]
[238.72775269 275.40661621]
[228.83757019 264.12899780]
[218.94737244 252.85140991]
[209.05718994 241.57380676]
[197.02305603 240.47459412]
[188.69073486 231.17718506]
[188.92523193 218.29400635]
[179.18351746 206.88792419]
[169.44178772 195.48182678]
[155.29260254 190.82891846]
[152.21359253 175.31021118]
[138.06440735 170.65728760]
[134.98539734 155.13858032]
[125.24368286 143.73248291]
[110.57146454 140.61381531]
[97.03268433 147.07148743]
[83.53646088 153.61761475]
[70.08337402 160.25195312]
[56.63027954 166.88627625]
[51.46382141 181.58135986]
[37.72596359 188.11787415]
[23.74828911 183.10188293]
[10.29519749 189.73622131]
[5.45304632 204.78045654]
[-8.64669418 211.91998291]
[-23.63889694 206.91903687]
[-30.62895584 192.74461365]
[-25.46979141 177.80612183]
[-11.22224426 170.96630859]
[3.66086745 176.28312683]
[17.11395836 169.64878845]
[21.64357758 155.50601196]
[35.19241714 148.58621216]
[49.99594879 153.43318176]
[63.44903946 146.79885864]
[76.90213013 140.16453552]
[81.50193024 134.39866638]
[90.57501984 133.53269958]
[104.11380005 127.07503510]
[77.43622589 132.92968750]
[48.79636383 111.37200928]
[34.12414932 108.25333405]
[19.45193481 105.13465881]
[4.77972126 102.01598358]
[-9.89249325 98.89730835]
[-24.56470680 95.77863312]
[-39.67198563 100.47763824]
[-50.51246262 90.26326752]
[-65.18467712 87.14459229]
[-79.36848450 94.64120483]
[-94.01481628 88.09410858]
[-97.88826752 72.52567291]
[-88.01744843 59.87868118]
[-71.97441101 59.85481262]
[-62.06600189 72.47238159]
[-47.39378738 75.59105682]
[-33.33596039 70.66898346]
[-21.44603157 81.10642242]
[-6.77381754 84.22509766]
[7.89839649 87.34377289]
[22.57061005 90.46244812]
[37.24282455 93.58112335]
[51.91503906 96.69979858]
[55.70746994 90.22928619]
[63.29232788 77.28827667]
[67.08476257 70.81776428]
[57.19457245 59.54016876]
[47.30438614 48.26256943]
[37.41419983 36.98497391]
[27.52401161 25.70737648]
[17.63382339 14.42978001]
[7.74363613 3.15218258]
[-2.14655089 -8.12541485]
[-17.93140984 -8.90883827]
[-28.47694588 -20.68029594]
[-27.52667999 -36.45598984]
[-15.64438629 -46.87648392]
[0.12037994 -45.75947952]
[10.41466236 -33.76767731]
[9.13104630 -18.01560211]
[19.02123260 -6.73800468]
[28.91142082 4.53959227]
[38.80160904 15.81718922]
[48.69179535 27.09478760]
[58.58198166 38.37238312]
[68.47216797 49.64998245]
[78.36235809 60.92757797]
[85.46433258 58.51678085]
[106.77026367 51.28439331]
[107.75130463 36.31650925]
[108.73235321 21.34862709]
[109.71340179 6.38074255]
[110.69445038 -8.58714104]
[111.67549896 -23.55502510]
[103.15332794 -39.88866806]
[113.48780060 -54.08227158]
[114.27284241 -69.06171417]
[115.05788422 -84.04115295]
[115.84291840 -99.02059937]
[116.62796021 -114.00004578]
[117.41300201 -128.97949219]
[104.82920837 -137.90426636]
[99.08936310 -152.22410583]
[102.02502441 -167.36958313]
[112.69943237 -178.50784302]
[127.70641327 -182.08468628]
[142.25730896 -176.95877075]
[151.70898438 -164.76576233]
[153.04542542 -149.39639282]
[145.84019470 -135.75497437]
[132.39244080 -128.19444275]
[131.60740662 -113.21500397]
[130.82235718 -98.23555756]
[130.03732300 -83.25611877]
[129.25228882 -68.27667236]
[128.46723938 -53.29722977]
[136.32028198 -44.11255646]
[135.80111694 -31.63859367]
[126.64337921 -22.57397842]
[125.66233063 -7.60609436]
[124.68128204 7.36178923]
[123.70024109 22.32967377]
[122.71919250 37.29755783]
[121.73814392 52.26544189]
[136.64283752 84.16362762]
[125.92943573 108.81164551]
[136.11145020 97.79681396]
[139.79734802 82.41094971]
[154.11830139 78.31711578]
[164.30030823 67.30227661]
[167.38984680 51.19678497]
[182.96899414 46.07600784]
[195.01124573 57.20776367]
[191.12858582 73.14064789]
[175.31513977 77.48428345]
[165.13313293 88.49912262]
[162.17552185 103.09712982]
[147.12628174 107.97882080]
[136.94427490 118.99365997]
[136.64976501 133.99076843]
[146.39149475 145.39686584]
[161.23747253 150.86561584]
[163.61968994 165.56848145]
[178.46566772 171.03724670]
[180.84788513 185.74011230]
[190.58959961 197.14619446]
[200.33132935 208.55229187]
[217.83323669 214.30541992]
[220.33479309 231.68362427]
[230.22497559 242.96122742]
[240.11515808 254.23881531]
[250.00535583 265.51641846]
[259.89553833 276.79400635]
[269.78573608 288.07162476]
[279.67590332 299.34921265]
[287.67034912 303.72640991]
[289.62057495 310.83975220]
[299.36227417 322.24584961]
[309.10400391 333.65194702]
[323.94998169 339.12069702]
[326.33221436 353.82357788]
[336.07391357 365.22964478]
[353.57583618 370.98278809]
[356.07739258 388.36099243]
[370.99368286 393.63494873]
[373.56814575 408.30538940]
[383.67785645 419.38662720]
[394.00317383 430.26724243]
[404.32849121 441.14785767]
[414.65380859 452.02847290]
[424.97912598 462.90908813]
[435.30444336 473.78970337]
[445.62976074 484.67031860]
[455.95507812 495.55093384]
[471.06692505 500.23522949]
[474.21536255 514.79327393]
[484.54067993 525.67388916]
[495.14727783 536.28045654]
[506.02789307 546.60577393]
[516.90850830 556.93109131]
[527.85650635 567.18499756]
[538.87133789 577.36700439]
[549.88616943 587.54901123]
[560.90100098 597.73101807]
[576.47155762 597.28808594]
[587.49707031 607.77099609]
[587.82342529 622.61785889]
[598.83825684 632.79986572]
[609.85308838 642.98187256]
[625.63336182 642.11102295]
[637.35156250 652.71569824]
[638.05554199 668.50433350]
[627.32757568 680.10974121]
[611.53240967 680.64672852]
[600.04101562 669.79669189]
[599.67108154 653.99670410]
[588.65625000 643.81469727]
[577.64141846 633.63269043]
[562.81469727 634.47222900]
[551.49908447 624.30316162]
[550.71899414 608.74584961]
[539.70416260 598.56384277]
[528.68933105 588.38183594]
[517.67443848 578.19982910]
[510.64315796 575.97186279]
[506.58319092 567.81170654]
[495.70257568 557.48638916]
[484.82196045 547.16107178]
[482.03826904 547.08911133]
[479.11486816 545.92102051]
[476.46542358 543.59802246]
[474.51736450 540.21069336]
[473.66006470 535.99920654]
[463.33474731 525.11859131]
[448.96142578 521.21252441]
[445.07446289 505.87625122]
[434.74914551 494.99563599]
[424.42382812 484.11502075]
[414.09851074 473.23440552]
[403.77319336 462.35379028]
[393.44787598 451.47317505]
[383.12255859 440.59255981]
[372.79724121 429.71194458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[5 180]
[8 178]
[9 177]
[11 175]
[12 174]
[13 173]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[23 163]
[24 162]
[25 161]
[27 159]
[29 157]
[30 156]
[31 55]
[32 54]
[33 52]
[34 51]
[35 50]
[38 47]
[39 46]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[64 72]
[65 71]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[142 155]
[143 154]
[145 152]
[146 151]
[183 239]
[184 238]
[185 237]
[186 236]
[187 235]
[188 234]
[189 233]
[190 232]
[192 230]
[193 229]
[194 224]
[195 223]
[196 222]
[197 220]
[198 219]
[199 218]
[200 217]
[203 214]
[204 213]
[205 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
