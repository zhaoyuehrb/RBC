%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGCGCAGGCUACCCAGCCGCGGGGGGUGCACGGAGAAAAGGGGCGGGGUGGUCCGGGCUGCUGUGCUGGCAGCAGUAGGCGAGGGCGCGGCUGCGGGGUUCCUGGUGCUGAGGACGGACGCCAUUGGAGUUCCCGAGAAGCUGCUUCACCCUCCCUCUCAGGCUGAGCUCUCAUCUCCCUGGGACCCGCAGC\
) } def
/len { sequence length } bind def

/coor [
[54.72220230 417.87191772]
[45.16828918 429.43579102]
[30.91438866 434.10763550]
[16.36903572 430.44259644]
[6.03090429 419.57415771]
[3.09744859 404.86361694]
[-3.84062576 418.16259766]
[-10.77869987 431.46160889]
[-11.97647381 440.52999878]
[-17.93604279 444.91680908]
[-25.08638000 458.10290527]
[-32.23671722 471.28897095]
[-39.38705444 484.47506714]
[-38.40836334 500.84497070]
[-52.24295044 509.65045166]
[-66.65898132 501.83312988]
[-66.82647705 485.43484497]
[-52.57313538 477.32470703]
[-45.42279816 464.13864136]
[-38.27246094 450.95257568]
[-31.12212181 437.76647949]
[-24.07769012 424.52352905]
[-17.13961601 411.22451782]
[-10.20154095 397.92553711]
[-4.23991013 384.16113281]
[-7.33946753 369.59262085]
[4.52154922 359.12231445]
[9.47573566 344.96408081]
[14.42992115 330.80581665]
[19.38410759 316.64758301]
[16.28454971 302.07904053]
[28.14556694 291.60876465]
[20.20718956 276.78875732]
[25.54280853 260.49005127]
[41.31726837 252.94169617]
[46.04389191 238.70585632]
[50.77051544 224.47001648]
[55.49713898 210.23419189]
[60.22375870 195.99835205]
[53.33820343 182.84066772]
[57.92887497 168.33616638]
[71.77655029 161.20317078]
[76.50317383 146.96734619]
[81.22979736 132.73150635]
[85.95642090 118.49566650]
[81.91542053 112.17742157]
[69.79239655 93.22267151]
[54.88671875 91.54320526]
[39.98103333 89.86373901]
[25.07534981 88.18427277]
[10.26907063 95.23452759]
[-3.08452630 85.71541595]
[-1.24840438 69.41938019]
[13.88859177 63.11038589]
[26.75481796 73.27858734]
[41.66049957 74.95805359]
[56.56618500 76.63751984]
[71.47187042 78.31698608]
[74.28636932 71.36511230]
[82.72987366 50.50948334]
[70.85401154 41.34630585]
[58.97814941 32.18312454]
[47.10228729 23.01994705]
[35.22642136 13.85676670]
[23.35055923 4.69358730]
[11.47469425 -4.46959257]
[-0.40116909 -13.63277245]
[-16.71745300 -15.27926254]
[-23.20204735 -30.34186745]
[-13.18415928 -43.32546997]
[3.03066874 -40.87365341]
[8.76201057 -25.50863647]
[20.63787460 -16.34545708]
[32.51373672 -7.18227673]
[44.38960266 1.98090291]
[56.26546478 11.14408207]
[68.14132690 20.30726242]
[80.01719666 29.47044182]
[91.89305878 38.63362122]
[108.68221283 81.33123016]
[118.22132874 69.75516510]
[127.76043701 58.17909622]
[130.80825806 49.55462265]
[137.54640198 46.49553680]
[147.26982117 35.07384491]
[156.99325562 23.65215683]
[166.71667480 12.23046780]
[176.44009399 0.80877858]
[179.00077820 -20.45886803]
[198.70086670 -26.59076691]
[207.86404419 -38.46663284]
[217.02722168 -50.34249496]
[226.19039917 -62.21836090]
[235.35357666 -74.09422302]
[244.51675415 -85.97008514]
[246.28370667 -106.04277802]
[264.45281982 -112.63764191]
[273.23065186 -124.80110168]
[282.00848389 -136.96455383]
[290.78631592 -149.12800598]
[299.56414795 -161.29147339]
[300.99880981 -179.64389038]
[317.26574707 -186.21415710]
[325.84750366 -198.51675415]
[334.42926025 -210.81933594]
[342.81271362 -223.25788879]
[350.99572754 -235.82920837]
[359.17877197 -248.40052795]
[367.36178589 -260.97183228]
[375.54479980 -273.54318237]
[383.62680054 -286.17965698]
[391.60729980 -298.88052368]
[399.58776855 -311.58139038]
[399.65991211 -327.98037720]
[414.03024292 -335.88137817]
[427.91580200 -327.15649414]
[427.03231812 -310.78115845]
[412.28863525 -303.60092163]
[404.30816650 -290.90005493]
[396.32766724 -278.19918823]
[395.42984009 -270.85382080]
[388.11611938 -265.36013794]
[379.93310547 -252.78881836]
[371.75009155 -240.21749878]
[363.56704712 -227.64617920]
[355.38403320 -215.07485962]
[355.48138428 -210.28865051]
[352.56460571 -205.39295959]
[346.73184204 -202.23757935]
[338.15008545 -189.93499756]
[329.56832886 -177.63241577]
[331.37966919 -165.66435242]
[324.32012939 -155.34225464]
[311.72760010 -152.51364136]
[302.94976807 -140.35018921]
[294.17193604 -128.18672180]
[285.39410400 -116.02326965]
[276.61627197 -103.85980988]
[279.14956665 -93.94485474]
[275.72909546 -84.06711578]
[267.25820923 -77.57438660]
[256.39263916 -76.80690765]
[247.22944641 -64.93104553]
[238.06626892 -53.05517960]
[228.90309143 -41.17931747]
[219.73989868 -29.30345154]
[210.57672119 -17.42758751]
[213.13609314 -8.90307617]
[211.45320129 -0.02301611]
[205.78218079 7.19052172]
[197.29956055 11.03585625]
[187.86178589 10.53220463]
[178.13836670 21.95389366]
[168.41493225 33.37558365]
[158.69151306 44.79727173]
[148.96807861 56.21896362]
[139.33650208 67.71820831]
[129.79739380 79.29428101]
[120.25828552 90.87034607]
[122.53353119 105.69678497]
[135.10485840 113.87980652]
[147.67617798 122.06282806]
[160.24749756 130.24584961]
[176.82057190 133.81929016]
[177.97467041 150.73390198]
[162.04057312 156.52534485]
[152.06446838 142.81716919]
[139.49314880 134.63415527]
[126.92182922 126.45112610]
[114.35050964 118.26810455]
[100.19226074 123.22229004]
[95.46563721 137.45812988]
[90.73901367 151.69396973]
[86.01239014 165.92979431]
[92.84378815 179.92871094]
[87.84752655 194.29855347]
[74.45959473 200.72497559]
[69.73297119 214.96081543]
[65.00634766 229.19664001]
[60.27972794 243.43247986]
[55.55310440 257.66830444]
[62.93955612 268.94021606]
[62.48794174 282.21435547]
[54.58740234 292.64767456]
[42.30381775 296.56295776]
[45.04901886 312.14416504]
[33.54235840 321.60174561]
[28.58817101 335.76000977]
[23.63398552 349.91824341]
[18.67980003 364.07650757]
[21.42499924 379.65771484]
[9.91833973 389.11532593]
[22.65486526 381.19186401]
[37.65449142 381.29760742]
[50.27804565 389.39984131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[10 21]
[11 20]
[12 19]
[13 18]
[25 192]
[27 190]
[28 189]
[29 188]
[30 187]
[32 185]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[42 174]
[43 173]
[44 172]
[45 171]
[47 58]
[48 57]
[49 56]
[50 55]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[80 159]
[81 158]
[82 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[97 138]
[98 137]
[99 136]
[100 135]
[101 134]
[103 131]
[104 130]
[105 129]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 120]
[112 119]
[113 118]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
