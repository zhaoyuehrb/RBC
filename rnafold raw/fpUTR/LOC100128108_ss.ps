%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUCAAUUUUCCAGACAUCUUUAAUUAGCAAUAUGUUUAAGUAGUUACAAGCCUUUCCUUCUUUUCUUGUGACAGUUUGGGUUGAAUUUCUAUCGUUUGCAGCCUGUCACUGUAAGGCACAAACAUGAUCACGCAAGAUGCGAUAGUAGAUUUAAGCCAGUUGUUUUUAAGUUUGUGUUUAAGGAGAAACUAACA\
) } def
/len { sequence length } bind def

/coor [
[92.25405884 555.98132324]
[94.60736084 540.52185059]
[106.38135529 530.23071289]
[105.90544128 515.23828125]
[105.42951965 500.24584961]
[103.11245728 497.57476807]
[101.97959900 493.64492798]
[102.61011505 489.02777100]
[105.30485535 484.53240967]
[105.54284668 469.53430176]
[105.78083801 454.53619385]
[106.01882935 439.53805542]
[106.25681305 424.53994751]
[106.49480438 409.54183960]
[106.49480438 394.54183960]
[106.25681305 379.54373169]
[106.01882935 364.54562378]
[105.78083801 349.54751587]
[105.54284668 334.54940796]
[105.30485535 319.55130005]
[94.17960358 303.74377441]
[104.22184753 286.27279663]
[103.50811768 271.28979492]
[102.79438782 256.30679321]
[102.08065796 241.32377625]
[101.36692810 226.34077454]
[92.62646484 217.96862793]
[91.91520691 205.48468018]
[100.15972900 195.55639648]
[99.68380737 180.56394958]
[99.20789337 165.57150269]
[98.73197174 150.57905579]
[98.25605774 135.58660889]
[97.78013611 120.59416199]
[91.01003265 133.97944641]
[87.09256744 148.45886230]
[76.71138763 159.28619385]
[62.40953445 163.80912781]
[47.69046021 160.91970825]
[36.15982437 151.32571411]
[30.64223671 137.37738037]
[32.48931503 122.49153900]
[41.24858856 110.31470490]
[54.77433777 103.82979584]
[69.75440216 104.62574768]
[84.58386230 102.37031555]
[70.48847961 97.24002075]
[56.39308548 92.10971832]
[42.29769897 86.97941589]
[28.20230865 81.84911346]
[14.10691929 76.71881104]
[0.01152956 71.58850861]
[-14.08385944 66.45820618]
[-24.32763672 77.68911743]
[-38.09165955 84.14048767]
[-53.27701569 84.82851410]
[-67.56804657 79.64827728]
[-78.78548431 69.38973999]
[-85.21873474 55.61724091]
[-85.88678741 40.43099213]
[-80.68775940 26.14678574]
[-70.41446686 14.94285870]
[-56.63352203 8.52772808]
[-41.44640732 7.87965584]
[-27.16905022 13.09746742]
[-15.97864723 23.38548470]
[-9.58165169 37.17486191]
[-8.95355797 52.36281586]
[5.14183187 57.49311829]
[19.23722076 62.62342072]
[33.33261108 67.75372314]
[47.42800140 72.88402557]
[61.52338791 78.01432800]
[75.61878204 83.14463043]
[89.71416473 88.27493286]
[81.18096161 75.93862152]
[86.29566193 61.83756256]
[100.75328064 57.84041977]
[112.38504791 67.31153107]
[111.40061951 82.27926636]
[120.85890961 70.63706970]
[130.31719971 58.99487686]
[133.01365662 43.40514374]
[147.04414368 38.40569305]
[156.50244141 26.76349640]
[165.96072388 15.12129879]
[175.41902161 3.47910213]
[184.87730408 -8.16309452]
[194.33560181 -19.80529213]
[203.79388428 -31.44748878]
[213.25218201 -43.08968735]
[222.61781311 -54.80655289]
[231.89019775 -66.59735107]
[241.16258240 -78.38814545]
[250.43496704 -90.17893982]
[259.70733643 -101.96973419]
[268.97973633 -113.76053619]
[278.25210571 -125.55133057]
[287.24127197 -137.55944824]
[295.94213867 -149.77809143]
[304.64297485 -161.99671936]
[313.34384155 -174.21536255]
[303.68902588 -197.01535034]
[320.84130859 -222.64289856]
[326.85525513 -236.38453674]
[332.86923218 -250.12615967]
[338.88317871 -263.86779785]
[330.25222778 -276.65490723]
[329.92749023 -292.07885742]
[338.01260376 -305.21789551]
[351.92761230 -311.87942505]
[367.23229980 -309.93777466]
[379.04299927 -300.01251221]
[383.59094238 -285.27075195]
[379.42492676 -270.41653442]
[367.87429810 -260.18978882]
[352.62481689 -257.85382080]
[346.61083984 -244.11219788]
[340.59689331 -230.37057495]
[334.58294678 -216.62895203]
[346.73269653 -207.83105469]
[358.88137817 -199.03392029]
[370.06036377 -209.03546143]
[374.66058350 -224.77616882]
[390.65451050 -228.39920044]
[401.58895874 -216.17750549]
[396.21548462 -200.68370056]
[380.06188965 -197.85649109]
[368.88293457 -187.85494995]
[365.00778198 -177.27745056]
[358.39840698 -169.02795410]
[350.07720947 -163.70436096]
[341.15307617 -161.51441956]
[332.68530273 -162.28480530]
[325.56246948 -165.51451111]
[316.86163330 -153.29586792]
[308.16076660 -141.07723999]
[299.45993042 -128.85859680]
[299.68612671 -125.32981873]
[298.20767212 -121.51654816]
[294.90972900 -118.22422791]
[290.04290771 -116.27894592]
[280.77053833 -104.48815155]
[271.49813843 -92.69734955]
[262.22576904 -80.90655518]
[252.95336914 -69.11576080]
[243.68098450 -57.32496262]
[234.40859985 -45.53416443]
[232.74324036 -38.32532501]
[224.89437866 -33.63139725]
[215.43608093 -21.98919868]
[205.97779846 -10.34700203]
[196.51950073 1.29519522]
[187.06121826 12.93739223]
[177.60292053 24.57958984]
[168.14463806 36.22178650]
[158.68634033 47.86398315]
[156.66641235 62.62098694]
[141.95939636 68.45316315]
[132.50109863 80.09535980]
[123.04281616 91.73755646]
[112.77258301 120.11824036]
[113.24850464 135.11068726]
[113.72441864 150.10313416]
[114.20034027 165.09558105]
[114.67626190 180.08804321]
[115.15217590 195.08049011]
[125.22223663 210.49131775]
[116.34993744 225.62704468]
[117.06366730 240.61004639]
[117.77739716 255.59306335]
[118.49112701 270.57608032]
[119.20485687 285.55908203]
[127.67247009 292.40750122]
[130.90095520 302.57809448]
[128.05285645 312.63354492]
[120.30297089 319.31329346]
[120.54096222 334.31140137]
[120.77894592 349.30950928]
[121.01693726 364.30764771]
[121.25492859 379.30575562]
[121.49291992 394.30386353]
[124.56385803 400.17831421]
[124.24671173 405.86596680]
[121.49291992 409.77984619]
[121.25492859 424.77795410]
[121.01693726 439.77606201]
[120.77894592 454.77416992]
[120.54096222 469.77227783]
[120.30297089 484.77038574]
[120.42196655 499.76992798]
[120.89788818 514.76239014]
[121.37380219 529.75482178]
[133.77679443 539.27844238]
[137.10586548 554.55755615]
[129.78913879 568.37780762]
[115.28132629 574.21374512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 193]
[4 192]
[5 191]
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[14 185]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[80 161]
[81 160]
[82 159]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
[92 148]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
[99 138]
[100 137]
[101 136]
[102 135]
[104 120]
[105 119]
[106 118]
[107 117]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
