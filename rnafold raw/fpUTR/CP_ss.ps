%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCCUAAUGCCUCCAACAAUAACUGUUGACUUUUUAUUUUCAGUCAGAGAAGCCUGGCAACCAAGAACUGUUUUUUUGGUGGUUUACGAGAACUUAACUGAAUUGGAAAAUAUUUGCUUUAAUGAAACAAUUUACUCUUGUGCAACACUAAAUUGUGUCAAUCAAGCAAAUAAGGAAGAAAGUCUUAUUUAUAAAAUUGCCUGCUCCUGAUUUUACUUCAUUUCUUCUCAGGCUCCAAGAAGGGGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[84.41117859 318.28402710]
[85.54288483 303.02041626]
[93.64814758 290.03723145]
[106.86444855 282.31790161]
[106.12264252 267.33624268]
[105.38083649 252.35459900]
[104.63903046 237.37295532]
[87.57161713 227.75555420]
[79.76231384 209.63066101]
[84.56526184 190.33877563]
[100.18743896 177.80952454]
[98.70564270 162.88288879]
[97.22384644 147.95626831]
[95.74205017 133.02963257]
[87.67546844 136.03984070]
[78.29574585 136.97535706]
[70.21453094 149.61236572]
[62.13331604 162.24937439]
[54.05210114 174.88638306]
[45.97088623 187.52339172]
[47.99813843 203.43785095]
[36.71679306 214.84445190]
[20.78092575 212.99304199]
[12.41517353 199.30386353]
[18.03702545 184.27807617]
[33.33387756 179.44218445]
[41.41509247 166.80517578]
[49.49630737 154.16816711]
[57.57752228 141.53115845]
[65.65873718 128.89414978]
[63.02590561 121.87145233]
[49.87546921 129.08712769]
[39.14856339 139.57205200]
[24.50701714 136.31242371]
[19.24124527 122.26708221]
[28.13108826 110.18524933]
[43.10728455 111.03397369]
[57.76024628 107.82607269]
[55.12741852 100.80337524]
[40.73027802 96.59357452]
[26.33314133 92.38377380]
[11.93600464 88.17396545]
[-2.46113229 83.96416473]
[-16.85826874 79.75436401]
[-31.25540733 75.54456329]
[-45.65254593 71.33475494]
[-60.07543945 67.21407318]
[-74.52354431 63.18265533]
[-88.97164917 59.15124130]
[-102.62318420 66.65280151]
[-117.21818542 62.35855484]
[-124.28564453 49.29767227]
[-138.73374939 45.26625824]
[-153.18185425 41.23484421]
[-170.92102051 46.22192764]
[-182.68768311 33.18650055]
[-197.18455505 29.33408928]
[-211.77226257 25.84142876]
[-226.44189453 22.71065712]
[-241.11154175 19.57988358]
[-256.22268677 24.26642990]
[-267.05474854 14.04312515]
[-281.72436523 10.91235256]
[-296.39401245 7.78157997]
[-311.06365967 4.65080738]
[-325.73327637 1.52003503]
[-340.40292358 -1.61073744]
[-355.07257080 -4.74150991]
[-369.74218750 -7.87228251]
[-383.93218994 -0.38737205]
[-398.57312012 -6.94654274]
[-402.43371582 -22.51815987]
[-392.55245972 -35.15701294]
[-376.50942993 -35.16765213]
[-366.61141968 -22.54191971]
[-351.94177246 -19.41114807]
[-337.27215576 -16.28037453]
[-322.60250854 -13.14960289]
[-307.93286133 -10.01883030]
[-293.26324463 -6.88805723]
[-278.59359741 -3.75728488]
[-263.92395020 -0.62651247]
[-249.86207581 -5.53699255]
[-237.98075867 4.91024685]
[-223.31112671 8.04101944]
[-208.64149475 11.17179203]
[-206.23352051 9.78814793]
[-203.13973999 9.26160431]
[-199.67910767 9.85537052]
[-196.25898743 11.71416092]
[-193.33213806 14.83722973]
[-178.83528137 18.68964005]
[-168.23548889 12.89708900]
[-156.13943481 15.96766376]
[-149.15043640 26.78673935]
[-134.70233154 30.81815529]
[-120.25422668 34.84956741]
[-107.44556427 27.33466911]
[-92.73570251 31.21727943]
[-84.94023132 44.70313644]
[-70.49212646 48.73455048]
[-56.04402542 52.76596451]
[-48.77680206 51.53987885]
[-41.44274139 56.93761826]
[-27.04560471 61.14742279]
[-12.64846706 65.35722351]
[1.74867046 69.56703186]
[16.14580727 73.77683258]
[30.54294586 77.98663330]
[44.94008255 82.19643402]
[59.33721924 86.40624237]
[80.62717438 67.20583344]
[105.99517059 67.24111176]
[111.94898224 53.47332382]
[117.90279388 39.70552826]
[123.85661316 25.93773651]
[129.81042480 12.16994476]
[135.76423645 -1.59784830]
[141.71804810 -15.36564064]
[147.67185974 -29.13343430]
[153.62567139 -42.90122604]
[145.89416504 -56.22526169]
[147.47230530 -71.36998749]
[157.54646301 -82.54924011]
[172.09748840 -85.61606598]
[178.05130005 -99.38385773]
[184.00511169 -113.15164948]
[182.38099670 -128.88928223]
[194.53440857 -137.49993896]
[200.48822021 -151.26773071]
[206.44203186 -165.03552246]
[212.39585876 -178.80331421]
[218.34967041 -192.57110596]
[224.30348206 -206.33889771]
[230.25729370 -220.10670471]
[236.21110535 -233.87449646]
[221.54988098 -230.70451355]
[209.85028076 -240.09170532]
[209.76757812 -255.09147644]
[221.36296082 -264.60711670]
[236.05822754 -261.59899902]
[242.98199463 -248.29113770]
[249.77532959 -261.66464233]
[256.56863403 -275.03814697]
[258.35128784 -291.89813232]
[275.04583740 -294.85247803]
[282.50622559 -279.62817383]
[269.94216919 -268.24484253]
[263.14883423 -254.87132263]
[256.35549927 -241.49781799]
[249.97889709 -227.92068481]
[244.02508545 -214.15287781]
[238.07127380 -200.38508606]
[232.11746216 -186.61729431]
[226.16365051 -172.84950256]
[220.20983887 -159.08171082]
[214.25601196 -145.31391907]
[208.30220032 -131.54612732]
[210.35218811 -116.79327393]
[197.77290344 -107.19783783]
[191.81909180 -93.43004608]
[185.86528015 -79.66225433]
[193.59681702 -66.95944214]
[192.35115051 -51.96236420]
[182.39712524 -40.43973541]
[167.39346313 -36.94741440]
[161.43965149 -23.17962074]
[155.48583984 -9.41182804]
[149.53202820 4.35596466]
[143.57821655 18.12375641]
[137.62440491 31.89155006]
[131.67059326 45.65934372]
[125.71677399 59.42713547]
[119.76296234 73.19493103]
[130.31672668 86.21656799]
[133.19088745 102.72971344]
[147.47949219 107.29433441]
[161.76809692 111.85895538]
[176.05670166 116.42357635]
[190.34530640 120.98818970]
[204.63392639 125.55281067]
[218.92253113 130.11743164]
[233.21113586 134.68205261]
[239.65069580 125.65448761]
[248.17611694 118.58774567]
[258.21331787 113.94735718]
[269.08908081 112.03583527]
[280.07614136 112.97292328]
[290.44195557 116.68817139]
[299.49728394 122.92614746]
[306.64233398 131.26397705]
[311.40621948 141.14002991]
[313.47814941 151.89169312]
[312.72766113 162.79991150]
[326.70684814 168.23887634]
[340.68603516 173.67785645]
[354.66522217 179.11682129]
[368.64440918 184.55580139]
[382.62359619 189.99476624]
[396.60278320 195.43373108]
[410.58193970 200.87271118]
[423.56054688 192.36766052]
[439.05792236 193.14916992]
[451.11505127 202.91674805]
[455.09570312 217.91453552]
[449.46923828 232.37561035]
[436.39913940 240.73937988]
[420.91116333 239.78979492]
[408.96069336 229.89199829]
[405.14297485 214.85189819]
[391.16378784 209.41291809]
[377.18460083 203.97395325]
[363.20544434 198.53497314]
[349.22625732 193.09600830]
[335.24707031 187.65702820]
[321.26788330 182.21806335]
[307.28869629 176.77908325]
[293.99749756 190.46209717]
[276.00299072 196.94058228]
[256.94158936 194.85917664]
[240.68553162 184.59693909]
[230.55645752 168.19935608]
[228.64651489 148.97065735]
[214.35791016 144.40603638]
[200.06930542 139.84141541]
[185.78070068 135.27679443]
[171.49209595 130.71217346]
[157.20347595 126.14756012]
[142.91487122 121.58293915]
[128.62626648 117.01831818]
[120.94755554 125.88989258]
[110.66867828 131.54783630]
[112.15047455 146.47447205]
[113.63227081 161.40109253]
[115.11406708 176.32772827]
[125.12189484 179.66020203]
[133.42970276 186.09751892]
[139.11404419 194.89222717]
[141.55377197 205.03662109]
[140.49769592 215.37835693]
[136.09034729 224.75120544]
[128.85267639 232.10665894]
[119.62068176 236.63114929]
[120.36248779 251.61279297]
[121.10429382 266.59445190]
[121.84609985 281.57608032]
[135.76031494 287.95205688]
[145.10850525 300.07107544]
[147.74250793 315.14822388]
[143.05705261 329.71890259]
[132.12882996 340.43490601]
[117.46907043 344.83374023]
[102.44645691 341.90460205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 246]
[5 245]
[6 244]
[7 243]
[11 235]
[12 234]
[13 233]
[14 232]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[39 111]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[47 102]
[48 101]
[49 100]
[52 97]
[53 96]
[54 95]
[56 92]
[57 91]
[58 86]
[59 85]
[60 84]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[113 174]
[114 173]
[115 172]
[116 171]
[117 170]
[118 169]
[119 168]
[120 167]
[121 166]
[125 162]
[126 161]
[127 160]
[129 158]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
[135 152]
[136 151]
[142 150]
[143 149]
[144 148]
[176 230]
[177 229]
[178 228]
[179 227]
[180 226]
[181 225]
[182 224]
[183 223]
[194 217]
[195 216]
[196 215]
[197 214]
[198 213]
[199 212]
[200 211]
[201 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
