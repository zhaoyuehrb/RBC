%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGGCCAAUGAACGGCGGCGGGAGGUGAAAUCCGGUUCUAACCGGUCCGGGGCUCCCAGCGCUAUAAAAACUUUAUAAACCCCCCGGAGCCCGAGCAGUGUGAAGAAGAGGCGAGAACGACCCCCGGACCGACCAAAGCCCGCGCGCCGCUGCAUCCCGCGUCCAGCACCUACGUCCCGCUGCCGUCGCCGCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[82.96503448 481.57421875]
[93.79357910 470.06256104]
[93.09741974 455.07870483]
[84.77777100 442.72424316]
[91.86625671 428.57986450]
[91.05417633 413.60183716]
[90.12622070 398.63058472]
[89.19826508 383.65930176]
[87.18208313 381.70297241]
[85.82193756 378.82757568]
[85.47268677 375.27990723]
[86.39308167 371.43093872]
[88.70532990 367.73855591]
[88.70532990 352.73855591]
[85.55964661 346.04541016]
[88.82319641 337.50686646]
[89.05532074 322.50866699]
[89.28745270 307.51046753]
[89.51957703 292.51223755]
[89.75170898 277.51403809]
[89.98383331 262.51583862]
[90.21596527 247.51763916]
[90.44808960 232.51943970]
[90.68022156 217.52122498]
[90.91234589 202.52302551]
[91.14447784 187.52482605]
[83.60505676 174.67933655]
[91.55499268 161.00054932]
[91.78711700 146.00234985]
[92.01924896 131.00415039]
[82.45195770 126.77715302]
[74.75769806 119.69202423]
[69.75774384 110.50502014]
[67.98577118 100.19673157]
[69.63092041 89.86745453]
[74.51758575 80.61968994]
[82.12419128 73.44053650]
[76.89705658 59.38076782]
[71.66992950 45.32099915]
[66.44280243 31.26123047]
[51.29245377 29.76845932]
[38.34539413 21.87791443]
[30.14172173 9.20037842]
[28.26361847 -5.72053766]
[33.03044891 -19.91866302]
[43.44596863 -30.59492111]
[38.21883774 -44.65468979]
[32.99170685 -58.71445847]
[27.76457596 -72.77423096]
[22.53744698 -86.83399963]
[17.31031609 -100.89376831]
[12.08318615 -114.95353699]
[6.85605621 -129.01330566]
[1.62892592 -143.07307434]
[-3.59820414 -157.13284302]
[-15.65953445 -167.37173462]
[-12.84236431 -181.99749756]
[-18.06949425 -196.05726624]
[-34.39696121 -198.64672852]
[-47.11894989 -209.05574036]
[-52.82456970 -224.37124634]
[-50.04590607 -240.38182068]
[-39.63430023 -252.73559570]
[-45.07838058 -266.71279907]
[-50.52246475 -280.69000244]
[-55.96654510 -294.66717529]
[-67.99243927 -294.95336914]
[-79.18421936 -299.26803589]
[-88.23762512 -307.08331299]
[-94.10607910 -317.46490479]
[-96.12160492 -329.18365479]
[-94.07084656 -340.86111450]
[-88.21733093 -351.13174438]
[-79.26790619 -358.80245972]
[-84.05742645 -373.01727295]
[-88.84695435 -387.23205566]
[-93.63647461 -401.44686890]
[-98.42599487 -415.66165161]
[-103.21552277 -429.87643433]
[-108.00504303 -444.09124756]
[-120.33027649 -446.22189331]
[-130.51950073 -453.35137939]
[-136.67248535 -464.07516479]
[-137.67378235 -476.32574463]
[-133.39436340 -487.77111816]
[-124.70465851 -496.25869751]
[-136.10946655 -507.22412109]
[-132.39289856 -521.64758301]
[-136.74021912 -536.00378418]
[-141.08755493 -550.35998535]
[-151.46490479 -563.76696777]
[-141.45463562 -577.45019531]
[-125.53503418 -571.61901855]
[-126.73133850 -554.70733643]
[-122.38401031 -540.35113525]
[-118.03668213 -525.99493408]
[-106.94281769 -516.05633545]
[-110.34844971 -500.60601807]
[-93.41868591 -495.59835815]
[-82.78651428 -481.30761719]
[-82.85688019 -463.33856201]
[-93.79024506 -448.88076782]
[-89.00072479 -434.66598511]
[-84.21119690 -420.45117188]
[-79.42167664 -406.23638916]
[-74.63215637 -392.02157593]
[-69.84262848 -377.80679321]
[-65.05310822 -363.59197998]
[-47.14909363 -360.84170532]
[-33.04988480 -349.33438110]
[-26.70867920 -332.18508911]
[-29.95985413 -314.10592651]
[-41.98935318 -300.11126709]
[-36.54526901 -286.13406372]
[-31.10118675 -272.15689087]
[-25.65710449 -258.17968750]
[-12.04734516 -257.00283813]
[-0.21628374 -250.04229736]
[7.49727201 -238.60791016]
[9.54005718 -224.90019226]
[5.45683241 -211.58703613]
[-4.00972557 -201.28439331]
[1.21740472 -187.22462463]
[12.90485573 -177.99137878]
[10.46156502 -162.35997009]
[15.68869495 -148.30020142]
[20.91582489 -134.24043274]
[26.14295578 -120.18066406]
[31.37008476 -106.12089539]
[36.59721756 -92.06112671]
[41.82434464 -78.00135803]
[47.05147552 -63.94158936]
[52.27860641 -49.88182068]
[57.50573730 -35.82205200]
[72.36605835 -34.54282379]
[85.25029755 -26.90699959]
[93.57563019 -14.38303089]
[95.64616394 0.57467830]
[90.99817657 15.00669575]
[80.50257111 26.03409958]
[85.72969818 40.09386826]
[90.95682526 54.15363693]
[96.18395996 68.21340942]
[120.34587860 75.28169250]
[131.92729187 97.63409424]
[146.72969055 100.06082153]
[156.49882507 88.29174805]
[170.75308228 83.02743530]
[185.62960815 85.58775330]
[197.15011597 95.18640900]
[202.28468323 109.16860199]
[217.08708191 111.59532928]
[231.88948059 114.02206421]
[242.82585144 103.01409912]
[258.14923096 100.56995392]
[271.96743774 107.62944794]
[278.96713257 121.47805786]
[276.45672607 136.79072571]
[265.40158081 147.67939758]
[250.05259705 149.95716858]
[236.31178284 142.74819946]
[229.46273804 128.82446289]
[214.66033936 126.39772797]
[199.85794067 123.97100067]
[190.52761841 135.58180237]
[176.54531860 140.99948120]
[161.63002014 138.67567444]
[149.80282593 129.13552856]
[144.30296326 114.86322021]
[129.50056458 112.43649292]
[125.74244690 119.03355408]
[120.53653717 124.56013489]
[114.17562103 128.70542908]
[107.01745605 131.23628235]
[106.78532410 146.23448181]
[106.55319977 161.23268127]
[114.07601166 175.15093994]
[106.14267731 187.75695801]
[105.91055298 202.75515747]
[105.67842102 217.75335693]
[105.44629669 232.75155640]
[105.21416473 247.74977112]
[104.98204041 262.74798584]
[104.74990845 277.74618530]
[104.51778412 292.74438477]
[104.28565216 307.74258423]
[104.05352783 322.74078369]
[103.82139587 337.73898315]
[103.70532990 352.73855591]
[103.70532990 367.73855591]
[104.16953278 382.73135376]
[105.09748840 397.70263672]
[106.02544403 412.67388916]
[109.68175507 421.05178833]
[106.85009766 427.88369751]
[115.21953583 441.30990601]
[108.08125305 454.38253784]
[108.77742004 469.36639404]
[120.62668610 479.82440186]
[121.52705383 495.60302734]
[110.94432831 507.34106445]
[95.15707397 508.07455444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[5 195]
[6 193]
[7 192]
[8 191]
[13 190]
[14 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[28 176]
[29 175]
[30 174]
[37 143]
[38 142]
[39 141]
[40 140]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[57 123]
[58 122]
[63 116]
[64 115]
[65 114]
[66 113]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[86 98]
[88 96]
[89 95]
[90 94]
[145 170]
[146 169]
[151 164]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
