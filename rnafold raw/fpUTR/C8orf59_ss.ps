%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCUCGUGAGCGGAAUCCUGACUGGUUCAUCCUCCCCGGAACUUCCUAGACGCCGUACGUGCCAGAUGGUGUUACCUGGAGCUUAAAAAGCUGCACGCAAGUGUUAAACUUCUGUAGGAGGAAUACUGUUGGCGUUCAAAAGCAUUGCUGUUUCAGUUAAGUAGUUCCUUAAUUACUUACAAUGUAGUAAGGCUACAUUGAAGGAAGAUAUAAAUUUCAGUCAAGACUACGACUGAGCAAAGACA\
) } def
/len { sequence length } bind def

/coor [
[544.02246094 344.81298828]
[539.73931885 330.43750000]
[542.89916992 315.77410889]
[552.72277832 304.43847656]
[566.78668213 299.22589111]
[552.61730957 294.30358887]
[538.44793701 289.38131714]
[525.19665527 296.08499146]
[510.75677490 291.29495239]
[503.81518555 277.35031128]
[489.64581299 272.42803955]
[475.47644043 267.50576782]
[461.30706787 262.58349609]
[447.13769531 257.66122437]
[432.96832275 252.73895264]
[437.19570923 267.13092041]
[428.68588257 279.48336792]
[413.73220825 280.66110229]
[403.39352417 269.79318237]
[405.31576538 254.91685486]
[418.07775879 247.03376770]
[404.24685669 241.22801208]
[390.41598511 235.42225647]
[376.58511353 229.61650085]
[362.75424194 223.81074524]
[355.38870239 224.11900330]
[348.78622437 217.84352112]
[335.02969360 211.86372375]
[321.27316284 205.88394165]
[310.07806396 212.23434448]
[297.07449341 210.96598816]
[287.02267456 202.31840515]
[283.73120117 189.27308655]
[270.05120850 183.12020874]
[256.37121582 176.96734619]
[242.69122314 170.81446838]
[229.01123047 164.66159058]
[215.33123779 158.50872803]
[197.98002625 161.20532227]
[187.35644531 146.15068054]
[173.59991455 140.17088318]
[159.84338379 134.19110107]
[146.08685303 128.21130371]
[132.33032227 122.23151398]
[119.71885681 137.05802917]
[100.42880249 144.71710205]
[78.51317596 142.31809998]
[59.18718719 129.23272705]
[47.59057617 107.50028992]
[32.64099121 106.27152252]
[17.69140244 105.04276276]
[2.74181628 103.81399536]
[-12.22834682 102.86836243]
[-27.21372414 102.20619202]
[-42.19910049 101.54402161]
[-57.18447876 100.88185883]
[-72.16985321 100.21968842]
[-87.15523529 99.55751801]
[-102.14060974 98.89534760]
[-110.82703400 101.63771820]
[-117.31052399 98.12911224]
[-128.93362427 108.83795166]
[-144.72103882 108.10800934]
[-155.30639648 96.37234497]
[-154.40957642 80.59352112]
[-142.56265259 70.13283539]
[-126.79418945 71.19642639]
[-116.45934296 83.15328217]
[-101.47843933 83.90997314]
[-86.49306488 84.57214355]
[-71.50769043 85.23430634]
[-56.52230835 85.89647675]
[-41.53693390 86.55864716]
[-26.55155563 87.22081757]
[-11.56617737 87.88298798]
[-8.74503613 85.80704498]
[-4.78585339 84.98101044]
[-0.28087166 85.92162323]
[3.97057962 88.86441040]
[18.92016602 90.09317780]
[33.86975479 91.32193756]
[48.81933975 92.55069733]
[54.36231613 78.61242676]
[42.65172195 69.23896027]
[30.94112396 59.86548996]
[19.23052788 50.49201965]
[7.51993132 41.11855316]
[-8.62412643 35.94112778]
[-8.11815739 18.99473000]
[8.30603313 14.78969765]
[16.89340019 29.40795517]
[28.60399628 38.78142548]
[40.31459427 48.15489578]
[52.02518845 57.52836227]
[63.73578644 66.90183258]
[74.83216095 56.80874634]
[66.60710907 44.26488495]
[58.38204575 31.72102547]
[50.15699005 19.17716599]
[35.27696609 12.28391361]
[34.07637405 -4.07122707]
[47.79028320 -13.06348991]
[62.31099701 -5.44240522]
[62.70085144 10.95210743]
[70.92591095 23.49596786]
[79.15096283 36.03982544]
[87.37602234 48.58368683]
[104.92889404 49.58147430]
[120.41449738 56.14424133]
[132.21272278 67.03614807]
[139.27694702 80.60334778]
[141.21977234 95.00892639]
[138.31011963 108.47499084]
[152.06663513 114.45478058]
[165.82316589 120.43457031]
[179.57969666 126.41436005]
[193.33622742 132.39414978]
[205.58406067 128.40231323]
[216.91007996 133.64712524]
[221.48411560 144.82873535]
[235.16410828 150.98159790]
[248.84410095 157.13447571]
[262.52407837 163.28735352]
[276.20407104 169.44023132]
[289.88406372 175.59309387]
[306.13635254 169.08950806]
[321.75109863 176.22319031]
[327.25296021 192.12741089]
[341.00949097 198.10719299]
[354.76599121 204.08699036]
[368.55999756 209.97987366]
[382.39086914 215.78562927]
[396.22174072 221.59138489]
[410.05261230 227.39714050]
[423.88351440 233.20289612]
[437.89059448 238.56958008]
[452.05996704 243.49185181]
[466.22933960 248.41412354]
[480.39871216 253.33639526]
[494.56808472 258.25866699]
[508.73748779 263.18093872]
[522.82916260 256.54302979]
[537.12878418 261.73675537]
[543.37017822 275.21194458]
[557.53961182 280.13421631]
[571.70898438 285.05648804]
[583.80059814 283.26531982]
[591.71057129 290.75546265]
[606.34643555 294.04055786]
[620.98223877 297.32562256]
[635.61810303 300.61068726]
[650.25396729 303.89578247]
[636.32440186 298.33099365]
[626.14324951 287.31536865]
[621.69073486 272.99142456]
[623.83294678 258.14517212]
[632.15313721 245.66421509]
[645.03308105 237.97610474]
[659.96765137 236.57617188]
[674.05200195 241.73669434]
[684.54583740 252.45252991]
[698.44885254 246.82173157]
[712.35192871 241.19093323]
[726.25494385 235.56015015]
[740.15795898 229.92935181]
[754.06097412 224.29855347]
[767.96398926 218.66775513]
[781.86706543 213.03697205]
[795.77008057 207.40617371]
[805.42333984 194.14924622]
[821.70007324 196.14962769]
[827.85607910 211.34947205]
[817.55865479 224.11250305]
[801.40087891 221.30918884]
[787.49786377 226.93998718]
[773.59478760 232.57078552]
[759.69177246 238.20158386]
[745.78875732 243.83238220]
[731.88574219 249.46316528]
[717.98272705 255.09396362]
[704.07965088 260.72476196]
[690.17663574 266.35556030]
[691.87628174 281.25894165]
[706.69012451 283.61480713]
[721.50396729 285.97067261]
[736.31781006 288.32653809]
[751.13165283 290.68240356]
[765.94549561 293.03826904]
[780.75933838 295.39413452]
[795.57318115 297.75000000]
[810.38702393 300.10586548]
[826.97918701 296.62222290]
[834.91986084 311.60159302]
[822.72406006 323.37866211]
[808.03112793 314.91970825]
[793.21728516 312.56384277]
[778.40344238 310.20797729]
[763.58959961 307.85211182]
[748.77575684 305.49624634]
[733.96191406 303.14038086]
[719.14807129 300.78451538]
[704.33422852 298.42864990]
[689.52038574 296.07278442]
[685.17346191 302.18460083]
[697.39709473 310.87844849]
[709.62072754 319.57229614]
[721.84436035 328.26614380]
[734.06799316 336.95999146]
[746.29162598 345.65383911]
[758.51525879 354.34768677]
[772.82714844 358.83874512]
[772.97851562 373.83798218]
[758.76013184 378.61691284]
[749.82141113 366.57131958]
[737.59777832 357.87747192]
[725.37414551 349.18362427]
[713.15051270 340.48977661]
[700.92687988 331.79592896]
[688.70324707 323.10208130]
[676.47961426 314.40823364]
[672.13269043 320.52005005]
[679.21929932 333.74050903]
[686.30590820 346.96093750]
[693.39251709 360.18139648]
[700.47906494 373.40182495]
[715.87005615 375.37619019]
[727.13800049 386.04452515]
[729.95013428 401.30465698]
[723.22515869 415.28872681]
[709.54901123 422.61959839]
[694.18035889 420.47842407]
[683.02880859 409.68847656]
[680.38238525 394.39874268]
[687.25866699 380.48843384]
[680.17205811 367.26797485]
[673.08544922 354.04754639]
[665.99884033 340.82708740]
[658.91229248 327.60665894]
[646.96887207 318.53161621]
[632.33306885 315.24655151]
[617.69720459 311.96148682]
[603.06134033 308.67639160]
[588.42547607 305.39132690]
[597.63049316 317.23480225]
[600.00366211 332.04589844]
[594.95983887 346.17245483]
[583.74273682 356.13119507]
[569.11822510 359.46646118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 146]
[6 145]
[7 144]
[10 141]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[27 130]
[28 129]
[29 128]
[33 125]
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[40 117]
[41 116]
[42 115]
[43 114]
[44 113]
[49 82]
[50 81]
[51 80]
[52 79]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[61 68]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[96 107]
[97 106]
[98 105]
[99 104]
[148 243]
[149 242]
[150 241]
[151 240]
[152 239]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
[190 196]
[191 195]
[221 238]
[222 237]
[223 236]
[224 235]
[225 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
