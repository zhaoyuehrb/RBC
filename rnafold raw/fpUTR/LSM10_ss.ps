%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUGGGGAUUGUAGUUUCUCCGUGACGCGGUGACUUGCAGAGCACUGACGCACUCUGCGCCCGGAGGACAGAGCGGCCCGGUCGCCGGCAUGGUUUCUCCGUCCUGCUGCAGCCGGCGGGAGGCAGCCAGUCCAGGCGCCCGCUAGCUUCGGCGGCGACCCAGACGGGGAAAGCGGAAGGAAUGUCGCGUGCAAGCAGGCAGCUGGUGUGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[-161.60252380 286.42486572]
[-167.12591553 300.37091064]
[-178.94334412 309.60934448]
[-193.81018066 311.60357666]
[-207.64343262 305.80700684]
[-208.87327576 290.85751343]
[-214.96116638 304.56652832]
[-221.04904175 318.27557373]
[-227.13691711 331.98461914]
[-233.22480774 345.69366455]
[-225.33709717 359.05642700]
[-226.84375000 374.50018311]
[-237.16543579 386.08648682]
[-252.33325195 389.36016846]
[-266.51486206 383.06240845]
[-274.25714111 369.61486816]
[-272.58303833 354.18835449]
[-262.13629150 342.71472168]
[-246.93383789 339.60577393]
[-240.84596252 325.89672852]
[-234.75807190 312.18771362]
[-228.67019653 298.47866821]
[-222.58232117 284.76962280]
[-233.26506042 274.23971558]
[-246.88494873 280.52453613]
[-260.50482178 286.80932617]
[-266.98153687 293.24304199]
[-274.36657715 293.08499146]
[-288.07562256 299.17288208]
[-301.74041748 305.35937500]
[-315.36032104 311.64416504]
[-328.98019409 317.92898560]
[-342.60006714 324.21377563]
[-356.21997070 330.49859619]
[-362.69665527 336.93228149]
[-370.08169556 336.77423096]
[-383.79074097 342.86212158]
[-397.49978638 348.95001221]
[-409.52175903 360.90441895]
[-424.33700562 352.66156006]
[-420.51757812 336.14346313]
[-403.58764648 335.24096680]
[-389.87863159 329.15307617]
[-376.16958618 323.06521606]
[-362.50476074 316.87869263]
[-348.88488770 310.59390259]
[-335.26498413 304.30908203]
[-321.64511108 298.02429199]
[-308.02523804 291.73947144]
[-303.27136230 286.08578491]
[-294.16348267 285.46383667]
[-280.45446777 279.37594604]
[-266.78964233 273.18945312]
[-253.16975403 266.90463257]
[-239.54986572 260.61984253]
[-227.40191650 251.82055664]
[-217.18424988 240.83879089]
[-206.96658325 229.85702515]
[-196.74890137 218.87525940]
[-186.53123474 207.89349365]
[-176.31355286 196.91172791]
[-166.09588623 185.92996216]
[-155.87820435 174.94819641]
[-155.77012634 159.94859314]
[-165.82849121 148.82072449]
[-175.88685608 137.69285583]
[-185.94520569 126.56499481]
[-196.00357056 115.43712616]
[-206.06192017 104.30926514]
[-216.12028503 93.18139648]
[-226.33796692 82.19963074]
[-236.71282959 71.36624908]
[-251.99363708 73.31631470]
[-265.33670044 65.98038483]
[-271.72601318 52.35538101]
[-268.90103149 37.75546646]
[-279.27590942 26.92208481]
[-289.65075684 16.08870125]
[-300.02563477 5.25531912]
[-315.82965088 5.16433001]
[-326.88088989 -6.13372231]
[-326.62280273 -21.93590355]
[-315.20855713 -32.86706161]
[-299.40997314 -32.44193268]
[-288.60009766 -20.91273689]
[-289.19226074 -5.11954546]
[-278.81738281 5.71383762]
[-268.44253540 16.54722023]
[-258.06765747 27.38060379]
[-243.35929871 25.18925858]
[-230.02316284 32.16146851]
[-223.27076721 45.80912399]
[-225.87944031 60.99138260]
[-215.50457764 71.82476807]
[-210.83882141 72.82205200]
[-206.74822998 76.75771332]
[-204.99241638 83.12303925]
[-194.93406677 94.25090027]
[-184.87570190 105.37876892]
[-174.81733704 116.50663757]
[-164.75898743 127.63449860]
[-154.70062256 138.76235962]
[-144.64225769 149.89022827]
[-120.42037964 140.37355042]
[-100.39263916 153.43319702]
[-86.07430267 148.96272278]
[-71.75596619 144.49223328]
[-57.43762589 140.02175903]
[-43.11928940 135.55126953]
[-28.80095100 131.08078003]
[-14.51519775 126.50724792]
[-0.26276883 121.83089447]
[13.98966026 117.15454865]
[20.46329308 103.78937531]
[34.85066605 98.84386444]
[48.82538986 105.72462463]
[63.07781601 101.04827118]
[77.33024597 96.37191772]
[91.58267212 91.69556427]
[103.91797638 83.16091156]
[106.53724670 67.55802917]
[120.54282379 62.48920059]
[123.48011780 53.84555817]
[130.16404724 50.70090866]
[139.73205566 39.14871979]
[149.30007935 27.59653664]
[152.36163330 18.99612045]
[159.09016418 15.94811344]
[168.82366943 4.53500795]
[178.55717468 -6.87809801]
[177.05613708 -22.61094475]
[187.18383789 -34.74376678]
[202.93167114 -36.07837677]
[214.95674133 -25.82297516]
[216.12477112 -10.06190777]
[205.74281311 1.85406244]
[189.97027588 2.85540152]
[180.23677063 14.26850700]
[170.50328064 25.68161392]
[160.85226440 37.16455841]
[151.28424072 48.71674347]
[141.71623230 60.26892853]
[132.23168945 71.88975525]
[130.28482056 86.65657043]
[115.60684204 92.56147003]
[118.70009613 99.39387512]
[133.62742615 100.86858368]
[124.88659668 113.05869293]
[127.97985077 119.89109802]
[142.96583557 120.53939056]
[157.95181274 121.18768311]
[172.93780518 121.83597565]
[187.05947876 114.70233917]
[199.44046021 122.98247528]
[214.42643738 123.63076782]
[221.31315613 111.45880890]
[232.71731567 103.47866821]
[246.38148499 101.20041656]
[259.63067627 105.01229858]
[269.89596558 114.11590576]
[275.21258545 126.69264984]
[290.18768311 127.55683136]
[305.16275024 128.42100525]
[319.56256104 120.57387543]
[333.41537476 129.35066223]
[332.47058105 145.72257996]
[317.70013428 152.84757996]
[304.29858398 143.39608765]
[289.32348633 142.53192139]
[274.34841919 141.66773987]
[265.80691528 155.38752747]
[251.42843628 162.97000122]
[235.09460449 162.26113892]
[221.26916504 153.35983276]
[213.77815247 138.61676025]
[198.79217529 137.96846008]
[185.74238586 145.14846802]
[172.28950500 136.82196045]
[157.30352783 136.17366028]
[142.31755066 135.52537537]
[127.33155823 134.87709045]
[115.00962830 133.65875244]
[105.09635162 128.95185852]
[98.44395447 121.88494873]
[95.49617767 113.76535034]
[96.25902557 105.94799042]
[82.00659943 110.62434387]
[67.75417328 115.30069733]
[53.50174332 119.97705078]
[46.31992340 133.79946899]
[31.79931641 138.33892822]
[18.66601181 131.40696716]
[4.41358376 136.08332825]
[-9.83884525 140.75967407]
[-17.01264191 146.40563965]
[-24.33046913 145.39912415]
[-38.64880753 149.86961365]
[-52.96714401 154.34008789]
[-67.28548431 158.81057739]
[-81.60382080 163.28105164]
[-95.92215729 167.75154114]
[-97.38936615 178.21971130]
[-103.17249298 187.45005798]
[-112.48613739 193.69641113]
[-123.85505676 195.65443420]
[-135.34600830 192.72569275]
[-144.89645386 185.16587830]
[-155.11412048 196.14764404]
[-165.33178711 207.12940979]
[-175.54946899 218.11117554]
[-185.76713562 229.09294128]
[-195.98481750 240.07470703]
[-206.20248413 251.05647278]
[-216.42015076 262.03823853]
[-202.18836975 257.29943848]
[-187.41177368 254.72023010]
[-173.35946655 259.96740723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[24 55]
[25 54]
[26 53]
[28 52]
[29 51]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[36 44]
[37 43]
[38 42]
[56 214]
[57 213]
[58 212]
[59 211]
[60 210]
[61 209]
[62 208]
[63 207]
[64 103]
[65 102]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 94]
[72 93]
[76 89]
[77 88]
[78 87]
[79 86]
[105 201]
[106 200]
[107 199]
[108 198]
[109 197]
[110 196]
[111 194]
[112 193]
[113 192]
[116 189]
[117 188]
[118 187]
[119 186]
[120 145]
[122 143]
[124 142]
[125 141]
[126 140]
[128 139]
[129 138]
[130 137]
[149 181]
[150 180]
[151 179]
[152 178]
[154 176]
[155 175]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
