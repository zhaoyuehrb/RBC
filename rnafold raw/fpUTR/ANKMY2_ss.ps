%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGACAGGCGGCAGGCGGUGACCGCCGCAGGGCCUGCGGAGACCGUCCGCCUGGCUCGCCCGAGCUCGCCCGCUGUCCGCCAGCCCGCGGGAGGGAGGAGAGAAGCGAAGCGUUUCCGCGGUUGGCUACUCAGUGUCUUGGUCUCAAGUUGCCUCAUUGCGGCUGGCGUUCCCAAUACAGACGCAUCGUUUCUUUUUUAAUACUCCCUAAGAAAGGGAAUAACCUUCAAGCUGGCGGGAGCA\
) } def
/len { sequence length } bind def

/coor [
[218.96063232 79.90618134]
[219.30059814 94.90232849]
[212.38522339 108.21313477]
[199.91969299 116.55642700]
[184.97775269 117.87492371]
[171.24378967 111.84350586]
[162.10429382 99.94939423]
[159.81291199 85.12545013]
[164.93392944 71.02793884]
[152.00814819 78.63871765]
[139.08235168 86.24948883]
[126.15655518 93.86026001]
[113.23076630 101.47103882]
[105.54058838 133.19158936]
[93.93400574 142.69354248]
[82.32741547 152.19549561]
[70.72082520 161.69744873]
[59.11423874 171.19940186]
[47.50765228 180.70135498]
[35.90106201 190.20330811]
[24.35563469 199.77947998]
[12.87183952 209.42947388]
[11.35729885 224.93251038]
[-0.42637035 234.55538940]
[-15.19680595 233.01596069]
[-20.78436661 247.81764221]
[-35.50585556 250.08193970]
[-46.98965073 259.73193359]
[-58.47344589 269.38192749]
[-69.95723724 279.03192139]
[-81.44103241 288.68194580]
[-92.92482758 298.33193970]
[-101.16123962 313.15075684]
[-117.68101501 309.33850098]
[-118.59085846 292.40896606]
[-102.57482910 286.84814453]
[-91.09103394 277.19815063]
[-79.60723877 267.54812622]
[-68.12344360 257.89813232]
[-56.63964844 248.24815369]
[-45.15585327 238.59814453]
[-40.38969040 224.48669434]
[-24.84680367 221.53216553]
[-23.81908607 206.71733093]
[-12.31035328 196.76727295]
[3.22184229 197.94567871]
[14.70563793 188.29568481]
[17.79751968 181.60156250]
[26.39911079 178.59671021]
[38.00569916 169.09475708]
[49.61228561 159.59280396]
[61.21887207 150.09085083]
[72.82546234 140.58889771]
[84.43205261 131.08694458]
[96.03863525 121.58499908]
[91.03909302 107.44270325]
[76.03939819 107.34652710]
[61.03970718 107.25035858]
[46.04001617 107.15419006]
[32.06095123 115.72844696]
[17.77687263 107.67256927]
[17.88201332 91.27375793]
[32.26821518 83.40170288]
[46.13618469 92.15449524]
[61.13587570 92.25067139]
[76.13556671 92.34683990]
[91.13526154 92.44300842]
[105.61998749 88.54524231]
[118.54578400 80.93447113]
[131.47157288 73.32369995]
[144.39736938 65.71292114]
[157.32316589 58.10214996]
[163.77427673 47.74251938]
[174.58343506 46.54918671]
[186.54687500 37.50064087]
[198.51029968 28.45209503]
[203.45240784 20.79754639]
[210.68565369 19.36539459]
[222.76412964 10.47099400]
[234.84260559 1.57659316]
[246.92108154 -7.31780815]
[258.99957275 -16.21220970]
[271.07803345 -25.10661125]
[283.15652466 -34.00101089]
[295.23498535 -42.89541245]
[307.31347656 -51.78981400]
[303.51562500 -71.71655273]
[309.84973145 -90.91375732]
[324.65716553 -104.57237244]
[344.16583252 -109.30574036]
[363.45080566 -103.98914337]
[373.17422485 -115.41082764]
[382.89764404 -126.83251953]
[392.62106323 -138.25421143]
[402.34451294 -149.67590332]
[400.12112427 -168.50761414]
[412.17980957 -182.72483826]
[430.48248291 -183.57466125]
[439.90982056 -195.24192810]
[449.33715820 -206.90919495]
[458.76449585 -218.57647705]
[468.19183350 -230.24374390]
[477.61920166 -241.91101074]
[487.04653931 -253.57827759]
[496.47387695 -265.24554443]
[505.90121460 -276.91281128]
[515.32855225 -288.58007812]
[524.75592041 -300.24737549]
[534.18322754 -311.91464233]
[543.61059570 -323.58190918]
[546.26562500 -339.17874146]
[560.28283691 -344.21542358]
[569.71014404 -355.88269043]
[579.13751221 -367.54995728]
[588.56488037 -379.21722412]
[597.99218750 -390.88449097]
[607.41955566 -402.55175781]
[615.60253906 -415.12310791]
[622.45520020 -428.46627808]
[629.30792236 -441.80947876]
[636.16058350 -455.15267944]
[643.01324463 -468.49588013]
[649.86590576 -481.83908081]
[656.71856689 -495.18228149]
[655.39611816 -513.55932617]
[670.52557373 -522.47015381]
[677.20660400 -535.90014648]
[683.88763428 -549.33007812]
[683.10675049 -565.13201904]
[695.70294189 -573.08093262]
[702.38397217 -586.51092529]
[709.06500244 -599.94085693]
[707.50701904 -618.29943848]
[722.52093506 -627.40356445]
[729.02923584 -640.91809082]
[720.86761475 -654.00970459]
[721.10229492 -669.43530273]
[729.65850830 -682.27258301]
[743.80590820 -688.42517090]
[759.03015137 -685.92987061]
[770.47320557 -675.58288574]
[774.48364258 -660.68591309]
[769.78173828 -645.99249268]
[757.86791992 -636.19128418]
[742.54376221 -634.40979004]
[736.03552246 -620.89526367]
[739.73284912 -609.39251709]
[734.43969727 -598.08746338]
[722.49493408 -593.25988770]
[715.81390381 -579.82989502]
[709.13293457 -566.39990234]
[710.39166260 -551.55859375]
[697.31756592 -542.64910889]
[690.63659668 -529.21911621]
[683.95556641 -515.78912354]
[687.50512695 -504.23989868]
[682.06744385 -493.00363159]
[670.06176758 -488.32962036]
[663.20910645 -474.98641968]
[656.35644531 -461.64321899]
[649.50378418 -448.30001831]
[642.65112305 -434.95681763]
[635.79840088 -421.61361694]
[628.94573975 -408.27041626]
[633.84399414 -402.59088135]
[648.53869629 -385.55218506]
[662.74389648 -390.36999512]
[676.94915771 -395.18780518]
[685.30950928 -408.88027954]
[701.24462891 -410.73797607]
[712.53045654 -399.33581543]
[710.50952148 -383.42056274]
[696.73205566 -375.20104980]
[681.76696777 -380.98254395]
[667.56170654 -376.16476440]
[653.35644531 -371.34695435]
[643.01110840 -372.15127563]
[634.02691650 -375.24063110]
[626.85290527 -380.14291382]
[621.81188965 -386.30529785]
[619.08679199 -393.12442017]
[609.65948486 -381.45715332]
[600.23211670 -369.78988647]
[590.80474854 -358.12261963]
[581.37744141 -346.45535278]
[571.95007324 -334.78808594]
[569.96936035 -320.02575684]
[555.27789307 -314.15457153]
[545.85052490 -302.48727417]
[536.42315674 -290.82000732]
[526.99584961 -279.15274048]
[517.56848145 -267.48547363]
[508.14114380 -255.81820679]
[498.71380615 -244.15093994]
[489.28646851 -232.48367310]
[479.85910034 -220.81639099]
[470.43176270 -209.14912415]
[461.00442505 -197.48185730]
[451.57708740 -185.81459045]
[442.14974976 -174.14732361]
[445.77978516 -163.35896301]
[443.74014282 -152.03883362]
[436.42224121 -143.00985718]
[425.54809570 -138.57991028]
[413.76620483 -139.95246887]
[404.04275513 -128.53077698]
[394.31933594 -117.10909271]
[384.59591675 -105.68740082]
[374.87249756 -94.26571655]
[379.94418335 -86.08194733]
[382.90289307 -76.91996002]
[383.57559204 -67.31560516]
[381.92294312 -57.83062363]
[378.04153442 -49.01977921]
[372.15847778 -41.39839172]
[380.66116333 -29.04103851]
[389.16387939 -16.68368721]
[397.66656494 -4.32633543]
[413.25134277 -1.70135689]
[422.34710693 11.22314358]
[419.55749512 26.77928925]
[406.53753662 35.73789597]
[391.01174927 32.78397751]
[382.19131470 19.67004585]
[385.30920410 4.17636204]
[376.80651855 -8.18099022]
[368.30383301 -20.53834152]
[359.80111694 -32.89569473]
[348.69931030 -29.67015076]
[337.08807373 -29.76373291]
[325.94274902 -33.19765854]
[316.20788574 -39.71133423]
[304.12939453 -30.81693459]
[292.05093384 -21.92253304]
[279.97244263 -13.02813244]
[267.89398193 -4.13373137]
[255.81549072 4.76066971]
[243.73701477 13.65507126]
[231.65853882 22.54947281]
[219.58006287 31.44387245]
[207.55885315 40.41553116]
[195.59541321 49.46407700]
[183.63197327 58.51262283]
[198.61831665 59.15262604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 72]
[10 71]
[11 70]
[12 69]
[13 68]
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 47]
[22 46]
[25 43]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[56 67]
[57 66]
[58 65]
[59 64]
[74 243]
[75 242]
[76 241]
[78 240]
[79 239]
[80 238]
[81 237]
[82 236]
[83 235]
[84 234]
[85 233]
[86 232]
[91 209]
[92 208]
[93 207]
[94 206]
[95 205]
[98 200]
[99 199]
[100 198]
[101 197]
[102 196]
[103 195]
[104 194]
[105 193]
[106 192]
[107 191]
[108 190]
[109 189]
[110 188]
[112 186]
[113 185]
[114 184]
[115 183]
[116 182]
[117 181]
[118 164]
[119 163]
[120 162]
[121 161]
[122 160]
[123 159]
[124 158]
[126 155]
[127 154]
[128 153]
[130 151]
[131 150]
[132 149]
[134 146]
[135 145]
[166 176]
[167 175]
[168 174]
[215 228]
[216 227]
[217 226]
[218 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
