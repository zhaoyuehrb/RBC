%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUUUGUUGAGCUUGAGCGUGAGCCGGCUGCUGAAGACUUGCGAACAGUUCGGAGCCAGCGAGAGCGCGCCAGAGAGAGCGAGAGUGAGGGAGUGAGUGCGAGGGGAUCUAGAGGAGUCAGGGCGAGAAAGCGAGGGCCGGAGGACCCACGAUAGAGACAGAGUGACC\
) } def
/len { sequence length } bind def

/coor [
[96.74642181 244.99990845]
[108.79294586 235.36222839]
[107.14282227 220.45326233]
[105.49269867 205.54431152]
[103.84257507 190.63534546]
[102.19245148 175.72637939]
[100.54232788 160.81742859]
[88.06072235 152.49819946]
[73.66480255 156.71215820]
[59.26888275 160.92613220]
[44.87296677 165.14010620]
[37.48231125 170.57418823]
[30.17376900 169.29663086]
[15.70286560 173.24542236]
[1.23196197 177.19421387]
[-13.23894119 181.14300537]
[-27.67296219 185.22456360]
[-42.06887817 189.43853760]
[-56.46479797 193.65249634]
[-70.86071777 197.86647034]
[-85.21732330 202.21249390]
[-99.53339386 206.69021606]
[-106.90672302 220.41143799]
[-121.48904419 224.74855042]
[-134.52468872 217.63464355]
[-148.84075928 222.11236572]
[-159.70201111 233.61643982]
[-174.15869141 230.03120422]
[-188.47476196 234.50892639]
[-202.74909973 239.11796570]
[-216.98049927 243.85792542]
[-225.41567993 257.50445557]
[-241.36074829 259.27487183]
[-252.58401489 247.81111145]
[-250.47593689 231.90716553]
[-236.65367126 223.76318359]
[-221.72047424 229.62652588]
[-207.48907471 224.88656616]
[-202.11613464 219.77008057]
[-192.95248413 220.19285583]
[-178.63641357 215.71513367]
[-168.79913330 204.53132629]
[-153.31848145 207.79629517]
[-139.00241089 203.31857300]
[-132.34356689 190.04470825]
[-117.88880920 185.29972839]
[-104.01111603 192.37414551]
[-89.69504547 187.89642334]
[-84.22901917 182.87950134]
[-75.07468414 183.47055054]
[-60.67876816 179.25657654]
[-46.28284836 175.04261780]
[-31.88692856 170.82864380]
[-26.32966232 165.91297913]
[-17.18773270 166.67210388]
[-2.71682954 162.72331238]
[11.75407410 158.77452087]
[26.22497749 154.82572937]
[40.65899658 150.74418640]
[55.05491638 146.53021240]
[69.45083618 142.31623840]
[83.84675598 138.10227966]
[71.02528381 127.16926575]
[64.08090973 112.57202911]
[63.72495270 97.09598541]
[69.46577454 83.45941925]
[79.78736877 73.83631134]
[92.50000000 69.51164246]
[92.50000000 54.51163864]
[92.50000000 39.51163864]
[92.50000000 24.51164055]
[92.50000000 9.51163960]
[92.36221313 -5.48772717]
[92.08664703 -20.48519516]
[77.09938812 -26.25739861]
[65.49709320 -37.30675888]
[59.03164673 -51.92414093]
[58.66365814 -67.86483002]
[64.41984558 -82.69323730]
[75.39344788 -94.15500641]
[89.88695526 -100.51979065]
[89.33592224 -115.50966644]
[80.16657257 -129.10580444]
[87.59870148 -143.72413635]
[103.98678589 -144.32655334]
[112.47215271 -130.29336548]
[104.32579803 -116.06069946]
[104.87683105 -101.07082367]
[118.22480011 -96.67588043]
[129.29057312 -87.96533203]
[136.72892761 -75.97205353]
[139.62678528 -62.12953186]
[137.61515808 -48.10052872]
[130.91606140 -35.57734680]
[120.31818390 -26.07769585]
[107.08412170 -20.76075935]
[107.35968018 -5.76328993]
[110.63898468 0.89201653]
[107.50000000 9.51163960]
[107.50000000 24.51164055]
[107.50000000 39.51163864]
[107.50000000 54.51163864]
[107.50000000 69.51164246]
[126.51193237 77.57128906]
[137.94949341 97.15883636]
[135.22303772 121.72667694]
[150.22241211 121.58888245]
[165.22177124 121.45109558]
[173.81219482 118.23307037]
[180.49734497 121.45109558]
[195.49671936 121.58888245]
[210.49607849 121.72667694]
[217.86785889 110.05442810]
[229.95329285 103.60878754]
[243.53662109 103.98335266]
[255.06314087 110.97284698]
[261.56945801 122.65494537]
[270.27230835 119.75466156]
[276.83471680 123.21610260]
[291.81890869 123.90480804]
[306.80307007 124.59351349]
[316.52276611 112.64219666]
[331.24395752 108.75124359]
[345.26766968 114.21018982]
[353.29177856 126.73022461]
[368.27597046 127.41893005]
[379.78222656 116.58466339]
[395.57666016 117.14333344]
[406.28866577 128.76350403]
[405.56301880 144.55113220]
[393.83026123 155.13967896]
[378.05117798 154.24717712]
[367.58728027 142.40310669]
[352.60308838 141.71441650]
[343.46432495 153.44560242]
[328.99899292 157.59513855]
[314.69677734 152.37020874]
[306.11437988 139.57769775]
[291.13018799 138.88899231]
[276.14602661 138.20028687]
[261.15612793 137.64924622]
[251.58358765 150.96359253]
[235.80744934 156.01231384]
[219.96913147 150.62257385]
[210.35829163 136.72604370]
[195.35893250 136.58825684]
[180.35955811 136.45046997]
[165.35955811 136.45046997]
[150.36019897 136.58825684]
[135.36082458 136.72604370]
[130.38343811 142.33634949]
[145.36279297 143.12318420]
[154.08723450 155.32499695]
[149.98725891 169.75378418]
[136.15013123 175.54466248]
[122.99526215 168.33706665]
[120.42867279 153.55699158]
[115.45128632 159.16729736]
[117.10140991 174.07626343]
[118.75153351 188.98521423]
[120.40165710 203.89418030]
[122.05178070 218.80314636]
[123.70190430 233.71209717]
[137.56443787 240.48217773]
[145.54661560 253.68400574]
[145.10134888 269.10494995]
[136.37074280 281.82421875]
[122.14068604 287.78317261]
[106.95194244 285.08029175]
[95.65117645 274.57809448]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 62]
[9 61]
[10 60]
[11 59]
[13 58]
[14 57]
[15 56]
[16 55]
[17 53]
[18 52]
[19 51]
[20 50]
[21 48]
[22 47]
[25 44]
[26 43]
[28 41]
[29 40]
[30 38]
[31 37]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[73 97]
[74 96]
[81 88]
[82 87]
[106 150]
[107 149]
[108 148]
[110 147]
[111 146]
[112 145]
[117 141]
[119 140]
[120 139]
[121 138]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
