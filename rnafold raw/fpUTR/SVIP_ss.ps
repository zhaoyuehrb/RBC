%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGGACGGGUGGACGCGUCAGGAGGGUCGUUGGGUCCUGUCAGAGCGACCUAGGCCGUCGCCUCCGUGUAGAUCUCCACUUUUGUAACAAAAAGUUGUCGAAAGGCGGCUGUGGCGUCUUUCUACCUUCCACUGACUUUAGCUGCGCCGGAUCUUCAUAGGGCGCCGGCGCACGCAGAGGGCGUUACGCGUGGGACAUUCCGGGGGAUGUGGUAG\
) } def
/len { sequence length } bind def

/coor [
[328.95233154 261.32412720]
[324.43786621 252.51913452]
[321.80596924 242.96946716]
[321.17092896 233.07327271]
[322.56372070 223.24409485]
[308.76837158 217.35440063]
[294.97302246 211.46470642]
[287.59103394 211.72915649]
[281.02230835 205.38946533]
[267.31326294 199.30157471]
[253.60421753 193.21369934]
[239.89518738 187.12580872]
[226.18614197 181.03793335]
[212.47711182 174.95005798]
[198.76808167 168.86216736]
[179.73655701 172.29792786]
[168.13346863 155.80952454]
[154.25468445 150.11923218]
[140.37590027 144.42893982]
[126.49711609 138.73866272]
[112.61833191 133.04837036]
[98.73954773 127.35808563]
[83.76445770 126.49390411]
[69.32324219 130.54991150]
[54.88201904 134.60591125]
[40.44079590 138.66191101]
[25.99957657 142.71791077]
[11.58795643 146.87785339]
[0.55631399 158.21864319]
[-13.84527111 154.41816711]
[-28.22654343 158.68185425]
[-42.54487991 163.15232849]
[-56.79730988 167.82868958]
[-71.04973602 172.50503540]
[-85.30216980 177.18139648]
[-99.55459595 181.85774231]
[-113.80702209 186.53410339]
[-128.05944824 191.21044922]
[-142.27781677 195.98937988]
[-156.46138000 200.87062073]
[-164.76043701 214.60034180]
[-180.68710327 216.52926636]
[-192.02381897 205.17767334]
[-190.07400513 189.25354004]
[-176.33340454 180.97250366]
[-161.34263611 186.68707275]
[-147.15907288 181.80581665]
[-141.86001587 176.65959167]
[-132.73580933 176.95802307]
[-118.48337555 172.28166199]
[-104.23094940 167.60531616]
[-89.97851562 162.92897034]
[-75.72608948 158.25260925]
[-61.47366333 153.57626343]
[-47.22123337 148.89990234]
[-44.30608749 145.12290955]
[-38.98941803 143.13407898]
[-32.49022675 144.30058289]
[-18.10895538 140.03689575]
[-8.10595798 129.00108337]
[7.32427168 132.49658203]
[12.84079361 127.58419037]
[21.94357681 128.27668762]
[36.38479614 124.22068787]
[50.82601929 120.16468811]
[65.26723480 116.10868073]
[79.70845795 112.05268097]
[81.96953583 97.22407532]
[69.39340210 89.04845428]
[56.81727219 80.87282562]
[42.37690735 86.55222321]
[27.36462593 82.62654114]
[17.55295181 70.60527802]
[16.71467400 55.11086273]
[25.17213058 42.10121155]
[39.67325211 36.57879639]
[54.64206696 40.66710281]
[64.32275391 52.79409409]
[64.99289703 68.29669189]
[77.56903076 76.47232056]
[90.14516449 84.64794922]
[100.59781647 73.88960266]
[92.06316376 61.55429459]
[83.52851868 49.21899033]
[74.99386597 36.88368607]
[66.45921326 24.54838181]
[52.47488785 14.96323872]
[57.81419373 -1.12800610]
[74.75465393 -0.45186424]
[78.79451752 16.01373100]
[87.32917023 28.34903526]
[95.86382294 40.68434143]
[104.39847565 53.01964569]
[112.93312073 65.35494995]
[126.85254669 59.76481247]
[124.48468018 44.95288467]
[122.11681366 30.14095497]
[119.74895477 15.32902813]
[117.38108826 0.51709950]
[115.01322174 -14.29482841]
[112.64535522 -29.10675621]
[101.89230347 -41.48834991]
[107.49362183 -56.90124512]
[123.68714905 -59.48997498]
[133.81437683 -46.59147644]
[127.45728302 -31.47462082]
[129.82514954 -16.66269302]
[132.19300842 -1.85076535]
[134.56088257 12.96116257]
[136.92874146 27.77309036]
[139.29661560 42.58501816]
[141.66447449 57.39694595]
[135.93142700 108.35135651]
[104.42983246 113.47930145]
[118.30861664 119.16958618]
[132.18739319 124.85987091]
[146.06617737 130.55015564]
[159.94496155 136.24044800]
[173.82374573 141.93074036]
[183.59213257 137.16163635]
[194.15542603 138.52484131]
[202.06011963 145.33142090]
[204.85595703 155.15313721]
[218.56498718 161.24101257]
[232.27403259 167.32890320]
[245.98306274 173.41677856]
[259.69210815 179.50465393]
[273.40115356 185.59254456]
[287.11016846 191.68041992]
[300.86273193 197.66937256]
[314.65808105 203.55906677]
[328.45339966 209.44876099]
[341.19900513 195.93704224]
[358.05346680 188.21917725]
[376.53567505 187.40063477]
[393.93640137 193.57341003]
[407.71545410 205.80679321]
[415.87246704 222.28746033]
[430.77288818 220.56198120]
[445.67330933 218.83648682]
[460.57373047 217.11099243]
[468.73339844 213.01710510]
[475.70111084 215.46960449]
[490.62484741 213.95901489]
[505.53732300 212.34092712]
[520.43774414 210.61544800]
[535.33819580 208.88995361]
[550.23858643 207.16447449]
[565.13903809 205.43898010]
[580.03942871 203.71348572]
[594.93988037 201.98800659]
[609.84033203 200.26251221]
[619.64630127 188.15960693]
[634.78204346 186.62197876]
[646.25988770 196.04507446]
[661.16027832 194.31959534]
[676.06072998 192.59410095]
[688.89550781 182.38621521]
[704.05187988 188.64843750]
[705.93835449 204.93872070]
[692.61419678 214.49902344]
[677.78619385 207.49452209]
[662.88580322 209.22001648]
[647.98535156 210.94551086]
[638.96478271 222.74234009]
[623.87823486 224.70449829]
[611.56579590 215.16293335]
[596.66534424 216.88842773]
[581.76495361 218.61392212]
[566.86450195 220.33940125]
[551.96411133 222.06489563]
[537.06365967 223.79037476]
[522.16326904 225.51586914]
[507.26281738 227.24136353]
[500.98330688 231.13125610]
[492.13543701 228.88275146]
[477.21170044 230.39334106]
[462.29922485 232.01142883]
[447.39880371 233.73690796]
[432.49838257 235.46240234]
[417.59796143 237.18789673]
[413.22384644 255.29885864]
[402.28204346 270.37921143]
[410.63806152 282.83621216]
[418.99404907 295.29321289]
[427.35006714 307.75024414]
[433.09945679 310.99749756]
[435.92544556 315.92050171]
[435.76132202 320.68884277]
[449.66259766 328.24298096]
[449.89788818 343.13571167]
[463.79916382 350.68984985]
[464.03445435 365.58261108]
[472.02798462 378.27523804]
[480.02154541 390.96789551]
[488.01510620 403.66052246]
[502.76617432 410.82559204]
[503.66650391 427.20001221]
[489.78994751 435.93917847]
[475.41146851 428.05297852]
[475.32244873 411.65408325]
[467.32891846 398.96142578]
[459.33535767 386.26879883]
[451.34179688 373.57617188]
[438.01226807 366.92987061]
[437.20523071 351.12927246]
[423.87570190 344.48300171]
[423.06866455 328.68237305]
[414.89303589 316.10623169]
[406.53704834 303.64923096]
[398.18103027 291.19223022]
[389.82504272 278.73519897]
[380.55786133 281.98083496]
[370.81350708 283.27496338]
[360.99884033 282.55911255]
[351.52456665 279.85879517]
[342.78805542 275.28271484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 132]
[6 131]
[7 130]
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[17 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 61]
[30 59]
[31 58]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 47]
[40 46]
[68 81]
[69 80]
[70 79]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[138 181]
[139 180]
[140 179]
[141 178]
[143 177]
[144 176]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[155 164]
[156 163]
[157 162]
[183 212]
[184 211]
[185 210]
[186 209]
[189 208]
[191 206]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
