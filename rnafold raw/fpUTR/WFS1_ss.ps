%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGAAGGCCGCGCUAGCCGGCUCUUCAGCAGCGAGUGCAGAUUGCUCCCCCGCGGCCGCAGAUCUCCCGUUUGCGCCGCGUUCAGCUGCUCCCGAACAACUUUUCUGCCGGCCCAGAGGCCCCAGGGCGUCGCAGCGCCGCGUGCGGCCCACUCACGGGCCGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[132.38798523 146.21157837]
[120.05029297 154.74276733]
[105.07196808 153.93661499]
[93.72120667 144.13047791]
[90.74811554 129.42807007]
[97.39778137 115.98122406]
[88.40360260 127.98558807]
[79.40942383 139.98994446]
[70.41525269 151.99430847]
[61.53171921 164.08079529]
[52.75959015 176.24836731]
[43.98746109 188.41592407]
[35.21533203 200.58349609]
[26.55533981 212.83113098]
[25.74108315 229.21005249]
[11.02789307 236.45257568]
[-2.44856286 227.10820007]
[-0.82486105 210.78964233]
[14.22867298 204.28401184]
[15.46067715 196.96765137]
[23.04776192 191.81137085]
[31.81989098 179.64379883]
[40.59202194 167.47622681]
[49.36415100 155.30865479]
[50.73035431 148.01617432]
[58.41088486 143.00013733]
[67.40505981 130.99577332]
[76.39923859 118.99140930]
[85.39341736 106.98704529]
[83.60641479 92.09387207]
[72.02766418 82.55801392]
[60.44891357 73.02215576]
[48.87016678 63.48630142]
[37.29141617 53.95044708]
[25.71266556 44.41458893]
[11.61727619 39.28428650]
[-3.38209057 39.14649963]
[-18.38145828 39.00871277]
[-33.38082504 38.87092590]
[-43.40387726 50.87394333]
[-58.80638504 53.57519150]
[-72.31575775 45.69922638]
[-77.55328369 30.96483231]
[-72.04595947 16.32914162]
[-58.39417648 8.70268250]
[-43.04389191 11.68643284]
[-33.24303818 23.87155724]
[-18.24367142 24.00934601]
[-3.24430346 24.14713287]
[11.75506401 24.28491974]
[15.20289135 17.62440300]
[7.11410427 4.99224091]
[22.09854698 4.30336952]
[25.54637527 -2.35714698]
[16.77424622 -14.52471638]
[8.00211525 -26.69228554]
[-0.77001417 -38.85985565]
[-9.54214382 -51.02742386]
[-18.31427383 -63.19499207]
[-25.90135765 -68.35128021]
[-27.13336182 -75.66763306]
[-35.68048477 -87.99430084]
[-44.22760391 -100.32096863]
[-52.77472687 -112.64763641]
[-61.32184601 -124.97430420]
[-69.86896515 -137.30097961]
[-85.33560944 -141.56271362]
[-91.51421356 -156.36827087]
[-83.66508484 -170.36007690]
[-67.80940247 -172.80482483]
[-56.11028290 -161.82710266]
[-57.54230118 -145.84809875]
[-48.99517822 -133.52142334]
[-40.44805908 -121.19475555]
[-31.90093803 -108.86809540]
[-23.35381699 -96.54142761]
[-14.80669594 -84.21475983]
[-6.14670467 -71.96712494]
[2.62542510 -59.79955292]
[11.39755535 -47.63198471]
[20.16968536 -35.46441650]
[28.94181442 -23.29684639]
[37.71394348 -11.12927723]
[43.83962631 -0.57680732]
[46.09665298 10.19277287]
[44.87871552 19.95299911]
[40.93130493 27.71822357]
[35.24852371 32.83583832]
[46.82727051 42.37169647]
[58.40602112 51.90755081]
[69.98477173 61.44340897]
[81.56352234 70.97926331]
[93.14227295 80.51512146]
[85.92165375 67.36739349]
[83.81379700 52.51623535]
[87.09078217 37.87856674]
[95.32962799 25.34375763]
[107.46689606 16.52975082]
[121.93595886 12.57422066]
[136.86921692 13.98773098]
[150.33912659 20.58783150]
[160.60707092 31.52260971]
[166.34770203 45.38064957]
[166.82002258 60.37321091]
[161.96308899 74.56511688]
[152.40380859 86.12453461]
[139.37605286 93.55942535]
[124.56555939 95.91021729]
[138.51423645 101.42696381]
[152.46290588 106.94370270]
[166.41157532 112.46044922]
[180.36026001 117.97719574]
[194.30892944 123.49393463]
[208.25761414 129.01068115]
[222.20628357 134.52742004]
[236.15495300 140.04415894]
[250.10363770 145.56091309]
[268.23165894 142.42913818]
[278.61776733 156.55456543]
[292.66543579 161.81411743]
[306.85269165 166.68461609]
[321.16876221 171.16233826]
[335.48486328 175.64006042]
[349.80093384 180.11778259]
[365.28158569 176.85281372]
[375.11883545 188.03662109]
[389.43493652 192.51434326]
[403.79153442 196.86036682]
[418.22555542 200.94192505]
[432.69644165 204.89071655]
[447.16735840 208.83950806]
[461.63824463 212.78829956]
[476.10916138 216.73709106]
[491.82257080 212.04446411]
[503.55578613 223.50151062]
[499.23864746 239.32220459]
[483.31228638 243.23158264]
[472.16036987 231.20799255]
[457.68945312 227.25920105]
[443.21856689 223.31040955]
[428.74765015 219.36161804]
[414.27676392 215.41282654]
[406.96820068 216.69038391]
[399.57754517 211.25628662]
[392.24679565 212.39936829]
[384.95721436 206.83041382]
[370.64111328 202.35269165]
[356.18444824 205.93792725]
[345.32321167 194.43385315]
[331.00714111 189.95613098]
[316.69104004 185.47840881]
[302.37496948 181.00068665]
[299.07116699 182.33180237]
[294.95227051 182.10546875]
[290.76824951 179.95358276]
[287.40588379 175.86178589]
[273.35821533 170.60223389]
[262.19775391 175.32960510]
[250.43627930 171.03302002]
[244.58688354 159.50958252]
[230.63821411 153.99284363]
[216.68954468 148.47610474]
[202.74085999 142.95935059]
[188.79219055 137.44261169]
[174.84352112 131.92587280]
[160.89483643 126.40912628]
[146.94616699 120.89237976]
[132.99748230 115.37564087]
[119.04881287 109.85889435]
[131.75474548 117.83129883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 29]
[7 28]
[8 27]
[9 26]
[10 24]
[11 23]
[12 22]
[13 21]
[14 19]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[36 50]
[37 49]
[38 48]
[39 47]
[54 83]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[108 169]
[109 168]
[110 167]
[111 166]
[112 165]
[113 164]
[114 163]
[115 162]
[116 161]
[117 160]
[119 157]
[120 156]
[121 152]
[122 151]
[123 150]
[124 149]
[126 147]
[127 146]
[128 144]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
