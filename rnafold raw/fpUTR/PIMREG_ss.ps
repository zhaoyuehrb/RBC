%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGAGUUUCAAAUCGGCUGCGGUGGGCGAGGAGCAGCUGUGCUGCGGCUGUGCUCGGCCUUAGUGGUGUCGGGGUCUAGUGGACAGAGAAGACUCUUGGCCAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[80.65285492 135.50866699]
[71.15766907 147.12078857]
[61.66248322 158.73291016]
[52.16729736 170.34503174]
[42.67211151 181.95716858]
[40.20021439 200.13450623]
[23.67236137 205.84002686]
[28.17307281 220.69006348]
[23.05380630 235.33836365]
[10.28302193 244.15235901]
[-5.22865009 243.74291992]
[-17.51665688 234.26744080]
[-21.85600853 219.36947632]
[-16.57813644 204.77757263]
[-3.71248960 196.10261536]
[11.79382801 196.68031311]
[10.57170677 184.55178833]
[18.23465919 174.55892944]
[31.05998611 172.46197510]
[40.55517197 160.84985352]
[50.05036163 149.23773193]
[59.54554749 137.62561035]
[69.04073334 126.01348114]
[60.56768417 108.95934296]
[60.83961105 89.91828156]
[69.79620361 73.11305237]
[60.63648224 61.23451996]
[46.08225250 55.03089905]
[44.43755722 40.22737885]
[35.27783585 28.34884453]
[26.11812019 16.47031212]
[16.95840073 4.59177780]
[4.19818401 2.12944293]
[-3.17628646 -8.07816315]
[-1.60832047 -20.16685104]
[-10.42509937 -32.30210495]
[-19.24187851 -44.43736267]
[-28.05865669 -56.57261658]
[-36.87543488 -68.70787048]
[-45.69221497 -80.84312439]
[-54.50899506 -92.97837830]
[-63.32577133 -105.11363220]
[-77.52737427 -114.37381744]
[-72.56047821 -130.58387756]
[-55.60893250 -130.29849243]
[-51.19051743 -113.93041229]
[-42.37373734 -101.79515839]
[-33.55696106 -89.65990448]
[-24.74018097 -77.52465057]
[-15.92340183 -65.38939667]
[-7.10662317 -53.25413895]
[1.71015561 -41.11888504]
[10.52693462 -28.98362923]
[26.88512039 -22.80846596]
[28.83693504 -4.56794024]
[37.99665451 7.31059361]
[47.15637207 19.18912697]
[56.31608963 31.06766129]
[70.21515656 36.42164993]
[72.51501465 52.07480240]
[81.67473602 63.95333862]
[97.13732910 59.66413116]
[113.05069733 61.72655487]
[126.90899658 69.81584167]
[136.52996826 82.65818787]
[140.39862061 98.23132324]
[155.24594116 100.36604309]
[170.09327698 102.50076294]
[184.94059753 104.63549042]
[194.79902649 95.32758331]
[208.03233337 93.47232819]
[219.72302246 99.53067017]
[225.65853882 111.06475067]
[240.43884277 113.62258148]
[255.21914673 116.18041229]
[269.99945068 118.73825073]
[284.77975464 121.29608154]
[299.56008911 123.85391235]
[314.34039307 126.41174316]
[327.16821289 117.57520294]
[342.12112427 120.37976074]
[350.46633911 132.66358948]
[363.23760986 123.35388184]
[378.83804321 125.88407135]
[388.01220703 138.75303650]
[385.31723022 154.32585144]
[372.35198975 163.36344910]
[356.80853271 160.50396729]
[347.90850830 147.44389343]
[335.92062378 156.20893860]
[320.89486694 153.82548523]
[311.78256226 141.19204712]
[297.00225830 138.63421631]
[282.22192383 136.07638550]
[267.44161987 133.51855469]
[252.66131592 130.96072388]
[237.88101196 128.40289307]
[223.10070801 125.84505463]
[209.86238098 136.10723877]
[192.95523071 133.64271545]
[182.80586243 119.48281097]
[167.95854187 117.34809113]
[153.11122131 115.21336365]
[138.26390076 113.07864380]
[133.86921692 122.09193420]
[127.39178467 129.74671936]
[119.22994232 135.57226562]
[109.88558197 139.21035767]
[99.93332672 140.43727112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[7 16]
[26 61]
[27 60]
[29 58]
[30 57]
[31 56]
[32 55]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[66 104]
[67 103]
[68 102]
[69 101]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[82 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
