%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGAGGCUGAGGAGGCGCGGGGGGCGGGGGAGGCUCAGGAGCGGGCGGUGACGGCGACGGCGGCGGCAGAGGAGGCAGCGGCUGGGCCGGGCCCCGUGCGUCUGUCCGCGCCCCGUGGAUGCGAAUCGGCCGCGGCGGAGGCGGCGGCGGCGGAGGAGGCGGCGGCGGGAGGAGGAGUCGGUGAGCCGGCUCCGGGCCGGAGGGGCGCGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-30.12119293 158.88619995]
[-30.87726212 173.86714172]
[-35.91591263 187.99554443]
[-44.81014633 200.07415771]
[-56.80624008 209.07936096]
[-70.88760376 214.24803162]
[-85.86093140 215.14216614]
[-100.45732880 211.68600464]
[-113.43984985 204.17240906]
[-123.70831299 193.23811340]
[-130.39253235 179.80973816]
[-132.92605591 165.02525330]
[-131.09419250 150.13752747]
[-125.05217743 136.40821838]
[-115.31203461 125.00077820]
[-102.69917297 116.88192749]
[-88.27857971 112.73915100]
[-102.92948914 109.52188110]
[-117.58039856 106.30460358]
[-132.23130798 103.08732605]
[-146.88221741 99.87004852]
[-161.53312683 96.65277100]
[-176.18403625 93.43549347]
[-191.32257080 98.03279877]
[-202.09411621 87.74575043]
[-216.74502563 84.52848053]
[-231.39593506 81.31120300]
[-246.04684448 78.09392548]
[-260.69775391 74.87664795]
[-263.22482300 80.85717010]
[-267.36083984 86.30148315]
[-272.98028564 90.77515411]
[-279.84078979 93.87667847]
[-287.59274292 95.26855469]
[-295.79684448 94.70549011]
[-303.94897461 92.05764771]
[-311.51101685 87.32711792]
[-325.76342773 92.00346375]
[-340.01586914 96.67981720]
[-354.26831055 101.35617065]
[-361.17813110 115.56988525]
[-376.14184570 120.65547180]
[-390.28170776 113.59574127]
[-395.20880127 98.57910919]
[-387.99996948 84.51467133]
[-372.93206787 79.74662018]
[-358.94464111 87.10374451]
[-344.69223022 82.42739105]
[-330.43978882 77.75103760]
[-316.18737793 73.07468414]
[-315.21734619 65.63768005]
[-329.96292114 68.38874054]
[-337.13580322 55.21490860]
[-326.82315063 44.32228470]
[-313.27731323 50.76366425]
[-312.30731201 43.32666016]
[-324.88342285 35.15103149]
[-337.45956421 26.97540283]
[-350.03570557 18.79977608]
[-362.78860474 20.70722580]
[-373.09381104 13.64306545]
[-375.73760986 1.84231544]
[-388.19464111 -6.51369143]
[-400.65164185 -14.86969852]
[-413.10867310 -23.22570419]
[-428.87945557 -24.48775101]
[-435.13882446 -38.00327301]
[-447.59585571 -46.35927963]
[-463.36663818 -47.62132263]
[-469.62603760 -61.13684464]
[-482.08303833 -69.49285126]
[-497.05242920 -64.97055054]
[-511.40609741 -71.17589569]
[-518.36669922 -85.17890930]
[-514.64758301 -100.36779785]
[-502.00488281 -109.57083893]
[-486.40805054 -108.44262695]
[-475.22143555 -97.51587677]
[-473.72702026 -81.94986725]
[-461.27001953 -73.59385681]
[-446.39022827 -72.92948914]
[-439.23983765 -58.81629181]
[-426.78283691 -50.46028519]
[-411.90304565 -49.79591370]
[-404.75265503 -35.68271637]
[-392.29565430 -27.32670975]
[-379.83862305 -18.97070312]
[-367.38162231 -10.61469650]
[-349.83200073 -10.37811947]
[-341.86007690 6.22364330]
[-329.28393555 14.39927101]
[-316.70779419 22.57489777]
[-304.13168335 30.75052643]
[-269.31912231 33.64146042]
[-257.48046875 60.22573853]
[-242.82955933 63.44301605]
[-228.17864990 66.66029358]
[-213.52774048 69.87757111]
[-198.87683105 73.09484100]
[-184.78622437 68.26742554]
[-172.96676636 78.78458405]
[-158.31585693 82.00186157]
[-143.66494751 85.21913910]
[-129.01403809 88.43641663]
[-114.36312103 91.65369415]
[-99.71221161 94.87097168]
[-85.06130219 98.08824158]
[-76.09938812 94.92433167]
[-66.51093292 99.69622803]
[-51.52494812 99.04793549]
[-36.53896332 98.39964294]
[-21.55297852 97.75135040]
[-6.56699419 97.10305786]
[8.41899014 96.45477295]
[23.40497398 95.80648041]
[38.39095688 95.15818787]
[53.37694168 94.50989532]
[68.36292267 93.86160278]
[69.04866791 79.87755585]
[76.18112183 65.88444519]
[89.68495178 54.86551666]
[108.13054657 49.66386414]
[115.37957764 36.53178024]
[122.62860107 23.39969635]
[121.77270508 7.02289915]
[135.67294312 -1.67856491]
[150.02993774 6.24662447]
[150.07444763 22.64571190]
[135.76068115 30.64872169]
[128.51165771 43.78080368]
[121.26263428 56.91288757]
[132.39099121 66.97168732]
[143.51837158 77.02960968]
[155.85366821 68.49495697]
[168.18898010 59.96030807]
[180.52427673 51.42565536]
[192.85958862 42.89100647]
[199.80586243 28.67623138]
[214.67453003 27.79750824]
[227.00982666 19.26285744]
[233.53067017 4.21591043]
[249.85087585 2.60871243]
[259.18161011 16.09461021]
[251.92420959 30.80047035]
[235.54447937 31.59816170]
[223.20916748 40.13281250]
[217.14520264 53.73712921]
[201.39422607 55.22631073]
[189.05892944 63.76095963]
[176.72361755 72.29560852]
[164.38832092 80.83026123]
[152.05300903 89.36491394]
[153.56359863 104.28865814]
[167.35894775 110.17835236]
[181.15428162 116.06804657]
[192.98907471 109.64402771]
[206.17065430 111.18490601]
[215.91467285 119.90591431]
[218.81452942 132.45748901]
[232.52355957 138.54537964]
[246.23258972 144.63325500]
[259.94161987 150.72114563]
[275.69436646 149.25067139]
[284.18600464 161.48753357]
[297.89505005 167.57542419]
[311.60409546 173.66329956]
[325.31314087 179.75117493]
[343.57723999 177.38626099]
[353.34085083 191.97106934]
[367.13619995 197.86076355]
[382.86608887 196.16343689]
[391.53320312 208.27667236]
[405.32855225 214.16636658]
[418.57626343 206.08691406]
[434.04013062 207.37086487]
[445.77395630 217.52452087]
[449.26586914 232.64358521]
[443.17315674 246.91447449]
[429.83856201 254.84974670]
[414.38955688 253.39811707]
[402.76654053 243.11776733]
[399.43884277 227.96171570]
[385.64352417 222.07202148]
[370.90036011 224.19061279]
[361.24649048 211.65611267]
[347.45114136 205.76641846]
[336.11633301 209.98173523]
[324.57687378 205.19200134]
[319.22525024 193.46022034]
[305.51620483 187.37232971]
[291.80715942 181.28445435]
[278.09814453 175.19657898]
[263.32595825 177.10249329]
[253.85375977 164.43017578]
[240.14471436 158.34230042]
[226.43568420 152.25440979]
[212.72663879 146.16653442]
[197.30139160 152.87319946]
[181.48786926 146.21507263]
[175.26458740 129.86338806]
[161.46925354 123.97369385]
[147.67390442 118.08399963]
[125.48883057 138.65023804]
[98.24365997 141.57072449]
[77.14849854 128.99493408]
[69.01121521 108.84758759]
[54.02523422 109.49588013]
[39.03924942 110.14417267]
[24.05326653 110.79245758]
[9.06728172 111.44075012]
[-5.91870213 112.08904266]
[-20.90468597 112.73733521]
[-35.89067078 113.38562775]
[-50.87665558 114.03392029]
[-65.86264038 114.68221283]
[-52.37321472 121.24235535]
[-41.34473038 131.40957642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[25 99]
[26 98]
[27 97]
[28 96]
[29 95]
[37 50]
[38 49]
[39 48]
[40 47]
[56 93]
[57 92]
[58 91]
[59 90]
[62 88]
[63 87]
[64 86]
[65 85]
[67 83]
[68 82]
[70 80]
[71 79]
[109 215]
[110 214]
[111 213]
[112 212]
[113 211]
[114 210]
[115 209]
[116 208]
[117 207]
[118 206]
[122 131]
[123 130]
[124 129]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[139 146]
[140 145]
[153 202]
[154 201]
[155 200]
[159 197]
[160 196]
[161 195]
[162 194]
[164 192]
[165 191]
[166 190]
[167 189]
[169 186]
[170 185]
[172 183]
[173 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
