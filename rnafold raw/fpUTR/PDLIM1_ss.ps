%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCGGGGAGCGGCUGCGGGCGGGAGGACGGGCGGGGCGGCGGGCGGCUACGCGGCCUGGGCGGAGCCGCCCCCGCCCUGGCCCUCGCGGUUGCCCUGCCCCCGCCAGCCCCAGGCUCCCCGGGCCCGCGCCGCGCCGCUCUUUCUCCGACAGCCGCCGGGGGUGCCCUGCAAGCUGUUCCGCGCGUCCUGCCCGUCUGUCCCCGCGGGUCGUCGCCCGCCACAGCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[135.92329407 711.09210205]
[145.32157898 699.14471436]
[158.57899475 691.70770264]
[156.77095032 676.81707764]
[154.96289062 661.92639160]
[153.15484619 647.03576660]
[151.34680176 632.14514160]
[149.53874207 617.25451660]
[137.69209290 608.29949951]
[135.64634705 593.22406006]
[145.11952209 580.85888672]
[143.31146240 565.96826172]
[141.50341797 551.07763672]
[139.69537354 536.18701172]
[137.88731384 521.29638672]
[136.07926941 506.40573120]
[134.17129517 491.52755737]
[132.16349792 476.66253662]
[130.15570068 461.79754639]
[128.14790344 446.93252563]
[126.14011383 432.06750488]
[122.13641357 425.86956787]
[124.20652771 416.98959351]
[122.39847565 402.09896851]
[113.07879639 394.40301514]
[111.44248199 382.02355957]
[118.90566254 371.51672363]
[117.29768372 356.60314941]
[115.68970490 341.68957520]
[114.08173370 326.77603149]
[112.47375488 311.86245728]
[110.86577606 296.94888306]
[109.25779724 282.03530884]
[107.64981842 267.12176514]
[106.04183960 252.20819092]
[104.43386841 237.29463196]
[102.82588959 222.38105774]
[101.21791077 207.46749878]
[99.60993195 192.55393982]
[98.00195312 177.64036560]
[96.29390717 162.73793030]
[94.48585510 147.84730530]
[92.67780304 132.95666504]
[90.86975098 118.06604004]
[76.59877777 91.52607727]
[67.42746735 79.65649414]
[58.25615311 67.78691101]
[49.08484268 55.91732788]
[39.91352844 44.04774094]
[38.43699265 58.97489166]
[26.42039490 67.95272064]
[11.68719959 65.13616943]
[3.82952070 52.35896683]
[7.96313667 37.93977356]
[21.39639282 31.26628494]
[7.04594660 26.89997292]
[-7.30449963 22.53365898]
[-21.65494537 18.16734695]
[-37.10975266 21.55253601]
[-47.03365707 10.44553757]
[-61.38410187 6.07922459]
[-75.73455048 1.71291125]
[-90.08499908 -2.65340185]
[-104.43544006 -7.01971483]
[-118.78588867 -11.38602829]
[-131.08416748 -1.92390263]
[-146.59628296 -1.53128755]
[-159.35748291 -10.35915184]
[-164.46086121 -25.01300049]
[-159.94403076 -39.85813141]
[-147.54382324 -49.18628693]
[-132.02836609 -49.41060257]
[-119.36367035 -40.44482422]
[-114.41957855 -25.73647499]
[-100.06912994 -21.37016106]
[-85.71868134 -17.00384903]
[-71.36824036 -12.63753510]
[-57.01779175 -8.27122211]
[-42.66734314 -3.90490866]
[-28.23897743 -7.60240602]
[-17.28863335 3.81689978]
[-2.93818665 8.18321323]
[11.41226006 12.54952621]
[25.76270676 16.91584015]
[31.44280052 12.01823425]
[28.63996315 -2.71757603]
[42.80298615 2.22302461]
[48.48308182 -2.67458010]
[46.27589798 -17.51130295]
[44.06871796 -32.34802628]
[41.86153412 -47.18474960]
[39.65435410 -62.02147293]
[35.30258560 -70.03404999]
[37.51852036 -77.07205963]
[35.51072311 -91.93708038]
[23.93634987 -98.80661774]
[18.50628281 -110.90922546]
[20.99628258 -123.74031067]
[30.27866745 -132.66374207]
[28.47061729 -147.55436707]
[26.66256714 -162.44500732]
[24.85451698 -177.33564758]
[11.72638607 -182.13894653]
[1.99251580 -192.08010864]
[-2.49030089 -205.18139648]
[-0.90208161 -218.87042236]
[6.39099884 -230.48526001]
[17.91901207 -237.79203796]
[16.31103516 -252.70559692]
[14.70305729 -267.61917114]
[13.09507942 -282.53271484]
[5.38564968 -297.63241577]
[17.76106834 -309.22058105]
[32.32221222 -300.53671265]
[28.00864410 -284.14071655]
[29.61662102 -269.22714233]
[31.22459984 -254.31356812]
[32.83257675 -239.40000916]
[47.77316666 -233.22518921]
[57.61407471 -220.28097534]
[59.59105301 -204.04669189]
[53.06983566 -188.94648743]
[39.74515152 -179.14369202]
[41.55319977 -164.25305176]
[43.36125183 -149.36242676]
[45.16930008 -134.47178650]
[58.84215164 -124.66700745]
[61.23263550 -107.67127991]
[50.37574005 -93.94487762]
[52.38353729 -79.07985687]
[54.49107742 -64.22865295]
[56.69825745 -49.39192963]
[58.90544128 -34.55520630]
[61.11262131 -19.71848488]
[63.31980515 -4.88176203]
[51.78311539 34.87643051]
[60.95442581 46.74601364]
[70.12574005 58.61560059]
[79.29705048 70.48518372]
[88.46836090 82.35476685]
[80.41195679 69.70193481]
[80.08492279 54.70549774]
[87.58209229 41.71348190]
[100.72975159 34.49274826]
[115.71591949 35.13685226]
[128.19554138 43.45904541]
[134.55033875 57.04641724]
[132.93780518 71.95948792]
[123.82546997 83.87441254]
[109.85778046 89.33637238]
[124.26554871 85.16310883]
[138.67332458 80.98985291]
[153.08110046 76.81658936]
[167.48886108 72.64332581]
[181.89663696 68.47006226]
[194.35098267 54.89647675]
[211.21469116 59.77708435]
[225.56513977 55.41077042]
[236.51548767 43.99146652]
[250.94384766 47.68896484]
[265.29431152 43.32265091]
[279.64474487 38.95633698]
[290.44369507 26.61475754]
[306.47662354 30.06114578]
[311.25021362 45.75015259]
[299.85382080 57.54227066]
[284.01104736 53.30678177]
[269.66061401 57.67309570]
[255.31016541 62.03940964]
[245.38626099 73.14640808]
[229.93145752 69.76121521]
[215.58100891 74.12753296]
[209.62033081 84.64201355]
[197.71310425 88.40313721]
[186.06990051 82.87783813]
[171.66212463 87.05109406]
[157.25436401 91.22435760]
[142.84658813 95.39762115]
[128.43881226 99.57088470]
[114.03104401 103.74414825]
[105.76038361 116.25798798]
[107.56843567 131.14862061]
[109.37648773 146.03924561]
[111.18453979 160.92988586]
[115.31961060 169.05641174]
[112.91551971 176.03239441]
[114.52349854 190.94595337]
[116.13147736 205.85952759]
[117.73945618 220.77308655]
[119.34742737 235.68664551]
[120.95540619 250.60021973]
[122.56338501 265.51379395]
[124.17136383 280.42733765]
[125.77934265 295.34091187]
[127.38731384 310.25448608]
[128.99530029 325.16802979]
[130.60327148 340.08160400]
[132.21124268 354.99517822]
[133.81922913 369.90872192]
[145.02392578 384.53091431]
[137.28910828 400.29089355]
[139.09716797 415.18154907]
[141.00512695 430.05969238]
[143.01292419 444.92471313]
[145.02072144 459.78973389]
[147.02851868 474.65475464]
[149.03631592 489.51977539]
[153.28012085 497.59005737]
[150.96989441 504.59768677]
[152.77795410 519.48828125]
[154.58599854 534.37896729]
[156.39404297 549.26959229]
[158.20210266 564.16021729]
[160.01014709 579.05084229]
[172.16722107 588.78961182]
[173.78871155 603.91656494]
[164.42938232 615.44647217]
[166.23742676 630.33709717]
[168.04548645 645.22772217]
[169.85353088 660.11834717]
[171.66157532 675.00897217]
[173.46963501 689.89965820]
[188.12161255 693.94787598]
[200.10600281 703.29895020]
[207.59529114 716.52685547]
[209.44741821 731.61456299]
[205.37992859 746.26123047]
[196.01309204 758.23327637]
[182.77529907 765.70520020]
[167.68519592 767.53747559]
[153.04391479 763.45068359]
[141.08416748 754.06811523]
[133.62969971 740.82049561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 222]
[4 221]
[5 220]
[6 219]
[7 218]
[8 217]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 209]
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[23 202]
[24 201]
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 184]
[42 183]
[43 182]
[44 181]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[55 84]
[56 83]
[57 82]
[58 81]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[94 130]
[95 129]
[99 126]
[100 125]
[101 124]
[102 123]
[108 118]
[109 117]
[110 116]
[111 115]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[157 172]
[158 171]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
