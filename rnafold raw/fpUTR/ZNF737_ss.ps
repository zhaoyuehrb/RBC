%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGAAGCGGAAGGCUUCCGGGUUUUGCGGGGCCUUUGUCUCUGCAGCCGGAGCUCCAGGUCUUGUCUUCACUGCUGUGUGUCCUCUGCUCCUAGAGGCCCAGCCUCUGUGGCCCUGUGUCCUGCAGGUAUUGGGAGAUCCACAGCUAAGACGCCCGGGAGCCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[123.72807312 315.29479980]
[113.04458618 326.00546265]
[99.57328033 332.88873291]
[84.63394928 335.27023315]
[69.69019318 332.91665649]
[56.20604706 326.05859375]
[45.50254822 315.36791992]
[38.62831879 301.89202881]
[36.25682831 286.95111084]
[38.62040710 272.00891113]
[45.48749924 258.52935791]
[56.18533325 247.83303833]
[69.66584778 240.96783447]
[84.60836029 238.60635376]
[86.94201660 223.78900146]
[89.27567291 208.97164917]
[91.60932922 194.15429688]
[93.94299316 179.33694458]
[96.27664948 164.51957703]
[98.61030579 149.70222473]
[100.94396973 134.88487244]
[103.27762604 120.06751251]
[92.00360870 110.17324829]
[77.61454773 114.41059113]
[63.22549438 118.64793396]
[58.36617279 123.19509888]
[52.77830124 124.40332031]
[48.26311111 122.77329254]
[33.73566055 126.50868988]
[19.20820808 130.24407959]
[4.68075705 133.97947693]
[-9.84669399 137.71485901]
[-24.34118271 141.57618713]
[-38.80161285 145.56315613]
[-53.26204681 149.55012512]
[-64.38220215 161.60310364]
[-80.31881714 157.73577881]
[-84.67768097 141.92652893]
[-72.97475433 130.43855286]
[-57.24901199 135.08969116]
[-42.78858185 131.10272217]
[-28.32814980 127.11575317]
[-22.70043182 122.29376984]
[-13.58208561 123.18740845]
[0.94536567 119.45201874]
[15.47281742 115.71662903]
[30.00026894 111.98123932]
[44.52772141 108.24584198]
[58.98815155 104.25888062]
[73.37720490 100.02153778]
[87.76626587 95.78419495]
[100.15635681 87.32926941]
[109.34790039 75.47534943]
[111.68974304 59.82842255]
[125.60311890 54.51173401]
[134.79466248 42.65781403]
[143.98622131 30.80389404]
[153.17776489 18.94997406]
[162.36930847 7.09605312]
[164.71115112 -8.55087471]
[178.62452698 -13.86756229]
[187.81608582 -25.72148323]
[185.82608032 -36.44940186]
[189.99717712 -46.29316711]
[198.72262573 -52.08199310]
[208.97380066 -52.09737015]
[218.57121277 -63.62514114]
[228.16864014 -75.15291595]
[237.76606750 -86.68067932]
[247.36347961 -98.20845032]
[256.96090698 -109.73622131]
[254.85078430 -118.97534180]
[257.20950317 -128.01176453]
[263.38119507 -134.83633423]
[271.87731934 -137.99267578]
[280.73422241 -136.88690186]
[290.91864014 -147.89953613]
[301.10302734 -158.91215515]
[311.28744507 -169.92478943]
[321.47183228 -180.93740845]
[331.65621948 -191.95004272]
[335.34545898 -207.33511353]
[349.66729736 -211.42584229]
[359.85171509 -222.43846130]
[370.03610229 -233.45109558]
[380.12454224 -244.55169678]
[390.11630249 -255.73942566]
[400.10803223 -266.92715454]
[397.00653076 -292.37939453]
[420.74032593 -309.65145874]
[426.80963135 -323.36871338]
[432.87896729 -337.08596802]
[428.96340942 -349.39395142]
[434.32165527 -360.70343018]
[445.58087158 -365.17172241]
[451.88735962 -378.78158569]
[458.19384766 -392.39144897]
[464.50030518 -406.00128174]
[470.80679321 -419.61114502]
[477.11328125 -433.22100830]
[483.41976929 -446.83087158]
[484.59304810 -463.74417114]
[501.17019653 -467.29879761]
[509.17489624 -452.35354614]
[497.02963257 -440.52438354]
[490.72314453 -426.91452026]
[484.41665649 -413.30465698]
[478.11016846 -399.69482422]
[471.80368042 -386.08496094]
[465.49722290 -372.47509766]
[459.19073486 -358.86523438]
[461.71286011 -341.51000977]
[446.59622192 -331.01666260]
[440.52691650 -317.29940796]
[434.45758057 -303.58212280]
[445.20135498 -293.11450195]
[458.75598145 -299.53884888]
[472.31060791 -305.96319580]
[485.86520386 -312.38757324]
[499.41983032 -318.81192017]
[506.14480591 -333.37744141]
[521.75921631 -337.06103516]
[534.28509521 -327.03692627]
[534.11358643 -310.99481201]
[521.37634277 -301.24078369]
[505.84417725 -305.25729370]
[492.28958130 -298.83294678]
[478.73495483 -292.40859985]
[465.18032837 -285.98422241]
[451.62573242 -279.55987549]
[448.13964844 -267.89883423]
[440.69714355 -259.02838135]
[430.87341309 -254.10662842]
[420.49252319 -253.53082275]
[411.29574585 -256.93542480]
[401.30401611 -245.74768066]
[391.31228638 -234.55995178]
[389.19610596 -227.45751953]
[381.04873657 -223.26669312]
[370.86434937 -212.25405884]
[360.67993164 -201.24143982]
[357.71914673 -186.64407349]
[342.66885376 -181.76564026]
[332.48446655 -170.75302124]
[322.30004883 -159.74038696]
[312.11566162 -148.72775269]
[301.93124390 -137.71513367]
[291.74685669 -126.70249939]
[289.00665283 -106.26075745]
[268.48867798 -100.13880157]
[258.89126587 -88.61103058]
[249.29383850 -77.08325958]
[239.69641113 -65.55548859]
[230.09898376 -54.02772141]
[220.50157166 -42.49995041]
[218.65014648 -23.26832581]
[199.66999817 -16.52993393]
[190.47845459 -4.67601347]
[188.79405212 10.12304306]
[174.22323608 16.28760147]
[165.03169250 28.14152145]
[155.84013367 39.99544144]
[146.64859009 51.84936523]
[137.45704651 63.70328522]
[135.77264404 78.50234222]
[121.20182037 84.66690063]
[112.01027679 96.52082062]
[118.09498596 122.40116882]
[115.76132202 137.21852112]
[113.42766571 152.03588867]
[111.09400940 166.85324097]
[108.76034546 181.67059326]
[106.42668915 196.48794556]
[104.09303284 211.30531311]
[101.75936890 226.12266541]
[99.42571259 240.94001770]
[112.91903687 247.77999878]
[123.63685608 258.45629883]
[130.52912903 271.92300415]
[132.92065430 286.86071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 51]
[24 50]
[25 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 42]
[34 41]
[35 40]
[52 167]
[53 166]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[61 158]
[62 157]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[76 148]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[83 141]
[84 140]
[85 139]
[86 137]
[87 136]
[88 135]
[90 115]
[91 114]
[92 113]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
