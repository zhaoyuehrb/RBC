%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUGCUCGGGGGCGGGGCCUUGCCGCUGCGGAGGCCGGAGACGCGGCGGCGCUGGACGCGGAGGCGCUGGGCGCACGGCGCGGAGCCGGCCGGAGCUCGAGGCCGGCGGCGGCGGGAGAGCGACCCGGGCGGCCUCGUAGCGGGGCCCCGGAUCCCCGAGUGGCGGCCGGAGCCUCGAAAAGAGAUUCUCAGCGCUGAUUUUGAG\
) } def
/len { sequence length } bind def

/coor [
[307.34976196 402.15893555]
[298.79281616 389.83911133]
[290.23583984 377.51928711]
[281.67886353 365.19943237]
[273.12191772 352.87960815]
[264.56494141 340.55975342]
[256.00799561 328.23992920]
[247.45101929 315.92010498]
[238.89405823 303.60025024]
[230.33709717 291.28042603]
[221.78012085 278.96057129]
[213.22315979 266.64074707]
[204.66619873 254.32090759]
[195.92324829 242.13235474]
[186.99633789 230.07789612]
[178.06941223 218.02342224]
[169.14250183 205.96896362]
[160.21559143 193.91448975]
[151.28866577 181.86001587]
[142.36175537 169.80555725]
[133.43484497 157.75108337]
[124.50791931 145.69662476]
[115.58100891 133.64215088]
[106.65409088 121.58769226]
[86.97283173 118.45529938]
[77.43044281 100.95938873]
[63.08255005 96.58470154]
[48.73465347 92.21001434]
[33.27787399 95.58618164]
[23.36045456 84.47338867]
[18.26962662 85.65491486]
[13.69312763 84.84457397]
[10.30409431 82.57248688]
[8.46735477 79.55924988]
[-5.66655922 74.53605652]
[-19.80047226 69.51286316]
[-33.93438721 64.48966980]
[-48.06830215 59.46647263]
[-62.20221329 54.44327927]
[-74.98146820 63.04542542]
[-90.19769287 62.47991943]
[-102.02336121 53.17306519]
[-106.05295563 38.85872269]
[-120.18686676 33.83552551]
[-134.32078552 28.81233215]
[-148.45469666 23.78913879]
[-164.04911804 26.45829773]
[-173.45046997 14.90563869]
[-187.58438110 9.88244438]
[-201.75601196 4.96664762]
[-215.96452332 0.15853080]
[-230.17304993 -4.64958572]
[-244.38156128 -9.45770264]
[-258.59008789 -14.26581955]
[-274.14221191 -11.36030293]
[-283.71780396 -22.76895523]
[-299.26992798 -19.86343956]
[-308.84552002 -31.27209282]
[-323.05401611 -36.08020782]
[-337.26254272 -40.88832474]
[-353.22872925 -37.14491653]
[-364.25491333 -49.28391266]
[-358.99832153 -64.81774902]
[-342.86645508 -67.76655579]
[-332.45443726 -55.09684372]
[-318.24591064 -50.28872681]
[-304.03738403 -45.48060989]
[-289.50155640 -48.73003769]
[-278.90966797 -36.97747421]
[-264.37384033 -40.22689819]
[-253.78196716 -28.47433853]
[-239.57344055 -23.66622162]
[-225.36492920 -18.85810471]
[-211.15640259 -14.04998779]
[-196.94789124 -9.24187183]
[-189.60205078 -10.07580280]
[-182.56118774 -4.25146961]
[-168.42727661 0.77172476]
[-153.84379578 -2.25672698]
[-143.43150330 9.65522480]
[-129.29759216 14.67841911]
[-115.16367340 19.70161247]
[-101.02976227 24.72480774]
[-88.87035370 16.16403580]
[-73.82360077 16.40764046]
[-61.66331863 25.57175064]
[-57.17901993 40.30936432]
[-43.04510498 45.33255768]
[-28.91119194 50.35575104]
[-14.77727890 55.37894821]
[-0.64336485 60.40214157]
[13.49054909 65.42533112]
[27.73514366 70.12549591]
[42.16566849 66.43641663]
[53.10934448 77.86211395]
[67.45723724 82.23680115]
[81.80513763 86.61149597]
[91.00014496 79.28025818]
[102.63416290 77.56417084]
[109.23017883 64.09225464]
[115.82620239 50.62033844]
[122.42222595 37.14842224]
[129.01824951 23.67650795]
[135.61425781 10.20459270]
[142.21028137 -3.26732278]
[148.80630493 -16.73923874]
[147.92564392 -32.53591537]
[160.47134399 -40.56427002]
[159.59068298 -56.36094666]
[172.13638306 -64.38930511]
[173.10008240 -73.47599030]
[178.93609619 -78.01447296]
[185.73580933 -91.38473511]
[192.43386841 -104.80620575]
[199.02989197 -118.27812195]
[193.67074585 -133.14604187]
[200.46998596 -147.41299438]
[215.39373779 -152.61465454]
[229.58799744 -145.66496277]
[234.63157654 -130.68704224]
[227.53221130 -116.56704712]
[212.50180054 -111.68210602]
[205.90579224 -98.21018982]
[205.78778076 -90.81810760]
[199.10607910 -84.58502197]
[192.30636597 -71.21475983]
[185.60829163 -57.79328156]
[186.96075439 -42.96020889]
[173.94326782 -33.96825027]
[175.29571533 -19.13517570]
[162.27822876 -10.14321804]
[155.68220520 3.32869792]
[149.08618164 16.80061340]
[142.49015808 30.27252960]
[135.89413452 43.74444580]
[129.29811096 57.21636200]
[122.70209503 70.68827820]
[116.10607910 84.16019440]
[121.44509888 92.89978790]
[122.37639618 103.09873199]
[118.70855713 112.66077423]
[127.63547516 124.71524048]
[136.56239319 136.76971436]
[145.48930359 148.82417297]
[154.41621399 160.87864685]
[163.34313965 172.93310547]
[172.27005005 184.98757935]
[181.19697571 197.04203796]
[190.12388611 209.09651184]
[199.05079651 221.15097046]
[207.97772217 233.20544434]
[213.88414001 236.18753052]
[216.93730164 240.98545837]
[216.98603821 245.76394653]
[225.54299927 258.08377075]
[234.09996033 270.40362549]
[242.65692139 282.72344971]
[251.21389771 295.04330444]
[259.77084351 307.36312866]
[268.32781982 319.68295288]
[276.88479614 332.00280762]
[285.44174194 344.32263184]
[293.99871826 356.64248657]
[302.55566406 368.96231079]
[311.11264038 381.28213501]
[319.66961670 393.60198975]
[329.39834595 405.01916504]
[340.20422363 415.42263794]
[353.09329224 415.95919800]
[361.87957764 424.84939575]
[362.23962402 436.94256592]
[372.88638306 447.50885010]
[383.53317261 458.07513428]
[403.23532104 462.33010864]
[407.50292969 481.18759155]
[418.46545410 491.42590332]
[429.42800903 501.66418457]
[445.44625854 502.55569458]
[454.61862183 515.71801758]
[449.90884399 531.05419922]
[434.92987061 536.79956055]
[421.17227173 528.54681396]
[419.18969727 512.62670898]
[408.22717285 502.38842773]
[397.26461792 492.15014648]
[387.12121582 493.41610718]
[377.75958252 488.79125977]
[372.37954712 479.58697510]
[372.96688843 468.72189331]
[362.32009888 458.15560913]
[351.67333984 447.58932495]
[334.48959351 444.03424072]
[329.80075073 426.22854614]
[318.99484253 415.82504272]
[322.71871948 430.35546875]
[320.29244995 445.15792847]
[312.12469482 457.73919678]
[299.59121704 465.98007202]
[284.80313110 468.49252319]
[270.25128174 464.85336304]
[258.38671875 455.67556763]
[251.20790100 442.50497437]
[249.92396545 427.56002808]
[254.75120544 413.35797119]
[264.87652588 402.29101562]
[278.59445190 396.22317505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[26 97]
[27 96]
[28 95]
[30 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[43 83]
[44 82]
[45 81]
[46 80]
[48 78]
[49 77]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[56 69]
[58 67]
[59 66]
[60 65]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[108 129]
[110 127]
[112 126]
[113 125]
[114 123]
[115 122]
[167 194]
[168 193]
[171 191]
[172 190]
[173 189]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
