%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCUAGCGGCGCCGGUGAGUCCGCGUGUGGAAGUCUGUGAGGCGCAGAGGUGGGGCAGGCCGUCUGGCUAGCUAGGCGGCUGGGAGCGUUUUCGUGGCGGGGAACGGAGGUUGAAUUGCCCUGCCUGGGCUCAUAGGGAAGGAGGAUGUGAAGGAGCUUGUGAAGGCAGAGGAAGAUUAUUGAAUAAUAAAAUACAGUUUUGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[164.15444946 149.86370850]
[151.67465210 141.54176331]
[139.19485474 133.21981812]
[126.71506500 124.89787292]
[114.23526764 116.57593536]
[101.75547791 108.25399017]
[101.56390381 113.43465424]
[100.41341400 118.60755157]
[98.30794525 123.63843536]
[96.73703003 139.38145447]
[83.10141754 145.37474060]
[74.50285339 157.66557312]
[65.90428925 169.95640564]
[57.30572510 182.24725342]
[48.79889679 194.60176086]
[40.38428116 207.01925659]
[31.96966171 219.43675232]
[33.57271957 235.39950562]
[21.99184227 246.50189209]
[6.11088324 244.22709656]
[-1.88764238 230.32014465]
[4.13204908 215.44926453]
[19.55216599 211.02212524]
[27.96678352 198.60462952]
[36.38140106 186.18713379]
[37.53136063 178.88650513]
[45.01488876 173.64868164]
[53.61345291 161.35784912]
[62.21201324 149.06701660]
[70.81057739 136.77616882]
[71.76647186 121.91226959]
[86.01710510 115.03987122]
[71.67905426 119.44670105]
[59.78255081 110.31034088]
[60.34072113 95.32072449]
[72.88376617 87.09442139]
[86.85442352 92.55545807]
[79.19382477 79.65913391]
[71.53322601 66.76280212]
[63.87263107 53.86647797]
[56.21203613 40.97014999]
[48.55143738 28.07382202]
[40.89083862 15.17749596]
[33.81761169 9.39759254]
[33.21383667 2.03164101]
[19.63315010 -6.08473396]
[20.00716209 -20.97464371]
[12.53942108 -33.98359680]
[7.02320719 -37.62817001]
[4.54730797 -42.74353409]
[5.04961681 -47.49292374]
[-2.02748871 -60.71845245]
[-9.10459423 -73.94397736]
[-16.18169975 -87.16950989]
[-23.25880432 -100.39503479]
[-30.33591080 -113.62055969]
[-37.41301727 -126.84609222]
[-44.49011993 -140.07162476]
[-51.56722641 -153.29714966]
[-61.81261826 -164.25305176]
[-74.53465271 -172.19973755]
[-87.25669098 -180.14642334]
[-99.97872925 -188.09310913]
[-112.70075989 -196.03979492]
[-125.42279816 -203.98648071]
[-138.14483643 -211.93316650]
[-150.86686707 -219.87985229]
[-163.58891296 -227.82652283]
[-176.31094360 -235.77320862]
[-192.71006775 -235.80175781]
[-200.64923096 -250.15103149]
[-191.96130371 -264.05972290]
[-175.58369446 -263.21978760]
[-168.36425781 -248.49525452]
[-155.64222717 -240.54856873]
[-142.92018127 -232.60188293]
[-130.19815063 -224.65519714]
[-117.47611237 -216.70851135]
[-104.75408173 -208.76182556]
[-92.03204346 -200.81513977]
[-79.31000519 -192.86845398]
[-66.58796692 -184.92176819]
[-53.86593246 -176.97509766]
[-47.72051620 -181.27436829]
[-59.69620132 -190.30670166]
[-54.80645752 -204.48733521]
[-39.80886459 -204.21878052]
[-35.42967606 -189.87294006]
[-29.28425789 -194.17222595]
[-32.38836670 -208.84751892]
[-35.49247742 -223.52282715]
[-38.59658813 -238.19812012]
[-41.70069885 -252.87342834]
[-44.80480957 -267.54873657]
[-47.90892029 -282.22402954]
[-61.29000854 -290.63366699]
[-64.72385406 -306.06042480]
[-56.17321014 -319.35183716]
[-40.71102905 -322.62237549]
[-27.51074409 -313.93170166]
[-24.40385246 -298.43579102]
[-33.23361588 -285.32815552]
[-30.12950706 -270.65283203]
[-27.02539635 -255.97753906]
[-23.92128563 -241.30223083]
[-20.81717682 -226.62693787]
[-17.71306610 -211.95162964]
[-14.60895538 -197.27632141]
[-10.29735374 -211.64331055]
[4.68974590 -211.02134705]
[17.94233704 -203.99504089]
[26.86739731 -191.93920898]
[29.71862984 -177.21267700]
[25.93815994 -162.69689941]
[16.26568031 -151.23202515]
[2.59372425 -145.06132507]
[-12.40262699 -145.39213562]
[-25.79029846 -152.16070557]
[-38.34169769 -160.37425232]
[-31.26459312 -147.14872742]
[-24.18748856 -133.92320251]
[-17.11038208 -120.69766998]
[-10.03327751 -107.47213745]
[-2.95617199 -94.24661255]
[4.12093353 -81.02108765]
[11.19803905 -67.79555511]
[18.27514458 -54.57003021]
[25.54837418 -41.45133591]
[33.01611328 -28.44238472]
[46.06265640 -21.25649643]
[46.22278595 -5.43610001]
[53.78716660 7.51689863]
[61.44776535 20.41322517]
[69.10836029 33.30955124]
[76.76895905 46.20587921]
[84.42955780 59.10220718]
[92.09015656 71.99853516]
[99.75074768 84.89485931]
[110.07742310 95.77419281]
[122.55721283 104.09613800]
[135.03700256 112.41808319]
[147.51679993 120.74002838]
[159.99659729 129.06196594]
[172.47639465 137.38391113]
[187.45512390 121.10123444]
[205.16584778 107.84673309]
[225.00595093 98.06997681]
[246.30065918 92.10222626]
[268.32589722 90.14521027]
[290.33303833 92.26432037]
[311.57424927 98.38639832]
[331.32791138 108.30228424]
[348.92318726 121.67396545]
[363.76275635 138.04608154]
[375.34310913 156.86143494]
[383.27163696 177.47998047]
[387.27996826 199.20054626]
[387.23294067 221.28471375]
[402.05001831 223.62020874]
[416.86709595 225.95568848]
[431.68417358 228.29118347]
[446.78707886 221.90106201]
[459.70767212 232.00007629]
[457.15435791 248.19923401]
[441.75372314 253.83421326]
[429.34866333 243.10824585]
[414.53161621 240.77276611]
[399.71453857 238.43727112]
[384.89746094 236.10179138]
[382.44244385 245.38586426]
[379.25146484 254.44386292]
[375.34497070 263.21752930]
[370.74801636 271.65048218]
[365.49008179 279.68844604]
[359.60488892 287.27975464]
[353.13021851 294.37554932]
[346.10763550 300.93017578]
[338.58221436 306.90148926]
[330.60229492 312.25103760]
[322.21911621 316.94436646]
[313.48651123 320.95126343]
[304.46057129 324.24594116]
[295.19931030 326.80709839]
[285.76223755 328.61825562]
[276.20996094 329.66766357]
[266.60388184 329.94854736]
[257.00570679 329.45901489]
[247.47720337 328.20214844]
[238.07954407 326.18594360]
[228.87318420 323.42327881]
[219.91729736 319.93188477]
[211.26948547 315.73410034]
[202.98533630 310.85687256]
[195.11814880 305.33145142]
[187.71850586 299.19329834]
[180.83403015 292.48184204]
[174.50900269 285.24014282]
[168.78413391 277.51470947]
[163.69628906 269.35513306]
[159.27819824 260.81381226]
[155.55834961 251.94563293]
[152.56068420 242.80757141]
[150.30455017 233.45831299]
[148.80451965 223.95794678]
[148.07031250 214.36752319]
[148.10668945 204.74865723]
[148.91349792 195.16317749]
[150.48564148 185.67269897]
[152.81306458 176.33824158]
[155.88087463 167.21978760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[9 32]
[11 30]
[12 29]
[13 28]
[14 27]
[15 25]
[16 24]
[17 23]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[42 133]
[43 132]
[45 131]
[47 129]
[48 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
