%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCGGGGAGCCACCGCCGCGCCGCCGUUUGGGCCGGGAAGCGAUGUAGUAGCUGCCAGGCUGUCCCCCGCCCUGCCCGGCCCGAGCCCCGCGGGCCGCCGCCGCCACCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[90.93233490 317.93405151]
[90.13400269 302.95529175]
[89.33567047 287.97656250]
[88.53733826 272.99783325]
[86.04926300 270.33004761]
[84.79801178 266.27609253]
[85.44293213 261.46392822]
[88.32172394 256.80151367]
[88.72103119 241.80682373]
[78.31860352 231.20846558]
[78.50995636 215.99603271]
[89.69702148 205.15687561]
[90.09632874 190.16220093]
[79.69390106 179.56384277]
[79.88525391 164.35140991]
[91.07231140 153.51225281]
[83.67655945 140.58351135]
[91.77848816 126.99420166]
[92.17779541 111.99951935]
[85.68112946 99.61869049]
[92.82752228 87.60117340]
[93.22682953 72.60649109]
[90.29817963 63.81558609]
[93.84164429 57.21942139]
[94.63997650 42.24068069]
[95.43830872 27.26194191]
[96.23664093 12.28320122]
[86.22989655 -5.11780119]
[97.16670227 -20.97182465]
[97.16670227 -35.97182465]
[97.16670227 -50.97182465]
[97.16670227 -65.97182465]
[97.16670227 -80.97182465]
[97.16670227 -95.97182465]
[97.16670227 -110.97182465]
[97.16670227 -125.97182465]
[97.16670227 -140.97181702]
[97.16670227 -155.97181702]
[97.16670227 -170.97181702]
[97.16670227 -185.97181702]
[83.28675079 -198.71693420]
[83.00069427 -217.24272156]
[96.02877808 -229.96873474]
[95.23044586 -244.94747925]
[94.43211365 -259.92620850]
[81.13213348 -264.90310669]
[70.78143311 -274.56170654]
[64.93351746 -287.40689087]
[64.44863892 -301.46875000]
[69.36736298 -314.60479736]
[78.90950012 -324.82632446]
[91.59761810 -330.59945679]
[91.19831085 -345.59414673]
[90.79900360 -360.58883667]
[90.39969635 -375.58352661]
[90.00038910 -390.57818604]
[80.96910095 -404.26644897]
[88.54878998 -418.80880737]
[104.94212341 -419.24536133]
[113.28504944 -405.12701416]
[104.99507141 -390.97750854]
[105.39437866 -375.98281860]
[105.79368591 -360.98812866]
[106.19299316 -345.99346924]
[106.59230042 -330.99877930]
[121.24407959 -324.77075195]
[131.77435303 -312.75311279]
[136.05473328 -297.29858398]
[133.18693542 -281.46185303]
[123.69078064 -268.39602661]
[109.41085815 -260.72454834]
[110.20919037 -245.74580383]
[111.00752258 -230.76707458]
[121.06397247 -225.06959534]
[127.13348389 -215.09167480]
[127.57775116 -203.30039978]
[122.16674042 -192.67893982]
[112.16670227 -185.97181702]
[112.16670227 -170.97181702]
[112.16670227 -155.97181702]
[112.16670227 -140.97181702]
[112.16670227 -125.97182465]
[112.16670227 -110.97182465]
[112.16670227 -95.97182465]
[112.16670227 -80.97182465]
[112.16670227 -65.97182465]
[112.16670227 -50.97182465]
[112.16670227 -35.97182465]
[112.16670227 -20.97182465]
[120.11869049 -14.30845261]
[123.08538818 -4.13634062]
[119.82932281 6.17906761]
[111.21538544 13.08153343]
[110.41705322 28.06027412]
[109.61872101 43.03901291]
[108.82038879 58.01775360]
[108.22151184 73.00579834]
[107.82220459 88.00048065]
[114.31887054 100.38130951]
[107.17247772 112.39882660]
[106.77317047 127.39350891]
[114.14035797 141.39476013]
[106.06699371 153.91156006]
[116.66131592 165.33074951]
[116.04276276 180.53181458]
[105.09101105 190.56150818]
[104.69170380 205.55618286]
[115.28602600 216.97538757]
[114.66746521 232.17643738]
[103.71571350 242.20613098]
[103.31640625 257.20080566]
[103.51608276 272.19949341]
[104.31441498 287.17822266]
[105.11274719 302.15698242]
[105.91107941 317.13571167]
[112.79183960 332.63058472]
[99.80728912 343.53186035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[8 111]
[9 110]
[12 107]
[13 106]
[16 103]
[18 101]
[19 100]
[21 98]
[22 97]
[24 96]
[25 95]
[26 94]
[27 93]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[43 73]
[44 72]
[45 71]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
