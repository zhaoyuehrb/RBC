%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCCGCCAGCUCGGCCGCACGUCAGGGCGCGGGAGCGCGGAGCGAGUUUGGUUGCACUUACACCGGUACUUAAGCGCGGACCGGCGUGUCCUUGGACUUAGAGAGUGGGGACGUCCGGCUUCGGAGCGGGAGUGUUCGUUGUGCCAGCGACUAAAAAGAGAAUUAAAU\
) } def
/len { sequence length } bind def

/coor [
[-78.99024200 338.88940430]
[-90.21087646 348.84417725]
[-91.76625061 361.67327881]
[-101.34890747 369.73339844]
[-113.45316315 369.10821533]
[-124.85477448 378.85519409]
[-136.25639343 388.60214233]
[-147.65800476 398.34909058]
[-150.24205017 404.50149536]
[-154.86407471 407.88989258]
[-159.66217041 408.23532104]
[-171.41415405 417.55685425]
[-183.16613770 426.87838745]
[-194.91810608 436.19992065]
[-197.72640991 442.25323486]
[-202.46980286 445.46957397]
[-207.27735901 445.63848877]
[-219.36383057 454.52203369]
[-231.45030212 463.40554810]
[-243.53678894 472.28906250]
[-250.07417297 486.69647217]
[-264.91168213 487.99957275]
[-267.04986572 503.65853882]
[-279.68475342 513.15252686]
[-295.32025146 510.84887695]
[-304.68011475 498.11431885]
[-302.21127319 482.50405884]
[-289.37850952 473.27935791]
[-273.79519653 475.91308594]
[-268.12231445 462.14111328]
[-252.42031860 460.20260620]
[-240.33383179 451.31906128]
[-228.24736023 442.43554688]
[-216.16088867 433.55200195]
[-204.23963928 424.44793701]
[-192.48767090 415.12640381]
[-180.73568726 405.80487061]
[-168.98371887 396.48333740]
[-157.40496826 386.94747925]
[-146.00334167 377.20053101]
[-134.60173035 367.45355225]
[-123.20011902 357.70660400]
[-118.27155304 340.88079834]
[-100.16564178 337.62353516]
[-88.94501495 327.66876221]
[-93.90921021 304.80627441]
[-84.29857635 283.34872437]
[-63.73302078 271.71563721]
[-40.16011429 274.56103516]
[-31.16593742 262.55667114]
[-22.17175865 250.55230713]
[-13.17757988 238.54794312]
[-4.18340206 226.54357910]
[4.81077576 214.53921509]
[13.80495358 202.53485107]
[22.79913139 190.53048706]
[31.79331017 178.52612305]
[27.23001480 164.37287903]
[31.93135834 150.07737732]
[44.29346848 141.18740845]
[59.69792175 141.28234863]
[68.69210052 129.27798462]
[77.68627930 117.27362823]
[86.68045807 105.26926422]
[88.53667450 91.41119385]
[101.31517792 85.73656464]
[110.30935669 73.73219299]
[119.30353546 61.72783279]
[121.05449677 43.41477966]
[137.41583252 37.11358643]
[146.18795776 24.94601631]
[154.96009827 12.77844715]
[163.73222351 0.61087793]
[161.40562439 -14.79122162]
[170.47514343 -27.00590515]
[185.17303467 -29.12904549]
[193.94515991 -41.29661560]
[195.35939026 -59.63874435]
[211.60221863 -66.23944855]
[220.14933777 -78.56611633]
[228.69645691 -90.89278412]
[237.24357605 -103.21944427]
[245.67710876 -115.62410736]
[253.99633789 -128.10571289]
[262.31555176 -140.58731079]
[270.63479614 -153.06892395]
[278.83901978 -165.62641907]
[286.92752075 -178.25874329]
[295.01605225 -190.89108276]
[295.94158936 -206.68519592]
[309.32058716 -213.23130798]
[317.40911865 -225.86363220]
[325.49765015 -238.49597168]
[325.53628540 -242.92460632]
[326.86880493 -246.71600342]
[329.12924194 -249.53747559]
[331.88061523 -251.21205139]
[334.67272949 -251.72828674]
[343.66690063 -263.73266602]
[352.66107178 -275.73703003]
[361.65524292 -287.74139404]
[366.31375122 -304.04275513]
[383.26766968 -304.07897949]
[387.99578857 -287.79766846]
[373.65960693 -278.74719238]
[364.66543579 -266.74282837]
[355.67126465 -254.73847961]
[346.67709351 -242.73411560]
[338.12997437 -230.40744019]
[330.04144287 -217.77511597]
[321.95291138 -205.14277649]
[321.60592651 -190.25221252]
[307.64837646 -182.80255127]
[299.55987549 -170.17022705]
[291.47134399 -157.53788757]
[290.50894165 -150.18121338]
[283.11639404 -144.74969482]
[274.79714966 -132.26809692]
[266.47793579 -119.78648376]
[258.15872192 -107.30487823]
[257.06130981 -99.96712494]
[249.57023621 -94.67232513]
[241.02311707 -82.34565735]
[232.47599792 -70.01898956]
[223.92887878 -57.69232559]
[225.77186584 -45.71287918]
[218.71948242 -35.36604309]
[206.11273193 -32.52448273]
[197.34059143 -20.35691643]
[199.97074890 -5.74124193]
[191.24789429 6.72336578]
[175.89979553 9.38300800]
[167.12765503 21.55057716]
[158.35552979 33.71814728]
[149.58340454 45.88571548]
[151.20600891 57.89699936]
[143.96473694 68.11252594]
[131.30790710 70.72200775]
[122.31372070 82.72637177]
[113.31954193 94.73073578]
[111.46332550 108.58880615]
[98.68482208 114.26343536]
[89.69064331 126.26780701]
[80.69646454 138.27217102]
[71.70228577 150.27653503]
[76.12100220 165.03393555]
[71.06195068 179.39567566]
[58.66291046 187.92373657]
[43.79767609 187.52030945]
[34.80349731 199.52467346]
[25.80931854 211.52903748]
[16.81513977 223.53340149]
[7.82096195 235.53776550]
[-1.17321610 247.54212952]
[-10.16739464 259.54647827]
[-19.16157150 271.55084229]
[-28.15575027 283.55520630]
[-23.78744698 289.60937500]
[-20.68758011 296.39025879]
[-18.97171211 303.63595581]
[-18.70202637 311.06747437]
[-19.88508415 318.39929199]
[-22.47171783 325.35055542]
[-26.35906601 331.65570068]
[-31.39465523 337.07467651]
[-37.38237762 341.40200806]
[-44.09012604 344.47463989]
[-51.25880051 346.17803955]
[-58.61229324 346.45050049]
[-65.86815643 345.28536987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[5 42]
[6 41]
[7 40]
[8 39]
[11 38]
[12 37]
[13 36]
[14 35]
[17 34]
[18 33]
[19 32]
[20 31]
[22 29]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[61 145]
[62 144]
[63 143]
[64 142]
[66 140]
[67 139]
[68 138]
[70 135]
[71 134]
[72 133]
[73 132]
[76 129]
[77 128]
[79 125]
[80 124]
[81 123]
[82 122]
[83 120]
[84 119]
[85 118]
[86 117]
[87 115]
[88 114]
[89 113]
[91 111]
[92 110]
[93 109]
[98 108]
[99 107]
[100 106]
[101 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
