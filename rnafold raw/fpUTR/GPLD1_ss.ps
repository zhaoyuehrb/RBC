%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACCUGCUUAGAGAGAAGCGGUGGGUCUGCACCUGGAUUUUGGAGUCCCAGUGCUGCUGCAGCUCUGAGCAUUCCCACGUCACCAGAGAAGCCGGUGGGCAAUGAGAUC\
) } def
/len { sequence length } bind def

/coor [
[293.95257568 276.20126343]
[283.95739746 265.01663208]
[273.96218872 253.83200073]
[263.96697998 242.64736938]
[253.97178650 231.46273804]
[231.17117310 227.38986206]
[225.09681702 204.32241821]
[213.36933899 194.97006226]
[201.64186096 185.61772156]
[189.91439819 176.26536560]
[178.18692017 166.91302490]
[166.45945740 157.56066895]
[154.73197937 148.20832825]
[143.00450134 138.85598755]
[131.27703857 129.50363159]
[119.04361725 120.82356262]
[106.34275818 112.84308624]
[92.37920380 112.12843323]
[85.67675781 99.85778046]
[72.97589874 91.87729645]
[60.27503586 83.89681244]
[47.57417297 75.91633606]
[31.77274132 75.12555695]
[25.11274338 61.80288315]
[12.41188049 53.82240295]
[-0.28898275 45.84192276]
[-12.98984528 37.86143875]
[-28.79127693 37.07066345]
[-35.45127487 23.74798965]
[-48.15213776 15.76750755]
[-63.95357132 14.97673321]
[-70.61356354 1.65405655]
[-83.31443024 -6.32642460]
[-97.23757935 0.31808624]
[-112.53987885 -1.64228487]
[-124.33843231 -11.58199120]
[-128.86834717 -26.32930756]
[-124.68416595 -41.17842102]
[-113.12103271 -51.39102936]
[-97.86869812 -53.70833206]
[-83.79413605 -47.39088058]
[-75.38848114 -34.45455551]
[-75.33394623 -19.02728844]
[-62.63308716 -11.04680634]
[-47.74010468 -10.82684898]
[-40.17165756 3.06664491]
[-27.47079277 11.04712582]
[-12.57781219 11.26708317]
[-5.00936460 25.16057777]
[7.69149828 33.14105988]
[20.39236069 41.12154007]
[33.09322357 49.10202026]
[47.98620605 49.32197952]
[55.55465317 63.21547318]
[68.25551605 71.19595337]
[80.95638275 79.17643738]
[93.65724182 87.15691376]
[107.62079620 87.87156677]
[114.32324219 100.14221954]
[127.02410126 108.12270355]
[131.70075989 108.10227203]
[135.68728638 109.51282501]
[138.60081482 111.93360138]
[140.24668884 114.85985565]
[140.62937927 117.77616119]
[152.35685730 127.12850952]
[164.08432007 136.48085022]
[175.81179810 145.83320618]
[187.53927612 155.18554688]
[199.26673889 164.53790283]
[210.99421692 173.89024353]
[222.72167969 183.24259949]
[234.44915771 192.59494019]
[241.22525024 189.94528198]
[248.44093323 189.60913086]
[255.33361816 191.58854675]
[261.18557739 195.64259338]
[265.39871216 201.31617737]
[267.55545044 207.99099731]
[267.46020508 214.95272827]
[265.15643311 221.46754456]
[275.15161133 232.65217590]
[285.14682007 243.83680725]
[295.14202881 255.02143860]
[305.13720703 266.20608521]
[320.86557007 259.51342773]
[337.90560913 258.52346802]
[354.25662231 263.33596802]
[368.00430298 273.37045288]
[377.54489136 287.43609619]
[381.77224731 303.87295532]
[380.20611572 320.74792480]
[373.04663086 336.08212280]
[383.94653320 346.38708496]
[394.84643555 356.69204712]
[410.91625977 359.96209717]
[415.86190796 375.59771729]
[404.59573364 387.51431274]
[388.70742798 383.45312500]
[384.54147339 367.59194946]
[373.64157104 357.28698730]
[362.74166870 346.98205566]
[351.46633911 353.61865234]
[338.83087158 357.06546021]
[325.72009277 357.07369995]
[313.05398560 353.63565063]
[301.72323608 346.98559570]
[292.52658081 337.58407593]
[286.11447144 326.08575439]
[282.94314575 313.29400635]
[283.24206543 300.10476685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 85]
[2 84]
[3 83]
[4 82]
[5 81]
[7 73]
[8 72]
[9 71]
[10 70]
[11 69]
[12 68]
[13 67]
[14 66]
[15 65]
[16 60]
[17 59]
[19 57]
[20 56]
[21 55]
[22 54]
[24 52]
[25 51]
[26 50]
[27 49]
[29 47]
[30 46]
[32 44]
[33 43]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
