%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUAUUCCAGAAACAGACACUGCUACAUGUUCUUCAUAAAUUAACACCCUCAUAAAGGUAAACCAAGAAGGUUAUCCUCAAUCAUCUGGUAUCAAUAUAUAAUUAUUUUUCACAUUUCUGUUACUUUUUAAUGAGAUUUGAGGUUGUUCUGUGAUUGUUAUCAGAAUUACCAAUGCACAAAAGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-20.12981987 145.82966614]
[-24.61468887 154.99290466]
[-30.90386581 163.14294434]
[-38.77081299 169.92549133]
[-47.91966629 175.03649902]
[-57.99630737 178.23564148]
[-68.60202789 179.35742188]
[-79.30929565 178.31932068]
[-89.67900848 175.12664795]
[-99.27848053 169.87380981]
[-107.69946289 162.74188232]
[-114.57553101 153.99263000]
[-125.39794922 164.37893677]
[-136.22036743 174.76524353]
[-135.81604004 185.65615845]
[-141.36643982 194.77900696]
[-150.82685852 199.23860168]
[-160.96105957 197.77691650]
[-172.11923218 207.80165100]
[-183.27740479 217.82638550]
[-194.43557739 227.85112000]
[-192.69664001 243.27044678]
[-200.38233948 256.75042725]
[-214.53735352 263.10772705]
[-229.71879578 259.89782715]
[-240.08909607 248.35501099]
[-241.66065979 232.91772461]
[-233.82917786 219.52191162]
[-219.60603333 213.31854248]
[-204.46031189 216.69294739]
[-193.30213928 206.66821289]
[-182.14396667 196.64347839]
[-170.98579407 186.61875916]
[-166.37120056 167.85144043]
[-146.60667419 163.94282532]
[-135.78425598 153.55651855]
[-124.96183777 143.17021179]
[-125.20851135 135.67427063]
[-139.68553162 139.60057068]
[-154.16255188 143.52685547]
[-168.63958740 147.45315552]
[-183.11660767 151.37945557]
[-194.60040283 161.02944946]
[-209.12849426 164.76232910]
[-223.84176636 161.84344482]
[-235.84461975 152.84725952]
[-242.77491760 139.54420471]
[-243.26873779 124.55233765]
[-237.22892761 110.82205963]
[-225.84411621 101.05548096]
[-211.35482788 97.17468262]
[-196.61256409 99.94339752]
[-184.51721191 108.81836700]
[-169.81336975 111.78437042]
[-155.10954285 114.75037384]
[-140.40570068 117.71638489]
[-125.70186615 120.68238831]
[-125.94854736 113.18644714]
[-137.43038940 103.53414154]
[-148.91224670 93.88182831]
[-164.44467163 95.05711365]
[-175.95141602 85.10473633]
[-176.97613525 70.28968811]
[-188.45799255 60.63737869]
[-199.93984985 50.98506927]
[-211.42169189 41.33275986]
[-227.46466064 41.27831650]
[-237.31135559 28.61253548]
[-233.40824890 13.05151558]
[-218.74946594 6.53234291]
[-204.57997131 14.05596733]
[-201.76937866 29.85090828]
[-190.28753662 39.50321960]
[-178.80567932 49.15552902]
[-167.32383728 58.80783844]
[-152.55308533 57.27138901]
[-140.77136230 66.89664459]
[-139.25993347 82.39997864]
[-127.77808380 92.05228424]
[-116.29623413 101.70459747]
[-104.69876862 87.16327667]
[-89.16076660 77.47426605]
[-71.56262970 73.58392334]
[-53.96077728 75.75029755]
[-38.34746933 83.53481293]
[-26.42531967 95.87413025]
[-19.42201614 111.22142029]
[-4.60476542 108.88709259]
[10.21248436 106.55275726]
[25.02973366 104.21842957]
[39.84698486 101.88409424]
[54.66423416 99.54976654]
[58.53184509 81.67169952]
[69.14931488 66.77696991]
[84.78841400 57.29002380]
[102.90353394 54.75506973]
[106.32719421 40.15100861]
[109.75085449 25.54694939]
[113.17451477 10.94289112]
[104.63293457 -2.35436082]
[108.07728577 -17.77875710]
[121.46410370 -26.17927551]
[136.85121155 -22.57204056]
[145.10974121 -9.09715748]
[141.34001160 6.25096226]
[127.77857208 14.36655235]
[124.35491180 28.97061157]
[120.93125153 43.57466888]
[117.50759125 58.17873001]
[128.07752991 62.52848053]
[137.52923584 69.58023071]
[145.16711426 79.03588104]
[158.19842529 71.60721588]
[171.22973633 64.17855072]
[179.38682556 50.62228394]
[194.27554321 51.04098129]
[207.30685425 43.61231613]
[220.33816528 36.18365097]
[233.36946106 28.75498772]
[246.40077209 21.32632256]
[252.31892395 14.34548473]
[259.70806885 13.88465786]
[272.85980225 6.67132854]
[286.01150513 -0.54200095]
[299.16323853 -7.75533009]
[305.01663208 -22.69244957]
[320.38638306 -27.29137993]
[333.48214722 -18.02421570]
[334.25799561 -1.99993372]
[322.11871338 8.48900986]
[306.37658691 5.39639521]
[293.22485352 12.60972404]
[280.07312012 19.82305336]
[266.92138672 27.03638268]
[253.82943726 34.35762787]
[240.79812622 41.78629303]
[227.76683044 49.21495819]
[214.73551941 56.64362335]
[201.70420837 64.07228851]
[194.47920227 77.09720612]
[178.65840149 77.20985413]
[165.62709045 84.63851929]
[152.59577942 92.06718445]
[152.71914673 107.06668091]
[165.87086487 114.28000641]
[179.02259827 121.49333954]
[194.84310913 121.34575653]
[202.28137207 134.25007629]
[215.43310547 141.46340942]
[228.58482361 148.67674255]
[241.73654175 155.89007568]
[254.88827515 163.10339355]
[268.04000854 170.31672668]
[283.04037476 166.11837769]
[296.27536011 173.62107849]
[300.18539429 187.94752502]
[316.55981445 187.04714966]
[325.29898071 200.92369080]
[317.41284180 215.30216980]
[301.01391602 215.39122009]
[292.97207642 201.09924316]
[278.78939819 205.50238037]
[265.34893799 198.37438965]
[260.82666016 183.46846008]
[247.67494202 176.25512695]
[234.52322388 169.04179382]
[221.37149048 161.82846069]
[208.21977234 154.61514282]
[195.06803894 147.40180969]
[180.18823242 148.06533813]
[171.80926514 134.64506531]
[158.65754700 127.43173218]
[145.50581360 120.21840668]
[140.27676392 128.64424133]
[133.52618408 135.80680847]
[125.54563904 141.43972778]
[116.67147827 145.34167480]
[107.27068329 147.38346863]
[97.72572327 147.51220703]
[88.41898346 145.75221252]
[79.71747589 142.20286560]
[71.95834351 137.03352356]
[65.43582916 130.47563171]
[60.39011002 122.81247711]
[56.99856567 114.36701202]
[42.18131638 116.70134735]
[27.36406708 119.03567505]
[12.54681683 121.37001038]
[-2.27043343 123.70433807]
[-17.08768272 126.03867340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 37]
[13 36]
[14 35]
[18 33]
[19 32]
[20 31]
[21 30]
[58 80]
[59 79]
[60 78]
[63 75]
[64 74]
[65 73]
[66 72]
[87 190]
[88 189]
[89 188]
[90 187]
[91 186]
[92 185]
[96 109]
[97 108]
[98 107]
[99 106]
[112 143]
[113 142]
[114 141]
[116 139]
[117 138]
[118 137]
[119 136]
[120 135]
[122 134]
[123 133]
[124 132]
[125 131]
[144 173]
[145 172]
[146 171]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
