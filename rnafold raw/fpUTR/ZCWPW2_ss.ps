%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGACGGGGCGGGGCCGCGGGACGCCAGGAGGCGGAGGCGGAGUGGAGUUAGAUUCAUCCCAGUAGAACGCCUGCCUCUUUAGUGACUACAGACCUCACUUCCCUUCUCUGGAGUUUUGGAGUCUAUUUUCUUCAUGGAAUUUUGCUAGGAACAAAAGAAAAGUCUAACUCCAUUAAAUGCCUUA\
) } def
/len { sequence length } bind def

/coor [
[-130.46838379 490.80279541]
[-137.64218140 503.97613525]
[-144.81599426 517.14947510]
[-151.98980713 530.32275391]
[-145.49420166 544.29107666]
[-148.43470764 559.23120117]
[-159.47802734 569.45416260]
[-174.24668884 571.19329834]
[-181.42050171 584.36657715]
[-181.22541809 600.18658447]
[-194.10736084 607.66357422]
[-201.28115845 620.83691406]
[-208.45497131 634.01019287]
[-210.72007751 650.81219482]
[-227.49244690 653.28680420]
[-234.51344299 637.85498047]
[-221.62829590 626.83642578]
[-214.45448303 613.66308594]
[-207.28067017 600.48974609]
[-207.98887634 585.61199951]
[-194.59382629 577.19281006]
[-187.42001343 564.01947021]
[-193.97178650 550.66986084]
[-191.37574768 535.84674072]
[-180.42102051 525.27093506]
[-165.16313171 523.14898682]
[-157.98931885 509.97564697]
[-150.81550598 496.80233765]
[-143.64169312 483.62899780]
[-148.55360413 477.23883057]
[-151.37812805 469.65405273]
[-151.84622192 461.54013062]
[-149.89649963 453.61523438]
[-145.68251038 446.58666992]
[-139.56077576 441.08779907]
[-132.06069946 437.62091064]
[-123.83883667 436.51138306]
[-115.62140656 437.87734985]
[-107.17160797 425.48376465]
[-98.72180939 413.09017944]
[-90.27200317 400.69659424]
[-81.82220459 388.30300903]
[-73.37240601 375.90942383]
[-73.36194611 356.58422852]
[-55.10016251 348.07711792]
[-47.06697083 335.40951538]
[-39.03377914 322.74194336]
[-31.00058746 310.07434082]
[-22.96739769 297.40676880]
[-14.93420601 284.73916626]
[-6.90101528 272.07159424]
[1.13217604 259.40399170]
[9.16536713 246.73640442]
[17.19855881 234.06880188]
[25.23174858 221.40121460]
[33.26494217 208.73362732]
[41.29813004 196.06604004]
[49.33132172 183.39845276]
[41.68271255 161.63728333]
[52.67018890 141.06053162]
[75.51271057 135.18177795]
[81.79543304 121.56094360]
[88.07816315 107.94010162]
[86.99305725 94.00043488]
[98.30099487 85.77717590]
[104.58372498 72.15633392]
[110.86644745 58.53548813]
[117.14917755 44.91464615]
[123.43190002 31.29380417]
[129.71463013 17.67296219]
[135.99736023 4.05211926]
[130.76757812 -10.62055016]
[137.33319092 -24.34452057]
[151.35356140 -29.23988914]
[157.63629150 -42.86073303]
[145.72277832 -52.07344437]
[136.16278076 -63.70078278]
[129.43330383 -77.15756226]
[125.86892700 -91.76744843]
[125.64532471 -106.79695892]
[128.77047729 -121.49227905]
[135.08451843 -135.11708069]
[144.26785278 -146.98937988]
[155.85736084 -156.51571655]
[169.26979065 -163.22082520]
[183.83100891 -166.77130127]
[198.80996704 -166.99218750]
[213.45541382 -163.87562561]
[219.73814392 -177.49645996]
[226.02087402 -191.11730957]
[232.30358887 -204.73815918]
[231.05787659 -220.51023865]
[243.41456604 -228.82656860]
[249.69729614 -242.44740295]
[255.98002625 -256.06823730]
[262.26275635 -269.68908691]
[261.01702881 -285.46118164]
[273.37371826 -293.77749634]
[279.65646362 -307.39834595]
[285.93917847 -321.01919556]
[286.69549561 -330.14169312]
[292.44119263 -334.81286621]
[283.26596069 -347.06332397]
[280.84622192 -362.17633057]
[285.73797607 -376.67907715]
[296.81719971 -387.23889160]
[311.53790283 -391.42922974]
[326.51742554 -388.28717041]
[338.31356812 -378.53472900]
[344.21566772 -364.41299438]
[342.86743164 -349.16696167]
[334.57870483 -336.30014038]
[321.25418091 -328.76916504]
[305.95574951 -328.30462646]
[299.56002808 -314.73645020]
[293.27728271 -301.11560059]
[286.99456787 -287.49478149]
[288.68966675 -272.69692993]
[275.88360596 -263.40637207]
[269.60086060 -249.78552246]
[263.31814575 -236.16467285]
[257.03540039 -222.54383850]
[258.73052979 -207.74600220]
[245.92443848 -198.45542908]
[239.64170837 -184.83457947]
[233.35897827 -171.21374512]
[227.07626343 -157.59289551]
[238.95376587 -148.47552490]
[248.50907898 -136.93800354]
[255.26046753 -123.55691528]
[258.86648560 -109.00190735]
[259.14315796 -94.00218201]
[256.07339478 -79.30995941]
[249.80798340 -65.66273499]
[240.65823364 -53.74629974]
[229.08050537 -44.16025543]
[215.65336609 -37.38783646]
[201.04879761 -33.77157211]
[185.99847412 -33.49594879]
[171.25714111 -36.57800674]
[164.97441101 -22.95716286]
[170.35169983 -9.11446190]
[164.17414856 4.78850889]
[149.61819458 10.33484554]
[143.33546448 23.95568848]
[137.05274963 37.57653046]
[130.77001953 51.19737244]
[124.48728943 64.81821442]
[118.20456696 78.43905640]
[111.92183685 92.05989838]
[113.00694275 105.99956512]
[101.69900513 114.22282410]
[95.41627502 127.84366608]
[89.13355255 141.46450806]
[94.10549164 146.86299133]
[97.57608795 153.30474854]
[99.33892822 160.38374329]
[99.29489136 167.65679932]
[97.45759583 174.67135620]
[93.95192719 180.99363708]
[89.00556946 186.23547363]
[82.93427277 190.07814026]
[76.12169647 192.29168701]
[68.99517822 192.74870300]
[61.99891281 191.43164062]
[53.96572113 204.09922791]
[45.93252945 216.76681519]
[37.89933777 229.43441772]
[29.86614799 242.10200500]
[21.83295822 254.76959229]
[13.79976654 267.43719482]
[5.76657486 280.10476685]
[-2.26661611 292.77236938]
[-10.29980755 305.43994141]
[-18.33299828 318.10754395]
[-26.36618996 330.77514648]
[-34.39937973 343.44271851]
[-42.43257141 356.11032104]
[-39.44213104 366.59292603]
[-42.65864563 376.77810669]
[-50.78581619 383.36489868]
[-60.97882080 384.35922241]
[-69.42861938 396.75280762]
[-77.87842560 409.14639282]
[-86.32822418 421.53997803]
[-94.77802277 433.93356323]
[-103.22782898 446.32714844]
[-97.17416382 467.96740723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[8 22]
[9 21]
[11 19]
[12 18]
[13 17]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[45 178]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[61 154]
[62 153]
[63 152]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
[71 144]
[74 141]
[75 140]
[88 127]
[89 126]
[90 125]
[91 124]
[93 122]
[94 121]
[95 120]
[96 119]
[98 117]
[99 116]
[100 115]
[102 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
