%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCUGGGGUUGCCUGGGGCGAGGUUACUCAUCCUGGGCUCAGGUAAGAGGGCCCGAGCUCGGAGGCGGCACAUCCAGGGGGGACGCCAAGGGAGCAGGACGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[72.17231750 128.43963623]
[79.27786255 115.22936249]
[91.60773468 106.68885803]
[76.68399048 105.17826843]
[61.76024628 103.66767883]
[46.83650208 102.15708923]
[38.37858963 113.14933014]
[25.67885208 118.44815826]
[12.13227272 116.75405884]
[1.30249059 108.62152100]
[-4.01566505 96.28434753]
[-18.88967896 94.34432220]
[-33.76369095 92.40428925]
[-48.63770676 90.46425629]
[-63.51171875 88.52422333]
[-78.38573456 86.58419037]
[-93.25974274 84.64415741]
[-108.13375854 82.70412445]
[-123.00777435 80.76409912]
[-137.69274902 86.65155792]
[-149.31240845 77.33316040]
[-163.99737549 83.22061920]
[-175.61705017 73.90222168]
[-190.49105835 71.96218872]
[-205.36508179 70.02215576]
[-215.93460083 81.38282013]
[-231.16958618 84.32812500]
[-245.21186829 77.72554779]
[-252.66189575 64.11391449]
[-250.65498352 48.72716522]
[-239.96284485 37.48183060]
[-224.69680786 34.70196533]
[-210.72697449 41.45648575]
[-203.42504883 55.14813995]
[-188.55102539 57.08817291]
[-173.67701721 59.02820587]
[-160.05593872 53.00197983]
[-147.37237549 62.45914459]
[-133.75129700 56.43291855]
[-121.06774139 65.89008331]
[-106.19372559 67.83011627]
[-91.31971741 69.77014923]
[-76.44570160 71.71018219]
[-61.57168579 73.65020752]
[-46.69767380 75.59024048]
[-31.82365990 77.53027344]
[-16.94964600 79.47030640]
[-2.07563329 81.41033936]
[8.75137424 69.16461182]
[24.89403152 65.69687653]
[40.09624481 72.55155182]
[48.34709167 87.23334503]
[63.27083588 88.74393463]
[78.19458008 90.25452423]
[93.11832428 91.76511383]
[108.09340668 90.90093231]
[116.63071442 77.87203217]
[131.53465271 74.81796265]
[143.90310669 83.03727722]
[158.55401611 79.81999969]
[173.20491028 76.60272217]
[187.85581970 73.38544464]
[194.36302185 57.85199356]
[208.67579651 49.29407120]
[225.11019897 50.88185501]
[237.27400208 61.80083466]
[251.82609558 58.16268539]
[266.37820435 54.52453613]
[280.93032837 50.88638687]
[270.20129395 40.40364456]
[271.41409302 25.45275307]
[283.69241333 16.83633995]
[298.16470337 20.78011322]
[304.37408447 34.43453598]
[297.83413696 47.93368530]
[312.75790405 46.42309570]
[327.68164062 44.91250992]
[338.89883423 33.44279480]
[354.84481812 35.20478058]
[363.28723145 48.84682083]
[357.74975586 63.90390778]
[342.48028564 68.82553864]
[329.19223022 59.83625412]
[314.26849365 61.34683990]
[299.34472656 62.85742950]
[284.56848145 65.43849182]
[270.01635742 69.07664490]
[255.46424866 72.71479034]
[240.91213989 76.35294342]
[237.04846191 89.21997833]
[227.22608948 98.54430389]
[213.96430969 101.78545380]
[200.73933411 97.98268890]
[191.07310486 88.03635406]
[176.42219543 91.25363159]
[161.77128601 94.47090912]
[147.12037659 97.68818665]
[139.33370972 110.33347321]
[124.52143097 113.80495453]
[111.31068420 105.55184174]
[124.54201508 112.61808777]
[133.11955261 124.92360687]
[135.17118835 139.78263855]
[130.24914551 153.95208740]
[119.42768097 164.33938599]
[105.06865692 168.67742920]
[90.30603790 166.01940918]
[78.36186218 156.94544983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 55]
[4 54]
[5 53]
[6 52]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[21 38]
[23 36]
[24 35]
[25 34]
[56 100]
[59 97]
[60 96]
[61 95]
[62 94]
[66 89]
[67 88]
[68 87]
[69 86]
[75 85]
[76 84]
[77 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
