%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAACGACGCUUAGCAAUCCGGAGAGAAAUAGGGUGUUUUCUUCCCGAGAGAGGACUGCUAAGAGGGGGUUAAAGGGGGACGAUGUGAAGGAGAGAACCUGUGGUCCUUCAGAAGGCGAAGAAGAAAGAAAGGGGAAGCAGUGAAGAAAGGGACGGAGAUACUGGGACAGGGAGAAAAAAGUUGUGGAGAGUAGCUUUUAAGGAGUCAUUUGGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[328.03866577 864.41967773]
[330.18191528 848.11578369]
[340.31390381 835.04486084]
[334.49984741 821.21746826]
[322.43426514 812.48413086]
[324.21774292 796.76373291]
[318.40368652 782.93634033]
[312.58963013 769.10894775]
[306.77560425 755.28155518]
[300.96154785 741.45416260]
[287.56866455 742.80432129]
[274.32080078 740.32659912]
[262.29116821 734.21215820]
[252.45701599 724.94714355]
[245.62020874 713.27386475]
[242.34185791 700.13183594]
[242.89631653 686.58154297]
[247.24818420 673.71942139]
[255.05444336 662.58874512]
[265.69146729 654.09521484]
[260.27285767 640.10815430]
[254.85421753 626.12103271]
[243.11369324 627.50457764]
[231.35154724 626.23028564]
[220.16233826 622.35839844]
[210.11262512 616.08056641]
[201.71217346 607.71051025]
[195.38819885 597.66802979]
[191.46363831 586.45819092]
[190.14059448 574.64587402]
[191.48995972 562.82727051]
[195.44767761 551.59979248]
[201.81771851 541.53198242]
[210.28178406 533.13452148]
[220.41523743 526.83453369]
[216.00361633 512.49798584]
[211.59197998 498.16137695]
[207.18035889 483.82479858]
[202.76873779 469.48822021]
[198.35711670 455.15164185]
[193.94549561 440.81506348]
[189.53387451 426.47848511]
[185.12223816 412.14187622]
[173.98394775 402.25311279]
[177.32029724 386.78768921]
[172.90867615 372.45111084]
[168.49705505 358.11453247]
[164.08543396 343.77795410]
[149.93525696 343.49234009]
[136.54441833 338.84457397]
[125.22582245 330.27636719]
[117.09355164 318.61444092]
[112.95317841 304.99087524]
[113.22197723 290.73312378]
[117.88693237 277.23477173]
[126.50466919 265.81918335]
[138.24363708 257.60995483]
[134.03623962 243.21211243]
[129.82885742 228.81425476]
[125.62147522 214.41641235]
[121.41408539 200.01856995]
[117.20670319 185.62072754]
[101.02350616 187.32658386]
[84.80477142 186.00048828]
[69.11360931 181.68849182]
[54.49481201 174.54031372]
[41.45593643 164.80410767]
[30.44969177 152.81793213]
[21.85820389 138.99794006]
[15.97977066 123.82395935]
[13.01848698 107.82281494]
[13.07716942 91.55006409]
[16.15377808 75.57069397]
[22.14149666 60.43949890]
[30.83243179 46.68182755]
[41.92483902 34.77534485]
[55.03359222 25.13343620]
[48.44312286 11.65880489]
[41.85265350 -1.81582761]
[35.26218414 -15.29045963]
[28.67171669 -28.76509285]
[22.08124733 -42.23972321]
[15.49077797 -55.71435547]
[2.47698569 -64.71167755]
[3.83555770 -79.54419708]
[-2.75491166 -93.01882935]
[-6.42659521 -95.30545807]
[-8.93184090 -98.33483124]
[-10.18041134 -101.65052795]
[-10.23908043 -104.81352234]
[-9.31243992 -107.45178223]
[-15.12648392 -121.27918243]
[-20.94052887 -135.10658264]
[-35.66665649 -140.84388733]
[-41.94613266 -155.34710693]
[-36.05345535 -170.01176453]
[-21.48464584 -176.13754272]
[-6.88311863 -170.09016418]
[-0.91170210 -155.45739746]
[-7.11313200 -140.92062378]
[-1.29908788 -127.09322357]
[4.51495647 -113.26583099]
[10.71972084 -99.60929871]
[17.31019020 -86.13466644]
[29.85258865 -78.10113525]
[28.96541023 -62.30482483]
[35.55588150 -48.83019257]
[42.14635086 -35.35556030]
[48.73681641 -21.88092995]
[55.32728577 -8.40629673]
[61.91775513 5.06833553]
[68.50822449 18.54296684]
[75.88605499 16.06253815]
[83.45542908 14.24886513]
[91.15622711 13.11635590]
[98.92727661 12.67400646]
[106.70684814 12.92533016]
[114.43314362 13.86833096]
[122.04478455 15.49551868]
[115.02724457 1.33467007]
[120.15741730 -13.61380386]
[134.39166260 -20.48123741]
[149.28506470 -15.19330597]
[156.00161743 -0.88724399]
[150.55651855 13.94941521]
[136.18025208 20.51434517]
[149.84887695 28.29177666]
[161.90106201 38.39448929]
[171.94596863 50.49488068]
[179.65789795 64.20057678]
[184.78675842 79.06713104]
[187.16624451 94.61248016]
[186.71919250 110.33253479]
[183.46009827 125.71752930]
[177.49464417 140.26858521]
[169.01628113 153.51385498]
[158.29992676 165.02383423]
[145.69308472 174.42527771]
[131.60455322 181.41334534]
[135.81193542 195.81118774]
[140.01931763 210.20903015]
[144.22669983 224.60687256]
[148.43408203 239.00471497]
[152.64147949 253.40255737]
[168.54901123 254.35069275]
[183.14506531 260.67913818]
[194.67135620 271.60546875]
[201.74627686 285.79470825]
[203.53045654 301.52221680]
[199.82635498 316.88351440]
[191.09989929 330.02468872]
[178.42201233 339.36633301]
[182.83363342 353.70291138]
[187.24525452 368.03948975]
[191.65689087 382.37606812]
[203.11073303 393.29028320]
[199.45883179 407.73025513]
[203.87045288 422.06683350]
[208.28207397 436.40344238]
[212.69369507 450.74002075]
[217.10531616 465.07659912]
[221.51695251 479.41317749]
[225.92857361 493.74975586]
[230.34019470 508.08633423]
[234.75181580 522.42291260]
[253.13757324 522.80596924]
[270.26766968 529.43133545]
[284.09155273 541.48913574]
[292.96020508 557.52008057]
[295.82287598 575.59228516]
[292.35144043 593.53405762]
[282.97802734 609.19470215]
[268.84130859 620.70245361]
[274.25991821 634.68951416]
[279.67855835 648.67657471]
[296.31442261 648.12420654]
[312.10879517 653.29534912]
[325.15643311 663.54760742]
[333.88973999 677.62689209]
[337.26715088 693.82073975]
[334.89733887 710.16638184]
[327.08438110 724.68902588]
[314.78894043 735.64013672]
[320.60299683 749.46752930]
[326.41702271 763.29492188]
[332.23107910 777.12231445]
[338.04513550 790.94970703]
[350.52655029 800.67205811]
[348.32723999 815.40338135]
[354.14129639 829.23077393]
[368.08737183 830.25915527]
[380.17294312 837.16162109]
[388.06893921 848.54235840]
[390.28204346 862.14904785]
[386.43679810 875.31854248]
[377.33798218 885.49798584]
[382.95489502 899.40661621]
[388.57177734 913.31524658]
[400.91375732 923.21405029]
[398.50524902 937.91265869]
[404.12216187 951.82128906]
[409.73907471 965.72991943]
[415.35595703 979.63861084]
[420.97286987 993.54724121]
[435.61593628 999.49328613]
[441.68862915 1014.08428955]
[435.58810425 1028.66369629]
[420.93368530 1034.58178711]
[406.41958618 1028.32739258]
[400.65676880 1013.61126709]
[407.06420898 999.16412354]
[401.44732666 985.25549316]
[395.83041382 971.34686279]
[390.21350098 957.43817139]
[384.59661865 943.52954102]
[372.65640259 934.62561035]
[374.66314697 918.93218994]
[369.04623413 905.02349854]
[363.42932129 891.11486816]
[347.37451172 889.25366211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[20 175]
[21 174]
[22 173]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[45 155]
[46 154]
[47 153]
[48 152]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[77 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[85 104]
[86 103]
[91 102]
[92 101]
[93 100]
[119 126]
[196 219]
[197 218]
[198 217]
[200 215]
[201 214]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
