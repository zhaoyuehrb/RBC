%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCUGGCUGAGCCGGCCUUUGGUAACGCCACCUGCACUUCUGGGGGCGUCGAGCCUGGCGGUAGAAUCUUCCCAGUAGGCGGCGCGGGAGGGAAAAGAGGAUUGAGGGGCUAGGCCGGGCGGAUCCCGUCCUCCCCCGAUGUGAGCAGUUUUCCGAAACCCCGUCAGGCGAAGGCUGCCCAGAGAGGUGGAGUCGGUAGCGGGGCCGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[-20.57694817 769.39691162]
[-23.98138237 774.45037842]
[-28.62821579 778.32910156]
[-34.13492584 780.74310303]
[-40.05623245 781.52172852]
[-45.18653488 795.61706543]
[-50.31683350 809.71246338]
[-55.44713593 823.80786133]
[-60.57743835 837.90325928]
[-65.70774078 851.99865723]
[-65.44334412 868.95056152]
[-81.65955353 873.89733887]
[-90.90213776 859.68426514]
[-79.80313110 846.86834717]
[-74.67282867 832.77294922]
[-69.54252625 818.67755127]
[-64.41222382 804.58215332]
[-59.28192139 790.48681641]
[-54.15161896 776.39141846]
[-61.10454559 753.74188232]
[-42.43432617 738.02624512]
[-38.76317596 723.48242188]
[-35.09202576 708.93859863]
[-31.42087364 694.39477539]
[-27.74972343 679.85095215]
[-24.07857323 665.30712891]
[-31.90943527 652.68914795]
[-28.39354897 637.88739014]
[-15.10556316 629.75921631]
[-11.43441296 615.21539307]
[-7.76326275 600.67156982]
[-12.15034103 586.43768311]
[-1.27084756 574.95086670]
[2.40030265 560.40704346]
[6.07145262 545.86322021]
[9.42445755 531.24279785]
[4.42068338 517.21386719]
[14.78877258 505.26339722]
[17.82203674 490.57327271]
[20.85530090 475.88317871]
[23.88856316 461.19305420]
[26.92182732 446.50296021]
[29.95509148 431.81283569]
[32.98835373 417.12274170]
[24.61455917 404.85833740]
[27.48145294 389.91726685]
[40.40224457 381.21722412]
[43.43550873 366.52713013]
[46.46877289 351.83700562]
[49.50203705 337.14691162]
[52.42839050 322.43511963]
[55.24768066 307.70245361]
[58.06697464 292.96978760]
[48.03599548 279.46884155]
[50.93199921 262.55764771]
[65.44399261 252.78605652]
[68.04872131 238.01394653]
[70.65344238 223.24182129]
[73.25816345 208.46971130]
[75.86288452 193.69760132]
[78.46760559 178.92547607]
[81.07233429 164.15336609]
[83.67705536 149.38124084]
[86.28177643 134.60913086]
[77.17263794 130.17639160]
[69.46117401 123.35694885]
[63.76895523 114.58369446]
[60.58532333 104.45012665]
[60.22631836 93.67035675]
[62.80560684 83.02888489]
[68.21984100 73.32347870]
[76.15009308 65.30544281]
[66.01624298 54.24628067]
[55.88238525 43.18711853]
[45.74853134 32.12796021]
[35.61468124 21.06879997]
[17.92778587 15.93856621]
[14.80471039 -1.33191323]
[4.51108551 -12.24251747]
[-11.41882324 -14.14451027]
[-19.74107170 -27.86018562]
[-14.07154465 -42.86804962]
[1.24058342 -47.65535736]
[14.44915771 -38.54969025]
[15.42168999 -22.53614235]
[25.71531487 -11.62553787]
[37.79124451 -10.96119022]
[46.45627594 -1.95892680]
[46.67383957 10.93494606]
[56.80769348 21.99410629]
[66.94154358 33.05326462]
[77.07540131 44.11242676]
[87.20925140 55.17158508]
[102.10782623 53.43019104]
[109.41810608 40.33210754]
[116.72837830 27.23402023]
[124.03865814 14.13593388]
[131.34893799 1.03784728]
[138.65921021 -12.06023884]
[131.62615967 -31.88085556]
[141.37767029 -50.18225861]
[161.18173218 -55.25354385]
[160.23114014 -71.04616547]
[172.74119568 -79.12998199]
[179.27751160 -92.63095856]
[185.81384277 -106.13194275]
[192.35015869 -119.63291931]
[193.27220154 -128.71682739]
[199.08097839 -133.28167725]
[205.81297302 -146.68617249]
[212.54495239 -160.09065247]
[219.27694702 -173.49514771]
[219.27433777 -180.10054016]
[222.17098999 -184.98446655]
[226.40464783 -187.18733215]
[233.52365112 -200.39035034]
[240.64265442 -213.59336853]
[240.38183594 -229.41242981]
[253.23258972 -236.94285583]
[260.35159302 -250.14588928]
[267.47061157 -263.34890747]
[274.58959961 -276.55194092]
[271.38439941 -292.27154541]
[281.78616333 -304.48556519]
[297.81558228 -303.82446289]
[307.17626953 -290.79534912]
[302.68746948 -275.39306641]
[287.79263306 -269.43292236]
[280.67361450 -256.22988892]
[273.55462646 -243.02688599]
[266.43560791 -229.82385254]
[267.20562744 -214.94917297]
[253.84567261 -206.47436523]
[246.72666931 -193.27134705]
[239.60766602 -180.06832886]
[232.68142700 -166.76315308]
[225.94944763 -153.35867310]
[219.21745300 -139.95417786]
[212.48547363 -126.54969025]
[205.85113525 -113.09660339]
[199.31481934 -99.59561920]
[192.77848816 -86.09463501]
[186.24217224 -72.59365845]
[187.66027832 -57.76671219]
[174.68270874 -48.71722031]
[180.31953430 -41.26200104]
[182.87155151 -32.21066666]
[181.94805908 -22.79374313]
[177.63381958 -14.30743599]
[170.48326111 -7.93524218]
[161.44946289 -4.58293152]
[151.75729370 -4.74996328]
[144.44702148 8.34812355]
[137.13674927 21.44620895]
[129.82646179 34.54429626]
[122.51618958 47.64238358]
[115.20591736 60.74046707]
[128.56973267 70.03047943]
[137.21517944 83.49929047]
[140.00027466 98.98474884]
[136.70465088 114.09254456]
[128.03230286 126.56630707]
[115.47386169 134.62448120]
[101.05389404 137.21385193]
[98.44917297 151.98597717]
[95.84444427 166.75808716]
[93.23972321 181.53019714]
[90.63500214 196.30232239]
[88.03028107 211.07443237]
[85.42556000 225.84655762]
[82.82083130 240.61866760]
[80.21611023 255.39077759]
[89.15916443 265.45932007]
[90.64990997 278.64755249]
[84.36685181 290.11694336]
[72.79964447 295.78906250]
[69.98035431 310.52172852]
[67.16106415 325.25439453]
[68.62152863 334.26742554]
[64.19214630 340.18014526]
[61.15888214 354.87026978]
[58.12561798 369.56036377]
[55.09235382 384.25048828]
[63.51052094 397.35668945]
[60.22509384 412.21133423]
[47.67846298 420.15600586]
[44.64519882 434.84609985]
[41.61193848 449.53622437]
[38.57867432 464.22631836]
[35.54541016 478.91644287]
[32.51214600 493.60653687]
[29.47888184 508.29666138]
[34.26569748 523.37634277]
[24.11456680 534.27606201]
[25.75539780 539.22344971]
[25.37494469 543.84417725]
[23.43537140 547.42382812]
[20.61527061 549.53436279]
[16.94412041 564.07818604]
[13.27297115 578.62200928]
[17.39746284 593.89617920]
[6.78055573 604.34271240]
[3.10940552 618.88653564]
[-0.56174475 633.43035889]
[7.27672386 646.89123535]
[3.34647346 661.58843994]
[-9.53475475 668.97827148]
[-13.20590496 683.52209473]
[-16.87705612 698.06591797]
[-20.54820633 712.60974121]
[-24.21935654 727.15356445]
[-27.89050674 741.69738770]
[-23.29180717 745.99584961]
[-20.09365273 751.37084961]
[-18.53009033 757.38513184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[21 212]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[29 204]
[30 203]
[31 202]
[33 200]
[34 199]
[35 198]
[36 194]
[38 192]
[39 191]
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[47 183]
[48 182]
[49 181]
[50 180]
[51 178]
[52 177]
[53 176]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 86]
[79 85]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[102 145]
[104 143]
[105 142]
[106 141]
[107 140]
[109 139]
[110 138]
[111 137]
[112 136]
[115 135]
[116 134]
[117 133]
[119 131]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
