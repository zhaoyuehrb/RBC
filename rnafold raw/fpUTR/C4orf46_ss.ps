%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGCCCUUCGAGAUCGAUUGGAGGCUCGCGCAGGAGCCGUGAGUUGCCUAAGGUGAAUUGACUCAUAUGAUUGGCUGUCCCGAAAAAUGAAACGUCUUUGUGGUCCGGGGCUGAGACCCACGAGGAGACUGGGCGGGAUUUCUGGCGUUAGGAGGCGGGGCCUUUCGGCUUUGGGCGCGAGUGGUUAAAAGACAGUUGGUGUCGGUUCGGCUUCUCGGGUCGGAUUCCGCGGUCCCAACCCUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[407.24246216 692.96832275]
[401.54577637 679.09216309]
[395.84909058 665.21600342]
[381.40026855 655.23724365]
[384.04611206 637.00231934]
[378.17550659 623.19885254]
[372.30490112 609.39538574]
[356.44461060 603.76745605]
[349.43518066 588.09625244]
[356.06811523 571.89605713]
[350.02450562 558.16741943]
[343.98089600 544.43878174]
[337.93731689 530.71020508]
[325.72790527 522.17907715]
[327.24923706 506.43118286]
[321.20562744 492.70257568]
[315.16204834 478.97393799]
[309.11843872 465.24533081]
[303.07485962 451.51669312]
[297.03125000 437.78808594]
[290.98767090 424.05947876]
[284.94406128 410.33084106]
[263.54278564 407.58551025]
[248.10606384 392.32128906]
[245.08374023 370.68972778]
[255.87576294 351.54815674]
[248.64945984 338.40356445]
[241.42315674 325.25897217]
[234.19685364 312.11434937]
[226.97055054 298.96975708]
[219.74424744 285.82516479]
[212.51792908 272.68057251]
[205.29162598 259.53594971]
[189.80894470 251.25155640]
[190.37997437 232.83454895]
[182.98905945 219.78178406]
[175.59815979 206.72903442]
[168.20724487 193.67626953]
[160.81632996 180.62351990]
[153.42543030 167.57077026]
[146.03451538 154.51800537]
[133.03056335 147.25532532]
[132.96371460 131.43424988]
[125.57280731 118.38150024]
[118.18190002 105.32874298]
[108.55735016 115.68615723]
[95.24893188 116.10413361]
[86.19338989 107.50000000]
[71.19338989 107.50000000]
[56.19338989 107.50000000]
[47.74705505 122.93529510]
[32.71520233 131.90744019]
[15.29889297 132.01434326]
[0.31240627 123.31702423]
[-8.14755917 108.29762268]
[-23.14282227 108.67457581]
[-38.13808441 109.05152130]
[-53.13334656 109.42847443]
[-63.84130859 121.05237579]
[-79.63552856 121.61656189]
[-91.14556885 110.78630066]
[-91.54273224 94.98699951]
[-80.59138489 83.59210968]
[-64.78877258 83.36200714]
[-53.51029968 94.43321228]
[-38.51503754 94.05625916]
[-23.51977348 93.67931366]
[-8.52451038 93.30236053]
[-3.72740555 81.64442444]
[5.14900637 72.62736511]
[16.81580925 67.61072540]
[29.55982590 67.36951447]
[41.49516296 71.97465515]
[50.84230042 80.77730560]
[56.19338989 92.50000000]
[71.19338989 92.50000000]
[86.19338989 92.50000000]
[96.52977753 83.02157593]
[111.76486206 85.14856720]
[110.25943756 70.22430420]
[108.75400543 55.30003738]
[107.24858093 40.37577438]
[105.74315643 25.45150757]
[104.23773193 10.52724266]
[91.19552612 7.39000940]
[79.77032471 0.40456426]
[71.06296539 -9.73963356]
[65.90734863 -22.04958153]
[64.79061127 -35.32592773]
[67.80712128 -48.27983093]
[74.65068054 -59.65805817]
[84.64552307 -68.36425018]
[96.81307220 -73.56453705]
[95.68316650 -88.52191925]
[94.55326843 -103.47930908]
[93.42336273 -118.43669128]
[92.29346466 -133.39407349]
[91.16355896 -148.35145569]
[82.54274750 -154.93142700]
[79.02529907 -164.95809937]
[81.54035187 -175.05612183]
[89.02768707 -181.96411133]
[80.60678101 -195.35809326]
[87.69483185 -208.45803833]
[86.94116974 -223.43910217]
[86.18750000 -238.42015076]
[85.43383789 -253.40121460]
[84.68017578 -268.38226318]
[76.22743988 -275.17678833]
[72.96307373 -285.28869629]
[75.73109436 -295.32031250]
[83.38966370 -302.03796387]
[83.01271057 -317.03323364]
[82.63576508 -332.02850342]
[74.55410767 -345.62988281]
[81.96912384 -358.54757690]
[81.59217072 -373.54281616]
[73.51051331 -387.14419556]
[80.92553711 -400.06188965]
[80.45437622 -415.05450439]
[79.88902283 -430.04382324]
[70.70668030 -443.63119507]
[78.12484741 -458.25662231]
[94.51234436 -458.87472534]
[103.01111603 -444.84963989]
[94.87836456 -430.60919189]
[95.44371796 -415.61984253]
[98.82780457 -409.07098389]
[95.92079926 -400.43884277]
[103.97549438 -387.91003418]
[96.58743286 -373.91976929]
[96.96438599 -358.92453003]
[105.01908112 -346.39569092]
[97.63102722 -332.40545654]
[98.00797272 -317.41018677]
[98.38492584 -302.41491699]
[109.63695526 -286.67193604]
[99.66123199 -269.13592529]
[100.41489410 -254.15487671]
[101.16855621 -239.17381287]
[101.92222595 -224.19276428]
[102.67588806 -209.21171570]
[111.04288483 -196.88926697]
[104.00874329 -182.71777344]
[115.65283966 -167.26251221]
[106.12094116 -149.48135376]
[107.25084686 -134.52397156]
[108.38074493 -119.56658936]
[109.51065063 -104.60920715]
[110.64054871 -89.65182495]
[111.77045441 -74.69444275]
[127.72715759 -69.86129761]
[140.62513733 -59.23831940]
[148.46130371 -44.43856430]
[150.00457764 -27.72653961]
[144.98919678 -11.67170811]
[134.16001892 1.24654377]
[119.16199493 9.02181721]
[120.66741943 23.94608307]
[122.17285156 38.87034607]
[123.67827606 53.79461288]
[125.18370056 68.71887970]
[126.68912506 83.64314270]
[131.23464966 97.93783569]
[138.62556458 110.99059296]
[146.01647949 124.04334259]
[159.54907227 132.23965454]
[159.08726501 147.12709045]
[166.47817993 160.17985535]
[173.86909485 173.23260498]
[181.26000977 186.28536987]
[188.65090942 199.33811951]
[196.04182434 212.39088440]
[203.43273926 225.44363403]
[215.61734009 229.62339783]
[221.50907898 240.62635803]
[218.43623352 252.30964661]
[225.66253662 265.45425415]
[232.88883972 278.59884644]
[240.11514282 291.74343872]
[247.34144592 304.88806152]
[254.56774902 318.03265381]
[261.79406738 331.17724609]
[269.02035522 344.32186890]
[277.60189819 343.04498291]
[286.21084595 343.95611572]
[294.29940796 346.98776245]
[301.35531616 351.93771362]
[306.93423462 358.48266602]
[310.68777466 366.19924927]
[312.38522339 374.59136963]
[311.92770386 383.12216187]
[309.35388184 391.24838257]
[304.83685303 398.45486450]
[298.67266846 404.28726196]
[304.71627808 418.01586914]
[310.75985718 431.74450684]
[316.80346680 445.47311401]
[322.84707642 459.20172119]
[328.89065552 472.93035889]
[334.93426514 486.65896606]
[340.97784424 500.38757324]
[353.61953735 509.90066528]
[351.66592407 524.66656494]
[357.70953369 538.39520264]
[363.75311279 552.12384033]
[369.79672241 565.85241699]
[382.81506348 569.24768066]
[391.38220215 579.36773682]
[392.54721069 592.38061523]
[386.10839844 603.52478027]
[391.97900391 617.32824707]
[397.84960938 631.13171387]
[409.48464966 636.65985107]
[414.09698486 648.25744629]
[409.72525024 659.51934814]
[415.42193604 673.39550781]
[421.11862183 687.27166748]
[427.41989136 700.88391113]
[434.31359863 714.20599365]
[441.20730591 727.52801514]
[448.10098267 740.85003662]
[463.83776855 750.43475342]
[462.31652832 767.92846680]
[469.37710571 781.16284180]
[476.43765259 794.39721680]
[483.49819946 807.63159180]
[490.55877686 820.86596680]
[504.75668335 829.07275391]
[504.47772217 845.46954346]
[490.00891113 853.18872070]
[476.23449707 844.28942871]
[477.32440186 827.92651367]
[470.26385498 814.69213867]
[463.20327759 801.45776367]
[456.14273071 788.22338867]
[449.08215332 774.98907471]
[437.61810303 771.17895508]
[431.62200928 760.23248291]
[434.77896118 747.74377441]
[427.88525391 734.42169189]
[420.99154663 721.09967041]
[414.09786987 707.77758789]
[409.81793213 722.15405273]
[397.35717773 730.50451660]
[382.43307495 728.99737549]
[371.89343262 718.32421875]
[370.57427979 703.38232422]
[379.08087158 691.02764893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 218]
[2 217]
[3 216]
[5 213]
[6 212]
[7 211]
[10 207]
[11 206]
[12 205]
[13 204]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[26 184]
[27 183]
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[43 166]
[44 165]
[45 164]
[48 77]
[49 76]
[50 75]
[55 68]
[56 67]
[57 66]
[58 65]
[79 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
[102 144]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[112 136]
[113 135]
[114 134]
[116 132]
[117 131]
[119 129]
[120 127]
[121 126]
[219 243]
[220 242]
[221 241]
[222 240]
[224 237]
[225 236]
[226 235]
[227 234]
[228 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
