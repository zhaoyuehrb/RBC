%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCACUCAGUGCUUACCAGAGCGCGUUGUCUACCCUGUACCGAAGACAGAGGCUGUGGGGACAGCCUAGGGGCCUGGAUCUAUUGCCUACUUAGAGAGAGGCCAACUCAGACACAGCCGUGUAUGCUCCCAGCAGCAACGGAGGUUCAGCUCCGCCUGCAGGGACAGAAAGAC\
) } def
/len { sequence length } bind def

/coor [
[95.74408722 221.48898315]
[105.57975006 208.81462097]
[105.04436493 193.82418823]
[104.50897980 178.83374023]
[103.97359467 163.84329224]
[96.83654022 161.53840637]
[96.86312866 176.53837585]
[82.60546112 181.19874573]
[73.76749420 169.07890320]
[82.56244659 156.92861938]
[75.42539215 154.62373352]
[66.22332764 166.46948242]
[57.02126312 178.31524658]
[47.81919861 190.16101074]
[38.61713028 202.00675964]
[29.41506577 213.85252380]
[27.71508980 230.16331482]
[12.63130665 236.59849548]
[-0.31938249 226.53808594]
[2.18558240 210.33139038]
[17.56930733 204.65045166]
[26.77137375 192.80470276]
[35.97343826 180.95893860]
[45.17550659 169.11317444]
[54.37757111 157.26742554]
[63.57963943 145.42166138]
[54.74741745 128.79742432]
[52.33198166 111.59075928]
[37.52513123 113.99015808]
[22.71827507 116.38954926]
[7.91142225 118.78894043]
[-6.89543152 121.18833160]
[-21.70228577 123.58772278]
[-34.08710480 133.43286133]
[-47.88814926 127.83103943]
[-54.76288605 141.74211121]
[-68.51699829 148.92570496]
[-83.86174774 146.61958313]
[-94.89677429 135.71051025]
[-97.37887573 120.39324188]
[-90.35363770 106.55757904]
[-76.52240753 99.52361298]
[-61.20357513 101.99604797]
[-50.28754425 113.02418518]
[-38.96180725 103.35066986]
[-24.10167694 108.78086853]
[-9.29482365 106.38147736]
[5.51202965 103.98208618]
[20.31888390 101.58269501]
[35.12573624 99.18330383]
[49.93259048 96.78391266]
[53.12107086 82.12670898]
[40.64902496 73.79315186]
[28.17698097 65.45960236]
[15.70493698 57.12604523]
[3.23289323 48.79249191]
[-9.23915100 40.45893860]
[-21.71119499 32.12538528]
[-38.10171127 31.59333992]
[-45.59655380 17.00706863]
[-36.48567581 3.37167501]
[-20.14156532 4.71408463]
[-13.37764168 19.65334129]
[-0.90559751 27.98689461]
[11.56644630 36.32044601]
[24.03849030 44.65399933]
[36.51053619 52.98755646]
[48.98257828 61.32110977]
[61.45462418 69.65466309]
[68.70858765 61.19307709]
[77.82006073 54.46994400]
[88.37136841 49.89234161]
[99.85592651 47.76677704]
[100.39131165 32.77633286]
[100.92669678 17.78589058]
[101.46208191 2.79544854]
[101.99746704 -12.19499397]
[89.94734955 -21.79191208]
[85.90600586 -36.47254181]
[91.22120667 -50.55134201]
[103.65850830 -58.70312881]
[104.19389343 -73.69357300]
[104.72927856 -88.68401337]
[105.26466370 -103.67445374]
[92.53394318 -112.38836670]
[86.55633545 -126.61059570]
[89.23927307 -141.80287170]
[99.72664642 -153.11741638]
[114.67196655 -156.94377136]
[129.30622864 -152.06097412]
[138.95971680 -140.02711487]
[140.55201721 -124.68213654]
[133.57502747 -110.92258453]
[120.25510406 -103.13906860]
[119.71971893 -88.14862823]
[119.18433380 -73.15818787]
[118.64894867 -58.16774368]
[130.47302246 -49.14946365]
[134.77030945 -34.72735214]
[129.69195557 -20.37242889]
[116.98790741 -11.65960884]
[116.45252228 3.33083344]
[115.91713715 18.32127571]
[115.38175201 33.31171799]
[114.84636688 48.30216217]
[121.19170380 52.30049515]
[128.84835815 39.40182114]
[132.86735535 24.95026207]
[147.84187317 24.07617188]
[153.51498413 37.96198273]
[142.21342468 47.82344437]
[133.88238525 60.29716492]
[140.22772217 64.29549408]
[153.51911926 57.34289169]
[166.81051636 50.39028931]
[180.10192871 43.43768311]
[188.42402649 29.30705643]
[204.81797791 29.71944427]
[212.41909790 44.25061798]
[203.40800476 57.95215225]
[187.05451965 56.72908401]
[173.76312256 63.68169022]
[160.47172546 70.63429260]
[147.18032837 77.58689880]
[154.22654724 110.46292877]
[139.51829529 142.75364685]
[152.41851807 150.40769958]
[161.42761230 152.10479736]
[165.47894287 158.31524658]
[178.24047852 166.19833374]
[191.00201416 174.08142090]
[203.76356506 181.96450806]
[219.57058716 182.63438416]
[226.33230591 195.90571594]
[239.09384155 203.78880310]
[251.85537720 211.67189026]
[264.61691284 219.55497742]
[275.08007812 216.43750000]
[285.31594849 219.54687500]
[291.99645996 227.61868286]
[293.09005737 237.81799316]
[305.56210327 246.15155029]
[318.03414917 254.48510742]
[330.50619507 262.81866455]
[342.97824097 271.15222168]
[358.42800903 267.82351685]
[371.66088867 276.46447754]
[374.82604980 291.94857788]
[366.04565430 305.08935547]
[350.52896118 308.09063721]
[337.48171997 299.17181396]
[334.64468384 283.62423706]
[322.17263794 275.29071045]
[309.70059204 266.95715332]
[297.22854614 258.62359619]
[284.75650024 250.29003906]
[265.43997192 250.47448730]
[256.73382568 232.31652832]
[243.97229004 224.43344116]
[231.21075439 216.55035400]
[218.44921875 208.66726685]
[203.55499268 208.56124878]
[195.88047791 194.72605896]
[183.11892700 186.84297180]
[170.35739136 178.95988464]
[157.59585571 171.07679749]
[144.76446533 163.30790710]
[131.86424255 155.65386963]
[118.96403503 163.30790710]
[119.49942017 178.29835510]
[120.03480530 193.28880310]
[120.57019043 208.27923584]
[131.28497314 220.21963501]
[128.48814392 236.01702881]
[114.32521057 243.55299377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[5 169]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[35 44]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[81 97]
[82 96]
[83 95]
[84 94]
[113 124]
[114 123]
[115 122]
[116 121]
[126 168]
[127 167]
[129 166]
[130 165]
[131 164]
[132 163]
[134 161]
[135 160]
[136 159]
[137 158]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
