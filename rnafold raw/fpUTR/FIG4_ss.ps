%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUCCUCCAGCCCCGCUCCCGACGUGAGGGGCGGGGCUUGCCUGGAGGCGGGGCGCAGGGAUCCGGAAACACCUGAUCAUCUAUAGGUUUAGUGCCUAAUGGGUGUUGUUCCUGGCUGGACUUGAUGUCCAGGGCCUGAGGGGUUUUCUCGCCGAGUCUCCUGGGGCGGUCCGGAGGCUCGUGCCCUGUUGUGGGGCCCCCAUUUGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-9.16745186 382.83746338]
[-23.85761833 379.80447388]
[-28.57613945 365.56594849]
[-18.60402107 354.36010742]
[-25.94907570 352.84347534]
[-36.55567551 363.45007324]
[-47.16227722 374.05667114]
[-57.76887894 384.66326904]
[-68.37548065 395.26986694]
[-78.98208618 405.87649536]
[-89.19609070 416.86166382]
[-99.00400543 428.21087646]
[-108.81192017 439.56008911]
[-118.61983490 450.90933228]
[-128.42774963 462.25854492]
[-138.23565674 473.60775757]
[-148.04357910 484.95697021]
[-157.85148621 496.30621338]
[-167.65939331 507.65542603]
[-177.46731567 519.00463867]
[-173.80177307 534.08258057]
[-179.72999573 548.42254639]
[-192.97244263 556.51068115]
[-208.43713379 555.23675537]
[-220.17759705 545.09075928]
[-223.67935181 529.97399902]
[-217.59591675 515.69909668]
[-204.26651001 507.75515747]
[-188.81652832 509.19674683]
[-179.00862122 497.84750366]
[-169.20071411 486.49829102]
[-159.39279175 475.14907837]
[-149.58488464 463.79983521]
[-139.77696228 452.45062256]
[-129.96905518 441.10140991]
[-120.16114044 429.75219727]
[-110.35322571 418.40295410]
[-100.54531097 407.05374146]
[-115.46927643 405.54531860]
[-123.72018433 393.01843262]
[-119.21305847 378.71160889]
[-105.27186584 373.17596436]
[-92.17813110 380.49404907]
[-89.58868408 395.26986694]
[-78.98208618 384.66326904]
[-68.37548065 374.05667114]
[-57.76887894 363.45007324]
[-47.16227722 352.84347534]
[-36.55567551 342.23687744]
[-28.58839417 329.52770996]
[-23.66363716 315.35922241]
[-18.73888016 301.19070435]
[-13.81412220 287.02218628]
[-8.88936424 272.85366821]
[-3.96460652 258.68515015]
[0.96015102 244.51664734]
[5.88490868 230.34812927]
[5.11209297 223.00083923]
[10.98569489 216.01026917]
[16.11599731 201.91487122]
[21.24629974 187.81948853]
[17.27346992 170.72447205]
[31.48188019 159.00837708]
[36.40663910 144.83987427]
[41.33139420 130.67135620]
[46.25615311 116.50284576]
[51.18091202 102.33432770]
[56.10566711 88.16581726]
[54.36427307 73.26724243]
[46.30477905 60.61636734]
[38.24528503 47.96549606]
[30.18579292 35.31462479]
[22.12629890 22.66375351]
[14.06680393 10.01288223]
[10.15432549 8.14937115]
[7.32128620 5.41414309]
[5.70907927 2.25283837]
[5.30010748 -0.88870937]
[5.93145180 -3.61626363]
[-1.37882423 -16.71434975]
[-8.68910027 -29.81243706]
[-13.16547298 -32.48281860]
[-15.89895821 -36.22772598]
[-16.77203369 -40.20434570]
[-16.01830673 -43.64516830]
[-22.75029373 -57.04965591]
[-29.48228264 -70.45414734]
[-36.21427155 -83.85863495]
[-42.94625854 -97.26312256]
[-57.66144562 -103.65396118]
[-61.70037079 -119.18028259]
[-51.96472168 -131.93162537]
[-35.92284775 -132.12623596]
[-25.88070679 -119.61485291]
[-29.54176712 -103.99510956]
[-22.80978012 -90.59062195]
[-16.07779312 -77.18613434]
[-9.34580421 -63.78164291]
[-2.61381698 -50.37715530]
[4.40898609 -37.12271118]
[11.71926212 -24.02462578]
[19.02953720 -10.92653942]
[26.71767616 1.95338833]
[34.77716827 14.60426044]
[42.83666229 27.25513077]
[50.89615631 39.90600204]
[58.95565033 52.55687332]
[67.01514435 65.20774841]
[74.51018524 64.93509674]
[73.50247192 49.96898651]
[65.83853149 37.07464600]
[73.01811981 23.90446854]
[88.00822449 23.35974693]
[96.12478638 35.97407913]
[89.41792297 49.39002991]
[89.50027466 64.38980103]
[96.99531555 64.11715698]
[104.11431885 50.91413498]
[111.23332977 37.71111298]
[118.35233307 24.50809288]
[125.47133636 11.30507278]
[132.59034729 -1.89794803]
[129.38513184 -17.61755753]
[139.78691101 -29.83158493]
[155.81632996 -29.17047310]
[165.17700195 -16.14137077]
[160.68820190 -0.73908961]
[145.79336548 5.22105742]
[138.67436218 18.42407799]
[131.55535889 31.62709999]
[124.43634796 44.83012009]
[117.31734467 58.03314209]
[110.19833374 71.23616028]
[114.65251923 79.22032928]
[115.77036285 87.16365814]
[130.07611084 82.65306854]
[144.38186646 78.14247894]
[158.68762207 73.63189697]
[169.52243042 62.10290909]
[183.98730469 65.65493774]
[198.29306030 61.14435196]
[212.59880066 56.63376236]
[226.90455627 52.12317657]
[241.21031189 47.61259079]
[247.84567261 36.55495071]
[259.85092163 33.09127808]
[270.64117432 38.55390167]
[285.01101685 34.25185013]
[299.38085938 29.94980431]
[308.22985840 16.56793022]
[324.22164917 15.28647995]
[335.08871460 27.08847237]
[332.49472046 42.92042923]
[318.42959595 50.63742828]
[303.68289185 44.31964493]
[289.31304932 48.62169647]
[274.94320679 52.92374420]
[263.60333252 66.31887817]
[245.72090149 61.91834259]
[231.41514587 66.42893219]
[217.10939026 70.93952179]
[202.80363464 75.45010376]
[188.49787903 79.96069336]
[178.68632507 91.16705322]
[163.19821167 87.93764496]
[148.89245605 92.44823456]
[134.58670044 96.95882416]
[120.28095245 101.46940613]
[109.22412109 121.86258698]
[82.52729797 120.74588013]
[70.27417755 93.09057617]
[65.34942627 107.25908661]
[60.42466736 121.42759705]
[55.49990845 135.59611511]
[50.57514954 149.76463318]
[45.65039444 163.93313599]
[50.55762482 175.85867310]
[46.16687012 187.55674744]
[35.34169006 192.94978333]
[30.21138763 207.04518127]
[25.08108521 221.14056396]
[20.05342102 235.27288818]
[15.12866402 249.44140625]
[10.20390606 263.60992432]
[5.27914906 277.77844238]
[0.35439119 291.94692993]
[-4.57036638 306.11544800]
[-9.49512386 320.28396606]
[-14.41988182 334.45248413]
[-3.18299985 334.66455078]
[8.33418083 340.99298096]
[17.37135696 353.37191772]
[22.90944862 367.31213379]
[28.44754028 381.25231934]
[33.98563385 395.19253540]
[39.62495422 409.09210205]
[45.36520386 422.95031738]
[51.10545731 436.80850220]
[66.22466278 440.29980469]
[76.37878418 452.03323364]
[77.66335297 467.49707031]
[69.58442688 480.74508667]
[55.24851990 486.68322754]
[40.16807938 483.02810669]
[30.14183998 471.18521118]
[29.02509880 455.70837402]
[37.24726486 442.54876709]
[31.50701332 428.69055176]
[25.76676178 414.83236694]
[20.30500221 409.85751343]
[20.04541969 400.73065186]
[14.50732803 386.79043579]
[8.96923542 372.85021973]
[3.43114352 358.91000366]
[-3.91391110 357.39337158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 182]
[59 181]
[60 180]
[61 179]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[79 102]
[80 101]
[81 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[135 168]
[136 167]
[137 166]
[138 165]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[147 157]
[148 156]
[149 155]
[192 214]
[193 213]
[194 212]
[195 211]
[196 209]
[197 208]
[198 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
