%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUUUCCCUUCCUUCAUCUCCUGGCCUCGGAUAAGAUAAGGCUUGGGGGAUGCACGAAAUAAUCCAAGUGAUUGAUUAGACCUGGCAUGGCUUGGUUGGGCUGGAGAAAGAUCGGGGCGCGCUGGAAACCCCGCGUGAAGAUGAAAUGACUUUUUCGAAAGACUUAUCUUUCUGCAGGCUCGCCUCUGAGCUUUGUCUCCUUGGAGCCACCUCACUUAGACAGCUUCGGAUGUGGAUGCAGAUUUGAACC\
) } def
/len { sequence length } bind def

/coor [
[189.43107605 693.78131104]
[177.83770752 691.01599121]
[166.64123535 686.92694092]
[155.99229431 681.56884766]
[146.03413391 675.01354980]
[136.90078735 667.34887695]
[128.71520996 658.67767334]
[121.58764648 649.11633301]
[115.61412811 638.79321289]
[110.87518311 627.84704590]
[107.43477631 616.42474365]
[105.33941650 604.67980957]
[104.61753845 592.77014160]
[105.27912140 580.85583496]
[107.31554413 569.09698486]
[110.69968414 557.65179443]
[115.38632965 546.67413330]
[121.31270599 536.31170654]
[128.39939880 526.70397949]
[136.55134583 517.98028564]
[145.65916443 510.25802612]
[155.60058594 503.64126587]
[166.24212646 498.21917725]
[177.44084167 494.06484985]
[174.11599731 479.43798828]
[170.79115295 464.81109619]
[167.46630859 450.18423462]
[162.93138123 444.37423706]
[164.19218445 435.35513306]
[161.04922485 420.68807983]
[150.81692505 409.86453247]
[155.49090576 394.74951172]
[152.34794617 380.08248901]
[139.74229431 372.23181152]
[136.34594727 357.40209961]
[144.66592407 344.23336792]
[141.52296448 329.56634521]
[138.38000488 314.89932251]
[135.23703003 300.23229980]
[132.09407043 285.56524658]
[128.95111084 270.89822388]
[125.80814362 256.23120117]
[122.66518402 241.56416321]
[119.52222443 226.89714050]
[116.37925720 212.23010254]
[113.23629761 197.56307983]
[110.09333038 182.89604187]
[106.95037079 168.22900391]
[103.80740356 153.56198120]
[100.66444397 138.89494324]
[97.52147675 124.22792053]
[88.47413635 126.72623444]
[77.87013245 125.62337494]
[67.15062714 120.28562927]
[57.96717834 110.64326477]
[42.96746826 110.55013275]
[27.96775818 110.45700073]
[21.30640411 124.18978119]
[9.34097099 133.66560364]
[-5.55279541 137.00303650]
[-20.41772842 133.53942871]
[-32.30238342 123.96249390]
[-38.84705353 110.17372894]
[-38.75228882 94.91090393]
[-32.03690720 81.20446777]
[-20.03425217 71.77584076]
[-5.12745857 68.49708557]
[9.72371864 72.01919556]
[21.57056808 81.64286041]
[28.06088829 95.45729065]
[43.06060028 95.55042267]
[58.06031036 95.64355469]
[60.52798080 88.56113434]
[46.36315155 83.62579346]
[32.19832611 78.69044495]
[18.03357887 73.75486755]
[22.96939278 59.59020233]
[37.13367081 64.52561951]
[51.29850006 69.46096039]
[65.46332550 74.39630890]
[67.93099976 67.31389618]
[56.12104034 58.06592941]
[44.31107712 48.81796646]
[32.50111771 39.57000351]
[16.86553192 37.15358734]
[11.61524487 23.21501541]
[-0.19471613 13.96705246]
[-12.00467682 4.71908951]
[-28.20306778 -0.28575575]
[-27.87797546 -17.23658562]
[-11.49959469 -21.61665535]
[-2.75671387 -7.09087133]
[9.05324745 2.15709186]
[20.86320877 11.40505505]
[35.65406418 13.15999699]
[41.74908066 27.76004410]
[53.55904007 37.00800705]
[65.36900330 46.25597000]
[77.17896271 55.50393295]
[91.64756775 51.54673386]
[97.10704041 37.57554245]
[102.56650543 23.60435104]
[108.02597809 9.63315964]
[113.39859772 -4.37165880]
[118.68416595 -18.40956497]
[116.30590820 -34.05099869]
[128.03166199 -43.23554611]
[133.31723022 -57.27345276]
[138.60279846 -71.31135559]
[143.88836670 -85.34926605]
[149.17393494 -99.38716888]
[154.45950317 -113.42507172]
[159.74507141 -127.46298218]
[165.03063965 -141.50088501]
[162.65238953 -157.14231873]
[174.37814331 -166.32687378]
[179.66371155 -180.36477661]
[164.16609192 -196.29904175]
[162.72966003 -221.02639771]
[179.31243896 -242.73266602]
[180.42895508 -257.69104004]
[181.54548645 -272.64944458]
[182.66201782 -287.60781860]
[183.77854919 -302.56622314]
[177.08993530 -316.90402222]
[185.75312805 -329.02005005]
[186.86965942 -343.97845459]
[179.26640320 -358.50851440]
[188.27551270 -372.21136475]
[204.62916565 -370.99069214]
[211.50413513 -356.10220337]
[201.82804871 -342.86190796]
[200.71151733 -327.90353394]
[207.47999573 -314.63565063]
[198.73693848 -301.44967651]
[197.62040710 -286.49130249]
[196.50387573 -271.53289795]
[195.38734436 -256.57452393]
[194.27081299 -241.61613464]
[201.32205200 -239.06069946]
[206.43289185 -253.16316223]
[217.91023254 -262.82083130]
[220.53535461 -248.05230713]
[215.42449951 -233.94985962]
[222.47572327 -231.39442444]
[231.20185852 -243.59503174]
[239.92797852 -255.79563904]
[248.65409851 -267.99624634]
[245.81860352 -283.54409790]
[254.87619019 -296.49539185]
[270.45315552 -299.16632080]
[283.30795288 -289.97232056]
[285.81405640 -274.36798096]
[276.48464966 -261.61111450]
[260.85470581 -259.27014160]
[252.12858582 -247.06951904]
[243.40245056 -234.86891174]
[234.67633057 -222.66830444]
[236.58515930 -210.44783020]
[234.77857971 -198.69876099]
[229.70951843 -188.48103333]
[222.11196899 -180.62995911]
[212.90965271 -175.68870544]
[203.11093140 -173.87437439]
[193.70161438 -175.07920837]
[188.41604614 -161.04130554]
[191.17234802 -146.40394592]
[179.06854248 -136.21531677]
[173.78297424 -122.17741394]
[168.49740601 -108.13951111]
[163.21183777 -94.10160065]
[157.92626953 -80.06369781]
[152.64070129 -66.02579498]
[147.35513306 -51.98788834]
[142.06956482 -37.94998169]
[144.82588196 -23.31263161]
[132.72206116 -13.12399769]
[127.43650055 0.91390753]
[128.01922607 8.26116657]
[121.99716949 15.09262753]
[116.53769684 29.06381989]
[111.07823181 43.03501129]
[105.61875916 57.00620270]
[133.20141602 93.37018585]
[112.18850708 121.08495331]
[115.33147430 135.75198364]
[118.47443390 150.41902161]
[121.61740112 165.08604431]
[124.76036072 179.75308228]
[127.90332794 194.42010498]
[131.04629517 209.08714294]
[134.18925476 223.75416565]
[137.33221436 238.42120361]
[140.47517395 253.08822632]
[143.61813354 267.75524902]
[146.76110840 282.42230225]
[149.90406799 297.08932495]
[153.04702759 311.75634766]
[156.18998718 326.42337036]
[159.33296204 341.09042358]
[172.31840515 349.69366455]
[175.29687500 364.61288452]
[167.01496887 376.93951416]
[170.15794373 391.60653687]
[180.61505127 403.47918701]
[175.71626282 417.54513550]
[178.85922241 432.21215820]
[182.09318542 446.85940552]
[185.41802979 461.48626709]
[188.74287415 476.11312866]
[192.06770325 490.74002075]
[210.41772461 489.63073730]
[228.66969299 491.80035400]
[246.24249268 497.17871094]
[262.57678223 505.59347534]
[277.15292358 516.77569580]
[289.50732422 530.36840820]
[299.24737549 545.93804932]
[306.06381226 562.98809814]
[309.74057007 580.97534180]
[310.16162109 599.32653809]
[307.31460571 617.45739746]
[301.29132080 634.79064941]
[292.28454590 650.77465820]
[280.58209229 664.90087891]
[266.55746460 676.72021484]
[250.65798950 685.85699463]
[255.94355774 699.89489746]
[261.22912598 713.93280029]
[266.51467896 727.97070312]
[271.80026245 742.00866699]
[277.08581543 756.04656982]
[282.37136841 770.08447266]
[294.47518921 780.27307129]
[291.71890259 794.91046143]
[297.00445557 808.94836426]
[310.01882935 818.92620850]
[307.61688232 835.14849854]
[292.26959229 840.92712402]
[279.76489258 830.31750488]
[282.96655273 814.23388672]
[277.68096924 800.19598389]
[265.95523071 791.01147461]
[268.33346558 775.36999512]
[263.04791260 761.33209229]
[257.76235962 747.29418945]
[252.47677612 733.25628662]
[247.19120789 719.21838379]
[241.90563965 705.18048096]
[236.62007141 691.14257812]
[225.01959229 693.85742188]
[213.18168640 695.21136475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 211]
[25 210]
[26 209]
[27 208]
[29 207]
[30 206]
[32 204]
[33 203]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[55 72]
[56 71]
[57 70]
[81 99]
[82 98]
[83 97]
[84 96]
[86 94]
[87 93]
[88 92]
[100 183]
[101 182]
[102 181]
[103 180]
[104 178]
[105 177]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[112 170]
[113 169]
[114 168]
[116 166]
[117 165]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[126 133]
[127 132]
[145 158]
[146 157]
[147 156]
[148 155]
[227 250]
[228 249]
[229 248]
[230 247]
[231 246]
[232 245]
[233 244]
[235 242]
[236 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
