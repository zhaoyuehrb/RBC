%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGCGAGUGGGCGGAGGCGGCUGCGGGGAAGGCUGGGCUGCCGCGGGACGCGGUGAAGAUAGCCUGCGGAGUGUCCGGGCUGAACACGGUUGCAGCACUCCCAGUAGACCAGGAGCUCCGGGAGGCAGGGCCGGCCCCACGUCCUCUGCGCACCACCCUGAGUUGGAUCCUCUGUGCGCCACCUGAGUUGGAUCCAGGGCUAGCUGCUGUUGACCUCCCCACUCCCACGCUGCCCUCCUGCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[93.88580322 572.00805664]
[104.81951141 560.59625244]
[104.26085663 545.60662842]
[103.70220947 530.61706543]
[103.14355469 515.62744141]
[102.58489990 500.63787842]
[102.02625275 485.64828491]
[101.46759796 470.65869141]
[93.26165771 458.22839355]
[100.47962189 444.14962769]
[92.27368164 431.71936035]
[99.49165344 417.64059448]
[98.93299866 402.65100098]
[98.37434387 387.66140747]
[97.81569672 372.67181396]
[97.25704193 357.68222046]
[96.69838715 342.69262695]
[88.05729675 334.25173950]
[87.45391846 321.78628540]
[95.75472260 311.93722534]
[87.70375824 299.40600586]
[95.09598541 285.41793823]
[94.72350311 270.42257690]
[83.78971100 260.37329102]
[83.19834900 245.17117310]
[93.81307983 233.77093506]
[85.76212311 221.23973083]
[93.15435028 207.25167847]
[92.78186798 192.25630188]
[92.40938568 177.26092529]
[92.03690338 162.26554871]
[91.66442108 147.27017212]
[79.40986633 138.61997986]
[65.15557861 143.29064941]
[50.90128326 147.96131897]
[36.64699173 152.63198853]
[22.39270020 157.30265808]
[8.13840866 161.97332764]
[3.16197133 178.15251160]
[-10.34924126 188.07084656]
[-26.94342804 187.97244263]
[-40.07014847 178.09460449]
[-54.26534653 182.94190979]
[-68.46054077 187.78921509]
[-82.65573883 192.63652039]
[-96.85093689 197.48382568]
[-111.04613495 202.33113098]
[-125.24133301 207.17843628]
[-138.27674866 218.01884460]
[-152.30206299 208.49377441]
[-147.03184509 192.37977600]
[-130.08863831 192.98323059]
[-115.89344025 188.13592529]
[-101.69824219 183.28862000]
[-87.50304413 178.44131470]
[-73.30784607 173.59400940]
[-59.11265182 168.74670410]
[-44.91745377 163.89939880]
[-42.18831253 150.84584045]
[-33.29927826 140.75994873]
[-20.48760986 136.34170532]
[-7.05844975 138.84384155]
[3.46773911 147.71902466]
[17.72203064 143.04835510]
[31.97632408 138.37768555]
[46.23061752 133.70701599]
[60.48490906 129.03634644]
[74.73919678 124.36568451]
[75.80656433 116.94202423]
[77.94128418 102.09469604]
[79.00864410 94.67103577]
[66.64762878 86.17366791]
[54.28661728 77.67629242]
[41.92560577 69.17891693]
[29.56459045 60.68154907]
[17.20357704 52.18417358]
[4.84256363 43.68680191]
[-9.72246075 48.70339966]
[-24.27847862 44.23397064]
[-33.30487061 32.19286728]
[-33.50771713 17.32354164]
[-45.86873245 8.82616806]
[-58.22974396 0.32879531]
[-70.59075928 -8.16857719]
[-82.95177460 -16.66595078]
[-99.33383942 -17.41419029]
[-106.63559723 -32.09807205]
[-97.34561920 -45.61207962]
[-81.02063751 -44.05415726]
[-74.45439911 -29.02696419]
[-62.09338760 -20.52959061]
[-49.73237228 -12.03221798]
[-37.37136078 -3.53484559]
[-25.01034546 4.96252728]
[-11.05487633 -0.17389987]
[3.42038298 3.94081283]
[12.80688000 15.93026924]
[13.33993626 31.32578850]
[25.70095062 39.82316208]
[38.06196213 48.32053375]
[50.42297745 56.81790543]
[62.78398895 65.31527710]
[75.14500427 73.81265259]
[87.50601959 82.31002808]
[93.76458740 78.17718506]
[85.49890900 65.66005707]
[77.23323059 53.14292145]
[68.96755981 40.62578964]
[60.70207596 28.10852814]
[73.21946716 19.84324074]
[81.48468781 32.36011505]
[89.75036621 44.87724686]
[98.01604462 57.39437866]
[106.28171539 69.91151428]
[112.54028320 65.77867126]
[109.57968140 51.07374954]
[98.33822632 39.13383102]
[103.31625366 23.50849152]
[119.39279938 20.27173805]
[130.02969360 32.75326538]
[124.28460693 48.11314774]
[127.24520874 62.81807327]
[140.77127075 69.30234528]
[154.08953857 62.40137100]
[158.96228027 47.60629654]
[172.56721497 40.79745102]
[186.64202881 45.53403473]
[199.96031189 38.63306046]
[213.27857971 31.73208427]
[226.59686279 24.83110809]
[239.91514587 17.93013191]
[253.19032288 10.94660187]
[266.42187500 3.88078451]
[279.65344238 -3.18503261]
[288.18194580 -16.51077080]
[303.05340576 -15.68090439]
[316.28497314 -22.74672127]
[329.51654053 -29.81253815]
[342.74807739 -36.87835693]
[355.97964478 -43.94417191]
[358.22634888 -59.18420410]
[368.89141846 -70.05204773]
[383.73526001 -72.52675629]
[397.03082275 -65.86600494]
[410.26239014 -72.93182373]
[423.49395752 -79.99764252]
[436.72552490 -87.06346130]
[446.10638428 -102.92344666]
[463.61892700 -101.62722778]
[476.76171875 -108.85679626]
[489.62615967 -116.57083130]
[502.19436646 -124.75862885]
[514.76257324 -132.94642639]
[527.33081055 -141.13423157]
[539.89898682 -149.32203674]
[552.46722412 -157.50984192]
[552.45886230 -177.53506470]
[564.49584961 -193.35696411]
[583.51776123 -198.61427307]
[601.70208740 -191.32734680]
[613.84826660 -200.12905884]
[616.09222412 -215.77323914]
[628.79089355 -225.18165588]
[644.41046143 -222.77249146]
[653.68414307 -209.97502136]
[651.10992432 -194.38177490]
[638.21514893 -185.24395752]
[622.65002441 -187.98286438]
[610.50378418 -179.18115234]
[612.75628662 -169.14865112]
[611.55206299 -158.89872742]
[607.00213623 -149.59295654]
[599.59802246 -142.29426575]
[590.15899658 -137.84567261]
[579.74108887 -136.77287292]
[569.51934814 -139.22229004]
[560.65502930 -144.94163513]
[548.08679199 -136.75382996]
[535.51861572 -128.56602478]
[522.95037842 -120.37822723]
[510.38217163 -112.19042206]
[497.81396484 -104.00262451]
[512.27740479 -100.02651978]
[519.79296875 -87.04515076]
[516.03948975 -72.52236176]
[503.17507935 -64.80828094]
[488.59634399 -68.33824921]
[480.68557739 -81.08265686]
[483.99130249 -95.71398926]
[470.84848022 -88.48442078]
[467.18618774 -76.97334290]
[456.31884766 -70.83715820]
[443.79132080 -73.83189392]
[430.55978394 -66.76607513]
[417.32821655 -59.70026016]
[404.09664917 -52.63444519]
[402.23678589 -37.88050079]
[391.92382812 -26.92116547]
[376.96017456 -24.10296249]
[363.04547119 -30.71261024]
[349.81390381 -23.64679337]
[336.58233643 -16.58097649]
[323.35079956 -9.51515961]
[310.11923218 -2.44934225]
[302.53713989 10.37100029]
[286.71926880 10.04652882]
[273.48770142 17.11234665]
[260.25613403 24.17816353]
[255.84832764 30.08519745]
[246.81611633 31.24841118]
[233.49783325 38.14938736]
[220.17956543 45.05036163]
[206.86128235 51.95133591]
[193.54299927 58.85231400]
[189.29597473 73.08250427]
[175.88766479 80.27079773]
[160.99052429 75.71965027]
[147.67224121 82.62062836]
[106.65979004 146.89768982]
[107.03227234 161.89306641]
[107.40475464 176.88844299]
[107.77723694 191.88381958]
[108.14971924 206.87919617]
[116.22732544 220.48297119]
[108.80845642 233.39845276]
[119.97611237 244.25761414]
[120.14024353 259.47036743]
[109.71887970 270.05007935]
[110.09136200 285.04547119]
[118.16896057 298.64926147]
[110.75009155 311.56472778]
[120.70940399 327.06802368]
[111.68798065 342.13397217]
[112.24663544 357.12356567]
[112.80529022 372.11315918]
[113.36393738 387.10275269]
[113.92259216 402.09234619]
[114.48124695 417.08193970]
[122.72714233 430.58438110]
[115.46921539 443.59097290]
[123.71511841 457.09341431]
[116.45719147 470.10003662]
[117.01584625 485.08963013]
[117.57449341 500.07922363]
[118.13314819 515.06878662]
[118.69180298 530.05841064]
[119.25045013 545.04797363]
[119.80910492 560.03759766]
[131.56192017 570.60388184]
[132.31747437 586.39013672]
[121.62750244 598.03057861]
[105.83417511 598.61914062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 248]
[3 247]
[4 246]
[5 245]
[6 244]
[7 243]
[8 242]
[10 240]
[12 238]
[13 237]
[14 236]
[15 235]
[16 234]
[17 233]
[20 231]
[22 229]
[23 228]
[26 225]
[28 223]
[29 222]
[30 221]
[31 220]
[32 219]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[38 63]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[115 122]
[116 121]
[123 218]
[124 217]
[127 214]
[128 213]
[129 212]
[130 211]
[131 210]
[132 208]
[133 207]
[134 206]
[136 204]
[137 203]
[138 202]
[139 201]
[140 200]
[144 196]
[145 195]
[146 194]
[147 193]
[149 190]
[150 189]
[151 182]
[152 181]
[153 180]
[154 179]
[155 178]
[156 177]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
