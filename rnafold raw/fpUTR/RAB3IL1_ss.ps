%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCGGGCACGUGUCCUCGGGCCGCUCCCCCCUCCGCCACGUGACCCGCCCAGGGCAGGGUCGGGGCUGGGCUGGGGGCCGCGAGCCCAGGCGUCUGAGACCUACUGACCGGCCGCGGGCAGGGCUGACAGGCGGUGGGGCGGCUCGGCCCCUGGCGGAGUCGGCGGCGGGCGGGGACGCGGCGCUGGGAGGACGCGGCGGCGCUGGGAACGGACGCCUGGGCGCCCCGAGGCGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[324.67187500 614.28594971]
[318.46472168 600.63049316]
[312.25756836 586.97509766]
[299.94714355 578.59039307]
[301.28021240 562.82550049]
[295.07305908 549.17004395]
[288.86590576 535.51458740]
[284.80734253 533.03424072]
[282.25253296 527.98797607]
[282.67987061 521.42492676]
[276.82785034 507.61355591]
[271.33624268 502.69158936]
[270.99069214 493.58560181]
[265.31771851 479.69976807]
[259.64471436 465.81390381]
[253.97171021 451.92803955]
[248.29870605 438.04217529]
[242.62571716 424.15631104]
[236.95271301 410.27044678]
[231.27972412 396.38461304]
[225.60671997 382.49874878]
[219.66552734 368.72549438]
[207.35508728 360.34085083]
[208.68818665 344.57589722]
[202.48101807 330.92044067]
[196.27386475 317.26501465]
[190.06669617 303.60955811]
[183.85954285 289.95413208]
[177.56423950 276.33908081]
[171.18106079 262.76501465]
[164.79788208 249.19097900]
[158.41470337 235.61691284]
[152.03152466 222.04286194]
[145.56072998 208.51034546]
[139.00259399 195.01994324]
[132.44445801 181.52954102]
[125.79926300 168.08181763]
[119.06727600 154.67733765]
[112.33528900 141.27284241]
[105.60330200 127.86834717]
[98.87131500 114.46385956]
[93.22949982 128.36242676]
[78.26823425 129.43972778]
[70.69339752 116.49283600]
[78.96417236 103.97788239]
[64.10216522 106.00785065]
[49.24016190 108.03781891]
[34.37815475 110.06778717]
[19.51614952 112.09776306]
[4.65414286 114.12773132]
[-10.19443035 116.25372314]
[-25.02895164 118.47566223]
[-39.86347198 120.69760132]
[-54.63222885 129.02346802]
[-66.72112274 117.13671112]
[-58.64544296 102.22967529]
[-42.08540726 105.86307526]
[-27.25088692 103.64114380]
[-12.41636658 101.41920471]
[-6.28013992 97.32892609]
[2.62417364 99.26572418]
[17.48617935 97.23575592]
[32.34818649 95.20578766]
[47.21018982 93.17581177]
[62.07219696 91.14584351]
[76.93420410 89.11587524]
[85.24171448 91.64548492]
[93.00614166 95.32399750]
[91.07228088 80.44918060]
[89.13842773 65.57436371]
[87.20456696 50.69954300]
[74.96560669 41.06389999]
[73.21630096 25.95116997]
[82.47784424 14.34257603]
[80.54398346 -0.53224200]
[78.61013031 -15.40705967]
[76.67626953 -30.28187752]
[74.74241638 -45.15669632]
[72.80855560 -60.03151321]
[70.87470245 -74.90632629]
[68.94084167 -89.78115082]
[67.00698853 -104.65596771]
[65.07312775 -119.53078461]
[63.13927078 -134.40559387]
[53.68737030 -147.09307861]
[59.71925354 -160.71165466]
[48.19759750 -175.08860779]
[55.59234238 -191.01354980]
[53.46634674 -205.86212158]
[51.34035110 -220.71069336]
[49.21435165 -235.55926514]
[39.59922028 -248.12350464]
[45.45453644 -261.81890869]
[35.83940125 -274.38314819]
[41.69471741 -288.07855225]
[39.56871796 -302.92712402]
[37.44272232 -317.77572632]
[35.31672668 -332.62429810]
[33.19072723 -347.47286987]
[31.06473160 -362.32144165]
[28.74694824 -377.14126587]
[26.23777008 -391.92993164]
[21.72582054 -399.84701538]
[23.79303551 -406.92587280]
[21.47525406 -421.74572754]
[17.64876747 -427.09497070]
[17.15582275 -432.72958374]
[19.29428673 -436.97821045]
[17.36042976 -451.85305786]
[15.42657280 -466.72787476]
[5.97467375 -479.41534424]
[12.00655460 -493.03390503]
[10.07269764 -507.90875244]
[8.13883972 -522.78356934]
[-2.24766922 -535.47418213]
[3.80181646 -550.71673584]
[20.06410408 -552.83099365]
[29.80994797 -539.64196777]
[23.01365852 -524.71740723]
[24.94751549 -509.84259033]
[26.88137245 -494.96777344]
[36.19495010 -483.34423828]
[30.30139160 -468.66171265]
[32.23524857 -453.78689575]
[34.16910553 -438.91207886]
[36.29510117 -424.06350708]
[38.61288452 -409.24365234]
[41.02641678 -394.43911743]
[43.53559494 -379.65045166]
[46.82501984 -376.21481323]
[48.00459671 -370.68304443]
[45.91330338 -364.44741821]
[48.03930283 -349.59884644]
[50.16529846 -334.75027466]
[52.29129791 -319.90170288]
[54.41729355 -305.05313110]
[56.54328918 -290.20455933]
[66.00635529 -278.70239258]
[60.30310822 -263.94491577]
[69.76617432 -252.44276428]
[64.06292725 -237.68527222]
[66.18892670 -222.83670044]
[68.31491852 -207.98812866]
[70.44091797 -193.13954163]
[79.92092896 -185.64747620]
[81.82421112 -173.30978394]
[74.59407043 -162.64552307]
[83.90764618 -151.02198792]
[78.01409149 -136.33946228]
[79.94794464 -121.46463776]
[81.88180542 -106.58982086]
[83.81565857 -91.71500397]
[85.74951935 -76.84018707]
[87.68337250 -61.96537018]
[89.61723328 -47.09055328]
[91.55108643 -32.21573257]
[93.48494720 -17.34091568]
[95.41880035 -2.46609902]
[97.35266113 12.40871811]
[109.27458954 21.26327515]
[111.44769287 36.32090759]
[102.07938385 48.76568604]
[104.01324463 63.64050674]
[105.94709778 78.51531982]
[107.88095856 93.39013672]
[112.27580261 107.73187256]
[119.00778961 121.13636017]
[125.73977661 134.54084778]
[132.47177124 147.94534302]
[139.20375061 161.34983826]
[145.83732605 167.59753418]
[145.93486023 174.97142029]
[152.49299622 188.46180725]
[159.05113220 201.95220947]
[165.60337830 208.28515625]
[165.60557556 215.65968323]
[171.98875427 229.23373413]
[178.37193298 242.80778503]
[184.75511169 256.38183594]
[191.13829041 269.95590210]
[197.60812378 276.37301636]
[197.51498413 283.74694824]
[203.72213745 297.40240479]
[209.92930603 311.05786133]
[216.13645935 324.71328735]
[222.34362793 338.36874390]
[235.09803772 347.73013306]
[233.32096863 362.51834106]
[237.53273010 365.52923584]
[239.94143677 369.45718384]
[240.49876404 373.46740723]
[239.49258423 376.82574463]
[245.16557312 390.71160889]
[250.83857727 404.59747314]
[256.51156616 418.48330688]
[262.18457031 432.36917114]
[267.85757446 446.25503540]
[273.53057861 460.14089966]
[279.20355225 474.02676392]
[284.87655640 487.91262817]
[290.63919067 501.76150513]
[296.49124146 515.57287598]
[302.52133179 529.30743408]
[308.72851562 542.96289062]
[314.93566895 556.61828613]
[327.69009399 565.97967529]
[325.91299438 580.76794434]
[332.12017822 594.42333984]
[338.32733154 608.07879639]
[351.98791504 609.82379150]
[362.91903687 618.02136230]
[368.33392334 630.44805908]
[366.91830444 643.82043457]
[359.14758301 654.66210938]
[365.17767334 668.39666748]
[371.20779419 682.13116455]
[377.50955200 688.71343994]
[377.22579956 696.08251953]
[383.07781982 709.89385986]
[388.92987061 723.70520020]
[394.78192139 737.51660156]
[400.63394165 751.32794189]
[413.14205933 761.01593018]
[410.98324585 775.75329590]
[416.83529663 789.56463623]
[430.24462891 799.00506592]
[428.50439453 815.31158447]
[413.40475464 821.70947266]
[400.47894287 811.61712646]
[403.02392578 795.41668701]
[397.17190552 781.60528564]
[385.08236694 772.90515137]
[386.82260132 757.17999268]
[380.97055054 743.36859131]
[375.11849976 729.55725098]
[369.26647949 715.74591064]
[363.41442871 701.93450928]
[357.47323608 688.16131592]
[351.44311523 674.42675781]
[345.41302490 660.69219971]
[329.26132202 657.70538330]
[317.96505737 645.55279541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[5 205]
[6 204]
[7 203]
[10 202]
[11 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 188]
[24 186]
[25 185]
[26 184]
[27 183]
[28 182]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 174]
[35 173]
[36 172]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 59]
[52 58]
[53 57]
[68 165]
[69 164]
[70 163]
[71 162]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[86 147]
[88 144]
[89 143]
[90 142]
[91 141]
[93 139]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[101 129]
[102 128]
[104 127]
[105 126]
[108 125]
[109 124]
[110 123]
[112 121]
[113 120]
[114 119]
[214 240]
[215 239]
[216 238]
[218 237]
[219 236]
[220 235]
[221 234]
[222 233]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
