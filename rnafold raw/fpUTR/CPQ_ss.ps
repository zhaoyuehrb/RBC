%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCUUUGCCCCGCCUCUCGGCCCCGCGGCCUGGCCGGCAAGCAGGGCUGCAGUCACGGGGCGGCGCGGAGGGCCCCAGCCCAGUCAGGGGUGUGGCCGCCGCCACCGUAAGGCUAGGCCGCGAGCUUAGUCCUGGGAGCCGCCUCCGUCGCCGCCGUCAGAGCCGCCCUAUCAGAUUAUCUUAACAAGAAAACCAACUGGAAAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[94.94728088 172.35412598]
[107.94104767 164.54785156]
[105.05577850 149.82795715]
[102.17050171 135.10807800]
[96.01527405 127.42790985]
[93.04860687 119.02650452]
[83.05043793 130.20848083]
[73.05226135 141.39045715]
[63.05409241 152.57243347]
[53.05591965 163.75440979]
[43.05774689 174.93638611]
[42.99699402 187.83441162]
[34.43928909 196.94206238]
[22.36977386 197.75035095]
[12.20622635 208.78222656]
[2.04267955 219.81411743]
[3.67913079 229.10008240]
[0.90064049 237.96640015]
[-5.54892826 244.46235657]
[-14.13321304 247.22003174]
[-22.88800240 245.74128723]
[-33.53401184 256.30831909]
[-44.18001938 266.87536621]
[-54.82603073 277.44241333]
[-58.60490799 293.40023804]
[-74.38973999 297.84671021]
[-85.94244385 286.20770264]
[-81.37858582 270.45639038]
[-65.39307404 266.79641724]
[-54.74706650 256.22937012]
[-44.10105896 245.66232300]
[-33.45505142 235.09527588]
[-29.79461288 214.78355408]
[-8.98919773 209.65055847]
[1.17434919 198.61868286]
[11.33789635 187.58680725]
[14.25398064 170.28179932]
[31.87577248 164.93820190]
[41.87394333 153.75624084]
[51.87211609 142.57426453]
[61.87028885 131.39228821]
[71.86846161 120.21031189]
[81.86663055 109.02833557]
[88.35623169 74.84864044]
[132.32698059 86.13441467]
[133.44262695 71.17596436]
[134.55827332 56.21751022]
[135.67391968 41.25905609]
[136.78956604 26.30060387]
[130.10011292 11.96318054]
[138.76258850 -0.15336560]
[139.87823486 -15.11181927]
[137.35624695 -21.22337341]
[138.17620850 -26.84695625]
[141.25631714 -30.49687767]
[142.81684875 -45.41548157]
[133.13964844 -57.62160873]
[134.93475342 -72.72896576]
[146.63107300 -81.87947845]
[140.37145996 -96.40971375]
[149.39085388 -108.26296997]
[150.95137024 -123.18157959]
[152.51190186 -138.10018921]
[154.07241821 -153.01878357]
[155.63293457 -167.93739319]
[157.19346619 -182.85600281]
[158.75398254 -197.77459717]
[160.20339966 -212.70440674]
[161.54164124 -227.64459229]
[162.87986755 -242.58477783]
[164.21810913 -257.52496338]
[165.55633545 -272.46514893]
[166.89457703 -287.40533447]
[168.01022339 -302.36380005]
[168.90304565 -317.33718872]
[169.68435669 -332.31683350]
[170.35414124 -347.30187988]
[171.02392578 -362.28689575]
[171.69372559 -377.27194214]
[172.36351013 -392.25698853]
[168.39140320 -406.72149658]
[160.16259766 -419.26290894]
[151.93379211 -431.80432129]
[136.58129883 -436.46054077]
[130.78367615 -451.41940308]
[138.98837280 -465.20571899]
[154.90144348 -467.24380493]
[166.31573486 -455.97024536]
[164.47518921 -440.03311157]
[172.70399475 -427.49172974]
[180.93280029 -414.95031738]
[194.90560913 -420.40567017]
[190.41885376 -428.36224365]
[192.53533936 -435.44335938]
[190.31022644 -450.27740479]
[188.08511353 -465.11145020]
[185.86000061 -479.94549561]
[183.63487244 -494.77954102]
[173.00155640 -507.26409912]
[178.75103760 -522.62231445]
[194.96875000 -525.05499268]
[204.97129822 -512.05957031]
[198.46891785 -497.00463867]
[200.69403076 -482.17059326]
[202.91915894 -467.33654785]
[205.14427185 -452.50250244]
[207.36938477 -437.66845703]
[209.70487976 -422.85140991]
[217.08547974 -421.51849365]
[219.75152588 -436.27969360]
[234.51264954 -433.61340332]
[231.84669495 -418.85272217]
[239.22731018 -417.51980591]
[246.69505310 -430.52877808]
[254.16279602 -443.53771973]
[261.63052368 -456.54666138]
[269.09826660 -469.55563354]
[276.56600952 -482.56457520]
[284.03375244 -495.57351685]
[291.50149536 -508.58248901]
[288.71563721 -524.38177490]
[299.43865967 -536.31475830]
[315.44482422 -535.22741699]
[324.45556641 -521.95391846]
[319.55859375 -506.67651367]
[304.51043701 -501.11474609]
[297.04272461 -488.10577393]
[289.57498169 -475.09683228]
[282.10723877 -462.08789062]
[274.63949585 -449.07891846]
[267.17175293 -436.06997681]
[259.70401001 -423.06103516]
[252.23626709 -410.05206299]
[187.34854126 -391.58718872]
[186.67875671 -376.60217285]
[186.00897217 -361.61712646]
[185.33918762 -346.63208008]
[184.66940308 -331.64703369]
[187.51109314 -324.82455444]
[183.87644958 -316.44436646]
[182.98362732 -301.47097778]
[185.42741394 -297.36767578]
[185.31948853 -291.68566895]
[181.83476257 -286.06710815]
[180.49652100 -271.12692261]
[179.15829468 -256.18673706]
[177.82005310 -241.24655151]
[176.48182678 -226.30636597]
[175.14358521 -211.36618042]
[177.67781067 -204.42358398]
[173.67259216 -196.21408081]
[172.11207581 -181.29547119]
[170.55154419 -166.37687683]
[168.99102783 -151.45826721]
[167.43049622 -136.53965759]
[165.86997986 -121.62105560]
[164.30944824 -106.70245361]
[170.68069458 -93.23929596]
[161.54966736 -80.31895447]
[171.09919739 -68.94607544]
[169.72912598 -53.79425812]
[157.73544312 -43.85496140]
[156.17492676 -28.93635559]
[154.83670044 -13.99617004]
[153.72103882 0.96228307]
[160.49029541 14.22977734]
[151.74801636 27.41625214]
[150.63237000 42.37470627]
[149.51672363 57.33316040]
[148.40107727 72.29161072]
[147.28543091 87.25006866]
[152.47540283 73.17653656]
[164.21118164 63.83462143]
[179.09013367 61.93287659]
[192.79830933 68.02269745]
[201.36120605 80.33840942]
[202.29611206 95.30924988]
[195.33198547 108.59461212]
[182.48796082 116.34258270]
[167.48800659 116.30673981]
[154.68281555 108.49926758]
[164.84635925 119.53114319]
[175.00991821 130.56301880]
[185.17346191 141.59489441]
[200.35240173 149.14710999]
[197.29730225 165.82351685]
[180.42686462 167.50428772]
[174.14158630 151.75845337]
[163.97804260 140.72656250]
[153.81448364 129.69468689]
[143.65093994 118.66281891]
[136.96080017 122.05281067]
[123.58052826 128.83280945]
[116.89039612 132.22279358]
[119.77566528 146.94268799]
[122.66094208 161.66258240]
[137.64021301 163.98580933]
[150.92002869 171.29484558]
[160.89680481 182.70710754]
[166.36578369 196.84451294]
[166.66656494 211.99989319]
[161.76283264 226.34315491]
[152.24671936 238.14228821]
[139.26736450 245.97248840]
[124.39206696 248.88821411]
[109.41710663 246.53738403]
[96.15077972 239.20388794]
[86.19505310 227.77325439]
[80.75213623 213.62579346]
[80.47928619 198.46989441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[14 36]
[15 35]
[16 34]
[21 32]
[22 31]
[23 30]
[24 29]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[51 165]
[52 164]
[55 163]
[56 162]
[59 159]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 141]
[75 140]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 91]
[82 90]
[83 89]
[92 108]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
