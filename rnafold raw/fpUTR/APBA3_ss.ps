%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUAGAGGAGCGGGCGCCGGGACCGGGAAUCCCCGAGCUGCGCCUUCUGGGGACGCGGCCCGGGCUACGUCGGGGCCGUCCGUGGGGAGCGGGGUCCUGGAGGCUGCGCGGGGCUGAGGCGGCCUCGAUUUGGGAACUGCCUGAAGAUGCCGGCCUAAGCCUGGAGUCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[81.59083557 206.86483765]
[76.59980011 192.17234802]
[81.23014069 177.36222839]
[93.70140076 168.12927246]
[93.43666840 153.13160706]
[93.17194366 138.13394165]
[92.90721893 123.13628387]
[87.86849976 120.93852997]
[83.45581818 117.66027832]
[79.89686584 113.47068787]
[77.37531281 108.58596802]
[76.02127075 103.25817871]
[75.90460968 97.76226044]
[77.03135681 92.38181305]
[64.95864868 83.47958374]
[52.88594055 74.57735443]
[40.81323242 65.67512512]
[25.11425209 63.71231461]
[19.46269035 49.93156052]
[3.76371193 47.96875381]
[-1.88784933 34.18799973]
[-13.96055794 25.28577042]
[-26.03326607 16.38353920]
[-38.10597610 7.48130894]
[-50.17868423 -1.42092121]
[-62.25139236 -10.32315159]
[-74.32410431 -19.22538185]
[-86.39681244 -28.12761307]
[-101.28247833 -29.97608757]
[-115.16586304 -24.29703903]
[-129.04925537 -18.61799049]
[-138.65644836 -5.32762527]
[-154.93998718 -7.27145481]
[-161.14875793 -22.44983482]
[-150.89570618 -35.24854660]
[-134.72830200 -32.50137711]
[-120.84491730 -38.18042374]
[-106.96152496 -43.85947418]
[-105.19138336 -51.14758682]
[-116.04484558 -61.50144958]
[-101.65110779 -65.72381592]
[-99.88096619 -73.01193237]
[-109.61261749 -84.42661285]
[-119.34426880 -95.84129333]
[-129.07591248 -107.25597382]
[-143.91706848 -112.73783112]
[-146.28630066 -127.44279480]
[-156.01795959 -138.85748291]
[-165.74960327 -150.27215576]
[-175.48126221 -161.68684387]
[-190.32241821 -167.16870117]
[-192.69165039 -181.87365723]
[-202.42330933 -193.28834534]
[-212.15495300 -204.70303345]
[-216.36296082 -206.02481079]
[-219.59197998 -208.39138794]
[-221.63212585 -211.36068726]
[-222.44088745 -214.46806335]
[-222.13572693 -217.28346252]
[-231.03796387 -229.35617065]
[-239.94018555 -241.42887878]
[-248.84242249 -253.50158691]
[-257.74465942 -265.57431030]
[-266.64688110 -277.64700317]
[-275.54910278 -289.71972656]
[-289.96661377 -296.23480225]
[-291.29266357 -311.07025146]
[-300.19491577 -323.14297485]
[-309.09713745 -335.21566772]
[-323.36373901 -344.37536621]
[-318.51141357 -360.62008667]
[-301.55828857 -360.45437622]
[-297.02441406 -344.11791992]
[-288.12219238 -332.04519653]
[-279.21997070 -319.97247314]
[-265.43920898 -314.32092285]
[-263.47640991 -298.62194824]
[-254.57417297 -286.54922485]
[-245.67193604 -274.47653198]
[-236.76971436 -262.40380859]
[-227.86747742 -250.33111572]
[-218.96525574 -238.25840759]
[-210.06301880 -226.18569946]
[-200.74026489 -214.43467712]
[-191.00862122 -203.02000427]
[-181.27696228 -191.60531616]
[-167.13188171 -186.93991089]
[-164.06657410 -171.41848755]
[-154.33493042 -160.00381470]
[-144.60327148 -148.58912659]
[-134.87162781 -137.17445374]
[-120.72654724 -132.50904846]
[-117.66123962 -116.98762512]
[-107.92958069 -105.57294464]
[-98.19792938 -94.15826416]
[-88.46627808 -82.74358368]
[-77.49458313 -40.20032120]
[-65.42186737 -31.29808998]
[-53.34916306 -22.39586067]
[-41.27645493 -13.49362946]
[-29.20374489 -4.59139967]
[-17.13103676 4.31083059]
[-5.05832767 13.21306133]
[7.01438093 22.11529160]
[21.84984016 23.44135284]
[28.36492157 37.85885239]
[43.20037842 39.18491364]
[49.71546173 53.60241318]
[61.78816986 62.50464249]
[73.86087799 71.40687561]
[85.93358612 80.30910492]
[110.33437347 78.11859131]
[124.14310455 98.35507965]
[139.41656494 94.22808838]
[149.86485291 104.84329224]
[164.40927124 108.51206207]
[178.95368958 112.18083954]
[193.49810791 115.84960938]
[208.04252625 119.51838684]
[223.31597900 115.39139557]
[233.76428223 126.00659943]
[248.30870056 129.67536926]
[262.85311890 133.34414673]
[277.39752197 137.01292419]
[291.97375488 140.55319214]
[306.58065796 143.96470642]
[321.18756104 147.37623596]
[336.38580322 142.98033142]
[347.01980591 153.40948486]
[361.62670898 156.82099915]
[368.10171509 155.26115417]
[373.56170654 156.96961975]
[376.68450928 160.61926270]
[391.16189575 164.54415894]
[405.63931274 168.46903992]
[420.11672974 172.39393616]
[434.59411621 176.31881714]
[449.07153320 180.24371338]
[463.64801025 173.54254150]
[477.91009521 180.88919067]
[480.91708374 196.64791870]
[470.36230469 208.72998047]
[454.34249878 207.86706543]
[445.14663696 194.72111511]
[430.66925049 190.79621887]
[416.19183350 186.87133789]
[401.71441650 182.94644165]
[387.23703003 179.02156067]
[372.75961304 175.09666443]
[358.21520996 171.42790222]
[343.60830688 168.01638794]
[329.45483398 172.65629578]
[317.77606201 161.98312378]
[303.16915894 158.57160950]
[288.56225586 155.16009521]
[281.31167603 156.70535278]
[273.72875977 151.55732727]
[259.18432617 147.88856506]
[244.63992310 144.21978760]
[230.09550476 140.55101013]
[215.86236572 144.94041443]
[204.37374878 134.06280518]
[189.82933044 130.39402771]
[175.28491211 126.72525787]
[160.74049377 123.05648041]
[146.19607544 119.38771057]
[131.96293640 123.77711487]
[120.47433472 112.89949799]
[115.04012299 118.95758057]
[107.90487671 122.87155914]
[108.16960907 137.86921692]
[108.43433380 152.86688232]
[108.69905853 167.86454773]
[121.48838806 176.65162659]
[126.63851929 191.28910828]
[122.16911316 206.14857483]
[109.79875183 215.51628113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[7 170]
[14 111]
[15 110]
[16 109]
[17 108]
[19 106]
[21 104]
[22 103]
[23 102]
[24 101]
[25 100]
[26 99]
[27 98]
[28 97]
[29 38]
[30 37]
[31 36]
[42 96]
[43 95]
[44 94]
[45 93]
[47 91]
[48 90]
[49 89]
[50 88]
[52 86]
[53 85]
[54 84]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[67 75]
[68 74]
[69 73]
[113 168]
[115 166]
[116 165]
[117 164]
[118 163]
[119 162]
[121 160]
[122 159]
[123 158]
[124 157]
[125 155]
[126 154]
[127 153]
[129 151]
[130 150]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
[138 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
