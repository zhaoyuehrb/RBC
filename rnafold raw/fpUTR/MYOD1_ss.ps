%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGCUAGGGGUGAGGAAGCCCUGGGGCGCUGCCGCCGCUUUCCUUAACCACAAAUCAGGCCGGACAGGAGAGGGAGGGGUGGGGGACAGUGGGUGGGCAUUCAGACUGCCAGCACUUUGCUAUCUACAGCCGGGGCUCCCGAGCGGCAGAAAGUUCCGGCCACUCUCUGCCGCUUGGGUUGGGCGAAGCCAGGACCGUGCCGCGCCACCGCCAGGAU\
) } def
/len { sequence length } bind def

/coor [
[57.27839279 177.53761292]
[42.79666519 181.44653320]
[28.01095390 178.92012024]
[15.64877892 170.42442322]
[7.99059057 157.52667236]
[6.44909334 142.60609436]
[11.30705833 128.41769409]
[4.33621025 141.69953918]
[-2.63463712 154.98136902]
[-9.60548496 168.26321411]
[-16.57633209 181.54505920]
[-23.54718018 194.82688904]
[-23.10939980 210.64204407]
[-35.87509918 218.31578064]
[-32.49421310 233.99855042]
[-42.75869751 246.32818604]
[-58.79451752 245.84645081]
[-68.30036163 232.92288208]
[-63.98416519 217.47134399]
[-49.15693665 211.34494019]
[-50.09331894 196.47979736]
[-36.82902145 187.85604858]
[-29.85817337 174.57420349]
[-22.88732529 161.29237366]
[-15.91647720 148.01052856]
[-8.94563007 134.72868347]
[-1.97478247 121.44684601]
[-5.22204781 114.68627930]
[-11.71657753 101.16514587]
[-14.96384335 94.40457916]
[-29.68847656 91.54360199]
[-44.41310883 88.68263245]
[-59.13774490 85.82166290]
[-73.86238098 82.96068573]
[-88.60697174 80.20444489]
[-103.37078857 77.55307007]
[-118.32129669 82.72924805]
[-129.48054504 72.86412811]
[-144.24435425 70.21275330]
[-159.00816345 67.56137848]
[-173.77198792 64.91000366]
[-188.53579712 62.25862885]
[-203.29960632 59.60725403]
[-218.08189392 57.06088257]
[-232.88191223 54.61964417]
[-247.68191528 52.17840195]
[-262.48193359 49.73715973]
[-277.28195190 47.29592133]
[-290.03970337 56.23331451]
[-305.01425171 53.54671478]
[-313.45608521 41.32905197]
[-328.25607300 38.88780975]
[-335.41925049 52.22826004]
[-346.52764893 62.51817703]
[-360.37631226 68.64138794]
[-375.46301270 69.93369293]
[-390.15127563 66.25491333]
[-402.84783936 58.00409317]
[-412.17547607 46.07622147]
[-417.12237549 31.76514626]
[-417.15194702 16.62322235]
[-412.26095581 2.29293442]
[-402.98001099 -9.67127514]
[-390.31576538 -17.97161865]
[-375.64196777 -21.70773888]
[-360.55032349 -20.47436523]
[-346.67785645 -14.40528870]
[-335.52938843 -4.15883493]
[-328.31414795 9.15353584]
[-325.81484985 24.08779907]
[-311.01483154 26.52903938]
[-299.09640503 17.66976547]
[-284.05230713 19.93470001]
[-274.84069824 32.49591064]
[-260.04067993 34.93714905]
[-245.24067688 37.37839127]
[-230.44067383 39.81962967]
[-215.64065552 42.26087189]
[-208.53471375 40.24954987]
[-200.64823914 44.84344101]
[-185.88442993 47.49481583]
[-171.12060547 50.14619064]
[-156.35679626 52.79756165]
[-141.59298706 55.44893646]
[-126.82916260 58.10031128]
[-112.93466187 52.73449326]
[-100.71941376 62.78925705]
[-85.95559692 65.44062805]
[-78.82178497 63.53052521]
[-71.00140381 68.23605347]
[-56.27677155 71.09702301]
[-41.55213928 73.95800018]
[-26.82750511 76.81896973]
[-12.10287094 79.67993927]
[24.05246925 99.67735291]
[38.35733032 95.16394043]
[52.66219711 90.65052795]
[66.96705627 86.13711548]
[75.04402924 73.49739838]
[73.13018799 58.61999130]
[71.21634674 43.74258423]
[69.30250549 28.86517715]
[56.04205704 20.57696152]
[51.26072311 5.68827915]
[57.21609879 -8.77088737]
[71.09624481 -15.97336292]
[86.34737396 -12.51835823]
[95.76837158 -0.03722068]
[94.91093445 15.57683754]
[84.17990875 26.95133591]
[86.09375000 41.82874298]
[88.00759125 56.70614624]
[89.92143250 71.58355713]
[104.70372009 74.12992859]
[111.48506927 60.75033951]
[118.26641083 47.37075043]
[119.35306549 38.30876923]
[125.24042511 33.85019302]
[132.21127319 20.56835365]
[139.18212891 7.28651381]
[138.74433899 -8.52863503]
[151.51004028 -16.20237160]
[158.48088074 -29.48421288]
[165.45173645 -42.76605225]
[160.51121521 -57.77827454]
[167.70747375 -71.84914398]
[182.77108765 -76.63066864]
[196.76509094 -69.28604889]
[201.38708496 -54.17272186]
[193.89492798 -40.25715256]
[178.73358154 -35.79520416]
[171.76272583 -22.51336479]
[164.79188538 -9.23152447]
[165.72825623 5.63361835]
[152.46395874 14.25736141]
[145.49311829 27.53920174]
[138.52226257 40.82104111]
[131.64599609 54.15209198]
[124.86465454 67.53168488]
[118.08331299 80.91127014]
[126.77890015 93.13365173]
[141.64233398 91.11412048]
[156.50575256 89.09458160]
[171.36918640 87.07505035]
[186.23260498 85.05551147]
[201.09603882 83.03597260]
[215.95945740 81.01644135]
[230.82289124 78.99690247]
[245.68632507 76.97737122]
[260.54974365 74.95783234]
[275.41317749 72.93829346]
[290.27661133 70.91876221]
[305.14001465 68.89922333]
[317.77282715 59.37437439]
[331.42593384 65.32768250]
[346.28936768 63.30814743]
[361.15280151 61.28860855]
[369.34655762 47.96958923]
[384.20086670 43.08255005]
[398.70199585 48.93500519]
[406.00296021 62.76360703]
[402.65643311 78.03890991]
[390.24258423 87.54837799]
[374.62283325 86.80194092]
[363.17233276 76.15203857]
[348.30889893 78.17156982]
[333.44549561 80.19110870]
[321.87579346 89.57151031]
[307.15957642 83.76264954]
[292.29614258 85.78218842]
[277.43270874 87.80171967]
[262.56927490 89.82125854]
[247.70585632 91.84079742]
[232.84242249 93.86032867]
[217.97900391 95.87986755]
[203.11557007 97.89940643]
[188.25215149 99.91893768]
[173.38871765 101.93847656]
[158.52528381 103.95800781]
[143.66186523 105.97754669]
[128.79843140 107.99708557]
[126.03948212 114.97119141]
[135.36006165 126.72392273]
[120.52158356 128.91940308]
[117.76262665 135.89350891]
[127.22175598 147.53503418]
[136.68087769 159.17655945]
[146.14001465 170.81806946]
[161.61592102 172.58830261]
[171.04298401 184.52920532]
[169.25996399 199.27221680]
[178.71908569 210.91374207]
[188.26072693 222.48773193]
[204.02293396 223.64021301]
[214.29020691 235.65515137]
[212.97114563 251.40429688]
[200.84832764 261.54397583]
[185.11399841 260.05847168]
[175.10307312 247.82911682]
[176.75483704 232.11138916]
[170.05729675 228.99964905]
[167.07757568 220.37286377]
[157.61845398 208.73135376]
[142.82258606 207.45922852]
[133.06385803 195.78782654]
[134.49848938 180.27719116]
[125.03936005 168.63568115]
[115.58023834 156.99415588]
[106.12110901 145.35264587]
[83.35466003 136.39071655]
[71.30913544 118.74197388]
[71.48046875 100.44197845]
[57.17560577 104.95539093]
[42.87074280 109.46880341]
[28.56587982 113.98221588]
[43.39260864 111.70885468]
[57.80541992 115.86467743]
[69.14558411 125.68305969]
[75.32118225 139.35281372]
[75.19300842 154.35226440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[14 20]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 88]
[36 87]
[38 85]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[44 78]
[45 77]
[46 76]
[47 75]
[48 74]
[51 71]
[52 70]
[95 215]
[96 214]
[97 213]
[98 212]
[99 113]
[100 112]
[101 111]
[102 110]
[114 140]
[115 139]
[116 138]
[118 137]
[119 136]
[120 135]
[122 133]
[123 132]
[124 131]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[155 167]
[156 166]
[157 165]
[185 209]
[186 208]
[187 207]
[188 206]
[191 203]
[192 202]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
