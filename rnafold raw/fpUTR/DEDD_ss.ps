%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCGCCUGUCCCCUCCCCCACGGCCGCGGCGGCGGCGGCGGCGGCGGCUGCUGGAGCCCGGAUGCGGCGCCGUGAGGCAGGCCCGGGAGAGCGGCGCGGAUGGAUCCAACAUGGCGGCGCCGAGCCUGAGCCGAGAGAAGAGACCUGGGAAAUUAAGUUUCUUGCGGAGUACGGUGGGGAUUGCAGCUGCUGAGCAGGGAUUCUGGAAAGCAUUGCGUACCUGAGCCCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[226.27210999 307.93695068]
[228.60792542 292.14093018]
[236.78968811 279.37173462]
[227.06315613 267.95266724]
[217.33662415 256.53363037]
[207.61010742 245.11457825]
[197.88357544 233.69554138]
[188.15704346 222.27648926]
[181.43870544 219.22785950]
[178.37826538 210.64009094]
[168.80461121 199.09257507]
[158.60743713 199.06373596]
[149.92175293 193.31362915]
[145.73982239 183.53436279]
[147.65968323 172.85020447]
[138.39680481 161.05192566]
[129.13394165 149.25366211]
[119.87107086 137.45538330]
[92.69907379 141.76675415]
[68.60095215 128.49325562]
[55.88493729 136.44956970]
[43.16892242 144.40588379]
[30.50614357 152.44665527]
[17.89716339 160.57153320]
[5.28818417 168.69641113]
[-7.32079554 176.82128906]
[-19.92977524 184.94616699]
[-32.53875351 193.07104492]
[-45.14773560 201.19590759]
[-52.55716705 215.17486572]
[-67.44667053 215.56472778]
[-80.05564880 223.68960571]
[-87.46508026 237.66854858]
[-102.35458374 238.05842590]
[-114.96356201 246.18330383]
[-121.97512054 261.00793457]
[-138.33930969 262.07821655]
[-147.22204590 248.29312134]
[-139.48553467 233.83357239]
[-123.08843994 233.57432556]
[-110.47946167 225.44944763]
[-103.97190857 212.05165100]
[-88.18052673 211.08062744]
[-75.57154846 202.95574951]
[-69.06399536 189.55795288]
[-53.27261353 188.58692932]
[-40.66363144 180.46205139]
[-28.05465317 172.33717346]
[-15.44567299 164.21231079]
[-2.83669281 156.08743286]
[9.77228642 147.96255493]
[22.38126755 139.83767700]
[26.29461670 133.58340454]
[35.21260834 131.68986511]
[47.92862701 123.73355103]
[60.64464188 115.77723694]
[56.72467422 112.90707397]
[53.02215195 109.44637299]
[38.15486145 107.45549011]
[23.28756714 105.46460724]
[8.40735340 103.57272339]
[-6.45212746 110.51014709]
[-19.73292923 100.88973236]
[-17.77290154 84.60813904]
[-2.58835292 78.41447449]
[10.20015430 88.68024445]
[17.20453453 86.36317444]
[25.27845001 90.59731293]
[40.14574432 92.58819580]
[55.01303482 94.57907867]
[59.24773026 80.18924713]
[45.67192841 73.80978394]
[32.09612274 67.43032074]
[15.80968285 69.34967804]
[6.22246933 56.04489517]
[13.19698429 41.20278549]
[29.55844498 40.09164429]
[38.47558212 53.85451889]
[52.05138779 60.23397827]
[65.62718964 66.61344147]
[73.68730164 63.29866028]
[81.78458405 61.71208954]
[77.83804321 47.24057388]
[73.89151001 32.76905441]
[62.79594803 21.49079514]
[66.91207123 7.17622852]
[62.96553040 -7.29528952]
[59.01899338 -21.76680756]
[55.07245255 -36.23832703]
[43.81858444 -40.00645447]
[35.85660553 -48.64515305]
[33.07433701 -59.93584061]
[36.04905319 -71.05343628]
[43.93220901 -79.27314758]
[40.37230682 -93.84459686]
[36.81240845 -108.41604614]
[33.25250626 -122.98749542]
[29.69260597 -137.55894470]
[26.13270569 -152.13038635]
[15.34131145 -163.70002747]
[19.83703423 -177.89994812]
[16.08348274 -192.42271423]
[12.13694382 -206.89422607]
[8.19040585 -221.36575317]
[-6.08602905 -227.74676514]
[-12.87423706 -241.83415222]
[-8.96903515 -256.97625732]
[3.78566098 -266.02346802]
[19.36747360 -264.70391846]
[30.41914558 -253.64071655]
[31.72241783 -238.05754089]
[22.66192436 -225.31228638]
[26.60846138 -210.84077454]
[30.55500031 -196.36924744]
[34.16887283 -193.27087402]
[35.88499832 -187.87583923]
[34.40848160 -181.45983887]
[44.94524765 -170.93246460]
[40.70415497 -155.69029236]
[44.26405334 -141.11885071]
[47.82395554 -126.54739380]
[51.38385391 -111.97594452]
[54.94375610 -97.40450287]
[58.50365448 -82.83305359]
[74.69938660 -74.27339935]
[79.56175232 -56.28034973]
[69.54397583 -40.18486404]
[73.49050903 -25.71334648]
[77.43704987 -11.24182796]
[81.38359070 3.22969007]
[92.19686127 13.47284985]
[88.36302948 28.82251549]
[92.30956268 43.29403305]
[96.25610352 57.76555252]
[102.10939026 57.65243912]
[107.92247009 58.34667206]
[113.58450317 59.83500671]
[118.98755646 62.08907700]
[124.02861786 65.06591034]
[128.61158752 68.70874023]
[140.53211975 59.60374832]
[152.45263672 50.49875259]
[164.37316895 41.39375305]
[176.29370117 32.28875732]
[188.21423340 23.18376160]
[200.13476562 14.07876492]
[206.40524292 -0.44678459]
[221.21617126 -2.02338767]
[233.13670349 -11.12838459]
[245.05723572 -20.23338127]
[250.86364746 -35.57018661]
[267.09027100 -37.94268417]
[277.04455566 -24.91024780]
[270.48635864 -9.87953377]
[254.16223145 -8.31285095]
[242.24169922 0.79214603]
[230.32116699 9.89714241]
[224.90332031 23.77144241]
[209.23976135 25.99929428]
[197.31922913 35.10429001]
[185.39869690 44.20928955]
[173.47816467 53.31428528]
[161.55763245 62.41928101]
[149.63711548 71.52427673]
[137.71658325 80.62927246]
[142.28451538 96.87184143]
[140.15643311 113.60977173]
[131.66934204 128.19252014]
[140.93222046 139.99078369]
[150.19508362 151.78906250]
[159.45794678 163.58734131]
[178.49093628 170.26258850]
[180.35211182 189.51892090]
[189.92578125 201.06642151]
[199.57609558 212.54995728]
[209.30261230 223.96900940]
[219.02914429 235.38806152]
[228.75567627 246.80709839]
[238.48220825 258.22613525]
[248.20874023 269.64520264]
[264.30172729 263.49798584]
[282.32168579 265.59646606]
[298.09075928 276.29702759]
[307.57455444 293.87423706]
[307.89575195 314.76028442]
[319.81628418 323.86526489]
[331.73681641 332.97027588]
[343.65734863 342.07525635]
[352.36047363 344.79040527]
[355.67489624 351.38165283]
[367.47317505 360.64453125]
[379.27145386 369.90740967]
[391.06970215 379.17025757]
[405.92309570 375.08581543]
[420.16699219 380.46777344]
[428.41296387 393.05615234]
[427.67407227 407.90850830]
[439.47235107 417.17135620]
[451.27062988 426.43423462]
[467.30642700 425.95205688]
[477.57125854 438.28140259]
[474.19082642 453.96426392]
[459.75830078 460.97009277]
[445.34506226 453.92459106]
[442.00775146 438.23251343]
[430.20947266 428.96963501]
[418.41122437 419.70675659]
[404.15856934 423.94940186]
[389.97283936 418.92657471]
[381.36419678 406.36691284]
[381.80685425 390.96853638]
[370.00857544 381.70565796]
[358.21029663 372.44281006]
[346.41201782 363.17993164]
[334.55236816 353.99578857]
[322.63183594 344.89080811]
[310.71130371 335.78579712]
[298.79077148 326.68081665]
[292.43276978 330.65896606]
[300.38888550 343.37509155]
[287.67260742 351.33102417]
[279.71673584 338.61526489]
[273.35873413 342.59344482]
[276.33404541 357.29537964]
[279.30932617 371.99734497]
[292.61614990 380.52401733]
[295.91458130 395.98025513]
[287.24771118 409.19619751]
[271.75744629 412.33102417]
[258.63388062 403.52493286]
[255.66300964 388.00238037]
[264.60736084 374.97265625]
[261.63208008 360.27069092]
[258.65676880 345.56872559]
[242.12362671 337.54415894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[8 175]
[10 174]
[11 173]
[15 171]
[16 170]
[17 169]
[18 168]
[20 56]
[21 55]
[22 54]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[31 44]
[32 43]
[34 41]
[35 40]
[58 70]
[59 69]
[60 68]
[61 66]
[71 80]
[72 79]
[73 78]
[82 134]
[83 133]
[84 132]
[86 130]
[87 129]
[88 128]
[89 127]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[101 117]
[102 114]
[103 113]
[104 112]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[148 157]
[149 156]
[150 155]
[185 218]
[186 217]
[187 216]
[188 215]
[190 214]
[191 213]
[192 212]
[193 211]
[197 207]
[198 206]
[199 205]
[223 234]
[224 233]
[225 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
