%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGUGCUCAGCCCCAACACAGUGGCAGUCCAAUGGGCUGAGGACAGAAGCAACUGCUGCUCUCAUCUGCCUUCCAUCUGGUGGACCUAAGCCUAAUCCCUGGGACAAGG\
) } def
/len { sequence length } bind def

/coor [
[104.71260834 134.49827576]
[93.44353485 133.23193359]
[83.48692322 128.48626709]
[75.84961700 120.96421814]
[71.22983551 111.63604736]
[56.37711716 113.73290253]
[43.79404831 123.32335663]
[30.11014366 117.44117737]
[15.25742626 119.53803253]
[0.40470985 121.63488770]
[-14.44800663 123.73174286]
[-29.30072403 125.82859802]
[-44.15344238 127.92545319]
[-59.00615692 130.02230835]
[-73.85887146 132.11917114]
[-76.37147522 140.47360229]
[-81.27636719 147.64695740]
[-88.09603119 152.97749329]
[-96.17754364 155.98112488]
[-104.75503540 156.39524841]
[-113.02229309 154.20162964]
[-120.20852661 149.62620544]
[-125.65021515 143.11592102]
[-128.85237122 135.29519653]
[-143.84646606 134.87451172]
[-158.84057617 134.45381165]
[-173.00187683 142.72360229]
[-187.10832214 134.36054993]
[-186.64837646 117.96784973]
[-172.09521484 110.40890503]
[-158.41987610 119.45970917]
[-143.42578125 119.88040924]
[-128.43168640 120.30110168]
[-114.44401550 103.52951050]
[-92.38808441 102.09307861]
[-75.95572662 117.26644897]
[-61.10301208 115.16959381]
[-46.25029755 113.07273865]
[-31.39757919 110.97588348]
[-16.54486275 108.87902832]
[-1.69214523 106.78217316]
[13.16057205 104.68531799]
[28.01328850 102.58846283]
[39.53399277 93.14798737]
[54.28026199 98.88018036]
[69.13298035 96.78332520]
[76.85961151 79.32048798]
[93.34754181 69.68721771]
[93.76823425 54.69311905]
[93.97860718 39.69459534]
[93.97860718 24.69459343]
[93.97860718 9.69459438]
[93.97860718 -5.30540562]
[83.69683838 -17.62063026]
[87.05571747 -33.30812454]
[101.47860718 -40.33378601]
[115.90148926 -33.30812454]
[119.26037598 -17.62063026]
[108.97860718 -5.30540562]
[108.97860718 9.69459438]
[108.97860718 24.69459343]
[108.97860718 39.69459534]
[112.17134857 46.48058319]
[108.76233673 55.11381149]
[108.34164429 70.10791016]
[122.96165466 75.09796143]
[134.44512939 87.30262756]
[148.13688660 81.17596436]
[161.82862854 75.04930115]
[175.52038574 68.92263794]
[189.21212769 62.79597092]
[202.90388489 56.66930771]
[205.96977234 41.45813370]
[217.41381836 30.97892570]
[232.83551025 29.26115990]
[246.30493164 36.96534729]
[252.64279175 51.12907410]
[249.41206360 66.30609894]
[237.85502625 76.66053772]
[222.41558838 78.21090698]
[209.03054810 70.36106110]
[195.33879089 76.48772430]
[181.64704895 82.61438751]
[167.95529175 88.74105072]
[154.26354980 94.86771393]
[140.57180786 100.99437714]
[137.43940735 115.66366577]
[147.43460083 126.84829712]
[157.42980957 138.03292847]
[172.76876831 136.61085510]
[185.85098267 144.40245056]
[191.76675415 158.23963928]
[188.44009399 172.73347473]
[198.43530273 183.91810608]
[208.43049622 195.10273743]
[218.42568970 206.28736877]
[234.29843140 208.61889648]
[242.24720764 222.55433655]
[236.17442322 237.40361023]
[220.73858643 241.77561951]
[207.78074646 232.31654358]
[207.24105835 216.28256226]
[197.24586487 205.09793091]
[187.25067139 193.91329956]
[177.25546265 182.72866821]
[162.48030090 184.41162109]
[149.39247131 176.98376465]
[143.11460876 163.11143494]
[146.24517822 148.02813721]
[136.24996948 136.84350586]
[126.25477600 125.65886688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 46]
[6 45]
[8 43]
[9 42]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[24 33]
[25 32]
[26 31]
[48 65]
[49 64]
[50 62]
[51 61]
[52 60]
[53 59]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[87 111]
[88 110]
[89 109]
[93 105]
[94 104]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
