iinstall.packages(ggplot2)
install.packages(ggplot2)
"ggplot2"
ggplot2
install.packages('ggplot2')
1+1
getwd()
setwd("Documents/HGLab/deseq_yue/withRefSeq/shift15/coding")
getwd()
ls
library(DESeq2)
install.packages("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(DESeq2)
library(IHW)
install.packages("IHW")
BiocManager::install("IHW")
library(IHW)
BiocManager::install("IHW")
library(IHW)
#load read count table
#df_te <- read.table('/dir', sep = '\t',header = T) # dir = path where df_te is stored
df_te <- read.table('cdReadsFiltered.csv', sep = ',',header = T)
rownames(df_te) <- df_te[,1]
df_te[,1]<-NULL
###call design matrix
colData = read.table('combined_design.txt',sep='\t',header=TRUE) # dir = path where de_te_design is stored
###deseq analysis
###use a design formula that models the assay different at t0, the diff over time,
###and any assay-specific differences over time (the interaction term assay:time)
design = ~ combined
#colData$assay <- factor(colData$assay, levels = c("RPF0")) #"RNA"))
dds <- DESeqDataSetFromMatrix(countData = df_te, colData = colData,design = design)
#run DESeq
dds <- DESeq(dds)
alpha <- 0.05
res <- results(dds,alpha = alpha)
#res <- results(dds,alpha = alpha, filterFun = IHW)
resultsNames(dds)
test_design <- model.matrix(design, colData)
###function to compare different combinations of factors
filter_sig_res <- function(dds, factors) {
res_df <- results(dds, contrast = (factors),test = "Wald",alpha = alpha,cooksCutoff = FALSE,independentFiltering = FALSE)
summary(res_df)
res_df <- na.omit(res_df)
# #
# res_df$SYMBOL <- mapIds(org.Mm.eg.db,
#                         keys = as.character(rownames(res_df)),
#                         column = 'SYMBOL',
#                         keytype = 'ACCNUM',
#                         multiVals = 'first')
# ###remove statistically insignificant genes
# res_df <- res_df[res_df$padj<alpha,]
# res_df <- data.frame(ACCNUM=row.names(data.frame(res_df)), res_df,row.names = NULL)
# # #
# ###select columns Accnum and Log2FC
# res_df <- res_df[,c("ACCNUM","log2FoldChange")]
# res_df <- data.frame(res_df, row.names=NULL)
# #
# # ###select AccNum, log2FC and padj
# # res_df <- data.frame(ACCNUM = row.names(data.frame(res_df)), res_df, row.names = NULL)
# # res_df <- res_df[,c("ACCNUM","log2FoldChange","padj")]
###add symbol and select padj
# res_df <- data.frame(res_df)
# rownames(res_df) <- NULL
# res_df <- res_df[,c("SYMBOL","log2FoldChange")]
}
#### ER
res_0_L24 <- filter_sig_res(dds,c("combined","L240","RPF0"))
###Volcano Plot
library(ggplot2)
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
install.packages("org.Hs.eg.db")
BiocManager::install("org.Hs.eg.db")
library(org.Hs.eg.db)
library(AnnotationDbi)
plot_volcano <- function(res_tableDE, type, day,list_of_genes,label,folder_label,xlims,ylims){
#  list_of_genes <- mapIds(org.Hs.eg.db,
#                          keys = as.character(genes_table$X),
#                          column = 'SYMBOL',
#                          keytype ='ACCNUM',
#                          multiVals = 'first')
label <- 'Original'
res_tableDE <- data.frame(res_tableDE)
res_tableDE$SYMBOL <- mapIds(org.Hs.eg.db,
keys = as.character(rownames(res_tableDE)),
column = 'SYMBOL',
keytype ='ACCNUM',
multiVals = 'first')
threshold_DE <- res_tableDE$padj < 0.05
res_tableDE$threshold <- threshold_DE
#res_tableDE$threshold[res_tableDE$SYMBOL %in% list_of_genes] <- 'highlight'
res_tableDE$genelabels <- ""
#res_tableDE$genelabels[res_tableDE$SYMBOL %in% list_of_genes] <- label
#res_tableDE$genelabels[row.names(res_tableDE) %in% list_of_genes] <- label
#View(res_tableDE)
### criteria for labelling
#sub_dat <- subset(res_tableDE, SYMBOL %in% list_of_genes)
right <- unname(quantile(res_tableDE$log2FoldChange,0.999))
left <- unname(quantile(res_tableDE$log2FoldChange,0.001))
up <- unname(quantile(-log10(res_tableDE$padj),0.998))
ggplot(res_tableDE,aes(x = log2FoldChange, y = -log10(padj))) +
ylim(ylims[[1]],ylims[[2]]) +
xlim(xlims[[1]], xlims[[2]]) +
#threshold lines
geom_vline(xintercept = -1, linetype = 'dashed', color = 'brown',size = 0.7) +
geom_vline(xintercept = 1, linetype = 'dashed', color = 'brown', size = 0.7) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed', color = 'brown', size = 0.7) +
#points
geom_point(aes(colour = threshold),alpha = 0.5) +
#geom_point(aes(colour = "#808080",alpha = 0.5),colour = "#A9A9A9",alpha = 0.6) +
#geom_point(data = subset(res_tableDE, SYMBOL %in% list_of_genes),
#geom_point(data = subset(res_tableDE, row.names(res_tableDE) %in% list_of_genes),
#           aes(fill = genelabels),colour = 'blue')+
# geom_text_repel(aes(x = log2FoldChange, y = -log10(padj),
#                     label = ifelse(genelabels==TRUE,res_tableDE$SYMBOL,""),size = 3),
#                 box.padding = unit(0.2,'lines'),
#                 point.padding = unit(0.2, 'lines'))+
scale_fill_manual(name = '',
values = c(label='blue'))+
guides(colour = F)+
###add gene labels for particular group from list_of_genes
geom_text_repel(#data = subset(res_tableDE, ((log2FoldChange > 1 | log2FoldChange < -1) & (FALSE))),
#data = subset(res_tableDE, SYMBOL %in% c('Htra2','Tomm7','Sqstm1')), #for rna autophagy
data = subset(res_tableDE,  (SYMBOL %in% c('AHSP','VEGFA','ACTB','ALAS2','SLC4A1','TMEM175') | (log2FoldChange>right) | (log2FoldChange<left) | (-log10(padj)>up))),
#data = subset(res_tableDE, (log2FoldChange > 1.5)),
aes(label = SYMBOL), size = 3,
box.padding = unit(0.4, 'lines'),
point.padding = unit(0.4, 'lines'),
segment.size = 0.2, segment.colour = 'grey50')+
theme_bw() +
ggtitle(paste(type,' ',label,sep = '')) +
xlab(bquote(~log[2]~ "FC")) +
ylab(bquote(~-log[10]~italic(p-adj)))+
theme(legend.position = c(0.15,0.9),
#legend.position = 'none',
legend.title = element_blank(),
legend.background = element_rect(color = 'black',size = 0.5,linetype= 'solid'),
legend.text = element_text(size = 12),
plot.title = element_text(size = rel(1.5),hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size=14))
save_dir <- paste('plots/',label,'/',sep = '')
#save_dir <- '/Users/Yue/Documents/HGLab/deseq_yue/Proper Version/volc_doublecheck/'
#filepath <- paste(save_dir,folder_label,'/',type,toString(day),'.png',sep = '')
filepath <- paste(save_dir,'/',type,' ',label,'.png',sep = '')
#ggsave(filepath,width = 9, height = 7)
}
plot_volcano(res_0_L24,'ER L24 T0',1,c(),'','',xlims=c(-5,5), ylims=c(0,10))
plot_volcano(res_0_L24,'ER L24 T0',1,c(),'','',xlims=c(-5,5), ylims=c(0,10))
p <- ggplot(mtcars, aes(wt,mpg))
p <- p + geom_point()
print(p)
BiocManager::install("apeglm")
